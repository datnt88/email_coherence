(S1 (S (NP (DT An) (NN issue)) (VP (AUX has) (VP (AUX been) (VP (VBN raised) (NP (JJ -LSB-1) (NN -RSB-) (SBAR (IN that) (S (NP (NP (DT the) (NN definition)) (PP (IN of) (NP (NP (NNS datatypes)) (VP (AUXG being) (VP (VBN used)))))) (VP (AUX is) (RB not) (ADJP (JJ compatible) (PP (IN with) (NP (NNP XML) (NN schema)))))))) (, ,) (PP (IN by) (NP (NP (NN virtue)) (PP (IN of) (`` ``) (NP (DT the) (NN requirement) (SBAR (IN that) (S (NP (DT each) (NN value)) (VP (AUX have) (NP (DT a) (NN lexicalization)))))) ('' ''))))))) (. .)))
(S1 (NP (# #) (NNP g) (JJ -LSB-1) (NN -RSB-) (NNP Graham) (NNP Klyne)))
(S1 (S (CC And) (NP (DT that)) (VP (AUX 's) (RB not) (ADVP (RB also)) (NP (NP (DT a) (NN requirement)) (PP (IN of) (NP (NNP XML) (NNP Schema))))) (. ?)))
(S1 (NP (NNPS Refs)))
(S1 (FRAG (PP (TO to) (NP (NP (NNS specs)) (SBAR (WHNP (WDT that)) (S (VP (VBZ bears) (NP (DT this) (NN out))))))) (. ?)))
(S1 (NP (NP (NNP Patrick) (NNP Sender)) (: :) (NP (CD ext) (NNP Graham) (NNP Klyne) (NNS GK)) (X (SYM @) (NP (NNP NineByNine.org)))))
(S1 (S (NP (DT An) (NN issue)) (VP (AUX has) (VP (AUX been) (VP (VBN raised) (NP (JJ -LSB-1) (NN -RSB-) (SBAR (IN that) (S (NP (NP (DT the) (NN definition)) (PP (IN of) (NP (NP (NNS datatypes)) (VP (AUXG being) (VP (VBN used)))))) (VP (AUX is) (RB not) (ADJP (JJ compatible) (PP (IN with) (NP (NNP XML) (NN schema)))))))) (, ,) (PP (IN by) (NP (NP (NN virtue)) (PP (IN of) (`` ``) (NP (DT the) (NN requirement) (SBAR (IN that) (S (NP (DT each) (NN value)) (VP (AUX have) (NP (DT a) (NN lexicalization)))))) ('' ''))))))) (. .)))
(S1 (NP (# #) (NNP g) (JJ -LSB-1) (NN -RSB-) (NNP Graham) (NNP Klyne)))
(S1 (S (NP (NNP Union)) (VP (VBZ datatypes)) (. .)))
(S1 (S (PP (VBN given) (SBAR (WHADVP (WRB where)) (S (NP (PRP we)) (VP (AUX 've) (VP (VBN got) (S (VP (TO to)))))))) (, ,) (NP (EX there)) (VP (AUX 's) (ADVP (RB no) (RB longer)) (NP (NP (DT any) (NN reason)) (SBAR (S (VP (TO to) (VP (VB exclude) (NP (PRP them)))))))) (. .)))
(S1 (NP (NNP Jeremy)))
(S1 (NP (NP (NNP Sender)) (: :) (NP (CD ext) (NNP Jeremy) (NNP Carroll) (NNS jjc)) (X (SYM @) (NP (NN hpl.hp.com)))))
(S1 (S (NP (NNP Union)) (VP (VBZ datatypes)) (. .)))
(S1 (S (PP (VBN given) (SBAR (WHADVP (WRB where)) (S (NP (PRP we)) (VP (AUX 've) (VP (VBN got) (S (VP (TO to)))))))) (, ,) (NP (EX there)) (VP (AUX 's) (ADVP (RB no) (RB longer)) (NP (NP (DT any) (NN reason)) (SBAR (S (VP (TO to) (VP (VB exclude) (NP (PRP them)))))))) (. .)))
(S1 (INTJ (JJ Right) (. .)))
(S1 (S (NP (PRP I)) (VP (VBP see) (ADVP (RB now)) (SBAR (WHNP (WP what)) (S (NP (PRP you)) (VP (VBP mean))))) (. .)))
(S1 (S (ADVP (RB Though)) (NP (PRP it)) (VP (AUX is) (RB not) (NP (DT the) (NN case)) (SBAR (SBAR (IN that) (S (NP (NP (DT any) (NNS values)) (PP (IN of) (NP (DT a) (NN union) (NN datatype)))) (VP (AUX do) (RB *) (ADVP (RB not) (RB *)) (VP (AUX have) (NP (QP (IN at) (JJS least) (CD one)) (JJ lexical) (NN form)) (, ,) (PP (IN in) (NP (DT the) (NN component) (PRN (-LRB- -LRB-) (JJ non-union) (-RRB- -RRB-)) (NN datatype))))))) (, ,) (RB only) (SBAR (IN that) (S (NP (EX there)) (VP (AUX is) (NP (NP (DT no) (NNP L2V) (NN mapping)) (PP (TO to) (NP (DT the) (NN value)))) (PP (IN in) (NP (DT the) (NN union) (NN datatype))) (ADJP (JJ due) (PP (TO to) (S (VP (VBG ordering) (PP (IN of) (NP (DT the) (NN union) (NN definition)))))))))))) (. .)))
(S1 (S (NP (NP (DT The) (NN value)) (VP (VBN *) (ADVP (RB still)))) (ADVP (RB *)) (VP (AUX has) (NP (DT a) (JJ lexical) (NN representation))) (. .)))
(S1 (S (NP (PRP It)) (VP (AUX 's) (ADVP (RB just)) (VP (`` ``) (VBN hidden) ('' '') (PP (IN in) (NP (NP (DT the) (NN context)) (PP (IN of) (NP (DT the) (NN union) (NN datatype))))))) (. .)))
(S1 (S (CC So) (NP (NP (DT the) (NNP RDF) (NN requirement)) (SBAR (WHNP (WDT that)) (S (NP (DT all) (NNS values)) (VP (AUX have) (NP (QP (IN at) (JJS least) (CD one)) (JJ lexical) (NN representation)))))) (VP (AUX does) (RB not) (ADVP (RB necessarily)) (NP (NP (NN conflict)) (PP (IN with) (NP (NNP XML) (NNP Schema))))) (. .)))
(S1 (S (CC But) (SBAR (IN if) (S (NP (NNS folks)) (VP (VBP want) (S (VP (TO to) (VP (VB remove) (NP (DT that) (NN requirement)))))))) (, ,) (NP (PRP I)) (VP (AUX do) (RB n't) (VP (VB see) (S (NP (PRP it)) (VP (VBG causing) (NP (NP (DT any) (JJ real) (NNS problems)) (X (JJ ..) (. .) (NNP Patrick)))))))))
