(TOP (S (INTJ (UH hello)) (NP (PRP i)) (VP (AUX 've) (NP (DT an) (JJ amd) (NN athlon) (CD 64) (JJ dual) (NN core) (NN processor)) (PP (IN with) (NP (NP (JJ asus) (NN motherboard)) (CC and) (NP (NP (CD xp) (NN professional)) (SBAR (S (NP (PRP i)) (ADVP (RB cannot)) (VP (VBP work) (PP (IN in) (S (VP (VBG turbo) (NP (NP (NNP c) (CC or) (NNP borland) (NNP c) (NN compiler)) (SBAR (S (NP (DT the) (NN window)) (VP (VBZ opens) (CC and) (VBZ minimizes) (SBAR (S (SBAR (WHADVP (WRB when)) (S (NP (PRP i)) (VP (VBP run) (NP (PRP it))))) (, ,) (NP (PRP i)) (ADVP (RB really)) (VP (AUX need) (S (VP (TO to) (VP (VB work) (PP (IN on) (NP (NNP c.))) (S (VP (VB please) (VP (VB help) (NP (PRP me)))))))))))))))))))))))))) )
(TOP (NP (NP (NNPS machines)) (PP (IN with) (NP (JJ 1.0gb) (NNP ram))) (. ?)) )
(TOP (S (NP (PRP i)) (VP (VBP see) (SBAR (S (NP (PRP you)) (VP (AUX did) (RB n't) (VP (VB tell) (NP (NP (JJ much)) (PP (IN about) (NP (PRP$ your) (NN pc.)))) (SBAR (WHADVP (WRB why)) (S (VP (VBP make) (S (NP (NNS others)) (VP (VB ask) (NP (PRP you)) (PP (IN for) (NP (DT that))))))))))))) (. ?)) )
(TOP (FRAG (PP (IN in) (NP (JJ other) (NNS words))) (WHADVP (WRB why)) (RB not) (VP (VB make) (NP (NP (PRP$ your) (JJ first) (NN post)) (NP (DT a) (JJ good) (CD one)))) (. ?)) )
(TOP (S (NP (PRP i)) (VP (AUX need) (NP (NN help))) (. .)) )
(TOP (S (. .)) )
(TOP (FRAG (WHADVP (WRB why)) (NP (NP (NN cant)) (SBAR (S (NP (PRP i)) (VP (VBP open) (NP (DT the) (NN turbo)))))) (X (SYM c)) (PP (IN in) (NP (PRP$ my) (NN computer))) (. .)) )
(TOP (S (. .)) )
(TOP (S (S (ADVP (RB instead)) (NP (PRP it)) (VP (VBZ tells) (NP (PRP me)) (NP (DT that) (NN &quot)))) (: ;) (S (NP (CD 16) (NN bit) (NNS dos)) (VP (VBP subsystem&quot)) (: ;) (. .)) (. .)) )
(TOP (FRAG (NP (DT any) (NN body) (. ?)) (. .)) )
(TOP (S (. .)) )
(TOP (NP (FW please.) (. .)) )
(TOP (S (NP (PRP i)) (ADVP (RB realy)) (VP (AUX need) (NP (DT a) (NN reply.))) (. .)) )
(TOP (INTJ (JJ even) (. .) (. .)) )
(TOP (NP (FW me) (. .)) )
(TOP (S (S (NP (NN .my) (NN computer)) (VP (VBZ tells) (NP (PRP me)) (ADVP (RB that&quot)))) (: ;) (S (NP (ADJP (CD 16) (NN bit)) (NNS dos)) (VP (VBP subsystem))) (, ,) (, ,) (CC but) (S (NP (PRP i)) (VP (VBP guess.))) (. .)) )
(TOP (S (VP (VBZ theres) (NP (NP (JJR better) (NN way)) (PP (IN for) (NP (NN that.))))) (. .)) )
(TOP (SBARQ (WHADVP (WRB why)) (SQ (AUX do) (RB n't) (NP (PRP you)) (VP (VB try) (S (VP (TO to) (VP (VB find) (NP (NP (DT a) (JJR newer) (NN version)) (PP (IN in) (NP (JJ turbo) (NNP c))) (SBAR (WHNP (WDT which)) (S (VP (MD can) (VP (VB run) (PP (IN in) (NP (CD 32) (NN bit) (NNS dos) (NN subsystem))))))))))))) (. .)) )
(TOP (S (. .)) )
(TOP (S (NP (NNS im)) (ADVP (RB already)) (VP (VBG doing) (NP (PRP it)) (ADVP (RB right) (RB now.))) (. .)) )
(TOP (S (. .)) )
(TOP (S (NP (NNP time)) (PP (IN after) (NP (NN time))) (NP (PRP i)) (VP (VBP see) (S (NP (DT the) (NN os)) (VP (VBN damaged)))) (. .)) )
(TOP (S (NP (PRP you)) (VP (AUX did) (RB n't) (VP (VB tell) (NP (RB too) (JJ much)) (SBAR (IN so) (S (NP (NP (DT all)) (SBAR (S (NP (PRP i)) (VP (MD can) (VP (VB offer)))))) (VP (AUX is) (NP (NNP bob)))))))) )
(TOP (S (ADVP (RB in)) (NP (PRP i)) (VP (VBP read) (SBAR (IN that) (S (NP (DT the) (JJS latest) (NN version)) (VP (AUX is) (PP (IN from) (NP (date (CD 1990)))))))) (. .)) )
(TOP (SQ (AUX are) (NP (PRP you)) (ADJP (JJ sure) (SBAR (S (NP (PRP it)) (VP (AUX 's) (ADJP (JJ compatible) (PP (IN with) (NP (NNS windows)))) (ADVP (RB xp)))))) (. ?) (S (NP (PRP i)) (VP (AUX 've) (VP (VBN got) (NP (PRP$ my) (NNS doubts)))) (. .))) )
(TOP (S (NP (PRP$ my) (NN suggestion)) (VP (AUX is) (S (VP (TO to) (VP (VB find) (NP (NP (NP (DT another) (PRN (-LRB- -LRB-) (JJ compatible) (-RRB- -RRB-)) (NN c-compiler)) (CC or) (NP (DT a) (DT another) (PRN (-LRB- -LRB-) (JJ compatible) (-RRB- -RRB-)) (NN os))) (, ,) (PP (IN like) (NP (NP (CD ms) (NNS dos)) (NP (NP (person (CD 6.0))) (CC or) (NP (NN thereabout)))))))))) (. .)) )
(TOP (S (CC but) (NP (DT that)) (VP (MD might) (RB not) (VP (VB run) (PP (IN on) (NP (JJ current) (NN hardware))))) (. .)) )
(TOP (NP (NNPS kees)) )
(TOP (S (NP (PRP i)) (VP (MD can) (VP (VB vouch) (PP (IN for) (NP (DT that))))) (. .)) )
(TOP (S (ADVP (RB however)) (NP (DT the) (NN subsystem) (NN error)) (VP (AUX is) (VP (VBN caused) (PP (IN by) (NP (NN malware))) (NP (NP (JJS most)) (PP (IN of) (NP (DT the) (NN time)))))) (. .)) )
(TOP (S (ADVP (RB sometimes)) (S (NP (PRP i)) (VP (VBP find) (SBAR (S (NP (PRP it)) (VP (AUX 's) (NP (DT an) (NN owner)) (PP (IN with) (NP (NP (NN registry)) (CC and) (NP (JJ other) (NNS cleaners))))))))) (CC but) (S (NP (PRP it)) (VP (AUX is) (ADVP (RB often)) (ADJP (JJ fixable)))) (. .)) )
(TOP (NP (NNP bob)) )
(TOP (NP (NP (NNP q)) (: :) (S (VP (VB write) (NP (DT a) (NN program) (NN tha)) (VP (VBZ asks) (PP (IN for) (NP (NP (NNS values)) (PP (IN from) (NP (DT the) (NN user)))))) (CC and) (VP (VB find) (PP (IN out) (SBAR (SBAR (WHNP (WDT which) (NN number)) (S (VP (AUX was) (VP (VBN entered) (NP (NP (DT the) (JJS most) (NN number)) (PP (IN of) (NP (NNS times))) (PRN (-LRB- -LRB-) (NP (NN mode)) (-RRB- -RRB-))))))) (CC and) (SBAR (WHNP (WHADJP (WRB how) (JJ many)) (NNS times)) (S (NP (DT this) (NN number)) (VP (AUX was) (VP (VBN enetered)))))))))) (. .)) )
(TOP (S (VP (VBD assumed) (SBAR (IN that) (S (NP (NP (DT the) (NNS numbers)) (VP (VBN entered))) (VP (AUX are) (UCP (ADJP (JJ postive)) (CC and) (PP (IN in) (NP (JJ increasing) (NN order)))))))) (. .)) )
(TOP (FRAG (NP (NN example)) (: :) (FRAG (ADJP (JJ 112222233-1)) (, ,) (VP (VB display) (SBAR (S (S (NP (DT the) (NN mode)) (VP (AUX is) (NP (CD 2)))) (CC and) (S (NP (PRP$ its) (NN frequency)) (VP (AUX is) (NP (NP (CD 5) (NN hope)) (SBAR (S (NP (PRP you)) (VP (MD can) (VP (VB help) (S (NP (PRP me)) (VP (VB ..))))) (. .)))) (PP (IN tnx) (NP (NP (DT a) (NN lot)) (PP (IN in) (ADJP (JJ advanced)))))))))) (. .)) (. .)) )
(TOP (S (NP (PRP i)) (VP (AUX have) (VP (AUX been) (VP (VBN ecountered) (NP (DT that) (NN problem)) (ADVP (RB before))))) (. .)) )
(TOP (S (CC but) (ADVP (RB actually)) (NP (PRP you)) (ADVP (RB just)) (VP (VB use) (PP (IN for) (NP (NN loop) (CC and) (NN array)))) (. .)) )
(TOP (S (NP (DT that)) (VP (AUX 's) (NP (NP (DT all)) (SBAR (S (NP (PRP i)) (VP (MD can) (VP (VB remember))))))) (. .)) )
(TOP (S (NP (NN homework) (CC and) (NN school)) (VP (VBZ assignments) (ADVP (RB here))) (. .)) )
(TOP (S (S (NP (DT that)) (VP (AUX 's) (NP (NP (NN something)) (SBAR (S (NP (PRP you)) (VP (MD must) (VP (AUX do) (NP (PRP yourself))))))))) (: :) (S (VP (VBG learning) (PP (IN by) (S (VP (VBG doing)))))) (. .)) )
(TOP (FRAG (VP (AUX be) (ADJP (JJ sure) (SBAR (S (NP (PRP$ your) (NN program)) (VP (AUX had) (NP (NP (DT a) (JJ good) (NN way)) (PP (IN of) (NP (NN handling))))))))) (PRN (: :) (: -) (NP (NP (NP (JJ empty) (NN input)) (PRN (-LRB- -LRB-) (NP (RB just) (NN return)) (-RRB- -RRB-)) (: -) (NP (JJ invalid) (NN input)) (-LRB- -LRB-) (PP (IN like) (X (SYM @)) (NP (NN 1a) (POS ')))) (CC or) (NP (CD 877))) (-RRB- -RRB-)) (: -) (NP (JJ short) (NN input)) (PRN (-LRB- -LRB-) (PP (IN like) (NP (CD 0))) (-RRB- -RRB-)) (SBAR (IN unless) (, ,) (PP (IN of) (NP (NN course))) (, ,) (S (S (NP (PRP you)) (VP (AUX 're) (VP (VBN allowed) (S (VP (TO to) (VP (VB interpret) (NP (NP (NN &quot)) (: ;) (NP (NN assumed&quot)) (: ;) (CC or) (NP (NN &quot)) (: ;) (NP (NN assume&quot)) (: ;)) (PP (IN as) (NP (NN &quot))))))))) (: ;) (S (NP (EX there)) (VP (AUX 's) (NP (DT no) (NN need)) (S (VP (TO to) (VP (VB check) (SBAR (S (NP (NP (PRP it)) (CC and) (NP (DT the) (NN program))) (VP (MD may) (VP (VP (VB give) (NP (JJ erroneous) (NN result))) (CC or) (VP (VB reach) (SBAR (S (NP (NP (DT an) (JJ abnormal) (NN end)) (PP (IN if) (NP (DT these) (NN precondition)))) (VP (AUX is) (RB n't) (ADJP (JJ met&quot)))))))))))) (: ;)))))) (. .)) )
(TOP (S (VP (VB ask) (NP (PRP$ your) (NN teacher))) (. .)) )
(TOP (S (NP (DT a) (JJ few) (JJR more) (NNS remarks)) (: :) (: -) (NP (NP (DT the) (NN suggestion) (IN above)) (PP (IN of) (S (VP (VBG using) (NP (DT an) (NN array)))))) (VP (AUX is) (ADJP (ADJP (JJ useful)) (, ,) (CC but) (ADJP (PRN (: -) (VP (VBN given) (NP (DT the) (NN order))) (: -)) (RB not) (JJ necessary)))) (. .)) )
(TOP (S (NP (PRP it)) (VP (MD should) (VP (VB work) (PP (IN without) (NP (NN array))) (ADVP (RB also)))) (. .)) )
(TOP (S (: -) (NP (DT the) (NN assignment)) (VP (AUX is) (NP (NP (RB about) (NNS numbers)) (PRN (-LRB- -LRB-) (NP (NP (DT each)) (PP (IN on) (NP (NP (PRP it) (POS 's)) (JJ own) (NN line) (SBAR (IN until) (S (NP (PRP you)) (VP (VBP enter) (NP (DT a) (JJ negative) (CD one)))))))) (-RRB- -RRB-)))) (. .)) )
(TOP (S (NP (PRP$ your) (NN input) (NN example)) (VP (AUX is) (PP (IN about) (NP (NP (NNS digits)) (PRN (-LRB- -LRB-) (NP (NP (DT all)) (PP (IN on) (NP (NP (CD one) (NN line)) (CC and) (NP (NP (VBG ending)) (PP (IN with) (NP (DT a) (NN non-digit))))))) (-RRB- -RRB-))))) (. .)) )
(TOP (FRAG (: -) (VP (AUX is) (S (NP (PRP it)) (ADJP (JJ necessary)) (S (VP (TO to) (VP (VB handle) (NP (NP (JJ floating) (NN point) (NNS numbers)) (PRN (-LRB- -LRB-) (PP (IN like) (NP (CD 3.14) (CC or) (CD 3.14e13))) (-RRB- -RRB-)))))) (CC or) (SQ (MD can) (NP (PRP it)) (VP (AUX be) (VP (VBN assumed) (SBAR (S (NP (DT the) (NNS numbers)) (VP (AUX are) (NP (JJ positive) (NNS integers)))))))))) (. ?)) )
(TOP (NP (NNPS kees)) )
(TOP (S (INTJ (INTJ (UH hellow)) (, ,)) (, ,) (NP (PRP i)) (ADVP (RB just)) (VP (VBP want) (S (VP (TO to) (VP (VB ask) (NP (DT a) (NN favor.)))))) (. .)) )
(TOP (S (NP (PRP i)) (ADVP (RB realy)) (VP (AUX need) (NP (NP (DT this) (NN code)) (PP (IN on) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB make) (NP (DT a) (NN command)) (PP (TO to) (NP (NN printer))) (S (VP (VBG using) (NP (JJ turbo) (NNP c.))))))))))) (. .)) )
(TOP (S (VP (VB please) (SBAR (IN if) (S (NP (NN anyone)) (VP (VBZ knows) (ADVP (RB this.)))))) (. .)) )
(TOP (S (VP (VB please) (VP (VB submit) (NP (PRP$ your) (NN post)) (ADVP (RB asp.)))) (. .)) )
(TOP (NP (NNS thanks)) )
(TOP (S (NP (PRP i)) (VP (AUX do) (RB n't) (VP (VB think) (SBAR (S (NP (DT this)) (VP (AUX is) (NP (NP (DT a) (JJ good) (NN question)) (PP (IN for) (NP (NP (DT a) (NN forum)) (SBAR (WHNP (WDT that)) (S (VP (AUX 's) (VP (VBN listed) (PP (IN under) (NP (NP (NN hardware)) (PP (IN in) (NP (DT the) (NN index))))))))))))))))) (. .)) )
(TOP (S (ADVP (RB moreover)) (, ,) (NP (PRP it)) (VP (AUX 's) (RB not) (ADJP (JJ clear)) (SBAR (IN if) (S (NP (PRP you)) (VP (VBP mean) (NP (NN c) (CC or) (NN c++)) (PRN (-LRB- -LRB-) (S (NP (DT that)) (VP (MD should) (VP (VB make) (NP (DT a) (NN difference)) (PP (IN for) (NP (NP (DT the) (NN coding)) (SBAR (S (NP (PRP you)) (VP (AUX need))))))))) (-RRB- -RRB-)))))) (. .)) )
(TOP (SQ (CC and) (MD can) (NP (PRP you)) (VP (VB tell) (NP (NP (JJR more)) (PP (IN about) (SBAR (WHNP (WP what)) (S (NP (PRP you)) (VP (VBP mean) (NP (NN &quot))))))) (PRN (: ;) (S (VP (VB make) (NP (NP (DT a) (NN command)) (SBAR (S (VP (TO to) (VP (VB printer&quot)))))))) (: ;))) (. .)) )
(TOP (S (VP (VB please) (NP (NN repost)) (PP (IN with) (NP (NP (DT this) (NNS additions)) (PP (IN in) (NP (NN computer) (NN help)))))) (. .)) )
(TOP (NP (NNPS kees)) )
(TOP (SQ (AUX did) (NP (PRP you)) (VP (VB go) (S (VP (TO to) (VP (VB krugle.com) (CC and) (VB see) (SBAR (IN if) (S (NP (PRP it)) (VP (AUX 's) (ADVP (RB there))))))))) (. ?)) )
(TOP (S (VP (VB hi) (SBAR (S (S (NP (PRP i)) (VP (AUX am) (ADJP (JJ snjay)))) (CC and) (S (NP (PRP i)) (VP (AUX have) (NP (NN problem)) (PP (IN with) (S (VP (VBG running) (NP (NNP c) (NN programing)) (PP (IN with) (NP (NP (CD amd) (NN athlon)) (NP (QP (CD 2.60) (CD ghz)) (NN processor))))))) (, ,) (SBAR (WHNP (WP what)) (S (VP (MD should) (S (NP (PRP i)) (VP (AUX do) (PP (IN for) (NP (VB run) (DT the) (NNP c) (NN program))) (PP (IN with) (NP (JJ same) (NN processor.please)))))))))))))) )
(TOP (INTJ (NN help) (. .)) )
(TOP (SINV (PP (IN since) (NP (JJ turbo) (NNP c))) (AUX was) (NP (NNS dos)) (VP (VBN based) (SBAR (S (S (NP (PRP you)) (VP (MD can) (ADVP (RB now)) (VP (VB get) (NP (NP (NNP microsoft) (POS 's)) (JJ virtual) (NN pc) (CC and) (NN run) (NNS dos)) (PP (IN in) (NP (DT that)))))) (CC and) (S (NP (NNP turbo) (NNP c)) (VP (MD will) (VP (VB run) (PP (IN in) (NP (DT the) (NN vpc))))))))) (. .)) )
(TOP (NP (NNP bob)) )
