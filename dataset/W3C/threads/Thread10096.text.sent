I've just looked through the N-triples section of the test cases draft [1]. 
I think it's fine to publish as WD. 
I do have some small comments for consideration, [1] http://www.w3.org/2001/08/rdf-test/#ntriples Section 3: NOTE: N-Triples is not an user RDF syntax - it is intended for RDF Core WG testing purposes and checking RDF applications for conformance with the specifications. 
I'm not sure what is meant here by "user RDF syntax" -- I could claim the same applies to RDF/XML. 
Suggest something like: N-Triples is not recommended for general exchange of RDF data - ... Section 3.1: language ::= ( character - ( '.' | ws ) )+ and containing any allowed xml:lang content as defined in The syntax production here is very generalized compared with the RFC3066 syntax productions (and RFC1766 before it, as cited by the cited document). 
I suggest either: (a) don't give any syntax production, just cite the REC-xml section, OR (b) give a syntax that matches the RFC3066 production, which in ABNF is: The language tag is composed of one or more parts: A primary language subtag and a (possibly empty) series of subsequent subtags. 
The syntax of this tag in ABNF [RFC 2234] is: Language-Tag = Primary-subtag *( "-" Subtag ) Primary-subtag = 1*8ALPHA Subtag = 1*8(ALPHA / DIGIT) The productions ALPHA and DIGIT are imported from RFC 2234; they denote respectively the characters A to Z in upper or lower case and the digits from 0 to 9. The character "-" is HYPHEN-MINUS (ABNF: %x2D). 
-- http://www.ietf.org/rfc/rfc3066.txt 
(I'm not sure offhand if the XML syntax notation can do the counted sequence productions.) Section 3.2: Given the restricted use for N-triples, per note in section 3, this paragraph seems out of place: It is recommended but not required that the resulting Unicode character string be made available to applications in UTF-8 encoding. 
I suggest dropping it. 
Section 3.3: This read oddly to me: URI references are sequences of US-ASCII character productions as defined in [RFC 2396] or must result in a URI reference after the standard escaping procedure is applied. 
The procedure is applied when passing the URI reference to a URI resolver. 
The standard escaping procedure is described in [RFC 2396] using UTF-8 as the character encoding. 
Hmmm... when does N-triples call for a URIref to be passed to a resolver? 
I'm not sure exactly what is intended here, but I think it was something like this: URI references are sequences of US-ASCII character productions as defined in [RFC 2396] for a URI character sequence. 
Where the original URIref contains characters not allowed in such a sequence, the standard escaping procedure described in [RFC 2396] using UTF-8 as the character encoding is applied, using UTF-8 as the character encoding. 
#g Graham Klyne Graham Klyne said: This disclaimer is there because this syntax is primarily for test cases and has not been designed in particular, to be very easy to use with for non--US-ASCII, which is a requirement for all new W3C formats. 
Hence the dumb restrictions and verbosity (but clarity) we have on it that would be removed for a more user-friendly language. 
Such a language would be nearer N3 that this. 
I've changed this to NOTE: N-Triples is an RDF syntax intended for RDF Core WG testing purposes and checking RDF applications for conformance with the specifications. 
The recommended RDF exchange syntax is RDF/XML as defined in [RDF-SYNTAX]. 
(maybe subject to more wordsmithing?) Funnily, Jeremy suggested removing that citation. 
and Jeremy didn't suggest this. 
Personally I'd something nearer the latter. 
I'll wait for some more feedback before changing this. 
It was only a suggestion. 
Deleted. 
I was wondering about linking it [RDF-CONCEPTS] sections? 
Changed to your wording. 
Dave That works for me. 
Jeremy's suggestion was closer to my (b): Not quite, but close. 
Jeremy's suggested syntax allows a few forms that are not permitted by RFC3066, but I think it's probably as close as one can get without count restrictions (or some very tedious syntax productions. 
I'm happy either way. 
My main concern was that there were two very different forms of definition. 
#g Graham Klyne 
