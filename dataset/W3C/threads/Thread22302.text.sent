keshlam@us.ibm.com scripsit: If someone hands a parser a badly-formed HTML file without the HTML wrapper, does the DOM assume that an HTML element will be synthesized to be the single content root (DocumentElement)? 
Or should an HTML DOM accurately record the multiple-root structure of the broken file? 
There is no such thing as an HTML document without an HTML element. 
HTML, like HEAD and BODY and a few other elements, allows omission of both the start-tag and the end-tag. 
So a (minimal) HTML document: TITLE Foo /TITLE Bar has in fact the structure John Cowancowan@ccil.org e'osai ko sarji la lojban. 
Paste the above into a file and bring it up in Netscape. 
No complaints. 
This is certainly not valid HTML 4.0 (or any other version of the standard I can imagine), but it is "HTML-ish" in the sense that it looks enough like HTML for the browsers to make sense out of it, and thus (I'm sad to say) for many, many people to happily write documents in "HTML-ish" and put them out on the Web. 
Mike Champion Mike Champion scripsit: Naturally not. 
Well, you're right, but not for the reason being discussed. 
The following small variant: TITLE Foo /TITLE P Bar *is* valid HTML 4.0 (assuming you add an appropriate DOCTYPE declaration). 
It is equivalent to: You can confirm this with the W3C HTML Validator Service. 
I have put up http://www.ccil.org/~cowan/foo.html as a sample; the Validator Service is at http://validator.w3.org . 
Character data is not permitted directly within a BODY element, which is what was wrong with my previous example. 
But my points about HTML, HEAD, and BODY all being present in all HTML documents, even if both start-tags and end-tags are omitted, is correct. 
See the HTML 4.0 DTD. 
John Cowancowan@ccil.org e'osai ko sarji la lojban. 
Ahhh, I see your point. 
I shouldn't have quibbled with you, but just wanted to make the point that all sorts of HTML-ish tagged content gets passed off as HTML on the Web, and the DOM does NOT attempt to specify how that stuff gets represented to the DOM user. 
In the example under discussion, it's probably obvious what the DOM processor should and will do, but I wanted to make the larger point clear to this mailing list since it is a VERY frequently asked question. 
Mike So there are basically two points: 1. 
The DOM Rec doesn't say what a DOM builder should do with invalid HTML, and a conforming DOM implementation is allowed to make demons fly out of your nose, and all that. 
2. All valid HTML documents contain HTML, HEAD, and BODY elements even if no such tags are present, and therefore conforming DOM implementations must represent them explicitly as nodes. 
(TBODY, which is a container for table rows, obeys the same rules: it appears implicitly in every TABLE element.) John Cowancowan@ccil.org e'osai ko sarji la lojban. 
I've been following your thread with much intrest, and need a little clarification. 
Would the adding of these tags be the job of the builder or the DOM implementation? 
If it is the job of the DOM implementation, when should these be added? 
In the example giving earlier, I imagine it would be the job of the builder to make sure the DOM structure represents a valid 4.0 document even if what it is parsing is not completely valid (missing the HTML tag or such). 
However, should d = someFactory.createHTMLDocument(); 
d.setTitle('A New Title') add a HTML and a HEAD (and of course a TITLE) to the document? 
or should: d = someFactory.createHTMLDocument(); 
d.getBody(); create a BODY tag and then return it? 
What if the user really wants frames?? 
Much thanks Mike Olson Member Consultant FourThought LLC "No program is interesting in itself to a programmer. 
It's only interesting as long as there are new challenges and new ideas coming up." 
--- Linus Torvalds Building DOM nodes for elements that logically must exist in an HTML document but may not actually exist as tags in the source text *is* the job of a DOM implementation. 
I don't think it matters if these fixups are done "eagerly" when the document is created or "lazily" when someone asks for one of the elements that were implied. 
I don't follow the implication of "what if the user really wants frames?". 
Mike Champion these the even if interesting as In a schematic way of thinking, you can say that the HTML document goes through the HTML parser, which adds all the omitted tags, default attribute values, etc and is turned into the structure model (that internal representation of the document which the DOM implementation uses). 
The DOM functions, methods, etc then act on this structure model, not on the source document. 
So by the time the DOM gets to the document, all the missing pieces have already been filled in by the parser. 
Rules for omitted tags are strict and there will be no problems if these are omitted following the strict rules. 
Where problems come in is with broken documents which don't follow these rules. 
For example, omitting the HTML and /HTML tags shouldn't cause any problems, because an HTML user agent that understands HTML 4.0 will know to put these in. 
But overlapping tags, for example, do cause problems, because they are not valid in HTML 4.0. 
Many HTML tools try to fix up broken documents, and do it in varying ways. 
The DOM will act on the document after it has been fixed up, which means you will get varying results in different HTML tools. 
Lauren The attribute 'body' in the HTMLDocument is supposed to return the element that contains the content for the document. 
This could either be a 'BODY' or 'FRAMESET' tag. 
So in the following code, should a body or a fraemset be returned, or niether? 
d = someFactory.createHTMLDocument(); 
d.getBody(); Mike Olson Member Consultant FourThought LLC "No program is interesting in itself to a programmer. 
It's only interesting as long as there are new challenges and new ideas coming up." 
--- Linus Torvalds 
