(This is a proposal for a registration; I am using the template from draft-freed-charset-regist-02.txt) Charset name: SCSU Charset aliases: (none, except for the implicit csSCSU) Suitability for use in MIME text: No Published Specification: Unicode Technical Report #6 "A Standard Compression Scheme for Unicode" Note: SCSU is a Character Encoding Scheme (CES) of Unicode and ISO 10646 (of the UTF-16-reachable subset). 
ISO 10646 equivalency table: Same as specification. 
Additional Information: SCSU is a Character Encoding Scheme for Unicode/ISO 10646 
that allows significant size reduction of text compared to UCS Transformation formats. 
It approximates the size of text that is otherwise achieved with language-specific charsets while encoding all of Unicode (up to U-0010ffff). 
SCSU is byte-based, which helps further, traditional compression (LZW etc.). 
It is stateful and uses all byte values including NUL. CRLF may or may not be represented by 0x0d 0x0a depending on the encoder and the text. 
Encoders can be trivial by emitting one command byte (0x0f) followed by the text in UTF-16BE. 
Fairly simple encoders yield good results with average text of any length. 
Decoding is simple and requires no mapping tables. 
If no control characters other than NUL, TAB, CR, and LF are used, then text in US-ASCII or ISO-8859-1 is already valid SCSU text. 
There is a Unicode signature byte sequence defined (0e fe ff, see specification). 
SCSU is a good charset for application/xml, for example. 
Personal &amp; email address to contact for further information: Markus W. Scherer IBM Java Technology Center 10275 N. DeAnza Blvd Cupertino, CA 95014-2237 markus.scherer@jtcsv.com 
schererm@us.ibm.com 
Intended usage: LIMITED USE Thank you for your consideration, markus 
Two comments only: 
- the "charset" SCSU is, as far as I can see, the combination of the CCS UNICODE/ISO 10646 with the CES of UTR #6. 
This should be expressed clearly in the "Published specification" section; as currently written, it sounds like you're registering the CES only, which is a no-no. 
- I would like to add under "Additional information": SCSU is completely useless for applications that require a canonical representation of text. 
This is an intentional part of its design. 
I don't like it much as a general purpose tool, but it may find a market niche somewhere. 
Harald Harald Tveit Alvestrand, EDB Maxware, Norway Harald.Alvestrand@edb.maxware.no 
This is a good way to put it. 
I will update my proposal. 
Well, I will try to find a somewhat nicer way to say this... :-) You are right. 
The intention behind SCSU is not to have an encoding that is good for internal processing; the intention is to have an encoding of Unicode that is more compact than UTF-8 or UTF-16 and that is useful in files (beware of searching though) and especially in protocols. 
For example, the XML parser that I know always converts everything from the document charset into UTF-16 before it does anything else. 
It does not care about such issues. 
That's fair. 
What is the next step? 
Do I need to update and resend the proposal? 
Should I wait for a few days to give more people time to respond? 
markus 
Update and resend the proposal. 
Once you get around to doing that, most of the comments will be in :-) (experience says that most comments occur within the first 48 hours after a proposal is first submitted) Harald Harald Tveit Alvestrand, EDB Maxware, Norway Harald.Alvestrand@edb.maxware.no 
Hello Markus, No major complaints, except for: 
Please remove this sentence. 
The only charsets really good for XML are UTF-8 and UTF-16, because they are guaranteed to be understood by the XML processor. 
Regards, Martin. 
