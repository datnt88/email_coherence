We need to decide how much effort to put into the Evaluation Description Language (EDL) or the extended version, Evaluation and Repair Language (EARL) suggested in (http://lists.w3.org/Archives/Public/w3c-wai-er-ig/2000Dec/0031.html) 
Info on EDL and EARL are on recent threads on this list, plus Sean's EDL overview at http://infomesh.net/edl/, and Len's user scenarios at 
So lets have a mini market survey, starting with this list. 
I'd like to 
especially welcome lurkers into this discussion, since you-all are some of the main potential customers! 
These first questions are addressed to end users: 1. 
If you evaluate web sites how useful would it be to - combine results from two or more tools? 
- have results in an XML/RDF format that would enable you to create custom reports (assuming tools to help write the transforms were available) 2. If you develop web sites: how useful would it be to - input the results into a web site authoring tool, so the authoring tool could . 
flag accessibility issues specified by EARL in the tools display of the site and code . 
allow you to accept or reject any suggested changes in the page (assuming such changes were included in the EARL output)? 
For example, the EARL file might have been produced by a system test person who identified accessibility problems and suggested fixes such as suggested ALT text. 
The authoring tool would point to places in the page where the issue occurs and give you the option to accept or reject the change, or make your own change. 
3. If you do user testing of web sites how useful would it be for EARL to record testing steps (e.g. the series of user keypresses or higher level actions such as link activation) and the results that obtain? 
The rest of the questions are directed at tool developers. 
You may want to qualify your answers according to how much user demand there seems to be for items 1,2,3. 
4. If you (or your organization) develop web site authoring tools, how much interest would there be adding features to input EARL so that users would have the capabilities described in (2)? 5. If you (or your organization) develops web site evaluation tools, how much interest would there be in a. outputting an EARL file b. inputting an EARL file from another tool to integrate with the info your tool picks up? 
Len Leonard R. Kasday, Ph.D. Institute on Disabilities/UAP and Dept. of Electrical Engineering at Temple University (215) 204-2247 (voice) (800) 750-7428 (TTY) Chair, W3C Web Accessibility Initiative Evaluation and Repair Tools Group The WAVE web page accessibility evaluation assistant: 
[slightly off topic warning] What I offer here is not a user perspective. 
I have pinged some of my ranking user friends for input on that. 
But we need to have some bottom-up [technoPush] clarification on EDL vs. EARL, too. 
What we need, on order to share and merge evaluation results, is a language that the results all can speak in. 
The critical resource for repair is a library. 
These have to be interoperable but they should not be treated the same. 
And we don't need to be investing in the more heavyweight task of a language to fully specify repairs. 
We do want an interoperable medium for expressing repair resources that populate a growing library. 
My translation of what Tim Springer said in the F2F is that "accessibility repair doesn't call for a standard _repair language_." 
The repairs take place in the context of the content developer's infrastructure and this is not standardized nor should we invest the effort to try to make it so. 
The repair session wants to be able to import evaluation results and repair templates or patch kits for transforming the content under repair. 
The units in the repair library are analogous to the individual patch objects in an innertube repair kit. 
How many of you remember these? 
The library, like the tube patch kit, contains a collection of chunks each of which is a combination of resources that go into the repaired system, and possibly process infrastructure (e.g. the shield over the glue side of the patch) needed to support the clinical application of the [patch]. 
Al 
We're too much like the guys who set up the gimmicks that the magician uses to perform his act - wrong as an audience, insufficiently naive in the matter at hand to be "objective". 
I'm not avoiding the survey because it's too much trouble but because I'm convinced that my replies would skew the conclusions to be drawn from any response. 
Love. 
ACCESSIBILITY IS RIGHT - NOT PRIVILEGE 
1. If you evaluate web sites how useful would it be to - combine results from two or more tools? 
Mucho Mambo Useful. 
This allows a myraid of different tools, people, experts, whomever to evaluate one document and each record assertions about it. 
In this way I can combine the output of my automatic tool and an experts manual checks into one seamless data source. 
This is the only structure I see for creating complete accessibility evaluations that are interpretable (is this a word?) at the machine level. 
Without a structure for combining a group of assertions about a document's evaluation creating a workflow that ensures compliancy is impossible. 
- have results in an XML/RDF format that would enable you to create custom reports (assuming tools to help write the transforms were available) From what limited knowledge I have of RDF my understanding is that it is the better language [the language?] 
for making assertions about documents. 
My concern is that the mechanism for pointing into the document needs to be flexible enough to handle pointing into all manner of code. 
The custom reports will be a cinch once a standard schema is in place. 
The ability to create such reports is a key factor in making accessibility a possibility. 
2. If you develop web sites: how useful would it be to - input the results into a web site authoring tool, so the authoring tool could . 
flag accessibility issues specified by EARL in the tools display of the site and code . 
allow you to accept or reject any suggested changes in the page (assuming such changes were included in the EARL output)? 
Correct me if I am wrong but is this basically a wizard that reads in EARL and spits out a "fixed" page? 
I have some pretty specific opinions about fixing but I will voice them in reponse to question 4. 4. If you (or your organization) develop web site authoring tools, how much interest would there be adding features to input EARL so that users would have the capabilities described in (2)? 
The big issue here is that large websites are: a. Dynamically generated b. Hand tweaked When I am evaluating a webpage I basically evaluate a URI that resolves to a single page. 
www.cnn.com for example. 
When I go through and evaluate this page I come up with some set of violations which I promptly write out to EDL. 
Then I read in the EDL and page into InFocus (A-Prompt, whatever...) and proceed to retrofit the page with no diagnostic prompting. 
I now have an accessible HTML page, AAA compliant and so on. 
Trying to put this retrofitted HTML back into CNN's system, however, proves fruitless. 
The one logical HTML document is comprised of the output from a massive set of server-side code. 
So while I have created an accessible document, there is no easy way to get the retrofitted HTML back into the system. 
What I have seen work at large websites, though, is to give the developers the entire set of violations, or a report generated from them. 
The developers then take the violation set back and figure out a way to make the "page" compliant. 
Thus to make a bold statement: There is no set road to an accessible page but the first step is always a thorough evaluation. 
While I believe that repair tools could, at some point, act based on EARL (EDL, whatever) I see very little near term economic sense in building a repair tool that operates on it. 
I do, however, see a great deal of economic benefit in developing a standard evaluation language for evaluation and reporting tools to operate on. 
5. If you (or your organization) develops web site evaluation tools, how much interest would there be in a. outputting an EARL file Since we are already outputting to XML and familiar with it is my assumption that switching to EARL should be pretty easy. 
As such I would say there is a great deal of interest. 
My only note would be that whatever language we choose has to work with Xerc es, Xalan and JDOM ;-) b. inputting an EARL file from another tool to integrate with the info your tool picks up? 
*Integrate*? 
Does that mean somebody needs to build the RDF accessibilty resolution engine? 
or can we simply let the RDF assertions overlap one another. 
TimS I HAVE BEEN WRITING CODE FOR THE LAST 72 HOURS AND MUST SHIP A PRODUCT 12 HOURS FROM NOW. 
I MAY CURRENTLY NOT BE MAKING ANY SENSE. 
I AM UNAWARE OF THIS. 
AT SOME POINT I WILL RETURN TO MY NORMAL, CHARMING SELF, HOWEVER FOR NOW I RESERVE THE RIGHT TO BE A LITTLE *OFF*. 
1. If you evaluate web sites how useful would it be to - combine results from two or more tools? 
Very - have results in an XML/RDF format that would enable you to create custom reports (assuming tools to help write the transforms were available) Very 2. If you develop web sites: how useful would it be to - input the results into a web site authoring tool, so the authoring tool could . 
flag accessibility issues specified by EARL in the tools display of the site and code Very . 
allow you to accept or reject any suggested changes in the page (assuming such changes were included in the EARL output)? 
Very 3. If you do user testing of web sites how useful would it be for EARL to record testing steps (e.g. the series of user keypresses or higher level actions such as link activation) and the results that obtain? 
moderately I will take the other tools to the tidy / amaya developers cheers Charles McCN 
