This is to anchor a thread for discussing guideline 1 in the Evaluation 
Techniques document that Chris is Editing. 
The document is at 
What do people think of the items under Guideline 1? 
Len 
Leonard R. Kasday, Ph.D. Universal Design Engineer, Institute on Disabilities/UAP, and Adjunct Professor, Electrical Engineering Temple University Ritter Hall Annex, Room 423, Philadelphia, PA 19122 kasday@acm.org 
(215} 204-2247 (voice) (800) 750-7428 (TTY) 
LK:: "What do people think of the items under Guideline 1?" 
WL: hell of a start! 
Love. 
ACCESSIBILITY IS RIGHT - NOT PRIVILEGE 
Only commenting 1.1 for now. 
Instead of 
Valid ALT text: 
I would call that: Evaluation of ALT text 
and make a H5 out of it. 
Not allowed - NULL ALT value (ALT="") 
Was that the consensus when it was discussed on this list ? 
Why is it not allowed while " " is ? 
Language for missing ALT text: Missing ALT text for image Language for suspicious ALT text: Suspicious ALT text for image 
This is language for what usage exactly ? 
Suggestions for possible ALT text: Other checks: 
I would make that another heading, same level as Analysis, called "Repair of ALT text" This way, for each (sub)checkpoint, we have an Evaluation section and a Repair section, clearly delimited. 
Technique 1.1.B [priority 1] Check images for LONGDESC IMG element should have a valid LONGDESC attribute if the image is complex. 
If IMG element has no LONGDESC attribute and could be a complex image, ask user if the image is complex and requires a long description. 
I think it's OK to have a complex image which is described in running text, rather than at the other end of a longdesc URI. 
This is a great start! 
Thanks Len and Chris! 
My initial comments on Guideline 1 from URL: 
Not allowed - NULL ALT value (ALT="") 
I could agree with you. 
There have, of course, been numerous arguments that "content-free" graphics DON'T exist. 
I won't get into this, except to (again) point out that ALT="" is really most problematic with the graphic is part of a link. 
Allowed - ALT value of 1 or more spaces (ALT=" ") 
Both of the above rules are in direct conflict with the Techniques for WCAG! 
Please check out URL: Which says: 
If content developers cannot use style sheets and must use invisible or 
transparent images (e.g., with IMG) to lay out images on the page, they 
should specify alt="" for them. 
I disagree (rather vigorously) with the suggested text for bullets and horizontal rules. 
ALT (alternate) should replace function and not form. 
* 2. If the width of the image and the height of the image are both less than 20 pixels, suggested text should be "bullet". 
Suggested text should be "-" or "." or "*" or "+"! * 3. If the height of the image is less than 20 pixels and the width of the 
image is greater than 150 pixels, suggested text should be "horizontal rule". 
Suggested text should be "----"! 
We could recommend that authors include the "TITLE" attribute (which should, if included, be "bullet" or "horizontal rule"). 
It is not clear to 
me that any browsers support the use of TITLE for images though... 
Bruce Bailey MSDE DORS This is to anchor a thread for discussing guideline 1 in the Evaluation 
Techniques document that Chris is Editing. 
The document is at 
What do people think of the items under Guideline 1? 
Len 
Leonard R. Kasday, Ph.D. Universal Design Engineer, Institute on Disabilities/UAP, and Adjunct Professor, Electrical Engineering Temple University Ritter Hall Annex, Room 423, Philadelphia, PA 19122 kasday@acm.org 
(215} 204-2247 (voice) (800) 750-7428 (TTY) 
Bruce, We are trying to stay in sync with the WAI guidelines so to follow ALT=" " (1 or more spaces) is NOT allowed. 
ALT="" (NULL) IS allowed for spacer images. 
The WAI techniques also suggest that the ALT text for spacer images be "spacer". 
I like this better than the NULL text. 
I propose that I modify technique 1.1.A so that NULL ALT text is suspicious and if found, the user 
is prompted with: "ALT text for this image is NULL. 
If the image is used for 
spacing use 'spacer' as the ALT text." 
That sounds fine to me. 
It makes it more language independant. 
This may be added complexity for something that is not used. 
Can we drop this recomendation? 
Chris 
Not allowed - NULL ALT value (ALT="") 
Allowed - ALT value of 1 or more spaces (ALT=" ") 
If content developers cannot use style sheets and must use invisible or 
Daniel, 
Valid ALT text: 
Sure, sounds clearer to me. 
Not allowed - NULL ALT value (ALT="") 
Please see my previous message. 
If there's agreement, I'll change this ER technique to conform to the WAI techniques. 
(NULL is allowed. 
Spaces are not allowed). 
Language for missing ALT text: Missing ALT text for image Language for suspicious ALT text: Suspicious ALT text for image 
When an evaluation and/or repair tool encounters the problem, it will inform the user using this language. 
We don't want A-Prompt to say one thing and 
Bobby to say another. 
For example: If Bobby said 'Missing ALT text for image' while A-Prompt said 'Picture does not have descriptive text' the user 
could be confused. 
I was hoping the language could clearly describe the accessibility problem so the user would know what's wrong. 
I'm not sure that 'ALT text' is a good way to describe the value of the ALT attribute to the user. 
What about 'descriptive text' or just 'description'? 
Suggestions for possible ALT text: Other checks: 
Sounds sensible. 
If there's agreement, I'll modify the document. 
I agree. 
Perhaps we could change the user prompt to: "Complex images require a long description. 
If the document text does not adequately describe the image, please create a complete description of the image."? 
Chris 
Valid ALT text: 
Not allowed - NULL ALT value (ALT="") 
Language for missing ALT text: Missing ALT text for image Language for suspicious ALT text: Suspicious ALT text for image 
Suggestions for possible ALT text: Other checks: 
Technique 1.1.B [priority 1] Check images for LONGDESC IMG element should have a valid LONGDESC attribute if the image is 
complex. 
If IMG element has no LONGDESC attribute and could be a complex image, ask user if the image is complex and requires a long description. 
I'd suggest that we not try to standardize the error message. 
What is 
essential would be a link to the guideline document. 
That would make it 
unambiguous. 
That way individual tools can improve without us changing this requirements document. 
Len 
Leonard R. Kasday, Ph.D. Universal Design Engineer, Institute on Disabilities/UAP, and Adjunct Professor, Electrical Engineering Temple University Ritter Hall Annex, Room 423, Philadelphia, PA 19122 kasday@acm.org 
(215} 204-2247 (voice) (800) 750-7428 (TTY) 
I agree that we must, at all costs, stay in synce with the WAI guidelines. 
I will not, however, refrain from complaining. 
ALT=" " is much closer to 
function (for spacer images) than ALT="spacer" which is, obviously, descriptive. 
I wish the debate over the validity of ALT=" " were archived someplace. 
My understanding is that the final opionion on this matter was reached because the HTML specs disregard all leading and trailing white 
space. 
This means that ALT=" " should be treated as ALT="" and that a paradox is produced by having a string to produce the NULL value! 
ALT="" is used for LOTS more things than spacer images. 
One technique that I think is fairly common is to divide a large graphic into pieces so that it loads faster. 
ALT text is really only required for the first piece and ALT="" would be *prefered* for subsequent pieces of the same graphic. 
Check out http://www.apple.com/ for an example. 
The rule that you are trying to enforce is: 
Provide text equivalents for all images, including invisible or 
transparent images. 
If content developers cannot use style sheets and must use invisible or 
transparent images 
(e.g., with IMG) to lay out images on the page, they should specify 
alt="" for them. 
The prohibition against ALT=" " occurs ONLY as part of a depreciated example and it is NOT explained. 
We are NOT talking about writing an HTML 
validator. 
What is *OUR* (the WCAG) *REASON* for prohibiting ALT=" "? 
BOTH of deprecated examples at the *wrong* way to do things. 
ALT="spacer" is *NOT* suggested by the 
techniques document. 
Until we get an definitive answer to this, I propose the following: - ALT=" " is allowed. 
(No warning, nothing. 
Not untill we can say (with a clear reference) with authority WHY this is not allowed. 
- ALT="" is suspicious and, if found, the user is prompted with "ALT text for this image is NULL. 
This is acceptable only if this image is used solely for decorative purposes and is completely free of meaningfull content, for example, as a spacer image." 
ALT="" should NOT be allowed when the image is the only item in a link. 
For example: This would mean that our authoring tool would have to be dynamic enough to 
allow: but then generate an error condition if "go to foo" were deleted! 
This is tricky because the "easy out" is to never allow ALT="" -- which IS in conflict with the WCAG techniques document! 
Rules enforced by authoring agents CAN be more strict than the WCAG. 
This would alow us to include the ALT="" exclusion! 
I am all for dropping any references to the "TITLE" attribute. 
I raise the issue to make the point of how the use of TITLE and ALT(ernate) are confounded. 
Bruce On Tuesday, June 22, 1999 11:03 AM, Chris Ridpath 
user 
for 
the 
to 
Do complain! 
We've been asked by the guidelines group to document for them issues that 
arise as we peruse the requirements. 
I'm the point of contact on that. 
I'll be documenting and sending them as soon as either a. we reach a single consensus on a view that differs from the guidelines or b. reach stabilized differing viewpoints. 
So, what do folks think of Bruce's point of view? 
Len 
Provide text equivalents for all images, including invisible or 
If content developers cannot use style sheets and must use invisible or 
(e.g., with IMG) to lay out images on the page, they should specify 
Leonard R. Kasday, Ph.D. Universal Design Engineer, Institute on Disabilities/UAP, and Adjunct Professor, Electrical Engineering Temple University Ritter Hall Annex, Room 423, Philadelphia, PA 19122 kasday@acm.org 
(215} 204-2247 (voice) (800) 750-7428 (TTY) 
Provide text equivalents for all images, including invisible or 
The rule we should try to enforce is checkpoint 1.1, not something in the technique document, which is not a stable reference. 
Provide a text equivalent for every non-text element 
I disagree, you might have no need for ALT text other than "" even for an isolated image link. 
For instance, on www.whitehous.gov: 
(that's not what you actually get there, there's currently no ALT at all, but you would get something like that under lynx, with ALT and [] used to show link) [Head shot of the President &amp; Vice President] [The President &amp; Vice President]: Their accomplishments, their families, and how to send them electronic mail [Drawing of the America Eagle] [Interactive Citizens' Handbook]: Your guide to information about the Federal government [Stone statue of George Washington] [White House History and Tours]: Past Presidents and First Families, Art in the President's House and Tours -- Tour Information [Drawing of a book opened] [The Virtual Library]: Search our site, including an extensive archive of White House documents which is a little redundant, not to say annoying with ALT="", you get just the right information: [The President &amp; Vice President]: Their accomplishments, their families, and how to send them electronic mail [Interactive Citizens' Handbook]: Your guide to information about the Federal government [White House History and Tours]: Past Presidents and First Families, Art in the President's House and Tours -- Tour Information [The Virtual Library]: Search our site, including an extensive archive of White House documents In a sense, the wording: Provide a text equivalent for every non-text element fits my example, since in that case, the equivalent is "". since the description/function is already inline, next to the image, but not in the same A 
Daniel brings up the case where an adjacent image and text point to the same place. 
I agree it's redundant to have both links. 
However, even if you replace the ALT text with "", there's still a problem. 
The user will hear that there's a link there. 
For example, in Lynx with numbers on there will be a number. 
So they'll know it's a link, but hear that there's no ALT text. 
First of all, this adds a bit of clutter. 
Second of all, it will I think decrease user's confidence that it's accessible, hearing a link with no ALT text. 
In general, I think the better solution is to include the image and text within a single A /A pair. 
The white house page has a complication, however, since the image and text are in separate table cells, and this would require the link to start before a cell and end in the middle of the cell, which is illegal. 
A way around this is to put the image and text in the same cell with the image floated left. 
An example using the align=left attribute is shown at Of course, align=left is deprecated, but since the whole thing uses a table which is deprecated in favor of style sheets, that doesn't really matter. 
The best solution would use style all the way, except that not all browsers support style... but thats another story. 
Please start a new thread if you want to discuss style sheets). 
Len 
Provide text equivalents for all images, including invisible or 
Leonard R. Kasday, Ph.D. Universal Design Engineer, Institute on Disabilities/UAP, and Adjunct Professor, Electrical Engineering Temple University Ritter Hall Annex, Room 423, Philadelphia, PA 19122 kasday@acm.org 
(215} 204-2247 (voice) (800) 750-7428 (TTY) 
Provide text equivalents for all images, including invisible or 
On the one hand, only the guideline has the force of a W3C Recommendation. 
On the other hand, the WAI will only undercut its effectiveness if we are sending different messages by the ER guideline-implementation guidance and 
the GL techniques document. 
In a sense, the ER guideline-implementation 
guidance is another segment of the WCAG techniques: tool techniques, whereas the WCAT is author techniques. 
They should be consistent and any 
conflict should be trapped by Len to arrange a dialog to resolve any 
misunderstandings or disagreements. 
On the whole, where it affects what should be in the resources as served, the GL group should still be regarded as having senior authority even for points where the WCAG requires some interpretation to be concrete. 
Al 
I realy do not understand the idea behind: Not allowed - NULL ALT value (ALT="") Allowed - ALT value of 1 or more spaces (ALT=" ") Both from a semantic/logical point of view and HTML specification these are quite the same thing. 
My major reservation with this guideline is that there may be out there many people who took the effort to write accessible pages with alt="" where appropriate, and now we tell them to revise their pages, without any reason whatsoever. 
Regards, Nir Dagan "There is nothing quite so practical as a good theory." -- A. Einstein 
This depends on the UA. 
An smart UA could completely drop the ALT="" image link, after checking that the A href for the img is the same as some other very close textual A. 
Note that this technique of adjacent logo pointing to the same resource as an adjacent textual equivalent is common on the web, and often it uses two A, not one, for implementation reason (alignment, table layout, etc) that we can't easily ignore. 
The idea is that ALT=" " is appropriate for spacer images, while ALT="" is appropriate for "content free" images. 
Your point is well taken that from a semantic/logical point of view they are equivalent. 
I think this is the reason for any debate. 
Another reason for the distinction is the (perhaps incorrect) behavior of the most popular text-only browser. 
Lynx treats them differently. 
Missing ALT Lynx will treat as [LINK] or [IMAGE]. 
ALT="" will hide images and links from Lynx. 
ALT=" " will be rendered as Lynx as [ ]. 
ALT="" is really only an issue for links. 
There is agreement that ALT="" is often appropriate (and even prefered to some other choices). 
The current debate is the behavior of authoring agents. 
The authoring agents should NOT start with ALT="" since this would encourge bad content. 
The warnings that an authoring agent generates could be more strict than a HTML/WCAG validator. 
[good summary; may I offer the following tweaks:] The hiding of items with ALT="" is under user control; it can be switched off. 
Screen reader users require that their systems be able to pronounce punctuation, but a lot of the time they run with punctuation skipped. 
Similarly, the ability to suppress all mention of the most insignificant images is regarded as a benefit by many users. 
I agree that warnings can and should be issued without a strict violation of a WCAG checkpoint. 
On the terms of reference of "the current debate" I wonder if you have drawn such a fine line that you actually managed to miss the mark. 
I 
believe that the document Chris is maintaining is supposed to serve as a 
common reference; both for tools which check existing HTML and for checking which is performed seamlessly as one creates new material in an authoring tool. 
Even that can be either by writing HTML text or by triggering generation of HTML text. 
In that sense, the debate is not about what the generator "starts with," but rather what the checks accept, IIRC. 
Chris, Daniel: can you clarify this? 
Al 
Not quite. 
You are ignoring the way logic depends on lexical analysis or the recognition of word boundaries. 
"Lay out" is a verb while "layout" is a noun. 
The logic depends on the lexing. 
Whitespace is not guaranteed to 
be logically without effect. 
Null is not whitespace, space is. 
There are enough situations where this introduces a semantic difference. 
In the HTML specification it merely warns that some user agents may ignore whitespace in certain circumstances. 
I do not believe that you will find this carried forward in either the work on XML normalisation nor in the Internet-Draft from DRUMS updating RFC 822. 
What I am saying is that the best thinking on this issue is that a null string and linear whitespace are 
logically different, a distinction that must be preserved. 
Al 
I like the idea of a smart UA surpressing a picture link that's near and equal URL-wise to a text link, but couldn't it do that more generally, even if ALT is not "" ? 
User configurable of course. 
ACtually, this is a potential ER repair tool feature idea which, like all repair tool features, would have use in the user interface As for associating a specific behavior with ALT="", we could try to establish that convention, but I think it would be better to use Aural CSS, with the Speaking property set to "none". 
cf. 
Yes, it would take longer for this to come to pass, but it would take a long time to promote specific meaning for "" vs " " By the way, what about " " or Would they be semantically the same as " " 
Len 
Leonard R. Kasday, Ph.D. Universal Design Engineer, Institute on Disabilities/UAP, and Adjunct Professor, Electrical Engineering Temple University Ritter Hall Annex, Room 423, Philadelphia, PA 19122 kasday@acm.org 
(215} 204-2247 (voice) (800) 750-7428 (TTY) 
another thought on the issue of having and image link adjacent to a text link with the same url. 
What about the case where the meaning requires both elements? 
For example, a icon that means "mail to" followed by the words "Larry LarRue". 
Here we can't use ALT="" or " " because there's a function to the image. 
Here's the code with separate links: Its clearly better to put img and text within the same link: IMG ALT="Mail to:" src="mbox.gif" 
Larry LaRue I'll admit that this can get tricky if people are using tables to format their pages. 
There are ways to do it for some common cases, e.g. text below the image, in which case the whole link can fit inside a single table cell. 
There may be more complicated cases where you can't manage it. 
But at least we should recommend it where it is possible. 
And this will go away when style sheets become widely used. 
If we accept this as a general recommendation, then ALT="" or ALT=" " becomes a particular case. 
Why make an exception and get into assumptions about the differences between "" and " " etc? 
Len 
Leonard R. Kasday, Ph.D. Universal Design Engineer, Institute on Disabilities/UAP, and Adjunct Professor, Electrical Engineering Temple University Ritter Hall Annex, Room 423, Philadelphia, PA 19122 kasday@acm.org 
(215} 204-2247 (voice) (800) 750-7428 (TTY) 
Generally null is not white space but the specs say that leading and trailing white space in CDATA attribute values can be egnored by user agents. 
E.g., "myval" may be treated as " myval " 
Regards, Nir Dagan "There is nothing quite so practical as a good theory." -- A. Einstein 
In addition, http://www.w3.org/TR/REC-html40/types.html#h-6.2 
states that "Authors should not declare attribute values with leading or trailing white space. 
" Seems to me that rules out " " or am I reading this wrong? 
It looks like " 
has both leading and trailing white space in fact. 
Len 
Leonard R. Kasday, Ph.D. Universal Design Engineer, Institute on Disabilities/UAP, and Adjunct Professor, Electrical Engineering Temple University Ritter Hall Annex, Room 423, Philadelphia, PA 19122 kasday@acm.org 
(215} 204-2247 (voice) (800) 750-7428 (TTY) 
The list was started as a mean to specify techniques for auto or semi-automatic evaluation of checkpoints (as used by Bobby). 
Chris came in with the additional requirements that we look at suggested checkpoint repair techniques during the authoring process (for A-prompt). 
I think it's fine to treat both kind of issues at the same time, as long as we separate them in different section in the resulting document. 
Would you consider some variations on that? 
I agree it is very important to keep the distinction clear, although I also think that it is quite valuable to be able to examine both detection and repair specifics for a given detectable condition together. 
This is why I started thinking about a tabular format for these layers of information. 
Structured sub-paragraphs are another way to do it in a document. 
Maybe I am just much into my virtual code-writing imagination. 
But the author tool has to deal in a closed-loop fashion with generation, evaluation, and possibly repair of the same fragments of document. 
At least for that author one doesn't want to have to be flipping back and forth from Chapter 3 to Chapter 5. 
Al 
PS (Recap more formally): Software is a web of assertions. 
Specifications are software. 
It is important to be able to view together all threads through the assertion web derived from a given authority, i.e. guideline or checkpoint in the WCAG. 
It is important to be able to view together all threads through this web that act on a given item or substructure in a document. 
ND:: 
AG:: I believe that the word used is "may," not "can." 
I believe that what the editors of the HTML specification were trying to get across was how to work around a fact of current implementation. 
Something like: "Although a strict SGML interpretation of the CDATA type would indicate that ' myval ' and 'myval' are distinguished values, users of HTML should be aware that implementations may treat ' myval ' as if it were 'myval'. 
Note that this situation is not symmetrical. 
Implementations will likely strip, but not likely add, leading or trailing whitespace in extracting attribute values. 
LK:: 
has both leading and trailing white space in fact. 
AG:: I think you have to distinguish "leading whitespace" from "initial whitespace" to parse this situation correctly. 
In other words, leading whitespace is whitespace preceding the first non-whitespace character, and trailing whitespace is whitespace occurring after that last non-whitespace character. 
Neither are present in " ", although it meets the criteria both for initial and final whitespace. 
Al 
are 
this must depend on the lynx version or options. 
I don't get those results with Lynx 2.8re1.3 
With this lynx I'm, ALT="" and ALT=" " are treated the same. 
The images themselves are always invisible. 
I don't get any [ ] for ALT=" ". 
However, the picture changes when link numbering is turned on. 
With lynx -number_links filename.html 
neither gets a link number in front of it. 
with lynx -number_links -hiddenlinks=merge filename.html the links themselves are invisible, but the link number [1] [2} [3] show up. 
This was with the test file 1 HTML HEAD /HEAD BODY 2 3 a href="foo.html" 
img src="foo.gif" 
alt="" /A 4 a href="foo.html" 
img src="foo.gif" 
alt=" " /A 5 a href="foo.html" 
img src="foo.gif" 
alt="x" /A 6 7 /BODY /HTML which renders as [1][2][3]x Thus, if the user has the merge option on, they'll see all the links. 
Len Leonard R. Kasday, Ph.D. Universal Design Engineer, Institute on Disabilities/UAP, and Adjunct Professor, Electrical Engineering Temple University Ritter Hall Annex, Room 423, Philadelphia, PA 19122 kasday@acm.org 
(215} 204-2247 (voice) (800) 750-7428 (TTY) 
has both leading and trailing white space in fact. 
Note that an XML engine will pass whitespaces on *if the declared value is CDATA*. 
See Section 3.3.3 
of the XML spec. 
