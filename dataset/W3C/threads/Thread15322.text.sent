Hello, A while ago (january 2002?), when we began making the techniques documents more testable we used the phrase "rules" for the testable statements. 
For a reminder of what this looks like, refer to the HTML Techniques [1]. 
We didn't want to use "checkpoint" or "criterion" since we wanted to distinguish the technology-specifics from the general guidelines and checkpoints. 
However, there are many acknowledged issues with the term "rule." 
e.g., it could be confused with the 508 rules, it may be interpreted as being too prescriptive. 
etc. 
Thus, to continue the discussion about what term to use instead, here is a proposal. 
First, at the top level we currently have: Guidelines which are made up of checkpoints Checkpoints which are made up of success criteria success criteria I propose that at the technology-specific level we have: (one or many) techniques that show how to meet a top-level success criterion a technique is a combination of: - the technique (e.g., "Use the meta element to...") - examples - descriptions - etc. (all the other stuff from the schema and techniques requirements) for those of you interested in the schema, i think we can continue to use the element "rule" but when we generate documents from the xml we do something along the following: TITLE: the document title Techniques: Use the TITLE element to describe the document. 
Basically, replace "Rules" with "Techniques." 
--wendy [1] http://www.w3.org/WAI/GL/WCAG20/wcagtech020320.html wendy a chisholm world wide web consortium web accessibility initiative As i have wrote in reply to Gregg Vanderheiden i think that we need to insert also a CSS Techniques doc. 
CSS is a different W3C Raccomandation than HTML and is possible to have accessible CSS and/or CSS that are not accessible. 
For example (the same in the previous e-mail), this code: h1 { font-family: Georgia, Verdana, Arial, Helvetica, sans-serif; font-size: 16px; font-weight: bold; color: #000; text-align: center; background-color: #fff; h2 { font-family: Georgia, Verdana, Arial, Helvetica, sans-serif; font-size: 0.8em; font-weight: bold; color: #000; text-align: center; background-color: #fff; But also, for eg., the use of background color and of the text-color: if we wrote green on blue or white on light gray we create accessibility problems. 
What the group think about? 
Roberto Scano IWA/HWG EMEA Coordinator W3C Advisory Committee Representative for IWA/HWG International Webmasters Association / HTML Writers Guild E-Mail: emea@iwanet.org - w3c-rep@iwanet.org 
Hello, We currently have a separate CSS Techniques document. 
Please refer to the list of techniques documents currently under discussion/development: Note that the last time we generated a version of CSS Techniques was 16 July 2001 [1], but that I converted the source to xml (using the techniques dtd) in August 2002 [2]. 
There has been some debate about a CSS chapter within each of the "host" technologies (i.e., HTML, XML, SVG, SMIL, MathML, etc.) with a separate CSS-specific document for overarching CSS techniques and themes. 
Does this satisfy your question or are you driving at something else? 
--wendy [1] http://www.w3.org/WAI/GL/WCAG20/WD-WCAG20-CSS-TECHS/ [2] http://www.w3.org/WAI/GL/WCAG20/2002/08/css-tech.xml - note that this is a very sparse document. 
I did it this way to highlight where we are missing information. 
in other words, it is a sort of template for future work. 
wendy a chisholm world wide web consortium web accessibility initiative We currently have a separate CSS Techniques document. 
Please refer to the list of techniques documents currently under discussion/development: Roberto: I will read this: and i wrote suggestion for implementation ;-) That works ok for the techniques doc, but for the checklists we need checklist items. 
There may be 3 or 5 techniques for a success criteria. 
To meet the criteria you would not need to do all 5. but you may have to do one of them. 
Or two of them. 
Or some combination or another. 
In order for us to have a checklist, there will need to be very specific checklist items. 
And these would be different from techniques which is a much broader category of ideas, strategies, techniques, options etc. 
So I think we still need to find the word for those "things" Best I have heard so far is Technology Specific Checklist Items or TSC Items. 
Gregg Gregg C Vanderheiden Ph.D. Professor - Ind. Engr. 
&amp; BioMed Engr. 
Director - Trace R &amp; D Center University of Wisconsin-Madison Of Wendy A Chisholm Hello, A while ago (january 2002?), when we began making the techniques documents more testable we used the phrase "rules" for the testable statements. 
For a reminder of what this looks like, refer to the HTML Techniques [1]. 
We didn't want to use "checkpoint" or "criterion" since we wanted to distinguish the technology-specifics from the general guidelines and checkpoints. 
However, there are many acknowledged issues with the term "rule." 
e.g., it could be confused with the 508 rules, it may be interpreted as being too prescriptive. 
etc. 
Thus, to continue the discussion about what term to use instead, here is a proposal. 
First, at the top level we currently have: Guidelines which are made up of checkpoints Checkpoints which are made up of success criteria success criteria I propose that at the technology-specific level we have: (one or many) techniques that show how to meet a top-level success criterion a technique is a combination of: - the technique (e.g., "Use the meta element to...") - examples - descriptions - etc. (all the other stuff from the schema and techniques requirements) for those of you interested in the schema, i think we can continue to use the element "rule" but when we generate documents from the xml we do something along the following: TITLE: the document title Techniques: Use the TITLE element to describe the document. 
Basically, replace "Rules" with "Techniques." 
--wendy [1] http://www.w3.org/WAI/GL/WCAG20/wcagtech020320.html wendy a chisholm world wide web consortium web accessibility initiative What I'm proposing is that a technique is a specific strategy (e.g., "Use the title element to provide a unique title for a page") and that we provide supplementary information for that technique (e.g., examples, descriptions, etc.). 
Thus, a checklist is list of techniques. 
A checklist does not contain the supplementary information for that technique. 
--wendy wendy a chisholm world wide web consortium web accessibility initiative Here's a tangent...but please hear me out. 
There are likely holes in the proposal, but perhaps we can find a nugget of something useful. 
I've recently been working on the comments received about Checkpoint 1.3 (Make all content and structure available independently of presentation). 
This checkpoint combines a variety of WCAG 1.0 checkpoints that lean heavily towards HTML. 
e.g.: 3.1 When an appropriate markup language exists, use markup rather than images to convey information. 
[Priority 2] 3.3 Use style sheets to control layout and presentation. 
[Priority 2] 3.5 Use header elements to convey document structure and use them according to specification. 
[Priority 2] 3.6 Mark up lists and list items properly. 
[Priority 2] 3.7 Mark up quotations. 
Do not use quotation markup for formatting effects such as indentation. 
[Priority 2] 5.1 For data tables, identify row and column headers. 
[Priority 1] 5.2 For data tables that have two or more logical levels of row or column headers, use markup to associate data cells and header cells. 
[Priority 1] etc. etc. 
Thus, I'm wondering, "What if we moved the success criteria to the technology-specific documents?" 
Here's an idea of what it might look like at each of the layers: In the Guidelines/Checkpoints we might have: Checkpoint 1.3 Make all content and structure available independently of presentation [link to] technology-specific success criteria Benefits Examples Definitions In a separate gateway document (that either exists statically or is generated based on user preference): Technology-specific success criteria Checkpoint 1.3 Make all content and structure available independently of presentation [link to] HTML success criteria [link to] SVG success criteria etc.etc. 
In an HTML-specifics "checklist": HTML Techniques for WCAG 2.0 Checkpoint 1.3 Make all content and structure available independently of presentation Minimum level success criteria: HTML 1.3-1a For data tables, identify row and column headers. 
[link to] techniques for 1.3-1a HTML 1.3-1b For data tables that have two or more logical levels of row or column headers, use markup to associate data cells and header cells. 
[link to] techniques for 1.3-1b Level 2 success criteria: HTML 1.3-2a When an appropriate markup language exists, use markup rather than images to convey information. 
[link to] techniques for 1.3-2a Level 3 success criteria HTML 1.3-3a Provide summaries for tables. 
[link to] techniques for 1.3-3a Just a thought... --wendy wendy a chisholm world wide web consortium web accessibility initiative This won't work. 
We would in effect be moving the normative success criteria into a non-normative document. 
We would also be implying that general (non-technology-specific) success criteria for this checkpoint can't be written. 
We would, furthermore be leaving it to techniques document authors, including potentially third parties in the case of technologies for which the WCAG working group doesn't write techniques, to define the success criteria for this checkpoint. 
Not only does this give rise to the problem of non-normative documents surreptitiously imposing normative requirements, it also gives enormous discretion to the developers of the techniques documents in defining what the checkpoint means. 
Finally, we would thereby depart from the principle of providing technology-independent success criteria for every checkpoint, a basic requirement underlying the whole WCAG 2.0 project. 
I propose instead that we (1) write technology-neutral success criteria for checkpoint 1.3; and (2) include a non-normative note referring to the Techniques for the details of how the criteria apply to specific technologies essentially of the kind that Wendy suggested. 
That is, I support the proposal to include a reference to Techniques, but object to the idea of abandoning the construction of generic success criteria in respect of the checkpoint. 
I think the current level 1 success criteria capture important aspects of the checkpoint. 
We could either just add a note referring to techniques, or add a success criterion requiring that structural elements (elements which convey semantics) are used correctly and occur wherever the corresponding structural distinctions would be apparent from the presentation. 
This would tie 1.3 more closely to the correct use of structural elements, a connection which some reviewers rightly pointed out was not explicit in the success criteria as currently written. 
I also think we should leave considerations of simplicity and comprehension aside for the moment and just concentrate on defining what the technical requirement is, after which we can fine-tune the wording to create as clear a statement as possible. 
I like this terminology and agree with Wendy's proposal. 
In fact, it is entirely consistent with previous practice: we have never given the term "technique" a precise meaning or sought to define what an individual "technique" is. 
We could say that a "technique" is a statement of the kind which appears in a checklist; in the full techniques document it may and often will be accompanied as Wendy indicated by examples/test cases, testability status, version information/impelmentation support details, notes and commentary. 
The only question this leaves open is what to call items that are included in techniques documents but aren't sufficiently important to appear in checklist. 
I propose terming them simply "advice" or "advisory notes". 
Under this proposal, a "technique" and the information accompanying it would constitute a highly structured entity as defined in our Techniques requirements. 
Another terminological proposal: call the statement that would appear in the checklist a "technique statement", and use the word "technique" alone to designate the technique statement together with all of the other required/optional items of information which accompany it. 
I suppose it depends on how you encode them and whether you are referring to the source file (the XML document from which the techniques are generated) or the output documents - techniques documents and checklists. 
For example: [other required/optional elements] /technique technique statement [statement of second technique] /statement [other required/optional elements] /technique /and which means that in order to meet the success criterion you have to implement both of the techniques; the checklist item would be generated by extracting the contents of the two STATEMENT elements, inserting "and" between them and supplying appropriate styling to make the layout clear in the final presentation. 
As a result, there are checklist items in the generated checklists but no checklist items in the XML source. 
That is, the checklist items are generated from the techniques during the output processing. 
A disjunction might be written: technique statement every code IMG /code element in the document has a non-null code ALT /code attribute that provides a text equivalent for the image. 
/statement [other details and examples of ALT attributes] /technique /or The above element names are meant to be self-explanatory and easy to understand for purposes of this e-mail message; I am not proposing them for inclusion in a schema. 
That is, if you don't like my choice of element names, please don't interpret them as a serious, well considered proposal. 
I think it is an open question whether we want to mark up the techniques in this or a similar manner. 
There may be advantages for purposes of testing tools, test suites and so forth, and it wouldn't mean much extra work for the technique author. 
Returning to Gregg's point, in the generated checklists there will be checklist items composed of one or more techniques; in the source XML there may not be checklist items depending on how we decide to mark up the techniques. 
I close with the observation that it is usually better to capture more semantics in the XML vocabulary in that it increases the flexibility with which the data can be transformed and used. 
On the other hand it does create somewhat more work in developing the output transformations. 
Extending the above ideas one can envisage: Trnaslation: to meet this success criterion you have to implement either technique 1 and technique 2, or technique 3. As a further remark, note that if techniques were marked up as proposed in my earlier message there would also be advantages of validation. 
For instance: where the second disjunct is missing, would fail to validate, assuming proper design of the schema. 
An alternative to the approach which I have outlined would be to have a parent container element referring to the success criterion, with either a single technique, or an AND or OR element as child; or one could treat conjunction (AND) as the default if multiple TECHNIQUE elements occur as direct descendents of the CRITERION element. 
Doubtless there are other solutions that might be proposed, offering a similar level of semantic specificity. 
