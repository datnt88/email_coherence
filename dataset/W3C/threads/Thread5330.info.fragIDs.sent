With all these ideas going on about preconditions and effects in OWL-S it is 
quite difficult to capture the general idea of how to define actual effects 
in WSs. 
I had the impression that an effect was something that will become true when 
the WS has executed but that also brought some changes to the world, but now 
there is talk of making use of post-condition instead. 
Actually from the readings that I found, these two words seem to be used interchangeably, depending on the research context, and thus I always presumed that they are 
somewhat synonymous. 
What are the views of the OWL-S ppl on this? 
Cause with all these somewhat radical changes being proposed it is quite difficult to get people to actually make use of these ontologies. 
Will there every be a stable set of 
OWL-S ontologies? 
Some time back there was a long discussion on the topic; I guess some clarification is now due. 
Regards Charlie 
Hi Charlie - I don't view the recent questions / suggestions (raised by me mostly) as radical. 
They're mainly part of an effort to get greater clarity about how the "effects" property is to be used. 
This effort has come up in the process of working on some new examples. 
I sort-of suggested renaming "effect" to "postcondition" in OWL-S (because for me "postcondition" is more general), but that was not meant as a radical change. 
And if most people view them as synonymous then it's not likely that we'll make that change. 
Hopefully some additional discussion on this list will lead to greater clarity. 
Will there every be a stable set of 
Sure. 
I think most of the remaining "instability" has to do with these very things - expressing preconditions and effects - and we're making very significant progress in these areas for the next release. 
(Note also that some of the instability has to do with the ongoing evolution of the rules language(s) that we're drawing on in these areas.) 
Regards, David 
Thanks David, 
So can someone explain what an effect actually refers to and how will users (possibly not technical enough to understand the difference) know what an effect represents and which effect to attach to some WS description? 
Cause as described in OWL-S up to now it is still unclear how this thing can be handled. 
Regards, Charlie 
is 
effects 
when 
now 
are 
Hi Charlie - I don't view the recent questions / suggestions (raised by me mostly) as radical. 
They're mainly part of an effort to get greater clarity about how the "effects" property is to be used. 
This effort has come up in the process of working on some new examples. 
I sort-of suggested renaming "effect" to "postcondition" in OWL-S (because for me "postcondition" is more general), but that was not meant as a radical change. 
And if most people view them as synonymous then it's not likely that we'll make that change. 
Hopefully some additional discussion on this list will lead to greater clarity. 
Will there every be a stable set of 
Sure. 
I think most of the remaining "instability" has to do with these very things - expressing preconditions and effects - and we're making very significant progress in these areas for the next release. 
(Note also that some of the instability has to do with the ongoing evolution of the rules language(s) that we're drawing on in these areas.) Regards, David 
An effect looks a lot like a proposition. 
The simplest case is something like ecom:own(me:me, art:Mona-Lisa): if an action is taken that has this effect, then after that action I will own the Mona Lisa. 
The surface notation will look exactly like that. 
The deep notation will look more like this: or maybe this: (The SWRL site is down right, now, so I'm guessing about the details here). 
There is an issue about the ontological status of expressions like this. 
In OWL-S-Full, we can be fairly casual about such things, but in OWL-S-DL we would probably wrap the effect in an "XML Literal" package, thus allowing us to hide non-DL stuff. 
(The terms OWL-S-Full and OWL-S-DL I just made up, but I wouldn't be surprised if we wound up with two different dialects.) Effects differ from conditions in various ways: * Effects are not true or false; they are _imposed_ or not imposed. 
An ordinary atomic formula is imposed by making it true in (that is, adding it to) the db representing the next situation. 
* The expression (not p) means "Delete p," or "Erase p from my db," or "Make p false." * The expression (when p q) means, "If p is true before the action with this effect, q is imposed after." 
* The expression (increase f a) means, "Increase fluent f by amount a," as in (increase (money-flow me barnes&amp;amp;noble) (dollars 35)). 
Similarly for 'decrease' and 'assign'. 
* The expression (forall (x) (when p[x] q[x])) means, "For every object x you can think of satisfying p[x] before the action is taken, impose q[x] after." 
* A disjunction in an effect is interpreted as nondeterminism. 
It's not clear how existential quantifiers are to be understood. 
There probably should be a new quantifier: (new (x) p[x]) means, "A new object satisfying p comes into existence." 
An ordinary existential could then be interpreted nondeterministically. 
This is probably irrelevant to what we really need to know, which is how the effects of web services are to be expressed. 
Here we have notions such as "The effect is that the agent knows something it didn't know before," or "The effect is that the agent owns three dozen more donuts then it did before." 
Representing these things opens up some interesting new KR challenges. 
-- Drew -- Drew McDermott Yale University CS Dept. 
