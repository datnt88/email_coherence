Hello, The latest Working Group revision of the UA Guidelines [1] is now available along with the list of changes [2]. 
This draft will be the basis of the next public revision (after review from the Interest Group and this Working Group). 
Thank you all for your flurry of contributions lately, - Ian [1] http://www.w3.org/WAI/UA/WD-WAI-USERAGENT-19990309/ [2] http://www.w3.org/WAI/UA/WD-WAI-USERAGENT-19990309/changes Ian Jacobs (jacobs@w3.org) 
Attached, in Word and Text formats are my rough text for the 4.3 section of the techniques document. 
Denis Anson, MS, OTR Assistant Professor College Misericordia 301 Lake Street Dallas, PA 18612 Member since 1989 of: RESNA The International Association of Assistive Technology Professionals 
Denis, could you please include the plain text if possible? 
Anyway: To be able to configure alternate devices for input and output is of Priority 1. 
In the area of input devices, under many operating systems, where standard operating systems procedures are used (and I believe that this is already a P1 requirement) reconfiguration or emulation of the keyboard is the most effective way to apply a different input device. 
If the keyboard can control all functions of the browser, then it is an ideal method in MOST but not necessarily ALL circumstances. 
(For example, EIA, a browser for the Learning Disabled uses a touchscreen, which I think emulates a mouse.) For those cases where keyboard input is used, it seems to me that the ability to reconfigure the keyboard is priority 1. Again, in many systems this can be done at the system level rather than within the particular product. 
Providing documentation of the configuration, and of how to alter it, is also P1. 
I am uncertain whether rendering the availability of an Accesskey is P2 or in fact P3. 
I do however feel that should it be done, then a mechanism must be provided for rendering the required input technique, rather than the access key as given. 
For example, where an element has accesskey="c" and the User Agent uses that to bind control-f3 to the element, the rendering must specify control-f3 not "c". 
(Obvious really, but it is nice to have these things made explicit. 
This is particularly important in the case of User Agents which restrict the number of available keys. 
Charles 
how about list access key definitions in a way that is easily retrievable. 
and in addition, they can be rendered in any other way. 
if for instance, they are rendered in a graphical image of the character, the alt atrib for that image could be the represented character. 
Just a couple of thoughts. 
A usage of term as well, auditory or tactile. 
this then implies possible use along with other aids than nonvisual. 
Thanks! 
Hands-On Technolog(eye)s Touching The Internet: ftp://ftp.clark.net/pub/poehlman 
Dynamic Solutions Inc. Best of service for your small business network needs! 
---sig off--- 
Guideline 4.3 Support accessible keyboard input Not every user is able to navigate the web via a pointing device such as a mouse. 
The environment in which the user is operating may not support a mouse. 
Because of a physical or sensory limitation, the individual may not be able to control a pointing device. 
In these cases, some users may rely on keyboard commands to control the user agent. 
These commands may be created using the physical keyboard, or may be generated via third party assistive technology. 
The user agent should provide full functionality via the character based input as well via a point and click interface. 
For those user agents that support keyboard input, the input methods must be accessible. 
Some users require single-key access, others require that keys activated in combination be physically close together, while others require that they be spaced physically far apart. 
Configurability is vital to accessible keyboard input. 
The more apparent the keyboard commands are to all users, the more likely it is that new users with disabilities will find them and use them. 
[Checkpoint 4.3.1] 
Allow the user to configure keyboard access to user agent functionalities. 
Configuration includes the ability to specify single keystroke commands as well as commands that require keystroke combinations. 
[Priority 2] Because of the diversity of physical needs of users, there are no "right" keyboard commands. 
A user with limited mobility may not be able to accurately press keys that are far apart on the keyboard. 
Another user, with limited motor control, may not be able to accurately produce commands that are close together. 
Because of the variety of needs, the keyboard commands used to access user agent functionality should be configurable for the user through an accessible, and understandable process. 
[Checkpoint 4.3.2] 
Ensure that user can find out about all keyboard bindings (e.g., through menus). 
[Priority 2] Keyboard commands that are hidden from the user are of little utility. 
There should be multiple avenues to information related to keyboard bindings. 
Some suggested methods of making this information available include: * Make all keyboard equivalents visible on pull down menus. 
* The on-line help for each feature that offers keyboard control (all of them) should also describe the keyboard shortcuts for that feature, and the behavior available via the keyboard. 
* On-line help should include a section on keyboard access that describes the keyboard controls within the product. 
This section should be organized logically by function, rather than by alphabetical order. 
[Checkpoint 4.3.3] 
Provide a mechanism to render the presence of a keyboard binding for an active element. 
[Priority 2] As noted previously, keyboard commands that are not apparent are of little utility. 
When a document element has a keyboard binding (via accesskey), the user agent should render the keyboard binding along with the fact of its existence. 
The method of providing such rendering should be configurable by the user. 
For example, for access keys for links, underlinging the active character will not generally be useful, since most links are rendered as underlined text. 
Some possible approaches to rendering access keys are: * Render the active character of the element in an alternative color. 
Note, however, that such rendering may not be visible to a user with color-blindness. 
* Render the active character in a font that contrasts with the font of the balance of the element. 
Note, however, that such rendering may not be visible to users of non-visual access technology. 
* Render the active character with alternative text decoration for the active element. 
Note, however, that such rendering may not be visible to users of non-visual access technology. 
* Render the active character with an alternative voice pitch. 
Note, however, that such rendering will not be accessible to those who are using a non-spoken interface. 
Denis Anson, MS, OTR Assistant Professor Computer Access Specialist College Misericordia 301 Lake Street Dallas, PA 18612 RESNA The International Organization of Assistive Technology Professionals Member since 1989 Denis, could you please include the plain text if possible? 
