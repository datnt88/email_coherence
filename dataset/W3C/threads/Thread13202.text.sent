In accordance with the action item I took on from the f2f, I have published an overview/summary of EDL:- EDL - Evaluation Description Language The best part of the document is the formal description of EDL: "Evaluation Description Language is an RDF based framework for recording, (and possibly transferring and processing) data about automatic and manual evaluations of resources. 
The purpose is to provide a framework for generic evaluation description formats that can we used by "wizards/tools/humans"." The most useful point that is raises is the process aim. 
While I don't want to rush anyone on that, it is something that really does need deciding. 
Another good part of the document is the architecture overview (with diagram!). 
Section 5.2 I think. 
The document is obviously not finished yet (!), and comments etc. are highly welcome. 
Kindest Regards, Sean B. Palmer "Perhaps, but let's not get bogged down in semantics." 
- Homer J. Simpson, BABF07. 
looks good, I'll read it soon, in the mean time, I searched a bit on the web for existing work in the area. 
I found the following of interest Test Case Markup &amp; Cataloging, Tin Man edition on the oasis-open mailing list for xslt conformance. 
Once we have something solid, I will contact this OASIS technical committee for coordination/cooperation (need to do it anyway for the W3C QA activity) While preparing for the document, I took Al's OOP style code [1], and made it into RDF, with neat triples. 
Can't parse it on SiRPAC (server down), but alpha demo versions worked (i.e. parsed):- rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/DC/elements/1.1/" 
xmlns:edl="http://infomesh.net/edl/ns/" xmlns:wcag="http://www.w3.org/WAI/GL/ns" rdf:Property rdf:ID="applicationOf" rdf:about="http://testresource.com/" / rdf:Property rdf:ID="whoSez" rdf:about="http://www.w3.org/WAI/" / rdf:Description rdf:about="#applicationOf" rdf:object="#testDefinition" edl:testDefinition rdf:ID="testDefinition" wcag:cp="http://www.w3.org/WAI/GL/wcag-cp-schema" / rdf:predicate dc:title="true" rdf:ID="#outputnode1" dc:author="#whoSez" / !-- rdf:predicate = the output, rdf:ID = evaluationResultFormalReference -- rdf:predicate dc:title="false" rdf:ID="#outputnode2" dc:author="#whoSez" / I'll add it to the EDL overview (http://infomesh.net/edl/) when I can get the SiRPAC assesed triples out of it! 
At least it gives you something to parse/play around with/laugh at. 
I like it (especially the use of "testcase", and it's nice and recent, but it's a shame they didn't do it in XML Schema. 
Looks like they might have a lot of useful code/ideas to impart. 
[1] Here is Al's original code, for comparison:- applicationOf: ref[preferrablyByURI](testDefinition) whoSez: ref["](agentOrAuthority) [Properties by parts, body of the test evaluation record] testInstanceInfo:includeByRefinement(testDefinition.instanceInfoProfile) containing( forEach(testDefinition.instanceInfoProfile.contentUnderTestFormalReference) includeByReference( testDefinition.instanceInfoProfile.contentUnderTestActualReference forEach( testDefinition.instanceInfoProfile.evaluationResultFormalReference includeByValue(testDefinition.instanceInfoProfile.evaluationResultActualRefe rence) Kindest Regards, Sean B. Palmer "Perhaps, but let's not get bogged down in semantics." 
- Homer J. Simpson, BABF07. 
Sean, This is coming along well. 
Thanks for translating the Al-ese. 
grin/ Could you explain the diagram? 
I'm not sure exactly what the arrows mean. 
Including a description in the document would make the document WCAG accessible (i.e. a description of the image - checkpoint 1.1). 
Also, I'm still having trouble reading RDF. 
Could you walk us through Thanks, --wendy wendy a chisholm world wide web consortium web accessibility initiative madison, wi usa It may have helped if my translation was actually meaningful, but on parsing it thrugh SiRPAC didn't give great triples. 
Hence, I've replaced it with a better version of RDF: much simpler and yet much more effective. 
I've attached it the end of this note [1], and it's also at Oops! Really the arrows just imply a general relationship: "EDL is an RDF language that will use RDF Schemas (and XML Schemas) and that will give rise to ADL and other subset langauges." 
I'll write up a full description tonight and post it tomorrow! 
questions. 
Soem of your questions may have been due to my tacky RDF :-) I hope the following is a bit clearer and simpler. 
Just because Al's OOP was pretty long, it didn't mean that the RDF has to be: it has most of the functionality that Al had to describe built in! 
[1] rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:edl="http://infomesh.net/edl/1.0/#" 
xmlns:wcag="http://www.w3.org/some-wcag-cp-schema#" rdf:Description rdf:about="http://testdoc.org/" edl:whoSez="http://www.w3.org/WAI" !-- rdf:Description = InstanceInfoProfile edl:whoSez = whoSez rdf:about = applicationOf -- !-- edl:result = the output (evaluationResultActualReference), rdf:ID = evaluationResultFormalReference -- Kindest Regards, Sean B. Palmer "Perhaps, but let's not get bogged down in semantics." 
- Homer J. Simpson, BABF07. 
Kind of stuff I'd like to see in EDL: Note: my RDF is largely approximate, I haven't check with an RDF expert what would make more sense in terms of structure/organization (use of bag, person definition or reference, attributes vs. content, etc). 
The important thing to consider at this point is the vocabulary set/definition. 
rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:edl="http://www.w3.org/schema/edl" about: overall subject of test URL edl:TestId id of test being performed URL ex: checkpoint id, css test suite id edl:TestResult Pass, Fail, NotApplicable, UnKnown edl:TestConfidence (optional, default: 3) 1-5 edl:TestMode Auto, Heuristic, Manual edl:TestProgram (optional, default: none, if human examination) URL edl:TestPerson (optional, default: none, if parse done by program) s:Person (name, email, url) or just email? 
edl:TestDetail subelement being evaluated in page URL fragment/Xpointer if possible ex: element with syntax error, img with improper alt, tool module edl:TestComment string Daniel's vocabulary is excellent, and I thought it would be a good idea to write an RDF Schema for it (codifying EDL as it stands):- I have also appended it to the bottom of this note [1] You don't need to consult an expert: just consult SiRPAC Pasting your code in there showed that in all of the triples generated, the subject was http://www.w3.org/ implying that http://www.w3.org/ had a testConfidence of both 3 and 5 etc. (easily fixed). 
Anyway, you are right in saying that that doesn't really matter: it's the vocabulary that matters. 
That's why I prepared the Schema; we already have the structure (we are using RDF: RDF is our structure!). 
Mental note: we need a solid namespace! 
N.B. 
I'm glad that we are following the RDF convention that the NameSpace will point to the Schema (for validation and parsing purposes). 
This appears to be in line with the DesignIssues. 
This looks very much like an XML Schema. 
The advantage to that is that the results will be very clearly defined; the problem with specifying exactly what results you can have for each property is that you can't extend the model much in future. 
What if I wanted to add "Passed 80%" to that list? 
I could do that if you used RDF schemes instead:- Would mean you could have any value you wanted, provided that you acknowledge the fact that it means it the the EDL Test Result for the evaluation target. 
That's why I've written this little RDF Schema for EDL as it stands:- [1] RDF xmlns="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" rdfs:Class rdf:ID="result" rdfs:label="result" rdfs:comment="A result bag." rdfs:isDefinedBy rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#Bag" / Property ID="testID" rdfs:label="testID" rdfs:comment="Identifies the property upon which the evaluation is being performed." 
Property ID="testResult" rdfs:label="testResult" rdfs:comment="Identifies the EDL Test Result for the evaluation target" Property ID="testConfidence" rdfs:label="testConfidence" rdfs:comment="Identifies the confidence to which the evaluation has been performed" Property ID="testMode" rdfs:label="testMode" rdfs:comment="The mode under which the test has been carried out (e.g. auto, manual etc.)" Property ID="testProgram" rdfs:label="testProgram" rdfs:comment="Identifies the test program used to carry out the evaluation" Property ID="testAssertor" rdfs:label="testAssertor" rdfs:comment="The identity of the assetor of the evaluation (i.e. whoSez)" Property ID="testDetail" rdfs:label="testDetail" rdfs:comment="Identifies the subelement being tested in a resource" Property ID="testComment" rdfs:label="testComment" rdfs:comment="A comment about the test" That clearly shows that there is one bag like class, and a host of properties that you can use for each property result. 
Here is an example of some EDL:- rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:edl="http://infomesh.net/edl/rdfschema/" edl:testComment This table is being used for layout /edl:testComment Try pasting that into SiRPAC as usual, and marvel at the triples produced Kindest Regards, Sean B. Palmer "Perhaps, but let's not get bogged down in semantics." 
- Homer J. Simpson, BABF07. 
