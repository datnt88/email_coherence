[Dave - this is CC'd to the http working group, but not to the newsgroups] 
SNIP 
I would be in your debt if you could take things one step further. 
I am in the process of breaking down the browsers into platform specific pages (so if you want to find out the latest version of say a Mac or Windows browser you are not hit with *every* browser for *every* platform. 
The problem is we have no way to automate the task of finding out what platform the browser is running on. 
A usenet no-no but I am following up to my own post... Bill Perry at Spry send me an e-mail (it might be on the usenet as well but my server doesn't show it yet) and passed the following: 
Microsoft Internet Explorer/1.0alpha (Windows 95) Mozilla/1.1b2 (X11; U.S.; OSF1 V3.0 alpha) NCSA Mosaic/2.0.0b2rc7 (Windows x86) NCSA Mosaic/2.6a1 (Unix/X11) 
Do you realize that only Mozilla did this right? 
You _CANNOT_ have spaces in a product name. 
And your parser at BrowserWatch is a little hosed. 
I just sent it: 
And yes Bill is right... after RE-READING the spec it does indeed indicate the product as a word and to quote the spec: The first white space delimited word must be the software product name, with an optional slash and version designator. 
Other products which form part of the user agent may be put as separate words. 
so for a browser to be "up to spec" the would have to use the following: NCSA_Mosaic/2.0.0b1 Macintosh/680x0 WWWLib/ver Proxy/ver NCSA_Mosaic/2.0.0b1 UNIX/X11 WWWLib/ver Proxy/ver Quarterdeck_Mosaic/0.0a3 Windows/16bit WWWLib/ver Proxy/ver Quarterdeck_Mosaic/0.0a3 Windows/32bit WWWLib/ver Proxy/ver TCP_Connect_II/0.0a1 Macintosh/PPC WWWLib/ver Proxy/ver 
Shouldn't the User-Agent field follow 'normal' specs for headers and do something like: 
User-Agent: agent=NCSA Mosaic/2.0.0b1 ; platform=Macintosh/680x0 library=WWWLib/3.0.x ; other=Whatever 
This would make it a little easier for people like Dave to parse the string, without having to worry about order of the arguments, etc. Plus this would allow whitespace (but not ;) in the specifier. 
-Bill P. PS: I just sent my subscription request to http-wg, so please CC me on any responses for a while to make sure I get them. 
Yes, I like Bill's proposal and I've suggested platform in the user-agent field before. 
This would, however, completely break current systems (which tend to look for the text before the first / as user-agent name, and can survive miscreant whitespace) that currently work with HTTP/1.0 requests. 
Can we defer this to 1.1? 
M. Hedlund march@europa.com 
Perhaps we could combine the two? 
User-Agent: NCSA Mosaic/2.0.0b1 ; platform=Macintosh/680x0 ; library=WWWLib/3.0.x ; other=Whatever 
This would still let old services that look for whatever is before the first / to still get the same results. 
And actually is more MIME-y than my first one, since the platform=xxxx, can now be considered parameters/extensions to the base 'NCSA Mosaic' value. 
-Bill P. 
Bill, I too like your proposal (2nd one *is* better) and less breaking... 
Where can we go to propose this (or something like this)? 
Dave, Dave Garaffa | email d-garaffa@ski.mskcc.org 
SKI Computer Support Services | voice (212) 639-8588 "You know you've been using the web WAY too long when... you access your hotlist and the lights in your office dim." 
Yuji Shinozaki yuji@chem.duke.edu 
[this is just to Bill and Dave -- not the http list.] 
Yes, I like this even better. 
My hesitation about asking that it go into HTTP/1.0 stems from: (1) my feeling that we can live without it for 1.0, and that even if we did ask for it in 1.0, 1.1 might be finalized before anyone other than Bill implements it this way :); and 
Well, I haven't looked at what Spyglass 2.0 sends, but the only browsers I know of that send this even remotely correctly right now are Emacs-w3, AIR Mosaic, and a beta version of netscape set to expire in 7 days. 
(2) deference to Roy's workload -- in addition to his effort to finalize HTTP/1.0 before _tomorrow_, he's also just taken on the cleanup of the HTML/2.0 spec. 
Roy, are you insane? 
:) 
I hate to say I think it's too late because I hate that sort of answer, but I guess I would ask that you consider the urgency of this request. 
A conversation on the User-Agent header took place on the http-wg list just recently; see 
Sorry for not perusing this beforehand... Since 'current practice' is so varied (invariably in the wrong direction :), I can go one way or another. 
-Bill P. 
We send something like: Enhanced_Mosaic/2.00 Win32 Spyglass/9 The Enhanced_Mosaic token is sent by all of the versions made by our licensees (all of which have slightly different retail product names). 
The second token varies by platform and processor (so it could be something like Mac_PowerPC), and the third token specifies the vendor of this specific version and the build number of this vendor's customized version. 
Of course, since 2.00 is already shipping, it's a little late for us to change it now, regardless of the outcome of this discussion... Jim Seidman, Senior Software Engineer, Spyglass Inc. 
If anyone wants to see a list of the many things one might get back in the user agent field, feel free to check out holds the results of the not-at-all-scientific survey at 
(2) deference to Roy's workload -- in addition to his effort to finalize HTTP/1.0 before _tomorrow_, he's also just taken on the cleanup of the HTML/2.0 spec. 
Yes, but only in short spurts of time. 
Cleaning up the HTML spec (and then handing it off to Dan) will only take a couple days, and doing it is the only way I can see that it will be acceptable to the IESG within our current window-of-opportunity. 
I am not, however, planning to finalize HTTP/1.0 before tomorrow! 
Although it does seem close to being done, it needs some additional work (on the URI section, for instance) and the appendices regarding "minimum compliance" will likely be a testy subject. 
Fortunately, the majority of the spec seems to be acceptable to the WG. Hopefully, we will be able to submit it to the IESG within days after Danvers. 
I was planning to put together a pre-draft of all the issues discussed regarding what should be in HTTP/1.1 before tonight, but that didn't happen due to unrelated stuff at UCI this week. 
So, I'll do that Monday and advertize it broadly enough so that the attendees at Danvers will have a chance to print it out before the meeting; it will not be a long document, just a guide for discussion. 
So, I haven't gone completely off my rocker -- just balancing on that edge between stability and chaos. 
;-) ....Roy T. Fielding Department of ICS, University of California, Irvine USA 
