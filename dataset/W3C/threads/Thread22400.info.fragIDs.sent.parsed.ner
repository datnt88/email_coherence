(TOP (NP (CD Hi) (RB there) (. .)) )
(TOP (S (S (VP (VBG Throwing) (NP (NN caution)) (PP (TO to) (NP (DT the) (NN wind))))) (, ,) (NP (PRP I)) (VP (AUX 've) (VP (VBN attempted) (S (VP (TO to) (VP (VB make) (NP (NP (DT a) (JJ concrete) (NN implementation)) (PP (IN of) (NP (NP (organization (NNP DOM))) (PRN (-LRB- -LRB-) (NP (NNP 9th) (NNP Dec)) (-RRB- -RRB-))))) (PP (IN in) (NP (location (NNP Java))))))) (, ,) (S (VP (VBG using) (NP (DT the) (JJ current) (NNP Java) (NNP API)))))) (. .)) )
(TOP (S (PP (IN In) (S (VP (VBG doing) (ADVP (RB so))))) (, ,) (NP (PRP I)) (VP (AUX 've) (VP (VBN come) (PP (IN across) (NP (DT a) (JJ few) (NNS difficulties) (CC and) (NNS inefficiencies))))) (. .)) )
(TOP (S (NP (NP (JJS Most)) (PP (IN of) (NP (DT the) (NNS problems)))) (ADVP (RB so) (RB far)) (VP (AUX are) (PP (IN with) (NP (NNP Node) (CC and) (NNP NodeList/NodeEnumerator)))) (. .)) )
(TOP (S (ADVP (RB Thus)) (, ,) (NP (PRP I)) (VP (AUX have) (NP (NP (DT a) (NN couple)) (PP (IN of) (NP (NNS proposals))))) (. .)) )
(TOP (S (S (NP (CD 1.)) (VP (VB Revamp) (S (NP (NNP NodeList/NodeEnumerator)) (ADJP (JJ Rational))))) (: :) (S (S (NP (NNP NodeList)) (VP (VP (AUX is) (NP (DT a) (ADJP (RB very) (JJ simple)) (NNP interface))) (CC and) (VP (AUX is) (ADJP (JJ easy) (PP (TO to) (NP (NN map)))) (PP (TO to) (NP (NP (PRP$ your) (JJ average) (JJ list-based) (NN data) (NN structure)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (AUX is) (NP (DT a) (JJ good) (NN thing)))))))))) (, ,) (CC but) (S (SBAR (IN while) (S (NP (PRP it)) (ADVP (RB generally)) (VP (VBZ allows) (S (NP (PRP you)) (VP (TO to) (VP (VB discover) (NP (NP (JJS most) (NNS things)) (PP (IN about) (NP (PRP it)))))))))) (, ,) (NP (PRP it)) (ADVP (RB definitely)) (VP (AUX does) (RB n't) (VP (AUX do) (NP (PRP it)) (NP (DT the) (ADJP (RBS most) (JJ efficient)) (NN way)))))) (. .)) )
(TOP (NP (NP (NN Example)) (: :) (S (S (NP (NNP Node)) (VP (VBG getPreviousSibling) (-LRB- -LRB-) (-RRB- -RRB-) (SBAR (IN In) (NN order) (S (VP (TO to) (VP (VB retrieve) (NP (NP (DT the) (JJ previous) (NN sibling)) (PP (IN of) (NP (NP (DT a) (NN node)) (VP (VBG using) (NP (DT the) (JJ standard) (NNP DOM) (NNP interface)))))))))))) (, ,) (NP (DT the) (VB follow) (NNS steps)) (VP (MD must) (VP (AUX be) (VP (VBN taken))))) (. .)) )
(TOP (S (NP (NNP i.)) (VP (VBP Get) (NP (NP (NP (DT the) (JJ parent) (NN node) (POS 's)) (NNS children)) (: :) (NP (NNS parent.getChildren))) (-LRB- -LRB-) (-RRB- -RRB-)) (: ;)) )
(TOP (NP (NNP ii) (. .)) )
(TOP (S (NP (NP (NN Cycle)) (PP (IN through) (NP (NP (DT the) (NNS children)) (, ,) (PP (VBG starting) (PP (IN at) (S (VP (VBG 0.) (ADVP (RB Probably)) (NP (NP (DT the) (JJS best) (NN way)) (SBAR (S (VP (TO to) (VP (VB go))))))))))))) (VP (AUX is) (PP (IN with) (NP (NNP NodeEnumerator))) (, ,) (SBAR (IN since) (S (NP (EX there)) (VP (AUX 's) (ADJP (RB no) (JJ telling)) (SBAR (IN if) (S (NP (NNP NodeList.item)) (-LRB- -LRB-) (-RRB- -RRB-) (VP (AUX is) (NP (DT a) (ADJP (RB really) (JJ inefficient)) (NN call))))))))) (. .)) )
(TOP (S (NP (DT This)) (VP (AUX is) (NP (DT the) (ADJP (RB really) (JJ bad)) (NN step)) (, ,) (SBAR (ADVP (RB especially)) (IN if) (S (NP (DT the) (NN node) (S (NP (PRP you)) (VP (AUX 're) (VP (VBG working) (PP (IN on)))))) (VP (VBZ happens) (S (VP (TO to) (VP (AUX be) (NP (NN number) (CD 90000))))))))) (. .)) )
(TOP (S (NP (PRP You)) (ADVP (RB also)) (VP (AUX have) (S (VP (TO to) (VP (VB keep) (NP (NP (NN track)) (PP (IN of) (NP (DT the) (JJ previous) (NN node))))))) (, ,) (SBAR (IN since) (S (NP (EX there)) (VP (AUX 's) (ADVP (RB no)) (VP (VBG going) (PRT (RP back)) (PP (IN with) (NP (NNP NodeEnumerators)))))))) (. .)) )
(TOP (S (NP (NNP Cycling)) (VP (MD could) (VP (VB require) (NP (NP (DT a) (NN LOT)) (PP (IN of) (NP (NP (NN method) (NNS calls)) (SBAR (WHNP (WDT which)) (S (VP (VBP add) (S (VP (POS 's) (NP (ADJP (RB even) (JJR more)) (NN overhead)))))))))))) (. .)) )
(TOP (NP (NNP iii) (. .)) )
(TOP (S (VP (VB return) (NP (DT the) (VBN discovered) (NN sibling))) (. .)) )
(TOP (S (S (NP (EX There)) (VP (AUX are) (NP (NP (JJ similar) (NNS problems)) (PP (IN with) (NP (NN insertBefore) (, ,) (NN removeChild) (CC and) (NN replaceChild)))) (, ,) (SBAR (IN since) (S (S (VP (TO to) (VP (NN insert) (S (VP (VBG using) (NP (DT the) (JJ standard) (NNP DOM) (NNP EditableNodeList))))))) (, ,) (NP (DT an) (NN index)) (VP (AUX is) (VP (VBN required))))))) (, ,) (CC and) (S (NP (NP (DT all)) (SBAR (WHNP (WDT that)) (S (VP (AUX is) (VP (VBN provided)))))) (VP (AUX is) (NP (DT a) (NN reference) (NN node)))) (. .)) )
(TOP (S (ADVP (RB Thus)) (, ,) (NP (PRP I)) (VP (VB propose) (NP (NP (DT an) (JJ improved) (NNP interface)) (SBAR (WHNP (WDT that)) (S (VP (VBZ provides) (PP (IN for) (NP (DT both) (PRN (-LRB- -LRB-) (ADVP (RB fairly)) (-RRB- -RRB-)) (JJ efficient) (NN indexing))))))) (, ,) (SBAR (IN while) (S (ADVP (RB also)) (VP (VBG providing) (NP (NP (DT a) (JJR better) (NN way)) (SBAR (S (VP (TO to) (VP (VB handle) (NP (JJ referenced) (NNS nodes))))))))))) (. .)) )
(TOP (S (NP (NP (DT The) (JJS best)) (SBAR (S (NP (PRP I)) (VP (AUX 've) (VP (AUX been) (ADJP (JJ able) (S (VP (TO to) (VP (VB come) (PRT (RP up)) (PP (IN with)) (ADVP (RB so) (RB far))))))))))) (VP (AUX is) (NP (DT a) (JJ single) (, ,) (JJ hybrid) (NNP interface))) (. .)) )
(TOP (S (NP (PRP It)) (VP (VP (AUX 's) (VP (VBN based) (PP (IN around) (NP (DT a) (JJ cursor) (NN position))))) (, ,) (CC and) (VP (VBZ allows) (NP (DT both) (UCP (JJ indexed) (CC and) (NN reference)) (NN access)) (PP (IN with) (NP (DT a) (ADJP (RB fairly) (JJ simple)) (NNP interface))))) (. .)) )
(TOP (S (PP (IN In) (NP (NP (ADJP (RB very) (JJ sparse)) (NN form)) (: :) (NP (NP (NP (JJ public) (NNP interface) (NNP NodeIterator)) (PRN (-LRB- -LCB-) (NP (NP (CD //) (NNS returns)) (NP (NP (NP (DT the) (NN node)) (PP (IN at) (NP (NP (DT the) (JJ cursor) (NNP Node) (NN getCurrent)) (PRN (-LRB- -LRB-) (NP (NP (-RRB- -RRB-) (NNP Node) (CD toNext)) (-LRB- -LRB-)) (-RRB- -RRB-))))) (: ;) (NP (NNP Node)))) (ADJP (ADJP (JJ toPrevious)) (-LRB- -LRB-)) (-RRB- -RRB-)) (: ;) (NP (NNP Node) (NN toFirst)) (-LRB- -LRB-) (-RRB- -RRB-)) (: ;) (NP (NP (JJ Node) (NN toLast)) (PRN (-LRB- -LRB-) (FRAG (-RRB- -RRB-) (: ;) (NP (NP (NP (NNP Node) (NN toIndex)) (PRN (-LRB- -LRB-) (NP (JJ long) (NN index)) (-RRB- -RRB-))) (: ;) (NP (NP (NNP Node) (NN toNode)) (PRN (-LRB- -LRB-) (NP (NNP Node) (NN node)) (-RRB- -RRB-)) (: ;) (ADJP (ADJP (RB long) (JJ getLength)) (-LRB- -LRB-)) (-RRB- -RRB-)) (: ;) (NP (JJ long) (NN getCurrentIndex)))) (-LRB- -LRB-) (-RRB- -RRB-))) (: ;) (NP (NNP Basicaly))))) (, ,) (NP (DT the) (: ') (S (VP (VB get))) ('' ') (NNS methods)) (VP (AUX do) (RB n't) (VP (VB modify) (NP (DT the) (JJ cursor) (NN location)) (, ,) (SBAR (IN while) (S (NP (DT the)) (VP (POS ') (S (VP (TO to) ('' ') (SBAR (S (NP (NNS methods)) (VP (AUX do))))))))))) (. .)) )
(TOP (NP (NP (DT The)) (: ') (S (VP (TO to) ('' ') (S (NP (NNS methods)) (VP (VB return) (NP (DT the) (NN node)) (SBAR (IN that) (S (NP (PRP they)) (VP (VB end) (PRT (RP up)) (PP (IN at) (PP (IN as) (NP (DT a) (`` ``) (NN convenience) ('' ''))))))))))) (. .)) )
(TOP (S ('' ') (NP (NNP toIndex) (POS ')) (VP (VBZ provides) (NP (DT the) (JJ ordinal) (NN access)) (, ,) (SBAR (IN while) (S (NP ('' ') (NN toNode) ('' ')) (VP (VBZ provides) (PP (IN for) (NP (JJ reference-based) (NN access))))))) (. .)) )
(TOP (S (NP (PRP It)) (ADVP (RB also)) (VP (VBZ allows) (S (NP (DT the) (NN implementation)) (VP (TO to) (VP (VB attempt) (S (VP (TO to) (VP (VB move) (NP (DT the) (NN cursor)) (ADVP (RB around)) (PP (IN in) (NP (NP (DT the) (ADJP (RBS most) (JJ efficient)) (NN way)) (ADJP (ADJP (JJ possible)) (, ,) (ADJP (RB as) (JJ appropriate) (PP (TO to) (NP (DT the) (NN implementation)))))))))))))) (. .)) )
(TOP (NP (NP (NNS Advantages)) (: :) (S (VP (VP (VBZ Simplifies) (CC and) (VBZ combines) (NP (DT the) (CD two) (NNS interfaces))) (, ,) (VP (VBZ allows) (S (NP (DT the) (NN implementation)) (VP (TO to) (VP (VB determine) (NP (NP (DT the) (ADJP (RBS most) (JJ efficient)) (NN way)) (PP (TO to) (NP (NNP traverse)))) (NP (DT the) (NN list)))))) (, ,) (VP (VBZ provides) (ADVP (RBR better)) ('' ') (S (S (VP (VBG referencing) ('' ') (NP (NNS abilities) (NNS Disadvantages)))) (: :) (VP (AUX Does) (RB n't) (VP (VBP map) (ADVP (RB as) (RB readily)) (PP (TO to) (NP (JJ conventional) (NNS data-structures))) (, ,) (PP (IN in) (NP (DT a) (JJ threaded) (NN environment))) (, ,) (SBAR (S (NP (PRP it)) (VP (MD could) (VP (AUX be) (ADJP (JJ difficult) (S (VP (TO to) (VP (VB ensure) (SBAR (IN that) (S (NP (DT the) (NN cursor)) (VP (AUX is) (RB not) (VP (AUXG being) (VP (VBN shifted) (PRT (RP about)) (PP (IN by) (NP (NP (QP (JJR more) (IN than) (CD one)) (NN thread)) (PRN (-LRB- -LRB-) (SBAR (WHNP (WDT which)) (S (VP (MD could) (VP (VB lead) (PP (TO to) (NP (JJ serious) (NNS stuff-ups))))))) (-RRB- -RRB-))))))))))))))))))))))) (. .)) )
(TOP (S (NP (DT The) (NN following)) (VP (AUX is) (NP (NP (DT a) (JJ quick) (NN proposal)) (PP (IN for) (NP (DT an) (JJ Editable) (NN extension))))) (. .)) )
(TOP (S (S (NP (NNP public) (NNP interface) (NNP EditableNodeIterator)) (VP (VBZ extends) (NP (NP (NNP NodeIterator)) (PRN (-LRB- -LCB-) (NP (NP (NN void) (NN addBefore)) (PRN (-LRB- -LRB-) (NP (NNP Node) (NN newNode)) (-RRB- -RRB-)) (: ;) (S (S (VP (VB void) (NP (NP (NN addAfter)) (PRN (-LRB- -LRB-) (NP (NNP Node) (NN newNode)) (-RRB- -RRB-))))) (: ;) (S (NP (NNP Node)) (VP (VB replace) (PRN (-LRB- -LRB-) (NP (NNP Node) (NN newNode)) (-RRB- -RRB-)))) (: ;) (S (NP (NNP Node)) (VP (VB remove) (-LRB- -LRB-))))) (-RRB- -RRB-))))) (: ;) (S (NP (DT Each) (NN method)) (VP (AUX is) (VP (VBN based) (PP (IN on) (NP (DT the) (NN cursor))) (ADVP (RB also))))) (. .)) )
(TOP (S (PP (IN In) (NP (NN fact))) (, ,) (SBAR (IN if) (S (NP (PRP you)) (VP (VB add) ('' ') (NP (NNP Current) (POS ')) (PP (IN after) (NP (DT each) (NN method) (NN name)))))) (, ,) (NP (PRP it)) (VP (AUX 's) (ADJP (RB even) (JJR clearer)) (SBAR (WHNP (WP what)) (S (NP (PRP they)) (VP (AUX do))))) (. .)) )
(TOP (FRAG (NP (NN Proposal) (CD 2)) (: :) (S (VP (VB Add) (NP (DT an) (NNP EditableNode) (NN extension)))) (. .)) )
(TOP (S (ADJP (JJ Rational)) (: :) (NP (NP (NNP Insertion)) (CC and) (NP (NP (NN removal)) (PP (IN of) (NP (NNS children))))) (VP (AUX has) (NP (NP (DT the) (JJ additional) (NN problem)) (PP (IN of) (S (VP (VBG associating) (NP (DT the) (NN parent)) (PP (IN with) (NP (DT the) (NN child)))))))) (. .)) )
(TOP (S (S (NP (DT That)) (VP (AUX is) (, ,) (S (VP (VBG making) (ADJP (JJ sure) (SBAR (IN that) (S (NP (NP (INTJ (WRB when)) ('' ') (NN getParentNode)) (-LRB- -LRB-) (-RRB- -RRB-) ('' ')) (VP (AUX is) (VP (VBN called) (PP (IN on) (NP (DT a) (NN child)))))))))))) (, ,) (S (NP (DT the) (JJ correct) (NN parent)) (VP (AUX is) (VP (VBN returned)))) (. .)) )
(TOP (S (S (VP (VBG Using) (NP (DT the) (JJ standard) (NNP DOM) (NNP interface)))) (, ,) (NP (PRP it)) (VP (AUX is) (ADJP (JJ impossible)) (S (VP (TO to) (VP (VB change) (NP (NP (DT the) (JJ parent) (NN node)) (PP (IN of) (NP (DT a) (NN child)))))))) (. .)) )
(TOP (NP (NP (JJ Possible) (NN Solution)) (: :) (S (VP (VBP Create) (NP (DT the) (NNP EditableNode) (NNP interface)))) (. .)) )
(TOP (S (NP (DT This)) (VP (MD would) (VP (VB provide) (NP (NP (DT a) (JJ standard) (NN way)) (SBAR (S (VP (TO to) (VP (VB edit) (NP (JJ tricky) (NN stuff)) (PP (IN without) (S (ADVP (RB unnecessarily)) (VP (VBG exposing) (NP (PRP it)) (PP (TO to) (NP (DT the) (JJ general) (NN public))))))))))))) (. .)) )
(TOP (NP (NP (DT A) (JJ starting) (NN implementation)) (: :) (S (NP (JJ public) (NNP interface) (NNP EditableNode)) (VP (VBZ extends) (NP (NNP Node) (-LRB- -LCB-) (NN //) (NNS Sets)) (NP (DT the) (NN parent) (NN node)))) (. .)) )
(TOP (S (VP (NNS returns) (NP (NP (DT the) (JJ old) (NN parent)) (, ,) (CC or) (NP (NN null)))) (. .)) )
(TOP (S (NP (NP (JJ Node) (NN setParentNode)) (PRN (-LRB- -LRB-) (NP (NNP Node) (NN newParent)) (-RRB- -RRB-))) (: ;) (NP (DT This)) (VP (VBZ allows) (S (NP (NNP Nodes)) (VP (TO to) (VP (VB attempt) (NP (NP (DT a) (NN cast)) (PP (TO to) (NP (NP (DT a) (JJ standard) (NNP interface)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (AUX is) (ADJP (ADJP (JJR better)) (SBAR (IN that) (S (NP (NP (DT a) (NN stab)) (PP (IN in) (NP (DT the) (NN dark))) (PP (IN at) (NP (PRP$ their) (JJ own) (NN implementation))))))))))))))))) (. .)) )
(TOP (S (ADVP (RB Basicaly)) (, ,) (NP (PRP it)) (VP (VBZ comes) (PRT (RP down)) (PP (TO to) (SBAR (IN whether) (S (NP (NNS implementations)) (VP (AUX are) (VP (VBN expected) (S (VP (TO to) (VP (VB cast) (PP (TO to) (NP (JJ non-standard) (NNS implementations))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB provide) (NP (JJ basic) (NN functionality))))))))))))))) (. .)) )
(TOP (S (ADVP (RB Overall)) (, ,) (ADVP (RB IMHO)) (, ,) (NP (DT that)) (VP (AUX is) (NP (DT a) (JJ bad) (NN thing))) (. .)) )
(TOP (S (S (NP (NNP DOM)) (VP (AUX is) (VP (VBG trying) (S (VP (TO to) (VP (AUX be) (ADJP (RB language/processor/browser/implementation) (JJ agnostic)))))))) (, ,) (CC and) (S (NP (DT that)) (VP (VBZ means) (SBAR (IN that) (S (NP (LST (DT a) (-RRB- -RRB-)) (NP (RB as) (JJ little) (VBG casting)) (PP (IN as) (ADJP (JJ possible)))) (VP (MD should) (VP (AUX be) (VP (VP (VBN required)) (CC and) (PRN (NP (NN b)) (-RRB- -RRB-)) (SBAR (WHNP (WDT what) (NN casting)) (S (VP (AUX is) (VP (VBN required) (SBAR (S (VP (MD should) (VP (AUX be) (PP (TO to) (NP (JJ other) (, ,) (JJ standard) (, ,) (NNS interfaces)))))))))))))))))) (. .)) )
(TOP (S (PP (IN In) (NP (NP (DT the) (NN case)) (PP (IN of) (S (VP (VBG setting) (NP (DT the) (NN parent))))))) (, ,) (NP (EX there)) (VP (AUX are) (ADVP (RB quite)) (NP (DT a) (JJ few) (JJ good) (NNS reasons)) (SBAR (WHNP (WRB why) ('' ') (NN setParentNode)) (S (-LRB- -LRB-) (-RRB- -RRB-) ('' ') (VP (AUX is) (RB n't) (PP (IN in) (NP (DT the) (JJ standard) (NNP Node) (NNP interface)))))) (, ,) (SBAR (IN since) (S (NP (PRP it)) (VP (AUX 's) (ADJP (JJ easy)) (S (VP (TO to) (VP (NN stuff) (PRT (RP up))))))))) (. .)) )
(TOP (S (CC But) (NP (EX there)) (VP (MD should) (VP (AUX be) (NP (NP (DT a) (JJ standard) (NN way)) (SBAR (S (VP (TO to) ('' ') (VP (VB guess) ('' ') (PP (IN at) (NP (NP (DT a) (JJ possible) (NN route)) (PP (IN of) (NP (NN action)))))))))))) (. .)) )
(TOP (S (ADVP (RB Anyway)) (, ,) (VP (VBZ appologies) (PP (IN for) (NP (DT the) (NN length)))) (. .)) )
(TOP (NP (NP (NNS Thanks)) (PP (IN for) (NP (PRP$ your) (NN time))) (. .)) )
(TOP (NP (person (NNP David) (NNP Peterson)) (. .)) )
(TOP (S (NP (PRP You)) (VP (MD might) (VP (AUX be) (ADJP (JJ glad) (S (VP (TO to) (VP (VB know) (SBAR (IN that) (S (NP (NP (NN something)) (PP (ADVP (RB very) (RB much)) (IN like) (NP (PRP$ your) (NN proposal)))) (VP (AUX was) (VP (VBN dicussed) (PP (IN in) (NP (DT the) (JJ recent) (NNP Boston) (NNS people))))))))))))) (. .)) )
(TOP (S (S (NP (PRP We)) (VP (VBD called) (S (NP (PRP them)) (`` ``) (NP (JJ smart) (NNS iterators)) ('' '')))) (, ,) (CC and) (S (NP (PRP they)) (VP (MD will) (ADVP (RB probably)) (VP (VB appear) (PP (IN in) (NP (DT the) (NN DOM))) (PP (IN in) (NP (NP (DT the) (JJ next) (JJ major) (NN revision)) (PP (IN of) (NP (DT the) (NN draft)))))))) (. .)) )
(TOP (S (NP (NP (DT The) (JJ main) (NN point)) (PP (IN of) (NP (NN contention)))) (VP (AUX was) (SBAR (IN whether) (S (NP (PRP we)) (VP (MD should) (VP (AUX have) (NP (NP (NNS iterators) (NNP *) (CC and) (NNP *) (NNS nodelists)) (, ,) (CC or) (RB just) (NP (NNS iterators)) (ADVP (RB alone)))))))) (. .)) )
(TOP (S (SBAR (IN While) (S (ADVP (RB sometimes)) (NP (PRP it)) (VP (VBZ makes) (NP (NN sense)) (S (VP (TO to) (VP (VB force) (NP (DT an) (JJ either/or) (NN choice)))))))) (NP (PRP it)) (VP (AUX is) (ADVP (RB sometimes)) (ADJP (JJ useful) (S (VP (TO to) (VP (VB remember) (SBAR (IN that) (S (NP (NP (DT ALL)) (PP (IN OF) (NP (DT THE) (JJ ABOVE)))) (VP (AUX is) (NP (DT a) (JJ reasonable) (NN answer)) (ADVP (RB sometimes)))))))))) (. .)) )
(TOP (S (PP (TO To) (NP (DT each) (PRP$ their) (JJ own))) (: :) (S (NP (DT some) (NNS designers)) (VP (VBP want) (NP (DT an) (JJ immutable) (NN list)))) (CC and) (S (NP (NNS others)) (VP (MD will) (VP (VB want) (NP (DT a) (NN test)) (PP (IN for) (NP (NN membership)))))) (. .)) )
(TOP (S (NP (PRP It)) (VP (AUX is) (ADJP (PRN (, ,) (S (NP (PRP I)) (VP (MD would) (VP (VB argue)))) (, ,)) (JJ impossible)) (S (VP (TO to) (VP (VB come) (PRT (RP up)) (PP (IN with) (NP (NP (DT the) (JJ single) (NN approach)) (SBAR (WHNP (WDT which)) (S (VP (MD will) (VP (VB satisfy) (NP (NN everybody)) (SBAR (IN unless) (S (ADVP (RB sometimes)) (NP (PRP we)) (VP (VP (VBP include) (NP (NP (DT all)) (PP (IN of) (NP (DT the) (NNS alternatives))))) (CC and) (VP (VB let) (S (NP (NNS people)) (VP (VB make) (NP (PRP$ their) (JJ own) (NNS choices)))))))))))))))))) (. .)) )
(TOP (S (NP (NNP les)) (VP (VB cuff) (NP (NNP nf.ca)))) )
