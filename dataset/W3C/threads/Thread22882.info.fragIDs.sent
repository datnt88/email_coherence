The spec says: 
"The EventTarget interface is implemented by all Nodes in an implementation...". 
However, EventTarget does not derive from Node, and there are no methods to create an association. 
For Level 2, is this something extra that must be provided by the implementation? 
Yes. The idea is that if your implementation supports the event module then every node should implement this interface. 
I just can't see the coupling of a Node to an EventTarget. 
There is no direct coupling. 
They are different interfaces that need to be implemented by the same classes. 
Arnaud Le Hors - IBM Cupertino, XML Technology Group 
I'm currently undertaking an implementation of the proposed DOM L2 UI Event spec for TclDOM - the Tcl language binding for the DOM. 
It all looks fairly straight-forward, except for one thing: how is an Event Listener associated with a particular node? 
Specifically, an EventTarget? 
The spec says: 
"The EventTarget interface is implemented by all Nodes in an implementation...". 
However, EventTarget does not derive from Node, and there are no methods to create an association. 
For Level 2, is this something extra that must be provided by the implementation? 
I can see how an EventListener is associated with an EventTarget (via addEventListener). 
The Event interface has a field for the current node, which I suppose could be initialised to a particular 
node before calling dispatchEvent. 
I just can't see the coupling of a Node to an EventTarget. 
Please illuminate me! 
Regards, Steve Ball Steve Ball | Swish XML Editor | Training &amp; Seminars Zveno Pty Ltd | Web Tcl Complete | XML XSL Steve.Ball@zveno.com 
+-----------------------+--------------------- 
I would suggest using standard language found elsewhere in the document, e.g., "this interface is obtained by means of binding-specific casting on an instance of the Node interface." 
Arnaud Le Hors 
Yes. The idea is that if your implementation supports the event module then every node should implement this interface. 
There is no direct coupling. 
They are different interfaces that need to be implemented by the same classes. 
Arnaud Le Hors - IBM Cupertino, XML Technology Group 
