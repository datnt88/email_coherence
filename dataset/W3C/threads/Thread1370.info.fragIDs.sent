I'm trying to figure out how the following scenario would work: Say there are two people, Lisa and Chuck, and they each want to have a server-side workspace for a small project. 
Let's assume Lisa creates the initial workspace: MKWORKSPACE /users/lisa/projectX/ Then populates it with the project files. 
PUT /users/lisa/projectX/makefile PUT /users/lisa/projectX/main.c PUT /users/lisa/projectX/proj.h Then place them under version control: VERSION-CONTROL /users/lisa/projectX/makefile VERSION-CONTROL /users/lisa/projectX/main.c VERSION-CONTROL /users/lisa/projectX/proj.h So, workspace /users/lisa/projectX now contains three version-controlled resources: /users/lisa/projectX/makefile /users/lisa/projectX/main.c /users/lisa/projectX/proj.h At this point, how do I create the workspace for Chuck? 
One thing that seemingly might make sense is to just do: COPY /users/lisa/projectX TO /users/chuck/projectX Depth: infinity But, there are no defined COPY semantics for workspaces. 
Alternately, it seems Chuck would need to do: MKWORKSPACE /users/chuck/projectX/ Then create new version-controlled resources for the existing version histories: VERSION-CONTROL /users/chuck/projectX/makefile VERSION-CONTROL /users/chuck/projectX/main.c 
VERSION-CONTROL /users/chuck/projectX/proj.h 
Do I have this right? 
- Jim 
Jim: Your conclusions are correct. 
In particular, as you surmise, you do not use COPY. 
This is deliberate, because a "copy" does not share the same "version history" as the resource it was copied from because they are two different resources. 
But you do use VERSION-CONTROL. 
In particular, you would use PROPFIND (Depth:Infinity) to find out the DAV:checked-in and DAV:checked-out versions in /users/lisa/projectX. 
Then you would use a VERSION-CONTROL requests with the appropriate version URL in the request body to initialize the version-controlled resources in /users/chuck/projectX. 
Or if /users/lisa/projectX is under baseline control, you could initialize /users/chuck/projectX with a baseline from /users/lisa/projectX in a single request. 
Cheers, Geoff I'm trying to figure out how the following scenario would work: Say there are two people, Lisa and Chuck, and they each want to have a server-side workspace for a small project. 
Let's assume Lisa creates the initial workspace: MKWORKSPACE /users/lisa/projectX/ Then populates it with the project files. 
PUT /users/lisa/projectX/makefile PUT /users/lisa/projectX/main.c PUT /users/lisa/projectX/proj.h Then place them under version control: VERSION-CONTROL /users/lisa/projectX/makefile VERSION-CONTROL /users/lisa/projectX/main.c VERSION-CONTROL /users/lisa/projectX/proj.h So, workspace /users/lisa/projectX now contains three version-controlled resources: /users/lisa/projectX/makefile /users/lisa/projectX/main.c /users/lisa/projectX/proj.h At this point, how do I create the workspace for Chuck? 
One thing that seemingly might make sense is to just do: COPY /users/lisa/projectX TO /users/chuck/projectX Depth: infinity But, there are no defined COPY semantics for workspaces. 
Alternately, it seems Chuck would need to do: MKWORKSPACE /users/chuck/projectX/ Then create new version-controlled resources for the existing version histories: VERSION-CONTROL /users/chuck/projectX/makefile VERSION-CONTROL /users/chuck/projectX/main.c 
VERSION-CONTROL /users/chuck/projectX/proj.h 
Do I have this right? 
- Jim 
How would you do this? 
I'm not seeing how this would work from reading the spec. 
- Jim 
From: Jim Whitehead [mailto:ejw@cse.ucsc.edu] 
How would you do this? 
I'm not seeing how this would work from reading the spec. 
You get the baseline with a DAV:expand-property report or a couple of PROPFIND's (get the DAV:version-controlled-configuration of /users/lisa/projectX, and then get the DAV:checked-in baseline of that configuration). 
Then apply BASELINE-CONTROL to /users/chuck/projectX, specifying that baseline. 
Cheers, Geoff 
