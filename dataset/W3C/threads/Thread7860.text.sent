Not being bamboozeled enough by DeltaV, I thought I would read the ACL spec reported recently. 
The good news (to me), is it made sense and seemed quite clear etc. Otherwise I am so far gone I cannot tell the difference! 
;^) One comment - it says that XML namespace semantics are the same as those of WebDAV. 
Talking to people locally seems to indicate that the WebDAV interpretation of XML namespaces is not conformant to the XML namespace recommendation. 
Should ACL base the namespace interpretation on WebDAV, or on the XML namespaces specification? 
The ACL spec explicitly references the WebDAV RFC by number, so if a new WebDAV spec came along supporting the "official" XML namespace interpretation, then the spec would be out of date already. 
(Not a big deal - and probably no solution.) 
The difference is WebDAV says you concatenate the namespace URI to the element name to form a single string. 
What I have been told of the official XML namespace recommendation is that the two values must be kept separate during comparisons. 
It is not valid to concatenate them. 
One syntax that has been used to help represent this is {DAV:}owner to represent the element 'owner' in the 'DAV:' namespace. 
Other minor points - some places use principle URLs of /_acl/users/foo and others use /users/foo. 
Both are probably correct. 
I am wondering if it might avoid confusion if the same format is used throughout the document. 
I saw it and wondered if they were the same sort of URL or something different. 
5.6.1 had a *very* minor typo (/_acl/users and /_acl_groups). 
The last '_' should be a slash. 
(Ok, just prooving I read it all 8-) General comment - its seems reasonably complex. 
This may be necessary, but there is a fair bit to implement. 
Some more motivation may be nice. 
For example, I was not sure why inheritance was useful. 
Also the description of principles and collection principles was pretty confusing until the example called some of the collection principles GRPA and GRPB. 
Some more examples of how it may be used helps clear things up. 
Yes, and I noticed the slightly contraversial inclusion of something else in D:resourcetype other than just D:collection/ . 
Alan RFC2518 has to be read in conjunction with the issues list cum addendum which is at (in particular see XML_NS) Regards, Tim A while back, I added the following text to the "Notational Conventions" section of the versioning protocol: When an XML element type in the "DAV:" namespace is referenced in this document outside of the context of an XML fragment, the string "DAV:" will be prefixed to the element type. 
We probably should add this to the ACL document as well, to avoid concerns of this kind. 
Cheers, Geoff Not being bamboozeled enough by DeltaV, I thought I would read the ACL spec reported recently. 
The good news (to me), is it made sense and seemed quite clear etc. Otherwise I am so far gone I cannot tell the difference! 
One comment - it says that XML namespace semantics are the same as those of WebDAV. 
Talking to people locally seems to indicate that the WebDAV interpretation of XML namespaces is not conformant to the XML namespace recommendation. 
Should ACL base the namespace interpretation on WebDAV, or on the XML namespaces specification? 
The ACL spec explicitly references the WebDAV RFC by number, so if a new WebDAV spec came along supporting the "official" XML namespace interpretation, then the spec would be out of date already. 
(Not a big deal - and probably no solution.) 
The difference is WebDAV says you concatenate the namespace URI to the element name to form a single string. 
What I have been told of the official XML namespace recommendation is that the two values must be kept separate during comparisons. 
It is not valid to concatenate them. 
One syntax that has been used to help represent this is {DAV:}owner to represent the element 'owner' in the 'DAV:' namespace. 
Other minor points - some places use principle URLs of /_acl/users/foo and others use /users/foo. 
Both are probably correct. 
I am wondering if it might avoid confusion if the same format is used throughout the document. 
I saw it and wondered if they were the same sort of URL or something different. 
5.6.1 had a *very* minor typo (/_acl/users and /_acl_groups). 
The last '_' should be a slash. 
(Ok, just prooving I read it all 8-) General comment - its seems reasonably complex. 
This may be necessary, but there is a fair bit to implement. 
Some more motivation may be nice. 
For example, I was not sure why inheritance was useful. 
Also the description of principles and collection principles was pretty confusing until the example called some of the collection principles GRPA and GRPB. 
Some more examples of how it may be used helps clear things up. 
Yes, and I noticed the slightly contraversial inclusion of something else in D:resourcetype other than just D:collection/ . 
Alan 
