Unless anyone has a strong objection, I plan to drop support for Ant 1.4 and attempt to replace the calls to sed (and maybe patch) with built-in tasks in Ant 1.5. 
Ant 1.5 was released in July. 
Fine with me. 
I suppose we won't be able to be backward compatible with the first release though, since the buildfile will change? 
Let's indicate this properly in the attached documentation and I'll update the online documentation accordingly once we decide to go for it. 
So, should the setup to use be Ant 1.5 Xerces 2.1.0 Xalan 2.4.0 ? 
Does this work on everyone's machines? 
I think I'm still encountering problems with Xalan. 
There is a null pointer bug that I've been remiss for not submitting. 
I've been using Saxon 6.5.2. 
Sigh. 
I keep meaning to run the DOM TS through Xalan, but I haven't had the cycles. 
PLEASE submit specific Bugzilla reports for any problems that you find -- that's the best way to make sure they get properly prioritized and addressed (and to keep them from falling through the cracks). 
Joe Kesselman / IBM Research 
When I run "ant dom2-html-dist" I get a java.lang.OutOfMemoryError. 
The error occurs when within "dom2-html-gen-java". 
My classpath has Saxon 6.5.2 Ant 1.5 Xerces 2_1_0 I think I'm still encountering problems with Xalan. 
There is a null pointer bug that I've been remiss for not submitting. 
I've been using Saxon 6.5.2. 
Yep that one is touchy and approaches the default maximum heap size. 
I could run it with Ant 1.5, but not with Ant 1.4. 
If you are running a Sun JVM, you should be able to control the maximum heap size by setting environment variable ANT_OPTS to -Xmx100m. 
(60m or less on my machine will cause the build to fail). 
I was able to successfully run "ant dom2-html-dist". 
I was still getting a memory error when I set ANT_OPTS to -Xmx100m so I set ANT_OPTS to -Xmx1000m and it ran successfully. 
I unzipped the dom2-html.zip 
and was able to run the ecmascript tests in both Mozilla and IE. 
I also was able to run the java tests. 
I ran the tests by executing the following command when I was in the java directory: java -classpath dom2-html.jar 
junit.textui.TestRunner 
org.w3c.domts.level2.html.TestXercesHTML 
Before I could run the tests I had to put Curt's modified xmlParserAPIs.jar and xercesImpl.jar in the java directory and also had to add the xhtml1-*.dtd 
and xhtml*.ent 
files to the dom2-html.jar 
file. 
The xhtml* files were in the ecmascript/tests directory when the file dom2-html.zip 
was unzipped. 
Yep that one is touchy and approaches the default maximum heap size. 
I could run it with Ant 1.5, but not with Ant 1.4. 
If you are running a Sun JVM, you should be able to control the maximum heap size by setting environment variable ANT_OPTS to -Xmx100m. 
(60m or less on my machine will cause the build to fail). 
