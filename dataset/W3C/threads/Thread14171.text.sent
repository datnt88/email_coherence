This is great feedback Wendy, thanks for getting it! 
With DHTML, you can now load one large image but only allow a portion of that image to show through using a clipping window. 
I use this clipping often to simulate multiple button animations but using only one image. 
An ALT tag here would only be relevant once and not represent all the possible button displays. 
He can simply set the alt attribute of the IMG object to a different value when he switches to a different image. 
can be added such as long description. 
An alternate to ALT tag is needed to allow for design control. 
From a pure design stand point I am unwilling to create a default site design to accommodate everyone needs, but I am willing to modify the site on the fly using dynamic page methods if I can detect the users specific needs, devices, etc. 
This would be tremendous. 
I agree. 
There needs to be a CSS attribute to control the rendering of the ALT and TITLE attributes. 
Possible values would be: TOOLTIP or NONE. 
That way, the author can control the visual appearance, and if required, the user can override it. 
For purposes of accessibility, the tool tip doesn't matter - that the information is there and available in the object is the key (exposed by DHTML/DOM/MSAA whatever). 
The reason the tool tip exists currently is to make the author more aware of the attribute and to test for it's presence easily. 
You can control the rendering of the "alt" and "title" attributes with CSS2: a) Get the value of the attribute with an attribute selector b) Use :before or :after to insert the text (whose style can be specified) before or after the element's content. 
This is, of course, different from the current tooltip mechanism which does not involve/change the document's rendering at all. 
With relative positioning, the 'visibility' property, and scripts, you can even simulate a tooltip effect. 
- Ian Ian Jacobs (jacobs@w3.org) 
But the tooltip does change the document's rendering. 
It hides portions of the document temporarily to comment on other portions of the document. 
The tooltip is a move, not a display region. 
It is a transient behavior. 
This sort of a method is not in the device model of the the SCREEN display medium in CSS2 even 'though it is a cliche of the GUI screen at the present time. 
This illustrates how far the W3C standards are from addressing the world in which the Web actually operates. 
Al Tooltips are an implementation issue, and therefore in the purview of UA, not PAGL. 
And for what it's worth, my personal view is that rather than being a core CSS attribute it should be a preference in a UA which implements them. 
Charles McCathieNevile I agree. 
There needs to be a CSS attribute to control the rendering of the ALT and TITLE attributes. 
Possible values would be: TOOLTIP or NONE. 
That way, the author can control the visual appearance, and if required, the user can override it. 
For purposes of accessibility, the tool tip doesn't matter - that the information is there and available in the object is the key (exposed by DHTML/DOM/MSAA whatever). 
The reason the tool tip exists currently is to make the author more aware of the attribute and to test for it's presence easily. 
--Charles McCathieNevile - mailto:charles@w3.org 
W3C Web Accessibility Initiative - http://www.w3.org/WAI 545 Technology sq., Cambridge MA, USA CO:: That user CmCN:: AG:: Chuck's approach, where the author proposes and the user disposes, is better than trying to say "this is document and that is presentation." 
Human communication just doesn't divide up that neatly. 
We should have learned as much from the mess involving ALT, TITLE, tool-tips and image box or none around the ALT. 
The best choice of text to put in ALT given the Netscape 3 image show/hide protocol is different text from the best choice given what Lynx 2.7 is going to do with it. 
Regardless of what the W3C document says, the ALT or TITLE text string is defined, in the user's perception, by how it is presented (transient or persistent, boxed or not) and we can't define document elements and attributes in a way which is totally independent of how these components get presented. 
Things we relegate to style will blur or outright change the way that readers and authors peceive the [document fragment] structures that we are talking about. 
CSS is on the right track in that it realizes we need to have a framework where the author can be thoroughly anal about how her document looks and the user can still re-map properties as required to make the information accessible. 
I am not saying that the user shouldn't have a UI in the browser to control this, but that the author is going to care and should be encouraged to fine tune the default behavior by working with well-posed flexible structures that can be re-bent under circumstances the author did not anticipate without breaking the essential connections and distinctions in the content. 
Al 

Tooltips are an implementation issue, and therefore in the purview of UA, not PAGL. 
And for what it's worth, my personal view is that rather than being a core CSS attribute it should be a preference in a UA which implements them. 
I agree that it's not a PAGL issue, but I hope the list will indulge me another comment. 
I disagree that it should be a UA preference, because then the author loses control of the visual appearance of the page. 
In theory, the author should be able to set every possible rendering attribute, and then the user should have the option of overriding that to fit their viewing needs. 
If it's solely a UA option, the author cannot control the default and then might be tempted not to use ALT or TITLE because the possibility of the appearance of the ToolTip on most screens would ruin the appearance of their page (which was the original complaint). 
If the author can set a attribute that hides the display of the ToolTip, they will be assured that the visual appearance of their pages will not be affected, except in the cases where the user has overridden their desire because of a particular need. 
-Chuck Sorry everyone not interested... 
In practise I would imagine the tooltip display being a proprietary extension to CSS. 
And when I think about it more I can imagine it actually becoming a possible value of the display property. 
(Status might be another one, with wider application...) Which could lead to the following CSS2 fragment: (very hypothetical and ill-considered. 
But in screen media would reverse the normal behaviours...) @media screen { A[TITLE] { display: status-line } A[HREF] { display: tool-tip } @media aural { A[TITLE] { speak-before: 'title:' } A[HREF] { speak-before: 'link to:' } @media tty { A[TITLE] { display: status-line } A[HREF] { display: tool-tip } Charles McCathieNevile 

Tooltips are an implementation issue, and therefore in the purview of UA, not PAGL. 
And for what it's worth, my personal view is that rather than being a core CSS attribute it should be a preference in a UA which implements them. 
I agree that it's not a PAGL issue, but I hope the list will indulge me another comment. 
I disagree that it should be a UA preference, because then the author loses control of the visual appearance of the page. 
In theory, the author should be able to set every possible rendering attribute, and then the user should have the option of overriding that to fit their viewing needs. 
If it's solely a UA option, the author cannot control the default and then might be tempted not to use ALT or TITLE because the possibility of the appearance of the ToolTip on most screens would ruin the appearance of their page (which was the original complaint). 
If the author can set a attribute that hides the display of the ToolTip, they will be assured that the visual appearance of their pages will not be affected, except in the cases where the user has overridden their desire because of a particular need. 
-Chuck --Charles McCathieNevile - mailto:charles@w3.org 
W3C Web Accessibility Initiative - http://www.w3.org/WAI 545 Technology sq., Cambridge MA, USA 
