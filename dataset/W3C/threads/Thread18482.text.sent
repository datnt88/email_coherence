I think the raltionale for them being P2 is that in the case of redirects the author had not intended the page with the redirect to be viewed anyway, so that not having access was not considered to be a P1 issue. 
So I thin this one does not need to be changed. 
For automatic client side refreshes this probably needs to be changed to a P1. 
One techniques is that the stop loading button stops the refreshes and the user can refresh manually. 
We should see if this already works with current browsers. 
Jon my problem with tinkering with refreshes still holds. 
there is content that will be missed if we control the refresh and that which will be missed if we do not. 
I think this should be kicked around a bit with the content people and perhaps pf or a group that sets rules for causing the refreshes in the first places? 
I think then if you are going to require the user agent to interact in this way that you must also require that it store the refreshed content and allow it to be retrieved as needed. 
I think the raltionale for them being P2 is that in the case of redirects the author had not intended the page with the redirect to be viewed anyway, so that not having access was not considered to be a P1 issue. 
So I thin this one does not need to be changed. 
For automatic client side refreshes this probably needs to be changed to a P1. 
One techniques is that the stop loading button stops the refreshes and the user can refresh manually. 
We should see if this already works with current browsers. 
Jon Either way there is a risk of losing something. 
The proposal is that the user gets to decide whether they miss out on getting updates every n seconds, as prpoposed by the author, or whether tey miss out on getting a chance to actually find out what is in the content, a constraint imposed by their own system. 
I use lynx specifically for this purpose - it converts the refresh into a link that requires user activation rather than making it happen automatically. 
I think Jon's suggestions here are very sound. 
Charles McCN my problem with tinkering with refreshes still holds. 
there is content that will be missed if we control the refresh and that which will be missed if we do not. 
I think this should be kicked around a bit with the content people and perhaps pf or a group that sets rules for causing the refreshes in the first places? 
I think then if you are going to require the user agent to interact in this way that you must also require that it store the refreshed content and allow it to be retrieved as needed. 
I think the raltionale for them being P2 is that in the case of redirects the author had not intended the page with the redirect to be viewed anyway, so that not having access was not considered to be a P1 issue. 
So I thin this one does not need to be changed. 
For automatic client side refreshes this probably needs to be changed to a P1. 
One techniques is that the stop loading button stops the refreshes and the user can refresh manually. 
We should see if this already works with current browsers. 
Jon Location: I-cubed, 110 Victoria Street, Carlton VIC 3053, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) ah, have you had the experience then where you miss important content by not clicking the refresh fast enough? 
Either way there is a risk of losing something. 
The proposal is that the user gets to decide whether they miss out on getting updates every n seconds, as prpoposed by the author, or whether tey miss out on getting a chance to actually find out what is in the content, a constraint imposed by their own system. 
I use lynx specifically for this purpose - it converts the refresh into a link that requires user activation rather than making it happen automatically. 
I think Jon's suggestions here are very sound. 
Charles McCN my problem with tinkering with refreshes still holds. 
there is content that will be missed if we control the refresh and that which will be missed if we do not. 
I think this should be kicked around a bit with the content people and perhaps pf or a group that sets rules for causing the refreshes in the first places? 
I think then if you are going to require the user agent to interact in this way that you must also require that it store the refreshed content and allow it to be retrieved as needed. 
----- Original Message ----- I think the raltionale for them being P2 is that in the case of redirects the author had not intended the page with the redirect to be viewed anyway, so that not having access was not considered to be a P1 issue. 
So I thin this one does not need to be changed. 
For automatic client side refreshes this probably needs to be changed to a P1. 
One techniques is that the stop loading button stops the refreshes and the user can refresh manually. 
We should see if this already works with current browsers. 
Jon 409 134 136 617 258 5999 Location: I-cubed, 110 Victoria Street, Carlton VIC 3053, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) Well, I have to choose. 
I either get the most up to date information, or I get to read it. 
The most common use case for me is cricket scores. 
I actually switch - the first time I look, I spend a lot longer than is noramlly given, to get an idea of what is going on. 
Then I do a refresh and get the latest data. 
Then I decide how much of the intervening stuff I need to read. 
If you think that the fall of a wicket or two is important information (it is in terms of understanding the impact on the game) then yes, I have missed important information by getting to understand what was going on. 
But only for a limited amount of time, and I could not have used the information at all if I had not been able to slow the refresh. 
Charles McCN ah, have you had the experience then where you miss important content by not clicking the refresh fast enough? 
Either way there is a risk of losing something. 
The proposal is that the user gets to decide whether they miss out on getting updates every n seconds, as prpoposed by the author, or whether tey miss out on getting a chance to actually find out what is in the content, a constraint imposed by their own system. 
I use lynx specifically for this purpose - it converts the refresh into a link that requires user activation rather than making it happen automatically. 
I think Jon's suggestions here are very sound. 
Charles McCN my problem with tinkering with refreshes still holds. 
there is content that will be missed if we control the refresh and that which will be missed if we do not. 
I think this should be kicked around a bit with the content people and perhaps pf or a group that sets rules for causing the refreshes in the first places? 
I think then if you are going to require the user agent to interact in this way that you must also require that it store the refreshed content and allow it to be retrieved as needed. 
----- Original Message ----- I think the raltionale for them being P2 is that in the case of redirects the author had not intended the page with the redirect to be viewed anyway, so that not having access was not considered to be a P1 issue. 
So I thin this one does not need to be changed. 
For automatic client side refreshes this probably needs to be changed to a P1. 
One techniques is that the stop loading button stops the refreshes and the user can refresh manually. 
We should see if this already works with current browsers. 
Jon 409 134 136 617 258 5999 Location: I-cubed, 110 Victoria Street, Carlton VIC 3053, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) Location: I-cubed, 110 Victoria Street, Carlton VIC 3053, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) 
