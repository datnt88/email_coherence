All these lines of evidence converge to imply that entity references in HTML documents should surface as single characters in Text nodes, just like the equivalent character references. 
I suggest that an editorial-level correction be made to DOM Level 1 to say so. 
I agree. 
Ray Whitmer rayw@netscape.com 
hello, I'm a bit confused about entities in the DOM. 
I'm German, so I use a lot of special characters like &amp;auml; in my pages. 
Are all these characters single nodes in the DOM? 
(They don't 
appear as childNodes anywhere, but neither do attributes.) And when I create a TextNode, can I use those entities there? 
I.e., is it allowed to call document.createTextNode("m&amp;auml;h") 
or document.createTextNode("m?h") or do I have to create an entity node (or an "entity reference" node - I didn't really understand what that is) and somehow append it to the TextNode? 
Mozilla M16 and IE5/win98 seem to cope well with special characters in TextNodes. 
However, IE5/MacIntosh get's even more confused then me when creating TextNodes with special characters (no matter if I "escape" them as "&amp;auml;" or not): It displays rather weird text and tends to crash soon. 
Is this a bug in IE5/Mac or my mistake? 
Any clarification would be appreciated. 
Wolfgang. 
(Lauren: FAQ?) 
This depends on whether you've asked your parser to retain Entity Reference nodes or not. 
These names are defined by your DTD rather than by XML, so they _are_ entities. 
If you've asked for Entity Reference nodes to be created in the DOM, that means that each of these takes two nodes --- one for the Entity Reference, and one for the Text node containing the character. 
If you've told the DOM generator (parser or other code) to "expand" the entity references, then the Text node would appear... and then would be 
merged with adjacent Text nodes when a normalize() operation is done. 
Note that the DOM requires that XML processors -- parsers -- normalize documents before they are presented to the user; other applications may not do so. 
If you want to avoid the inefficiency of using two nodes for a single character, there are ways to do so. 
One is to use a numeric character reference (such as &amp;#34;) to encode the character, rather than a declared entity; these are always converted directly into characters. 
An easier solution would be to use an encoding that directly supports the language that you are writing in, so you can simply type the intended characters and have the XML parser read them correctly; check whether your XML parser supports the encoding used for German. 
And when I create a TextNode, can I use those entities there? 
All DOM API calls operate in terms of UTF-16 character strings. 
These can directly represent most characters in most languages, which would allow you to say document.createTextNode("m?h") 
When you write the document out as XML syntax, your serializer is responsible for checking the output encoding and deciding whether it can write the character directly or must use a numeric character reference. 
Do _not_ write document.createTextNode("m&amp;auml;h") 
... that puts the ampersand into the document's contents, and is equivalent to writing m&amp;38;auml;h in your XML file. 
An Entity node declares an entity; an Entity Reference node is a reference to that entity. 
If you really want to create an entity reference (&amp;auml;) in your document and have it written out that way, you must create an Entity Reference node document.createEntityReference("auml") 
and insert that. 
You don't have to create the children of the EntityReference; they are copied automatically from the Entity previously stored in the DocumentType. 
Note that in DOM Level 2 there is still no portable way to manually declare new Entities; we expect to address that in DOM Level 3's "Content Model" chapter. 
Hope that helps... Joe Kesselman / IBM Research 
And whether the document being represented is in fact XML or HTML. 
HTML DOMs don't even need to expose objects implementing either Entity or EntityReference. 
Further, it is explicitly stated that in HTML all attribute values are simple strings with no EntityReference nodes. 
(The same is not said for the content of elements, however, and perhaps should be.) There is also no way to create a new EntityReference node in an HTML document. 
All these lines of evidence converge to imply that entity references in HTML documents should surface as single characters in Text nodes, just like the equivalent character references. 
I suggest that an editorial-level correction be made to DOM Level 1 to say so. 
John Cowan cowan@ccil.org 
C'est la` pourtant que se livre le sens du dire, de ce que, s'y conjuguant le nyania qui bruit des sexes en compagnie, il supplee a ce qu'entre eux, de rapport nyait pas. 
-- Jacques Lacan, "L'Etourdit" 
Joe, John, thanks a mill for your help! 
So it must be a bug in Internet Explorer 5/MacIntosh, for it keeps printing nonsense instead of the intended characters even when I use the numeric character reference and set the charset of the HTML-document to iso-8859-1. 
Best, Wolfgang. 
hello, the question how to handle special characters within createTextNode() seems to be sufficiently discussed in this thread. 
Nevertheless, I didn't understand the solutions of the problem. 
Therefore I want to state the problem again as simple as possible. 
Consider the following sample code and focus on 'createTextNode': function showForall() { var t = document.createTextNode('&amp;forall;'); 
document.body.appendChild(t); 
What I want to see after load is the respective 'forall' Symbol. 
But what I actually get is '&amp;forall;' as a (8 character long) text. 
Also so document.createTextNode('&amp;#8704;') 
doesn't yield the 'forall' Symbol. 
And document.createEntityReference('&amp;#8704;') is an javaScript error: "Object cannot be created in this context" I didn't understand the following hints: 
How do I ask my parser to retain Entity Reference? 
How do I tell the DOM generator to "expand" entity references? 
Perhaps I should mention some additional information for an appropriate answer: 1) I am not an DOM-expert. 
So an answer with simple sample code would help me much. 
2) I am using Mozilla (more precisley: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0rc2) 
Gecko/20020510) Thanks for any help! 
Immanuel 
This is correct operation. 
The DOM API assumes you're already talking about the content of the document, not its XML syntactic representation. 
If you create a text node containing the &amp; character using the DOM calls, it's assumed you really mean the &amp; character, _NOT_ the &amp; introducing a numeric character reference or entity reference. 
To insert a special character, simply insert the character directly into the text string, in its UTF-16 form. 
I don't know enough Javascript to tell you how to code that, but it should be possible. 
To insert an entity reference, you want to use the createEntityReference call rather than the createTextNode call. 
var t = document.createEntityReference('forall'); 
This may not work if your DOM doesn't know which DTD you're using and/or hasn't retained a list of which entities are being defined (and thus doesn't know what "forall" represents). 
See the docs for your parser. 
Joe Kesselman / IBM Research 
