Just to get the creative juices flowing, here's a strawman proposal for xml:lang: A literal with xml:lang is turned into an anonymous node with xml:lang and rdf:value properties. 
becomes: [ rdf:value [ xml:lang "en" ; rdf:value "foo" ] ] . 
or in psuedo-N-Triples: _:desc rdf:value _:literal . 
_:literal xml:lang "en" . 
_:literal rdf:value "foo" . 
Thoughts? 
Problems? 
[ "Aaron Swartz" ; mailto:me@aaronsw.com ; http://www.aaronsw.com/ 
] Two problems: 1. 
By using the above approach you are effectively building on (and endorsing) anonymous nodes, and the rdf:value property. 
I don't think we have a agreed understanding on those two things yet. 2. Applications cannot just ignore xml:lang. 
Instead, the apps must deal with a special case of identifying the "anonymous" node and tracing its rdf:value property. 
Sergey Aaron, See also TimBL's thoughts on this topic: in which he argues that language should be represented as a property whose value is the literal concerned; e.g. rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:play="http://example.org/play#" xmlns:lang="http://example.org/lang#" 
This is Tim's section 3 example, tweaked to pass parsing by the online SirPAC validator (http://www.w3.org/RDF/Implementations/SiRPAC/). 
Having done this, it becomes clearer that the language tag is being represented here as a data type (rdf:type), NOT as a property relating the name and the literal string which is what the associated text says. 
Tim... the above seems more akin to your subsequent comments about datatypes as interpretation properties, but still doesn't seem to capture the idea of "interpretation property" as described. 
Did you really mean this: rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:play="http://example.org/play#" xmlns:lang="http://example.org/lang#" #g Graham Klyne Baltimore Technologies Strategic Research Content Security Group 
