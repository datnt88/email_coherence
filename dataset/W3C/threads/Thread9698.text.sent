XML Schema has not only the 9 or so primitive types, but also bunch of facets for user-defined types ala "integers between 5 and 10". 
I don't think any of the recent datatyping proposals allows me to express that datatype. 
Is that a problem[ftf]? 
I suggest, tentatively, that it is. 
I suggest it isn't. 
Heres why: we shouldn't expect to be able to *express* a datatype in RDF. 
The actual definitions of the datatypes is done outside RDF, and RDF then *uses* the datatypes so defined (assuming they have somehow been given a special URI which can be used by an RDF engine to retrieve the relevant machinery). 
So if someone defines a datatype like, say xsdd:integersBetweenFiveAndTen, then the RDF datatyping should work with that as well as with any other datatype. 
What that URI needs to 'supply' is well-defined: 1. 
A recognizer for members of the lexical space of the datatype. 
2. A computable mapping from members of the lexical space to (some canonical representation of) members of the value space. 
and that's all, in principle, though it wouldn't hurt to have a few others as well, eg an identity recognizer for lexical forms if (2) is expensive to compute. 
[crud; I was gonna write a bit more, but I've got another meeting. 
I think I better send this now, though, before I put it off for another three weeks...] [ftf] http://www.w3.org/2001/sw/RDFCore/20020225-f2f/#d-2002-02-26-3 
Dan Connolly, W3C http://www.w3.org/People/Connolly/ IHMC(850)434 8903 home 40 South Alcaniz St.(850)202 4416 office phayes@ai.uwf.edu 
XML Schema has not only the 9 or so primitive types, but also bunch of facets for user-defined types ala "integers between 5 and 10". 
I don't think any of the recent datatyping proposals allows me to express that datatype. 
Is that a problem[ftf]? 
I suggest, tentatively, that it is. 
[crud; I was gonna write a bit more, but I've got another meeting. 
I think I better send this now, though, before I put it off for another three weeks...] [ftf] http://www.w3.org/2001/sw/RDFCore/20020225-f2f/#d-2002-02-26-3 
Dan Connolly, W3C http://www.w3.org/People/Connolly/ 
I don't see any problem here, since the semantics of the datatype are fully opaque to RDF -- in the same manner that URI Scheme semantics and syntax are opaque to RDF. 
You are free to define a datatype in XML Schema using any of the facets available, and then associate that datatype with nodes in an RDF graph. 
You don't define the datatype in RDF, you simply specify which datatype serves as the basis for interpretation. 
Your extra-RDF application will need to understand the actual datatype to make use of or determine the validity of RDF statements referencing that datatype, and it may use XML Schema to do that, by evaluating the definition of the datatype as expressed in XML Schema to determine if a given lexical form is valid, etc. 
Likewise, you can use any other language to define the semantics and lexical space of a datatype, even English ;-) and still use that datatype with RDF, so long as it is identified by a URI. 
That's what it means for RDF to both support XML Schema datatypes while also supporting other datatype formalisms. 
Eh? Cheers, Patrick Yes, I'm free to do all sorts of stuff. 
I suppose I misspoke: it's not that the recent datatypes proposals prevent me from doing this; it's just that they don't support me in doing it either. 
They don't provide for interoperability among people who want to do this. 
Let me rephrase: is it a problem that there's no specific support, including examples, for using XML Schema datatype facets? 
e.g. "integers between 5 and 10" or "strings that match '\d\d\d-\d\d\d\d'". 
Dan Connolly, W3C http://www.w3.org/People/Connolly/ 
