Hi, I'm new to HTMLtidy and I have seen a couple a references to a shortcoming of HTML tidy. 
It does not look like you can get clean HTML to XHTML conversion, the script tag being one of the culprit. 
XTML requires a CDATA section within a script block, HTMLtidy neither complies nor discard the script . 
I know I am not the first one to face the issue ( cf. the "Notes on pending work" ) My question is : What is the status on this problem ? 
TIA, Philippe Thats not correct. 
XML does not know content model CDATA for Elements, so the content of a script element is interpreted as markup. 
To keep the script readable, one could use a CDATA section, but there is no must to do so, you can use if (a  b) too. 
Further, this is only necessary if the script includes characters, that need to be escaped. 
The problem is, that current browsers don't know CDATA sections and ignore the script completly. 
I've suggested the following to get around this: !-- -- ![CDATA[ / !-- for (var i=0; i  10; i++) { ... } // -- ! 
]] Tidy should offer an option to extract the script and put it into a seperate file. 
Bj?rn H?hrmann ^ mailto:bjoern@hoehrmann.de ^ http://www.bjoernsworld.de am Badedeich 7 ? 
Telefon: +49(0)4667/981ASK ? 
http://bjoern.hoehrmann.de 
25899 Dageb?ll # PGP Pub. 
KeyID: 0xA4357E78 # http://learn.to/quote 
[!]e "Everything we see or seem is but a dream within a dream" - E.A. Poe ok, I may have been wrong. 
My situation is : I took a notoriously badly written page ( http://www.6sens.com/ 
, sorry it's a French site ). 
I wanted to XHTMLize it. 
As real-world "validation", I tried to open the page both with "XMLspy" from Icon Information System and to "LoadXML" using microsoft parsers. 
The output from HTMLtidy failed to load in both cases (I just glanced at the XHTML specs, I admit.) I did some corrections by hands, and I mananaged to load it. 
Examples of corections: enclosed script content in CDATA, adding a white space in empty comments ( ie : from ---- to -- -- ) . 
I do understand that a lots a w3c specs implementations are rather fuzzy. 
I do not want to argue about it. 
( especially, because I am likely to be wrong quite often...) Was I am looking for is a clear Status Report on HTMLtidy XHTML compliance ( both as compared to the specs and as compared to realworld "validation" ). 
Ther are 2 items above to add on the to-do list . 
Anyone wanting to centralize the datas ( or is it already done somewhere ? 
) thanks Bjoern, regards to you all, Philippe | XTML requires a CDATA section within a script block, Thats not correct. 
XML does not know content model CDATA for Elements, so the content of a script element is interpreted as markup. 
To keep the script readable, one could use a CDATA section, but there is no must to do so, you can use if (a  b) too. 
Further, this is only necessary if the script includes characters, that need to be escaped. 
The problem is, that current browsers don't know CDATA sections and ignore the script completly. 
I've suggested the following to get around this: !-- -- ![CDATA[ / !-- for (var i=0; i  10; i++) { ... } // -- ! 
]] Tidy should offer an option to extract the script and put it into a seperate file. 
Bj?rn H?hrmann ^ mailto:bjoern@hoehrmann.de ^ http://www.bjoernsworld.de am Badedeich 7 ? 
Telefon: +49(0)4667/981ASK ? 
http://bjoern.hoehrmann.de 
25899 Dageb?ll # PGP Pub. 
KeyID: 0xA4357E78 # http://learn.to/quote 
[!]e "Everything we see or seem is but a dream within a dream" - E.A. Poe Examples of corections: enclosed script content in CDATA, adding a white space in empty comments ( ie : from ---- to -- -- ) . 
Presumably from !---- to !-- -- That most certainly should not be necessary. 
The definition of a comment in SGML is basically / !(--([^-]|-[^-])*--\s*)* / In particular, ! is a comment, !--foo-- --bar-- is a comment, and !---- is a comment. 
XML is supposed to make precisely two changes to this: (a) there must be exactly one chunk (b) trailing space is not allowed after that chunk, So the definition of a comment in XML is / !--([^-]|-[^-])*-- / I do understand that a lots a w3c specs implementations are rather fuzzy. 
I do not want to argue about it. 
( especially, because I am likely to be wrong quite often...) "Rather fuzzy" is an extremely generous way of describing quite a few of them; the people who worked out how to formally specify software appear to have lived in vain. 
But in the case of XML comments, there is not the slightest fuzziness. 
Here is the actual rule: [15]Comment = ' !--' ((Char - '-') | ('-' (Char - '-')))* '-- ' There is admittedly a note: [E27]Note that the grammar does not allow a comemnt ending in --- . 
This is *not* an additional constraint; it is supposed to be explaining what the *grammar* already forbids. 
As it stands, it is wrong, but the associated example makes it clear that the author of the note did not have !---- in mind. 
Nor, for that matter, is there anything in XHTML that requires a script to have its content enclosed in CDATA. 
There *is* advice, appendix C.4, that says C.4 Embedded Style Sheets and Scripts. 
Use external style sheets if your style sheet uses  or &amp; or ]] or --. Use external scripts if your script uses  or &amp; or ]] or --. 
Note that XML parsers are permitted to silently remove the contents of comments. 
Therefore, the historical practice of "hiding" scripts and style sheets within comments to make the documents backward compatible is likely to not work as expected in XML-based implementations. 
Section 4.8 says that you *MAY* use CDATA, not that you *must*: 4.8 Script and Style elements In XHTML, the script and style elements are declared as having #PCDATA content. 
As a result,  and &amp; will be treated as the start of markup, and entities such as  and &amp;amp; will be recognized as entity references by the XML processor to  and &amp; respectively. 
Wrapping the content of the script or style element within a CDATA marked section avoids the expansion of these entities. 
CDATA sections are recognized by the XML processor and appear as nodes in the Document Object Model, see Section 1.3 of the DOM Level 1 Recommendation [DOM]. 
An alternative is to use external script and style documents. 
Since most browsers out there do NOT support XHTML, I wonder whether using external scripts would not be the simplest device? 
There is a real incompatibility between HTML and XHTML here. 
In HTML, we have which says that the *only* significant markup within a SCRIPT is the / that closes it. 
But in XHTML, since XML does not support CDATA elements, we have which says that markup *may* occur inside a SCRIPT . 
External scripts have got to be *the* simplest way to work around this! 
