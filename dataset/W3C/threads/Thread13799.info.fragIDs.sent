Topic 3. How could information be coded into the HTML so that the User Agent knows that a table is for data or page layout or something else?? 
If such information is exposed to the User Agent then it could do different things based on this markup. 
Starling Access Services "Access A World Of Possibility" e-mail: info@starlingweb.com 
URL: http://www.starlingweb.com 
again, two things: what are the information we want to convey: data, layout (but isn't it officializing it to give it a code name?), 
row-first, col-first. 
and how to mark it up: one way is the HTML class attribute, another might be RDF again, but we don't have it quite ready yet. 
same dilemma: which AU or UA is going to implement it using class when RDF is the next hot thing ? 
A table used for layout is still presenting data. 
It is even presenting data in a tabular format. 
A UA which can linearise tables (Lynx has a basic system for this, which works even better with layouts, which are usually structurally very simple, than complex tabular data) will not have a problem linearising most layout tables. 
The problems wth tables are: 1. Screen readers don't cope 2. The use of them is based on an assumption about the visual nature of the UA as a rectangular space in which to layout content. 
This breaks down for audio UAs, for small screen UAs, etc. 3. They increase bandwidth requirements and the complexity of HTML unnecessarily. 
So I don't see that the concern is over marking them as layout. 
The concern is over convincing people that they do not render well, and that they should not be used for layout. 
The fact that people will insist on using them since there is 'no alternative' is not relevant. 
There is an alternative, which is to produce very accessible websites. 
They are generally not everything the designer wants. 
But there are designers who feel that door handles are unattractive too. 
My 2c worth Charles 
Tables for layout that are written well degrade gracefully to non-table browsers. 
(One can be witty and claim that these browsers have a mechanism to linearize them) I think that as far as authoring guidelines, one should define what "written well" above means, and emphasize that writing even well written tables for layout is strongly deprecated in favor of stylesheets. 
As for user agents, one can suggest that user agents will have an option to "turn tables off", i.e., to display the table's elements (TABLE, TBODY, TR, TD, TH, etc.) like regular blocks in the normal flow. 
This could be usability improving also for sighted users with low resolution displays, and/or for those with slow connection who want to receive the table's content incrementally. 
I think it may give a wrong impression--or excuse--to authors to use tables for layout if WAI recommends to mark them in a particular way. 
Also it is an unjust burden to require user agents to apply sophisticated display schemes that distinguish between tables with different purposes. 
Regards, Nir Dagan Assistant Professor of Economics Universitat Pompeu Fabra Barcelona (Spain) Website: http://www.econ.upf.es/%7Edagan/ 
