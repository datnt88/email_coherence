Title: An Extension to HTTP : Digest Access Authentication Author(s): J. Franks, A. Luotonen, P. Leach, J. Hostetler, P. Hallam-Baker Filename: draft-ietf-http-digest-aa-rev-00.txt 
Pages: 18 Date: 1997-07-30 The protocol referred to as 'HTTP/1.0' 
includes the specification for a Basic Access Authentication scheme. 
This scheme is not considered to be a secure method of user authentication, as the user name and password are passed over the network as clear text. 
A specification for a different authentication scheme is needed to address this 
severe limitation. 
This document provides specification for such a 
scheme, referred to as 'Digest Access Authentication'. 
Like Basic, Digest access authentication verifies that both parties to a 
communication know a shared secret (a password); unlike Basic, this verification can be done without sending the password in the clear, 
which is Basic's biggest weakness. 
As with most other authentication protocols, the greatest sources of risks are usually found not in the core protocol itself but in policies and procedures surrounding its use. 
This is the final draft of any document under this name. 
Digest and 
Basic Authentication from the HTTP/1.1 specification will be combined 
and issued as a document titled 'Authentication in HTTP'.Our intent 
is that RFC 2068 and RFC 2069 will go to draft standard as a pair of documents, but with all authentication schemes (Digest and Basic) documented together in a single place. 
This transition has not yet taken place. 
Internet-Drafts are available by anonymous FTP. 
Login wih the username "anonymous" and a password of your e-mail address. 
After logging in, type "cd internet-drafts" and then "get draft-ietf-http-digest-aa-rev-00.txt". 
A URL for the Internet-Draft is: ftp://ds.internic.net/internet-drafts/draft-ietf-http-digest-aa-rev-00.txt 
Internet-Drafts directories are located at: Africa:ftp.is.co.za Europe: ftp.nordu.net 
ftp.nis.garr.it 
Pacific Rim: munnari.oz.au US East Coast: ds.internic.net 
US West Coast: ftp.isi.edu 
Internet-Drafts are also available by mail. 
Send a message to:mailserv@ds.internic.net. 
In the body type: "FILE /internet-drafts/draft-ietf-http-digest-aa-rev-00.txt". 
NOTE:The mail server at ds.internic.net 
can return the document in MIME-encoded form by using the "mpack" utility. 
To use this feature, insert the command "ENCODING mime" before the "FILE" command. 
To decode the response(s), you will need "munpack" or a MIME-compliant mail reader. 
Different MIME-compliant mail readers exhibit different behavior, especially when dealing with "multipart" MIME messages (i.e. documents which have been split up into multiple messages), so check your local documentation on how to manipulate these messages. 
Below is the data which will enable a MIME compliant mail reader implementation to automatically retrieve the ASCII version of the Internet-Draft. 
ENCODING mime FILE /internet-drafts/draft-ietf-http-digest-aa-rev-00.txt 
Gentlemen, I support your goal of replacing the clear-text password method in HTTP with something stronger, but I wonder about why you didn't consider something stronger. 
Several password-based protocols are known that are much better than the one described in this document: 
So far, the above introduction seems good. 
However, this last sentence seems like an attempt to justify use of a weak method, and as such it ignores the fact that relative risks vary greatly in different situations. 
It may very well be the case that the "greatest sources of risk" *are* in the core protocol as described, *and* can be prevented by an ammended proposal. 
Only some of these risks are discussed in the document, and no mention is made of stronger protocols that can solve such problems. 
This seems inappropriate for a document focused on security issues. 
FYI, the site at http://world.std.com/~dpj/ describes several modern password protocols. 
-- David 
To quote from the draft: "Digest Authentication does not provide a strong authentication mechanism. 
That is not its intent. 
It is intended solely to replace a much weaker and even more dangerous authentication mechanism: Basic Authentication. 
An important design constraint is that the new authentication scheme be free of patent and export restrictions." 
The necessity to avoid any patent and export restrictions is fundamental. 
In particular, protocols which make any use of public-key techniques are not acceptable. 
John Franks Dept of Math. 
Northwestern University john@math.nwu.edu 
Why? As I understand export regulations, no authentication-only method is export controlled. 
As for patent restrictions, have you actually done an investigation into these? 
I'd like to better understand your concerns here, with regard to both patents and public-key techniques. 
To rule out the entire category of public-key assisted methods seems extremely limiting, and a clear rationale for such a fundamental restriction is certainly missing from the draft. 
John, I find it absurd to categorically preclude "any use of public-key techniques" for password authentication in HTTP. 
In light of the importance of HTTP, and the fact that passwords are widely-used on the web, I question the motivation behind "Digest Authentication". 
Why limit HTTP password verification to a broken method? 
If you're going to the trouble to change it, why not do it right? 
But at least your explanation was more revealing of intent than the draft. 
It is enlightening that the authors of the draft would choose to be more restrictive than the U.S. government, which has never limited export of strong password authentication. 
So again, I ask: Why impose these restrictions? 
The authors have failed to investigate whether freely available or cheaply available strong alternatives exist, so your excuse about "fundamental restrictions" just doesn't cut it. 
I can only presume that the vendors behind this proposal would rather support a weak password method than a strong one, in line with an unwritten agenda. 
To be specific, I can name EKE, SPEKE, "secret public-key" techniques, OKE, SRP-2, and several others. 
In the spirit of honesty and openness, I'll do my part. 
My motivation is in part due to the fact that I'm the author of one of these methods. 
It is wrong for the authors of this document to dismiss the entire class of strong techniques without adequate explanation. 
To do so without even acknowledging their existence is a true public disservice. 
-- David David Jablon dpj@world.std.com 
Please stop. 
The specification does _not_ precluded other mechanisms for password authentication for HTTP. 
Many web sites use stronger mechanisms for security in HTTP, usually by using https with alternative methods of logging in. 
All we've done is set the minimum to be something that everyone can do, easily. 
This is a topic that we addressed at length in the past. 
The topic is closed. 
There will be no further discussion in the HTTP working group of 'alternatives to digest authentication'. 
There *was* another working group on HTTP security, and they also closed. 
If you want to start work on this topic, on raising the requirement for HTTP security to be a stronger authentication mechanism, I suggest you call for a BOF and try to get the interested implementor community to come. 
If you wish to suggest some editorial change to the wording of the draft that goes beyond what is already there, then please make some specific suggestions; however, check your conspiracy theories at the door. 
Thanks, Larry (as chair, HTTP-WG) 
Assume what you like, but please note that the draft is the product of this working group, not an individual, and that the first two authors listed are from non-commercial organizations. 
This working group certainly has no unwritten agenda - we have enough trouble trying to define the written one! 
Are you asserting, as an author of one of the above, that it is free of patent and other intellectual-property restrictions? 
That's the criterion that's been offered as to the rejection of public-key techniques, not concerns about US export laws. 
I'm not a patent attorney, just a programmer whose interests lie partly in this area, but from what I've read it's essentially impossible to work in public-key cryptography without running into a patent belonging to either RSA or Diffie. 
If you've come up with something so fundamentally different that it doesn't infringe on them, and have chosen to share that technique with the rest of us without restriction, I thank you, and I expect that the working group would listen calmly and reasonably to whatever proposals you might have to offer. 
Those of us who've been following and participating in the debates to date have certainly never maintained that Digest Authentication was the be-all and end-all, rather simply that it is better than Basic Authentication and freely implementable and distributable. 
Ross Patterson Sterling Software, Inc. VM Software Division 
I stand corrected. 
Larry's the working group chair, so he's obviously right about the scope of our charter at this point. 
Ross Patterson Sterling Software, Inc. VM Software Division 
Larry, Phillip, Paul, John, and other authors of the draft, I apologize for raising an old issue with the WG, and for implying that the work behind this was not well considered. 
I just looked at the draft as a standalone document, and did not find clear support or explanation for the resulting design. 
The combined responses of John, Paul, Phillip, and Larry provide a much clearer reason for the design decisions, however I might disagree with the outcome. 
My concern comes from the fact that the rationale for restriction to this method is not captured in the draft. 
So, without further insult, or re-hashing of old issues, I'd suggest that the draft be amended slightly to include more of the careful considerations of the authors. 
(specific suggestions at end) 
In questioning this rationale (in obviously a too-nasty way) I stimulated the following responses: 
1. Digest Auth standardization was started a fair while ago, and even then its intent was to standardize an existing practice. 
Many potentially interesting changes were shot down because they weren't backwards compatible. 
This should be captured in the draft. 
It definitely makes the work sound more diligent. 
Paul: 
2. The statements in the draft about weakness were made primarily to appease certain parties who would not agree that any shared secret authentication mechanism deserved to be called "strong", due to the difficulty of distributing the secrets. 
I think including accurate factual statements of weakness is very important. 
Opinions on proper forms of certification and key distribution tend to be a little more controversial, and I'd avoid using "strong" and "weak" in this regard in such documents. 
Paul: 
3. I, at least, believe there is a place for shared secret based authentication. 
Many sites in the web to not use authentication on anything except credit card pyment pages because Basic is stupid, and SSL slows down there sites by orders of magnitude. 
Thus, we were explicitlu after a shared secret mechanism, and hence, for the purpose for which Digest was intended, it was not our responsibility to explore public key alternatives. 
... and Phillip: 
I can assure David that those involved have a great deal of knowledge of and expertise in the use of public key encryption techniques. 
Even if there were absolutely no patent restrictions I would still want to have a shared secret scheme available. 
Without special hardware a public key operation takes several hundred milliseconds on comparatively upscale hardware platforms. 
It is simply not acceptable that the only secure authentication mechanism restrict such servers to one or two hits per second. 
The speed requirement should be in the draft. 
Paul: 
4. At the time we were writing the spec, we knew of no public key based mechanism that was appropriately unencumbered by patent restrictions, and in all the time the spec has been out, no one until now has suggested one to us. 
To simply blatantly claim we were derelict in our duty is boorish. 
Ok. Sorry I implied you guys were neglectful, and I hope you'll not hold my rudeness against me. 
I probably wouldn't have said what I said if the draft contained a full rationale. 
It seems important to capture careful reasoning in print to insure that future readers also don't jump to conclusions. 
Ok. But "conspiracy theories"? 
My statement was simply that the draft had a "hidden agenda", which is true, for readers who didn't follow the working group from the start. 
Frank, Paul, and Philip have made the agenda clear in their responses. 
I think the draft should incorporate their points. 
Specific suggestions The method was chosen for a variety of reasons, as discussed in the draft, but the discussion should also include at least one paragraph that incorporates the following reasons (restated appropriately by the authors): 1) to be compatibile with and standardize on existing practice. 
2) because implementations of public-key based methods were found to be too slow. 
3) because no unpatented public-key alternatives were known to the authors, and 4) because patent licensing was out of the question, because of (...) 5) to avoid export regulations (specifically ...) Also, there is discussion about brute-force attack on the encrypted password database, but a potentially larger threat is an eavesdropper performing a brute-force attack on the challenge and response messages. 
The document should describe this weakness too. 
Thanks. 
David Jablon dpj@world.std.com 
