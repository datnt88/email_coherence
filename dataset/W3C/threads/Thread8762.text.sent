Hi all, I have two questions about the Canonical XML Interoperability Report [1]: 1. 
What does the following sentence (1. processor requirement) mean: "Use processors that support UTF-8 and UTF-16 and that translate to the UCS character domain". 
Does this mean that canonicalizing UTF16-XML-Files must be possible (and that the result is UTF8) or what does "translation to UCS domain" mean? 
2. Question: How did you check the 3rd processor requirement: "Implementations MUST NOT be implemented with an XML parser that converts relative URIs to absolute URIs." . 
How should a parser (like Xerces) convert a URI? 
Does a parser understands what a URI is? 
Christian [1] http://www.w3.org/Signature/2000/10/10-c14n-interop.html 
Hi, From: Christian Geuer-Pollmann geuer-pollmann@nue.et-inf.uni-siegen.de 
Date: Mon, 30 Jul 2001 09:26:05 +0200 Message-ID: 52752887.996485165@clouseau 
I think it's taking the text to text view of canonicalization. 
In the first part it is just repeating the requirement in the XML 1.0 Recommendation that all XML parser must understand UTF-8 and UTF-16 encodings. 
In the second phrase, it is syaing that if your parser understands some non-UCS encoding, it must translate that to UCS code pooints. 
Don't know about a parser but a schema verifier would, I think. 
If it knows that some attribute value is a URI, who knows what it might do to it... knowledge can be a dangerous thing. 
Donald Hi Donald, OK, this relates to Schema. 
My question is: Do we have some test vectors (like 3.1-3.7 
examples in the c14n spec) that define the correct behaviour? 
I'm looking for test vectors (correct and bad ones) that allow me to ensure functionality of my implementation. 
For instance I want to ensure that an input like throws an CanonicalizationException because of the use of relative URIs. 
Do we have something like this for the above topic? 
Question to IBM and IAIK: How did you test this behaviour? 
Regards, Christian Christian, Our C14n implementation scans through all namespace nodes of the input nodeset and tests if any of them has a relative URI as its value. 
If yes, a C14N exception will be thrown. 
Obviously it cannot be tested if the underlying parser convertes relative in absolute namespace URIs. 
This has to be tested seperatly with the employed parser. 
We use Xerces, and Xerces does no conversion. 
Regards, Gregor Hi Gregor, Yes, I do so, too. 
BTW, only in the input nodeset of in the complete document? 
I thought about the 3rd processor requirement in [1], not the one about relative NS URIs (the 2nd requirement) , but about conversion of general URIs (what ever this is). 
[1] http://www.w3.org/Signature/2000/10/10-c14n-interop.html 
Regards, Christian Christian, Yes, our implementation scans only namespace nodes that are in the input nodeset. 
The requirement applies to namespace nodes. 
A search in the mailing list archive led to explanations from John Boyer [1]. 
[1] Liebe Gruesse/Regards, DI Gregor Karlinger Phone +43 316 873 5541 Institute for Applied Information Processing and Communications Austria 
