Hi I need to serialize forrests into the output (not to a file). 
There are more than four different ways to do this, but all I know are are clumsy and verbose. 
I suggest to add something like xsl:serialize to XSLT 2. Use cases: All cases where some tree or forrest is to be included in the result tree or forrest, in serialized form. 
This can be desired when the result of a transformation is to be included in a program listing. 
Real world example: The content will move, so here's a pair of relevant snippets: (snightly formatted and shortened) # What it looks like in the browser: ################################# Literal Test 9 failed Input Desired Output Output foo # The XHTML source ################################################### pre code simpara literalfoo/literal /simpara /code /pre pre code p class="simpara" span class="literal"foo/span /p /code /pre pre code p class="simpara" !-- literal not yet fully supported -- foo /p /code /pre Example showing the suggested feature: $snippet is a forrest, for example the result of a transformation: Serialized it looks like this: Pseudo code showing what I suggest: xsl:output method="xml" indent="no" omit-xml-declaration="yes" / # Output: ############################################################ programlisting pf/p pf/p /programlisting Definition of xsl:serialize: xsl:serialize format = qname type-information = "strict" | "lax" | "preserve" | "none" xsl:serialize has the same attributes as xsl:result-document, except href. 
It serializes its content just as xsl:result-document does; But the result is output in place, instead of being written to a file. 
[an example like the above] Alternatively, instead of adding xsl:serialize, the definition of xsl:result-document could be changed, to include something like "If the href attribute is present, the result of evaluating the xsl:result-document instruction is an empty sequence. 
This means it does not contribute any nodes to the result of the content constructor it is part of. 
If the href attribute is not present, the result of the serialization is output in place, and not written to a file. 
This means it contributes one text node [correct?] 
to the result of the content constructor it is part of." Tobi Thanks for the comment. 
As you probably know, Saxon includes an extension function saxon:serialize which does essentially what you are describing. 
I have a similar requirement when including the "schema for XSLT" in the HTML rendition of the XSLT 2.0 working draft. 
But my instinct is not to include this feature in the spec this time round. 
It's probably something that should go into EXSLT first, to see whether vendors and users find it attractive, before putting it in the core specification. 
Michael Kay Software AG Hi Didn't know that ([1]), thanks for the tip, and for the implementation :) (more below) If you need, implemented, and use it, and if I need and will use it, then that's already some relevant evidence of its usefulness IMHO :) I'm sure that others will find it useful too. 
Already having it in Saxon, and hopefully seeing it in EXSLT would be OK for now (what do the EXSLT people on this list say?). Personally I believe that, as a basic and general mechanism, it belongs in the spec, but I can understand that you want to keep the spec small. 
What do you think about the syntax?: 
What do you think of (instead of adding xsl:serialize) changing the definition of xsl:result-document, to include something like "If the href attribute is not present, the result of the serialization is created in place, and not written to a file. 
This means it contributes one text node to the result of the content constructor it is part of." TIA, Tobi [1] 
