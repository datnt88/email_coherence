<s> I've just looked over the most recent DOM.  </s>
<s> It seems like a good start, but the design appears to be weak in quite a few places.  </s>
<s> No doubt this is the result of an attempt to try to make conflicting views of a document fit into the same model.  </s>
<s> Here are a few of my concerns: UNNECESSARILY WIDE TYPES None of the containers in the DOM are typesafe.  </s>
<s> Most of them deal with really high level abstractions like "Node".  </s>
<s> This complicates the interface for the implementor, introduces the possibility of programmer error, and creates a performance problem: Implementation is more difficult since the API must perform extra checks to determine whether an object actually has a valid type when passed as an argument.  </s>
<s> (eg: setParent).  </s>
<s> Programmer error is possible wherever an object of too abstract a type is returned from a method; and programmers unknowingly pass invalid types to methods.  </s>
<s> A performance problem may be created by excessive type casting.  </s>
<s> Type casts and calls to "instanceof" are not free in languages such as Java, but instead are actually somewhat costly operations.  </s>
<s> It would be much better if argument and return values were specified as narrowly as possible.  </s>
<s> This would reduce the number of dangerous casts performed by users, reduce the number of error conditions that API implementors must test for, and eliminate some of the performance problems associated with run time type identification and casting.  </s>
<s> The primary culrit in the DOM are the containers: things which hold other objects routinely use "Node" as the type of their children.  </s>
<s> But also methods such as getParent and setParent, getDocument, etc., return a very abstract type (Node) even though that doesn't seem necessary.  </s>
<s> INCORRECT ABSTRACTIONS Narrowing the type scheme, however, wouldn't fit in well with the general structure of the DOM as it stands now.  </s>
<s> "Node" appears to be overloaded with two separate meanings: (1) a root object type for the DOM, (2) the generic type for objects which can appear in an XML document.  </s>
<s> Note that these are not the same thing, for example it doesn't make any sense to have a Document inside an Element.  </s>
<s> Node is at the wrong level of abstraction, and has been given far too many responsibilities.  </s>
<s> It appears to be a class which exists for the sole purpose of containing some method which didn't fit anywhere else.  </s>
<s> This is not good.  </s>
<s> It would be better to intercede an "XML_Node" class as the supertype of Element, Text, PI, Comment, and possibly CDATA.  </s>
<s> This type plays the role of "things that can be children".  </s>
<s> As such, it is the natural type to use as arguments for methods that get and set children in Element.  </s>
<s> Similarly, all XML_Node objects would have a getParent() method that would naturally return an object of type Element.  </s>
<s> The general principle here is to push methods and properties as far down the inheritence tree as possible.  </s>
<s> This reduces the number of points in the code where dangerous casts occur, and increases the exactness of the types returns by a methods.  </s>
<s> CONCATENATED APIS The DOM has thrown together two obviously different views of the structure of a document, without doing anything at all to integrate them.  </s>
<s> It appears as though two separate APIs were simply concatenated together to produce much of the content of the DOM.  </s>
<s> It would be better to try and integrate these views.  </s>
<s> Having multiple views makes the DOM seem unnecessarily complex, and will only confuse (and probably scare away) newcomers.  </s>
<s> One of the goals of XML was to provide a simple language that unsophisticated users could exploit.  </s>
<s> I think that the goal of the DOM should be similar: provide a simple, straight forward, unconfusing interface to objects.  </s>
<s> Looking at the way Attributes are handled by Element is a good example -- there are two totally different views here of what an Attribute is, and how one should be manipulated.  </s>
<s> In one version, attributes are directly manipulated through the Element API.  </s>
<s> In the other version, you must get an intance of an AttributeList and manipulate that.  </s>
<s> Either of these seem equally good to me, and clearly if you had one you could implement the other trivially.  </s>
<s> So why have both?  </s>
<s> I can't think of any good reason.  </s>
<s> The argument, "Some of our WG members have done it one way, and others have done it the other in their existing product" doesn't fly.  </s>
<s> They're both going to have to go and implement the other version in terms of what they already have in order to support the DOM.  </s>
<s> Picking one version over the other reduces the amount of work, overall, that must be done in order to have multiple compliant implementations.  </s>
<s> And more significantly: People starting from scratch now have a larger (thus more time-consuming) project ahead of them if they wish to create a DOM implementation.  </s>
<s> DOCUMENT FRAGMENTS ARE UPSIDE DOWN AND TOO EARLY Obviously the document fragment concept has been stuck into DOM because people think its interface will be spelled out a bit more clearly in some future version.  </s>
<s> But then it would be better just to leave it out of the specification entirely until some future version.  </s>
<s> What if it turns out that you have got it in the wrong place?  </s>
<s> By specifying it now, you're only going to cause trouble later on.  </s>
<s> I think that it may even be fairly likely that it is in the wrong place.  </s>
<s> It seems to me that a Document is NOT a type of DocumentFragment.  </s>
<s> I am not sure it is sensible to view this as an inheritence relationship at all.  </s>
<s> Or if it is, it might make more sense to consider a DocumentFragment to be a type of Document.  </s>
<s> If none of this can be determined yet because none of it is well thought out enough -- well then just leave the whole thing out.  </s>
<s> It can't hurt.  </s>
<s> It won't break anything to introduce it in a future version as either an extra interface above Document, or a new subclass of Document, or something with no blood relationship to Document that just happens to know about a Document.  </s>
<s> The same comments apply to DocumentContext -- it has no useful methods as yet, so it doesn't really make sense to include it in the API.  </s>
<s> Putting it in now restricts future design choices, without providing any current benefit.  </s>
<s> XMLNode is tedious Why are all these methods in XMLNode there asking me to specify, each and every time I want to do something, whether I want entities expanded or not?  </s>
<s> Why can't I just set this once and be done with it?  </s>
<s> While I can see that I might want to expand some entities but not others, I think I am unlikely to want to do this based on where I am in the tree.  </s>
<s> Instead I am likely to want to do this based on what type the entity is.  </s>
<s> These are not a big deal in the design sense.  </s>
<s> I just think that it's kind of strange that I would have to keep passing it down.  </s>
<s> It's likely to make programming with these methods somewhat tedious.  </s>
<s> ATTRIBUTE LIST HAS SOME PROBLEMS Also as a minor point, why has getSpecified()/setSpecified() crept in here when all of the other DTD oriented material has been kept at bay?  </s>
<s> If the users of Elements are to know whether the attribute was specified or not, shouldn't they also know whether elements are required?  </s>
<s> Whether Text is parsed or not?  </s>
<s> I think the best route is to leave ALL of this material out at this level, including whether or not an attribute is "specified".  </s>
<s> Secondly, I see no good reason for the "Attribute item(int index)" method of AttributeList.  </s>
<s> It seems to raise some troubling questions, since it fundamentally asserts that there is a well defined order to an attribute list, and my understanding is that there is not.  </s>
<s> If you have a bunch of implied attributes on an element, who is to say what order they should be represented in?  </s>
<s> Unless this is a well defined concept, the Attribute API should make no assumption that a list of attributes has an order.  </s>
<s> Note that this method eliminate the use of a hashtable to represent an attribute list.  </s>
<s> Justin Wells Semiotek Inc. (I am subscribed and posting via my list reader account.  </s>
<s> To mail me personally, address mail to the user justin at the same domain.  </s>
<s> I do read my list mail, but I will not respond in as timely a manner to mail addressed to reader.  </s>
<s> All this to avoid spam.)  </s>
<s> One additional comment I have about the DOM is that I believe it should try and mirror the ODMG collection interface wherever possible.  </s>
<s> Thus, DOM iterators should look like (and maybe even implement) the ODMG iterator API; and things that contain other things (such as Element) should have or be very similar to (maybe even implement) the relevant ODMG collection API (list, bag, etc.) There are two reasons why this should be so: -- Java 1.2 will use the ODMG collection API as its standard collection library.  </s>
<s> The ODMG collections were developed with this goal in mind (Rick Cattel of Javasoft chaired the effort.) -- It will make life a lot simpler for anyone who wants to throw XML objects into an OO database that implements the ODMG API, such as ObjectStore, PSE, POET, etc.  </s>
<s> So even when people use the DOM in languages like C++, there will still be a significant benefit here.  </s>
<s> The goal here is to make the DOM naturally fit in with OO databases, and the Java language.  </s>
<s> Obviously DOM iterators are likely to extend the functionality of ODMG iterators, allowing you to traverse up the tree to your parent for example.  </s>
<s> But additions like these should be extensions.  </s>
<s> Justin  </s>
<s> Comment on the Text object: One of the methods of the Text object is not like the others.  </s>
<s> All but one perform operations on the underlying text: adding data, setting data, appending it, inserting it, getting it, and deleting it.  </s>
<s> Splice, however, performs operations on the surrounding nodes in the tree.  </s>
<s> It seems somewhat out of place, since it has more to do with the structure of the document as a whole than it does with the text object itself.  </s>
<s> I don't believe that the Text object should take responsibility for the structure of the whole document.  </s>
<s> It would probably be better to write a set of DOM utility classes capable of performing common operations on a DOM implementation, and then ensure that the underlying DOM objects have enough capabilities that the utility classes can be implemented efficiently.  </s>
<s> So I would modify Text as follows: -- remove the splice method as it stands now -- add the following methods: * Remove count characters beginning at offset and * return them as a Text object Text Text::splice(int offset, int count); * Return the number of characters contained in this object int Text::length(); -- Implement a utility class to splice objects as follows: void Utility::splice(Element newElem, Text orig, int offset, int count) : Text left = orig.splice(0,offset);  </s>
<s> Text right = orig.splice(count,  </s>
<s> orig.length());  </s>
<s> Element parent = orig.getParentNode();  </s>
<s> parent.insertBefore(left,orig);  </s>
<s> parent.insertAfter(right,orig);  </s>
<s> parent.replace(replaceChild(newElem,orig);  </s>
<s> This keeps the Text class simple, and provides methods which may actually be more generally useful.  </s>
<s> It also allows the structural splice() operation to be performed efficiently from a library class.  </s>
<s> Moving higher-level operations like splice() into a library, and providing a simple yet useful interface to each low-level class is preferable to loading a whole bunch of unrelated responsibilities on lower level classes.  </s>
<s> Justin  </s>
<s> Comment on knowledge of Document: As written now, the DOM implies that all new objects are created using the Document interface.  </s>
<s> I agree with this, as it allows the mixing of different DOM implementations in one program, the mixing of objects from different servers in a distributed environment, a convenient place to take care of persistence issues, and so forth.  </s>
<s> However this has another implication which has not been explicitly dealt with in the current API: Many objects in the system are going to have to know what document they belong to.  </s>
<s> For example, it is possible to create new attributes without using the Document directly: Element elem = Document.createElement(...); elem.setAttribute(name, value); Attribute attr = elem.getAttributeNode(name);  </s>
<s> So somehow Element had to know how to create a new Attribute, presumably by calling Document.createAttribute(..) -- which means that Element has a way of finding out what Document it belongs to.  </s>
<s> Note that it would be unwise for Element to try and bypass its containing Document when creating new Attributes, since the Document might have some specific values that need to be set in the Attribute for persistence reasons, etc., that may be different from one document to the next.  </s>
<s> The consequence of all this is that I think there should be a getContainingDocument() method present on some of the objects.  </s>
<s> All Node objects could have this method, though many of them might find their containing document by asking their parent (to save wasting memory on many references).  </s>
<s> Justin  </s>
