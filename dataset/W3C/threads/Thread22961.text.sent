I am not finding anything in the DOM spec about this, but I just want to make sure that the following is a carry-over from old Netscape versions rather than part of their Netscape 6 DOM-1 compliancy.... 
Is referencing an HTML form-field value allowed by specifying document. 
formName . 
fieldName .value 
? 
Or does it need to be document.getElementById(" 
fieldID ").value to be DOM-1 compliant? 
We're just trying to develop our HTML pages to DOM-1 specifications. 
Thank you. 
Tami Decker tami.decker@supervalu.com 
What you are referring to is valid DOM-0 (legacy) functionality in a JavaScript (now ECMAScript) binding context. 
Not in the standard DOM bindings. 
Your implementation may support it as an additional API,, but portability is not guaranteed. 
(Dynamically adding fields to objects is a very JavaScriptish approach; the DOM is designed for cross-language portability, and most languages won't let you get away with this.) Joe Kesselman / IBM Research Hmm, do you have a DOM-0 spec that shows that it's not just some implementation-specific thingie? 
:-) To my recollection, no spec for a "DOM-0" exists. 
I think it's EXTREMELY unwise to rely on anything that can only claim to be a legacy. 
Use DOM L1 functionality wherever possible. 
- Dave Actually, I do have "a DOM-0 spec" as it were. 
I wrote it into the Advanced Television Systems Committee (ATSC) DASE (DTV Application Software Environment) Declarative Applications (DA) specification. 
This spec precisely specifies "DOM-0" legacy behavior as was expressed by a union of IE3 and NN3 functionality, roughly what one can describe as JavaScript 1.1. 
The material is partly based on a new SMPTE standard underway to codify DOM-0 behavior for use with ATVEF (Advanced Television Enhancement Forum) content. 
While I would agree that the behavior being discussed is is not explicitly supported in DOM-[12] or by Java bindings, it is universally supported by all UAs that accommodate this well establish client-side JavaScript usage. 
Notwithstanding this, if one is creating content for DOM-[12] and beyond, I would recommend using DOM-[12] core functionality and not this technique. 
Regards, Glenn "DOM Level 0" is an informal term used by the DOM working group as a shorthand for "The nonstandard APIs that the W3C DOM set out to standardize." 
So yes, it's really those "implementation-specific thingies" that happened to work semi-reliably in some of the most popular browsers. 
(There has been some discussion of going back and trying to figure out just what subset of those APIs really were common enough to represent a de facto standard, to aid those who have no choice but to interface with those older systems. 
The DOM Working Group really doesn't have the spare cycles to do this, but several other committies have suggested they might look at it, and if they do I expect we'll review their work.) Absolutely. 
The legacy calls should be considered nonportable. 
If you really want to write a page that will be viewable only with specific browsers, and not necessarily with future versions of those browsers... Ask yourself whether that's really a good idea. 
Joe Kesselman / IBM Research 
