Comments on : Priority 1 and no current consensus on implementation (currently 13 techniques) [Technique: 3.6.3] 
Allow the user to trigger events in a device-independent manner. 
Weak vote for native. 
If someone provides a clear example in favor of Compatibility I might change opinions. 
[Technique: 4.1.15] 
When new windows or user interface components are spawned, allow the user to override author-designated changes to window size. 
Strong vote for native. 
Much easier to implement natively than through a third party. 
Can lead to sever loss of accessibility when a spawned window covers a needed accessibility aid on the screen, or moves some interface objects off the screen because the window is larger than the screen, for someone using a headwand, for instance. 
[Technique: 4.1.16] 
When new windows or user interface components are spawned, allow the user to override author-designated changes to window position. 
Strong vote for native. 
Much easier to implement natively than through a third party. 
Can lead to sever loss of accessibility when a spawned window covers a needed accessibility aid on the screen, for instance. 
Technique: 4.3.1] 
Allow users to specify that a page be formatted linearly. 
No strong opinion [Technique: 4.3.2] 
Allow users to specify that a table be formatted linearly. 
No strong opinion. 
[Technique: 5.2.5] Keep track of the user's point of regard in each view and put it within the viewport when the user returns to the view. 
Native. 
[Technique: 5.3.1] 
Alert the user when scripts are executed. 
How about: Give the user the option of being notified when scripts are executed. 
[Native] [Technique: 5.3.2] 
Provide information about document changes resulting from the execution of a script. 
I'm not clear on what the implications of this are, or how this could be done. 
Should it say "Provide notification when a document changes due to script execution"? 
Or is it supposed to give specific info on what kind of change has taken place? 
If the latter, there needs to be some clearer definition of what is expected. 
Also, isn't this listed as Priority 3 in the Nov 12 doc? 
[Technique: 5.3.3] 
Allow users to be prompted before spawning a new window. 
Native. 
[Technique: 5.5.3] 
Provide a mechanism for designating the current table of a document. 
To be honest, I'm not sure what is meant by 'designate' in this context. 
[Technique: 5.5.4] 
Provide a mechanism for designating the current cell of a table. 
Not sure of meaning of 'designate' in this instance either. 
[Technique: 5.5.5] 
Allow the user to navigate among tables in a document. 
Native. 
[Technique: 5.5.6] 
Allow the user to navigate among table cells of the current table (notably left/right within a row and up/down within a column). 
Native. 
-- Paul Adelson * The views expressed are those of the * author and do not necessarily reflect the * position of Citibank or Citigroup. 
a few footnotes to follow up on what Paul Adelson said: This technique requires a handshake. 
The browser cannot do it without some cooperation from the AT and vice versa. 
How about: Give the user {quiet, alert, confirm} options governing script execution This blends into the above technique. 
What matters is the impact of the script. 
If the user wants to review/confirm prior to letting the script execute, it has to be caught prior to execution. 
How to communicate what will happen is tougher. 
On alert to offer the option of communicating what changed is easier. 
There are plenty of tricks of the trade such as a transient select on the least document subtree enclosing the change. 
This is extending the "confirm" meta-control to all new-window transactions. 
This has to do with the assumed state model. 
Is there a cross-platform definition of select, focus, etc. that we can build on? 
"Current table" probably combines some of the characteristics of "select" and "system caret." 
Need to worry about whether the state of the tabbing cycle moves, too. 
Likewise for table cells. 
Need to define the "current" state operationally. 
Al [snip] Agreed. 
Using a headwand instead of a mouse, or every 2 hands, I lack the flexibility to timely deal with new elements. 
[snip] Agreed. 
Agreed. 
For a month I've turned allow new window Off in Opera as an experiment to see what impact spawning had on my Web experience. 
I was even amazed myself how much easier it is to work with no spawning. 
Using Page Back &amp; Next is very much more effective [grin] Regards, Bryan - Life is a beta test. 
We mustn't let software companies add unnecessary quizzes! 
