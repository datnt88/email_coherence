now has some tweaks which fix some bugs noted in recent emails. 
The 'se' rules (now moved into section 4 which now has all the rule stuff in one place) have been modified so that they only generate a single bnode from each URiref or literal in the original graph. 
This is enough for the closure lemmas and keeps them from generating all those redundant blank-node copies. 
The definitions of rdf and rdfs interpretations have been slightly tweaked so that the relevant vocabularies contain the rdfV and rdfsV vocabularies (previously, an rdf-interp of V was an interpretation of V+rdfV; now it is just of V, so one has to be explicit about V including the 'special' vocabulary; similarly for rdfsV). 
The only effect of this tweak (suggested by Dan C) is to make it possible for an rdf-interpretation to only interpret the part of the infinite container vocabulary that it actually needs; so the definitions of closure are now relativized to a vocabulary, and now refer to those axioms which contain names from that vocabulary; and the closure lemmas now refer to closures relative to the vocabulary of (S+E). 
I have rewritten rule rdf2 so that it replaces an XML literal by its canonical form, rather than allowing arbitrary equality substitutions. 
The exact wording may need massaging, but the idea seems sound. 
Taken together, all this enables us to completely avoid the 'infinite' cases in closures, so all closures (from finite graphs wrt a finite vocabulary) are finite, without any need of weasel-words. 
The weird rule rdfs12 has been further modified. 
The elegant version suggested by Jos unfortunately turned out to not be quite valid. 
This rule may still get some further tweaking but this will not change any other part of the MT. 
The Lbase appendix is now in line with the rest of the document; the datatyping in particular has been rationalized. 
Apart from getting the XML literal terminology exactly aligned with Concepts, and writing out the proofs properly, I believe this is now pretty much done. 
On the other hand, Ive said that before.... Pat IHMC(850)434 8903 or (650)494 3973 home 40 South Alcaniz St.(850)202 4416 office FL 32501(850)291 0667 cell phayes@ihmc.us 
http://www.ihmc.us/users/phayes 
A nit re. section 4.1 -- you say: 1. Add all of the following triples *which contain a name in V*. 
These are true in any rdf-interpretation. 
Should that be more like: 1. Add all of the following triples *which contain only names in V*. 
These are true in any rdf-interpretation. 
Otherwise you'd potentially end up introducing new names into the graph that are not in V? #g Graham Klyne PGP: 0FAA 69FF C083 000B A2E9 A131 01B9 1C7A DBCA CB5E True. 
Now fixed. 
There are also a few other fixes. 
Pat IHMC(850)434 8903 or (650)494 3973 home 40 South Alcaniz St.(850)202 4416 office FL 32501(850)291 0667 cell phayes@ihmc.us 
http://www.ihmc.us/users/phayes 
Section 4.1 now states 1. Add all of the following triples which contain a name in V. These are true in any rdf-interpretation. 
rdf:nil rdf:type rdf:List . 
rdf:subject rdf:type rdf:Property . 
rdf:predicate rdf:type rdf:Property . 
rdf:object rdf:type rdf:Property . 
rdf:first rdf:type rdf:Property . 
rdf:rest rdf:type rdf:Property . 
rdf:value rdf:type rdf:Property . 
rdf:_1 rdf:type rdf:Property . 
rdf:_2 rdf:type rdf:Property . 
I think the phrase "which contain a name in V" is intended to eliminate the infinite set of triples for the the rdf:_nnn properties, but I suggest the wording needs tweaking. 
Each triple of the form: rdf:_nnn rdf:type rdf:Property contains the names rdf:type and rdf:Property which are highly likely to be in V, so it is highly likely that the infinite set will be included anyway. 
I could suggest alternative wording, but refrain lest Pat find it rude. 
Brian No no no. 
YOu are listed as series editor, you ALWAYS get to make wording suggestions. 
I would be DELIGHTED. 
Pat IHMC(850)434 8903 or (650)494 3973 home 40 South Alcaniz St.(850)202 4416 office FL 32501(850)291 0667 cell phayes@ihmc.us 
http://www.ihmc.us/users/phayes 
You called my bluff. 
I'm not sure I'm competent. 
How about: 1. Add each of the following triples whose subject, predicate and object are all contained in V. These are true in any rdf-interpretation. 
Brian 
