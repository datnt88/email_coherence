the pprint method of jtidy doesnt not change &amp;amp; refs inside of A HREF="" tags back into &amp; so a hrefs tags end up broken. 
So the following url: ends up being -jason horman jhorman@lycos.com 
What's the problem? 
It was wrong to start with and Tidy has fixed it. 
No, the proper URL querystring should be &amp; delimited not &amp;amp; delimited. 
QueryString parsers such as asp would interpret the url as having a query param called "amp;BV_EngineID", thereby breaking the cgi apps which these urls point to. 
Your right in that it is the proper xml encoding but not html. 
The querystring sent by a browser will have had the "&amp;amp;" interpreted into "&amp;". 
They aren't broken. 
It is the browser's duty to convert "&amp;amp;" to "&amp;" before submission to the server. 
If search engines accepted ";" as an alternative to "&amp;" as recommended by the specification, the need to encode "&amp;" as "&amp;amp;" in HREF attributes would be eliminated. 
(I note that Lycos doesn't yet allow this substitution, hint hint.) The application I am writing runs tidy and then programmatically extracts the hrefs from the resulting tidied document and spiders those hrefs. 
The spider was not replacing &amp;amp; with &amp; before sending the http request. 
I will do the replacement inside the spider library. 
I just assumed that urls within hrefs would be exactly the same after running jtidy. 
-jason |--------+-------------------------- | "Fred Bone" | | fred.bone@dial.| 
| pipex.com 
| | 05/23/2000 01:56| | PM | |--------+-------------------------- cc: html-tidy@w3.org 
| Subject: Re: bug | No, the proper URL querystring should be &amp; delimited not &amp;amp; delimited. 
QueryString parsers such as asp would interpret the url as having a query param called "amp;BV_EngineID", thereby breaking the cgi apps which these urls point to. 
Your right in that it is the proper xml encoding but not html. 
The querystring sent by a browser will have had the "&amp;amp;" interpreted into "&amp;". 
The best course for such dilemmas is to run the HTML in question through a validator. 
You can use the W3C's validator or (my favorite) www.htmlhelp.com/tools/validator 
... in either case, it would tell you that naked ampersands (i.e., not escaped as &amp;amp;) are not OK, either in URLs or anywhere else. 
A validator is analogous a final spelling checker. 
It's good to run a document through a validator, even if it's been "Tidied". 
Tidy is good, but the validator is the ultimate test. 
/Jelks 
