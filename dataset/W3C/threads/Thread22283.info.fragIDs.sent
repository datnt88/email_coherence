I have an implementation question about inserting a DocumentFragment Node into another Node. 
My apologies if this has been discussed before. 
I do not know what to return as the value for the methods which insert 
Nodes when the Node being added is a DocumentFragment. 
The 
DocumentFragment is not added into the Node, its content is. 
That content can be multiple Nodes at the "root" level of the DocumentFragment. 
The return value should be the Node added. 
Since, after being inserted into another Node the DocumentFragment no longer exists, what is returned? 
From the description of Node.insertBefore in the DOM spec: "If newChild is a DocumentFragment object, the entire contents of the document fragment are moved into the child list of this node." and later: "Return Values The node being inserted." 
Thanks, Deke Deke Smith Tallent Communications Group, Brentwood TN deke@tallent.com, 
615-661-9878 
The best way to predict the future is to invent it. 
" 
- Alan Kay 
One hacker's opinion, not authoritative: Insert always returns the node you passed in, so inserting a DocumentFragment should return the DocumentFragment. 
Your mistake, I think, is assuming that the DocumentFragment is destroyed by the copying process. 
It isn't, it just loses all its children. 
The user can destroy it, or reuse it, as they see fit. 
Joe Kesselman / IBM Research 
Unless stated otherwise, all opinions are solely those of the author. 
Return DocumentFragment. 
DocumentFragment still exists even though its contents have been moved to another node. 
Don 
Don Park, donpark@quake.net said on 11/4/98 1:10 AM: 
I am trying to understand this. 
I am trying to create an implementation and trying to make it fit with the specs. 
I have very little patience with discussions about semantics, but this may be one of the few times it is appropriate. 
Lurking on this list, I have noticed that many of the threads can go back and forth about the subtleties the spec's meaning. 
I appreciate the patience of everyone. 
With that said, I am forging through the spec while creating an implementation. 
Here's a little more detailed explanation of why having Node.insertNode() return a DocumentFragment Node after inserting a DocumentFragment Node is confusing to me. 
If the DocumentFragment were inserted into a Node, it would be a Child of that Node. 
But according to the spec (from the description of Node 
attributes): "parentNode 
"The parent of the given Node instance. 
All nodes, except Documents and DocumentFragments, have a parent." 
And from the description of the insertChild method: 
"If newChild is a DocumentFragment object, the entire contents of the document fragment are moved into the child list of this node." 
Here's the implications of this as I understand it: 
Before being inserted, a DocumentFragment's children will point to the DocumentFragment as their parentNode. 
After the DocumentFragment has been inserted, its children would point to the Node the DocumentFragment was inserted to as their parentNode. 
The DocumentFragment would not be included in the child list of the Node it was inserted into, but the DocumentFragment's children would be. 
This supposes that a Node cannot be in the child list of two different Nodes. 
Also from the spec under the description of the insertChild method: "Note: After a successful call to this method, the newChild node will be removed from its previous position in the tree, and all NodeLists that reference the child list of this object, and previous and next sibling attributes of some children, must be updated." 
The old DocumentFragment no longer exists and a new Document Fragment 
cannot be placed as a child of a Node. 
What are the characteristics of a DocumentFragment if that is what is returned? 
The attributes childNodes, parentNode, previousSibling, and nextSibling would all be null. 
The 
returned value from Node.insertNode() would not reflect what was actually inserted. 
Again, thanks for your patience as I seek Ultimate Understanding of the spec. 
Deke Deke Smith Tallent Communications Group, Brentwood TN deke@tallent.com, 
615-661-9878 
The best way to predict the future is to invent it. 
" 
- Alan Kay 
Correct. 
Correct. 
A sound assumption. 
Not so. 
Just because its children have been removed and inserted into their new location, does not mean the DocFrag has been destroyed. 
Why should it be? 
Just return it, now without children. 
Correct. 
No, it wouldn't. 
But that's all right; the spec says to return newNode, not "what was actually inserted". 
So return it. 
John Cowanhttp://www.ccil.org/~cowancowan@ccil.org 
You tollerday donsk? 
N. 
You tolkatiff scowegian? 
Nn. 
You spigotty anglease? 
Nnn. 
You phonio saxo? 
Nnnn. 
Clear all so! 'Tis a Jute.... (Finnegans Wake 16.5) 
As Joe pointed out, you are assuming that the original DocumentFragment is destroyed within insertBefore. 
There is no concept of destruction in DOM API, only removal and abandonment. 
The DOM spec will not make sense all the time because sentences were added and removed by many editors in their effort to clarify [or weasel out]. 
Don Park Docuverse 
