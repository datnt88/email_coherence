I believe that I asked this, but I am not sure wether I got an answer. 
Tidy is very useful for cleaning HTML files and I use it to pretty print XML files too. 
My problem is that tidy breaks lines between elements, like this : 
elem1 elem2 Content of elem2 is changed to 
elem2 Content of elem2 The result is far easier to read, but... the content of the document has been _changed_ : the newline between elem1 and elem2 has been added. 
Would it be possible to break lines in the tags, such as elem1 
elem2 Content of elem2 
It does not look so pretty, but is more correct. 
Jade and Openjade use this process for breaking lines. 
TiA. 
Jany Jany Quintard | I always wanted to be somebody, jany.quintard@bigfoot.com 
| but I should have been more specific. 
Lily Tomlin 
I suppose that with its silly object (tt, sorry), my previous post was simply ignored. 
So I send it again, hoping for an answer. 
I believe that I asked this, but I am not sure wether I got an answer. 
Tidy is very useful for cleaning HTML files and I use it to pretty print XML files too. 
My problem is that tidy breaks lines between elements, like this : 
elem1 elem2 Content of elem2 is changed to elem2 Content of elem2 The result is far easier to read, but... the content of the document has been _changed_ : the newline between elem1 and elem2 has been added. 
Would it be possible to break lines in the tags, such as 
elem1 
It does not look so pretty, but is more correct. 
Jade and Openjade use this process for breaking lines. 
TiA. 
Jany 
I doubt it, but it can take a while for people to come up with answers. 
I'm no expert on XML, but as far as I can tell this would only be a change of content if you have elem1 defined with xml:space='preserve', and then only the blanks would be significant (and not the newline). 
The HTML4.1 spec says (appendix B.3.1): 
SGML (see [ISO8879], section 7.6.1) 
specifies that a line break immediately following a start tag must be ignored 
and this should, AIUI, also be true in XML (though I can't find anything in the XML spec corresponding to what I've quoted from the HTML one). 
SGML (see [ISO8879], section 7.6.1) 
specifies that a line break immediately following a start tag must be ignored 
The closest ting I could find in the XML spec was: "An XML processor must always pass all characters in a document that are not markup through to the application." 
Here is how one XML Application (XSLT) deals with the white space: Kipp E. Howard - Sr. Software Engineer @ LexisNexis CourtLink kipp.howard.nospam@lexisnexis.com 
(425) 372-1837 or (800) 774-7317 ext 1837 
No, Jany is right here, in XML by default all white space is significant 
and as she points out, Tidy changes white space in the document. 
I 
remember some feature requests regarding XML pretty printing and bug reports on XML vs. Tidy's treatment of white space. 
I am not sure how useful Tidy is for generic XML pretty printing... 
Thank you for educating me. 
I still don't see how this squares with the assertion I quoted from the HTML4.1 spec (that SGML requires a newline following an opening tag or preceding a closing tag to be ignored), but clearly I need to do some further reading. 
I'm no expert on XML, but as far as I can tell this would only be a change of content if you have elem1 defined with xml:space='preserve', and then only the blanks would be significant (and not the newline). 
No, the newline would be significant too. 
The HTML4.1 spec says (appendix B.3.1): 
SGML (see [ISO8879], section 7.6.1) 
specifies that a line break immediately following a start tag must be ignored 
and this should, AIUI, also be true in XML (though I can't find anything in the XML spec corresponding to what I've quoted from the HTML one). 
That's because XML is different here. 
Basically, SGML is set up on the assumption that you will *ALWAYS* have the document type definition available, whereas XML is set up on the assumption that you will _seldom_ have a DTD or look at it if you have one. 
In fact, the XML specification is confused and confusing. 
It's a textbook example of a Bad Specification. 
(I'm planning to use it in a Formal Methods paper as a horrible example of what happens when you don't use formal methods.) Amongst other things, the semantics of spaces depends on whether you have a DTD (and your parser can handle it). 
Suppose you have and Then an XML parser is going to come up with the events START "elem1" START "elem2" DATA "foo" END "elem2" START "elem2" DATA "bar" END "elem2" END "elem1". 
Now suppose you have IF your parser knows about the dtd AND bothers to process it, you get START "elem1" SPACE "\n " START "elem2" DATA "foo" END "elem2" SPACE "\n " START "elem2" DATA "bar" END "elem2" SPACE "\n" END "elem1". 
where a SPACE event says "here is a string of white space characters occurring where element content is required; feel free to ignore it." 
But if there isn't a dtd or if your parser can't handle it or doesn't feel like handling it because it's Tuesday, you'll get START "elem1" DATA "\n " START "elem2" DATA "foo" END "elem2" DATA "\n " START "elem2" DATA "bar" END "elem2" DATA "\n" END "elem1". 
Various XML specifications call for various ways around this, involving more or less successful heuristics for deleting white space DATA. 
I have often wondered why XML textbooks are so fond of indenting XML examples when it is such a bad thing for the semantics. 
* Bjoern Hoehrmann [Sat, 12/10/2002 at 04:05 +0200] 
Not really important, but Jany is a "he". 
My first name is a bit confusing, but I am getting used to it ;-) 
I generate XHTML from XHTML using Openjade. 
I have sometime to use tidy to pretty print my source code, so it is easier to read. 
But OpenSP, the SGML parser of Openjade warns that character data has been found between elements. 
I am aware that I am here on the border between strict SGML and XML. 
Jany 
