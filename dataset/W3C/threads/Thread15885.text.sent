In November, at Comdex, Immersion announced a force feedback computer mouse (the FEELit) that would be targeted at mainstream computer users and would sell for $139 at the end of 1998. 
The mouse uses active force feedback (not just brakes) and allows the user to feel Windows elements such as icons, windows, toolbars, menus, etc. 
One potential use for web accessibility would be to draw the mouse toward text-entry boxes to allow easier use of tools like Yahoo. 
The appeal to apply the FEELit as an accessibility tool is obvious, but surely won't be a slam-dunk. 
For sighted users we're enhancing an existing paradigm, but for blind users we will have to make a previously useless input device attractive. 
Despite the challenges, we're enthusiastic about the possibilities. 
Current development efforts are focused on mainstream use, but I'd like to consider accessibility issues well in advance of product launch. 
Thus this appeal for advice. 
I'd be grateful for input in two areas: 1. Useful Mouse Behaviours - Suggestions up to this point include pulling the mouse towards text entry boxes and washboard-style grooves to aid the user in traversing the screen in a straight line. 
Many behaviors will be appealing both to sighted and blind users, but I'd be especially happy to add to our list behaviors that a sighted development team would be unlikely to think of. 
Many effects are possible, such as attractive and repulsive vectors and fields, shapes, boundaries, textures, damping, etc. 2. Suggested Strategies for the next year - people or organizations we could collaborate with, grants we might apply for, organizations or softare companies that might put a prototype to good use (e.g. developing valuable software or techniques), etc. 
Any other comments would also be appreciated. 
You can find out more about the FEELit by visiting http://www.force-feedback.com. 
Despite all the recent discussion, it is still unfriendly - my apologies. 
If you like, contact me off-list, and I can e-mail a .pdf 
document. 
Thanks in advance for any input. 
Chris Hasser Original text My dear Jan; The www is a drag for me to use - I don't use it much due to the graphical mess as it appears to me. 
I have heard of talking programs that will work with web pages. 
It is heavy-duty software that would require a PC much more powerful than my 486 33mh. 
However, in June I expect to replace my system with a Pentium II, and Windows 98. 
That should help. 
The problem is that the industry changes so quickly that it is difficult for the talking programs to keep up. 
If they adopt standards for designing web pages for the disabled in mind it may alleviate(sp?) this problem. 
Jan Katz jkk@umich.edu 
Univ. 
Michigan Benefits Office G405 Wolverine Tower Ann Arbor, MI 48109-1278 to follow up on what Chris Hasser said: AG:: Note that threads like this one demonstrate the need for the UI group that is getting organized as we speak. 
That group will probably contain people who have better information than the following, but... 
I have two broad conjectures for you. 
First, I suspect that blind users will be better off with an absolute frame of references for the motion of the hand. 
The conventional mouse is differentially coupled to the display cursor. 
A tablet or touch screen is "DC coupled" to absolute display coordinates. 
I suspect that blind users will be better off if the sandbox you prepare for their hand to play in is one which tracks position, not just accumulates changes in position. 
Second hypothesis: The tangible GUI approximates a touch-screen interface in resolution. 
Don't try to put too fine a point on it. 
This is the application class I think you are looking at as far as UIs for the blind and VI are concerned. 
Third, I have a hunch that the real win from force feedback is in speeding up the process. 
I think that you should not try to use force feedback to communicate minutiae, but rather to make the maintenance of global context easier. 
There should be little speedbumps in spreadsheets, so you notice each colum or row you cross with bigger bumps at major blocks. 
In fact the little ones may only be audible and the force feedback reserved for major divisions. 
Make it so it is easy to move to a subregion of the interactive plane quickly and surely. 
If force feedback means that your hand just knows where you are in the interaction plane without your eyes having to check, that is the real selling point for force feedback. 
Al Gilman to follow up on what Chris Hasser said: AG:: More warmup for WAI-UI: Here is a blue-sky strategic plan. 
We use force feedback as a pilot program to demonstrate how to do adaptation with style. 
The central step in this is the document-by-document or user-by-domain profiling of force feedback effect classes to interaction-plane-content classes. 
A simple example of this is the concept of z-index in CSS2. 
This is a hidden but standard layer index associated with any content that appears in the image plane of the display device. 
One class/class binding would be to emulate that the mouse has climbed a small curb onto a new plane whenever the z-index of what appears in that region is higher and the cursor transitions into a new region, and vice versa for emulating a teeny step down. 
It is not reasonable to expect the creator of every architectural drawing to think about the force-field styling of his/her drawing. 
Nor is it reasonable to expect the purveyors of the mouse and its support libraries to understand all domains from accounting to architecture. 
Achieving an intelligent binding reuquires some homework on both sides to come to a central meeting point, defined by the reference model for the binding transaction. 
Application domains such as architecture have data models as for example in ISO 10303 STEP. 
Very often these models are not carried to the level where it is clear from the model what the correct pecking order is in terms of relative importance of different boundaries. 
But that is what is critical in styling drawings for usability. 
The people who do road atlases for a living have this knowledge and consider it proprietary. 
But it is this pecking order that constitutes enough domain analysis so that a novel display effect such as force feedback can be bound to existing content without a case by case analysis of the document. 
If the content is already classified so that it is possible to detect by computation which context transitions are major and which are minor, then an application-by-rule of force feedback effects will be welcomed as a positive contribution. 
Otherwise a nuisance. 
The dream plan decentralizes the analytical work. 
Or at least it suggests that usability analysis of interfaces for use by people with disabilities can be boilded down to rules which guide force-feedback-effect-allocation patterns. 
The key thing here is that it does not make sense to decide force feedback coloration of graphical features one at a time, feature by feature. 
Style is achieved when there is a coordinated family of force feedback effects and the profile of their allocation to content class features makes sense as a system. 
Al Gilman I have already been working with the Immersion force feedback technology on the Windows95 / DirectX platform. 
My goal is to craft extensible libaries of force feedback behaviors and sensations that can then be "plugged in" other Windows applications to enhance the user experience. 
From my assessment of this force feedback technology developed by Immersion, I am VERY impressed - I really believe this technology opens up INCREDIBLE!! new opportunities to create new and exciting applications / interactive environments. 
As a developer, I would be happy to work with anyone interested in developing applications or concepts related to force feedback technology. 
If anyone would like to team-up on these type of concepts or ideas, or if anyone has any suggestions, feel free to email me. 
Thanks, Dan Bogstad dbogstad@metrixtech.com Dan Bogstad - Systems Engineer dbogstad@metrixtech.com Metrix Technologies 317 East Diamond Ave., Suite 202 Gaithersburg, MD 20877 Coupling Al's first and third points (below), if the force feedback mouse can give an indication of when the user is at the edge of the display, it could be helpful. 
The feature that may be even handier is the ability to expand the display to an arbitrary size. 
On my screen, I can open a window that is bigger than the screen, and then have to, as it were, position the screen over the section I want to see. 
A force-feedback mouse could identify edges of a window bigger than the one I could see. 
On the other hand, if it s possible to enlarge the window for ever, things will get lost. 
This is the value of being able to get around the display using a keyboard, which need not require a spatial model at all. 
On the other hand, force-feeedback gives something to deaf users that a beep doesn't. 
Charles McCathieNevile Sunrise Research Lab RMIT University [snipped] Chris. 
I can download pdf reader on my desktop and read the stuff - it doesn't work on my laptop. 
Although Acrobat is free it comes at a hardware cost - plain text on the other hand, assuming the document can be rendered in text (some diagrams are VERY difficult to explain) is free and works on existing hardware without a problem. 
(This point is why I am forwarding the answer to a private question back to the list) Chris Hasser wrote that he could create a plain text version of his pdf document if it was needed, and that he knew a blind person working for Adobe who had no problems with pdf. 
Thoughts anybody? 
Charles McCathieNevile Sunrise Research Laboratory RMIT University My thoughts, questions etc are my own, and at my work we argue about this stuff every so often... My apologies for re-hashing a three-week old thread... 
I have been tardy in responding to a couple comments on force-feedback mice. 
Evan Wies responds: The FEELit mouse is actually an absolute device, so your wish is granted. 
We do tricks in software which dynamically changes the scale of the workspace so that you get both fine-pitch control and a large virtual workspace, despite a constrained physical workspace. 
The balance between these two can be user-configured. 
Evan Wies responds: Here's some data to support your hunch. 
We have conducted a formal Fitts Task experiment with three conditions -- FEELit with forces "snapping you to targets", FEELit without forces, and a conventional mouse. 
There was a 61% performance improvement going from FEELit without forces to FEELit with forces and a 49% performance improvementgoing from a conventional mouse to FEELit with forces. 
With force-feedback, targeting errors (where the user misses the target) were reduced 26% from a conventional mouse and reduced 70% from a FEELit without forcces. 
This is without any long-term training on the FEELit (whereas users were well trained on the conventional mouse). 
Evan Wies responds: The FEELit mouse will be able to change its size dynamically to accomodate different screen resolutions. 
(We will also have to find a solution for multiple monitors.) 
This feature is not implemented now, but will be when it hits the shelves. 
I don't think we considered some of the finer points of your comment, so thank you for your suggestion! 
Sincerely, Evan Wies Research Engineer Immersion Corporation evan@immerse.com 
