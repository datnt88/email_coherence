Here are some comments and questions I have about the DOM Level 2 working draft, Chapter 1 (DOM CSS). 
[1] Some of my comments may be somewhat misguided. 
I am appoaching this with knowledge of CSS and stylesheets, but only very basic knowledge of the DOM. 
Section 1.2: interface StyleSheet Perhaps the definition of the title attribute should mention the complexity of the use of titles for sets of stylesheets as described in HTML40, section 14.3. 
[2] 
Section 1.3: interface CSSStyleDeclaration How do the functions in CSSStyleDeclaration handle shorthand properties [3] (e.g., margin)? 
I think the shorthand properties should be treated as decomposed into their full representations. 
This implies that when the related longhand properties (i.e., margin-top, etc.) are retrieved, they are all correct. 
When the longhand properties are set, the results are as expected, since the properties previously set on the shorthand properties and not changed will stay unchanged, but the property that was changed should be changed. 
When the shorthand properties are set, all the longhand properties of which they are composed are set/reset (per CSS spec). 
(I think this was likely understood by the authors, but I think it deserves mention.) For example, if the margin property is set to "1em 2em 3em 4em" (meaning top, right, bottom, and left margins), getPropertyValue("margin-left") should return "4em". 
If one then calls setProperty("margin-top", "0", ""), then I think getPropertyValue("margin") should return "0 2em 3em 4em". 
Question: Is it within the scope of the DOM to specify that some arguments to functions should be optional?? 
If so, I think priority on CSSStyleDeclaration::setProperty should be. 
Section 1.4: interface CSS2Properties Question: is there an attribute of type CSS2Properties in the interface CSS2StyleDeclaration? Or is it not mentioned because it is optional? 
David [1] http://www.w3.org/TR/WD-DOM-Level-2/css.html [2] http://www.w3.org/TR/REC-html40/present/styles.html#h-14.3 [3] http://www.w3.org/TR/REC-CSS2/about.html#shorthand L. David Baron | Freshman, Harvard dbaron@fas.harvard.edu 
|  http://www.fas.harvard.edu/%7Edbaron/ 
We discussed this and decided that this description was best left to the HTML 4.0 spec (which is referenced in the text for the title attribute). 
Thank you for bringing up this issue. 
It was definitely not addressed in the working draft and should be. 
After talking about it, we came up with the following rules (which I believe are in sync with your suggestions): 1) If a shorthand property is set, it explicitly sets all of the longhand properties. 
For example, if you set the CSS font property to "14pt Arial", querying the font-weight property will result in a value of "normal". 
2) If not all longhand properties have been explicitly set, querying the shorthand property should return the empty string. 
3) When computing the shorthand property, only non-defaulted longhand property values should be listed. 
For example, querying for the font property should not return "normal normal normal 14pt/normal Arial", since the "normal"s are default values. 
Optional arguments aren't allowed in Corba IDL. 
It may be possible to specify arguments as optional in the ECMAScript binding. 
We've chosen not to do so thus far, so as to keep the different bindings reasonably similar. 
The following text was added to the spec as part of the second paragraph in the description of the CSS2Properties interface: If this interface is implemented, the expectation is that binding-specific casting methods may be used to convert from a reference to CSSStyleDeclaration to a reference to CSS2Properties. 
The expectation is that the "style" attribute of a CSSStyleRule can be "cast" to a CSS2Properties reference in a binding specific manner. 
For Java this may involve an instanceof check prior to an actual cast. 
In COM, this would require a QueryInterface. 
No casting would be required in ECMAScript. 
Note that, in the future, we may split the CSS2Properties interface into different interfaces that map to the proposed CSS modules division. 
--Vidur 
Two further comments before my reply to the thread. 
1) Is there a way in the DOM to have (readonly!!) access to user stylesheets? 
Having such access could allow interesting ways of avoiding clashes with user "!important" rules. 
It might be worth considering. 
2) The getPropertyPriority and setProperty probably should not use the exclamation point for the priority, because the whitespace after it is optional. 
That is, the priority should be "" or "important", not "" or "!important" or "! important". 
(This is probably more of a problem with getPropertyPriority.) However, I'm not really sure about this since the general CSS grammar (section 4.1 of CSS2) is not very clear on possible extensions to priorities. 
Perhaps the priorities would be better off replaced by a boolean value indicating whether the rule is important or not, since there really isn't any hint of how priorities might be generalized in the future. 
This is reasonable for the font property and for the border and border-[left|right|bottom|top] properties. 
However, for the margin, padding, and border-[width|style|color] properties, it doesn't make much sense. 
A good rule for those would probably be that the minimum number of sides possible would be used, i.e., that "0px 10px" would be returned instead of "0px 10px 0px 10px" However, both of these statements limit themselves to the particular shorthand properties in CSS2. 
I think you are probably best off making a more general statement such as: When computing a shorthand property to return, the form returned should be the shortest form exactly equivalent to the declarations made in the ruleset. 
However, if there is no shorthand declaration that could be added to the ruleset without changing in any way the rules already declared in the ruleset (i.e., by adding longhand rules that were previously not declared in the ruleset), then the empty string should be returned for the shorthand property. 
(This covers what you gave as rules 2 and 3.) David Baron L. David Baron Freshman, Harvard dbaron@fas.harvard.edu 
Links, SatPix, CSS, etc.  http://www.fas.harvard.edu/~dbaron/ 
WSP CSS AC  http://www.webstandards.org/css/ 
