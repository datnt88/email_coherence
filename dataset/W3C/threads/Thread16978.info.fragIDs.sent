Hi I am seeking advice on the reasons behind WCAG checkpoint 8.1. 
"Ensure that pages are usable when scripts, applets, or other programmatic 
objects are turned off or not supported. 
If this is not possible, provide 
equivalent information on an alternative accessible page. 
Make programmatic 
elements such as scripts and applets directly accessible or compatible with 
assistive technologies [Priority 1 if functionality is important and not 
presented elsewhere...]Specifically they want to use Javascript. 
Having responsibility for development of an accessibility standard for my organisation a problem has arisen that it appears to make it very difficult for the organisation to comply with this checkpoint. 
The question that I have is according to the WCAG documentation the rationale for this guideline is to ensure support for older browsers and people who have scripts turned off in their browser. 
I am aware that JAWS is able to handle Javascript. 
Are there assistive technologies that cannot interact with Javascript? 
Any assistance would be greatly appreciated. 
Dr Robert Pedlow Project Manager Telstra Research - Centre for Accessibility 770 Blackburn Rd. Clayton Vic 3168 ph 03 9253-6373 mobile 0408 402-561 
How is Javascript a problem? 
There are, and always have been, perfectly good ways to use Javascript with graceful and accessible fallback. 
At worst, just make use of noscript where necessary, and if you are ever tempted to use the evil javascript: pseudo-protocol for forms or links, change that to a valid destination and use event handlers for the scripting. 
Erm - not everyone can afford modern equipment. 
Have a thought for those with an old 386 and 4Mb RAM, using Lynx, perhaps with a speech reader[1]. 
Perfectly good with well-considered javascript, of course. 
Nick Kew Site Valet - the mark of Quality on the Web. 
This appears to be the token compliance approach. 
Find a solution that some assistive technology, however expensive, can cope with and then class the site as OK. 
If you are really careful with your JavaScript, this may work for an intranet, as you can probably buy your way out the problem, by using top end AT and by restricting the choice of browsers. 
Common JavaScript techniques can still cause problems in this closed environment, e.g. forms that submit when you select from a pull down list are impossible to use from the keyboard on some browsers and require unusual knowledge in users for others. 
For users where you do not have such a tight control of the environment (including people who use common search engines) JavaScript use will lock out a significant number of well off people who have no need for assistive technology when using computer equipment, because of security concerns (and often because of failing to understand the nature of browser dependencies in the object models). 
Moreover, one of the founding principles of Tim Berners-Lee's web was universality, which meant the ability to use even quite simple browsers and still get useful information; of course, most commercial content creators actually want the sort of technology (which already existed then) that was rejected, to achieve this end, in favour of HTML. 
This represents part of a wider definition of accessibility which was part of the original concept of the web. 
(Your choice of JAWS as the reference AT means that the whole organisation may have to move to Microsoft Windows on Intel hardware.) 
Unfortunately, the increasing concentration on legislation compliance means that the focus of web accessibility is moving more and more towards those things covered by legislation, in part because that is where the consultancy money is. 
Unfortunately, legislation is needed as organisations won't do anything without it. 
Hi Rob, technologies that cannot handle javascript include emacspeak, lynx (widely used in some countries as a primary browser for people who are blind), 
braillesurf. 
There is a seperate question of whether users can handle javascript. 
People who are unable to keep an overview of pages often find it is better to turn javascript off, because if the page changes and they don't know how or don't know why, it becomes extremely difficult to use the Web. 
cheers Charles [snip] 
I am aware that JAWS is able to handle Javascript. 
Are there assistive technologies that cannot interact with Javascript? 
Any assistance would be greatly appreciated. 
more to consider are the security issues of some places where some types of coding that is not html or approved by them are stripped out or the pages do not function due to lack of completness when delivered. 
There are assistive technologies in addition to jaws and some older versions of jaws and browser combinations where if propper fall back is not used as is suggested here, there will be a lack of functionality. 
programmatic 
provide 
programmatic 
with 
not 
How is Javascript a problem? 
There are, and always have been, perfectly good ways to use Javascript with graceful and accessible fallback. 
At worst, just make use of noscript where necessary, and if you are ever tempted to use the evil javascript: pseudo-protocol for forms or links, change that to a valid destination and use event handlers for the scripting. 
Erm - not everyone can afford modern equipment. 
Have a thought for those with an old 386 and 4Mb RAM, using Lynx, perhaps with a speech reader[1]. 
Perfectly good with well-considered javascript, of course. 
Nick Kew Site Valet - the mark of Quality on the Web. 
