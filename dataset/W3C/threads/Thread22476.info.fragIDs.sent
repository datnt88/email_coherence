Documents are either frozen (piecewise static) or are in production (flux). 
How concious should we be of multi-user at this point? 
Remember Memex: we'd weave a document collection through dozens of encoded resources from different sources. 
When my time comes to 'reproduce a trail' for someone else to load into their memory then the document model had best be able to determine which types of links allow replication, and which links do not. 
Or are we working from the 'universe is one big document and there is no need for replication' model. 
If we can accept that there will be 'rights holders' to the document collection, and we can accept that access license is not equivalent to reproduction license, then the document repository will have different interpretations of a given document based upon the rights that have been negotiated by the specific consumer. 
Or am I jumping ahead to inter document linkages which we'll tackle after we have a common document model. 
Yours in spirit Les Cuff nf.ca 
The DOM spec has some verbage about having deferred support for multithreading to a later version of the document, if I remember correctly. 
Seems to me that replication is basically a caching issue, which means it's probably beyond the DOM's abstract-document spec and into the quality-of-implementation and application-specific domains. 
As long as the API behaves as defined, the user shouldn't know or care how much or how little of the document is locally replicated. 
The DOM shouldn't do anything to make replication unduly hard... but I think its responsibilities stop there. 
Both document collections and repositories are outside the scope of the current Working Group. 
Arnaud Le Hors - W3C, User Interface Domain - www.w3.org/People/Arnaud 
Is there a working group considering the nature of the document? 
I am seeking a concensus on the definition of Document for a start. 
A response to my claim: 'a document is not flat' has been: 'a document is flat when it is projected into XML'. 
I concur with the XML as a stream 1 character wide. 
This does not cause me mental distress. 
But I still think that documents are not flat. 
Supposing I want to deliver a document in fragments. 
Piecewise XML if you like. 
Would these be a single DOM tree? 
or would these be a cluster of trees. 
How would inter-cluster references work out? 
[Or am I just thinking that the intent of the DOM is to provide a persistant object while the group is dedicated to a throw away for specific purposes?] 
Sorry if this confuses. 
Les Cuff nf.ca 
Re whether a document is flat or not: Let's not get hung up on semantics. 
The DOM is certainly a tree model. 
Whether its external representation is flat or not is _entirely_ up to the particular tool... to take one example, a wordprocessor based on the DOM could read and/or write anything from HTML to postscript to plaintext. 
Whether "piecewise XML" is a single DOM tree or not is also up to the tool. 
It could maintain several DOMs, or merge them, depending on its needs. 
As I read the spec, the DOM itself is _not_ intended to be persistant, though specific implementations of it may be. 
It's strictly an API which can be used to manipulate data structures whose representation impelements this standard. 
How the documents get into and out of those structures is outside the DOM's scope. 
(I think the introduction to the Working Draft does make this tolerably clear...?) 
