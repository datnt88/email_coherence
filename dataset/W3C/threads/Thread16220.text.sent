Hello all, I am going to be teaching a group of college students how to program in XHTML starting next week. 
I don't have time to write a textbook, but most of the HTML books or on-line materials I've seen don't teach accessible HTML. 
I don't have time to "unteach" them either. 
I'm wondering if anyone knows where I could find an on-line curriculum or a good book for this purpose. 
It's for a community service website that we'll be building here in Seattle (if I get enough volunteers). 
Any help would be appreciated. 
Feel free to respond off-line, but many others might be interested, too. 
Thanks. 
Charles F. Munat Munat, Inc. Seattle, Washington chas@munat.com 
Charles, A full on-line curriculum for teaching the Web Content Accessibility Guidelines is at http://www.w3.org/WAI/wcag-curric . 
This curriculum includes extensive examples of HTML markup, which could be helpful in your course. 
Also some good HTML-related material in the Techniques document at http://www.w3.org/TR/WCAG-TECHS although that's not in curriculum format. 
- Judy Judy Brewer jbrewer@w3.org +1.617.258.9741 http://www.w3.org/WAI Director,Web Accessibility Initiative(WAI), World Wide Web Consortium(W3C) WAI Interest Group home page: http://www.w3.org/WAI/IG Unsubscribe? 
Send "unsubscribe" subject line: w3c-wai-ig-request@w3.org 
Questions? 
http://www.w3.org/WAI/IG/Overview.html#Uselist or wai@w3.org 
I've heard two schools of thought on alt tagging images. 
I'd appreciate a definitive answer, if one exists on this issue. 
1st school: Alt tag every image, no matter how insignificant. 
2nd school: If the image is a spacer gif or decorate bullet-type element, use "" (empty quotes). 
I was told by a user of screen readers that hearing the description of redundant elements was annoying, so I'm seeking clarification. 
Additionally, how does Bobby or any of the verification applications handle the empty tags? 
Thanks to the list for answering these very basic questions. 
Regards, MELINDA MORRIS-BLACK Information Architect Information Networks of Kansas FON: (785) 296-5143 PCS: (785) 550-7345 melinda@ink.org 
| I've heard two schools of thought on alt tagging images. 
I'd appreciate a | definitive answer, if one exists on this issue. 
I think the article at URL: really well. 
Karl Ove Hufthammer If you don't provide some knd of alt (text, or empty quotes) then you cannot create valid HTML for any version since 3.2 My preference is for empty quotes when there is nothing useful to say about the image (in terms of its function - if you want to add a title or longdesc, then feel free). 
Charles McCN I've heard two schools of thought on alt tagging images. 
I'd appreciate a definitive answer, if one exists on this issue. 
1st school: Alt tag every image, no matter how insignificant. 
2nd school: If the image is a spacer gif or decorate bullet-type element, use "" (empty quotes). 
I was told by a user of screen readers that hearing the description of redundant elements was annoying, so I'm seeking clarification. 
Additionally, how does Bobby or any of the verification applications handle the empty tags? 
Thanks to the list for answering these very basic questions. 
Regards, MELINDA MORRIS-BLACK Information Architect Information Networks of Kansas FON: (785) 296-5143 PCS: (785) 550-7345 melinda@ink.org 
W3C Web Accessibility Initiative http://www.w3.org/WAI Location: I-cubed, 110 Victoria Street, Carlton VIC 3053 Postal: GPO Box 2476V, Melbourne 3001, Australia Actually, what I should have typed was how does Bobby or any of the verification applications handle the empty quotes? 
Does it validate as compliant? 
Thanks to all that have responded. 
I can always count on quick responses from this group. 
The page Carl sent is particularly wonderful-- Regards, MELINDA MORRIS-BLACK Information Architect Information Networks of Kansas FON: (785) 296-5143 PCS: (785) 550-7345 melinda@ink.org 
Bobby passes null ALT tags. 
Missing ALT tags is valid for HTML 3.2. 
Null ALT is valid HTML 4x. 
Alan Flavell is brilliant and occasional contributes to this list. 
The article in question, however, is NOT strongly oriented towards consideration of the blind. 
For bullets and rules, use * and --- which have the advantage of not usually being spoken by a screen reader, unless the user asks for it. 
Reference nicely. 
| Alan Flavell is brilliant and occasional contributes to this list. 
The article in | question, however, is NOT strongly oriented towards consideration of the blind. 
For | bullets and rules, use * and --- which have the advantage of not usually being spoken | by a screen reader, unless the user asks for it. 
I disagree. 
If you use bullets, you should use the 'li' element (in 'ul' of course). 
If you want a rule, you should use the 'hr' element, specifically designed for this. 
Karl Ove Hufthammer I agree with Karl. 
Where markup exists, use it. 
That's an important part of writing in a markup language. 
Using a punctuation convention is the same as creating a new markup language, but one that is less-well understood... cheers Charles McCN | Alan Flavell is brilliant and occasional contributes to this list. 
The article in | question, however, is NOT strongly oriented towards consideration of the blind. 
For | bullets and rules, use * and --- which have the advantage of not usually being spoken | by a screen reader, unless the user asks for it. 
I disagree. 
If you use bullets, you should use the 'li' element (in 'ul' of course). 
If you want a rule, you should use the 'hr' element, specifically designed for this. 
Karl Ove Hufthammer W3C Web Accessibility Initiative http://www.w3.org/WAI Location: I-cubed, 110 Victoria Street, Carlton VIC 3053 Postal: GPO Box 2476V, Melbourne 3001, Australia We've had this discussion on the list more than a few times! 
The fundamentalists, of course, have the book on their side. 
The more pragmatic among us worry that such a strict literal interpretation, and the religious fervour demonstrated by those proponents, turns off the unconverted from the larger cause. 
In truth, it is hard to argue that modest accommodation of deprecated browsers (backwards compatibility) is a bad thing, except that such compromises can be perceived to help forestall the day of judgment when all the web, and the tools used therein, will be standards compliant. 
Some of the true believers will admit that this second coming is a long way off, but even they still author their pages with the expectation that this new age will happen in their lifetimes. 
For my own part, I would much rather see 1000 pages that were WCAG Level-A compliant than one HTML 4.01 strict (or even XHTML 1.0)! 
Something else that's been posted more than once here: Alan's directions for getting a decorative rule using HR and CSS. 
Presumably this trick works well for bullets too. 
I agree with the below and comments about mark up but if you do use images we are full back to how to implement them. 
even with mark up, I get tired of hearing the characters and character strings when I am reading with my screen reader though. 
I actually favor for reading purposes that we use devision words for rules. 
if we are putting in a rule, why. 
answer the why. 
do it in an attractive way and you can actually do it in clearly visible text and make the alt a "". using hr is the same thing. 
while I'll hear it in some browsers, it makes more sense if just below it is the reason for it. 
even if it is page 3. Thanks! 
Hands-On Technolog(eye)s ftp://poehlman.clark.net 
voice 301-949-7599 end sig. 
aloha, y'all! 
i agree with karl and charles -- where the markup exists, use it -- particularly when the markup is endowed with attributes that increase accessibility, by providing contextual/semantic information about the element or the segment of the document in which it is used... for example, prior to HTML4, i had to use an ugly hack in order to express logical divisions in documents, since the HR element in HTML 3.2 did not provide for alternative content, as it now does, courtesy of the title attribute... so, instead of using a kludge such as: i could use the title element, in conjunction with the HR element, thus: or which, incidentally, has the added benefit of not increasing the weight of the page for those with graphics turned on... of course, the problem is that most adaptive technologies do not recognize (or offer their users the option of exposing) the title attribute for the horizontal rule element, whereas they do recognize the alt attribute... which puts the page author between a rock and a hard place, which i think is bruce's point... what is more important -- ensuring that content is as accessible as possible now, using work-arounds based on legacy technology, or pushing page authors to implement markup languages according to the specifications (and, of course, to check not only for accessibility, but validity) while concurrently advocating that mainstream user agent manufacturers expose the extended semantic information (such as title and label and legend et. al.) so that adaptive technology developers can program their products to convey such information to the end user, which is, after all, the point of the exercise... of course, individual users should be able to configure their AT so as to provide them with as much or as little extended semantic information as that individual desires -- i personally would prefer an on-the-fly toggle for such a setting, for in some cases, i'd want to know what the horizontal rules signify, in others, i really don't care... if you want to trace this skein back to 1997, start at Gregg Vanderheiden's post, with the subject line "Title on Horizontal Rule" my comments at the time, archived at: follow: quote i too support a TITLE argument for horizontal rules, provided that the explanation of how to use the TITLE appropriately is also included in any discussion of using an ALT argument to signify a graphical line break, so as to avoid meaningless ALT/TITLE texts such as: horizontal rule straight line a line incorporating the olympic colors squiggly decorative line and the like... when i have had occasion to use graphical dividers (i.e. red or green bars), i have opted to either use the ALT tag either to mimic Lynx's rendering of an HR p align=center img src="redline.gif" 
height=4 width=600 alt="_________________________________________________________________" /p if the division is a purely aesthetic one... otherwise, i have used ALT text in conjunction with a graphical rule/divider precisely because there currently is no TITLE argument for the HR which would enable me to indicate the purpose of the content that follows the divider, as in the following example: p align=center img src="redline.gif" 
height=4 width=600 alt="The Fine Print: Please Read This Disclaimer at Least Once" /p or, when rendering an entire book, where it is often important to communicate the actual pagination of the printed edition, i have resorted to using the ALT kludge: p align=center img src="thinline.gif" height=1 width=600 alt="Begin Printed Page 86" /p if the TITLE argument was adapted, it would then be possible to use the less intrusive HR to indicate the printed edition's page breaks... unquote gregory. 
He that lives on Hope, dies farting -- Benjamin Franklin, Poor Richard's Almanack, 1763 Gregory J. Rosmaita unagi69@concentric.net 
WebMaster and Minister of Propaganda, VICUG NYC I must admit that I think characterising some people (I am not entirely clear whom, but suspect it might be me ;-) as quasi-religious and fanatical seems a bit unkind. 
In fact, it also detracts from the truth of the matter. 
Although I think it is important to write markup as well as possible, so that information is available for those who can take advatnage of it, and so there is some incentive for developers to bother providing accessibility improvements in their products, I am also very strongly of the opinion that real-world realities must be recognised if accessibility is going to be a possibility for the web at large. 
In the particular example of dividing sections, I would do something a bit different... 
For starters, I would use a div element to mark out the sections. 
This is the one way HTML provides of grouping a page into semantic chunks. 
And it allows a title attribute to describe the purpose of the div for readers (and if applicable a class attribute to describe it in machine-processing terms - e.g. to enable styling). 
Personally I would also give it borders using CSS - people without CSS capable browsers presumably haven't felt the need for my fancy styling, and I haven't felt the need to complicate my life by trying to hack it into existence - legacy browsers render content fine, if a little plain. 
However, I might also be inclined to add an hr element. 
This means that anyone will in fact get a standard horizontal rule, saving me the need to even think about what kind of alt might be required. 
For list items I would again use a list, styled with CSS so that anyone who doesn't see the need for CSS styling gets a list item in a familiar format and I don't have to worry about what is a useful alt. 
(Using a variety of speech systems quickly makes it clear that choosing the "correct alt text for markup" is best left to the user interface, rather than the author. 
(See also accesskey...) One of the things I find annoying about the legacy web is listst that aren't - non-web programs such as word processors have been able to deal with lists as a piece of structure for about a decade, so I don't see why I shouldn't expect the same of a language and environment designed around the idea of structured information. 
just my 2c worth Charles McCN aloha, y'all! 
i agree with karl and charles -- where the markup exists, use it -- particularly when the markup is endowed with attributes that increase accessibility, by providing contextual/semantic information about the element or the segment of the document in which it is used... for example, prior to HTML4, i had to use an ugly hack in order to express logical divisions in documents, since the HR element in HTML 3.2 did not provide for alternative content, as it now does, courtesy of the title attribute... so, instead of using a kludge such as: i could use the title element, in conjunction with the HR element, thus: or which, incidentally, has the added benefit of not increasing the weight of the page for those with graphics turned on... of course, the problem is that most adaptive technologies do not recognize (or offer their users the option of exposing) the title attribute for the horizontal rule element, whereas they do recognize the alt attribute... which puts the page author between a rock and a hard place, which i think is bruce's point... what is more important -- ensuring that content is as accessible as possible now, using work-arounds based on legacy technology, or pushing page authors to implement markup languages according to the specifications (and, of course, to check not only for accessibility, but validity) while concurrently advocating that mainstream user agent manufacturers expose the extended semantic information (such as title and label and legend et. al.) so that adaptive technology developers can program their products to convey such information to the end user, which is, after all, the point of the exercise... of course, individual users should be able to configure their AT so as to provide them with as much or as little extended semantic information as that individual desires -- i personally would prefer an on-the-fly toggle for such a setting, for in some cases, i'd want to know what the horizontal rules signify, in others, i really don't care... if you want to trace this skein back to 1997, start at Gregg Vanderheiden's post, with the subject line "Title on Horizontal Rule" my comments at the time, archived at: follow: quote i too support a TITLE argument for horizontal rules, provided that the explanation of how to use the TITLE appropriately is also included in any discussion of using an ALT argument to signify a graphical line break, so as to avoid meaningless ALT/TITLE texts such as: horizontal rule straight line a line incorporating the olympic colors squiggly decorative line and the like... when i have had occasion to use graphical dividers (i.e. red or green bars), i have opted to either use the ALT tag either to mimic Lynx's rendering of an HR p align=center img src="redline.gif" 
height=4 width=600 alt="_________________________________________________________________" /p if the division is a purely aesthetic one... otherwise, i have used ALT text in conjunction with a graphical rule/divider precisely because there currently is no TITLE argument for the HR which would enable me to indicate the purpose of the content that follows the divider, as in the following example: p align=center img src="redline.gif" 
height=4 width=600 alt="The Fine Print: Please Read This Disclaimer at Least Once" /p or, when rendering an entire book, where it is often important to communicate the actual pagination of the printed edition, i have resorted to using the ALT kludge: p align=center img src="thinline.gif" height=1 width=600 alt="Begin Printed Page 86" /p if the TITLE argument was adapted, it would then be possible to use the less intrusive HR to indicate the printed edition's page breaks... unquote gregory. 
He that lives on Hope, dies farting -- Benjamin Franklin, Poor Richard's Almanack, 1763 Gregory J. Rosmaita unagi69@concentric.net 
WebMaster and Minister of Propaganda, VICUG NYC W3C Web Accessibility Initiative http://www.w3.org/WAI Location: I-cubed, 110 Victoria Street, Carlton VIC 3053 Postal: GPO Box 2476V, Melbourne 3001, Australia Dear all, No offense was meant, mostly I was just trying to be funny. 
Guess I failed at that! 
Preaching to the choir is one thing. 
And I certainly would not be a regular here if I was bothered by constantly being reminded that I was not doing things quite the RIGHT way! 
I would just point that the original question was very simple. 
The thread generated has been very illuminative, but NOT entirely on topic. 
Which is the more compelling (and easier to sell) message: (1) Your pages can look pretty much just like they do now, you just have to do a few relatively easy things to make them accessible. 
You can pretty much keep working the way you have been, just be mindful of few more details. 
or (2) Your pages suck. 
You SHOULD be writing using strict HTML 4.01 (or even better, XHTML 1.0) and CSS. 
Redo everything you've got, and learn to author new pages differently. 
Cheers, Bruce Bailey Fair points... Charles McCN Dear all, No offense was meant, mostly I was just trying to be funny. 
Guess I failed at that! 
Preaching to the choir is one thing. 
And I certainly would not be a regular here if I was bothered by constantly being reminded that I was not doing things quite the RIGHT way! 
I would just point that the original question was very simple. 
The thread generated has been very illuminative, but NOT entirely on topic. 
Which is the more compelling (and easier to sell) message: (1) Your pages can look pretty much just like they do now, you just have to do a few relatively easy things to make them accessible. 
You can pretty much keep working the way you have been, just be mindful of few more details. 
or (2) Your pages suck. 
You SHOULD be writing using strict HTML 4.01 (or even better, XHTML 1.0) and CSS. 
Redo everything you've got, and learn to author new pages differently. 
Cheers, Bruce Bailey W3C Web Accessibility Initiative http://www.w3.org/WAI Location: I-cubed, 110 Victoria Street, Carlton VIC 3053 Postal: GPO Box 2476V, Melbourne 3001, Australia you all should be aware that some screen readers do not communicate hr at all. 
Hands-On Technolog(eye)s ftp://poehlman.clark.net 
voice 301-949-7599 end sig. 
aloha, charles! 
yes, use of the div element in conjunction with the title attribute is a far superior method of marking a block of text thank is the horizontal rule, as it marks all child blocks as part of that page -- which can be an important consideration when one is using web-based material which was converted from print, and where knowledge of the print conventions used in the original can be extremely important to the end user, something which is especially important when web-based content is being used in an academic setting... of course, getting the title from a div is even harder than obtaining it from a horizontal rule, even if you are using a user agent that exposes the content of the title attribute as a ToolTip OnMouseOver -- especially if you are incapable of using (or don't even own) a pointing device... it also doesn't help that those UAs that do support exposition of the title attribute do so spottily (expansion of title for ACRONYM but not ABBR in MSIE 5.01, for example), and that support for the tooltip method of exposing the title attribute changes drastically from release to release (i've been told that IE4, for example, exposed titles appended to horizontal rules OnMouseOver... hopefully, uniform (and universal) implementation of the W3C DOM in mainstream UAs will fix that, though, for it is from the DOM that a DOM-aware adaptive technology could extract such extended semantic information, and make it available to the user either on-demand, as a default, or not at all, depending upon the users' preference... and strict adherence to the User Agent Accessibility Guidelines will ensure that, if the user so desires, such extended semantic information will be available to users regardless of modality... gregory. 
He that lives on Hope, dies farting -- Benjamin Franklin, Poor Richard's Almanack, 1763 Gregory J. Rosmaita unagi69@concentric.net 
WebMaster and Minister of Propaganda, VICUG NYC Well, one way to get more information about what a page is doing is to use a WYSIWYG editor as a user agent - some of the better ones have enough functionality to rival more "traditional" browsers. 
Charles McCN aloha, charles! 
yes, use of the div element in conjunction with the title attribute is a far superior method of marking a block of text thank is the horizontal rule, as it marks all child blocks as part of that page -- which can be an important consideration when one is using web-based material which was converted from print, and where knowledge of the print conventions used in the original can be extremely important to the end user, something which is especially important when web-based content is being used in an academic setting... of course, getting the title from a div is even harder than obtaining it from a horizontal rule, even if you are using a user agent that exposes the content of the title attribute as a ToolTip OnMouseOver -- especially if you are incapable of using (or don't even own) a pointing device... it also doesn't help that those UAs that do support exposition of the title attribute do so spottily (expansion of title for ACRONYM but not ABBR in MSIE 5.01, for example), and that support for the tooltip method of exposing the title attribute changes drastically from release to release (i've been told that IE4, for example, exposed titles appended to horizontal rules OnMouseOver... hopefully, uniform (and universal) implementation of the W3C DOM in mainstream UAs will fix that, though, for it is from the DOM that a DOM-aware adaptive technology could extract such extended semantic information, and make it available to the user either on-demand, as a default, or not at all, depending upon the users' preference... and strict adherence to the User Agent Accessibility Guidelines will ensure that, if the user so desires, such extended semantic information will be available to users regardless of modality... gregory. 
He that lives on Hope, dies farting -- Benjamin Franklin, Poor Richard's Almanack, 1763 Gregory J. Rosmaita unagi69@concentric.net 
WebMaster and Minister of Propaganda, VICUG NYC W3C Web Accessibility Initiative http://www.w3.org/WAI Location: I-cubed, 110 Victoria Street, Carlton VIC 3053 Postal: GPO Box 2476V, Melbourne 3001, Australia aloha, charles! 
as a strategy for experiencing HTML 4x the way it was intended to work [1], charles suggested: quote one way to get more information about what a page is doing is to use a WYSIWYG editor as a user agent - some of the better ones have enough functionality to rival more "traditional" browsers. 
unquote unfortunately, the user interface (UI) -- or significant parts thereof -- of most WYSIWYG editors are themselves inaccessible, and even the browser emulation modes of several popular extended text editors aren't useful to anyone who can't see the screen [2] -- but thanks to ATAG [3] this is beginning to change -- or, at least, the developers are now aware of the full extent of the problems that need to be fixed, but for now, using an authoring tool to render content isn't a viable solution for a large number of users ... References [1] http://www.w3.org/TR/html401/conform.html [2] http://www.w3.org/WAI/AU/reviews/ [3] http://www.w3.org/TR/ATAG10 
