Hi, We, at NCST Bangalore, have developed a simple annotation system. 
The following are some of the functionalities supported : 1) Making Annotations on ANY resource that can be viewed in a browser ( Currently only MS Internet Explorer is supported ) 2) Storing annotations locally/posting to a central server 3) Viewing annotations (Local &amp; from one/more annotation servers) 4) SEARCHING for annotations 5) Replying to annotations made by others. 
The client is a plug-in for MS Internet Explorer (a toolbar &amp; a explorer bar). 
The annotation server was developed in Java. 
For more details, please visit http://www.ncb.ernet.in/groups/dake/annotate/ 
Thank you. 
Venkatasubramani S, R &amp; D Staff Scientist, National Centre for Software Technology, Bangalore - 561 229, India, Ph : +91-080-8523300 Ext 2422, URL : http://www.ncb.ernet.in/~venkat/ 
Hello, I did a similar program during my PhD (Yawas, available from http://www.univ-savoie.fr/labos/syscom/Laurent.Denoue/) but the implementation you have looks much better. 
However, as far as I can tell from the screenshot, I think you could improve something: - instead of a single icon at the beginning of the selected passage, I think it would be nice to anchor the original selection, say with a highlighted color like in Yawas or with two icons like CritLink. 
- let users search for keywords IN THE SELECTIONS - present the results of the search engine with a document summary. 
One of my results with Yawas is that the simple concatenation of the selected passages in a document are good to summarize it (when the highlights have been created by the person searching at least) - when browsing annotations, again it would be nice to use the selected passages to represent the document. 
Now, you simply display the document URL. 
A simple solution would be to display the selected passages when you mouse over the document URL in the list. 
I also have a few questions: 
- how did you manage to annotate PDF documents? 
Do you simply annotate the whole document or can you select some text as well? 
- can you annotate part of a picture or only the whole picture? 
How do the annotations appear in the original document? 
Very nice work! 
Laurent. 
- how did you manage to annotate PDF documents? 
Do you simply annotate the whole document or can you select some text as well? 
- can you annotate part of a picture or only the whole picture? 
How do the annotations appear in the original document? 
The annotea protocol, by using Xpointer can address any kind of XML document. 
So it can point into part of an SVG image, for example. 
Nick Kew and Jim Ley 
did some work on pointing into non XML documents using what they called a fuzzy pointer - essentially it relies on having some way of addressing part 
of an object. 
There are people working on how to point to a part of a flash presentation, 
and Adobe have been working on tagged PDF which should provide a way to point 
towards parts of a PDF document, although I am hardly an expert there. 
CHeers Chaals 
We have added the capacity for annotations to .pdf documents to PageSeeder this year, we use XPointer. 
It needs the user to have Acrobat (full version) and captures the Acrobat annotations into the PageSeeder system so that they can be shared over the web. 
More explanations are at Julie Gibson 
document. 
Ley 
part 
presentation, 
point 
Erm, I just looked, but I see nothing but a blank black background. 
Is your page black-on-black by any chance? 
Nick Kew 
There is a black background but the coloured type etc works OK for me in ie try http://www.weborganic.com/tour_frm.html that at least has a white frame. 
Julie 
Just for the record* : I hacked together a browser-interface annotation system prototype using JScript on IIS which is written up in "XML Application Development with MSXML 4.0" (Wrox Press). 
It uses (a subset of) the Annotea RDF language for data. 
As you might imagine, the biggest problem was the creation of XPointers from non-XPointer capable browsers such as IE. 
My crude but surprisingly usable solution was to have the user copy &amp; paste the section of text in the page they wished to annotate into a HTML form (the form appears in the browser below the source page). 
This string is then matched against the original text to locate it and with a bit of jiggerypokery the XPath + position obtained. 
If there is more than one matching block of text, the user is given the choice of the alternatives. 
To use MSXML on arbitrary HTML pages the source documents were (automatically) run through a COM implementation of HTML Tidy to produce XML. 
Once the XPointer was obtained, generated the RDF syntax was straightforward using regular DOM techniques (there wasn't any need in this app for the true RDF model). 
Going the other way, to display the annotated pages the original page is read and chopped up and the necessary HTML elements inserted to provide an icon and link to the comment, this augmented version being presented to the user's browser. 
This was absolutely usable. 
The source should be on Wrox's site if anyone's interested, if not, mail me. 
Cheers, Danny. 
* Royalties? 
What could you be suggesting..? "The lyf so short, the craft so long to lerne." - Chaucer 
From: www-annotation-request@w3.org [mailto:www-annotation-request@w3.org]On 
Behalf Of Charles McCathieNevile Sent: 03 December 2002 12:15 Subject: RE: A simple Annotation System 
"Danny Ayers" danny666@virgilio.it 
wrote in message news:EBEPLGMHCDOJJJPCFHEFEEEKJGAA.danny666@virgilio.it... 
Hmm, I think using IE's canonical representation is a little simpler, and you can see that it generally produces reasonably good and interworkable XPointers, other than inconsistencies in the HEAD portion of the document. 
(See work by me and Nick Kew) Snufkin, and Annozilla also have DOM to XPointer implementations in straight JS+DOM. 
I think the bigger problem is the whole using XPointer into HTML docs at all, Tidy is perhaps a better solution for allowing that. 
Jim. 
