As some of you know, we in the Web Accessibility Initiatiatve Evaluation and Repair (ER) Group have been working on a language, EARL [1] that describes accessibility of web sites to people with disabilities. 
The best way to implement EARL may well be as an application of Annotea. 
Would you tell us your thoughts on the following features? 
(rather than cross posting, I figure it's best to keep them on the Annotea list. 
I'll put a pointer to this discussion on the ER list), 1. 
How does or will Annotea deal with documents that change? 
For example, if a part of a document changes, comments regarding other parts of the document may still be valid, and we'd want those comments to stay useful. 
2. Can there be annotation of annotations? 
3. Will there be structured annotations? 
In other words, in addition to free form comments, comments that involve new machine readable statements. 
4. Accessibility of Amaya to people with disabilities is improving but there still seem to be some remaining problems, like need to use a mouse. 
Will annotea be accessible to people with disabilities, per the wai user agent guidelines [2] Len [1] http://www.w3.org/WAI/ER/IG/#earl [2] http://www.w3.org/WAI/UA/ Leonard R. Kasday, Ph.D. Institute on Disabilities/UAP and Dept. of Electrical Engineering at Temple University (215) 204-2247 (voice) (800) 750-7428 (TTY) Chair, W3C Web Accessibility Initiative Evaluation and Repair Tools Group The WAVE web page accessibility evaluation assistant: ooh, a bunch of good questions about any annotation system. 
I'm collecting RDF annotations models together in a document, which starts to look at these sorts of questions from the RDF point of view. 
Additions and comments would be very welcome. 
Libby Hello Leonard, Thanks for your message. 
First, a word of clarification. 
Annotea is a model that provides an RDF annotation schema and a protocol. 
When using annotations in Amaya, you're actually using an instance of an Annotea client (built-in into Amaya). 
We now have another client that uses javascript and attaches to your client as a bookmarklet. 
As our protocol and model are open, other clients could be written. 
We use XPointer to attach annotations to documents. 
The more robust the XPointer is, the less dependent the annotation will be of document changes. 
If you use ID attributes, the annotation will start from that attribute. 
Ideally, a combination of both ID attributes and DIV elements can help you have better XPointers. 
The point is that this has to be planned from the moment you make a document. 
A slightly deeper description of this, together with an example is given in the Amaya/Help/Annotations page. 
The Annotea model allows it. 
However, in the last released version of Amaya, it's not possible to do so. 
We're currently working on adding this feature, as well as the possibility to reply to annotations and viewing all those replies in a thread view. 
We plan to demo this at WWW10 DevDay. 
We haven't yet discussed this aspect in the Annotea team. 
You should distinguish between reading, parsing, and editing that information. 
Mixing EARL RDF statements with the Annotea statements is no problem. 
XML and NS allows to do that. 
From the user point of view, it's completely transparent if a user or, say, an EARL process generates an annotation. 
Once it is stored in a database (or in a file), we can browse it as any other annotation. 
If you want the user to be able to understand the EARL RDF statements, your application must be able to understand them or at least show them. 
Today, it's not possible to show those extra statements with Amaya. 
I don't know how you would like to add those EARL statements to the annotations. 
It could be done either as the body of the annotation (pointing to the EARL statemets), embeeded in the annotation structure, or as a link to some other resource, referenced from the annotation structure. 
I think you want to mean "will the Amaya implementation of Annotea be more accesible...". 
The answer is yes. 
For the moment, we have been building the infrastructure, but little by little we hope to make it more WAI friendly. 
Thanks again for your questions. 
-jose Hi Jose, Would you give a pointer to the annotea bookmarklet? 
Len p.s. For folks on this thread not familiar with bookmarklets see Leonard R. Kasday, Ph.D. Institute on Disabilities/UAP and Dept. of Electrical Engineering at Temple University (215) 204-2247 (voice) (800) 750-7428 (TTY) Chair, W3C Web Accessibility Initiative Evaluation and Repair Tools Group The WAVE web page accessibility evaluation assistant: The Xpointer uses the nearest id's whenever it can find them. 
So if the document contains them e.g. for titles, it is quite possible that many comments stay valid even after the document has changed. 
For documents that don't have id's and the beginning changes it is possible that annotations become orphaned. 
Orphaned annotations can still be seen at the beginning of the document and they can be reattached. 
Also some annotations can be in a wrong place. 
We have been thinking about ways to know that the document has changed after the annotation was made to warn people about that, but have not implemented anything yet. 
One simple thing could be to store also some textual context that can be compared with the annotated context. 
If we have a document that we cannot write to or control it's change we will have this problem regardless of annotations. 
If we can write to the document, it is good to add enough id's. 
Of course the info can be also added to the document but then it is more difficult to look that without the annotations. 
If we have a group we can control this with a social process e.g. we don't touch the old version, that is annotated but create a new corrected version based on that. 
Then there could be some easy ways of moving annotations between documents too. 
We are just implementing that. 
We are adding also discussion list type replies. 
We will be very interested in getting feedback about these features and if you need both or only one of them. 
The annotation can be structured already. 
It is now an XHTML document. 
Adding some specific RDF is more a user interface question than anything else. 
I mean how to make it easy for users who don't know RDF to add some evaluations. 
Please send amaya team suggestions of how to improve the accessibility of Amaya. 
I cannot talk behalf of them but I'm sure they are interested. 
We do aim that annotations are accessible and the first thing is to learn about the problems. 
Charles has promised to help also. 
Marja Hi Leonard, I have been working on the Annotea bookmarklets and their associated servlet and hope to make a public release by the end of this week or early next week. 
I intend to announce the availability to this list. 
I do want to make it very clear that the stuff I will release does NOT allow one to create fine-grained annotations. 
It only allows document-level annotations. 
I do hope that someone will have some suggestions on how to do fine-grained Annotea annotations via bookmarklets. 
Better yet, I'd like to some volunteer(s) to take what I've started and add the fine-grained support. 
Art Barstow Hello, With a bookmarklet, you can get the current selection in the browser window. 
So you can attach the annotation to any string. 
You will also need to browse frames in the document to find the frame where the selection came from and then pick up the URL of this frame. 
Here is an example with Internet Explorer (you can adapt this for netscape also, replacing document.selection 
by document.getSelection; 
note that with Netscape, I do not know DHTML enought to dynamically change the color of the highlighted text... whereas it's easy with IE): javascript:rng=null;loc=location.href;if(this.length==0){sel=document.select ion}else{encore=true;for(i=0;encore&amp;&amp;(i this.length);i++){sel = this.frames[i].document.selection;if 
(sel.createRange().text!="") {encore=false}}};sel.createRange().execCommand("BackColor","","yellow");txt= 
sel.createRange().text;sel.empty();if 
(txt=="")txt=" whole document ";comment=prompt("New annotation for\n"+txt,"");alert("Attached to="+txt+"\nComment="+comment); You might improve this example by getting some context to the selection or make sure the string you've selected is unique in the document, or get the ID of the nearest element in the document, etc. Talking about XPointers to anchor annotations, I'm not sure that using IDs is a good idea: users do not expect annotations to remain on the document if the CONTENT has changed! 
Imagine you highlight a title in the CNN home page. 
The next day, the title will be different, but you will still get your OLD annotation. 
Of course, there might be cases when people want to explicitely attach annotations to the structure of the document, although I cannot find compelling examples. 
But in the general case, people attach annotations to the CONTENT. 
So you may use IDs in the document to help the algorithm locate those annotations, but you should also use CONTENT (and in my opinion, CONTENT should remain the main heuristic). 
You could also read the paper from Microsoft "Robust Annotation Positioning in Digital Documents." available at Laurent. 
