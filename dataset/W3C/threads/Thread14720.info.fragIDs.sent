Hi, FYI - my recent posting to CHI-WEB. 
Scott Hi, I'll try to respond to several messages in this one note. 
Someone brought up the issue of "Separate is Unequal". 
There is no consistant view of this within the disabled community. 
Some people have very strong philosophical points of view on assumption. 
Other people are more pragmatic. 
For example, stairs and ramps are of equal value. 
Stairs are more efficient to use by people who can walk while ramps are more efficient for people who use wheelchairs. 
One is not necessarily any better than the other. 
Nor would it be appropriate to require that all people use only one, e.g. ramps. 
A very, very major concern about multiple versions of a web page is being sure that all versions have the same updated information. 
I believe that this problem could be addressed by using various tools or technologies and I've been looking at three levels of approaches for keeping multiple versions of the same web page in sync. 
The simplest level is where a standard web page is created but the developer includes information in the web page which guides an 'extractor' which develops an alternate version of a web page. 
The second level is where the server works with self-configuring web pages which use conditionals, macros, symbols, etc, for creating different versions of itself. 
The third level is where XML and XSLT is used to create the various versions of a web page. 
The simplest version has the advantage that it can probably be easily learned by web designers without their needing to be programmers. 
The third level takes advantage of the power of XML/XSLT, but its draw back is that some programming background is almost required. 
The self-configuring web pages have some of the simplicity of the first level, but avoids the complexity of implementing XML/XSLT of the third level. 
Here's a little more detail on the first level of approach. 
First, I'm going to be looking at accessibility from the point of: 
Can a disabled person use a piece of technology with as much efficiency, ease of use and accuracy as that experienced by a non-disabled person using the technology? 
rather than: Can the person with a disability use a piece of technology? 
Traditionally, people have looked at accessibility from the second point of view. 
I believe the more appropriate way to look at accessibility is from the first point of view mentioned. 
I'm also going to propose that a universal web page be a basic web page without a lot of frills that can be used by a variety of people. 
(I'm not wedded to the name "universal web page", but am open to other names.) 
A universal web page would have a pretty standard liner format like: TITLE INTRODUCTION INDEX OF LINKS TO SECTIONS OF WEB PAGE SECTION SECTION SECTION Each section of a universal web page would have the same basic format: Section name Link to previous section, link to index of sections, link to next section Section body In addition, the section body would primarily contain text. 
This structure would have several advantages. 
Little use of frills means that the universal web page can be used with a variety of browsers. 
Also, the bandwidth wouldn't be very high. 
The general structure would benefit blind users. 
The index of sections at the beginning would present an overview of the web page which would help understanding the web page. 
The linear format would also help with understanding the organization of the web page. 
The linear format, the index of links to sections and the ability to link from section to section provide simple, but fairly complete navigation of the web page. 
The idea of the 'extractor' is that it is a tool used to extract a universal web page from a standard web page. 
The tool could be used by the web page designer or could also be used by a server to automatically create the 'universal' version of a web page. 
(The extractor does NOT live at the user's computer.) 
The key issue is that the web page designer includes some directives to the extractor in the web page in addition to the HTML. 
This is going to be getting a little theoretical now. 
Suppose that there is a universal web page (UWP) whose design is pretty accessibile. 
Now suppose that the web page designer decides that he/she wants to make it more visually appealing by using tables to put the various sections of the UWP into a more interesting format. 
By using tables, the web page designer has introduced accessibility problems and created more work for himself/herself. 
The web page designer could use CSS, but that can be a lot more work than using tables. 
However, the problem with tables and accessibility is that the web page designer would then have to figure out what linearization is and then run various tests. 
However, suppose that when the web page designer creates the web page, additional information is stored in the web page to direct the extractor on how to create a universal web page. 
For example, the web page designer could include a special comment to the extractor like: This article discusses The comment tells the extractor to extract the text contents of the cell and make it a section on the UWP. 
The combination of the special comments and the extractor avoids the problem of the web page designer having to figure out how tables will be linearized. 
A number of extractor directives could be specified. 
For example: !-- universal-extractor: include -- (The extractor directives could also be TAGS, but then that complicates the process.) I think that the extractor approach could be inplemented for some web sites by using something like a perl script. 
Scott 
TO:w3c-wai-gl@w3.org 
Hi, Not all users are benefitted by text-only or text-rich sites. 
It is difficult to please everyone and thus the quote: Can a disabled person use a piece of technology with as much efficiency, ease of use and accuracy as that experienced by a non-disabled person using the technology? 
I believe is idealistic and is also our idealogy (and rightly so), but we will need to settle for people just being able to access the information. 
Hi, FYI - my recent posting to CHI-WEB. 
Scott Hi, I'll try to respond to several messages in this one note. 
Someone brought up the issue of "Separate is Unequal". 
There is no consistant view of this within the disabled community. 
Some people have very strong philosophical points of view on assumption. 
Other people are more pragmatic. 
For example, stairs and ramps are of equal value. 
Stairs are more efficient to use by people who can walk while ramps are more efficient for people who use wheelchairs. 
One is not necessarily any better than the other. 
Nor would it be appropriate to require that all people use only one, e.g. ramps. 
A very, very major concern about multiple versions of a web page is being sure that all versions have the same updated information. 
I believe that this problem could be addressed by using various tools or technologies and I've been looking at three levels of approaches for keeping multiple versions of the same web page in sync. 
The simplest level is where a standard web page is created but the developer includes information in the web page which guides an 'extractor' which develops an alternate version of a web page. 
The second level is where the server works with self-configuring web pages which use conditionals, macros, symbols, etc, for creating different versions of itself. 
The third level is where XML and XSLT is used to create the various versions of a web page. 
The simplest version has the advantage that it can probably be easily learned by web designers without their needing to be programmers. 
The third level takes advantage of the power of XML/XSLT, but its draw back is that some programming background is almost required. 
The self-configuring web pages have some of the simplicity of the first level, but avoids the complexity of implementing XML/XSLT of the third level. 
Here's a little more detail on the first level of approach. 
First, I'm going to be looking at accessibility from the point of: 
Can a disabled person use a piece of technology with as much efficiency, ease of use and accuracy as that experienced by a non-disabled person using the technology? 
rather than: Can the person with a disability use a piece of technology? 
Traditionally, people have looked at accessibility from the second point of view. 
I believe the more appropriate way to look at accessibility is from the first point of view mentioned. 
I'm also going to propose that a universal web page be a basic web page without a lot of frills that can be used by a variety of people. 
(I'm not wedded to the name "universal web page", but am open to other names.) 
A universal web page would have a pretty standard liner format like: TITLE INTRODUCTION INDEX OF LINKS TO SECTIONS OF WEB PAGE SECTION SECTION SECTION Each section of a universal web page would have the same basic format: Section name Link to previous section, link to index of sections, link to next section Section body In addition, the section body would primarily contain text. 
This structure would have several advantages. 
Little use of frills means that the universal web page can be used with a variety of browsers. 
Also, the bandwidth wouldn't be very high. 
The general structure would benefit blind users. 
The index of sections at the beginning would present an overview of the web page which would help understanding the web page. 
The linear format would also help with understanding the organization of the web page. 
The linear format, the index of links to sections and the ability to link from section to section provide simple, but fairly complete navigation of the web page. 
The idea of the 'extractor' is that it is a tool used to extract a universal web page from a standard web page. 
The tool could be used by the web page designer or could also be used by a server to automatically create the 'universal' version of a web page. 
(The extractor does NOT live at the user's computer.) 
The key issue is that the web page designer includes some directives to the extractor in the web page in addition to the HTML. 
This is going to be getting a little theoretical now. 
Suppose that there is a universal web page (UWP) whose design is pretty accessibile. 
Now suppose that the web page designer decides that he/she wants to make it more visually appealing by using tables to put the various sections of the UWP into a more interesting format. 
By using tables, the web page designer has introduced accessibility problems and created more work for himself/herself. 
The web page designer could use CSS, but that can be a lot more work than using tables. 
However, the problem with tables and accessibility is that the web page designer would then have to figure out what linearization is and then run various tests. 
However, suppose that when the web page designer creates the web page, additional information is stored in the web page to direct the extractor on how to create a universal web page. 
For example, the web page designer could include a special comment to the extractor like: !-- universal-extractor: begin-extract sectionname="Main article" PRIORITY=4 -- This article discusses The comment tells the extractor to extract the text contents of the cell and make it a section on the UWP. 
The combination of the special comments and the extractor avoids the problem of the web page designer having to figure out how tables will be linearized. 
A number of extractor directives could be specified. 
For example: !-- universal-extractor: include -- (The extractor directives could also be TAGS, but then that complicates the process.) I think that the extractor approach could be inplemented for some web sites by using something like a perl script. 
Scott 
Hi, Yes, you're right about the text-only/text-rich web site. 
These understand of these needs is still evolving and I was reluctant to bring it up at CHI-WEB. 
Scott 
I agree that the quote: "Can a disabled person use a piece of technology with as much efficiency, ease of use and accuracy as that experienced by a non-disabled person using the technology?" is idealistic and a goal to strive for. 
But the key word here is strive. 
Most developers would run screaming in the other direction if faced with this statement as a requirement. 
A statement more in the lines of: A person with a disability should be able to use the technology, preferably with the same ease of use, efficiency and accuracy as a non-disabled person. 
(I'm not happy with the word should, it doesn't sound enough like a requirement - but you get the idea) This sets up the goal - but doesn't confine a developer to it. 
Clients want websites that are visually interesting as well as usable, and they aren't willing to give up one for the other. 
So solutions that provide both are necessary. 
I think there maybe some easier ways to maintain multiple versions of a web page without knowing PERL or other programming languages, or making it a maintanence nightmare. 
The ability to use Server-side includes may not be an option for everyone, but they are very powerful. 
Consider a page from the graphics version of the website, and a page from the text only version, as "templates". 
All the navigation for the templates is done via includes so there are only a couple of files to maintain. 
The content itself is an include file. 
To change the content you update the content include and both the graphics version and the text only version are updated. 
Granted it requires a little extra effort to setup 2 templates, but the text only version is so basic that it isn't excessive. 
I also think that the 3rd level of XML that Scott mentioned is where this will all eventually end up. 
A complete separation of content from presentation. 
Eugenia Eugenia Slaydon Lead Content Developer Beacon Technologies, Inc. 336-931-1295 ext. 
225 Hi, Not all users are benefitted by text-only or text-rich sites. 
It is difficult to please everyone and thus the quote: Can a disabled person use a piece of technology with as much efficiency, ease of use and accuracy as that experienced by a non-disabled person using the technology? 
I believe is idealistic and is also our idealogy (and rightly so), but we will need to settle for people just being able to access the information. 
-----Original Message----- Hi, FYI - my recent posting to CHI-WEB. 
Scott Hi, I'll try to respond to several messages in this one note. 
Someone brought up the issue of "Separate is Unequal". 
There is no consistant view of this within the disabled community. 
Some people have very strong philosophical points of view on assumption. 
Other people are more pragmatic. 
For example, stairs and ramps are of equal value. 
Stairs are more efficient to use by people who can walk while ramps are more efficient for people who use wheelchairs. 
One is not necessarily any better than the other. 
Nor would it be appropriate to require that all people use only one, e.g. ramps. 
A very, very major concern about multiple versions of a web page is being sure that all versions have the same updated information. 
I believe that this problem could be addressed by using various tools or technologies and I've been looking at three levels of approaches for keeping multiple versions of the same web page in sync. 
The simplest level is where a standard web page is created but the developer includes information in the web page which guides an 'extractor' which develops an alternate version of a web page. 
The second level is where the server works with self-configuring web pages which use conditionals, macros, symbols, etc, for creating different versions of itself. 
The third level is where XML and XSLT is used to create the various versions of a web page. 
The simplest version has the advantage that it can probably be easily learned by web designers without their needing to be programmers. 
The third level takes advantage of the power of XML/XSLT, but its draw back is that some programming background is almost required. 
The self-configuring web pages have some of the simplicity of the first level, but avoids the complexity of implementing XML/XSLT of the third level. 
Here's a little more detail on the first level of approach. 
First, I'm going to be looking at accessibility from the point of: 
Can a disabled person use a piece of technology with as much efficiency, ease of use and accuracy as that experienced by a non-disabled person using the technology? 
rather than: Can the person with a disability use a piece of technology? 
Traditionally, people have looked at accessibility from the second point of view. 
I believe the more appropriate way to look at accessibility is from the first point of view mentioned. 
I'm also going to propose that a universal web page be a basic web page without a lot of frills that can be used by a variety of people. 
(I'm not wedded to the name "universal web page", but am open to other names.) 
A universal web page would have a pretty standard liner format like: TITLE INTRODUCTION INDEX OF LINKS TO SECTIONS OF WEB PAGE SECTION SECTION SECTION Each section of a universal web page would have the same basic format: Section name Link to previous section, link to index of sections, link to next section Section body In addition, the section body would primarily contain text. 
This structure would have several advantages. 
Little use of frills means that the universal web page can be used with a variety of browsers. 
Also, the bandwidth wouldn't be very high. 
The general structure would benefit blind users. 
The index of sections at the beginning would present an overview of the web page which would help understanding the web page. 
The linear format would also help with understanding the organization of the web page. 
The linear format, the index of links to sections and the ability to link from section to section provide simple, but fairly complete navigation of the web page. 
The idea of the 'extractor' is that it is a tool used to extract a universal web page from a standard web page. 
The tool could be used by the web page designer or could also be used by a server to automatically create the 'universal' version of a web page. 
(The extractor does NOT live at the user's computer.) 
The key issue is that the web page designer includes some directives to the extractor in the web page in addition to the HTML. 
This is going to be getting a little theoretical now. 
Suppose that there is a universal web page (UWP) whose design is pretty accessibile. 
Now suppose that the web page designer decides that he/she wants to make it more visually appealing by using tables to put the various sections of the UWP into a more interesting format. 
By using tables, the web page designer has introduced accessibility problems and created more work for himself/herself. 
The web page designer could use CSS, but that can be a lot more work than using tables. 
However, the problem with tables and accessibility is that the web page designer would then have to figure out what linearization is and then run various tests. 
However, suppose that when the web page designer creates the web page, additional information is stored in the web page to direct the extractor on how to create a universal web page. 
For example, the web page designer could include a special comment to the extractor like: !-- universal-extractor: begin-extract sectionname="Main article" PRIORITY=4 -- This article discusses The comment tells the extractor to extract the text contents of the cell and make it a section on the UWP. 
The combination of the special comments and the extractor avoids the problem of the web page designer having to figure out how tables will be linearized. 
A number of extractor directives could be specified. 
For example: !-- universal-extractor: include -- (The extractor directives could also be TAGS, but then that complicates the process.) I think that the extractor approach could be inplemented for some web sites by using something like a perl script. 
Scott 
There's another way to do this too, which is in pretty widespread use for other purposes out in the real world. 
The content is in a database The web page is a template composed of a server-side script that pulls the content out of a database, and some HTML for pretty headers, navigation, etc. 
On a site that already works like this (and a lot of them do), adding a second page that pulls the same content out of the database and formats it differently is not hard. 
It's also impossible for the content to get out of synch, because it is the same content from the same source. 
The only part that requires any level of cleverness is designing a mechanism for users to switch between versions, save their preferences, etc. 
The technology to do this is simple, but designing a good UI for it takes some skill. 
Hi, FYI - my recent posting to CHI-WEB. 
Scott Hi, I'll try to respond to several messages in this one note. 
Someone brought up the issue of "Separate is Unequal". 
There is no consistant view of this within the disabled community. 
Some people have very strong philosophical points of view on assumption. 
Other people are more pragmatic. 
For example, stairs and ramps are of equal value. 
Stairs are more efficient to use by people who can walk while ramps are more efficient for people who use wheelchairs. 
One is not necessarily any better than the other. 
Nor would it be appropriate to require that all people use only one, e.g. ramps. 
A very, very major concern about multiple versions of a web page is being sure that all versions have the same updated information. 
I believe that this problem could be addressed by using various tools or technologies and I've been looking at three levels of approaches for keeping multiple versions of the same web page in sync. 
The simplest level is where a standard web page is created but the developer includes information in the web page which guides an 'extractor' which develops an alternate version of a web page. 
The second level is where the server works with self-configuring web pages which use conditionals, macros, symbols, etc, for creating different versions of itself. 
The third level is where XML and XSLT is used to create the various versions of a web page. 
The simplest version has the advantage that it can probably be easily learned by web designers without their needing to be programmers. 
The third level takes advantage of the power of XML/XSLT, but its draw back is that some programming background is almost required. 
The self-configuring web pages have some of the simplicity of the first level, but avoids the complexity of implementing XML/XSLT of the third level. 
Here's a little more detail on the first level of approach. 
First, I'm going to be looking at accessibility from the point of: 
Can a disabled person use a piece of technology with as much efficiency, ease of use and accuracy as that experienced by a non-disabled person using the technology? 
rather than: Can the person with a disability use a piece of technology? 
Traditionally, people have looked at accessibility from the second point of view. 
I believe the more appropriate way to look at accessibility is from the first point of view mentioned. 
I'm also going to propose that a universal web page be a basic web page without a lot of frills that can be used by a variety of people. 
(I'm not wedded to the name "universal web page", but am open to other names.) 
A universal web page would have a pretty standard liner format like: TITLE INTRODUCTION INDEX OF LINKS TO SECTIONS OF WEB PAGE SECTION SECTION SECTION Each section of a universal web page would have the same basic format: Section name Link to previous section, link to index of sections, link to next section Section body In addition, the section body would primarily contain text. 
This structure would have several advantages. 
Little use of frills means that the universal web page can be used with a variety of browsers. 
Also, the bandwidth wouldn't be very high. 
The general structure would benefit blind users. 
The index of sections at the beginning would present an overview of the web page which would help understanding the web page. 
The linear format would also help with understanding the organization of the web page. 
The linear format, the index of links to sections and the ability to link from section to section provide simple, but fairly complete navigation of the web page. 
The idea of the 'extractor' is that it is a tool used to extract a universal web page from a standard web page. 
The tool could be used by the web page designer or could also be used by a server to automatically create the 'universal' version of a web page. 
(The extractor does NOT live at the user's computer.) 
The key issue is that the web page designer includes some directives to the extractor in the web page in addition to the HTML. 
This is going to be getting a little theoretical now. 
Suppose that there is a universal web page (UWP) whose design is pretty accessibile. 
Now suppose that the web page designer decides that he/she wants to make it more visually appealing by using tables to put the various sections of the UWP into a more interesting format. 
By using tables, the web page designer has introduced accessibility problems and created more work for himself/herself. 
The web page designer could use CSS, but that can be a lot more work than using tables. 
However, the problem with tables and accessibility is that the web page designer would then have to figure out what linearization is and then run various tests. 
However, suppose that when the web page designer creates the web page, additional information is stored in the web page to direct the extractor on how to create a universal web page. 
For example, the web page designer could include a special comment to the extractor like: !-- universal-extractor: begin-extract sectionname="Main article" PRIORITY=4 -- This article discusses The comment tells the extractor to extract the text contents of the cell and make it a section on the UWP. 
The combination of the special comments and the extractor avoids the problem of the web page designer having to figure out how tables will be linearized. 
A number of extractor directives could be specified. 
For example: !-- universal-extractor: include -- (The extractor directives could also be TAGS, but then that complicates the process.) I think that the extractor approach could be inplemented for some web sites by using something like a perl script. 
Scott 
Hi, The UI issue may not be that hard for the most basic case of only two versions of a web page. 
One version could be the information in a very simple, pretty linear format while the other has all the complications that the web page designer would like. 
If the first is called the 'universal' format (I'm still looking for another name), it would be just a matter of having the 'universal' 
tree, e.g. www.zzz.com/universal . 
A third tree could possibly be added, but after that a different approach probably needs to be considered. 
Scott 
tree, e.g. www.zzz.com/universal 
I agree it needs a different name -- if just for the reason that it's absurd to suggest that a page which meets the needs for a blind user is necessarily going to be the best format for meeting the needs of a user with cognitive disabilities. 
--Kynn 
Kynn Bartlett kynn@idyllmtn.com http://kynn.com 
Chief Technologist, Idyll Mountain http://idyllmtn.com 
Web Accessibility Expert-for-hire http://kynn.com/resume 
January Web Accessibility eCourse http://kynn.com/+d201 
Hi, Kynn 
I'm really not sure what to do about cognitive disabilities, especially because the needs of one cognitivie disability can be in conflict with the needs of another cognitive disability, e.g. more images versus more text. 
I was thinking that a "no frills version" might be somewhat universal because it could be used by blind people if an appropriate format is developed, by people with older computers and browsers and by people who have low band width. 
However, it doesn't really address people with other needs, e.g. small screen real estate. 
Another word which was suggested was "generic", which is probably slightly better, but might still imply more diversity than is really provided. 
Any ideas? 
Scott 
Hi, Another name for the "no frills" version of a web page occurred. 
How does the "basic browser" version sound? 
Scott 
Ah, but remember that multiple versions automatically generated can solve _exactly_ that problem -- conflict between the needs of one disability type and another! 
:) --Kynn 
Kynn Bartlett kynn@idyllmtn.com http://kynn.com 
Chief Technologist, Idyll Mountain http://idyllmtn.com 
Web Accessibility Expert-for-hire http://kynn.com/resume 
January Web Accessibility eCourse http://kynn.com/+d201 
Hi, I', sorry. 
I wasn't very clear. 
I meant I didn't know how to come up with a name which would be appropriate with regards to cognitive disabilities. 
Scott 
Actually I don't think there is going to be a universal solution where there are 3, or 4, or two versions of a page that collectively p[roviide full accessibility. 
Different kinds of content will be most easily made accessible by allowing access in different ways - in some cases by providing a single page that supports a high degree of re-rendering, in others by providing several specialised renderings with linkage between them. 
A "Generic" version as one among many is always a good option, because it is actually quite difficult to ensure that all different needs have been met. 
In addition, if there is an underlying source that is processed, it is often a good idea to provide access to that as well (for example, I can use a database to collect content, and build navigation paths through it on the fly, but it is helpful to have a simple way to get at all the content - for example to enable search engines to point to something in the database. 
A more accessibility-related use case is to enable someone to build a new optimised interface to that data, similar to the ability some portals have to allow for (usually very limited) customisation. 
Accordingh to research done on customising portals at Monash University (I read a paper that I can't find - I think it was by Dey Alexander) if I recall correctly only a few percent actually customise the portal, but they appreciate greatly the ability to do so. 
If that few percent happens to be a group of people with disabilities, it is just as well to have enabled it. 
Cheers Charles Hi, Kynn I'm really not sure what to do about cognitive disabilities, especially because the needs of one cognitivie disability can be in conflict with the needs of another cognitive disability, e.g. more images versus more text. 
I was thinking that a "no frills version" might be somewhat universal because it could be used by blind people if an appropriate format is developed, by people with older computers and browsers and by people who have low band width. 
However, it doesn't really address people with other needs, e.g. small screen real estate. 
Another word which was suggested was "generic", which is probably slightly better, but might still imply more diversity than is really provided. 
Any ideas? 
Scott 
Location: 21 Mitchell street FOOTSCRAY Vic 3011, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) 
I don't think there's going to be a universal solution where any n number of versions can provide "full accessibility", whatever that means. 
(Note that we're still working on good definitions for "accessibility", let alone full accessibility.) And by n I include one. 
I don't think a single version of a page is going to be more accessible than two (assuming they're built right), and I think there's a good chance two will be more accessible than one. 
The more ways you express something, the greater the chance that it will reach the audience, if you're doing it right. 
By offering multiple choices of a web site, especially when it's technically trivial (such as customizing a database-driven web site) you've already increased the odds of any given user falling within the sphere of use of one of your versions. 
--Kynn Kynn Bartlett kynn@idyllmtn.com http://kynn.com 
Chief Technologist, Idyll Mountain http://idyllmtn.com 
Web Accessibility Expert-for-hire http://kynn.com/resume 
January Web Accessibility eCourse http://kynn.com/+d201 
Forthcoming: Teach Yourself CSS in 24 Hours 
