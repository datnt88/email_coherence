Here's some questions (with proposed answers) to get us thinking about rdfms-graph. 
I'm also curious whether there are other questions that should be considered part of the resolution -- the issue description isn't really enough for me to tell. 1) Does an RDF graph have a URI? 
It is a Resource, and it can. 
M&amp;S does not define a specific one. 
2) Is an RDF graph a set or a bag? 
A set, as it has conjunctive assertion semantics, or whatever they're called: (A &amp;&amp; A) = (A) 3) Can a node exist in a graph without any properties? 
Yes. 
This is indicated in the current XML syntax with an empty Description element. 
Do people disagree and/or think there are other questions that need to be answered? 
"Aaron Swartz" | ...schoolyard subversion... http://www.aaronsw.com/ 
| because school makes kids dumb The use case I have in mind is a metadata repository where new resources are constantly being added, but they may be 'tagged' at a later time. 
In this case, an empty would indicate that the resource urn:myscheme:some_object_id is a part of the current domain of discourse, but nothing has been said about it. 
So the resource is flagged as one that needs someone to meta-tag it. 
Of course, there are many other ways to solve this such as meta-meta info to indicate the tagging information, but this isn't reason enough to explicitly disallow it... cheers, - steve Stephen Petschulat Graham Klyne imore.com 
cc: w3c-rdfcore-wg@w3.org 
Subject: Re: rdfms-graph: Food for thought 16/07/2001 05:36 AM Please respond to Graham Klyne Agreed. 
Note that it brings the Subject into the RDF graph... the lack of arcs itself can be meaningful. 
Really? 
That (i.e. "the lack of arcs itself can be meaningful") goes against my understanding of RDF. #g Graham Klyne Baltimore Technologies Strategic Research Content Security Group The information contained in this message is confidential and is intended for the addressee(s) only. 
If you have received this message in error or there are any problems please notify the originator immediately. 
The unauthorized use, disclosure, copying or alteration of this message is strictly forbidden. 
Baltimore Technologies plc will not be liable for direct, special, indirect or consequential damages arising from alteration of the contents of this message by a third party or as a result of any virus being passed on. 
This footnote confirms that this email message has been swept by Baltimore MIMEsweeper for Content Security threats, including computer viruses. 
Steve, Your approach seems entirely reasonable to me as an application design, but I'm not sure that it's something we want to be forced to standardize, which I fear may be the result of allowing it in the abstract RDF syntax. 
E.g. when exchanging RDF between systems (the reason for standardization), do we really want to specify that the existence of a node, without properties, is significant? 
If so, we must define the significance, and that looks awkward to me. 
I suppose I'm not arguing to prohibit property-less nodes so much as saying I don't think we should try to define them as part of a standard. 
IMO, the abstract syntax and associated semantics where such things appear is intended to unambiguously specify the intent of what we do define, not to prohibit (or say anything about) what we don't define. 
#g Graham Klyne Baltimore Technologies Strategic Research Content Security Group Can you explain why this seems awkward to you? 
It seems like a perfectly reasonable thing to do to me. 
The alternative seems to declare that: means: foo rdf:type rdfs:Resource . 
which seems even more awkward. 
"Aaron Swartz" | ...schoolyard subversion... http://www.aaronsw.com/ 
| because school makes kids dumb As a data point it would be interesting to know how current implementations deal with empty Description elements. 
SiRPAC generates zero triples for the following test cases: I don't see anything in the spec that says whether this behavior is correct or not. 
Art 
