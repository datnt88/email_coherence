Terje just pointed this one at me. 
I just looked at it. 
Bj?rn reports an alleged bug. 
I'm not convinced, and commented: The bug report seems to me to be in error. 
Or, more specifically, it hinges on whether unescaped ? is allowed in a QUERY_STRING. 
It may be unsafe(?), but is AFAICS nevertheless legal, so ISTM SP is working correctly, and the bug is in the serverside script. 
Lynx agrees: [nick@jarl nick]$ lynx -dump -source [nick@jarl nick]$ lynx -dump -source If someone can convince me otherwise, I could patch it fairly easily to escape 8-bit URIs, but I fear that could introduce serious bugs when working with a 16-bit charset. 
So at the very least I'd have to ask on openjade-devel. 
Bj?rn is basically saying that OpenSP should have escaped the first URL to the second. 
AFAICS it would not be wrong to do so, but neither is it required. 
Who is right? 
Nick Kew I am :-) See section 4.2.2 of XML 1.0, * Each disallowed character is converted to UTF-8 [IETF RFC 2279] as one or more bytes. 
* Any octets corresponding to a disallowed character are escaped with the URI escaping mechanism (that is, converted to %HH, where HH is the hexadecimal notation of the byte value). 
* The original character is replaced by the resulting character sequence. 
This is a MUST. 
I don't see any disallowed character under #2.1 of rfc2396 in your testcase. 
Applying the rather different rules you referenced is going to lead to deeper bugs than this alleged one. 
Your testcase was declared as iso-8859-1, so escaping as UTF-8 is at best perverse, and breaks commonsense. 
This is relevant here as OpenSP groks SGML (and on the web in general where agents grok some form of HTML). 
If your testcase had declared a 16-bit charset, then AFAICS that rule would lead to more brokenness. 
I'm thinking as I write: what happens if we apply perverse-XML rules when OpenSP's -wxml is in force? 
This avoids breaking SGML, but I'm not convinced about implementing it. 
Terje, how are we applying iconv to incoming documents these days? 
ISTM that any document that is converted to utf-8 before being processed by OpenSP sidesteps this problem altogether (because iconv does the job). 
Nick Kew All incoming documents are converted to UTF-8 before being fed to OpenSP. 
There is a U+00F6 (LATIN SMALL LETTER O WITH DIAERESIS), URIS most not contain non-ASCII characters, see e.g. section 2.4 of RFC 2396. 
Well, it's a normative requirement of XML 1.0, and actually using UTF-8 for disallowed characters in URIs *is* commonsense, you'll find a similar section in HTML 4.01 (appendix B.2.1), take a look at The requirement in XML 1.0 is however only for the system identifier and there are XML processors that implement it the way the recommendation wants it, e.g. 
