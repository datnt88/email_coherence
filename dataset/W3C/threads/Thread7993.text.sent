This issue was originally raised by Sanford Barr: The description of the issue is: Is there a need for a PUTL (put which succeeds only if the resource is locked) method to avoid certain classes of overwrite conflicts, or a need to restrict the behavior of PUT on WebDAV servers to only accept writes if the resource is locked? 
Additional background rationale is provided in Section 6.7 ("Usage Considerations") of RFC 2518: Two clients A and B are interested in editing the resource ' index.html'. 
Client A is an HTTP client rather than a WebDAV client, and so does not know how to perform locking. 
Client A doesn't lock the document, but does a GET and begins editing. 
Client B does LOCK, performs a GET and begins editing. 
Client B finishes editing, performs a PUT, then an UNLOCK. 
Client A performs a PUT, overwriting and losing all of B's changes. 
There are several reasons why the WebDAV protocol itself cannot prevent this situation. 
First, it cannot force all clients to use locking because it must be compatible with HTTP clients that do not comprehend locking. 
Second, it cannot require servers to support locking because of the variety of repository implementations, some of which rely on reservations and merging rather than on locking. 
Finally, being stateless, it cannot enforce a sequence of operations like LOCK / GET / PUT / UNLOCK. 
WebDAV servers that support locking can reduce the likelihood that clients will accidentally overwrite each other's changes by requiring clients to lock resources before modifying them. 
Such servers would effectively prevent HTTP 1.0 and HTTP 1.1 clients from modifying resources. 
WebDAV clients can be good citizens by using a lock / retrieve / write /unlock sequence of operations (at least by default) whenever they interact with a WebDAV server that supports locking. 
HTTP 1.1 clients can be good citizens, avoiding overwriting other clients' changes, by using entity tags in If-Match headers with any requests that would modify resources. 
- Jim 

The description of the issue is: Is there a need for a PUTL (put which succeeds only if the resource is locked) method to avoid certain classes of overwrite conflicts, or a need to restrict the behavior of PUT on WebDAV servers to only accept writes if the resource is locked? 
Once again, just to get discussion going... I'll note that there hasn't seemed to be a lot of people asking for this so I'd suggest in the interest of keeping the spec simple that we defer this proposal until there appears to be more demand. 
The proposal actually provided for an option that didn't require a change to the functional spec so that remains an option for those that might later discover that this is important. 
I guess I'd consider a proposal to recomend that people lock resources before they do PUT on them. 
I'd actually prefer to not even do that though. 
I think we've made the issues clear enough in the spec. 
People can chose to put a lock on the resource if they want. 
Other opinions? 
J. We certainly should not restrict the behavior of PUT to only accept writes if the resource is locked (for the reason given in 2518, namely interoperability with non-locking clients). 
The If header allows you to specify that a PUT should only succeed if the resource is locked, so I see no reason to add a PUTL method. 
So I agree with Jason's conclusions (i.e. reject this proposal). 
Cheers, Geoff 

The description of the issue is: Is there a need for a PUTL (put which succeeds only if the resource is locked) method to avoid certain classes of overwrite conflicts, or a need to restrict the behavior of PUT on WebDAV servers to only accept writes if the resource is locked? 
Once again, just to get discussion going... I'll note that there hasn't seemed to be a lot of people asking for this so I'd suggest in the interest of keeping the spec simple that we defer this proposal until there appears to be more demand. 
The proposal actually provided for an option that didn't require a change to the functional spec so that remains an option for those that might later discover that this is important. 
I guess I'd consider a proposal to recomend that people lock resources before they do PUT on them. 
I'd actually prefer to not even do that though. 
I think we've made the issues clear enough in the spec. 
People can chose to put a lock on the resource if they want. 
Other opinions? 
J. Accidentally caught by the spam filter. 
I've added Ron Jacob's email address to the accept2 list. 
- Jim Is there, or should there be, anything in WebDAV that prevents a server from refusing to process any PUT requests for an unlocked resource? 
Seems to me that this issue fits cleanly into the set of decisions that are left to the server implementer and that can be decided without impacting WebDAV compliance. 
Thanks, Ron -----Original Message----- We certainly should not restrict the behavior of PUT to only accept writes if the resource is locked (for the reason given in 2518, namely interoperability with non-locking clients). 
The If header allows you to specify that a PUT should only succeed if the resource is locked, so I see no reason to add a PUTL method. 
So I agree with Jason's conclusions (i.e. reject this proposal). 
Cheers, Geoff -----Original Message----- 

The description of the issue is: Is there a need for a PUTL (put which succeeds only if the resource is locked) method to avoid certain classes of overwrite conflicts, or a need to restrict the behavior of PUT on WebDAV servers to only accept writes if the resource is locked? 
Once again, just to get discussion going... I'll note that there hasn't seemed to be a lot of people asking for this so I'd suggest in the interest of keeping the spec simple that we defer this proposal until there appears to be more demand. 
The proposal actually provided for an option that didn't require a change to the functional spec so that remains an option for those that might later discover that this is important. 
I guess I'd consider a proposal to recomend that people lock resources before they do PUT on them. 
I'd actually prefer to not even do that though. 
I think we've made the issues clear enough in the spec. 
People can chose to put a lock on the resource if they want. 
Other opinions? 
J. Since there are no voices in favor of the PUTL proposal, I'm going to mark this issue as resolved. 
No specification changes will be made. 
- Jim 
