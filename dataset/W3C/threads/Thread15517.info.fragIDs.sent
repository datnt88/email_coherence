Dear Gang, After a lot of dicussion between Wendy, Matt May and myself here is a proposal for changes to the level one success criteria for guideline 1.3. 
[1] Bugs 556 [2] and 669 [3] are associated with these changes. 
The proposal splits success criteria one into two, and removes the differentiation of hierarchical and non-hierarchical relationships. 
This gives the first two sucess criteria of guideline 1.3 as: 
1. "Structures and relationships of the content can be derived programmatically (for example, through a markup or data model)" 
2. "Differentitation of content to imply additional meaning or stress, such as the types of emphasis commonly denoted by bold or italics, can be dervived programmatically." 
The current sucess criteria two would also become success criteria three. 
There is an issue with the words "imply additional meaning" and testibility. 
While exploring this issue we discovered issues surrounding some technologies and their ability to natively denote semantic types such as paragraphs, headers and lists. 
SVG for example appears to have no semantic elements, although Wendy is talking to Dean from the SVG group about ways to proceed with techniques for SVG in this area. 
There is a lot to look at with this issue for the techniques taskforce. 
[1] http://www.w3.org/TR/WCAG20/#content-structure-separation [2] http://trace.wisc.edu/bugzilla_wcag/show_bug.cgi?id=556 [3] http://trace.wisc.edu/bugzilla_wcag/show_bug.cgi?id=669 
Regards, Tom Croucher Co-founder, Netalley Networks LLP 
These success criteria, like the ones in the March11th working draft, mean that a simple text document would not conform to Level 1 of WCAG 2.0 - this mailing list being an example of something that would not conform. 
Is this what we really want? 
Certainly having paragraphs, headings, and lists able to be 
programmatically derived makes a document more usable but omitting them 
does not make them not accessible. 
It should not be a Level 1 requirement that headings, paragraphs, and lists be able to be programmatically derived. 
I propose the following rewording for success criteria Level 1, # 1. 1. "Table structure and labels for interactive elements can be derived 
programmatically (for example, through a markup or data model)" 
I would propose adding the proposed Level 1 #1 success criteria to Level 2: 2. "Structures and relationships of the content can be derived 
programmatically (for example, through a markup or data model)" 
I also have a question about the proposed success criteria # 2 2. "Differentitation of content to imply additional meaning or stress, such as 
the types of emphasis commonly denoted by bold or italics, can be dervived programmatically." 
Unless the text is in an image, is it even possible to render it in bold or italics without some kind of programmatic information? 
If it's not possible, then this success criteria should be removed unless we mean to prohibit bold text in images. 
Andi andisnow@us.ibm.com 
IBM Accessibility Center (512) 838-9903, http://www.ibm.com/able 
Internal Tie Line 678-9903, http://w3.austin.ibm.com/~snsinfo 
This is an interesting post. 
This has been at "default" level for so long that we haven't looked at whether it is really essential to access. 
In long documents -- not having access to headings could make them essentially unusable perhaps. 
But we do not have any length criteria. 
(but maybe that would be a reason to have it -- and once you need to do it for long docs, why not mark them up for short docs too. 
If they are there - then that IS information. 
Ah - I think that may be the clue. 
Headers are information. 
If they are not marked up in a way that can be programmatically determined, 
then it may indeed be impossible to determine that they are headers. 
So the fact that they are headers would be inaccessible. 
(and important) NOW - in techniques -- if an agent could determine that they are headers by their formatting (after all that is all the rest of the users have) then that should be acceptable without requiring other markup. 
That is a big IF of course. 
But it should not be hard to do soon. 
Now? 
Gregg Gregg C Vanderheiden Ph.D. Professor - Ind. Engr. 
&amp; BioMed Engr. 
Director - Trace R &amp; D Center University of Wisconsin-Madison Of Andi Snow-Weaver These success criteria, like the ones in the March11th working draft, mean that a simple text document would not conform to Level 1 of WCAG 2.0 - this mailing list being an example of something that would not conform. 
Is this what we really want? 
Certainly having paragraphs, headings, and lists able to be programmatically derived makes a document more usable but omitting them does not make them not accessible. 
It should not be a Level 1 requirement that headings, paragraphs, and lists be able to be programmatically derived. 
I propose the following rewording for success criteria Level 1, # 1. 1. "Table structure and labels for interactive elements can be derived 
programmatically (for example, through a markup or data model)" 
I would propose adding the proposed Level 1 #1 success criteria to Level 2: 2. "Structures and relationships of the content can be derived 
programmatically (for example, through a markup or data model)" 
I also have a question about the proposed success criteria # 2 2. "Differentitation of content to imply additional meaning or stress, such as 
the types of emphasis commonly denoted by bold or italics, can be dervived programmatically." 
Unless the text is in an image, is it even possible to render it in bold or italics without some kind of programmatic information? 
If it's not possible, then this success criteria should be removed unless we mean to prohibit bold text in images. 
Andi andisnow@us.ibm.com 
IBM Accessibility Center (512) 838-9903, http://www.ibm.com/able 
Internal Tie Line 678-9903, http://w3.austin.ibm.com/~snsinfo 
Finishing some thoughts from the call today... 
I like the proposal to move emphasis into a separate criterion. 
Questions: 
Tom, are you proposing that we remove the references to hierarchical and non-hierarchical relationships? 
I think the specific mention of paragraphs, lists, headings, tables, etc. is important to understanding this guideline and helpful to those who come to the guidelines searching for answers to questions like "how do I make tables accessible". 
Is there a better word than "stress"? 
Perhaps "... imply additional meaning, emphasis or distinction, such as ..." 
With regard to the questions raised about whether these criteria imply that the archives of this list would not be accessible, it may be that this is answered through questions about scoping and whether technologies have been used according to specification (guideline 4.1). 
For scoping, one could claim that the W3C list archives interface meets WCAG 2.0 level one, but that the scope of the claim does not include the content that it receives/processes from external sources (i.e. plain text emails). 
For the according to spec. 
question, there is no spec that I know of by which one might mark up structure using plain text. 
So, plain text content (like the emails submitted to the W3C archives or the comments we've been collecting via form submissions in WCAG Bugzilla) would be excepted. 
However, in the case of content written in (X)HTML, not using a header tag to mark a header would fail the requirements of 4.1. 
-Ben 
I agree, but a more representative list of examples would be useful: the hierarchy of options in a user interface, the spatial organization and structure of a vector graphic (this wording is intended to address the complaint that such an example might imply that raster-based images can't be used), etc. 
yes. 
I agree with this analysis. 
The HTML portions of the list archive do meet structural requirements, but the aggregated content does not, leaving aside HTML e-mail attachments and similar exceptions. 
In fact, the issue extends far beyond guideline 1.3, which is why I do not think 1.3 should be changed in response to such examples. 
I can for instance attach image files, without any text equivalents, to my e-mail message and post it to a mailing list, whereupon the images will be archived and guideline 1.1 violated. 
Hi Tom, all, 
Regarding 1. "Structures and relationships of the content can be derived programmatically (for example, through a markup or data model) 
One question I have always wondered. 
If structure or relationships can be determined through automated 
heuristics, would that count too? 
If so, then having the headers all 
"look" like headers (and be consistent within levels) would satisfy if 
common tools or converters were available that could 'determine' the 
headers, lists, etc by just evaluating a page and its visual formatting. 
After all, that is all that the sighted person has. 
If so, then a page with no markup and only visual formatting could pass Level 1 of 1.3. 
Is there any reason it shouldn't? 
If there were common and / or free tools that would do such analysis? 
Gregg Gregg C Vanderheiden Ph.D. Professor - Ind. Engr. 
&amp; BioMed Engr. 
Director - Trace R &amp; D Center University of Wisconsin-Madison Of Tom Croucher Dear Gang, After a lot of dicussion between Wendy, Matt May and myself here is a proposal for changes to the level one success criteria for guideline 1.3. 
[1] Bugs 556 [2] and 669 [3] are associated with these changes. 
The proposal splits success criteria one into two, and removes the differentiation of hierarchical and non-hierarchical relationships. 
This gives the first two sucess criteria of guideline 1.3 as: 
1. "Structures and relationships of the content can be derived programmatically (for example, through a markup or data model)" 2. "Differentitation of content to imply additional meaning or stress, such as the types of emphasis commonly denoted by bold or italics, can be dervived 
programmatically." The current sucess criteria two would also become success criteria three. 
There is an issue with the words "imply additional meaning" and testibility. 
While exploring this issue we discovered issues surrounding some technologies and their ability to natively denote semantic types such as paragraphs, headers and lists. 
SVG for example appears to have no semantic elements, although Wendy is talking to Dean from the SVG group about ways to proceed with techniques for SVG in this area. 
There is a lot to look at with this issue for the techniques taskforce. 
[1] http://www.w3.org/TR/WCAG20/#content-structure-separation [2] http://trace.wisc.edu/bugzilla_wcag/show_bug.cgi?id=556 [3] http://trace.wisc.edu/bugzilla_wcag/show_bug.cgi?id=669 
Regards, Tom Croucher Co-founder, Netalley Networks LLP 
Are you supposing that the heuristics would be 100% reliable across a wide variety of content, and amenable to implementation in server-side or client-side software? 
If so, but only under these conditions, I would agree that 1.3 is met. 
The problem in practice is that styles are not completely uniform across documents, with the result that any heuristics are prone to error, whereas markup supplied by the author (given an appropriate authoring environment) is highly reliable. 
Suppose there were metadata supplied by the content author or a third party that established a completely correct mapping of style properties to element types, but the content itself was encoded presentationally. 
Or suppose there were a structure tree with pointers back to the presentational format in which the content was stored (essentially what tagged PDF is). 
Both of these in my opinion would count as satisfying 1.3, even if the structure resided on another server, whether maintained by the author or a third party, as long as server-side or client-side software implemented the necessary mechanism for matching the structure with the content and constructing a presentation to satisfy the user's requirements. 
Work on RDF mechanisms in this area, notably by Lisa, should also be mentioned here. 
What is important hear is that the AT's (assistive technologies) know how to handle them refer to XAG (XML accessibility guidelines) Having title one , title to is problematic because how do the At's know what that is? 
The same is true for classes or formats. 
The aim, as always is to hold on, and transfer to the user and AT the meaning and concepts contained in the page. 
Structure is one of them And yes, RDF is a good way to go . 
All the best Lisa Seeman Visit us at the UB Access website UB Access - Moving internet accessibility 
From: w3c-wai-gl-request@w3.org 
[mailto:w3c-wai-gl-request@w3.org] 
On Behalf Of Jason White Sent: Monday, May 17, 2004 9:06 AM Subject: RE: Issue 556 and 669 
Right This was a theoretical question for now. 
If they tested their pages against a standard tool -- then perhaps. 
I was just thinking this general line of inquiry through. 
At one time I had proposed something that was an HTML gold standard. 
"If you had a (freely available) converter that would convert your content successfully to accessible HTML form -- then you pass. 
If not then you fail. 
" Still has interesting implications with networked technologies. 
But don't think we are ready for it yet. 
It would solve many of the problems that keep popping up. 
But I'm sure it would create as many of its own. 
Gregg Gregg C Vanderheiden Ph.D. Professor - Ind. Engr. 
&amp; BioMed Engr. 
Director - Trace R &amp; D Center University of Wisconsin-Madison Of Jason White 
Are you supposing that the heuristics would be 100% reliable across a wide variety of content, and amenable to implementation in server-side or client-side software? 
If so, but only under these conditions, I would agree that 1.3 is met. 
The problem in practice is that styles are not completely uniform across documents, with the result that any heuristics are prone to error, whereas markup supplied by the author (given an appropriate authoring environment) is highly reliable. 
Suppose there were metadata supplied by the content author or a third party that established a completely correct mapping of style properties to element types, but the content itself was encoded presentationally. 
Or suppose there were a structure tree with pointers back to the presentational format in which the content was stored (essentially what tagged PDF is). 
Both of these in my opinion would count as satisfying 1.3, even if the structure resided on another server, whether maintained by the author or a third party, as long as server-side or client-side software implemented the necessary mechanism for matching the structure with the content and constructing a presentation to satisfy the user's requirements. 
Work on RDF mechanisms in this area, notably by Lisa, should also be mentioned here. 
