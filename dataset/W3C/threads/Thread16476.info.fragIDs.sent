Anyone care to point me to,or name a succinct group of browsers that will cater for 'most' flavours? 
I seem to be coding for each and every browser I try, there again it may be my code. 
degrading isn't the word. 
jonathan chetwynd IT teacher (LD) j.chetwynd@btinternet.com 
Is there a w3c javascript/dhtml working group? 
If one object (which has a transparent area) is placed above another, there is a logical inconsistency, in that the user sees themselves clicking one object, but is taken to the other object's location. 
Does anyone know of any workaround? 
Who could I write to, in order to get this matter addressed, it seems fairly fundamental.... thanks jonathan chetwynd IT teacher (LDD) j.chetwynd@btinternet.com on the web" 
This has been discussed on the www-style and/or www-svg mailing lists. 
Have a look in the archives. 
I think the feeling was that true transparent material ought not to be sensitive to clicks but material with a low alpha value ought to be; as there is no static content on the page, I can't work out whether it uses transparent GIFs or CSS transparency, although the use of non-CSS colours suggests that it may not use the latter. 
I don't know whether GIF counts as an alpha channel with two values or as true transparency. 
I would suggest that any use of overlaid content will give problems for some browsers, but putting links in a layer below images is asking for trouble. 
It shouldn't be necessary, even if the image is a ragged mask, as, unless the image is intended to mask out part of the link text, the links could always be overlaid on the image. 
Note that there is an outstanding bug in Mozilla that has not had a release for fixing assigned, which causes images *below* links to mask them, and links below images to be active! 
I would point out that this URL is completely blank except for a title which is pretending to be user instructions, but is too long to display. 
Also, BGSOUND is proprietory and colours, in HTML, require a #. 
I suggest you wait for SVG to become standard before trying this sort of thing, although even then it will be difficult to make it accessible to people unable to easily use current graphical browsers. 
You really need to find a way of doing your things that doesn't require full programming languages - Javascript is a security risk. 
