Ben and I have been cleaning up the issues list. 
This email includes issues that had been reopened. 
In most cases, we reopened an issue rather than close it to maintain the history associated with the issue. 
Issue 172 - checkpoint about use of standard character set Wendy talked with Richard Ishida, Martin Duerst, and others at the Technical Plenary about a definition of text and how to reference unicode in our document. 
Wendy has an action to write up these discussions and a proposal to close this issue. 
Issue 317 - Clarifying color criteria in Guideline 1.3 After adding color to guideline 1.3 it seemed the issue could be closed, however Gregg raised issues about the meaning of the existing text. 
Issue 330 - When to expand abbreviations and acronyms The March 11, 2004 working draft now uses the language "programmatically located" but issues and questions remain regarding this language and many of the previous comments are still relevant. 
Issue 603 - Proposed rewording of Guideline 1.3 reopened and mapped to Issue 556 because Tom took an action item last week to address Issue 261 - Unique label or number for success criteria Defining labels and definitions of labels [Issue 368] blocks creating the numbering scheme. 
we should have conformance nailed down in next 2 weeks and then come up with numbering scheme wendy a chisholm world wide web consortium web accessibility initiative 
Thanks, Wendy. 
Re: Issue #330: On 25 March I sent a proposal to the list to reword success criteria under 3.1 [1]. 
The idea was to replace phrases such as 
"programmatically located" in 3.1 Success Criteria with "available 
through context or markup," as follows: 
Guideline 3.1, Level 1 Success Criterion 2: 2. The expanded form of abbreviations and acronyms is available through context or markup. 
Guideline 3.1, Level 2, Success criteria 2 and 3 2. The definitions and pronunciations of all words in the content are available through context or markup. 
[I] 3. The meaning of all idioms in the content are available through context or markup. 
[I] Hope this helps. 
John "Good design is accessible design." 
Please note our new name and URL! John Slatin, Ph.D. Director, Accessibility Institute University of Texas at Austin FAC 248C 1 University Station G9600 Austin, TX 78712 ph 512-495-4288, f 512-495-4524 email jslatin@mail.utexas.edu 
web http://www.utexas.edu/research/accessibility/ 
Behalf Of Wendy A Chisholm Ben and I have been cleaning up the issues list. 
This email includes issues that had been reopened. 
In most cases, we reopened an issue rather than close it to maintain the history associated with the issue. 
Issue 172 - checkpoint about use of standard character set Wendy talked with Richard Ishida, Martin Duerst, and others at the Technical Plenary about a definition of text and how to reference unicode in our document. 
Wendy has an action to write up these discussions and a proposal to close this issue. 
Issue 317 - Clarifying color criteria in Guideline 1.3 After adding color to guideline 1.3 it seemed the issue could be closed, however Gregg raised issues about the meaning of the existing text. 
Issue 330 - When to expand abbreviations and acronyms The March 11, 2004 working draft now uses the language "programmatically located" but issues and questions remain regarding this language and many of the previous comments are still relevant. 
Issue 603 - Proposed rewording of Guideline 1.3 reopened and mapped to Issue 556 because Tom took an action item last week to address http://trace.wisc.edu/bugzilla_wcag/show_bug.cgi?id=556 
Issue 261 - Unique label or number for success criteria Defining labels and definitions of labels [Issue 368] blocks creating the numbering scheme. 
we should have conformance nailed down in next 2 weeks and then come up with numbering scheme wendy a chisholm world wide web consortium web accessibility initiative 
One of the main reasons for using expressions such as "programmatically identified" and "programmatically located" was to cover the case where the content is not written in a markup language, but is provided in another format that allows structural distinctions to be preserved. 
Examples include XML information sets, API's, and data structures such as the structure trees used in tagged PDF. 
If we want these to be included, we need to say something more precise than "context", and something more general than "markup". 
Suggestions? 
Thanks, Jason. 
I've just been looking at 1.3 after reading Lisa's message, and it occurs to me that the language there may be useful with respect to issue #330 and difficult phrases like "programmatically located" and "programmatically identified." 
Would it work to say "... Available through context, markup, or a data model"? 
Or perhaps we should go in the other direction first: we need plain-language equivalents for "programmatically identified" and "programmatically located." 
Everything I've tried ends up sounding like either a use case or an aspect of user agent functionality; I'm having trouble getting at what the content provider should do. 
John "Good design is accessible design." 
Please note our new name and URL! John Slatin, Ph.D. Director, Accessibility Institute University of Texas at Austin FAC 248C 1 University Station G9600 Austin, TX 78712 ph 512-495-4288, f 512-495-4524 email jslatin@mail.utexas.edu 
web http://www.utexas.edu/research/accessibility/ 
as  "programmatically located" in 3.1 Success Criteria with "available 
One of the main reasons for using expressions such as "programmatically identified" and "programmatically located" was to cover the case where the content is not written in a markup language, but is provided in another format that allows structural distinctions to be preserved. 
Examples include XML information sets, API's, and data structures such as the structure trees used in tagged PDF. 
If we want these to be included, we need to say something more precise than "context", and something more general than "markup". 
Suggestions? 
1) We definitely need to define these terms if we are going to use them 
2) note that "data model" and "markup" are programmatically determinable - but "context" usually is not. 
Even "data model' and 'markup' are not however unless they are done in a standard way known to the 'program' that is 'programmatically determining'. 
Thus the techniques or rather the checklist is needed to determine if this item has been met I think. 
Gregg Gregg C Vanderheiden Ph.D. Professor - Ind. Engr. 
&amp; BioMed Engr. 
Director - Trace R &amp; D Center University of Wisconsin-Madison Of John M Slatin Thanks, Jason. 
I've just been looking at 1.3 after reading Lisa's message, and it occurs to me that the language there may be useful with respect to issue #330 and difficult phrases like "programmatically located" and "programmatically identified." 
Would it work to say "... Available through context, markup, or a data model"? 
Or perhaps we should go in the other direction first: we need plain-language equivalents for "programmatically identified" and "programmatically located." 
Everything I've tried ends up sounding like either a use case or an aspect of user agent functionality; I'm having trouble getting at what the content provider should do. 
John "Good design is accessible design." 
Please note our new name and URL! John Slatin, Ph.D. Director, Accessibility Institute University of Texas at Austin FAC 248C 1 University Station G9600 Austin, TX 78712 ph 512-495-4288, f 512-495-4524 email jslatin@mail.utexas.edu 
web http://www.utexas.edu/research/accessibility/ 
-----Original Message----- 
as  "programmatically located" in 3.1 Success Criteria with "available 
One of the main reasons for using expressions such as "programmatically identified" and "programmatically located" was to cover the case where the content is not written in a markup language, but is provided in another format that allows structural distinctions to be preserved. 
Examples include XML information sets, API's, and data structures such as the structure trees used in tagged PDF. 
If we want these to be included, we need to say something more precise than "context", and something more general than "markup". 
Suggestions? 
Perhaps the existing definitions need some tweaking. 
From the glossary in the 11 March 2004 draft: programmatically located Programmatically located means that the meaning can be found, though there may be multiple meanings for a word. 
Editorial Note: This provision is dependent on the definition of a standard way to associate dictionaries and the availability of on-line dictionaries. 
programmatically determined Programmatically determined means that the specific meaning can be determined. 
It would be helpful to have real-world examples implemented in a variety of technologies that demonstrate these ideas. 
We could then generalize the examples and include them in the informative section of the guidelines then build upon them in techniques. 
--wendy wendy a chisholm world wide web consortium web accessibility initiative 
Thanks, Gregg. 
I was thinking that we didn't want to disallow discourage/disallow providing defintions and/or pronunciation in context (i.e., as on-screen content where appropriate). 
But perhaps I misunderstood the intent of these specific criteria: do we specifically want to *require* that location and/or identification of meaning and pronunciation happens in some automated way? 
I agree that we'll need both very good techniques *and* clear checkpoint(s) (in a checklist) to make this work. 
Am I right in thinking that Ruby[1] might furnishsome techniques for indicating pronunciation, at least in XHTML? 
Or is it so specific to East Asian languages that it can't generalize? 
The SSML 1.0 Candidate Recommendation [2] suggests other techniques for indicating pronunciation for user agents that support synthetic speech. 
John [1] [2] http://www.w3.org/TR/speech-synthesis/ "Good design is accessible design." 
Please note our new name and URL! John Slatin, Ph.D. Director, Accessibility Institute University of Texas at Austin FAC 248C 1 University Station G9600 Austin, TX 78712 ph 512-495-4288, f 512-495-4524 email jslatin@mail.utexas.edu 
web http://www.utexas.edu/research/accessibility/ 1) We definitely need to define these terms if we are going to use them 2) note that "data model" and "markup" are programmatically determinable - but "context" usually is not. 
Even "data model' and 'markup' are not however unless they are done in a standard way known to the 'program' that is 'programmatically determining'. 
Thus the techniques or rather the checklist is needed to determine if this item has been met I think. 
Gregg Gregg C Vanderheiden Ph.D. Professor - Ind. Engr. 
&amp; BioMed Engr. 
Director - Trace R &amp; D Center University of Wisconsin-Madison -----Original Message----- Behalf Of John M Slatin Thanks, Jason. 
I've just been looking at 1.3 after reading Lisa's message, and it occurs to me that the language there may be useful with respect to issue #330 and difficult phrases like "programmatically located" and "programmatically identified." 
Would it work to say "... Available through context, markup, or a data model"? 
Or perhaps we should go in the other direction first: we need plain-language equivalents for "programmatically identified" and "programmatically located." 
Everything I've tried ends up sounding like either a use case or an aspect of user agent functionality; I'm having trouble getting at what the content provider should do. 
John "Good design is accessible design." 
Please note our new name and URL! John Slatin, Ph.D. Director, Accessibility Institute University of Texas at Austin FAC 248C 1 University Station G9600 Austin, TX 78712 ph 512-495-4288, f 512-495-4524 email jslatin@mail.utexas.edu 
web http://www.utexas.edu/research/accessibility/ 
-----Original Message----- 
as  "programmatically located" in 3.1 Success Criteria with "available 
One of the main reasons for using expressions such as "programmatically identified" and "programmatically located" was to cover the case where the content is not written in a markup language, but is provided in another format that allows structural distinctions to be preserved. 
Examples include XML information sets, API's, and data structures such as the structure trees used in tagged PDF. 
If we want these to be included, we need to say something more precise than "context", and something more general than "markup". 
Suggestions? 
Correct. 
We do not want to discourage. 
But we didn't want to require explaining terms in context. 
Especially explaining all terms in context. 
Our Success Criteria are all requirements. 
Ah, you mean that context can be WITH programmatically determinable items in level 1 - but not be alone. 
Yes - that is correct. 
As long as we don't imply that "context" is programmatically determined (or determinable?). 
Gregg Gregg C Vanderheiden Ph.D. Professor - Ind. Engr. 
&amp; BioMed Engr. 
Director - Trace R &amp; D Center University of Wisconsin-Madison Of John M Slatin Thanks, Gregg. 
I was thinking that we didn't want to disallow discourage/disallow providing defintions and/or pronunciation in context (i.e., as on-screen content where appropriate). 
But perhaps I misunderstood the intent of these specific criteria: do we specifically want to *require* that location and/or identification of meaning and pronunciation happens in some automated way? 
I agree that we'll need both very good techniques *and* clear checkpoint(s) (in a checklist) to make this work. 
Am I right in thinking that Ruby[1] might furnishsome techniques for indicating pronunciation, at least in XHTML? 
Or is it so specific to East Asian languages that it can't generalize? 
The SSML 1.0 Candidate Recommendation [2] suggests other techniques for indicating pronunciation for user agents that support synthetic speech. 
John [1] [2] http://www.w3.org/TR/speech-synthesis/ "Good design is accessible design." 
Please note our new name and URL! John Slatin, Ph.D. Director, Accessibility Institute University of Texas at Austin FAC 248C 1 University Station G9600 Austin, TX 78712 ph 512-495-4288, f 512-495-4524 email jslatin@mail.utexas.edu 
web http://www.utexas.edu/research/accessibility/ 
-----Original Message----- 1) We definitely need to define these terms if we are going to use them 2) note that "data model" and "markup" are programmatically determinable - but "context" usually is not. 
Even "data model' and 'markup' are not however unless they are done in a standard way known to the 'program' that is 'programmatically determining'. 
Thus the techniques or rather the checklist is needed to determine if this item has been met I think. 
Gregg Gregg C Vanderheiden Ph.D. Professor - Ind. Engr. 
&amp; BioMed Engr. 
Director - Trace R &amp; D Center University of Wisconsin-Madison -----Original Message----- Behalf Of John M Slatin Thanks, Jason. 
I've just been looking at 1.3 after reading Lisa's message, and it occurs to me that the language there may be useful with respect to issue #330 and difficult phrases like "programmatically located" and "programmatically identified." 
Would it work to say "... Available through context, markup, or a data model"? 
Or perhaps we should go in the other direction first: we need plain-language equivalents for "programmatically identified" and "programmatically located." 
Everything I've tried ends up sounding like either a use case or an aspect of user agent functionality; I'm having trouble getting at what the content provider should do. 
John "Good design is accessible design." 
Please note our new name and URL! John Slatin, Ph.D. Director, Accessibility Institute University of Texas at Austin FAC 248C 1 University Station G9600 Austin, TX 78712 ph 512-495-4288, f 512-495-4524 email jslatin@mail.utexas.edu 
web http://www.utexas.edu/research/accessibility/ 
-----Original Message----- 
as  "programmatically located" in 3.1 Success Criteria with "available 
One of the main reasons for using expressions such as "programmatically identified" and "programmatically located" was to cover the case where the content is not written in a markup language, but is provided in another format that allows structural distinctions to be preserved. 
Examples include XML information sets, API's, and data structures such as the structure trees used in tagged PDF. 
If we want these to be included, we need to say something more precise than "context", and something more general than "markup". 
Suggestions? 
Will need to leave about 20 minutes before close of call 
Me too. 
m 
Will need to leave about 20 minutes before close of call Sailesh Panchang Senior Accessibility Engineer Deque Systems,11180 Sunrise Valley Drive, 4th Floor, Reston VA 20191 E-mail: sailesh.panchang@deque.com 
* Look up http://www.deque.com 
* 
Still at home without DSL connection... 
