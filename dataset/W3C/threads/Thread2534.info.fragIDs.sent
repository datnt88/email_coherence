In working on the Options specification, Roy and Jeff came across a problem in the spec that needed clearification. 
For the record, here is the result. 
- Jim Are you suggesting I incorporate your Options spec into draft 08? 
No, this is a bug fix to a separate section, one that Roy discovered while replying to something with this Subject. 
It is to replace this sentence: 
A message-body MAY be included in a request only when the request method (section 5.1.1) 
allows an entity-body. 
which you can probably find using a text-search. 
Roy suggests: A message-body SHOULD NOT be included in a request unless the request method is defined as allowing an entity-body. 
or A server SHOULD read and forward a message-body on any request; if the request method does not include defined semantics for an entity-body, then the message-body SHOULD be ignored when handling the request. 
I'm not sure why we shouldn't just say both things (robustness principle: don't send garbage, but don't choke on it, either). 
Actually, on reflection, I'm not sure how I would implement a server that can figure out that a GET without a content-length, but which has a bogus body, isn't actually two GETs. 
I.e., if a bad client sends GET /foo.html 
HTTP/1.1 Host: foo.com GET /bar.html 
HTTP/1.1 Host: foo.com is that (1) two GETs on a persistent connection, or (2) one GET with a bogus body and no Content-length? 
Or do the rules for persistent connections not allow this? 
I skimmed RFC2068, and I don't think we require this! 
Anyway, I think perhaps the best wording is: A message-body MUST NOT be included in a request if the specification of the request method does not allow sending an entity-body in requests. 
This means GET, HEAD, and DELETE, right? 
-Jeff P.S.: maybe I need some sleep, too. 
Many moons ago we had a discussion about creating a SAFE GET method. 
During that discussion it was clear to me that any method which didn't explictly exclude a request body could include one. 
IFF the 
content-length and/or transfer-coding: chunked was specified. 
In other words, for historical reasons, GET couldn't have a body and there were words to that effect. 
I didn't specifically look for HEAD or DELETE so I can't comment now, but I did convince myself that any other 'modern' method could have a body under HTTP/1.1 because HTTP/1.1 requires an explicitly stated content length. 
(header or chunked encoding). 
And it is that explict length which allows proxies, servers, etc. to sort out the question that Jeff raised. 
On a persistent connection, the transaction is bogus if it has a body and doesn't have explict length. 
There is no hope for extensible methods if the rules don't allow content with unknown methods. 
So I think the wording needs to be something like (if this isn't there already): Any request with a method which doesn't explicity exclude a content body may include a body. 
Any request which includes a body MUST explictly state the length with either a Content-length: header field or Transfer-encoding: chunked. 
Dave Morris 
Including both is fine with me. 
A request message body is indicated by the presence of Content-Length or Transfer-Encoding, as described in section 4.2 (Message Body). 
Granted, it doesn't say MUST, but it is easy to implement. 
....Roy 
