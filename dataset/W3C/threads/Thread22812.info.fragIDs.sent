DOM Level 3 calls for: whitespace in element content (aka "ignorable whitespace"). 
Does this Text node only contain whitespace in element content? 
How will this be accomplished? 
Will the Text class have an "ignorable()" method, or will the interface hierarchy change: 
CharacterData Comment Text CDATASection going to something like: CharacterData Comment Text IgnorableText CDATASection Sincerely, Kevin Regan kevinr@valicert.com 
p.s. Can CDATA sections be located in "ignorable" areas? 
It is EXTREMELY unlikely that the interface hierarchy will change. 
Current inclination is to have a pair of tests: 
Via the Text node: Does this contain only whitespace? 
Via the Element or the Element Declaration: Can this Element contain only other Elements. 
Details beyond that are still in flux. 
We still don't have a formal _internal_ working draft for Level 3, though we're working toward one. 
Good question. 
I would say they shouldn't be, since the point of whitespace in element content is just to allow "pretty-printing" (indenting and the like), and if you're using a CDATA Section it's because you're trying to make an explicit statement about document content. 
But we'd have to check the XML 1.0 spec to be sure. 
Not according to January errata to the XML specification. 
... even though in key places, the XML 1.0 spec had made clear that CDATA just uses an alternate set of delimiters. 
The errata have gone to some work to preclude that reading. 
More SGML legacy has slipped into XML doctrine. 
Lesson for anyone doing syntax design in the future: there is a reason for avoiding such context-sensitive mechanisms. 
In one phrase: needless complexity. 
- Dave 
After really looking at this interesting question closely, I've come to the following conclusions. 
1. 
If the document is validated, it is easy to declare the content "ignorable" since it is not in the content model. 
2. Documents that are not validated could mark TEXT nodes as "whitespace only 
but you have to know the DTD to know if it can be ignored totally depending 
on the application. 
3. This makes the whole issue complex and truly makes the DOM harder to use. 
4. Even filtering or load and store options would have different semantics based on whether the document is validated or not. 
Overall, this is a tough issue. 
Eric :-) Sorry to hear this from David, 
