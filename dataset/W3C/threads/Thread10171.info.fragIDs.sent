Section 2.1: I don't understand this bit: Mapping type/class language into predicate/application language also ensures that set-theoretical paradoxes do not arise. 
I think this section is saying that it may be ultimately not possible to detect inconsistencies in statements made in different SWEL's mapped onto lBase, but that in practical terms it should be possible to detect most such inconsistencies. 
Is this about right? 
Numerals are defined to be strings of the characters '0123456789', and are interpreted as decimal numerals in the usual way. 
Since arithmetic is not first-order definable, this is the first and more obvious place that Lbase goes beyond first-order expressiveness. 
Dumb question: how is arithmetic different from number theory? 
In particular, I understood that (elementary) number theory was first-order (or: that's what my book says). 
Any Lbase language is defined with respect to a vocabulary, which is a set of non-special names. 
We require that every Lbase vocabulary contain all urirefs, but other expressions are allowed. 
(We will require that every Lbase interpretation provide a meaning for every special name, but these interpretations are fixed, so special names are not counted as part of the vocabulary.) I think I see where this is going, but I'm not sure I could explain it. 
This may need a little further explanation if the intended audience is not just logicians (particularly the idea about special names having fixed interpretations, and vocabulary not). 
Or, depending on your intended audience, this may be fine -- in which case I'd suggest indicating up-front what you believe to be the audience for this document. 
We do not take any position here on the way that urirefs may be composed 
from other expressions, e.g. from relative URIs or Qnames; the model theory simply assumes that such lexical issues have been resolved in some way that is globally coherent, so that a single uriref can be taken to have the same meaning wherever it occurs. 
There is a message that Tim Berners-Lee posted to the www-tag list recently [1], which for me clarified an important difference between the intended roles of URIs and URI references (specifically, calling out the roles of *identifiers* and *references*). 
[1] http://lists.w3.org/Archives/Public/www-tag/2002Sep/0043.html 
It is important to distinguish between the string which identifies something and the BNF for a string in a document which is used to specify the first string. 
The first is an identifier. 
The second has been called a "reference". 
A reference can use a relative form. 
- from [1] 
Section 2.2 A nit. 
You say: We will assume that there are three sets of names (not special names) which together constitute the vocabulary: individual names, relation names, and function names, and that each function name has an associated arity, which is a non-negative integer. 
In a particular vocabulary these sets may or may not be disjoint. 
Can a function have zero arity (zero being non-negative)? 
If so, how would that differ from an individual? 
Section 2.3: Para 2, typo?: 
In specifying the following it is convenient to define use some standard definitions. 
I think the definition of function is missing something. 
I couldn't follow it, though I think I know where it intends to finish. 
I think something like "for any value s0 for which R has an element s0,s1,...,sn , if there is exactly one such element of R, then..."? 
I'm puzzled why variables have a special status in the syntax. 
As far as I can tell (so far), they are treated just like other names, except that quantifier-bound variables must have the syntactic form of a variable. 
I'm thinking this could go one of two ways: (a) don't allow variable names except as quantified values, or (b) allow any name to be quantified, and note a convention that ?name form is used for this purpose. 
Question: as it stands, the definition of interpretation seems to require a denotation for any variable, even though it may appear only bound in a quantifier; e.g. in: (forall (?x) R(?x) ) the denotation of ?x 
given by an interpretation seems pretty irrelevant. 
I suppose one could always include a Herbrand-style mapping for such elements, but this feels to me as if it adds a small unnecessary complication. 
[I see you come to this point later.] 
There is a condition on I that refers to function symbols, but it's not clear to me that there is any way to distinguish a function symbol from any other name, so I'm not sure what purpose the condition serves. 
I presume "I(A)=I(B)" means that I(A) and I(B) are the same member of ID+ISN? 
(Maybe this should be obvious, but I've just been reading elsewhere about variations of URI equality, and I'm feeling a little confused.) 
If E is: a term f(t1,...,tn), what is the value of I(E) when IEXT(I(f)) is not functional? 
It seems to me that such a term cannot be excluded from a wff as the functional property of IEXT(I(f)) is determined by the interpretation, not the expression. 
I think this must be bound up with my earlier question about functional symbols and conditions on an interpretation... 
Is the concept of a "knowledge base" really useful, given lBase's role as a specification language and the fact that the same effect is achieved by Boolean conjunction formula? 
I liked the presentation of axiom schemes. 
For me that justified something that I'd previously seen as handwaving to be taken on faith. 
Section 3.0: Is it also needed to provide some indication of which vocabulary items introduced by Li may be used as functions? 
(See above comments about functions.) 
Section 3.1: The indicated diagrams do not show up in my browser (Opera). 
(This is probably because I'm reviewing the mail archive copy, not using a directly published URI.) Section 6.0: When we publish this as a WG NOTE, would it not be more appropriate to reference the other documents of this WG rather than the older RDF documents? 
That completes my contribution to ACTION 2002-10-18#1 
#g Graham Klyne 
graham, any chance you could split these between issues that you feel ought to be responded to before we push out a Note, and things for subsequent consideration? 
thanks for taking the time to review this, Dan 
Graham, 
Thanks for the detailed work. 
In summary, was that a thumbs up to publish 
(modulo correction of detail) or a thumbs down. 
Brian 
publish 
that's indeed a nice review 
I have read the document by now (and also Graham's review) and I would say "thumbs up" in 2.1 I'm not conviced that names should be anything else but urirefs 
also in there, why not take decimals as in xsd:decimal? 
and is a Relation with an extension which is the empty set forbidden? 
function terms are indeed interesting in 2.3 can one say that f(y,x1,...,xn) means f(x1,...,xn) =y again, "the name Relation to denote the property of having a relational extension" could that be the empty set? 
if E is: | then I(E) is: a special name | ISN(E) that the language is compact is indeed interesting Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/ 
Graham, Hope these responses help. 
Yes. This is because FOL is only semi-decidable. 
This follows from Godel's theorem ... not sure what your book means when it says that number theory is first order. 
Good point. 
Let me talk to Pat about this. 
Good point. 
We should clarify. 
We mean the former (i.e., identifier). 
Yes, it can be. 
So, as Quine pointed out, we don't need individuals. 
But variables *are* different ... 
Good point. 
I defer to Dan and Brian on this. 
guha 
Basically, a thumbs-up. 
I think clarification of the intended audience would be good to do before actually publishing, and all the other issues per editors' discretion. 
#g 
Graham Klyne 
