What I'm thinking of, for example, are things like timed auctions -- how do you make something accessible if they connect to an auction site and there's 3 minutes left to bid on that item, and it will take the user 5 minutes to comprehend the information and issue a bid? 
According to both WCAG 2.0 draft (and 508, and Joe's proposal above), there's no way to do it, really, and still be "accessible". 
In fact, it may even be _true_ that there's no way to do it accessibly; it may be a lost cause? 
I'm not saying I have the answer -- and in fact, my own attempts to phrase things were self-admittedly poorly worded too. 
But I do think that "timed events such as auctions" (or even "this sale lasts until Tuesday" or the like) are what we need to look at as test scenarios in addition to arbitrary ("keep your shopping cart!") or not-so- arbitrary (e-learning testing) time limits. 
I think that there are 2 categories of time bounds which must be distinguished in our guidelines: 1. Universal, user-independent absolute deadlines (e.g. "This auction ends at 16:00 hours UTC.") For such limits there is no practical way, with currently available technology, to reconcile accessibility with fairness to other bidders. 
The guideline should specify that user-independent deadlines remain acceptable at this time. 
2. Time-outs relative to user actions (e.g., your shopping cart vanishes if you don't submit complete billing information within five minutes after you received the check-out page.) The service will not qualify as "accessible" unless users can obtain an exemption from such limits. 
In situations (such as e-learning/e-testing) where response-time is used as a measure of performance, the fact that the user obtained such an exemption may be included in the subsequent report of the user's score. 
Adam Reed areed2@calstatela.edu 
Context matters. 
Seldom does *anything* have only one cause. 
This question has been dealt with at length in the User Agent Guidelines working group - it is their checkpoint 2.4 I have included here the full text of that checkpoint because I think it specifies what we want (except we change "user agent" for "content": 2.4 Allow time-independent interaction. 
(P1) 1.For rendered content where user input is only possible within a finite time interval controlled by the user agent, allow configuration to provide a view where user interaction is time-independent. 
2.The user agent may satisfy this checkpoint by pausing processing automatically to allow for user input, and resuming processing on explicit user request. 
When this technique is used, pause at the end of each time interval where user input is possible. 
In the paused state: ? 
Alert the user that the rendered content has been paused (e.g., highlight the "pause" button in a multimedia player's control panel). 
? 
Highlight which enabled elements are time-sensitive. 
? 
Allow the user to interact with the enabled elements. 
? 
Allow the user to resume on explicit user request (e.g., by pressing the "play" button in a multimedia player's control panel; see also checkpoint 4.5). 
3.The user agent may satisfy this checkpoint by generating a time-independent ("static") view, based on the original content, that offers the user the same opportunities for interaction. 
The static view should reflect the structure and flow of the original time-sensitive presentation; orientation cues will help users understand the context for various interaction opportunities. 
4.When satisfying this checkpoint for a real-time presentation, the user agent may discard packets that continue to arrive after the construction of the time-independent view (e.g., when paused or after the construction of a static view). 
Techniques for checkpoint 2.4 Note: If the user agent satisfies this checkpoint by pausing automatically, it may be necessary to pause more than once when there are multiple opportunities for time-sensitive user interaction When pausing, pause synchronized content as well (whether rendered in the same or different viewports) per checkpoint 2.6. 
In SMIL 1.0 [SMIL], for example, the "begin", "end", and "dur" attributes synchronize presentation components. 
This checkpoint does not apply when the user agent cannot recognize the time interval in the presentation format, or when the user agent cannot control the timing (e.g., because it is controlled by the server). 
See also checkpoint 3.5, which involves client-driven content refresh. 
chaals Location: 21 Mitchell street FOOTSCRAY Vic 3011, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) How about something like Checkpoint 2.4 Either give users control over how long they can interact with content that requires a timed response or give them as much time as possible unless the event is realtime based. 
Success criteria You will have successfully either given users control over how long they can interact with content that requires a timed response or given them as much time as possible if: - the user is allowed to deactivate automatic timeouts or updating or - the user is allowed to set the timeout to 10 times the default timeout period or - the user is warned before time expires and given at least 10 seconds to extend the time available to them or - the user is allowed to set how often the content is updated (in seconds) or - the user is given as much time as possible or - the event is a realtime event (such as an auction which closes at 5:00pm). 
And - any moving text can be frozen by the user. 
This set of choices should cover the different types of timed events I am aware of. 
My clinical experience has shown that 10 seconds is long enough to capture most users -- though some will always have problems with any timed task if they know it is timed. 
Gregg Gregg C Vanderheiden Ph.D. Professor - Human Factors Dept of Ind. 
Engr. - U of Wis. 
Director - Trace R &amp; D Center Gv@trace.wisc.edu 
mailto:Gv@trace.wisc.edu , http://trace.wisc.edu/ 
For a list of our listserves send ?lists? to listproc@trace.wisc.edu 
