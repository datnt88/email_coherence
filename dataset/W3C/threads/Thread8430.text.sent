[This email was bounced to me because the address above is not the one on the accept/dist list, however I've added the address above to the complement accept list. 
-- Reagle] KeyingInfo/ sig-alg/ I was wondering if it did not make sense to combine those two parts into something like sig-alg AlgorithmName Alg-Info/ KeyingInfo/ sig-alg/ Reason: Keyinginfo will most likely be highly dependent on Alg-Info. 
Especially when considering symmetric variants, I'd highly appreciate the possibility to not keep their specifications together with the asymmetric ones and grouping them would a) enable us to sepearte algorithm-specific specifications into separate documents if we decide to do so and b) allow for modular, plugable provider-like implementations using kind of a standard-API a'la the JCE provider stuff. 
Obviously we could do so without modification, but I'd like that better. 
Comments? 
Manifest is an opaque Blob Yes, I agree, but I also would like to have some kind of document discussing reasonable behaviour when constructing/validating/manipulating manifests etc. Outside the core spec obviously. 
Peter Dr. Peter Lipp IAIK, TU Graz Email Peter.Lipp@iaik.at Phone +43 316 873 5513 Web http://jcewww.iaik.tu-graz.ac.at Peter, Not quite true. 
I can use any public-key signature algorithm and refer to the public key either by a KeyID (whose actual meaning could be left to the relying party) or the ISN of a certificate. 
Identification of the keying material is independent of the algorithm being used (in most circumstances). 
How we refer to the keying material is most likely dependent on the 'key and trust' management infrastructure in place. 
Sincerely, Richard D. Brown Software Architect - R&amp;D Globeset, Inc. Austin, TX - U.S. the keying This is right, I was thinking more about the symmetric stuff especially key agreement and other things in the original draft. 
Peter 
