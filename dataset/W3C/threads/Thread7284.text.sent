I do not believe that URL kludge is the way to go. 
Rather we need a version header. 
Just as one can negotiate on language or content type, one will be able to use a version header to negotiate on version. 
Yaron There is not reason not to version an opaque part of the URL just as is the case with the media type, language etc. Anything else would make life terrible for cache implementors. 
Note the "opaque" part - which should be obvious. 
The server indicates where to find specific versions or a complete history list using the "Link" header, for example Link: ListOfMyPreviousVersions.html ; rel="history" Henrik Its not a kludge, I consider the use of a header to be a kludge since there is no mechanism for tying it to HTML or any other Web infrastructure. 
If its a resource locator its a resource locator. 
Resources are not files, they are concepts. 
Phill There are URL kludges, and there are URL kludges :-) We don't need a global URL kludge, especially the sort that says "given a URL, here's how to lexically extract the version info." 
We _do_ need the ability for origin servers to say things like "resource http://X is version 1.2 of resource http://Y" Absolutely, there is no need to define a global method for specifying "the" version in a URL. 
The URL should carry the information but it should be opaque. 
It is arguable that a serverr be able to state the lexical scheme it employs to form versions "i use fred's version hack", but I dislike that plan since it opens the door for hardwiring a simplistic notion of versioning into the Web we will later regret. 
Remeber what they did to the Accept: header ! 
Phill I think the argument is more fundamental. 
The feeling is that URLs point to a single resource. 
While a resource may have several representations each representation is a semantically equivalent, although possibly degraded, version of each other. 
Two different versions of a document are not semantically equivalent. 
While one could make an argument along the lines of "degraded" content, I don't think the argument is very compelling. 
So Henrik and others are arguing that we should specify version as part of the URL because we are referring to related but distinct resources. 
Yaron version be (Sorry if some of this is naive or has been covered before; I haven't had time to follow this list too closely.) I had mixed feelings on this; headers do seem cleaner, URL's seem to work better within existing browsers. 
(Actually, it's not a matter of them working better, it's a matter of them working at all; using headers to specify the version makes going to a specific header via a link impossible in any existing browser). 
Perhaps what we need is to encourage the browser manufacturers or HTTP standards folk to develop extensions to HTTP to allow specification of versions in links: A HREF="http://www.mks.com/some/path/index.htm" VERSION=1.3 ... or perhaps something more generic, equivalent to the HTTP Response header of the META tag: A HREF="http://www.mks.com/some/path/index.htm" HTTP-EQUIV="Version" CONTENT="1.3" 
The browsers would follow this link and insert a "Version: 1.3" header in the request. 
This would be a much cleaner approach all-round than the URL munging, although it has a serious problem of requiring Browser support. 
I think the second option above (allowing adding an aribtrary header to a link) would have many side-benefits: A HREF="http://www.mks.com/NewStuff.htm 
HTTP-EQUIV="Pragma" CONTENT="No-Cache" Always load this page, never use cached. 
/A A HREF="http://www.mks.com/Secret.htm 
HTTP-EQUIV="Authorization" CONTENT="basic zcvzckjdfzkdjfzd" Go to secure page /A A HREF="http://www.mks.com/International.htm 
HTTP-EQUIV="Accept-Language" CONTENT="French" Get the french version /A and so forth... Specifically for versioning, it would allow a great deal of flexibility no only for a Version: header, but for other related headers which would prove quite useful. 
-dale It is different because the French and English versions and semantically equivalent. 
You should get the same information in the French and English versions. 
This is similar to requesting a document in MSWord or PostScript format. 
The information should be identical, they are semantically equivalent, even though the syntax's are radically different. 
However Version 1.2 and Version 1.3 of a document are semantically different. 
That is, generally, the reason for having different version numbers, to indicate semantic difference. 
Yaron PS Yes, I know, you can also use versions to indicate syntactic difference but that is picking nits. 
to the But don't the Accept-*: headers allow selecting variants of a specific URL? 
I would argue that "Give me the French version" is not a request unlike saying "Give me the Feb 14th version" or "Give me version 1.3"... 
After all, a historical variant would (typically) be indicating what the URL *once* pointed to... -dale 
