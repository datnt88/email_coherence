Are the inference rules for static analysis normative or non-normative? 
In other words, are all implementations of static analysis requierd to follow the static inference rules as specified in the formal semantics spec? 
Suppose that I construct a static inference engine that takes full advantage of backward axes. 
That engine would create types narrower than those created by the static inference rules in the formal 
semantic spec. 
Is that engine non-conformant? 
This would be very unforunate. 
MURATA Makoto mmurata@trl.ibm.com 
Dear Murata-San Since we have not yet finalized the conformance section, we have not yet a full answer to your question. 
The latest discussion was that the static analysis is normative as a lower-bound and implementations could infer more precise types. 
What is needed for conformance, I don't know yet. 
I personally find the loss of type information on backwards-axes to be problematic as well. 
If you would like to propose more precise inference rules, I am sure we will look at them and see if we can/want to incorporate them. 
Thanks Michael 
non-normative? 
formal 
"Michael, Thank you for your prompt answer. 
I feel that use of backwards-axes for type inference requires an approach significantly different from that of the formal semantics spec. 
Such an approach may sometimes lead to tighter types and sometimes lead to looser types. 
So, I feel uneasy to have normative rules for type inference. 
Cheers, MURATA Makoto mmurata@trl.ibm.com 
