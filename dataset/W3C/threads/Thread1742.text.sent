Hi, I'd like to know whether I well understood : the mechanism of checkout-put-checkin cretes a new version of a resource, while the lock-unlock mechanism allows to modify a resource without creating a new version, is that right ? 
Can someone explain me the exact difference between this two mechanisms ? 
Thanx Elodie, checkout-put-checkin correct -- indeed the version is a resource, so checking-in creates a new version resource. 
creating a new this is also correct. 
Locking a resource just causes a state change in the locked resource; it does not create any other resources. 
Locking is typically used in a multi-user environment. 
Obtaining a lock permits you to modify a resource and prevents others from modifying the resource. 
This allows you to ensure others' contents are not overwritten, and you can set consistent content and dead properties for example. 
Checking out and in are used to capture a meaningful state of a resource as a version. 
It is meaningful to do this in single or multi-user environments. 
The captured states can be 'viewed' or restored at some later time. 
Locking and versioning are separate concepts. 
Regards, Tim To avoid ambiguities: if you modify a locked, version-controlled resource, you will create a new version (if the server supports auto versioning that is). 
To further illustrate Tim's point that locking and checkout/checkin are largely orthogonal, a client accessing a shared workspace would normally lock a checked-out version-controlled resource while it is editing it, just as it would a non-version-controlled resource (and for the same reasons). 
Cheers, Geoff Elodie, checkout-put-checkin correct -- indeed the version is a resource, so checking-in creates a new version resource. 
creating a new this is also correct. 
Locking a resource just causes a state change in the locked resource; it does not create any other resources. 
Locking is typically used in a multi-user environment. 
Obtaining a lock permits you to modify a resource and prevents others from modifying the resource. 
This allows you to ensure others' contents are not overwritten, and you can set consistent content and dead properties for example. 
Checking out and in are used to capture a meaningful state of a resource as a version. 
It is meaningful to do this in single or multi-user environments. 
The captured states can be 'viewed' or restored at some later time. 
Locking and versioning are separate concepts. 
Regards, Tim 
