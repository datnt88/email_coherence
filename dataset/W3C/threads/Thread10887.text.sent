Per Tim's reasonable suggestion, I am breaking up my commentary message into topical email-bites. 
3. Minimum Progress on Hyperlink Enhancement The minimum set of hyperlink constructs should: 3.3 support addressing at least by URL and ID attribute, alone or in combination. 
And offset, of some sort. 
Martin is right about limitations of read-only documents. 
3.4 It must be possible to recognize links without a DTD. 
I think we can do this easily. 
Simply specify that an document that wants to work without a DTD should use the architectural form names as element names, or use explicit attributes wherevet the AF is being used. 
-- David I am not a number. 
I am an undefined character. 
David Durand dgd@cs.bu.edu \ david@dynamicDiagrams.com 
Boston University Computer Science \ Sr. Analyst --------------------------------------------\ http://dynamicDiagrams.com/ MAPA: mapping for the WWW \__________________________ On Fri, 20 Dec 1996 11:56:53 -0500 David Durand said: 3. Minimum Progress on Hyperlink Enhancement The minimum set of hyperlink constructs should: 3.3 support addressing at least by URL and ID attribute, alone or in combination. 
I agree strongly that reference to SGML elements not bearing IDs is very useful and not too hard to try to do. 
I agree also, though much less strongly, that reference to spans which are not SGML elements is useful. 
It's not nearly as easy, though, and may be a tar pit. 
(Offset measured in bytes? 
characters? 
Is a byte an octet or -- this is Unicode -- two octets? 
No, it's ISO 10646 -- four octets? 
Is NON SPACING UMLAUT + A one character or two? 
You mean a smart Unicode system that normalizes my document can break incoming links? 
Gee, thanks!) In fact, I think I'll put it the other way: this is almost surely a tar pit, though there may conceivably be a way to get arbitrary spans of content without petrifying ourselves in arguments about octet-counting, and if we can find that path, it might be worth while taking it. 
Neither of these, however, seems to me to fall into the class 'minimum progress needed to declare victory'. 
We can declare victory -- even more important, we can earn victory -- without either of these things. 
(If they were absolutely essential to all users, systems that lack them would have no users. 
The Web does have users; ergo, ...) -C. 
M. Sperberg-McQueen 3. Minimum Progress on Hyperlink Enhancement The minimum set of hyperlink constructs should: 3.3 support addressing at least by URL and ID attribute, alone or in combination. 
It's not a tar pit (I don't think) when defined in terms of groves because issues of character representation are resolved in the process of constructing the grove because each character becomes an individual node. 
Through the use of grove plans and, possibly, custom data tokenizers, you can define exactly how you want the data you're addressing represented. 
One of the things I *didn't* mention in my summary of TC changes is that span locations are now more clearly defined because of groves. 
Cheers, E. W. Eliot Kimber (eliot@isogen.com) 
Senior SGML Consulting Engineer, Highland Consulting 2200 North Lamar Street, Suite 230, Dallas, Texas 75202 "Rats in the morning, rats in the afternoon...if they don't go away, I'll be re-educated soon..." --Austin Lounge Lizards, "1984 Blues" Web users stick to HTML - why should they change to XML if XML's linking mechanism is no better than HTML's. 
Many of us web users are screaming at W3C to improve linking so we can manage our links better, and so that we can offer sensible hierarchies of possible information providers. 
If they don't improve HTML soon some of us are going to have to find an alternative. 
It would be nice if that alternative could be XML. Martin Bryan, The SGML Centre, Churchdown, Glos. 
GL3 2PU, UK Agreed. 
Unless we get a capability that is clearly superior to the current web situation, the alternative is to apply other current systems which are already superior and simply adopt protocols which can support them. 
SGML/XML should offer a set of hyperlinking and location models (yes, location models) which enable us to build up to a more capable system by implementing each part as needed. 
You won't oust HTML. 
Forget that. 
At the end of this, HTML must also be expressed as XML. 
It is already expressed as SGML so it is XML that must make a case for itself. 
A victory indicates someone wins and someone loses. 
If that is what you want, you are not designing a system; you are choosing victims. 
Subsetting HyTime (what it was designed for) is a better alternative than adopting it in non-conforming pieces then claiming to have solved the problem by superior means. 
So far, I have read no real objections to what Eliot is proposing. 
IMO, HyTime is baroque and has undergone many transformations that while making it stronger, have left many of us bewildered about what it is. 
A position paper that proposes how HyTime could be applied to XML hyperlinking is needed. 
Simply punting to the stylesheet revives the DSSSL vs The World wars carefully put to bed by wiser members of the SGML community a year ago. 
Len Bullard Lockheed Martin 
