I've been cheching the checkpoints, and would like to make a few points. 
"A.5.2?Use foreground and background color combinations that provide sufficient contrast when viewed by someone with color deficits or when viewed on a black and white screen. 
[Priority?1]" 
This in my view should apply only to raster images (e.g., GIF, JPEG) 
and to deprecated HTML methods, (attibitues of BODY, FONT). 
When style sheets are used for colors, colorblind people or users of monochrome screens can (and should due to their special circumtances) override all authors colors. 
"A.9.4?For pages that use style sheets, ensure that the contents of 
each page are ordered and structured so that they may read in the intended order even when the style sheet is not used. 
[Priority?1]" 
This should be extended: "For pages that use style sheets or presentational markup, ensure that the contents of each page are ordered and structured so that they may read properly even when the style sheet and presentational markup is oveeriden by the user. 
[Priority?1]" 
(note that I also replaced "intended order" with "properly" as I want to exclude using FONT size=6 instead of H1 ). 
"A.6.5?Use relative sizing and positioning (e.g., percent values) rather than absolute (e.g., pixel or point values). 
[Priority?2]" 
Why is relative (with respect to containing element) better than absolute (with respect to view port) positioning? 
I would replace the checkpoint with: Don't use absolute font size. 
"A.1.3?For all image map links, provide alternative text for each link (e.g., via the "alt" attribute of HTML AREA element). 
[Priority?1]" 
This is confusing as there is no need for alternative if the content of MAP is a paragraph with anchors. 
I propose: "For all image map links created with the AREA element, provide alternative text for each link via the "alt" attribute. 
[Priority?1]" 
"A.8.1?If a table is used for layout, do not use any structural markup for the purpose of visual formatting..." This is a contradiction as TABLE itself is structural. 
Should be "If an HTML table is used for layout, use only TD to mark the table's cells." 
"A.13.5?Until user agents and screen readers are able to handle text presented side-by-side, all tables that lay out text in parallel, word-wrapped columns require a linear text alternative (on the current page or some other). 
[Priority?2]" 
This is a very dangereous checkpoint since it encourages authors to use frames, that are an inter-media usability 
hazard, as opposed to tables that can be serialized (or linearized) easily. 
People who have "problematic" screen readers can get a browser that serializes tables (Lynx or Opera), then the problem is gone. 
(I think we should have also user guidelines, telling people how to choose a browser and configure the preferences) "A.13.4?For all form controls with implicitly associated labels, ensure that the label is properly positioned...." It is not clear to me whether this applies to LABEL elements that have the INPUT as content without the "for" and "id" and/or to input elements that have no LABEL element at all. 
"B.1.5?Create a hierarchy of long lists of choices (e.g., with the HTML OPTGROUP element). 
[Priority?2]" 
Should be "Divide long lists of choices into groups (e.g., with the HTML OPTGROUP element). 
[Priority?2]" 
(this is because OPTGROUP can't be nested and create a hierarchy) "A.13.2?Include default, place-holding characters in edit boxes and text areas (e.g., TEXTAREA and INPUT in HTML). 
[Priority?3]" 
This is usability reducing for most users. 
I think that using LABEL as well as putting the labeling text before each input should be enough. 
Regards, Nir Dagan Assistant Professor of Economics Universidad Pompeu Fabra Ramon Trias Fargas 25 08005 Barcelona Spain "There is nothing quite so practical as a good theory." -- A. Einstein 
Good point on image, although one might argue this is also addressed by alt and longdesc (i.e. if you can't see the image because of colorblindess, you should be able to access the textual description) 
Beyond using Style Sheet, lots of UA will provide a setting to render text with the desktop colors of choice, thus overiding author colors. 
Agreed. 
I'd rather be inclusive than restrictive: "A.1.3?For all image map links, provide alternative text for each link (e.g., via the "alt" attribute of HTML AREA element or the content of the A element). 
Agreed, it's more focused like that. 
How come ? 
As long as it's not a P1, I'm fine. 
Using Frames is not intrinsically bad. 
It is perfectly possible to create a site which uses frames extensively, yet causes no accessibility problems. 
It requires the use of NOFRAMES to give access to the content pages. 
If there is (for example) a navigation frame and a main content 
frame, then being able to get to a single page, and use back to get to the navigation frame is access. 
Many websites were designed this way - that's one of the reasons frames became popular. 
A more useful approach is to repeat the navigation system (or in a large document part of it) within the content pages. 
On the other hand, there is no such mechanism for TABLE. 
Either your 
browser understands it, (eg JAWS + IE4.xx) or it doesn't (Lynx 2.8, JAWS + Netscape 3 I believe). 
If it doesn't, then you are reasonably likely to be served incomprehensible gobbledygook. 
If there are a group in this 
situation, then there is a prima facie case to answer before we drop the Priority below 1. 
(The ansewr lies in our appraoch to legacy problems, I think) Charles 
How come ? 
As long as it's not a P1, I'm fine. 
--Charles McCathieNevile - mailto:charles@w3.org 
W3C Web Accessibility Initiative - http://www.w3.org/WAI 545 Technology sq., Cambridge MA, USA 
Right, but TABLE isn't a problem, it's a solution. 
And sometimes it's the wrong solution. 
If your content is genuinely tabular in nature, then TABLE is the exactly right solution, and if the client doesn't support it, then it's the fault of the client (Lynx versus emacs-w3). 
Often the content isn't genuinely tabular in nature, it's just a misguided attempt to achieve visual formatting on the available mass-market browsers. 
Then Lynx is the clear winner, and the results with a character-mode emacs-w3 are distinctly inferior, because the author hadn't the first clue what a table would look like on a text-mode browser. 
With the greatest of respect, and honestly having no intention to be rude to anyone, it's necessary to understand the _real_ problem before addressing the solution. 
Lynx can often produce a _better_ result by not understanding TABLEs. 
But only because authors leaped on TABLEs as a visual formatting strategem. 
Even if the user agent and access software both support frames, at prsent they are still somewhat inconvenient to use, because the TITLE attribute is not yet supported. 
Both Emacs/W3 and Lynx attempt to derive the title from the NAME attribute, which, as mentioned on this list, is meant to identify the frame to the software and not to be read by the user. 
The value of NAME thus often provides only a very limited clue as to the intended content of the frame. 
Actually Alan, I just assume everyone respects me - I am notoriously hard to offend even when you mean to do so. 
But I digress. 
This is in fact another legacy problem, although it is one that is in a different to imagemaps, as an example. 
It seems pretty clear as CSS adoption spreads (Oh so slowly! 
sigh.) that eventually TABLEs will not be used for anything except tabular data, except by excessively backwards people. 
At which point it will be important for somebody to put a TABLE module into Lynx... Charles McCathieNevile With the greatest of respect, and honestly having no intention to be rude to anyone, it's necessary to understand the _real_ problem before addressing the solution. 
Lynx can often produce a _better_ result by not understanding TABLEs. 
But only because authors leaped on TABLEs as a visual formatting strategem. 
--Charles McCathieNevile - mailto:charles@w3.org 
W3C Web Accessibility Initiative - http://www.w3.org/WAI 545 Technology sq., Cambridge MA, USA 
It doesn't require the use of NOFRAMES if the UA is smart enough to read the content of the FRAME elements. 
When I look at the following markup, which is compliant with the guideline for FRAMESET, I can't help but think this is bogus, because of the duplicate information found in titles and NOFRAME anchors. 
P This frameset document contains: To me, either one or the other is required, but not both. 
