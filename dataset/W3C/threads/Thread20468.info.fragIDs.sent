My understanding is that the CDATA tag is to circumvent parser problems with unescaped characters, like , which are meant to operate in their mathematical capacities rather than in their text capacities. 
The problem that I am experiencing is that in AMAYA 5.3 CDATA is acting as a "bit bucket of oblivion" - the code that is enclosed is totally ignored. 
The code is a simple JavaScript code which checks the level of a user's browser. 
Below a certain level, a window appears informing the user of the availability of an updated browser version. 
In order not to make a nuisance of itself, the checking routine writes a simple cookie to a user's computer which it later checks so as not to run again when the page reloads. 
This cookie lasts only for the duration of the browsing session. 
The code uses a  symbol in its mathematical sense, so this routine needs to be 'masked' from an XML parser. 
The syntax that I am using is this: ![CDATA[ . the actual JavaScript code is inserted here ]] The code is not executing at all, and if I use comment markers, !-- ... -- , the result is identical. 
So, the questions are these: is my syntax incorrect? 
-or- is this an implementation 'bug' in AMAYA -or- is this a design 'bug' in the functioning of CDATA? 
- Mark Mark Lee Smithsonian Institution Electronic HelpDesk &amp; Software Distribution System Webmaster mlee@sivm.si.edu 
Hello Mark In fact, there are two things. 
First, the public Amaya releases until now (including Amaya 5.3) didn't treat 
the CDATA tag and only its content was preserved and attached to the parent 
element. 
The current CVS version of Amaya preserves this tag and its content 
and creates a specific element in the document tree (for XML documents only). 
The second thing is that script languages are not (yet) supported in Amaya, so 
they are not executed. 
Regards Laurent Carcone Amaya team 
Laurent; Thanks for your note. 
I am fairly new to Amaya and so was not aware that, as you and John Russell pointed out, Amaya did not yet support any scripting languages. 
I had dark inklings of suspicion, but that was all. 
The 
naturally arising questions are: Do you or anyone here know when or if scripting languages will be supported, and if so, which language? 
Again, 
thanks. - Mark Mark Lee Smithsonian Institution Electronic HelpDesk &amp; Software Distribution System Webmaster mlee@sivm.si.edu 
treat 
parent 
content 
only). 
Amaya, so 
Somewhere in the lower half of my to-do list is embedding Python in Amaya. 
A more interesting question is, would you really want scripts running loose 
inside a document you are trying to edit? 
Cheers, 
Horatio 
Horatio; 
A file, once it has been hauled into an editor, only represents a suspended 'snapshot' of the currently active file. 
Until the file is saved 
neither it nor the script it contains are active. 
Saving the altered file as 
a beta file buffers the web-surfing public. 
So, I guess I am missing your point about "... scripts running loose inside a document ...", please enlighten me. 
Why Python? 
I am curious because I have only encountered comparisons between Python and Java or C. I was referring to something much more compact 
that only runs within a web browser environment like JavaScript, which is currently, I believe, the most accurate representation of the ECMA-262 standard. 
- Mark Mark Lee Smithsonian Institution Electronic HelpDesk &amp; Software Distribution System Webmaster mlee@sivm.si.edu 
loose 
Looking at the original post, I had thought you originally asked why scripts 
were not executing in Amaya - which Laurent answered by saying that wasn't implemented yet. 
Scripts are useful because they make documents interactive 
- in other words, the state of the document changes over time. 
Editing a moving target is an awkward challenge, but some documents depend on their script components in order to present properly, so editing them without scripts active is awkward also. 
Did you only want Amaya to execute scripts when not in editing mode? 
Python is designed to be embedded in things, and I like the stuff. 
-- Horatio 
Horatio; Obviously there has been a HUGH amount of mis-communication and behind it all is that we come at the same thing differently - you from a GUI environment and me from a console environment. 
What you are explaining I already know, but the structure of Amaya to function primarily as a GUI interface is not going to be useful to me at all - to many others, 'yes' it will be useful. 
Best of luck in your development. 
- Mark Mark Lee Smithsonian Institution Electronic HelpDesk &amp; Software Distribution System Webmaster mlee@sivm.si.edu 
saved 
scripts 
interactive 
