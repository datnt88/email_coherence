The XML spec allows for Unicode characters from space (20) and above and #x9 | #xA | #xD. 
Various existing applications make use of "characters" below 20 for various reasons. 
Since they are not allowed in XML, what is the recommended way to represent them? 
Note the applications that use these chars want to efficiently write them out and read them in, and want to exchange the data with other apps easily. 
Escaping them as &amp;#xhhhh; is not an option, nor is cdata, as they both reference the production rules for char. 
Do they have to define some markup to represent them? 
Scanning data to catch these codes and map them to something else will be burdensome... ideas? 
perhaps a candidate for q&amp;A note. 
Tex Texin cell: +1 781 789 1898 mailto:Tex@XenCraft.com Xen Master http://www.i18nGuy.com 
XenCraft http://www.XenCraft.com 
Making e-Business Work Around the World 
Tex Texin a ?crit: 
I don't think there's any official recommendation, but a useful way to deal with this situation is to base64-encode the whole string (e.g. the content of a specific element) that may contain controls. 
Of course, the receiving application must know to decode the encoding to recover the intended content. 
XML 1.1 allows them as &amp;#xhhhh;, except for U+0000 NULL. 
See Fran?ois 
that's great, thanks Francois. 
base64 is probably not practical for this situation (records too large). 
but escaping is reasonable. 
tex 
Tex Texin cell: +1 781 789 1898 mailto:Tex@XenCraft.com Xen Master http://www.i18nGuy.com 
XenCraft http://www.XenCraft.com 
Making e-Business Work Around the World 
Depends on why you want to include these "characters". 
Most of the time these "characters" appear because people try to include pure binary data like bitmap images in their XML documents. 
In this case these are octets, not characters. 
The typical recommendation in this case is an additional encoding or escaping layer like Base64 or hex encoding (1C5FFF3C...) which are supported in XML Schema (i.e., XML Schema provides data types for them). 
The alternative is to avoid inclusion, but store the data in some external document and reference it from the XML document. 
Except for the form feed character, I've not yet heard of someone who really want's to use these as real characters. 
Hi, The question was prompted by a user that used binary "2" in his legacy data. 
He assigned it some meaning. 
It is not uncommon. 
For example, the 2, could represent a list separator, which won't conflict with any of the potential data. 
He ran into a problem when the data was saved out as XML. 
tex 
Tex Texin cell: +1 781 789 1898 mailto:Tex@XenCraft.com Xen Master http://www.i18nGuy.com 
XenCraft http://www.XenCraft.com 
Making e-Business Work Around the World 
Attached is my proposal for Q&amp;A on C0 Characters. 
It actually wasn't the topic I intended, but the question came up and I 
thought it would be quick and I might do a second one. 
But it ended up taking much more time than I thought. 
Anyway, for discussion at the next telecon. 
Feel free to email constructive comments before then. 
Thanks to Francois for the initial pointers. 
tex 
HTML 4 marks most control characters as UNUSED in the SGML declaration and are thus - according to Martin - invalid. 
The allowed c0 characters are CR LF FF and tab, just like in XML (except for the form feed character, of course). 
Bjoern, Thanks for this. 
I'll discuss with Martin. 
I believe it, but I don't see the justification from the standard. 
I created a test file and the W3C validator reports "reference to non-SGML character" on C0 characters confirming what you say. 
I am guessing the limitation derives from SGML rather than something explicit in the html spec. 
tex 
Tex Texin cell: +1 781 789 1898 mailto:Tex@XenCraft.com Xen Master http://www.i18nGuy.com 
XenCraft http://www.XenCraft.com 
Making e-Business Work Around the World 
Comments embedded below. 
Tex Texin a ?crit: 
Questions &amp; Answers: HTML, XHTML, XML and control code characters 
"control code characters" looks wrong to me. 
Should be "control codes" or "control characters". 
Question... Are there any differences in the way HTML, XML, and XHTML support the "control code" characters (U+0001-U+001F)? 
This shouldn't be restricted to the range U+0001-U+001F. 
As the title implies, it should also cover the C1 range. 
The issues and solutions are pretty much the same for C0 and C1, although details differ. 
See also my comment on Note 1 below. 
Really? Hmmm, yes, the spec seems to say that. 
Your mileage may vary though, especially with U+0000 NULL. 
If I put &amp;#x0000; in an HTML file, IE6 displays it as "&amp;#x0000;", litterally. 
It doesn't interpret it as an NCR. 
Other NCRs in the C0 and C1 ranges variously give a 
missing-glyph rectangle or nothing at all. 
&amp;#x0080; yields a euro sign! 
* XML 1.0 and XHTML do not allow these characters. 
The C1 range is allowed in XML 1.0. 
* XML 1.1 allows the characters to be represented by Numeric Character References (NCR) or Character Entity References. 
There are no such things as Character Entity References in XML. 
The controls are allowed *only* as NCRs. 
Solutions If you need to represent these characters in XML 1.0 or XHTML, you can create a convention to represent them and replace every occurence with that convention. 
An alternative is to encode the data. 
For example, encode the data as base64 or as hexadecimal values, to ensure only supported characters are used in the markup language text. 
(And of course, decoding the text when reading the files.) Note that XML Schema provides data types for these encodings. 
Another alternative is to store the data in an external document and reference it from the XML document. 
In XML 1.1, the simplest alternative is to represent any occurence of a C0 character with an NCR. 
For example, the character "ESCAPE" U+001B would be represented by either &amp;#x1B; (hexadecimal) or &amp;#27; (decimal). 
Doesn't work for U+0000 NULL. 
Not the latter, see above. 
NOTES: 1 There is a similar set of control codes in the range U+007F-U+009F, known as the C1 range. 
Since these are not excluded by any of the markup languages, they are not discussed here. 
XML 1.1 does exclude the C1 controls (except U+0085 NEL) as litteral characters, just like the C0. 
They are allowed as NCRs. 
2 More details on the C0 range are available in the Unicode Code Chart: C0 Controls and Basic Latin http://www.unicode.org/charts/PDF/U0000.pdf . 
3 The document Unicode in XML and other Markup Languages http://www.w3.org/TR/unicode-xml/ contains guidelines on the use of the Unicode Standard in conjunction with markup languages such as XML. 
Fran?ois 
Fran?ois, 
thanks as always. 
Mostly agreement here and some new understanding on my part. 
I numbered your comments in the text and just reply here: 1) control code characters - I think of it as characters that represent control codes, so don't really see a problem. 
I'll look at this, after we deal with the more substantial comments. 
I do see your point though in codes not being characters. 
2) Originally, I really did just mean to discuss just c0... Actually c0 without null, since I didn't think there was an issue with null, but you undermined all of this... ;-( I'll come back to the scope after we review the rest of your points. 
3) NULL- ok, what to say about it? 
I don't want to doc browsers' random behavior. 
It would be nice to say its illegal and be done with it. 
4) I do know that IE maps the c1 range into 1252 values. 
It encourages people 
to presume that those values represent legit characters rather than forcing them to use correct NCRs. 
On the other hand, I am sure it is a compatibility issue for many many pages. 
If we discuss c1, I can add this as a caution. 
5) C0 in html- the spec says yes. 
I agree there are no glyphs, when I tried it, although &amp;#2; was a different box than &amp;#x3;-&amp;#x8; for some reason. 
However, the validator rejects these characters. 
I want to get Martin's comment on why dtd makes it unused. 
6) c1 is allowed in XML. 
Yes I agree. 
That is why I restricted myself to c0. 
I didn't see an issue. 
Since it is supported, legacy apps don't have a problem migrating to *ML and using it. 
However, I now understand it is restricted in 1.1, so needs to be covered. 
7) character entity references. 
Maybe this is a terminology problem on my part. 
The title of http://www.w3.org/TR/2002/CR-xml11-20021015/#sec4.1 is character and entity references. 
I presumed the former was ncr and the latter was CER. 
It is possible to give a name to a character in xml. 
Is that not called a CER? 
I guess HTML uses CER for the predefined ones. 
I realize XML doesn't have these definitions predefined. 
Shall I just call it an entity reference? 
8) NCR doesn't work for null. 
ok, I'll doc this. 
9) AHA! ok. 
I see the production changed in so that 7f-9f except 85 is excluded. 
Seems to me an odd thing to do, although 
I appreciate there is a lot of ambiguity around controls. 
ok, thanks very much for your careful review! 
What I thought was going to be a cheap, easy one paragraph Q&amp;A has become a much larger effort... oh well. 
Too bad it is in such a marginal area, although I know a couple programmers that were having trouble with this... tex 
Questions &amp; Answers: HTML, XHTML, XML and control code characters 
1 
Question... Are there any differences in the way HTML, XML, and XHTML support the "control code" characters (U+0001-U+001F)? 
2 
* HTML supports the C0 range. 
3 
5 Other NCRs in the C0 and C1 ranges variously give a 
4 &amp;#x0080; yields a euro sign! 
* XML 1.0 and XHTML do not allow these characters. 
6 
* XML 1.1 allows the characters to be represented by Numeric Character References (NCR) or Character Entity References. 
7 
Solutions In XML 1.1, the simplest alternative is to represent any occurence of a C0 character with an NCR. 
For example, the character "ESCAPE" U+001B would be represented by either &amp;#x1B; (hexadecimal) or &amp;#27; (decimal). 
8 
XML 1.1, according to Section 4.1 Character and Entity References http://www.w3.org/TR/2002/CR-xml11-20021015/#sec4.1 , extended XML to allow the Unicode characters in the C0 range to be represented as Numeric Character References or Character Entity References. 
noted 
NOTES: 1 There is a similar set of control codes in the range U+007F-U+009F, known as the C1 range. 
Since these are not excluded by any of the markup languages, they are not discussed here. 
9 
Tex Texin cell: +1 781 789 1898 mailto:Tex@XenCraft.com Xen Master http://www.i18nGuy.com 
XenCraft http://www.XenCraft.com 
Making e-Business Work Around the World 
Reordering a bit: Tex Texin a ?crit: 
Not so fast! 
With a test page in XHTML (supposedly kicks IE in strict parsing mode), I see only the euro displayed, all the others are white rectangles. 
Surprisingly, it's much the same in NS7 (s/white rectangle/replacement char/)! 
OK, let's dive. 
Looking more closely, the spec doesn't really say yes. 
Section 5.1 obliquely says that the document character set is ISO10646. 
And 10646 in turn doesn't define the C0 and C1 controls it just says (Clause 15): "This coded character set provides for use of control functions encoded according to ISO/IEC 6429 or similarly structured standards for control functions, and standards derived from these." 
And if you look at the code charts, the C0 and C1 areas are conspicuously empty (grayed out). 
The HTML spec contains an SGML declaration (section 20.1) which formally declares what the document character set is: CHARSET BASESET "ISO Registration Number 177//CHARSET ISO/IEC 10646-1:1993 UCS-4 with implementation level 3//ESC 2/5 2/15 4/6" DESCSET 0 9 UNUSED 9 2 9 11 2 UNUSED 13 1 13 14 18 UNUSED 32 95 32 127 1 UNUSED 128 32 UNUSED 160 55136 160 55296 2048 UNUSED -- SURROGATES -- 57344 1056768 57344 So it explicitly excludes all of C0, C1 and #x7F, except for TAB, CR and LF. 
We were both wrong. 
Well, there you have it now. 
It's illegal in HTML, XML 1.0 and XML 1.1. 
Well, HTML does have this terminology (in 5.3.2). 
It's not defined clearly, but it seems to cover all the predefined entities that HTML offers "to give authors a more intuitive way of referring to characters in the document character set". 
The purported intuitiveness is, of course, lost on non-English-speakers. 
It is possible to give a name to an entity, which may or may not contain a single character. 
The five entities that XML predefines (lt, gt, amp, quot and apos) do contain only one character. 
It makes things quite symmetrical. 
Apart from the few useful ones (CR, LF, TAB and NEL), all controls must be represented as NCRs; NULL is forbidden altogether. 
Regards, Fran?ois 
Fran?ois, great stuff. 
4) could it be font on your end? 
I didn't try xhtml, but for an html example, I see several of the characters in the 0x80-90 range in both IE and NS7. 
Perhaps the stricter parsing corrects the other characters, but it is odd the euro shows thru then. 
5) Unicode 3, section 13.1 says more or less it is up to the application but falls back to 6429. 
The chart shows the control names. 
My simplistic interpretation is both standards (Unicode, 10646) are saying it is up to the application to define their use, and html defines them as not to be used. 
3) Nulls- ok! character... 9) OK. What seemed odd to me was recognizing the controls were needed enough to add NCRs to support them and then ruling out the c1 range. 
And why allow them as ncr's but not as encoded values? 
thanks Fran?ois. 
I really appreciate your taking the time to dig thru this. 
I think we have way too much detail for the Q&amp;A so, I'll have to figure out how to handle it. 
Great stuff, and much appreciated. 
tex 
Tex Texin cell: +1 781 789 1898 mailto:Tex@XenCraft.com Xen Master http://www.i18nGuy.com 
XenCraft http://www.XenCraft.com 
Making e-Business Work Around the World 
OK, I tried an xhtml file and using ncr's to define the characters 0x80-0x90 I see them, but encoding the characters directly, they are all question marks, including the euro. 
tex 
