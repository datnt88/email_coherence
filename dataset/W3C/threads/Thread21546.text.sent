I recently followed the refences from KIF3 [2] back to your 1985 paper [5] which appears to solve a lot of important problems. 
I'm working on Semantic Web development at W3C / MIT-LCS [3], and we're very concerned with reasoning about belief and trust. 
My colleagues and I are generally trained more as software developers than logicians, but we're learning. 
(I've been helped immeasurably by occasionally discussions with Pat Hayes, Drew McDermott, Jim Hendler, Lynn Andrea Stein, and a few other kind souls you may know.) Anyway, your work looks tremendously useful, but I have a few questions I hope you might help me with. 
1. 
In 1995, the KIF standards committee decided [4] to stop using a truth predicate like yours in favor of the simpler "wtr", mostly on the grounds it and easier to implement (and, I think, reasoning about beliefs wasn't important to them). 
Do you have any implementation experience with your proposed system? 
Do you know of systems which use it? 
I can imagine axiomatizing it in FOL, and using a generic theorem-prover with it, but that's perhaps not very tractable. 
Do you know of such axioms written out somewhere? 
2. Calling the truth predicate "true" seems misleading; do you know of a more precise name, something which evokes the Gilmore's star which is part of the definition? 
My best attempt so far is "neutrallyTrue", which suggests to me the kind of slight disempowering the star seems to perform. 
3. Do you know of any important follow-up work, supporting or undercutting your work? 
How about explanations that are less technical than yours, but still detailed enough for a potential implementor to use? 
4. Do you have rights to publish your paper on the web? 
I have a scanned copy, but of course by law I can't share that widely. 5. In KIF's LISP-like usage, and even more so in the RDF-based usage I imagine, the truth predicate is applied to an abstraction of a sentence (some tree/graph of logical connectives, predicates, and terms) rather than a simple sequence of characters. 
This might introduce additional dangerous self-reference possibilities if not done carefully. 
Do you know of any work on this issue? 
Thank you so much for any information you can provide. 
I greatly appreciate your time in this. 
-- Sandro Hawke http://www.w3.org/People/Sandro/ Note: I have CC'd a public archive [1]. 
If you CC it on your reply, it will be permanently archived on the web and thus much easier for me to refer to and share with people. 
Feel free to omit it if you're more comfortable answering privately. 
Don't worry about addressing a wider audience in a CC'd reply; the archive is understood to simply contain e-mail that people are willing to have kept around for future reference. 
[1] http://lists.w3.org/Archives/Public/www-archive/ [2] http://meta2.stanford.edu/kif/Hypertext/node35.html [3] http://www.w3.org/2000/01/sw/ [4] http://logic.stanford.edu/kif/decisions.html 
[5] @article{Perlis85, AUTHOR = {D. 
Perlis}, TITLE = {Languages with Self-Reference I: Foundations. 
(or: We Can Have Everything in First-Other Logic!)}, YEAR = 1985, JOURNAL = {Artificial Intelligence}, VOLUME = {25}, PAGES = {301-322}, KEYWORDS = {}} Note to self: this is a poor way to address this problem. 
Much better would be to simply ask at the bottom: "May I archive your response on the web as part of my research notes, or would you prefer I keep it confidential?" 
I thought it worked quite well. 
Particularly as anyone replying and copying www-archive will get a msg from gerald's list archive permissions system, so advance warning is useful. 
Dan ps. this is my favourite mailing list... But he didn't include it on his CC, and he didn't say anything about it, and there was nothing in his mail that shouldn't be archived as far as I can tell. 
Speaking of which, why didn't you keep www-archive in your cc? :-) Oh, oops, I meant to. 
No matter. 
Re-adding :) www-archive is an elegant hack, but it would sure be nice to just have a proper shared database of e-mail! 
IMAP has some such facilities. 
Bristol Uni uses shared IMAP folders a lot. 
Seems to be a lot of overlap between IMAP and HTTP though; maybe someone'll do a Web-service based workalike sometime. 
Dan [ Permission to publish this e-mail is hereby granted. 
] 
