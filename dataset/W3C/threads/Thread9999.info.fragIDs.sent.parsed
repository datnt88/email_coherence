(S1 (FRAG (X (IN From)) (: :) (NP (NP (JJ ext) (NNP Dave) (NNP Beckett) (NN -LSB-mailto)) (: :) (NP (NN dave.beckett)) (X (X (SYM @)) (NP (NP (NN bristol.ac.uk) (NNS -RSB-)) (VP (VBN Sent)))) (: :) (NP (JJ 02) (NNP September)) (, ,) (NP (QP (CD 2002) (CD 14:17)) (NN Subject)) (: :) (NP (NNP Re)) (: :) (NP (NP (NNP RDF/XML) (NNP Syntax) (NNS problems)) (PP (IN with) (NP (JJ datatyping) (NNS literals)))))))
(S1 (S (`` ``) (NP (NNP Patrick.Stickler)) ('' '') (VP (VBD said)) (: :)))
(S1 (NP (NP (NNP Dave) (NNP Beckett) (NN -LSB-mailto)) (: :) (NP (NN dave.beckett)) (X (X (SYM @)) (S (NP (NN bristol.ac.uk) (NNS -RSB-)) (VP (VBD said)))) (: :)))
(S1 (SINV (ADVP (RB Here)) (VP (AUX is)) (SBAR (WHNP (WP what)) (S (NP (PRP I)) (VP (VBP consider) (NP (DT a) (JJ fatal) (NN case))))) (. .)))
(S1 (S (VP (VB Consider) (NP (NP (DT a) (JJ datatyped) (JJ literal)) (SBAR (WHNP (WDT that)) (S (VP (AUX has) (NP (NP (DT a) (JJ lexical) (NN form)) (SBAR (WHNP (WDT which)) (S (VP (AUX is) (NP (DT the) (JJ null) (NN string))))))))))) (. .)))
(S1 (S (S (NP (DT The) (JJ datatype) (NN URI)) (VP (AUX is) (, ,) (PP (IN for) (NP (NN example))))) (, ,) (RB So) (S (NP (DT the) (NNP RDF/XML)) (VP (VBD proposed) (SBAR (S (VP (MD would) (VP (AUX be) (: :) (ADVP (FW ex)) (: :) (VP (VB prop) (NP (NNP rdf))) (: :) (VP (VBG type=) (`` ``) (NP (NNS http))) (: :) (VP (VBG //example.org/datatype1) ('' '') (NP (NN /ex))) (: :) (VP (VB prop) (S (NP (DT This)) (VP (AUX is) (, ,) (PP (IN by) (NP (NNP XML) (NNS rules))) (, ,) (ADJP (JJ equivalent) (PP (TO to) (NP (FW ex))))))) (: :) (VP (VB prop) (NP (NNP rdf))) (: :) (VP (VBG type=) (`` ``) (NP (NNS http))) (: :) (NP (CD //example.org/datatype1) ('' '') (NNS /)))))))) (CC but) (S (NP (DT that)) (VP (AUX 's) (RB not) (NP (DT the) (NN issue)))) (. .)))
(S1 (S (NP (DT The) (NN problem)) (VP (AUX is) (SBAR (IN that) (S (NP (DT this) (NN form)) (ADVP (RB already)) (VP (AUX has) (NP (DT a) (JJ different))))))))
(S1 (S (VP (VBG meaning) (PP (IN in) (NP (DT the))))))
(S1 (S (NP (NNP RDF/XML)) (VP (VBD defined) (PP (IN in) (NP (NNP M&amp))) (: ;) (NP (NP (PRP S)) (CC and) (NP (DT the) (JJ current) (NN draft)))) (. .)))
(S1 (S (NP (NP (DT An) (JJ empty) (NN property) (NN element)) (PP (IN with) (NP (NN property) (NNS attributes)))) (VP (AUX is) (ADJP (JJ equivalent) (PP (TO to) (NP (NP (DT the) (NN expansion)) (PP (IN below)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ adds) (NP (DT a) (JJ blank) (NN node)) (S (VP (TO to) (VP (VB hang) (NP (DT the) (NN property)) (PRT (RP off))))))))))) (: :) (NP (NP (FW ex) (PRN (: :) (S (VP (VB prop) (S (NP (NP (NNP rdf)) (: :) (NP (NN Description) (NNP rdf)) (: :) (NP (NN type) (NNP rdf)) (: :) (NP (CD resource=) (`` ``) (NNS http)) (: :)) (VP (VBG //example.org/datatype1) ('' '') (NP (NNP /) (CD /rdf)))))) (: :)) (NN Description) (NN /ex)) (: :) (S (VP (VB prop) (SBAR (WHNP (WDT which)) (S (VP (AUX is) (RB n't) (SBAR (WHNP (WP what)) (S (NP (PRP you)) (VP (VBD wanted))))))))))) (. .)))
(S1 (S (INTJ (UH Well)) (, ,) (NP (PRP I)) (VP (AUX 'm) (RB not) (ADJP (JJ convinced) (SBAR (IN that) (S (NP (DT this)) (VP (AUX is) (NP (DT a) (NN problem))))))) (. .)))
(S1 (S (PP (IN After) (NP (DT all))) (, ,) (SBAR (IN if) (S (NP (PRP they)) (VP (AUX do) (RB n't) (VP (VB specify) (NP (NP (DT any) (JJ lexical) (NN form)) (ADVP (IN at) (DT all))))))) (, ,) (ADVP (RB then)) (NP (DT all) (PRP we) (NNS *)) (VP (MD could) (ADVP (RB *)) (VP (VB use) (S (VP (TO to) (VP (VB represent) (SBAR (S (NP (DT the) (NN property) (NN value)) (VP (MD would) (VP (AUX be) (NP (DT a) (NN bnode))))))))))) (. .)))
(S1 (S (NP (PRP I)) (VP (VBD found) (NP (NN support)) (PP (IN in) (NP (NP (DT the) (JJ last) (NN telecon)) (PP (IN from) (NP (NP (NP (NNP Jeremy) (NNP Carroll)) (PRN (-LRB- -LRB-) (SBAR (WHNP (WP who)) (S (VP (AUX is) (NP (NP (DT the) (JJ other) (JJ major) (NN parser) (NN writer)) (PP (IN in) (NP (DT the) (NN group))))))) (-RRB- -RRB-))) (CC and) (NP (NNP Dan) (NNP Brickley)))) (SBAR (WHNP (WP who)) (S (VP (VBD found) (S (NP (DT this) (NN example)) (ADJP (JJ compelling))))))))) (. .)))
(S1 (FRAG (NP (VBG Repeating) (QP (RB again) (CD 1)) (-RRB- -RRB-) (FW ex)) (: :) (S (VP (VB prop) (NP (NP (NNP rdf)) (: :) (NP (NP (CD type=) (`` ``) (NNS http)) (: :) (NP (VBG //example.org/datatype1) ('' '') (NN /ex)) (: :) (NP (VB prop) (CD 2)) (-RRB- -RRB-) (FW ex)) (: :) (S (S (VP (VB prop) (NP (NNP rdf)))) (: :) (S (NP (NNS type=)) (`` ``) (VP (VB http))) (: :) (S (NP (JJ //example.org/datatype1) ('' '') (NNS /)) (VP (AUX are) (NP (NP (DT both) (NN equivalent)) (PP (TO to) (NP (NP (CD 3) (-RRB- -RRB-) (FW ex) (PRN (: :) (S (VP (VB prop) (S (NP (NP (NNP rdf)) (: :) (NP (NN Description) (NNP rdf)) (: :) (NP (NN type) (NNP rdf)) (: :) (NP (CD resource=))) (`` ``) (ADJP (JJ http))))) (: :)) (NN //example.org/datatype1) ('' '')) (SBAR (S (NP (NP (NN /) (NNS /rdf)) (PRN (: :) (NP (NP (NN Description) (NN /ex)) (PRN (: :) (VP (VB prop) (CC and) (VBZ forms) (NP (CD 1))) (-RRB- -RRB-) (, ,) (NP (CD 2)) (-RRB- -RRB-))) (, ,) (NP (CD 3)) (-RRB- -RRB-))) (VP (VBP give) (NP (NP (DT the) (JJ same) (NNS triples)) (: :) (NP (NP (NNS _)) (: :) (NP (DT a) (NN http)) (: :) (NP (NNS //example.org/ns)))) (NP (# #) (VB prop))))))))))))))))
(S1 (NP (NP (NNP _)) (: :) (NP (NNP b)) (. .)))
(S1 (NP (NP (NNP _)) (: :) (NP (NP (NNP b) (NNS http)) (: :) (NP (JJ //www.w3.org/1999/02/22-rdf-syntax-ns) (ADJP (# #) (NN type)) (NNS http)) (: :) (NP (NNS //example.org/datatype1))) (. .)))
(S1 (S (VP (VBD Agreed)) (. .)))
(S1 (NP (NP (NP (PRP$ Your) (VBN proposed) (NN form)) (PP (IN for) (S (VP (VBG datatyping) (NP (NP (DT a) (JJ literal)) (, ,) (SBAR (WHNP (WDT which)) (S (PP (IN in) (NP (DT this) (NN case))) (VP (AUX has) (NP (NP (DT a) (JJ lexical) (NN form)) (PP (IN of) (NP (DT the) (JJ empty) (NN string) (FW ex) (PRN (: :) (S (VP (VB prop) (NP (NNP rdf)))) (: :)) (NN type=) (`` ``) (NNS http)))))))))))) (: :) (NP (JJ //example.org/datatype1) ('' '') (NN /ex)) (: :) (S (NP (VB prop)) (VP (MD should) (VP (VB give) (NP (DT a) (JJ single) (ADJP (JJ triple) (PP (IN with) (NP (NP (DT a) (JJ datatyped-literal) (NN value)) (: :) (NP (NP (NNS _)) (: :) (NP (DT a) (NN http))) (: :)))) (NNS //example.org/ns)) (NP (# #) (VB prop)))))))
(S1 (NP (NNP http) (: :) (NP (NNS //example.org/datatype1))))
(S1 (S ('' '') ('' '') (. .)))
(S1 (S (CC And) (NP (PRP it)) (VP (AUX is) (RB not) (ADJP (JJ possible)) (S (VP (TO to) (VP (VB determine) (SBAR (IN that) (S (NP (DT the) (JJ latter) (NN form)) (VP (AUX is) (VP (VBN wanted))))))))) (. .)))
(S1 (S (NP (PRP It)) (VP (AUX is) (ADJP (JJ ambiguous))) (. .)))
(S1 (S (NP (NNP rdf)) (: :) (NP (NP (NN type)) (PRN (-LRB- -LRB-) (NP (NN attribute) (CC or) (NN element)) (-RRB- -RRB-))) (ADVP (RB currently)) (VP (ADVP (RB always)) (VBZ generates) (NP (DT a) (NN property)) (, ,) (S (ADVP (RB now)) (NP (PRP it)) (VP (MD would) (VP (AUX be) (VP (VBN used) (PP (IN in) (NP (NP (DT an) (ADJP (RB entirely) (JJ different)) (NN way)) (SBAR (S (VP (TO to) (VP (VB set) (NP (`` ``) (NP (NNS properties)) ('' '') (PP (IN of) (NP (DT a) (JJ literal)))) (, ,) (PP (IN without) (S (ADVP (RB actually)) (VP (VBG generating) (NP (DT any) (NNS properties)))))))))))))))) (. .)))
(S1 (S (NP (DT This)) (VP (VP (AUX is) (ADJP (JJ inconsistent))) (CC and) (VP (MD will) (VP (AUX be) (ADJP (JJ confusing) (S (VP (TO to) (VP (VB explain)))))))) (. .)))
(S1 (S (ADVP (RB Ahh)) (, ,) (ADVP (RB now)) (NP (PRP I)) (VP (VBP see) (SBAR (WHADVP (WRB where)) (S (NP (PRP we)) (VP (AUX are) (VP (VBG missing) (NP (DT each) (JJ other))))))) (. .)))
(S1 (S (NP (PRP I)) (VP (AUX 'm) (RB not) (VP (VBG proposing) (NP (DT that)))) (. .)))
(S1 (S (NP (PRP I)) (VP (MD would) (VP (VB disallow) (NP (DT the) (JJ above)))) (. .)))
(S1 (S (NP (PRP I)) (ADVP (RB fully)) (VP (VBP agree) (SBAR (IN that) (S (S (VP (TO to) (VP (AUX do) (NP (DT the) (JJ above))))) (VP (MD would) (VP (AUX be) (ADJP (JJ confusing))))))) (. .)))
(S1 (S (NP (DT A) (JJ null) (NN string)) (VP (AUX is) (RB not) (NP (DT a) (JJ valid) (JJ lexical) (NN form))) (. .)))
(S1 (S (NP (PRP You)) (ADVP (RB cannot)) (VP (VB produce) (NP (DT a) (VBN typed) (JJ literal) (NN node)) (PP (IN without) (NP (DT some) (JJ non-null) (JJ lexical) (NN form)))) (. .)))
(S1 (S (NP (DT The) (NNP RDF/XML)) (VP (MD would) (ADVP (RB still)) (VP (VB produce) (NP (NP (NN _)) (: :) (NP (DT a) (NN http)) (: :) (NP (NP (NNS //example.org/ns)) (QP (# #) (VB prop))))))))
(S1 (NP (NP (NNP _)) (: :) (NP (NNP b)) (. .)))
(S1 (NP (NP (NNP _)) (: :) (NP (NP (NNP b) (NNS http)) (: :) (NP (JJ //www.w3.org/1999/02/22-rdf-syntax-ns) (ADJP (# #) (NN type)) (NNS http)) (: :) (NP (NNS //example.org/datatype1))) (. .)))
(S1 (SBAR (IN as) (S (NP (PRP it)) (VP (MD should))) (. .)))
(S1 (S (CC But) (, ,) (NP (DT the) (NNP RDF/XML)) (VP (MD would) (VP (VB produce) (NP (NP (NN _)) (: :) (NP (DT a) (NN http)) (: :) (NP (NP (NNS //example.org/ns)) (QP (# #) (VB prop))))))))
(S1 (NP (NNP http) (: :) (NP (NNS //example.org/datatype1))))
(S1 (INTJ (`` ``) (UH xyz) ('' '') (. .)))
(S1 (S (NP (PRP I)) (VP (VBP see) (NP (NP (DT the) (NN production)) (PP (IN of) (NP (NP (VBN typed) (NNS literals)) (PP (IN from) (NP (DT the) (JJ above))) (S (VP (TO to) (VP (AUX be) (NP (NP (DT a) (ADJP (CD two) (NN step)) (NN process) (PRN (: --) (ADVP (RB conceptually)) (-LRB- -LRB-) (SBAR (IN though) (S (NP (NP (DT the) (NN parser)) (PP (IN of) (NP (NN course)))) (VP (MD would) (ADVP (RB likely)) (VP (VB skip) (NP (DT the) (JJ first) (NN step)) (PP (IN in) (NP (NN practice))))))) (-RRB- -RRB-) (: :)) (NN Input)) (: :) (NP (NP (NN Step) (CD 1)) (, ,) (NP (NNP rdf))) (: :) (NP (NN type) (NN assertion)) (: :) (NP (NNP _)) (: :) (NP (DT a) (NN http)) (: :) (NP (NP (NNS //example.org/ns)) (QP (# #) (VB prop)))))))))))))
(S1 (NP (NP (NNP _)) (: :) (NP (NN b) (`` ``) (NNS xyz) ('' '')) (. .)))
(S1 (NP (NP (NNP _)) (: :) (NP (NP (NNP b) (`` ``) (JJ xyz) ('' '') (NNS http)) (: :) (NP (JJ //www.w3.org/1999/02/22-rdf-syntax-ns) (ADJP (# #) (NN type)) (NNS http)) (: :) (NP (NNS //example.org/datatype1))) (. .)))
(S1 (NP (NP (NN Step) (CD 2)) (, ,) (NP (VBN typed) (JJ literal) (NN node) (NN compression)) (: :) (NP (NN _)) (: :) (NP (DT a) (NN http)) (: :) (NP (NP (NNS //example.org/ns)) (QP (# #) (VB prop)))))
(S1 (NP (NNP http) (: :) (NP (NNS //example.org/datatype1))))
(S1 (INTJ (`` ``) (UH xyz) ('' '') (. .)))
(S1 (S (NP (DT This) (JJ second) (NN step)) (VP (AUX is) (VP (ADVP (RB only)) (VBN required) (SBAR (IN because) (S (NP (NNS literals)) (VP (MD can) (RB n't) (VP (AUX be) (NP (NNS subjects)))))))) (. .)))
(S1 (S (NP (NNP *) (NNP And)) (VP (VBZ *) (NP (NP (DT this) (JJ second) (NN step)) (SBAR (S (ADVP (RB only)) (VP (VBZ occurs) (ADVP (RB *)) (SBAR (IN if) (S (VP (VBG *) (CC and) (VBG *) (SBAR (RB only) (IN if) (S (NP (NNP *) (EX there)) (VP (AUX is) (NP (NP (DT a) (JJ literal)) (PRN (-LRB- -LRB-) (CONJP (RB not) (RB just)) (NP (DT a) (NN bnode)) (-RRB- -RRB-)))))))))))))) (. .)))
(S1 (NP (NP (NP (FW I.e.)) (, ,) (SBAR (S (NP (DT the) (JJ following) (NN case)) (VP (MD would) (VP (VB stop) (PP (IN after) (NP (DT the) (JJ first) (NN step)))))))) (: :) (NP (NN Input)) (: :) (NP (NP (NN Step) (CD 1)) (, ,) (NP (NNP rdf))) (: :) (NP (NN type) (NN assertion)) (: :) (NP (CD _)) (: :) (NP (DT a) (NN http)) (: :) (NP (NP (NNS //example.org/ns)) (QP (# #) (VB prop)))))
(S1 (NP (NP (NNP _)) (: :) (NP (NNP b)) (. .)))
(S1 (NP (NP (NNP _)) (: :) (NP (NP (NNP b) (NNS http)) (: :) (NP (JJ //www.w3.org/1999/02/22-rdf-syntax-ns) (ADJP (# #) (NN type)) (NNS http)) (: :) (NP (NNS //example.org/datatype1))) (. .)))
(S1 (S (NP (CD One) (NN cannot)) (VP (VB create) (NP (DT a) (VBN typed) (JJ literal) (NN node)) (PP (IN from) (NP (DT the) (JJ above))) (SBAR (IN because) (S (NP (EX there)) (VP (AUX is) (ADJP (RB no) (JJ literal)))))) (. .)))
(S1 (S (CC But) (PRN (, ,) (CC and) (S (NP (DT this)) (VP (AUX is) (NP (DT the) (JJ essential) (NN point)))) (, ,)) (SBAR (IN whether) (S (NP (EX there)) (VP (AUX is) (NP (DT the) (VBN typed) (JJ literal) (NN node) (NN compression)))) (CC or) (RB not)) (, ,) (NP (NP (DT the) (NNS semantics)) (PP (IN of) (NP (PDT both) (NP (DT the) (NNP RDF/XML)) (CC and) (NP (DT the) (NN graph) (NNS representations))))) (VP (AUX are) (VP (VBG *) (NP (JJ identical) (NNS *)) (PP (IN in) (NP (NP (DT all)) (PP (IN of) (NP (NP (DT the) (JJ above) (NNS uses)) (PP (IN of) (NP (NNP rdf))))))) (: :) (NP (NN type)))) (. .)))
(S1 (SQ (AUX Does) (NP (DT the) (JJ above) (NN clarification)) (VP (VB help) (PP (IN in) (NP (DT any) (NN way)))) (. ?)))
(S1 (S (ADVP (RB No)) (, ,) (S (NP (DT that)) (VP (AUX 's) (RB not) (ADJP (RB particularly) (JJ useful)))) (, ,) (CC but) (S (NP (DT that)) (VP (AUX 's) (RB not) (ADJP (RB really) (JJ wrong)))) (. .)))
(S1 (S (NP (PRP I)) (VP (AUX do) (RB n't) (VP (VB see) (NP (NP (DT a) (NN reason)) (SBAR (S (VP (TO to) (VP (VB restrict) (NP (NN lexical) (NNS forms)) (PP (TO to) (NP (JJ non-empty) (NNS strings)))))))))) (. .)))
(S1 (S (ADVP (RB Well)) (, ,) (NP (PRP we)) (VP (MD should) (ADVP (RB then)) (VP (VB provide) (PP (IN for) (NP (DT the) (JJ null) (NN URIref))))) (. .)))
(S1 (S (S (NP (DT A) (NN name)) (VP (AUX is) (SBAR (S (NP (DT a) (NN name)) (VP (AUX is) (NP (DT a) (NN name))))))) (, ,) (CC and) (S (NP (DT a) (JJ null) (NN string)) (VP (AUX is) (RB not) (NP (DT a) (NN name)))) (. .)))
(S1 (S (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (DT that)) (VP (AUX 's) (ADJP (RB pretty) (JJ intuitive)))))) (. .)))
(S1 (S (S (NP (PRP They)) (VP (AUX 're) (ADVP (RB just)) (VP (VBG saying) (SBAR (IN that) (S (NP (DT the) (NN value)) (VP (AUX is) (`` ``) (NP (NP (NN something)) ('' '') (PP (IN of) (NP (DT the) (VBN specified) (NN type)))))))))) (, ,) (CC and) (SBARQ (WHADVP (WRB how) (RB else)) (SQ (MD would) (NP (PRP we)) (VP (VB capture) (NP (DT that)) (PP (IN than) (PP (IN by) (NP (NP (DT a) (NN bnode)) (PP (IN of) (NP (DT the) (VBN specified) (NN type)))))))) (. ?))))
(S1 (S (SBAR (IN If) (S (, ,) (ADVP (RB however)) (, ,) (NP (PRP they)) (ADVP (RB also)) (VP (VB specify) (NP (DT a) (JJ lexical) (NN form)) (ADVP (RB then))))) (NP (PRP we)) (VP (AUX are) (ADJP (JJ able) (S (VP (TO to) (VP (VB say) (SBAR (WHNP (WP what)) (S (NP (DT the) (NN value)) (VP (AUX is) (ADVP (RBR more) (RB accurately)) (PP (IN in) (NP (NP (DT the) (NN form)) (PP (IN of) (NP (DT a) (VBN typed) (JJ literal) (NN node))))))))))))) (. .)))
(S1 (S (ADVP (RB So)) (NP (PRP I)) (VP (AUX do) (RB n't) (VP (VB see) (SBAR (IN that) (S (NP (DT the) (JJ above) (NN result)) (VP (AUX is) (RB not) (SBAR (WHNP (WP what)) (S (VP (AUX is) (VP (VBN wanted)))))))))) (. .)))
(S1 (S (ADVP (RB I.e)) (, ,) (NP (PRP it)) (VP (AUX does) (RB n't) (VP (VB seem) (PP (TO to) (NP (PRP me))) (S (VP (TO to) (VP (AUX be) (UCP (NP (DT a) (JJ fatal) (NN case)) (, ,) (CC but) (PP (IN in) (NP (NN fact))) (NP (DT the) (JJ correct) (NN result)))))))) (. .)))
(S1 (S (S (SBAR (IN If) (S (NP (DT the) (JJ lexical) (NN form)) (VP (AUX is) (RB not) (NP (DT the) (JJ null) (NN string))))) (, ,) (VP (VB say) (NP (FW ex)))) (: :) (S (VP (VB prop) (NP (NNP rdf)))) (: :) (S (NP (JJ type=) (`` ``) (NNS http)) (: :) (S (VP (VBG //example.org/datatype1) ('' '') (NP (DT a) (NN /ex)))) (: :) (VP (VB prop) (ADVP (RB then)) (SBAR (IN that) (S (VP (VP (AUX is) (NP (JJ bad) (NN syntax))) (CC and) (VP (MD will) (ADVP (RB very) (RB likely)) (VP (VB break) (NP (DT all) (VBG existing) (NNS parsers))))))))) (. .)))
(S1 (NP (NP (NP (NNS i.e)) (SBAR (S (NP (PRP you)) (VP (VBD wanted) (NP (NNS _)))))) (: :) (NP (DT a) (NN http)) (: :) (NP (NP (NNS //example.org/ns)) (QP (# #) (VB prop)))))
(S1 (NP (NNP http) (: :) (NP (NNS //example.org/datatype1))))
(S1 (FRAG (NP (`` ``) (NN a) ('' '')) (. .)))
(S1 (S (CC but) (NP (VBG existing) (NNS parsers)) (VP (MD will) (ADVP (RB likely)) (VP (VB break) (, ,) (NP (JJ emit) (NN nothing)))) (. .)))
(S1 (S (NP (VBG Existing) (NNS parsers)) (VP (MD will) (VP (VB break) (NP (NN period)) (, ,) (SBAR (IN as) (S (NP (DT the) (MD will)) (VP (VBP fail) (S (VP (TO to) (VP (VB produce) (NP (DT a) (VBN typed) (JJ literal) (NN node)))))))))) (. .)))
(S1 (S (CC And) (PP (ADVP (IN at) (JJS least)) (IN with) (NP (JJ present) (NNS parsers))) (, ,) (NP (PRP we)) (VP (MD 'd) (ADVP (IN at) (JJS least)) (VP (VP (VB get) (NP (DT a) (NN warning)) (ADVP (RB *))) (CC and) (VP (VB *) (NP (NP (DT a) (NN bnode)) (SBAR (WHNP (WDT that)) (S (VP (VBZ denotes) (NP (NP (DT some) (NN member)) (PP (IN of) (NP (NP (DT the) (NN datatype) (POS 's)) (NN value) (NN space)))) (, ,) (SBAR (RB even) (IN though) (S (NP (DT the) (JJ lexical) (NN form)) (VP (MD would) (VP (AUX be) (VP (VBN discarded))))))))))))) (. .)))
(S1 (S (ADVP (DT No) (NN matter) (SBAR (WHNP (WP what)) (S (NP (PRP we)) (VP (VBP decide) (S (VP (TO to) (VP (AUX do)))))))) (, ,) (NP (NNS parsers)) (VP (MD will) (ADVP (RB *)) (VP (AUX have) (VP (VBN *) (S (VP (TO to) (VP (VB change) (S (VP (TO to) (VP (VB support) (NP (PRP it))))))))))) (. .)))
(S1 (S (S (NP (PRP I)) (VP (VP (VBD knew) (NP (DT this))) (, ,) (CC but) (VP (AUX was) (VP (VBG thinking) (SBAR (S (NP (PRP it)) (VP (MD would) (VP (AUX be) (NP (NP (DT an) (JJ easy) (NN thing)) (SBAR (S (VP (TO to) (VP (VB support)))))))))))))) (: --) (CC and) (S (PP (IN of) (NP (NN course))) (, ,) (ADVP (DT no) (NN matter) (SBAR (WHNP (WP what)) (S (NP (PRP we)) (VP (VBP call) (NP (DT the) (NN attribute)))))) (, ,) (NP (PRP we)) (VP (MD 'd) (VP (AUX have) (S (VP (TO to) (VP (VB expand) (NP (DT the) (NN grammer)) (S (VP (TO to) (VP (VB allow) (NP (NP (DT both) (NN attribute) (CC and) (NN data) (NN content)) (PP (IN for) (NP (DT the) (NN property) (NN element))))))))))))) (. .)))
(S1 (S (NP (PRP It)) (VP (AUX is) (RB not) (ADJP (JJ easy) (SBAR (S (VP (TO to) (VP (VB support))))))) (. .)))
(S1 (S (NP (DT The) (NN grammar)) (VP (MD would) (VP (AUX have) (S (VP (TO to) (VP (AUX be) (VP (VP (VBN expanded)) (CC and) (VP (ADVP (RB here) (NP (DT some) (ADJP (RBR more) (JJ good)) (NNS reasons))) (VBN related) (PP (TO to) (NP (DT the) (NN grammar) (S (S (RB not) (VP (TO to) (VP (AUX do) (NP (DT this))))) (: :) (S (ADVP (RB *)) (NP (PRP It)) (VP (VBZ makes) (NP (NP (DT the) (ADJP (RBS most) (JJ complex)) (NNS parts)) (PP (IN of) (NP (DT the) (NN grammar))) (, ,) (ADJP (RBR more) (JJ complex))) (ADVP (RB again)))) (: :) (S (ADVP (RB *)) (NP (PRP It)) (VP (VBZ makes) (S (NP (DT the) (NN grammar)) (VP (VB continue) (S (VP (TO to) (VP (AUX be) (ADJP (RBR less) (JJ context-free))))))))) (, ,) (S (NP (PRP you)) (VP (AUX need) (S (VP (TO to) (VP (AUX do) (NP (ADJP (RB even) (JJR more)) (NNS calculations))))))) (CC and) (S (NP (NN token-lookahead)) (VP (TO to) (VP (VB determine) (SBAR (WHNP (WP what)) (S (VP (AUX is) (NP (NP (DT the) (JJ correct) (NN grammar) (NN term)) (SBAR (S (VP (TO to) (VP (VB match) (-LRB- -LRB-) (PP (IN in) (NP (NN propertyElt))) (-RRB- -RRB-))))))))))))))))))))))))
(S1 (S (NP (PRP I)) (ADVP (RB still)) (VP (AUX do) (RB n't) (VP (VB see) (SBAR (WHADVP (WRB how)) (S (NP (DT this)) (VP (MD would) (RB not) (ADVP (RB also)) (VP (AUX have) (S (VP (TO to) (VP (AUX be) (VP (AUX done) (PP (IN for) (NP (NP (DT any) (NN attribute) (RB whatsoever)) (, ,) (SBAR (WHNP (WDT whatever)) (S (NP (PRP it)) (VP (AUX is) (VP (VBN called))))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (MD must) (VP (VB trigger) (NP (DT a) (VBN typed) (JJ literal) (NN node) (NN production)))))))))))))))))) (. .)))
(S1 (S (NP (FW I.e.)) (SBAR (RB even) (IN if) (S (NP (PRP we)) (VP (VBP use) (NP (NNP rdf))))) (: :) (S (INTJ (UH ltype)) (, ,) (NP (NNS parsers)) (VP (MD will) (ADVP (RB still)) (VP (VB break)))) (. .)))
(S1 (FRAG (ADVP (RB Not) (RB necessarily)) (. .)))
(S1 (S (NP (PRP I)) (ADVP (RB already)) (VP (VBD said) (SBAR (IN that) (S (NP (ADJP (RBS most) (JJ unknown)) (NNP rdf)) (: :) (NP (NNS things)) (VP (AUX are) (VP (VBN ignored)))))) (. .)))
(S1 (S (S (PP (IN In) (NP (NN fact))) (NP (PRP we)) (ADVP (RB already)) (VP (VBD made) (NP (DT that) (NN decision)))) (: :) (S (NP (NN -LSB--LSB-The) (NNS WG)) (VP (VBD decided) (SBAR (IN that) (S (NP (DT an) (NNP RDF) (NN processor)) (VP (MD SHOULD) (VP (VB emit) (NP (DT a) (NN warning)) (SBAR (WHADVP (WRB when)) (S (VP (VBG encountering) (NP (NNS names)) (PP (IN in) (NP (NP (DT the) (NNP RDF) (NN namespace)) (SBAR (WHNP (WDT which)) (S (VP (VP (AUX are) (RB not) (VP (VBN defined))) (, ,) (CC but) (VP (MD should) (ADVP (RB otherwise)) (VP (VB behave) (NP (NP (CD normally.) (JJ -RSB-) (NNS -RSB-)) (: --) (NP (NP (NNS http)) (: :) (NP (JJ //www.w3.org/2000/03/rdf-tracking/) (# #) (CD rdfms-rdf-names-use))))))))))))))))))))))
(S1 (S (ADVP (RB Well)) (, ,) (ADVP (RB ahem)) (, ,) (S (NP (DT the) (NN name) (NN *)) (VP (MD would) (ADVP (RB *)) (VP (AUX be) (VP (VBN defined))))) (, ,) (CC and) (S (NP (EX there)) (VP (MD would) (VP (AUX be) (NP (NP (JJ specific) (NN behavior)) (VP (VBN required) (PP (IN of) (NP (NP (NNS parsers)) (VP (VBG relating) (PP (TO to) (NP (DT that) (NN term))))))))))) (. .)))
(S1 (INTJ (JJ Right) (. ?)))
(S1 (S (NP (NP (DT The) (JJ only) (NN change)) (PP (TO to) (NP (DT the) (NN parsing)))) (VP (AUX is) (ADVP (RB simply)) (VP (VBG licensing) (NP (NP (NP (DT the) (NN occurrence)) (PP (IN of) (NP (DT the) (NNP rdf)))) (: :) (NP (NN type) (NN attribute))) (SBAR (WHADVP (WRB when)) (S (NP (EX there)) (VP (AUX is) (ADVP (RB also)) (NP (NN data) (NN content)) (, ,) (CC and) (PP (IN in) (NP (DT that) (JJ special) (NN case))) (, ,) (S (VP (VBG producing) (NP (DT a) (VBN typed) (JJ literal) (NN node))))))))) (. .)))
(S1 (SQ (AUX Is) (NP (DT that)) (ADVP (RB really)) (ADJP (RB all) (RB that) (JJ ambiguous) (CC or) (JJ difficult)) (. ?)))
(S1 (INTJ (UH Oh) (UH yes) (. .)))
(S1 (S (NP (DT This)) (VP (AUX is) (ADVP (RBR better) (RB done)) (VP (VBG using) (NP (DT any) (JJ new) (NNP rdf) (PRN (: :) (NP (NP (NN term)) (PP (JJ such) (IN as) (NP (NNP rdf)))) (: :)) (NN ltype)))) (. .)))
(S1 (NP (NP (FW ex)) (: :) (S (S (VP (VB prop) (NP (NNP rdf)))) (: :) (S (NP (NNS ltype=)) (`` ``) (VP (VB http))) (: :) (S (VP (VB //example.org/datatype1) ('' '') (NP (DT a) (NN /ex)))) (: :) (S (VP (VB prop) (SBAR (WHNP (WDT which)) (S (VP (MD may) (ADVP (RB either)) (VP (VB give) (NP (DT a) (NN warning) (CC or) (NN error)) (PP (IN with) (NP (DT a) (JJ current))))))))))))
(S1 (NP (QP (JJR parser) (IN as) (DT an))))
(S1 (NP (NP (JJ unknown) (NNP rdf)) (: :) (S (VP (VP (VB term)) (, ,) (CC but) (VP (MD should) (RB not) (VP (AUX be) (VP (VBN interpreted) (PP (IN as) (NP (DT a) (NN property)))))))) (. .)))
(S1 (S (ADVP (RB Well)) (, ,) (S (NP (DT the) (JJ same) (NN warning) (CC or) (NN error)) (VP (MD will) (VP (VB occur) (PP (IN with) (NP (NP (NNP rdf)) (: :) (NP (NP (NN type)) (ADVP (RB as) (RB well))) (, ,) (CC and) (NP (NNP rdf))))))) (: :) (S (NP (NN type)) (VP (AUX does) (RB precisely) (VP (VB reflect) (NP (DT the) (NNS semantics)) (, ,) (SBAR (RB so) (IN if) (S (NP (NP (DT the) (JJ above) (NN case)) (PP (IN of) (NP (NP (NP (DT an) (JJ empty) (NN property) (NN element)) (PP (IN with) (NP (NNP rdf)))) (: :) (NP (NP (NN type)) (VP (VBN defined)))))) (VP (AUX is) (ADVP (RB no) (RB longer)) (NP (DT a) (NN problem)))))))) (-LRB- -LRB-) (CC and) (S (NP (PRP I)) (VP (AUX do) (RB n't) (VP (VB think) (SBAR (S (NP (PRP it)) (VP (AUX is) (-RRB- -RRB-) (PP (IN than) (ADVP (RB better))) (S (VP (TO to) (VP (VB use) (NP (DT the) (ADJP (RBS most) (JJ precise)) (NN attribute)) (PP (RB rather) (IN than) (VP (VB create) (NP (DT a) (JJ new) (CD one)) (, ,) (ADVP (RB right))))))))))))) (. ?)))
(S1 (S (NP (DT No) (NP (DT the) (JJ same) (NN warning) (CC or) (NN error))) (VP (MD will) (RB not) (VP (AUX be) (VP (VBN given)))) (. .)))
(S1 (S (NP (NNP rdf)) (: :) (NP (NP (NN type)) (PRN (-LRB- -LRB-) (NN attribute) (-RRB- -RRB-))) (ADVP (RB already)) (VP (AUX has) (VP (VBN defined) (NP (NP (NNS semantics)) (SBAR (WHNP (WDT that)) (S (VP (AUX are) (ADJP (JJ different)))))))) (. .)))
(S1 (S (S (VP (VBG Using) (NP (PRP it)) (PP (IN in) (NP (DT this) (NN case))))) (VP (MD will) (VP (VP (VB break) (NP (JJ existing) (NNS parsers))) (CC or) (VP (VB cause) (S (NP (PRP them)) (VP (TO to) (VP (VB emit) (NP (NN nothing)))))))) (. .)))
(S1 (S (CC But) (NP (PRP I)) (VP (AUX 'm) (VP (VBG repeating) (NP (PRP myself)))) (. .)))
(S1 (S (S (NP (PRP It)) (VP (MD can) (VP (AUX be) (VP (VBN defined) (S (VP (TO to) (VP (VB work) (NP (NP (NN something)) (PP (IN like) (NP (NNS xml))))))))))) (: :) (S (NP (NP (NNP lang)) (, ,) (FW i.e.)) (VP (VBZ sets) (NP (NP (DT a) (NN property)) (PRN (-LRB- -LRB-) (JJ sic) (-RRB- -RRB-)) (PP (IN of) (NP (DT the) (VBN contained) (JJ literal)))))) (. .)))
(S1 (S (S (NP (PRP I)) (VP (VBP see) (S (VP (VBG datatyping) (NP (DT a) (JJ literal) (NNP RDF/XML) (NN analagous)) (PP (TO to) (S (VP (VBG adding) (NP (DT a) (NN language)) (PP (TO to) (NP (DT a) (JJ literal)))))))))) (: -) (S (NP (PRP it)) (VP (VBZ sets) (NP (NP (NN part)) (PP (IN of) (NP (DT the) (JJ literal) (NN structure)))))) (. .)))
(S1 (FRAG (ADVP (RB So) (PP (IN in) (NP (DT the) (JJ same) (NN way)))) (SBAR (IN that) (S (SBAR (IN if) (S (NP (PRP you)) (VP (AUX have) (ADJP (FW ex))))) (: :) (S (VP (VB prop) (NP (DT a) (NN /ex)))) (: :) (S (VP (VB prop) (S (VP (VBG giving) (NP (NP (NN _)) (: :) (NP (DT a) (NN http)) (: :) (NP (NP (NNS //example.org/ns)) (QP (# #) (VB prop))))))))))))
(S1 (FRAG (NP (`` ``) (NN a) ('' '')) (. .)))
(S1 (X (S (VP (VBG adding) (NP (DT an) (NN xml)))) (: :) (NP (NNP lang) (NN attribute)) (: :) (FW ex) (: :) (S (VP (VB prop) (NP (NNS xml)))) (: :) (NP (NP (NN lang=) (`` ``) (FW en) ('' '')) (NP (DT a) (NN /ex))) (: :) (S (NP (VB prop)) (VP (VBZ gives) (NP (NP (DT a) (JJ Lang-string) (JJ literal) (NN value) (NN _)) (: :) (NP (DT a) (NN http)) (: :) (NP (NNS //example.org/ns) (QP (# #) (VB prop))))))))
(S1 (FRAG (`` ``) (NP (DT a) (`` ``) (NN -en)) (. .)))
(S1 (FRAG (ADVP (RB then)) (SBAR (IN if) (S (NP (PRP you)) (VP (AUX have) (ADJP (FW ex))))) (: :) (VP (VB prop) (NP (CD 10) (NN /ex))) (: :) (VP (VB prop) (S (VP (VBG giving) (NP (NNS _))))) (: :) (NP (DT a) (NN http)) (: :) (S (VP (VBZ //example.org/ns) (NP (# #) (VB prop))))))
(S1 (NP (`` ``) (CD 10) ('' '') (. .)))
(S1 (X (S (VP (VBG adding) (NP (DT an) (NNP rdf)))) (: :) (NP (JJ ltype) (NN attribute)) (: :) (FW ex) (: :) (FRAG (VP (VP (VB prop) (NP (NNP rdf))) (: :) (VP (VBG ltype=) (`` ``) (NP (NN http))) (: :) (VP (VBG //example.org/datatype1) ('' '') (NP (DT a) (NN /ex))) (: :) (VP (VB prop) (SBAR (S (VP (MD will) (VP (VB give) (NP (PRP you)) (NP (NP (DT a) (JJ datayped) (JJ literal) (NN value)) (: :) (NP (NNP _))))))))) (: :) (NP (DT a) (NN http)) (: :) (S (VP (VBZ //example.org/ns) (NP (# #) (VB prop)))))))
(S1 (NP (NNP http) (: :) (NP (NNS //example.org/datatype1))))
(S1 (NP (`` ``) (CD 10) ('' '') (. .)))
(S1 (S (S (UCP (ADJP (JJ Fair) (JJ enough)) (, ,) (CC but) (PP (IN in) (NP (DT the) (JJ latter) (NN case))))) (, ,) (NP (NP (DT the) (NN part)) (PP (IN of) (NP (NP (DT the) (JJ literal) (NN structure)) (SBAR (WHNP (WDT that)) (S (VP (AUX is) (VP (AUXG being) (VP (VBN added))))))))) (VP (AUX is) (NP (NP (NP (PRP$ its) (NN *)) (NP (NNP rdf))) (: :) (NP (NN type) (CD *)))) (. .)))
(S1 (S (ADVP (RB Just)) (PP (IN as) (PP (IN in) (NP (DT the) (JJ first) (NN case)))) (, ,) (NP (NP (DT the) (NN part)) (VP (AUXG being) (VP (VBN added)))) (VP (AUX is) (NP (NP (PRP$ its) (NN xml)) (: :) (NP (NNP lang)))) (. .)))
(S1 (SBARQ (WHADVP (WRB Why)) (SQ (VP (VB call) (S (NP (DT that) (NN part)) (VP (AUXG being) (VP (VBN added) (PP (IN by) (NP (NP (DT a) (NN name)) (ADJP (JJ other) (PP (IN than) (SBAR (WHNP (WP what)) (S (NP (PRP it)) (VP (AUX is)))))))))))) (. ?)) (. !)))
(S1 (S (ADVP (RB Well)) (, ,) (NP (DT that)) (VP (MD would) (ADVP (RB only)) (VP (AUX be) (ADJP (JJ true)) (SBAR (IN if) (S (S (NP (NNS folks)) (VP (VBP agree) (SBAR (IN that) (S (NP (NNS literals)) (VP (AUX are) (ADVP (RB now)) (ADJP (JJ 4-tuples))))))) (, ,) (CC but) (S (NP (DT that)) (VP (AUX does) (RB n't) (VP (VB seem) (S (VP (TO to) (VP (AUX be) (NP (DT a) (ADJP (RB very) (JJ popular)) (NN idea)))))))))))) (. .)))
(S1 (S (ADVP (RB Also)) (, ,) (SBAR (IN if) (S (NP (PRP we)) (VP (VBP end) (PRT (RP up)) (S (VP (RB not) (VBG saying) (NP (NP (NN anything)) (PP (IN about) (NP (NP (DT the) (NNS semantics)) (PP (IN of) (NP (JJ untyped) (JJ inline) (NNS idioms))))))))))) (, ,) (NP (PRP it)) (VP (AUX 's) (ADVP (RB probably)) (ADJP (JJ good)) (S (VP (TO to) (VP (VP (VB keep) (NP (NP (JJ untyped) (NNS literals)) (PP (IN as) (NP (NNS 3-tuples))))) (CC and) (VP (VB define) (NP (NP (DT the) (VBN typed)) (PP (JJ literal) (IN as) (NP (NP (NN something)) (ADJP (RB else)))))))))) (. .)))
(S1 (S (NP (DT That)) (VP (VP (AUX 's) (NP (DT a) (JJ disjoint) (NN issue))) (CC and) (RB not) (ADJP (JJ important) (PP (IN for) (NP (DT the) (JJ rdf/xml) (NN representation))))) (. .)))
(S1 (S (S (NP (DT The) (NN structure)) (VP (MD can) (VP (AUX be) (VP (VBG 3/4) (NP (NNS parts)))))) (CC or) (S (NP (PRP we)) (VP (MD can) (VP (AUX have) (NP (NP (QP (JJR more) (IN than) (CD one)) (NN type)) (PP (IN of) (NP (NN structure))))))) (. .)))
(S1 (S (NP (NP (DT Any) (NN change)) (PP (TO to) (NP (DT the) (NN structure)))) (VP (MD will) (VP (AUX be) (VP (VBN reflected) (PP (IN into) (NP (NP (DT the) (NN definition)) (PP (IN of) (SBAR (WHADVP (WRB how)) (S (NP (NNS literals)) (VP (AUX are) (VP (VBN written) (PP (IN in) (NP (NNP N-Triples))))))))))))) (. .)))
(S1 (FRAG (ADVP (RB Perhaps)) (. .)))
(S1 (S (S (NP (PRP I)) (VP (AUX did) (RB n't) (VP (VB consider) (S (NP (PRP it)) (NP (DT a) (JJ big) (NN issue)))))) (, ,) (CC but) (S (NP (DT some)) (VP (VBP seem) (S (VP (TO to) (VP (AUX have) (VP (VBD thought) (SBAR (S (NP (PRP it)) (VP (AUX was)))))))))) (. .)))
(S1 (S (NP (PRP I)) (VP (AUX 've) (VP (VP (VBN explained) (NP (NP (DT this) (JJ syntax) (NN support)) (PP (IN for) (NP (JJ datatyped) (NNS literals)))) (PP (IN in) (NP (NN detail)))) (, ,) (VP (VBN given) (NP (NP (NN plenty)) (PP (IN of) (NP (NNS examples))))) (, ,) (NP (NP (VBN proposed) (NN something)) (SBAR (WHNP (WDT that)) (S (VP (MD will) (VP (AUX do) (NP (NP (DT the) (NN job)) (PP (IN with) (NP (DT the) (JJ minimal) (NN change))) (, ,) (VP (AUX be) (ADJP (JJ easy) (S (VP (TO to) (VP (VB change) (PP (IN in) (NP (DT the) (NN grammar)))))))) (, ,)) (ADVP (RB easy)) (S (VP (TO to) (VP (VP (VB implement) (PRN (-LRB- -LRB-) (S (NP (PRP I)) (VP (VBD checked))) (-RRB- -RRB-))) (CC and) (RB not) (VP (AUX be) (ADJP (JJ ambiguous) (CC or) (JJ inconsistent))))))))))))) (. .)))
(S1 (S (NP (PRP I)) (VP (VBP hope) (SBAR (S (NP (DT this)) (VP (VBZ meets) (PP (IN with) (NP (DT the) (NNS groups) (NN support))))))) (. .)))
(S1 (NP (NNP Dave)))
(S1 (S (ADVP (RB So)) (, ,) (NP (PRP you)) (VP (AUX are) (VP (VBG proposing) (NP (NP (NP (DT a) (JJ new) (NN term)) (NP (NNP rdf))) (: :) (NP (NN ltype))))) (. ?)))
(S1 (S (NP (PRP I)) (ADVP (RB still)) (ADVP (RB strongly)) (VP (VBP feel) (SBAR (SBAR (IN that) (S (NP (NP (DT the) (NN introduction)) (PP (IN of) (NP (DT a) (JJ new) (NN term)))) (VP (AUX is) (ADJP (JJ avoidable))))) (CC and) (SBAR (IN that) (S (NP (NP (NP (DT the) (NNS concerns)) (PP (IN about) (S (VP (VBG using) (NP (NNP rdf)))))) (: :) (NP (NP (NN type)) (VP (ADVP (RB previously)) (VBN voiced)))) (VP (AUX were) (VP (VBN based) (PP (IN on) (NP (NP (DT a) (VBG misunderstanding)) (PP (IN about) (NP (NP (DT the) (NN treatment)) (PP (IN of) (NP (NP (JJ empty) (NN data) (NN content)) (VP (VBN taken) (PP (IN as) (NP (DT a) (JJ null) (JJ lexical) (NN form)))))))))))))))) (. .)))
(S1 (S (NP (EX There)) (VP (AUX is) (NP (NP (DT the) (NN question)) (PP (IN of) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (NN balance)) (VP (VBZ lies) (PP (IN between) (S (VP (VBG making) (NP (NNS things)) (PP (ADVP (JJS easiest)) (IN for) (NP (NP (NNS implementors)) (PP (IN versus) (NP (NP (JJS easiest)) (PP (IN for) (NP (NNS users))))))))))))))) (: --) (SBAR (ADVP (RB particularly)) (WHADVP (WRB when)) (S (NP (PRP we)) (VP (VBP consider) (SBAR (IN that) (S (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NP (NNS parsers)) (VP (AUXG being) (VP (VBN written)))))) (VP (AUX are) (ADJP (ADJP (NP (NP (JJ many) (NNS orders)) (PP (IN of) (NP (NN magnitude)))) (JJR less) (PP (IN than) (NP (JJ other) (NNS applications)))) (CC and) (ADJP (ADJP (RB still) (RB even) (JJR less)) (PP (IN than) (NP (NP (NNS schemas)) (CC and) (NP (NNP RDF) (NNS instances))))))))))))) (. .)))
(S1 (S (SBAR (SBAR (RB Even) (IN if) (S (NP (PRP it)) (VP (VBZ means) (NP (DT a) (NN bit)) (NP (JJR more) (NN work) (S (VP (TO to) (VP (VB use) (NP (NNP rdf)) (: :) (NP (NP (NP (NN type)) (PP (RB rather) (IN than) (NP (NP (DT some) (JJ other) (NN term)) (PP (JJ such) (IN as) (NP (NNP rdf)))))) (: :) (NP (NP (NN ltype)) (SBAR (WHADVP (WRB when)) (S (VP (VBG updating) (NP (NP (DT the) (NNS parsers)) (, ,) (SBAR (WHNP (WDT that)) (S (VP (AUX 's) (VP (VB work) (S (VP (AUX done) (ADVP (RB once))))))))))))))))))))) (: --) (CC and) (SBAR (IN if) (S (NP (PRP it)) (VP (VBZ results) (PP (IN in) (NP (NP (JJR greater) (NN clarity) (CC and) (NN usabilty)) (PP (TO to) (NP (NNS users))) (PP (IN in) (ADJP (JJ general))))))))) (, ,) (ADVP (RB then)) (NP (PRP I)) (VP (MD would) (VP (VB think) (NP (PRP it)) (PP (IN worth) (NP (NP (DT that) (JJ little) (NN bit)) (PP (IN of) (NP (JJ extra) (NN effort))))))) (. .)))
(S1 (SQ (NNP Dave) (PRN (, ,) (S (VP (VBN given) (NP (NP (DT the) (NNS clarifications)) (PP (IN above) (NP (RB about) (JJ null) (NNS literals)))))) (, ,)) (MD would) (NP (PRP you)) (ADVP (RB actually)) (VP (VB find) (S (NP (PRP it)) (ADJP (RB overly) (JJ burdensome)) (S (VP (TO to) (VP (VB support) (NP (NP (NP (DT the) (NN use)) (PP (IN of) (NP (NNP rdf)))) (: :) (NP (NP (NN type)) (PP (RB rather) (IN than) (NP (DT some) (JJ other) (NN term)))))))))) (. ?)))
(S1 (NP (NNP Patrick)))
(S1 (S (PP (VBN Given) (NP (DT that) (NN position))) (, ,) (NP (PRP I)) (VP (MD can) (RB n't) (VP (VB support) (NP (DT the) (NNP Dting) (NN proposal)))) (. .)))
(S1 (S (NP (PRP It)) (VP (VBZ seems) (ADJP (JJ bizarre)) (S (VP (TO to) (VP (JJ single) (PRT (RP out)) (NP (NP (JJ zero-length) (NNS strings)) (PP (IN for) (NP (JJ special) (NN treatment)))))))) (. .)))
(S1 (S (NP (PRP I)) (VP (VBP _am_) (ADJP (JJ aware) (SBAR (IN that) (S (S (NP (EX there)) (VP (AUX 's) (NP (NP (NP (DT a) (NN cost)) (VP (VBN involved) (PP (IN with) (S (VP (VBG introducing) (NP (NNP rdf))))))) (: :) (NP (NP (NN lexicalType)) (PRN (-LRB- -LRB-) (CC or) (, ,) (ADVP (RB urg)) (, ,) (NP (NP (NP (DT an) (JJ abbreviated) (NN form)) (PP (IN like) (NP (NNP rdf)))) (: :) (NP (NN ltype))) (-RRB- -RRB-)))))) (CC but) (S (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (PRP it)) (VP (AUX 's) (NP (NP (NP (DT a) (JJR better) (NN approach)) (PP (IN than) (S (VP (VBG using) (NP (NNP rdf)))))) (: :) (NP (NP (NN type)) (SBAR (S (VP (TO to) (VP (AUX do) (NP (DT this))))))))))))))))) (. .)))
(S1 (NP (NP (NNP jan) (NNP grant)) (, ,) (NP (NNP ILRT)) (, ,) (NP (NP (NNP University)) (PP (IN of) (NP (NNP Bristol)))) (. .)))
(S1 (S (NP (NP (NP (NNS http)) (: :) (NP (CD //www.ilrt.bris.ac.uk/) (NN Work) (# #) (CD 90)) (: :) (NP (ADJP (RB As) (JJ many)) (JJ pseudo-intellectual) (NNS sycophants))) (PP (IN as) (ADJP (JJ necessary))) (S (VP (TO to) (VP (VB make) (S (NP (CD one) (NN inarticulate)) (ADJP (JJ scotsman))))))) (VP (VBP think) (SBAR (S (NP (PRP he)) (VP (AUX 's) (NP (NP (DT a) (NN genius)) (PP (IN in) (NP (NP (NN command)) (PP (IN of) (NP (DT The) (JJ Profound)))))))))) (. .)))
(S1 (NP (NNP Jan) (: :)))
(S1 (S (NP (PRP I)) (VP (VBP agree)) (. .)))
(S1 (S (IN While) (NP (NNP Patrick)) (VP (AUX has) (ADVP (RB just) (RB about)) (VP (VBN shown) (SBAR (IN that) (S (NP (PRP$ his) (NN solution)) (VP (AUX is) (ADJP (JJ implementable) (SBAR (S (NP (PRP I)) (VP (AUX am) (ADJP (JJ aware) (SBAR (IN that) (S (NP (PRP$ my) (NN code)) (VP (MD would) (VP (AUX have) (S (VP (TO to) (VP (VB jump) (PP (IN through) (NP (NNS hoops))) (S (VP (TO to) (VP (AUX do) (ADVP (RB so)))))))))))))))))))))) (. .)))
(S1 (S (NP (PRP$ My) (NN judgment)) (VP (AUX is) (SBAR (IN that) (S (NP (DT those) (NNS hoops)) (VP (AUX are) (ADJP (JJ indicative) (PP (IN of) (NP (NP (NNS grammars)) (SBAR (WHNP (WDT that)) (S (VP (AUX are) (ADJP (JJ difficult) (SBAR (IN for) (S (NP (NNS users)) (VP (TO to) (VP (VB understand)))))))))))))))) (. .)))
(S1 (S (SBAR (IN As) (S (NP (DT an) (JJ exmple) (, ,) (NN support) (NN someone)) (VP (VBZ forgets) (S (VP (TO to) (VP (VB put) (PP (IN in) (NP (DT the) (JJ lexical) (NN value))))))))) (, ,) (ADVP (RB then)) (NP (PRP they)) (VP (AUX do) (RB not) (VP (VB get) (NP (NP (DT an) (NN error) (NN message)) (PP (IN because) (SBAR (WHNP (WP what)) (S (NP (PRP they)) (VP (VBP write) (SBAR (S (VP (VBZ matches) (NP (DT a) (ADJP (RB completely) (JJ different)) (NN grammar) (NN rule)))))))))))) (. .)))
(S1 (NP (NNP Jeremy)))
