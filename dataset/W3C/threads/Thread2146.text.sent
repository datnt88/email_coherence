401 and 411 are the response codes for failed authentication. 
I'm uncertain when an origin server should respond with 411, rather than 401. 
Here's what I think I understand. 
Assume, in each case, that the origin server requires authentication for the request. 
1) Client sends no Authorization request header. 
Server always responds with 401. 
2) Client sends Authorization request header. 
Server doesn't like the information therein. 
2a) Basic scheme. 
At present, servers send 401 if the name:passwd is unacceptable. 
Should they send 411 for HTTP/1.1? 
Apparently not: the challenge is likely to be the same as the previous one, so sending the same response is futile. 
2b) Digest scheme. 
2b1) The "stale" attribute says whether the problem is with the nonce value, so the client can tell whether the server thinks that's what the problem is. 
Should the server send 401 or 411 on a stale nonce? 
(I'm guessing 411, although it doesn't appear to matter.) 2b2) If the nonce is fresh, but the server rejects the authorization information for other reasons, I'm guessing the server should return a 401. 
A 411 would imply that the client could recalculate the Authorization header from the challenge (realm and nonce), but they may well be the same the second time, and the server would reject it again. 
So, in all cases but 2b1, the correct answer appears to be 401. 
For case 2b1, 401 should work as well as 411, because the "stale" attribute provides the equivalent information to 411. 
So, what is 411 for?? Dave Kristol Yep. 
Are you sure? 
I thought they sent 403 in this case. 
Yes, but only if they want to include information about how the user can correct the situation. 
"likely to be the same" is not a strong statement. 
411 (I was assuming that 401 is only sent when the request had no Authorization field at all). 
411 if the server wants to give them another chance, 403 otherwise. 
The description of 411 states that: The response must include a WWW-Authenticate header field (Section 8.30) containing a challenge applicable to the requested resource. 
If the challenge is different from that assumed by the last request, the client may repeat the request with a suitable Authorization header field after obtaining the user's approval. 
Should that be "If and only if"? 
On the other hand, we could just use 401 for both, but I was told earlier (on the list) that the 411 semantics were needed. 
....Roy T. Fielding Department of ICS, University of California, Irvine USA Visiting Scholar, MIT/LCS + World-Wide Web Consortium (fielding@w3.org) 
(fielding@ics.uci.edu) 
NCSA sends 401. 
That's also what my server does. 
403, according to the draft, means "Authorization will not help", so that's wrong. 
Do you mean "include" as part of WWW-Authenticate, or as part of an entity. 
I would be leery of the latter, for the same reason that the Unix login program doesn't tell you what went wrong: you don't want to say whether it was a bad user-id, a bad password, or other. 
Well, for Basic there's really no choice to the challenge, is there? 
So the challenge will certainly be the same. 
As I said above, 403 is the wrong response, according to the words in the draft (v10-spec-01). 
If you said that, you would preclude the server's returning the same challenge and letting the client have another guess at the correct value. 
Then again, if that happened, the user could try the same link again, the client would send no Authorization header, the server would return a challenge, and the user could try again. 
That's why I asked for clarification. 
My gut tells me there's a use for 411, but I don't see it yet. 
Dave Kristol Could you summarize why 411 is needed? 
If I'm reading draft 01 right, anytime someone mistypes their username or password for Basic authentication the server should send back 411. 
I know this change will break at least some of the existing web browsers, since they look for 401 to trigger their authentication code. 
There should be a very compelling reason to make a major change from current practice, especially since current practice is so widely implemented. 
Jim Seidman, Senior Software Engineer Spyglass Inc., 1230 E. Diehl Road, Naperville IL 60563 Well, here's the problem: User requests a protected URI Server returns 401 Unauthorized User Agent presents pop-up dialog User enters authentication info (or just OKs a stored credential) UA repeats request using credentials Server interprets credentials, and finds them lacking Server returns 401 Unauthorized User Agent presents pop-up dialog User enters authentication info (or just OKs a stored credential) UA repeats request using credentials Server interprets credentials, and finds them lacking Server returns 401 Unauthorized The problem is that the User Agent is not showing the user why the authentication failed. 
This is not a problem for Basic AA because it is a simple user:passwd scheme, and it is probably best that the user not know why it failed. 
However, consider the case of something like Mediated Digest AA, the failure may be do to any number of reasons -- some of which may be correctable by the user outside the scope of this user agent. 
The user agent needs to know that it must show the user the entity enclosed with the response. 
So, the question is, do we want to require that a 401 response be shown to the user if Authorization for the indicated scheme+realm has already been tried and failed? 
If yes, then we don't need 411. 
If no, then we will need 411. 
BTW, it was added because of a prior thread on this list regarding someone's desire to say "authorization refused" AND explain what the user must to do to get authorization. 
Existing user agents made that impossible because they never show the contents of 401. 
....Roy T. Fielding Department of ICS, University of California, Irvine USA Visiting Scholar, MIT/LCS + World-Wide Web Consortium (fielding@w3.org) 
(fielding@ics.uci.edu) 
Well, it seems to me that, thanks to the change in protocal version to 1.1, this will in fact not break existing browsers. 
Simply: If the request message indicates HTTP/1.0, send 401, if it says HTTP/1.1 or later, send 411. 
I believe this is consitent with the spec, and seems to work. 
In fact, most of the new features outlined in HTTP 1.1 and 1.2 can work this way. 
--/ Alexei Kosut akosut@nueva.pvt.k12.ca.us /--------/ Lefler on IRC ----------------------------/ http://www.nueva.pvt.k12.ca.us/~akosut/ 
The viewpoints expressed above are entirely false, and in no way represent Alexei Kosut nor any other person or entity. 
/-------------- 
