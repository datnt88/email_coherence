This is independent of the use of numerical prefixes. 
I always thought it was obvious that the Man header was required to come _ahead_ of any uses -- but I can't recall if the spec _says_ that. 
We can't guarantee this as a proxy may change the order of the headers. 
Also, we can't guarantee that a down stream, non-mandatory proxy doesn't add a new header with an existing prefix. 
Henrik Henrik Frystyk Nielsen, World Wide Web Consortium We can't guarantee this as a proxy may change the order of the headers. 
To be more precise, the HTTP/1.1 spec says (in section 4.2) The order in which header fields with differing field names are received is not significant. 
which presumably means that this is not something that can be changed in HTTP/1.X (for all X). On the other hand, it's not clear to me that an extension-aware HTTP implementation should be discarding headers as "unrecognized" before it has parsed them all. 
I understand that this somewhat complicates the parser, but there are other aspects of HTTP header parsing that require buffering some of the headers, and I don't see why we shouldn't expect that this is part of the solution for an extension mechanism. 
Consider another, perfectly legal example: GET /foo.html 
HTTP/1.1 Accept-Language: en;q=0.9 
Host: bar.com Accept-Language: fr;q=0.5 
User-Agent: Count Chocula Accept-Language: en-us;q=0.7 
I don't see how you can properly parse the Accept-Language field without at least some buffering. 
(Not "back-tracking", but "buffering.") 
It is definitely important that we not force implementors to undergo unnecessary complexity. 
At the same time, we should not warp the protocol design into unnatural forms just to make possible the simplest imaginable implementation, especially for optional features of the protocol. 
-Jeff JM On the other hand, it's not clear to me that an extension-aware JM HTTP implementation should be discarding headers as "unrecognized" JM before it has parsed them all. 
[...] JM Consider another, perfectly legal example: JM GET /foo.html 
HTTP/1.1 JM Accept-Language: en;q=0.9 
JM Host: bar.com JM Accept-Language: fr;q=0.5 
JM User-Agent: Count Chocula JM Accept-Language: en-us;q=0.7 
JM I don't see how you can properly parse the Accept-Language JM field without at least some buffering. 
(Not "back-tracking", JM but "buffering.") 
But that is not the same case - Accept-Language is not an unrecognized header, and in event, the server doesn't need to buffer the header itself, just the header value - and can fold the values from multiple instances of the header. 
What I believe is needed is a way for the sender to say 'In order to correctly interpret this message you must understand this set of extentions'. 
I don't think that the prefix mechanism is needed to say that. 
Scott Lawrence EmWeb Embedded Server lawrence@agranat.com 
Agranat Systems, Inc. Engineering http://www.agranat.com/ 
Another (legal although controversial) example is HTTP/1.1 200 OK Content-Location: overhere.html 
Content-Base: http://www.newbase.com/ 
In fact, I think most parsers now use lazy parsing in order to avoid wasting cycles on parsing headers that are not used anyway. 
A sideeffect of this is that dependencies between header fields are easier to deal with. 
Henrik Henrik Frystyk Nielsen, World Wide Web Consortium 
