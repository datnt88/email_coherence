I don't quite understand how expandEntityReferences works on the treeWalker and nodeIterator interfaces. 
The treeWalker interfaces says this about the 
attribute: 
"If false, they and their descendants will be rejected. 
Note that this rejection takes precedence over whatToShow" but then says: "To produce a view of the document that has entity reference nodes but no entity expansion, use the whatToShow flags to show the entity reference node and set expandEntityReferences to false" So the first sentence says that entity reference nodes is not shown if expandEntityReferences is false, and the second sentence says they are. 
So I'm wondering which is correct. 
I can see three possible meanings of setting expandEntityReferences to 
false: 1) Entity references are skipped. 
Thier children appears as children of the entityreferences parent. 
2) Entity references are rejected. 
They and thier children appears removed from the tree. 
3) Entity reference nodes are shown in the tree but have no children. 
1) would be same as filtering entity reference nodes using whatToShow, or having the filter always returning FILTER_SKIP for entity reference nodes. 
2) would for the treeWalker be the same as having the the filter always return FILTER_REJECT for entity reference nodes. 
Or does expandEntityReferences have some forth meaning that i've missed? 
/ Jonas Sicking 
The text is actually correct as it stands, but badly phrased. 
My apologies! 
"The value of this flag determines whether the children of entity reference nodes are visible to the iterator. 
If false, they and their descendants will be rejected." 
The intended reading was that "they" means "the children of entity reference nodes". 
You misread it as meaning "entity reference nodes". 
I have to admit it took me a second glance to realize this myself, so it's probably worth considering this an editorial erratum. 
Proposed revised text: "The value of this flag determines whether the children of entity reference nodes are visible to the iterator. 
If false, those children and their descendants will be rejected." 
Better? 
Joe Kesselman / IBM Research 
apologies! 
I could be nitpicking here, but really says that all decenats of entity references should be FILTER_REJECTed. 
But I guess that's not the intent if 
currentNode of a treeWalker is set to a decendant of an entity reference. 
So something like: "The value of this flag determines whether the children of entity reference nodes are visible. 
If false, the enity reference will appear to have no children." 
maybe? 
/ Jonas Sicking 
If false, those children and their descendants will be rejected." 
Clearer... though since "Rejected" and "skipped" are defined terms in this chapter, I'm not sure that's a problem. 
If false, the entity reference will appear to have no children." 
... Hm. You're right; as with other filtering it happens at the point where navigation actually occurs, and if you explicitly do a setLocation you may jump past that. 
But I really do want to use the terminology we've already established in the chapter, so folks can see how expandEntityReferences compares to and interacts with other kinds of filtering. 
So I'd prefer: If false, those children will be rejected. 
or, if it really needs the detail: If false, those children will not be visible (as if blocked by FILTER_REJECT). 
But note that the NodeIterator's documentation does use the terms "skip" and "reject" later in the same paragraph, so there's already a presumption that readers understand what they mean. 
Joe Kesselman / IBM Research 
