From: Aaron Swartz me@aaronsw.com 
Date: Tue Feb 4, 2003 10:11:04 AM America/Chicago Subject: Re: atx * What's its reason for being? 
Do you have any particular use cases in mind for it, e.g. as a Wiki format? 
I plan to use it so I never have to write HTML again. 
It should also be forward-compatible to whatever Advanced XHTML 5.0 idiocy the W3C comes up with * s/range/en-dash/ Tx, fxd. 
what I mean is, are there any character escapes? 
It hasn't come up yet it practice. 
If you really need them, suggest a syntax. 
* Can one cite references for blockquotes? 
No, because no browsers support it. 
* I don't think cramming hypertext into it is a good idea. 
URIs should be invisible where possible anyway. 
Well, you have to include them somehow. 
And text/plain isn't meant to have formatting characters spewed through it: that's part of the defintion of text/plain. 
Who said it was text/plain? 
I want to use features such as sec in XHTML 2.0, and it's difficult to do that in text Can't it be implied with blank #+ lines? 
And all you're doing really is taking some structural bits of HTML and bunging them into an inferior format. 
On what basis is it inferior? 
It seems superior to me in every way. 
It's wysywyg, but it works in your favorite editor. 
It's easy to write and easy to read. 
You can use diff and such on it and send it to your editors for direct proofreading, instead of translating to another language and translating back. 
If you're going to do that, you might as well propose a strict subset of HTML 4.01. 
Why? 
SGML is fundamentally broken. 
Sigh. 
Also, I presume you've got Python code for converting atx to HTML: could you link that from /2002/atx/intro? 
Sure, done. 
Oh, and the atx form seems to have disappeared since you put the /2002/atx/ folder up. 
Unless I imagined it. 
Fxd. Oh, and this is invalid XML, btw: Tx, fxd. 
I'm seriously considering an All Web Formats Considered Harmful sort of rant. 
Time to start afresh, perhaps. 
It wouldn't be so bad if there was a format that didn't really, really suck... 
Why does atx suck? 
Here's the master plan: atx for documents + rdf (n3) for data = no more XML! (bwahaha) Aaron Swartz [http://www.aaronsw.com/] 
Well, I can certainly support the general reasoning there, but... * Why not use an HTML WYSIWYG editor? 
Well, except for the fact that there isn't a decent one in existence yet, that I know of. 
Sigh: it'd be such a timesaver for me (and seemingly you, too) if someone came up with a decent HTML editor. 
* Hopefully,  XHTML 1.1 won't be widely enough deployed to be a bother--considering in advance that it's junk, which is a cynical point of view to take, but if the current XHTML 2 drafts are anything to go by... Heh, but did you see the XHTML 2 Considered Harmful thread? 
Good ol' Tantek. 
what I mean is, are there any character escapes? 
I guess that I could embed UTF-8 encoded unicode characters... * Can one cite references for blockquotes? 
So the design manifesto for atx contains something like "ignore one of the few good bits of good semantic design in HTML just because it's not supported by browsers yet"? 
You could always have the engine convert the blockquote citation format into something that browsers *can* pick up on, like a hyperlink just under the blockquote. 
URIs should be invisible where possible anyway. 
Right... I was just thinking along different lines, I guess. 
And text/plain isn't meant to have formatting characters spewed through it: that's part of the defintion of text/plain. 
--HEAD http://www.aaronsw.com/2002/atx/intro.atx I want to use features such as sec in XHTML 2.0, and it's difficult to do that in text Not sure what you mean by blank #+ lines. 
Just in case we're talking past each other, I meant something like this:- sec hd Blargh /hd par some crap /par | sec | hd Sub-Blargh /hd | par More crap. 
/par | /sec par more crap in the original level /par /sec Good for sidenotes; usually styled with a CSS border-left. 
And all you're doing really is taking some structural bits of HTML and bunging them into an inferior format. 
Well, for a start, if you're generally serving it as HTML, you need to keep the atx source up to date with the generated HTML version. 
So the steps for creating a document are: write atx, save atx, convert atx--and I know from experience that I can't be bothered to convert source and constantly maintain two files for one document. 
It always feels to be like a waste of drive space to have two such similar files next to one another... If you're going to do that, you might as well propose a strict subset of HTML 4.01. 
Well, HTML has always been a pseudo-application of SGML anyway. 
It's kinda a shame that Tim made it look like SGML; no one wanted or needed that, anyway. 
All the early HTML code was done from scratch, it seems: and rightfully so. 
But whatever, the point is that *HTML* is very widely deployed, and that it's possible to create a nice subset of HTML 4.01 with stuff like SHORTTAG YES and all the presentational crap quietly erased that'll be just about usuable in all Web browsers to come for decades. 
[Lots of fixes snipped; thanks.] 
It wouldn't be so bad if there was a format that didn't really, really suck... 
Well, I didn't really mean that atx sucks yet... 
I was just thinking of text/HTML/XML+CSS. 
I'm not all that sure about atx yet since I haven't used it. 
Well, HTML 4.01 isn't XML either :-) I like the conclusion, but I think that if you're going to the trouble of deploying a whole new language, you might as well make it really decent, but you seem to have just taken bits of structural HTML and made them human readable. 
Hmm. 
I suppose I was just thinking that if you're going to deploy something new, you might as well make it semantically rich, but that'd require deploying a rendering engine, which ain't gonna happen. 
It's such a shame that XML sucks, because the underlying power-to-the-people principle is otherwise pretty good. 
Sean B. Palmer, http://purl.org/net/sbp/ 
"phenomicity by the bucketful" - http://miscoranda.com/ 
Why not indeed. 
Incidentally , what *is* the best WYSIWYG editor out there at the moment. 
I use Mozilla composer, but it doesn't do CSS (that i know of)... nore does it allow for RDF descriptions (that i know of). 
I think atx is cool but I think that every author would want to customize it for themselves. 
I prefer to write RDF in Semenglish . 
I'll drink to that ! 
Hey .. Aaron, Sean and Me all in one email ... just like old times :) Seth Russell 1. 
There aren't any. 
2. People are very attached to their text editors. 
3. 
Text editors are far more common than WYSIWYG editors. 
4. WYSIWYG editors are less natural than atx. 5. WYSIWYG editors can't be used with other Unix tools. 
atx solves all of these problems, and I don't think it introduces any new ones. 
(Can you think of any it does?) Yeah, lots of blog coverage. 
Yes, you really should upgrade to a UTF-8 compatible system. 
Heh! Alright, alright. 
To be honest I was considering it. 
How about: If you're a new implementor, you'll be shocked at how badly [822, the email format] was designed. 
Extracting even the simplest information from a message--the author's address, for example, or the sending date--is excruciatingly painful. 
And I see no sign that we'll ever be rid of the horrors of 822 syntax; how can we convince users to convert their old mailboxes to a sensible new format? 
(from Internet mail message header format: http://cr.yp.to/immhf.html) 
as a format? 
And text/plain isn't meant to have formatting characters spewed through it: that's part of the defintion of text/plain. 
Hm. 
It should be something like text/plain; format=atx I want to use features such as sec in XHTML 2.0, and it's difficult to do that in text Header lines with no header. 
Oh, I see. 
Hm. 
I guess we could do indentation. 
On what basis is [atx] inferior? 
It's easy to have Apache do it for you, or just generate it on the fly if there's not much load. 
you might as well propose a strict subset of HTML 4.01. the point is that *HTML* is very widely deployed HTML _readers_ are widely deployed. 
I'm sorry, but I'm not really interested in writing another p or /blockquote . 
I'll have my computer do it for me. 
Close enough for RSI. 
Can you be more specific by what you mean by decent? 
I am quite curious. 
Well, like XSL-FOs, you can render to a non-semantic language to avoid redeploying. 
XML has a power-to-the-people principle? 
Aaron Swartz [http://www.aaronsw.com/] 
The most standards compliant one, etc., is probably Amaya. 
Most people that I know seem to like it, but I tried it for ages and didn't get on well with it. 
Haven't downloaded a recent version for ages... perhaps they've fixed some of the bugs that annoyed me by now. 
Heh, though looking at the bug fixes for 7.2, it seems like they've got a way to go yet. 
It's a shame they don't have more resources, because it's a worthy project. 
It'll do CSS. 
As for RDF, I don't think that any HTML WYSIWYG program out there will let you do that yet. 
Unless you do all your assertions via Annotea :-) Heh, yep. 
Now we just need WL in the thread and we'd end up with SWAG Jr. Sean B. Palmer, http://purl.org/net/sbp/ 
"phenomicity by the bucketful" - http://miscoranda.com/ any Honestly? 
No. Though if there were a decent WYSIWYG editor around, I think that only item 5 on your list above would be a problem. 
And I'm not even sure why that's a problem: there's not really much difference 'twixt " h1 Blargh /h1 " and "# Blargh" except that the latter is easier to type. 
I don't see why diff should care, but you've probably got specific examples in mind that I haven't thought about. 
(No need to supply them.) Whoo! 
Yep, that's a good syntax, too. 
Puts one in mind of chumpy's [title|URI] syntax. 
Whilst I'm on the "[]" syntax subject, I'd just like to say that if I were using atx, I'd certainly prefer using {} for links instead of [] since I commonly use [] for interpolations. 
That's tripped me up on chumpy a couple of times when I've wanted to use interpolations and they've been interpreted as links. 
Feature bloat! 
:-) I maintain a lot of HTML files for just me, and I don't tend to use Apache to serve them up. 
Could add a menu function to update them, I suppose. 
But it's a PITA... oh, or perhaps I could dig up my old Python text editor and have it auto save as HTML. 
Heh, that'd be rather cool: open HTML as atx if it can, and then save it as HTML again. 
Would you believe that I stopped using that editor because the cursor blink rate was a little too high? 
That's pretty silly now that I think about it: it had some good features (could save via FTP, for one; could easily have added HTTP PUT). 
But man, that cursor was annoying. 
I don't think that TkInter will let one change it. 
"Google - Searching 3,083,324,652 web pages" --http://www.google.com/ 
Dunno what percentage of those are HTML, but still... I'd still prefer WYSIWYG. 
A really good editor would even be able to map "###" to the command for inserting an h3 , for example (hey, now there's an Amaya feature request in the making!). 
WYSIWYG! 
Ew. 
If you render headings as "big text" and lose the information that they're headings, how do you expect people to be able to use an Opera-esque header skipping function, or an overview script? 
XSL-FOs should only be sent if requested. 
If a decent generic hypermedia language were deployed, I hope that no one in their right minds would request text/html. 
Sean B. Palmer, http://purl.org/net/sbp/ 
"phenomicity by the bucketful" - http://miscoranda.com/ 
