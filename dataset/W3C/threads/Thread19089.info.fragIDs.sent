We have what we claim is a simple rule for distinguishing between P1 and P2 
items - whether they make things impossible. 
The difference between P2 and P3 seems much less well defined. 
I don't think there will ever be a hard and fast rule, but a bit better guidance would be good. 
In addition to the definitions that we use at the moment, (essential, important, helpful, or some variation) I suggest we look at efficiency as a rough guide. 
For example, something that takes 10 times as long or more, and is a task that "normally" takes several minutes suddenyl becomes a task that takes an hour or more. 
In this case I would suggest that it represents a barrier of P1 level - in particular in a work situation this makes it practically impossible. 
For the difference between P2 and P3 I think that things which do not cause this level of efficiency blow-out, but mean that a task takes twice as long or more, a P2 is justified. 
A P3 should be solving a problem that is less significant than that. 
I realise that these are rough figures, and working out how to apply them will still involve a measure of subjectivity, but maybe we can lessen it somewhat. 
I think that would help us. 
A second part of the proposal is to look at different tyypes of requirements. 
It seems reasonable to assume that a person with disabilities makes use of their software through the standard interfaces, so requiring special skills such as interpreting HTML source should not be considered as an access method in determining the impact of something. 
On the other hand, there are peopole who can make use of such functions, which are after all common. 
Although this represents perhaps 10% of the user community, makiing such functions available is an important repair strategy. 
SInce it seems that in the near future no single strategy is going to solve everyone's problems, we 
should be prepared to include these things (view source is one example) as 
requirements, with their priority based on the difference they can make. 
As an example, if a user can look at the source of a document, and in particular of scripts, they can determine how to get access to a site that is otherwise completely inaccessible. 
(As sites I have used this technique for, there is the Boston "T" system - http://www.mbta.com, the first version of the Sydney Olympics Website, and others that I forget now). 
In other words, with this technique, access that was otherwise impossible becomes possible. 
So the requirement is at P1 level - removing an (effectively) total barrier. 
What do people think? 
Charles McCN Location: I-cubed, 110 Victoria Street, Carlton VIC 3053, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) 
I wonder if "requiring" it isn't restricted to UA? Don't browsers (most/all) do this? 
Much of what ER undertakes is presumably done with source? 
Love. 
ACCESSIBILITY IS RIGHT - NOT PRIVILEGE 
Most browsers do this. 
And for ER it is a different question - ER tools need access to the document source, but through an API not a user view. 
It was just an example. 
Chaals 
I wonder if "requiring" it isn't restricted to UA? Don't browsers (most/all) do this? 
Much of what ER undertakes is presumably done with source? 
Love. 
ACCESSIBILITY IS RIGHT - NOT PRIVILEGE Location: I-cubed, 110 Victoria Street, Carlton VIC 3053, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) 
Hmmmm 
We can look at this but I think P1 might stay at "impossible". 
I like the 
10x but that starts to get subjective, and 10x for how many people? 
One? 
Most? 
Ditto for P2 and P3. P2 I think is SERIOUS usability problems. 
Maybe here we can use a multiplier. 
(with and without) to divide 2 and 3. Gregg C Vanderheiden Ph.D. Professor - Human Factors Depts of Ind. and Biomed. 
Engr. - U of Wis. 
Director - Trace R &amp; D Center Gv@trace.wisc.edu, 
http://trace.wisc.edu/ 
For a list of our listserves send "lists" to listproc@trace.wisc.edu 
Of Charles McCathieNevile We have what we claim is a simple rule for distinguishing between P1 and P2 items - whether they make things impossible. 
The difference between P2 and P3 seems much less well defined. 
I don't think there will ever be a hard and fast rule, but a bit better guidance would be good. 
In addition to the definitions that we use at the moment, (essential, important, helpful, or some variation) I suggest we look at efficiency as a rough guide. 
For example, something that takes 10 times as long or more, and is a task that "normally" takes several minutes suddenyl becomes a task that takes an hour or more. 
In this case I would suggest that it represents a barrier of P1 level - in particular in a work situation this makes it practically impossible. 
For the difference between P2 and P3 I think that things which do not cause this level of efficiency blow-out, but mean that a task takes twice as long or more, a P2 is justified. 
A P3 should be solving a problem that is less significant than that. 
I realise that these are rough figures, and working out how to apply them will still involve a measure of subjectivity, but maybe we can lessen it somewhat. 
I think that would help us. 
A second part of the proposal is to look at different tyypes of requirements. 
It seems reasonable to assume that a person with disabilities makes use of their software through the standard interfaces, so requiring special skills such as interpreting HTML source should not be considered as an access method in determining the impact of something. 
On the other hand, there are peopole who can make use of such functions, which are after all common. 
Although this represents perhaps 10% of the user community, makiing such functions available is an important repair strategy. 
SInce it seems that in the near future no single strategy is going to solve everyone's problems, we should be prepared to include these things (view source is one example) as requirements, with their priority based on the difference they can make. 
As an example, if a user can look at the source of a document, and in particular of scripts, they can determine how to get access to a site that is otherwise completely inaccessible. 
(As sites I have used this technique for, there is the Boston "T" system - http://www.mbta.com, the first version of the Sydney Olympics Website, and others that I forget now). 
In other words, with this technique, access that was otherwise impossible becomes possible. 
So the requirement is at P1 level - removing an (effectively) total barrier. 
What do people think? 
Charles McCN 134 136 258 5999 Location: I-cubed, 110 Victoria Street, Carlton VIC 3053, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) 
I think we are going for the same meaning but this terminology might help... 
P1: MUST. 
Would prevent users from gaining access to this 
feature, information, or control if this was not done. 
P2: Like. 
Would significantly improve usability if this was done. 
P3: Nice to have.Would improve usability if this was done, but is not required for basic use. 
Hmmmm We can look at this but I think P1 might stay at "impossible". 
I like the 10x but that starts to get subjective, and 10x for how many people? 
One? 
Most? 
Ditto for P2 and P3. P2 I think is SERIOUS usability problems. 
Maybe here we can use a multiplier. 
(with and without) to divide 2 and 3. Gregg C Vanderheiden Ph.D. Professor - Human Factors Depts of Ind. and Biomed. 
Engr. - U of Wis. 
Director - Trace R &amp; D Center Gv@trace.wisc.edu, 
http://trace.wisc.edu/ 
For a list of our listserves send "lists" to listproc@trace.wisc.edu 
-----Original Message----- Behalf Of Charles McCathieNevile We have what we claim is a simple rule for distinguishing between P1 and P2 items - whether they make things impossible. 
The difference between P2 and P3 seems much less well defined. 
I don't think there will ever be a hard and fast rule, but a bit better guidance would be good. 
In addition to the definitions that we use at the moment, (essential, important, helpful, or some variation) I suggest we look at efficiency as a rough guide. 
For example, something that takes 10 times as long or more, and is a task that "normally" takes several minutes suddenyl becomes a task that takes an hour or more. 
In this case I would suggest that it represents a barrier of P1 level - in particular in a work situation this makes it practically impossible. 
For the difference between P2 and P3 I think that things which do not cause this level of efficiency blow-out, but mean that a task takes twice as long or more, a P2 is justified. 
A P3 should be solving a problem that is less significant than that. 
I realise that these are rough figures, and working out how to apply them will still involve a measure of subjectivity, but maybe we can lessen it somewhat. 
I think that would help us. 
A second part of the proposal is to look at different tyypes of requirements. 
It seems reasonable to assume that a person with disabilities makes use of their software through the standard interfaces, so requiring special skills such as interpreting HTML source should not be considered as an access method in determining the impact of something. 
On the other hand, there are peopole who can make use of such functions, which are after all common. 
Although this represents perhaps 10% of the user community, makiing such functions available is an important repair strategy. 
SInce it seems that in the near future no single strategy is going to solve everyone's problems, we should be prepared to include these things (view source is one example) as requirements, with their priority based on the difference they can make. 
As an example, if a user can look at the source of a document, and in particular of scripts, they can determine how to get access to a site that is otherwise completely inaccessible. 
(As sites I have used this technique for, there is the Boston "T" system - http://www.mbta.com, the first version of the Sydney Olympics Website, and others that I forget now). 
In other words, with this technique, access that was otherwise impossible becomes possible. 
So the requirement is at P1 level - removing an (effectively) total barrier. 
What do people think? 
Charles McCN 409 134 136 617 258 5999 Location: I-cubed, 110 Victoria Street, Carlton VIC 3053, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) 
This stuff relates to the standard use in internet specifications of the terms MUST, SHOULD, and MAY, as defined by RFC 2119 The point is what is the difference between "the user has no access" and "the 
user effectively has no access"? 
There are people who can read RTF source and 
find what is going on. 
Does that mean that is it sufficient to provide the 
RTF source to somebody, or does it need to be presented through a user interface. 
The Authoring Tool Accessibility Guidelines add a requirement - that these things are interpreted in terms fo "the average user". 
WHile this person is almost impossible to actually find (male or female, does she have an address, etc) it is a concept with a long history of being used in law, and is not as impossible as we might think. 
cheers Charles I think we are going for the same meaning but this terminology might help... 
P1: MUST. 
Would prevent users from gaining access to this 
feature, information, or control if this was not done. 
P2: Like. 
Would significantly improve usability if this was done. 
P3: Nice to have.Would improve usability if this was done, but is not required for basic use. 
Hmmmm We can look at this but I think P1 might stay at "impossible". 
I like the 10x but that starts to get subjective, and 10x for how many people? 
One? 
Most? 
Ditto for P2 and P3. P2 I think is SERIOUS usability problems. 
Maybe here we can use a multiplier. 
(with and without) to divide 2 and 3. Gregg C Vanderheiden Ph.D. Professor - Human Factors Depts of Ind. and Biomed. 
Engr. - U of Wis. 
Director - Trace R &amp; D Center Gv@trace.wisc.edu, 
http://trace.wisc.edu/ 
For a list of our listserves send "lists" to listproc@trace.wisc.edu 
-----Original Message----- Behalf Of Charles McCathieNevile We have what we claim is a simple rule for distinguishing between P1 and P2 items - whether they make things impossible. 
The difference between P2 and P3 seems much less well defined. 
I don't think there will ever be a hard and fast rule, but a bit better guidance would be good. 
In addition to the definitions that we use at the moment, (essential, important, helpful, or some variation) I suggest we look at efficiency as a rough guide. 
For example, something that takes 10 times as long or more, and is a task that "normally" takes several minutes suddenyl becomes a task that takes an hour or more. 
In this case I would suggest that it represents a barrier of P1 level - in particular in a work situation this makes it practically impossible. 
For the difference between P2 and P3 I think that things which do not cause this level of efficiency blow-out, but mean that a task takes twice as long or more, a P2 is justified. 
A P3 should be solving a problem that is less significant than that. 
I realise that these are rough figures, and working out how to apply them will still involve a measure of subjectivity, but maybe we can lessen it somewhat. 
I think that would help us. 
A second part of the proposal is to look at different tyypes of requirements. 
It seems reasonable to assume that a person with disabilities makes use of their software through the standard interfaces, so requiring special skills such as interpreting HTML source should not be considered as an access method in determining the impact of something. 
On the other hand, there are peopole who can make use of such functions, which are after all common. 
Although this represents perhaps 10% of the user community, makiing such functions available is an important repair strategy. 
SInce it seems that in the near future no single strategy is going to solve everyone's problems, we should be prepared to include these things (view source is one example) as requirements, with their priority based on the difference they can make. 
As an example, if a user can look at the source of a document, and in particular of scripts, they can determine how to get access to a site that is otherwise completely inaccessible. 
(As sites I have used this technique for, there is the Boston "T" system - http://www.mbta.com, the first version of the Sydney Olympics Website, and others that I forget now). 
In other words, with this technique, access that was otherwise impossible becomes possible. 
So the requirement is at P1 level - removing an (effectively) total barrier. 
What do people think? 
Charles McCN 409 134 136 617 258 5999 Location: I-cubed, 110 Victoria Street, Carlton VIC 3053, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) Location: 21 Mitchell street FOOTSCRAY Vic 3011, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) 
It also raises the question of "which users" or "how many" and "what must they be using"? 
If you can find a case in which one person -- with multiple disabilities and unusual hardware/software -- is unable 
to access something, does that make it a P1? 
Or not? 
E.g., if something is accessible to blind users, and deaf users, and cognitively impaired users, and limited dexterity users -- but not to a blind, deaf, limited dexterity, cognitively-impaired user who isn't running a braille terminal and has no pointer device -- is that "inaccessible" according to P1 priorities? 
If something takes one click for a non-disabled user, but requires 5 clicks for a blind user, is that "impossible"? 
What about 10 clicks? 
What about 25? 
What about 100? 
What if someone doesn't have a web browser? 
What if someone doesn't have a web browser we -like-? 
--Kynn Kynn Bartlett kynn@reef.com 
Technical Developer Liaison Reef North America Tel +1 949-567-7006 ACCESSIBILITY IS DYNAMIC. 
TAKE CONTROL. 
Ooooooooo This gets right to the core of our soft spot. 
There will ALWAYs be someone who can't use something.. (so everything is P1?) 
And we can't define what is "harder enough" to push a P3 to a P2. 
SO I am afraid that we will have to admit that what we do is get a group of talented and informed people together and do our best to define what is reasonable to put into categories 1 2 and 3. we can define these all 
we want. 
But we will not strictly follow those guidelines. 
In the end we will call them. 
And our call will be questioned or ratified. 
And that will be the guidelines or 'recommendation". 
Have to admit it........ Gregg Gregg C Vanderheiden Ph.D. Professor - Human Factors Depts of Ind. and Biomed. 
Engr. - U of Wis. 
Director - Trace R &amp; D Center Gv@trace.wisc.edu, 
http://trace.wisc.edu/ 
For a list of our listserves send "lists" to listproc@trace.wisc.edu 
Of Kynn Bartlett 
"the 
and 
It also raises the question of "which users" or "how many" and "what must they be using"? 
If you can find a case in which one person -- with multiple disabilities and unusual hardware/software -- is unable to access something, does that make it a P1? 
Or not? 
E.g., if something is accessible to blind users, and deaf users, and cognitively impaired users, and limited dexterity users -- but not to a blind, deaf, limited dexterity, cognitively-impaired user who isn't running a braille terminal and has no pointer device -- is that "inaccessible" according to P1 priorities? 
If something takes one click for a non-disabled user, but requires 5 clicks for a blind user, is that "impossible"? 
What about 10 clicks? 
What about 25? 
What about 100? 
What if someone doesn't have a web browser? 
What if someone doesn't have a web browser we -like-? 
--Kynn Kynn Bartlett kynn@reef.com 
Technical Developer Liaison Reef North America Tel +1 949-567-7006 ACCESSIBILITY IS DYNAMIC. 
TAKE CONTROL. 
I think there's a difference between these two statements: a) This may be impossible for some people but we don't have definite criteria for knowing that. 
b) This will be impossible for some people and we are certain of this for the following reasons... 
It is possible to define P1 in terms of what is known (with rationale), and not in terms of what may be impossible for reasons unknown. 
[I can't remember the terms from logical programming for requiring explicit negation v. negation by absence.] 
I agree. 
I think I agree with that. 
I also think that people prefer the three-way grouping (impossible, hard, beneficial) over the two-way groupings that have been proposed in the past (impossible/possible, required/optional). 
I think it is useful to write down criteria that are used in practice to determine whether something is impossible, beneficial, or just difficult. 
Perhaps it is not necessary to change the rating scale but simply to: a) Establish in advance a set of WG guidelines for determining priority. 
b) Document (in the guidelines) the rationale for choosing a particular priority. 
I believe that a lot of time is wasted rehashing priority discussions because the WG has forgotten the rationale for a decision. 
Putting the information right in the checkpoint will help the WG remember and will instruct other readers. 
- Ian Ian Jacobs (jacobs@w3.org) http://www.w3.org/People/Jacobs Cell: +1 917 450-8783 
