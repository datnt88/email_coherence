I hear that there is an issue about which license to use in the DOM Java bindings, and in particular, whether to allow certain kinds of modifications that would conflict with a standard. 
My information is fragmentary, so if I have misunderstood the situation, please forgive me. 
One of the fundamental freedoms that defines free software (see users are free to publish modified versions--modified in whatever way they find useful, whether other people like the changes or not. 
It is ok to have requirements for labeling of modifications, or other details of how to publish modified versions, as long as those don't substantially impede the publication and use of them. 
For example, the GNU GPL and the GNU Lesser GPL both require modified versions be clearly labeled as modified. 
The idea of legally restricting modification of a program to require compliance with some standard arises over and over. 
That restricts the technical substance of modifications, so it clearly makes the program non-free. 
Standards are useful, and it is good to encourage people to follow them. 
But they are conventions, not moral laws; they are not important enough to justify legally compelling people. 
We have no standard so important and useful as the vocabulary of English, but you would not want people to be imprisoned for using words nonstandardly. 
Nonstandard modifications can be useful. 
Adding nonstandard features to a language implementation can be very useful (look at GCC, for example, which extends the C specification with many interesting features). 
Sure, some users would rather stick to the standard features--and they are free to do so. 
But other users have other goals and interests. 
I hope you will choose a license for this package that makes it free software. 
It is also important, as a practical matter, to pick a license that is compatible with the GPL, so that this package can be linked (statically or dynamically) with GPL-covered packages. 
If you are writing a program, and would like to talk with me about license issues to make sure it will be free software in a good way, please send me mail. 
This is an issue for the first version of the DOM [1]. 
We changed the license in the latest version of DOM Level 2 [2]. 
We will change the license of DOM Level 1 with the publication of a revised version. 
In [3] : "This formulation of W3C's notice and license became active on August 14 1998 so as to improve compatibility with GPL. 
This version ensures that W3C software licensing terms are no more restrictive than GPL and consequently W3C software may be distributed in GPL packages." 
A list of W3C Open Source Software is available on the W3C web site [4]. 
Regards, Philippe. 
[1] http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/copyright-notice.html [2] http://www.w3.org/TR/1999/CR-DOM-Level-2-19991210/copyright-notice.html [3] http://www.w3.org/Consortium/Legal/copyright-software-19980720 [4] http://www.w3.org/Status Philippe Le Hegaret - http://www.w3.org/People/LeHegaret/ World Wide Web Consortium (W3C), DOM Activity Lead Dear all, I have a question about DOM2 Range Object Model. 
Shouldn't be void surroundContents(in Node n); declared as void surroundContents(in Node n) raises (RangeException); ? 
Because: The surroundContents() method raises an exception if the range partially selects a non-Text node. 
An example of a range for which surroundContents() raises an exception is: FOO AB BAR CD /BAR E /FOO so it should be clear in the specification also. 
Please let me know if I am wrong. 
The quoted are all from CR-DOM-Level-2-19991210. Regards, Lajos void surroundContents(in Node n); void surroundContents(in Node n) raises (RangeException); ? 
If you look in the section called "Formal Description of the Range Interface" you will see that it does indeed raise exceptions, and is defined as void surroundContents(in Node newParent) raises(DOMException, RangeException); with the description surroundContents Reparents the contents of the range to the given node and inserts the node at the position of the start of the range. 
Parameters Node newParent The node to surround the contents with. 
Exceptions DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if an ancestor container of either boundary-point of the range is read-only. 
WRONG_DOCUMENT_ERR: Raised if newParent and the container of the start of the Range were not created from the same document. 
HIERARCHY_REQUEST_ERR: Raised if the container of the start of the Range is of a type that does not allow children of the type of newParent or if newParent is an ancestor of the container or if node would end up with a child node of a type not allowed by the type of node. 
INVALID_STATE_ERR: Raised if detach() has already been invoked on this object. 
RangeException BAD_BOUNDARYPOINTS_ERR: Raised if the range partially selects a non-text node. 
INVALID_NODE_TYPE_ERR: Raised if node is an Attr, Entity, DocumentType, Notation, Document, or DocumentFragment node. 
regards, No Return Value Lauren 
