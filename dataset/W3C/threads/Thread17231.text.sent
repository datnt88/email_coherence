Hi All Apologies if this has been covered already: I am currently writing a guide to accessible web forms, and have realised two things: 1. 
I don't really understand how the element properties work together 2. I don't really know how screen readers handle them Am I correct in thinking that the label == id ? 
Or is it actually the same as name : I have always set "name" and "id" as the same thing. 
But what I'm not clear on is which property a screen reader would read. 
e.g. in the example below would the screen reader read the label, text, name or id. [i am guessing that whichever it is that it needs to be readable text]. 
Also is there anything I am missing that would make this form more accessible? 
alt="Last Name" I am also having trouble getting the alt tag to work. 
Angela Angela K Hilton Web &amp; E-Learning Officer UMIST There is no such thing as an ALT attribute on a text input tag. 
Bill Mason Accessible Internet w3c@accessibleinter.net The name attribute is for associating the form field with a name on the server. 
The id attribute is for associating things (labels, css, javascript) with elements. 
The for attribute of the label tag associates a label with a specific form field (via its id) (And name couldn't be used for this, because you can have multiple form fields with the same name but different labels, such as a group of radio buttons) HTML doesn't have an alt tag, do you mean the alt attribute? 
Why do you want to provide the browser with alternative content for use in the event of it being unable to display the form field? 
There is a reason that there is no alt attribute for the input tag in HTML. 
I suspect you are looking for a tooltip effect in common browsers, and that is achieved with title (although as its properly labeled, it seems rather redundent to me). 
David Dorward http://david.us-lot.org/ 
Redesign in progress: http://stone.thecoreworlds.net/ 
Microsoft announces IE is dead (so upgrade): It would have been beneficial to add that there is a standard attribute title which can be used in an input element. 
W3 reference for the title attribute. 
"Values of the title attribute may be rendered by user agents in a variety of ways. 
For instance, visual browsers frequently display the title as a "tool tip" (a short message that appears when the pointing device pauses over an object). 
Audio user agents may speak the title information in a similar context. 
For example, setting the attribute on a link allows user agents (visual and non-visual) to tell users about the nature of the linked resource." 
(http://www.w3.org/TR/html401/struct/global.html#adef-title) 
On an input element this is the closest attribute for providing functionality similar to the alt attribute. 
Open WebMail Project (http://openwebmail.org) Thanks for that David - it clears things up a lot. 
I was sure that I had seen an example of a form using alt in that way - I could be mistaken. 
Angela K Hilton Web &amp; E-Learning Officer UMIST Quoting David Dorward david@us-lot.org 
: You don't always do it, though...an example would be radio buttons, which need to have the same name to effectively be mutually exclusive, but need a separate ID for the "uniqueness" aspect of it. 
e.g.: value="chicken" / label for="question1chicken" chicken /label value="egg" / label for="question1egg" egg /label Patrick Patrick H. Lauke Webmaster / University of Salford Caveat. 
There has been several people mentioning this, but the attribution seems to have fallen out from your mail, as has the actual statements you reply to. 
My reply to yours may therefor be incorrect depending on which of the previous posters article you actually answered. 
Sorry for the inconvenience. 
FYI: The Alt is Valid on a form Indeed it is. 
On an INPUT with type IMAGE. 
- Tina Holmboe Greytower Technologies tina@greytower.net 
http://www.greytower.net/ 
[+46] 0708 557 905 FYI: The Alt is Valid on a form !ATTLIST INPUT %attrs; -- %coreattrs, %i18n, %events -- type %InputType; TEXT -- what kind of widget is needed -- name CDATA #IMPLIED -- submit as part of form -- value CDATA #IMPLIED -- Specify for radio buttons and checkboxes -- checked (checked) #IMPLIED -- for radio buttons and check boxes disabled (disabled) #IMPLIED -- unavailable in this context -- readonly (readonly) #IMPLIED -- for text and passwd -- size CDATA #IMPLIED -- specific to each type of field -- maxlength NUMBER #IMPLIED -- max chars for text fields -- src %URI; #IMPLIED -- for fields with images -- alt CDATA #IMPLIED -- short description -- usemap %URI; #IMPLIED -- use client-side image map -- ismap (ismap) #IMPLIED -- use server-side image map -- tabindex NUMBER #IMPLIED -- position in tabbing order -- accesskey %Character; #IMPLIED -- accessibility key character -- onfocus %Script; #IMPLIED -- the element got the focus -- onblur %Script; #IMPLIED -- the element lost the focus -- onselect %Script; #IMPLIED -- some text was selected -- onchange %Script; #IMPLIED -- the element value was changed -- accept %ContentTypes; #IMPLIED -- list of MIME types for file upload Of Bill Mason There is no such thing as an ALT attribute on a text input tag. 
Bill Mason Accessible Internet w3c@accessibleinter.net And for more help with Accessible Forms - This is a free utility for use on windows desktops: cheers As per the Spec it is valid and optional for Inputs like shown in the example: Now is it the best use? 
The WAI Team has said on ocassions that they recommend LABEL but Alt is valid. 
So it is valid on the example given is my only point and will validate as "Good" HTML. 
However it seems it is supported by the most basic screen readers but not the advanced ones. 
Since the number of valid attributes for the input are a limited set you would think all scree readers could handle them. 
Here is the alt description. 
Attribute definitions alt = text [CS] For user agents that cannot display images, forms, or applets, this attribute specifies alternate text. 
The language of the alternate text is specified by the lang attribute. 
Several non-textual elements (IMG, AREA, APPLET, and INPUT) let authors specify alternate text to serve as content when the element cannot be rendered normally. 
Specifying alternate text assists users without graphic display terminals, users whose browsers don't support forms, visually impaired users, those who use speech synthesizers, those who have configured their graphical user agents not to display images, etc. 
The alt attribute must be specified for the IMG and AREA elements. 
It is optional for the INPUT and APPLET elements. 
Yes. 
It is *valid* for the input element. 
It is, and I'll go out on a limb and make a blanket statement, pointless for anything ELSE than a graphical button. 
There is very little in the way of an accessibility benefit to seeing the example: input type="text" accesskey="L" tabindex="1" alt="Last Name" rendered as Last name without any ability to actually *input* a last name. 
nor any real possibility of understanding what was just read, and why. 
Take note of the specification of ALT, which states: "Do not specify meaningless alternate text (e.g., "dummy text"). 
Not only will this frustrate users, it will slow down user agents that must convert text to speech or braille output." 
Now, I'm guessing that you answered my comments - frankly it would be much easier if you quoted a little (hot tip) - and I must admit that strictly you are correct. 
There is nothing inherently wrong with the above example, save that the ALT text there is utterly meaningless. 
Placing ALTernate text on text inputs for display if, and when, a user-agent without for support shows up means that the same UA will, quite happily, fill the user with ALTernate content which, basically, only informs her that her browser can't access the content at all. 
However, it means she have to *guess* - say from what is being read - that that is what happens. 
Meaningless and confusing. 
ALT is valid. 
LABEL is valid - but they are two entirely different beasts. 
Certainly. 
I'll agree with that. 
My reply was hasty. 
Well, it depends a little on the definition of a 'screen reader', but also with the sad fact that even if HTML of all varieties are quite limited - this is the benefit of having them - not all browsers support them. 
- Tina Holmboe Greytower Technologies tina@greytower.net 
http://www.greytower.net/ 
[+46] 0708 557 905 To me, it seems obvious that it is optional because DTDs cannot distinguish between the cases where it is and is not optional; to me, it is clearly intended only for use with images, and exists because an input field can be an image map. 
Especially with XML, because it is not as powerful as SGML, there are a number of cases where the formal syntax allows constructs that the narrative forbids. 
For forms, I would assume that the intention is that the whole form should be suppressed, e.g. for a non-interactive aural browser. 
The title attribute is good for people who have screen readers set up to work with it, but that is only a tiny proportion even of people with disabilities using the web. 
The label element is designed to allow visible labels to be provided, as the author sees fit, and still have a way for people using assistive technologies to get all the information and navigation control they need to fill out a form. 
(until Xforms comes along, when things will eventually get nicer again. 
At the moment though it seems that xforms-capable systes are only at the start of figuring out how to implement the accessibility stuff that the spec includes). 
cheers Chaals Charles McCathieNevile Fundaci?n Sidar charles@sidar.org http://www.sidar.org 
I think you meant to add: .... according to the de facto behaviour of the big two visual browsers. 
I don't believe that either IE or Mozilla will display title attributes in place of images and displaying as tooltips is not something that one would expect from the specification. 
None of them. 
It should read the contents of the label element, i.e. "_L_ast Name" in your example. 
As others have said, the label element is correlated by matching its "for" attribute with the control's "id" attribute. 
Also, in an ideal world the L should be highlighted by using label[accesskey]:first-letter as a CSS selector, with the accesskey on the label rather than the control, not by presentational markup. 
However, I'm not sure how well :first-letter is supported and [attribute] is supported on Gecko, but not IE. 
As discussed elsewhere, an alt attribute is pointless in this context, although might be justified on the form element itself. 
A fully compliant browser would ignore the br , but graphical ones tend to treat it as a hard newline rather than the correct line break. 
I think that support for styling is adequate to do this with styles. 
Lynx, although not supporting styles, defaults to treating br as a line break, so will probably not leave a gap - depends on how it handles legend. 
br might be valid if your intention is to produce sensible formatting on a browser that doesn't understand legend . 
Not suprising as there is no alt tag in HTML! ...that's assuming that the first letter is the accesskey, which is often not the case. 
:) --Kynn Kynn Bartlett kynn@idyllmtn.com http://kynn.com 
Chief Technologist, Idyll Mountain http://idyllmtn.com 
Author, CSS in 24 Hours http://cssin24hours.com Inland Anti-Empire Blog http://blog.kynn.com/iae 
Shock &amp; Awe Blog http://blog.kynn.com/shock 
