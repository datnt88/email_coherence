Hi, rfc2518bis currently states: 12.1 Responses requiring Location in Multi-Status The 300-303, 305 and 307 responses defined in HTTP 1.1 normally take a Location header to indicate where the client should make the request. 
The Multi-Status response syntax does not allow for the Location header information to be included in an unambiguous way, so servers MAY choose not to use these status codes in Multi-Status responses. 
If a clients receives this status code in Multi-Status, the client MAY reissue the request to the individual resource, so that the server can issue a response with a Location header for each resource. 
There are two issues here that I'd like to be resolved both in rfc2518bis and draft-ietf-webdav-redirect-ref: 1) Are servers allowed not to report redirects as 3xx? 
I think I myself made the proposal to allow this because in practice returning 3xx responses in multistatus breaks a lot of clients (for instance, the Microsoft Webfolder client). 
However, if we allow this, there should be an explicit way for a client to force the server to return 3xx responses (that would then be defined in draft-ietf-webdav-redirect-ref). 
2) I think we also should say that if a 3xx is returned, that the Location information must be returned as well. 
draft-ietf-webdav-redirect-ref uses a pseudo-property for that, but during Last Call in 2000 this was already discussed and it seems that there was a consensus to just extend the DAV:response element instead. 
So here's my proposal: a) Allow servers to report redirects with a 200 status. 
Thus will cause redirects to appear as regular resources, however an attempt to GET them will result in a HTTP redirect (which indeed will work fine with the MS webfolder client). 
b) In draft-ietf-webdav-redirect-ref, extend "Apply-To-Redirect-Ref" to have the values "T" or "F". 
In presence of this header, require the server not do to the 2xx workaround described in a). ("F" would mean that the server MUST NOT apply the request to the redirect target but also signals that the client knows about the various extensions in the redirect spec) c) In both RFC2518bis and draft-ietf-webdav-redirect-ref, define an extension element for DAV:response holding the Location header for the redirect, such as: !ELEMENT response (href, ((href*, status)|(propstat+)), responsedescription?, location) (this takes care of the various issues inherent in "pseudo" properties). 
Julian For (1), I could go either way on this, but if we did give a client a way to say this, I suggest that it be in the form of a request DAV header, and that we introduce a symbol that means "the redirect-ref standard", e.g. something like: DAV: 1, 2, redirect Note that I am bundling this into the general "I understand the redirect spec" token, since I'd rather not introduce a new token for each detailed bit of functionality. 
For (2), Julian's suggestion is fine, but shouldn't the Location node be optional (i.e. "Location?"). 
Cheers, Geoff Julian wrote on 10/09/2003 11:31:29 AM: rfc2518bis made in Webfolder a Location uses a have not do MUST properties). 
Well, I'd rather not do that unless it's in the base spec (RFC2518bis). 
The redirect draft already defines a new header, so that one can easily be used.... Of course :-) Julian My first choice is to get this in the base spec, since I think it is a bug that the server can register what options it supports, but a client cannot. 
I could live with Julian's approach, but I'd rather not, since I think this is a general problem that merits a clean extensible solution (as opposed to a one-off hack :-). 
Cheers, Geoff "Julian Reschke" julian.reschke@gmx.de 
wrote on 10/09/2003 12:54:58 PM: The OK, so we probably should put it onto the issues list (so that it doesn't get lost). 
Julian lost). 
Here's a proposal for the issues list: Issue DAV_REQUEST_HEADER RFC 2518 provides a mechanism (the "DAV" response header) for a server to indicate to a client that it supports a specific WebDAV option (e.g. "1", "2", "version-control", etc.), but there is no complementary mechanism for a client to indicate to a server that it understands a specific WebDAV option. 
This becomes an issue when a WebDAV extension (or revision) needs to change response formats in a way that possibly break existing clients. 
Detecting client features based on a single, well-defined request header will work better than (for instance) relying on custom headers (specified by each extension) or "User-Agent". 
Suggested resolution: allow the use of the "DAV" header as a request header, with the same set of values that are defined for the "DAV" response header. 
Regards, Julian I support this addition to RFC2518bis. 
I believe it is a key mechanism needed for servers to properly support the various current (and future) WebDAV extensions. 
Cheers, Geoff Julian wrote on 10/14/2003 09:53:30 AM: get to "1", for a option. 
change Detecting header, Am Dienstag, 14.10.03, 
um 19:23 Uhr (Europe/Berlin) schrieb Geoffrey M Clemm: I agree, let's add this to 2518bis - the proposed mechnism is simple and easy for developers to understand. 
Elias I would like to see it added specifically to 2518bis. 
I believe that there will be plenty of time between now and when 2518bis goes to the IESG for a sufficient number of clients and servers to add in the DAV request header (and if there is one feature that is unlikely to introduce an interoperability problem, this is probably it :-). 
Cheers, Geoff Lisa wrote on 10/18/2003 03:26:38 AM: doesn't get to "1", for a option. 
change Detecting work each header, Please remove me from your list. 
Christopher Gentile, Ph.D. Executive Director, Sagemont Virtual School Office: 305-867-8825 Toll Free: 877-357-0109 Cell: 954-410-8011 This proposal clearly has a lot of support. 
I too favour a single client-feature-advertisement header. 
However, I'd like to caution the group that we won't be able to demonstrate the interoperability of this header, and thus we take the risk that this won't be considered a suitable feature to take to the next standards phase (draft standard). 
I see no problem with defining the exact same header in the redirect spec (or another), with a note that other extensions are encouraged to use the same header. 
Since this community is very good about reusing this kind of solution, I'm not worried that its location will be a problem. 
It's much like the DeltaV preconditions/postconditions framework which has already been reused by ACL and others without needing to modify 2518. 
If there's still consensus to add to 2518bis specifically, let me know (individually is fine) and I'll add it to the document. 
Lisa -----Original Message----- [mailto:w3c-dist-auth-request@w3.org] 
On Behalf Of Elias Sinderson I agree, let's add this to 2518bis - the proposed mechnism is simple and easy for developers to understand. 
Elias I support this addition to RFC2518bis. 
I believe it is a key mechanism needed for servers to properly support the various current (and future) WebDAV extensions. 
Cheers, Geoff Julian wrote on 10/14/2003 09:53:30 AM: it doesn't get a server to (e.g. "1", mechanism for a WebDAV option. 
needs to change clients. 
Detecting will work (specified by each request header, I agree, the best approach would be to specify the basic DAV request header mechanism in 2518bis. 
The other WebDAV specs can then define additional values, thereby indicating other client capabilities. 
The logic behind the DAV request header seems straightforward enough to allow for interoperable implementations before 2518 moves to the draft standard phase. 
Regards, Elias This proposal clearly has a lot of support. 
I too favour a single client-feature-advertisement header. 
However, I'd like to caution the group that we won't be able to demonstrate the interoperability of this header, and thus we take the risk that this won't be considered a suitable feature to take to the next standards phase (draft standard). 
I see no problem with defining the exact same header in the redirect spec (or another), with a note that other extensions are encouraged to use the same header. 
Since this community is very good about reusing this kind of solution, I'm not worried that its location will be a problem. 
It's much like the DeltaV preconditions/postconditions framework which has already been reused by ACL and others without needing to modify 2518. 
If there's still consensus to add to 2518bis specifically, let me know (individually is fine) and I'll add it to the document. 
Lisa Behalf Of Elias Sinderson I agree, let's add this to 2518bis - the proposed mechnism is simple and easy for developers to understand. 
Elias I support this addition to RFC2518bis. 
I believe it is a key mechanism needed for servers to properly support the various current (and future) WebDAV extensions. 
Cheers, Geoff Julian wrote on 10/14/2003 09:53:30 AM: get a option. 
change header, Lisa, group If we define the following: - A DAV: request header MAY be sent by the client indicating compliance to a specific WebDAV feature (in the same syntax as defined for the DAV: response header) *and* - Each protocol extension must explicitly declare what sending a specific feature token indicates *and* - If there's no such definition, clients MUST not send that token (thus we can avoid the situation where clients start enumerating all kinds of extensions although this info is completely useless to the server) then there shouldn't be an issue at all. 
RFC2518bis would just provide the marshalling framework for other specs, and *those* would need to show interoperability. 
The first canditates for actually *using* this IMHO are - binding spec (client indicates that it knows about new bind-loop-detected condition in multistatus response) and - redirect ref spec (client indicates that it knows how to deal with Location info in multistatus) (side note: interestingly, both use cases are about PROPFIND response formats). 
Julian Hi. 
Another thing we'll have to keep in mind is the possible interaction between this header and responses that are both cacheable and vary on the value of this request header... Ideas: - we could just forbid that (the value of the "Dav" request header must not affect cacheable responses) - clarify that whenever the "Dav" request header *does* affect a cacheable response, the server will have to list in the "Vary" response header. 
Julian I see no reason to forbid the value of the Dav request header from affecting cacheable responses, so if we do anything in this regard, I'd do the clarification. 
Cheers, Geoff Julian wrote on 10/20/2003 10:52:11 AM: between of not cacheable If this header can affect caching, then I think we should add "This header MAY affect caching, therefore this header SHOULD NOT be used on GET requests where response caching is most important." 
Lisa 
