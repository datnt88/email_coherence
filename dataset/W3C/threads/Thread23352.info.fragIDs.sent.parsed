(S1 (S (S (VP (VBG Hi) (ADVP (RB there)))) (, ,) (NP (PRP I)) (VP (VP (VB reread) (NP (DT the) (JJ LS) (JJ entire) (NN spec)) (ADVP (RB once) (RBR more))) (CC and) (VP (ADVP (RB here)) (AUX are) (NP (DT some) (NNS comments) (PRN (-LRB- -LRB-) (PP (IN per) (NP (NN section))) (-RRB- -RRB-))))) (. .)))
(S1 (S (NP (PRP$ My) (NNS apologies)) (VP (IN if) (S (NP (PRP it)) (VP (VBZ addresses) (NP (NP (NNS things)) (SBAR (WHNP (WDT that)) (S (VP (AUX have) (ADVP (RB already)) (VP (VBN come) (PRT (RP up)) (ADVP (RB before)))))))))) (. .)))
(S1 (S (PP (IN With) (NP (NP (DT the) (NN exception)) (PP (IN of) (NP (NP (DT the) (NN Exception)) (VP (VBN rant) (PP (IN at) (NP (DT the) (NN end)))))) (PRN (-LRB- -LRB-) (SBAR (WHPP (IN of) (WHNP (WDT which))) (S (NP (PRP I)) (ADVP (RB sincerely)) (VP (VBP hope) (SBAR (S (NP (PRP it)) (VP (VBZ makes) (NP (DT any) (NN sense)) (ADVP (RB ....)))))))) (-RRB- -RRB-)))) (, ,) (NP (PRP it)) (VP (AUX are) (NP (NP (DT all) (JJ minor) (JJ typo) (NN variety) (NNS kinds)) (PP (IN of) (NP (NNS remarks))))) (. .)))
(S1 (FRAG (NP (CD 1.1)) (: -) (`` ``) (FRAG (PP (IN with) (NP (NP (DT the) (NN Loading) (CC and) (NN Saving) (NNS *)) (PP (IN of) (NP (NNP *) (NNP XML))) ('' ''))) (: -) (`` ``) (S (VP (VBZ Provides) (NP (DT the) (NN ability) (S (VP (TO to) (VP (VP (VB examine)) (CC and) (VP (ADVP (RB optionally)) (VB remove) (NP (NNS nodes)) (SBAR (IN as) (S (NP (PRP they)) (VP (AUX are) (VP (AUXG being) (VP (VBN processed) (SBAR (IN while) (S (VP (VBG serializing) (NP (NN DOM) (NNS nodes)) ('' '') (: -) (VP (VBZ Implies) (PP (TO to) (NP (PRP me)))) (: :) (VP (VBZ changes) (NP (DT the) (NN DOM)) (SBAR (IN while) (S (VP (VBG serializing)))))))))))))))))))))))
(S1 (NP (NP (NN 1.2.3+4)) (: -) (`` ``) (S (CC and) (ADVP (RB therefore)) (NP (NNP *) (NNP h)) (VP (VBD *) (PP (IN as) (NP (DT no) (VBN recommended) (NN meaning))) (PP (IN in) (NP (NNP ECMAScript))))) ('' '') (NP (CD 1.3) (NNS DOMIMplementationsLS))))
(S1 (S (: -) (`` ``) (PP (IN on) (NP (DT the) (JJ new) (NN *))) (NP (JJ ly) (NN *)) (VP (VBD created) (NP (NNP LSParser/LSSerializer) ('' '') (PRN (-LRB- -LRB-) (ADJP (RB not) (JJ sure)) (, ,) (RB not) (NP (DT a) (JJ native) (JJ English) (NN speaker)) (-RRB- -RRB-)) (NN LSParser)))))
(S1 (NP (: -) (`` ``) (NN depenedent) ('' '')))
(S1 (NP (: -) (NP (NN http)) (: :) (NP (NP (NNS //www.w3.org/2002/DOMLS)) (PRN (-LRB- -LRB-) (RB not) (NP (CD 2003)) (. ?) (-RRB- -RRB-)))))
(S1 (NP (: -) (`` ``) (NP (VBN encoutered)) ('' '')))
(S1 (FRAG (: -) (`` ``) (S (PP (IN In) (NP (NP (NN addition)) (PP (TO to) (NP (NP (DT the) (NNS parameters)) (VP (VBN recognized) (PP (IN in) (NP (NP (JJ -LSB-DOM) (NN Level)) (ADJP (CD 3) (NN Core) (NN link) (JJ -RSB-) ('' ''))))))))) (: -) (NP (RB still) (CD 4) (NNS clicks)) (VP (TO to) (VP (VB reach) (NP (JJ actual) (NN link)) (PP (IN through) (NP (NNP HTML) (CD spec))) (, ,) (PP (ADVP (IN at) (JJS least)) (IN in) (NP (NP (NNS javadocs)) (QP (RB just) (CD one))))))) (. .)))
(S1 (FRAG (NP (NN LSInput)) (: -) (S (`` ``) (VP (MD will) (ADVP (RB only)) (VP (VB attempt) (S (VP (TO to) (VP (VB fetch) (NP (NP (DT the) (NN resource)) (VP (VBN identified) (PP (IN by) (NP (DT the) (NNP URI) (NN reference) (NN *) (JJ only) (NNS *)))))))))) ('' ''))))
(S1 (FRAG (: -) (SBARQ (WHNP (WP What) (NN error)) (SQ (MD should) (NP (PRP I)) (VP (VB throw) (S (SBAR (IN if) (S (NP (NN application)) (VP (VBZ tries) (S (VP (TO to) (VP (VB use) (NP (NN LSInput)) (PP (IN without) (NP (NP (NN anything)) (VP (VBN specified)))))))))) (, ,) (NP (NN implementation)) (ADJP (JJ specific))))) (. ?))))
(S1 (S (ADVP (RB Later)) (NP (PRP I)) (VP (VBD saw) (SBAR (IN that) (S (NP (NNP LSSerializer)) (VP (AUX has) (NP (JJ no-output-specified) (NN error))))))))
(S1 (S (: -) (`` ``) (SBAR (IN If) (S (NP (DT the) (NN system) (NN identifier)) (VP (AUX is) (NP (DT a) (NN URI))))) (, ,) (NP (DT the) (NN LSParser)) (VP (MD must) (VP (VB resolve) (NP (PRP it)) (ADVP (RB fully)) (PP (IN before) (S (VP (VBG calling) (NP (DT this) (NN method.)) ('' '')))))) (: -) (SBARQ (WHNP (WP What)) (SQ (AUX does) (NP (DT this)) (VP (VP (VB mean) (ADVP (RB exactly))) (, ,) (VP (AUX is) (ADVP (RB there)) (NP (DT an) (NN example))))) (. ?))))
(S1 (S (NP (NP (JJ Relative) (NNS URIs)) (PP (IN like) ('' ') (NP (NNS bla/bla.dtd) (POS ')))) (VP (AUX are) (VP (VBN passed) (SBAR (IN as) (S (VP (AUX is) (, ,) (ADVP (RB right))))))) (. ?)))
(S1 (FRAG (: -) (`` ``) (NP (NP (DT The) (NN namespace)) (PP (IN of) (NP (NP (DT the) (NN resource)) (VP (AUXG being) (VP (VBN resolved)))))) (, ,) (X (FW *) (FW i.e.) (FW *) (NP (NP (DT the) (NN namespace)) (PP (IN of) (NP (DT the) (NNP XML) (NNP Schema)))) ('' '')) (: -) (VP (VBN e.g.) (ADVP (RB instead)) (, ,) (SBAR (IN because) (S (NP (JJ other) (JJ non-W3C) (NNS resources)) (VP (MD may) (VP (AUX have) (NP (JJ namespace) (NNS URIs)) (ADVP (RB too))))))) (. ?)))
(S1 (S (: -) (NP (NN systemId)) (VP (AUX is) (RB not) (VP (VBN mentioned) (SBAR (IN as) (S (VP (MD can) (VP (AUX be) (ADJP (JJ null)) (PRN (-LRB- -LRB-) (PP (IN unlike) (NP (JJ other) (NNS params))) (-RRB- -RRB-)))))))) (. .)))
(S1 (S (ADVP (RB Now)) (NP (PRP I)) (VP (AUX am))))
(S1 (SQ (PP (ADVP (RB totally)) (IN out) (IN of) (NP (NP (PRP$ my) (NN element)) (ADVP (RB here)))) (, ,) (CC but) (MD can) (NP (NNP LS)) (VP (AUX be) (VP (VBN used) (PP (IN for) (S (VP (VBG loading) (NP (NNP HTML) (NNPS DOMs))))))) (. ?)))
(S1 (S (CC And) (SBAR (IN if) (FRAG (ADVP (RB so)))) (, ,) (RB so) (NP (NNP HTML)) (VP (RB not) (VB allow) (NP (NP (JJ only) (JJ public) (NN id)) (PP (IN in) (NP (NNP DOCTYPE))))) (. ?)))
(S1 (FRAG (SBAR (IN If) (S (NP (NN systemId)) (VP (AUX is) (ADJP (JJ obligatory))))) (, ,) (ADVP (RB then)) (RB maybe) (ADJP (JJ nice) (S (VP (TO to) (VP (VB make) (S (ADJP (RB that) (JJ explicit))))))) (. .)))
(S1 (S (S (: -) (`` ``) (NP (DT A) (NNP *) (NNP n) (NNP *) (NN LSInput)) ('' '')) (-LRB- -LRB-) (. ?) (-RRB- -RRB-) (PRN (-LRB- -LRB-) (NP (NP (JJ multiple) (NNS times)) (PP (IN in) (NP (NNP doc)))) (-RRB- -RRB-))))
(S1 (NP (NP (NN LSParserFilter)) (: -) (SQ (AUX Do) (NP (PRP I)) (VP (VB read) (NP (PRP it)) (ADVP (RB correctly)) (SBAR (IN that) (S (NP (NP (DT the) (NNS children)) (PP (IN of) (NP (NN entity) (NN reference) (NNS nodes)))) (VP (MD can) (VP (AUX be) (VP (VBD skipped) (CC or) (VBN rejected)))))) (, ,) (SBAR (IN so) (S (NP (PRP I)) (VP (MD can) (VP (VB get) (NP (NP (NN content)) (PP (IN of) (NP (NP (NN entity) (NNS references)) (SBAR (WHNP (WDT that)) (S (VP (AUX does) (RB not) (VP (VB match) (NP (DT the) (NN DTD)) (PP (IN in) (NP (DT the) (NN result) (NN DOM)))))))))))))))) (. ?) (PRN (-LRB- -LRB-) (NP (RB just) (NN checking)) (, ,) (NP (NP (DT no) (NN problem)) (PP (IN for) (NP (PRP us)))) (-RRB- -RRB-))))
(S1 (NP (NP (NN LSSerializer)) (: -) (S (`` ``) (NP (DT The) (NNP XML) (NN data)) (VP (AUX is) (VP (VBN written) (PP (PP (TO to) (NP (NP (DT a) (NN string)) (CC or) (NP (DT an) (NN output) (NN stream.) ('' '')))) (: -) (CC Or) (PP (TO to) (NP (NP (JJ other) (NN stuff)) (PP (IN like) (NP (DT a) (NN webserver))))))))) (. ?)))
(S1 (S (: -) (`` ``) (NP (NNP EntityReference) (NNS nodes)) (VP (AUX are) (VP (VBN serialized) (PP (IN as) (NP (NP (DT an) (NN entity) (NN reference)) (PP (IN of) (NP (NP (DT the) (NN form)) (`` ``) (NX (NP (NN &amp)) (: ;) (NP (NN entityName)) (: ;)) ('' ''))))) (PP (IN in) (NP (DT the) (NN output))))) (. .)))
(S1 (S (NP (NP (NN Child) (NNS nodes)) (PRN (-LRB- -LRB-) (NP (DT the) (NN expansion)) (-RRB- -RRB-)) (PP (IN of) (NP (DT the) (NN entity) (NN reference)))) (VP (AUX are) (VP (VBN ignored.) ('' '') (: -) (SBAR (IN Unless) (S (NP (NP ('' ') (NNS entities) (POS ')) (NN parameter)) (VP (AUX is) (VP (VBN set) (PP (TO to) (ADJP (JJ false) (, ,) (JJ right))))))))) (. ?)))
(S1 (S (SBAR (IN If) (FRAG (RB not))) (, ,) (NP (PRP I)) (ADVP (RB really)) (VP (VBP want) (S (VP (TO to) (VP (AUX be) (ADJP (JJ able) (S (VP (TO to) (VP (VB get) (ADJP (JJ rid) (PP (IN of) (NP (NN entity) (NNS references)))) (PP (IN during) (NP (NN serialization))) (PP (IN without) (S (VP (VBG touching) (NP (DT the) (NN DOM))))))))))))) (. .)))
(S1 (S (: -) (`` ``) (S (NP (DT The) (NN character) (NN normalization) (NN process)) (VP (VBZ affects) (NP (RB only) (DT the) (NNS data)) (SBAR (IN as) (S (NP (PRP it)) (VP (AUX is) (VP (AUXG being) (VP (VBN written)))))))) (: ;) (S (NP (PRP it)) (VP (AUX does) (RB not) (VP (VB alter) (NP (NP (NP (DT the) (NNP DOM) (POS 's)) (NN view)) (PP (IN of) (NP (DT the) (NN document)))) (SBAR (IN after) (S (NP (NN serialization)) (VP (AUX has) (VP (VBN completed)))))))) (. .) ('' '')))
(S1 (FRAG (: -) (VP (AUX Does) (DT this) (RB not) (ADVP (RB simply)) (VP (VB apply) (PP (TO to) (NP (NP (NN everything)) (VP (VBN related) (PP (TO to) (NP (NN serialization)))))))) (. ?)))
(S1 (FRAG (ADJP (PRN (-LRB- -LRB-) (ADVP (IN if) (RB so)) (, ,) (ADJP (JJ useful) (S (VP (TO to) (VP (VB mention) (PP (IN in) (NP (NN intro))))))) (-RRB- -RRB-)) (JJ Same) (PP (IN for) (NP (JJ namespace) (NN fixup)))) (. .)))
(S1 (S (ADVP (RB Now) (SBAR (IN that) (S (NP (PRP I)) (VP (VBP see) (SBAR (S (NP (EX there)) (VP (AUX is) (NP (DT an) (NN issue)) (ADVP (RB there))))))))) (, ,) (NP (PRP we)) (VP (VBP prefer) (SBAR (IN that) (S (NP (NN serialization)) (ADVP (RB never)) (VP (VBZ changes) (NP (NP (NN DOM)) (PRN (-LRB- -LRB-) (FRAG (NP (NN note)) (: :) (S (NP (PRP we)) (VP (AUX do) (RB not) (VP (VB implement) (NP (NN validation)) (PP (IN during) (NP (NN serialization)))))) (, ,) (SBAR (ADVP (RB perhaps)) (WHNP (WDT that)) (S (VP (VBZ makes) (S (NP (PRP it)) (ADJP (RB very) (JJ hard)))))) (. ?)) (-RRB- -RRB-))))))) (. .)))
(S1 (NP (: -) (`` ``) (NP (NP (NNP Report)) (NP (DT a) (NNP *) (NNP n) (NNP *) (JJ fatal) (NN error))) ('' '')))
(S1 (S (: -) (`` ``) (S (NP (DT The) (NNS parameters)) (`` ``) (ADJP (JJ well-formed)) ('' '')) (, ,) (NP (NP (`` ``) (NNS namespaces) ('' '')) (, ,) (CC and) (NP (`` ``) (JJ namespace-declarations) ('' '') (NN cannot))) (VP (AUX be) (VP (VBN set) (PP (TO to) (NP (JJ false) ('' '') (PRN (: -) (S (NP (DT These)) (VP (VB seem) (S (VP (TO to) (VP (VB give) (NP (NP (DT a) (JJ fair) (NN bit)) (PP (IN of) (NP (NP (NN overhead)) (PRN (-LRB- -LRB-) (NP (RB lot) (JJR more) (NNS checks)) (-RRB- -RRB-)) (, ,) (SBAR (S (NP (PRP I)) (VP (MD 'd) (ADVP (RB rather)) (VP (VB see) (SBAR (IN that) (S (NP (PRP they)) (VP (VP (VB default) (PP (TO to) (ADJP (JJ true))) (PP (IN for) (NP (NNP LSSerializer)))) (, ,) (CC and) (VP (VB leave) (S (VP (VBG setting) (NP (PRP them)) (PP (TO to) (NP (NP (JJ false)) (ADVP (RB up) (PP (TO to) (NP (DT the) (NN implementation))))))))))))))))))))))))))))) (. .)))
(S1 (PRN (-LRB- -LRB-) (ADVP (ADVP (RB Especially)) (SBAR (IN like) (S (NP (DT this)) (VP (MD would) (VP (AUX be) (NP (NP (RB exactly) (DT the) (NN kind)) (PP (IN of) (NP (NN thing) (SBAR (S (NP (NN someone)) (VP (MD would) (VP (VB write) (NP (NP (DT a) (JJ conformance) (NN test)) (PP (IN for) (NP (FW ..) (. .)))))))))))))))) (: ;) (: -) (-RRB- -RRB-)))
(S1 (FRAG (NP (NN LSOutput)) (: -) (`` ``) (S (S (NP (DT This) (NN attribute)) (PRN (-LRB- -LRB-) (VBG encoding) (-RRB- -RRB-)) (VP (AUX has) (NP (DT no) (NN effect)) (SBAR (WHADVP (WRB when)) (S (VP (VBG outputting) (PP (TO to) (NP (NP (DT a) (NN character)) (ADJP (JJ stream.) ('' '') (: -) (JJ nitpick))))))))) (, ,) (RB well) (S (NP (PRP it)) (VP (AUX does) (PP (IN for) (NP (DT the) (NNP XML) (NN declaration))) (VP (VBN written) (PRT (RP out))))) (CC and) (S (PP (IN for) (NP (JJ splitting) (JJ CDATA) (NNS sections))) (NP (PRP I)) (VP (VBP suppose)))) (. ?)))
(S1 (SBARQ (WHNP (WP What)) (SQ (VP (VBZ happens) (SBAR (IN if) (S (S (PP (IN as) (NP (DT a) (NN user))) (NP (PRP I)) (VP (AUX do) (RB not) (VP (VB bother) (S (VP (TO to) (VP (VB set) (NP (DT an) (NN error)) (ADVP (RBR handler)))))))) (, ,) (CC and) (S (NP (NNS IOExceptions)) (VP (VBP occur))))))) (. .)))
(S1 (S (ADVP (RB Maybe)) (NP (NP (DT a) (JJ core) (NN issue)) (SBAR (CC but) (S (NP (PRP they)) (VP (AUX do) (RB n't) (VP (AUX have) (NP (DT that) (JJ many) (NN IOException) (PRN (-LRB- -LRB-) (CC or) (NP (NP (JJ other) (JJ serious) (VBN caught) (NNS Exceptions)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (ADVP (RB seemingly)) (VP (VB dissappear) (PP (IN into) (NP (JJ thin) (NN air)))))))) (-RRB- -RRB-)) (NNS opportunities)) (PP (IN like) (NP (NNP LS)))))))) (VP (AUX has)) (. .)))
(S1 (S (SBAR (X (DT The) (RBR more)) (S (NP (PRP I)) (VP (VBP think) (PP (IN about) (NP (PRP it)))))) (NP (NP (DT the) (NN stranger)) (SBAR (S (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (PRP it)) (VP (AUX is) (NP (DT a) (NNP Load/) (NNP Save) (NN spec))))))))) (VP (VBZ defines) (NP (RB so) (JJ little)) (PP (IN in) (NP (NP (DT the) (NN way)) (PP (IN of) (NP (NN error) (NN handling)))))) (. .)))
(S1 (SQ (AUX Am) (NP (PRP I)) (VP (VBG missing) (NP (NN something))) (. ?)))
(S1 (S (S (SBAR (IN So) (S (S (SBAR (WHNP (WP what)) (S (VP (VBZ happens) (PP (IN in) (NP (NP (NN case)) (PP (IN of) (NP (DT an) (NN IOException)))))))) (, ,) (NP (PRP it)) (VP (VP (AUX 's) (VP (VBN wrapped) (PP (IN in) (NP (NP (DT a) (NN DOMError)) (PRN (-LRB- -LRB-) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (NN exception)) (VP (AUX is) (NP (NP (DT an) (NN object)) (PP (IN in) (NP (NP (DT the) (NNP Java)) (ADJP (JJ binding)))))))) (: ...) (-RRB- -RRB-)))))) (CC and) (VP (VBZ gets) (VP (VBN passed) (PP (TO to) (NP (DT the) (NN error) (NN handler))))))) (CC but) (S (NP (DT that) (NN thing)) (VP (MD can) (RB n't) (ADVP (RB even)) (VP (VB rethrow) (S (NP (PRP it)) (ADJP (ADJP (PRN (-LRB- -LRB-) (SBAR (IN because) (S (NP (DT no)) (VP (VBZ throws) (SBAR (S (S (VP (AUX is) (VP (VBN defined) (PP (IN for) (NP (NN handleError)))))) (, ,) (CC and) (S (NP (NNP IOException)) (VP (AUX is) (NP (DT a) (VBN caught) (NN exception))))))))) (-RRB- -RRB-)) (JJ .So) (RB far) (SBAR (S (NP (PRP we)) (VP (VBD cheated) (PP (IN in) (NP (PRP$ our) (NN implementation))))))) (-LRB- -LRB-) (S (ADVP (RB still)) (VP (AUX had) (NP (NN DOMSystemException))))))))))) (, ,) (NP (PRP I)) (VP (VBD figured) (SBAR (S (NP (NP (DT the) (NN error)) (VP (VBG handling) (NP (NN stuff)))) (VP (MD would) (VP (AUX be) (VP (VBN changed))))))) (-RRB- -RRB-)) (, ,) (CC and) (S (VP (VBD threw) (NP (DT the) (JJ original) (NN exception)) (SBAR (WHADVP (WRB when)) (S (NP (DT no) (NN error-handler)) (VP (AUX was) (VP (VBN set))))))) (. .)))
(S1 (S (ADVP (RB Again)) (NP (PRP I)) (VP (MD may) (VP (AUX be) (VP (VBG missing) (NP (NP (NN something)) (CC but) (NP (NP (DT the) (NN way)) (SBAR (S (NP (PRP I)) (VP (VB interpret) (NP (DT the) (NN spec)) (ADVP (RB now)) (SBAR (IN if) (S (NP (PRP I)) (VP (AUX do) (NP (NP (NNP Document) (NN willThisBeNull)) (X (SYM =))) (NP (JJ implementation.createLSParser) (PRN (-LRB- -LRB-) (NP (CD ....)) (-RRB- -RRB-)) (FW .parseURI) (PRN (-LRB- -LRB-) (`` ``) (SQ (VP (VB file))) (: :)) (NN ///c))))))))))))) (: :) (RB /does_not_exist.xml) ('' '')))
(S1 (S (NP (PRP I)) (VP (VBP get) (NP (DT no) (NN exception))) (. ?)))
(S1 (S (NP (NP (NN DOMError)) (PP (IN on) (NP (NN core)))) (VP (VBZ says) (SBAR (`` ``) (S (S (NP (DT A) (NN SEVERITY_FATAL_ERROR)) (VP (MD will) (VP (VB cause) (S (NP (DT the) (JJ normal) (NN processing)) (VP (TO to) (VP (VB stop))))))) (CC and) (S (NP (NP (DT the) (NN return) (NN value)) (PP (IN of) (NP (NNP DOMErrorHandler.handleError)))) (-LRB- -LRB-) (-RRB- -RRB-) (VP (AUX is) (VP (VBN ignored))) ('' ''))))) (. .)))
(S1 (S (S (INTJ (UH Okay)) (, ,) (ADVP (RB so)) (NP (PRP we)) (VP (VBP stop) (S (VP (VBG processing))))) (, ,) (CC but) (SBARQ (WHNP (WP what)) (SQ (AUX does) (NP (DT that)) (VP (VB mean))) (. ?))))
(S1 (FRAG (RB Not) (NP (NP (DT a) (NN DOMException)) (SBAR (S (NP (PRP I)) (VP (VBP suppose))))) (. ?)))
(S1 (S (NP (NN Kind)) (VP (VBZ regards) (, ,) (ADVP (RB --Sander))) (. .)))
(S1 (NP (NNP s/remove/filter/)))
(S1 (INTJ (JJ Fixed) (. .)))
(S1 (S (NP (PRP It)) (VP (AUX 's) (ADVP (RB already)) (PP (IN in) (NP (DT the) (NNS implementations))) (ADVP (RB now))) (. .)))
(S1 (S (NP (DT No) (NN reason)) (VP (TO to) (VP (VB change) (NP (DT this)) (, ,) (ADVP (IN so) (DT no) (NN change)))) (. .)))
(S1 (INTJ (JJ Fixed) (. .)))
(S1 (S (NP (PRP I)) (VP (VBD added) (NP (NP (DT a) (JJ direct) (NN link)) (PP (TO to) (NP (NNP DOMConfiguration))))) (. .)))
(S1 (INTJ (JJ Fixed) (. .)))
(S1 (S (NP (NNP Correct.)) (VP (VBD Added) (NP (JJ no-input-specified) (NN error))) (. .)))
(S1 (S (NP (DT The) (NN sentence)) (VP (AUX was) (VP (VBN removed) (PP (IN from) (NP (DT the) (NNP LSResourceResolver) (NN description))))) (. .)))
(S1 (NP (NP (NNPS s/)) (: ...) (S (VP (VBG /e.g.) (NP (NP (DT the) (NN target) (NN namespace)) (PP (IN of) (NP (DT the) (NNP XML) (NNP Schema/)))))) (. .)))
(S1 (S (NP (NP (DT The) (`` ``) (NN namespace)) (PP (IN of) (NP (DT the) (NN resource))) ('' '')) (VP (VP (AUX is) (ADJP (NN resource) (JJ dependent))) (CC and) (VP (MD should) (VP (AUX be) (VP (VBN used) (NP (NP (DT a) (NN parameter)) (PP (IN of) (NP (NP (DT the) (NN resource)) (VP (AUXG being) (VP (VBN resolved)))))))))) (. .)))
(S1 (S (ADVP (RB Changed.) (RB now)) (NP (PRP it)) (VP (AUX does)) (. .)))
(S1 (S (S (NP (PRP I)) (VP (MD can) (VP (AUX be) (VP (VBN used) (S (VP (TO to) (VP (VB load) (NP (NNP XHTML) (NNS documents))))))))) (, ,) (CC but) (S (NP (PRP we)) (ADVP (RB never)) (VP (VBD intended) (NP (NP (DT the) (NNS interfaces)) (PP (IN for) (NP (JJ HTML) (NNS documents)))))) (. .)))
(S1 (INTJ (JJ Fixed) (. .)))
(S1 (S (NP (PRP It)) (VP (AUX was) (VP (VBN clarified) (SBAR (IN as) (S (VP (VBZ follows) (: :) (NP (NP (NN method)) (PP (IN on) (NP (DT the) (NN filter))))))))) (. .)))
(S1 (S (SBAR (IN If) (S (NP (DT the) (JJ parameter) (`` ``) (NNS entities) ('' '')) (VP (AUX is) (VP (VBN set) (PP (TO to) (ADJP (JJ true))))))) (, ,) (NP (DT the) (NN entity) (NN reference) (NNS nodes)) (VP (AUX are) (VP (VBN passed) (PP (PP (TO to) (NP (DT the) (NN filter))) (, ,) (CC but) (RB not) (NP (PRP$ its) (NNS children))))) (. .)))
(S1 (S (SBAR (IN If) (S (NP (PRP it)) (VP (AUX is) (VP (VBN set) (PP (TO to) (ADJP (JJ false))))))) (, ,) (S (NP (NP (DT the) (NNS children)) (PP (IN of) (NP (DT the) (NN entity) (NN reference)))) (VP (AUX are) (VP (VBN passed) (PP (TO to) (NP (DT the) (NN filter)))))) (, ,) (CC but) (S (NP (RB not) (DT the) (NN entity) (NN reference)) (VP (VBZ nodes) (SBAR (IN since) (S (NP (PRP they)) (VP (AUX are) (VP (VBN replaced) (PP (IN by) (NP (PRP$ their) (NNS expansions))))))))) (. .)))
(S1 (S (VP (VB Note) (NP (DT that)) (, ,) (SBAR (IN as) (S (VP (VBN described) (PP (IN by) (NP (DT the) (NN parameter)))))))))
(S1 (S (S (`` ``) (NP (NNS entities)) ('' '')) (, ,) (NP (NP (NN entity) (NN reference) (NNS nodes)) (PP (TO to) (NP (JJ non-defined) (NNS entities)))) (VP (AUX are) (ADVP (RB always)) (VP (VBN passed) (PP (TO to) (NP (DT the) (NN filter))))) (. .)))
(S1 (S (NP (JJ Yes.) (DT the) (NN output) (NN stream)) (VP (MD could) (VP (AUX be) (VP (VBN attached) (PP (TO to) (NP (DT an) (JJ HTTP) (NN connection)))))) (. .)))
(S1 (S (NP (DT No) (NNS changes)) (VP (AUX were) (VP (VBN made) (PP (IN in) (NP (DT the) (NN specification))))) (. .)))
(S1 (S (VP (VB correct) (, ,) (`` ``) (SBAR (IN unless) (S (NP (NP (: ') (NNS entities) (POS ')) (NN parameter)) (VP (AUX is) (VP (VBN set) (PP (TO to) (ADJP (JJ false)))))))) (. .)))
(S1 (S (ADVP (ADVP (RB As) (RB long)) (SBAR (IN as) (S (NP (NP (DT the) (NNS children)) (PP (IN of) (NP (DT the) (NN entity) (NN reference)))) (VP (AUX are) (VP (VBN defined)))))) (, ,) (NP (PRP you)) (VP (MD will) (RB n't) (VP (VB get) (NP (DT an) (NN entity) (NN reference) (NN node)) (PP (IN in) (NP (DT the) (JJ serialized) (NN content))))) (. .)))
(S1 (S (NP (DT This) (NN issue)) (VP (VBD left) (PP (IN in) (NP (DT the) (NN specification))) (PP (IN for) (NP (NP (DT the) (NN attention)) (PP (IN of) (NP (DT the) (NNS implementators)))))) (. .)))
(S1 (S (NP (PRP We)) (VP (VBN clarified) (SBAR (IN that) (S (INTJ (UH yes)) (, ,) (NP (NP (DT the) (NN transformation)) (VP (AUX done) (PP (IN during) (NP (DT the) (NN serilization))))) (VP (AUX do) (RB not) (VP (VB affect) (NP (NP (DT the) (JJ DOM) (NN tree)) (, ,) (RB only) (NP (DT the) (JJ serialized) (NN content)))))))) (. .)))
(S1 (INTJ (JJ Fixed) (. .)))
(S1 (S (S (VP (VBG Regarding) (NP (NNS namespaces) (CC and) (NNS namespaces-declarations)))) (, ,) (NP (PRP it)) (VP (AUX has) (VP (AUX been) (VP (VBN clarified) (SBAR (IN that) (S (: :) (: -) (NP (NNS namespaces)) (VP (MD can) (VP (AUX be) (VP (VBN set) (S (VP (TO to) (VP (JJ false) (PP (IN on) (NP (NNP LSSerializer.domConfig)))))))))))))) (. .)))
(S1 (S (: -) (NP (NNS namespace-declarations)) (VP (AUX has) (NP (NN effect)) (SBAR (IN if) (S (NP (NNS namespaces)) (VP (AUX is) (VP (VBN set) (PP (TO to) (ADJP (JJ false)))))))) (. .)))
(S1 (S (-LRB- -LRB-) (SBAR (IN since) (S (NP (DT no) (NN namespace) (NN processing)) (VP (AUX is) (VP (AUX done))))) (, ,) (NP (DT the) (JJ xmlns) (NNS attributes)) (VP (AUX are) (ADVP (RB no) (RB longer)) (NP (NN namespace) (NNS declarations)) (-RRB- -RRB-)) (. .)))
(S1 (S (PP (VBG Regarding) (NP (NN well-formed))) (, ,) (NP (DT this) (NN discussion)) (VP (AUX is) (ADVP (RB still)) (ADJP (JJ on-going))) (. .)))
(S1 (S (NP (DT The) (NN sentence)) (VP (AUX was) (VP (VBN removed))) (. .)))
(S1 (S (NP (PRP It)) (VP (AUX has) (VP (AUX been) (VP (VBN pointed) (PRT (RP out)) (SBAR (IN that) (S (NP (DT this) (NN attribute)) (VP (MD can) (PRN (-LRB- -LRB-) (CC and) (VP (MD should)) (-RRB- -RRB-)) (VP (AUX have) (NP (DT an) (NN effect))))))))) (. .)))
(S1 (NP (NNP Philippe)))
(S1 (S (NP (PRP I)) (VP (AUX 'm) (RB not) (ADJP (JJ sure) (SBAR (S (NP (DT this)) (ADVP (RB entirely)) (VP (VBZ answers) (NP (NP (NNP Sander) (POS 's)) (NN query)) (SBAR (IN as) (S (NP (PRP I)) (VP (VBD understood) (NP (PRP it)))))))))) (. .)))
(S1 (S (S (ADVP (RB Certainly)) (NP (PRP I)) (VP (MD 'd) (VP (VB like) (S (VP (TO to) (VP (VB know) (: :) (SBAR (WHNP (WP What)) (S (VP (VBZ happens) (SBAR (WHADVP (WRB when)) (S (NP (`` ``) (NNS entities) ('' '')) (VP (AUX is) (VP (VBN set) (PP (TO to) (NP (NP (JJ true)) (CC and) (NP (DT the) (JJ LS))))))))))))))))) (: ...) (S (NP (NNP Filter)) (VP (VBZ asks) (SBAR (IN for) (S (NP (DT the) (NN entity) (NN reference) (NN node)) (VP (TO to) (VP (AUX be) (VP (VBD SKIPped)))))))) (. ?)))
(S1 (S (S (NP (NP (CD 1.)) (SBAR (S (NP (DT the) (NN child) (NNS nodes)) (VP (AUX are) (VP (VBN processed) (PP (IN with) (S (NP (DT the) (NN filter)) (VP (VBG receiving) (NP (NNS callbacks)) (PP (IN for) (NP (PRP them)))))) (, ,) (SBAR (IN as) (IN if) (S (NP (`` ``) (NNS entities) ('' '')) (VP (AUX had) (VP (AUX been) (VP (VBN set) (PP (TO to) (ADJP (JJ false) (PP (ADVP (RB just)) (IN for) (NP (DT this) (CD one) (NN entity) (NN reference)))))))))))))) (: ;) (VP (VBG 2.) (S (NP (NP (DT the) (NN entity) (NN reference) (POS 's)) (NN child) (NNS nodes)) (VP (AUX are) (VP (VBN processed) (PP (IN en) (NP (NN bloc))) (, ,) (PP (IN without) (S (VP (VBG calling) (NP (DT the) (NN filter)) (ADVP (RB again)) (ADVP (IN at) (DT all))))))))) (: ;)) (VP (VBD 3.) (SBAR (S (NP (PRP it)) (VP (AUX is) (VP (VBN taken) (PP (IN as) (NP (NP (DT the) (NN equivalent)) (PP (IN of) (S (VP (VBG REJECTing) (NP (DT the) (NN entity) (NN reference)) (, ,) (SBAR (IN so) (S (NP (NN nothing)) (VP (AUX is) (VP (VBN processed)))))))))))))))) (: ;) (S (NP (NNS 4.)) (ADVP (RB explicitly)) (VP (VBD disallowed) (: ;) (S (VP (VBG 5.) (NP (NN implementation) (JJ specific)))))) (. .)))
(S1 (S (-LRB- -LRB-) (ADVP (RB FWIW)) (, ,) (NP (NN pxdom)) (ADVP (RB currently)) (VP (VBZ plumps) (PP (IN for) (NP (NN option) (CD 1)))) (. .) (-RRB- -RRB-)))
(S1 (NP (NNP Andrew) (NNP Clover)))
(S1 (S (NP (PRP I)) (VP (VBP believe) (SBAR (S (NP (PRP it)) (VP (AUX does))))) (. .)))
(S1 (S (NP (PRP You)) (VP (MD will) (ADVP (RB never)) (VP (VB get) (S (NP (DT the) (NNS children)) (VP (VBN passed) (PP (TO to) (NP (DT the) (NN filter))))) (SBAR (IN if) (S (VP (NNS entities) (PP (TO to) (ADJP (JJ true)))))))) (. .)))
(S1 (S (NP (PRP It)) (VP (AUX is) (NP (NN option) (NNS 3.)) (SBAR (IN Since) (S (NP (DT the) (NNS children)) (VP (AUX are) (RB not) (VP (VBN passed) (PP (TO to) (NP (DT the) (NN filter))) (, ,) (S (VP (VBG skipping) (SBAR (S (NP (DT the) (NN entity) (NN reference)) (VP (AUX is) (ADJP (JJ equivalent) (S (VP (TO to) (VP (VB reject) (NP (PRP it)) (PP (IN with) (NP (DT the) (JJ new) (NN wording))))))))))))))))) (. .)))
(S1 (S (ADVP (RB However)) (, ,) (NP (DT the) (NNP Group)) (VP (AUX did) (RB not) (VP (VB consider) (NP (NN case) (CD 1)) (, ,) (SBAR (IN so) (S (NP (PRP we)) (VP (MD might) (ADVP (RB still)) (VP (VB want) (S (VP (TO to) (VP (VB allow) (NP (PRP it))))))))))) (. .)))
(S1 (NP (NNP Philippe)))
(S1 (S (NP (PRP We)) (VP (VP (VBN reconsidered) (NP (DT the) (NN case))) (, ,) (CC and) (VP (VBN found) (S (ADJP (JJ useful) (S (VP (TO to) (VP (VB pick) (NP (NP (NN option) (CD 1)) (PRN (-LRB- -LRB-) (PP (RB instead) (IN of) (NP (DT the) (NN option) (CD 3) (NN status) (NN quo))) (-RRB- -RRB-)))))))))) (. .)))
(S1 (S (NP (PRP You)) (VP (AUX do) (RB n't) (VP (AUX have) (S (VP (TO to) (VP (VB change) (NP (PRP$ your) (NN implementation)) (ADVP (RB then))))))) (. .)))
(S1 (NP (: :) (S (LST (: -)) (-RRB- -RRB-) (NP (NNP Philippe)))))
(S1 (S (PP (IN After) (S (VP (VBG looking) (PP (IN at) (NP (DT that) (CD one)))))) (, ,) (NP (PRP we)) (VP (VBD decided) (NP (NP (DT the) (JJ following) (NNS changes)) (: :) (: -) (S (VP (VB introduce) (NP (NP (DT a) (NN LSException)) (PP (IN with) (NP (NP (ADJP (CD 2) (NN exception)) (NNS codes)) (: :) (NP (NP (NNP PARSE_ERR)) (, ,) (CC and) (NP (NNP SERIALIZE_ERR)))))))))) (. .)))
(S1 (S (NP (VB Parser) (CC or) (VB write) (NNS operations)) (VP (MD may) (VP (VB throw) (NP (DT an) (NN LSException)) (SBAR (IN if) (S (NP (DT the) (NN processing)) (VP (AUX is) (VP (VBN stopped))))))) (. .)))
(S1 (S (NP (DT The) (NN processing)) (VP (MD can) (VP (AUX be) (VP (VBN stopped) (ADJP (JJ due) (PP (TO to) (NP (DT a) (NN DOMError)))) (SBAR (SBAR (IN with) (S (NP (NP (NP (DT a) (NN severity)) (PP (IN of) (NP (NNP DOMError.SEVERITY_FATAL_ERROR)))) (CC or) (NP (DT a) (NN non))) (VP (VBD recovered) (NP (NN DOMError.SEVERITY_ERROR))))) (, ,) (CC or) (SBAR (IN if) (S (NP (NNP DOMErrorHandler.handleError) (-LRB- -LRB-) (-RRB- -RRB-)) (VP (VBD returned) (ADJP (JJ false))))))))) (. .)))
(S1 (NP (NP (NN Note)) (: :) (S (SBAR (IN As) (S (VP (VBN suggested) (PP (IN in) (NP (NP (DT the) (NN definition)) (PP (IN of) (NP (NP (DT the) (NNS constants)) (PP (IN in) (NP (DT the) (NNP DOMError) (NNP interface)))))))))) (, ,) (S (NP (DT a) (NNP DOM) (NN implementation)) (VP (MD may) (VP (VB choose) (S (VP (TO to) (VP (VB continue) (PP (IN after) (NP (DT a) (JJ fatal) (NN error))))))))) (, ,) (CC but) (S (NP (DT the) (JJ resulting) (NN DOM) (NN tree)) (VP (AUX is) (ADVP (RB then)) (ADJP (NN implementation) (JJ dependent))))) (. .)))
(S1 (S (NP (VB parse) (CC and) (VB write) (NNS methods)) (VP (MD can) (VP (VB throw) (NP (NNP PARSE_ERR) (CC and) (NNP SERIALIZE_ERR) (NNS exceptions)) (ADVP (RB respectively)))) (. .)))
(S1 (S (S (NP (PRP We)) (VP (VBG receiving) (NP (DT a) (NN LSException)))) (, ,) (NP (NN DOM) (NNS applications)) (VP (MD should) (VP (VB attach) (NP (NP (DT a) (NN DOMErrorHandler)) (VP (VBG using) (NP (DT the) (JJ parameter) (`` ``) (NN error-handler) ('' '')))) (SBAR (IN if) (S (NP (PRP they)) (VP (VBP wish) (S (VP (TO to) (VP (VB get) (NP (NP (NNS details)) (PP (IN on) (NP (DT the) (NN error)))))))))))) (. .)))
(S1 (NP (NNP Philippe)))
