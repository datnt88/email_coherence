Some basic questions I haven't found answers to yet... they don't appear to be addressed in the developer writeups, or in the archives. 
(BTW, it would be nice to have a search capability on the text of the archives). 
- Is an API available that would enable one to capture and manipulate all HTTP outgoing requests and incoming replies? 
If so, can this be done in Java as well as C? 
- I've seen that the UI of Amaya can be changed by altering config files, but can I alter the UI on the fly or only at start-up? 
- Does Amaya support standard NS/IE plug-ins? 
If not, does it support any kind of plug-in concept? 
- Has anyone embedded an ORB in Amaya? 
In NS, ORBs can only be embedded in applets, not plugins... 
Kind Regards, Paul. 
Paul Pazandak pazandak@objs.com 
Object Services and Consulting, Inc. http://www.objs.com 
Minneapolis, Minnesota 55420-5409 612-881-6498 
In-reply-to: Your message of Thu, 15 Jan 1998 09:47:24 -0600." 
If you use amaya-java version. 
I'm not sure that there is an HTTP API. 
Please contact Yves.Lafon@w3.org 
for that (He is the person in charge of Java HTTP classes used in Amaya). 
But, I know that an API is available to manipulate HTML documents. 
Only at start-up in C version. 
In amaya-java version, it'd be possible to change UI on the fly. 
Yes, but only on Unix platforms (including Linux) at the moment. 
I don't think. 
Regards Irene. 
Sorry, I was away from the office and from my mail for a few days, I hope this answer doesn't come too late. 
Considering the set of question in your initial mail, I would suggest that you have a look at Amaya-Java. 
This is an experimental version of Amaya embedding the Kaffe Java JIT run-time. 
This allow to extend Amaya with Java code. 
This code has access to the Thot internal API used by Amaya and also to the HTTP implementation. 
Amaya-Java uses the client HTTP classes developed for Jigsaw (entierely written in Java) instead of LibWWW for HTTP accesses. 
Hence it is very easy to modify trap the HTTP requests and replies issued from Amaya and to handle them in a specific way. 
This was done for example to build a version of Amaya implementing PICS filtering. 
However, Amaya-Java currently lacks portability, this is mainly due to problem using Kaffe on platforms different than Linux. 
Also Amaya-Java gets a lot less testing than the standard Amaya version. 
There is some provision in the Amaya-Java code to modify some of the Amaya interface dynamically at run-time, however this is largely untested. 
Amaya distribution embed code to support Netscape plugins (this is not by default, you need to recompile your own version). 
The Amaya-Java distribution can be compiled to use ILU, both for HTTP accesses and to export it's internal APIs. 
It is possible to compile Amaya-Java with both ILU and Java, in this case it will use the HTTP stack from Jigsaw, but will still exports it's own APIs from ILU. 
No attempt has been done yet to give full access to ILU core from Amaya. 
But it could certainly be done. 
It's mainly a question of time and priorities, I am the only one supporting Amaya-Java and it's not my main project, I only devote 10 percent of my working schedule to it. 
Amaya-Java : http://www.w3.org/Amaya/User/JavaSourceDist.html 
Linux binaries : http://www.w3.org/Amaya/User/JavaBinDist.html 
ILU : ftp://ftp.parc.xerox.com/pub/ilu/ilu.html 
Daniel Daniel.Veillard@w3.org | MIT/LCS Room NE43-344 | Today's Bookmarks : Tel : +1 617 253 5884 | 545 Technology Square | Linux, WWW, Java, 
