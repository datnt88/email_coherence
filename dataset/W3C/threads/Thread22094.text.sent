Participants: Bob Clary, Netscape Johnny Stenback, Netscape Ray Whitmer, AOL Dimitris Dimitriadis, invited expert Philippe Le H?garet, W3C Agenda Framework license Current state of the framework Exception handling in the framework DOM Level 1 Core in the current test suite Task Force and Chair Schedule Dimitris: Curt is not around? 
Philippe: We discussed framework issues at the f2f meeting last week and we felt that Bob was the right person to contact given he has done on it recently. 
Framework license Philippe: JSUnit is not under the W3C Software license. 
Got feedback that this may be a problem for compagnies in order for them to look at it and fix it. 
Bob: originally, Edward was using GPL. 
He is now using LGPL/Mozilla Public license/GPL. 
Edward is quite open on that. 
Johnny: it may not satisfy those companies if it's under several licences. 
Philippe: can talk to them again and see if they can be satisfied. 
ACTION: Dimitris will follow up on the licence and if something can be done to satisfy those companies (but they may have conflicting issues). 
Framework Philippe: Where are we? 
We have 2 versions: Bob and Edward versions. 
Heard concerns during the technical plenary regarding the JSUnit framework (browser sniffing, exceptions handling). 
Bob: during last summer, modifications were made to JSUnit 1.3.2 in such way that the DOM Test Suite wasn't working anymore. 
Until recently, it wasn't fixed. 
The current CVS version from Edward has been fixed. 
My version does have changes and contains other proposed changes as well, including selection of content type and test implementation attributes. 
Except for a bug, we are waiting for feedback from Apple and Opera before releasing the next version of JSUnit. 
JSUnit 1.3.4 will be identical to my current version. 
The current bug only affects Mozilla on Apple and Opera as well. 
Currently, the DOM test suite does not work in Opera. 
trying to get their feedback. 
Philippe: can help for Opera. 
Dimitris: can help for Apple. 
Bob: we modified the test suite to remove dependencies on HTML getElementById/innherHTML. Nothing browser specific. 
only relies on ECMAScript and some features of DOM Level 0. Philippe: what about exceptions? 
IE does not support the ECMAScript exceptions. 
Bob: IE does support exceptions but they return incorrect error codes. 
Philippe: do we do browser sniffing to avoid those troubles in IE? Bob: not sure... Don't remember if the exception mapping from last spring is still in the test suite. 
Philippe: do we do browser sniffing for the framework? 
Johnny: it may need to do so for the framework itself. 
there is nothing wring with that. 
Bob: no user agent detection. 
only test for support of specific objects. 
Philippe: as long as it doesn't change the result of the tests, it's fine. 
Bob: following feedback from DOM TS and other browsers, we are very close to release a new version. 
we need help from Opera and Apple. 
In contact with Hakon to fix the framework for Opera. 
Contacted David Hyatt from Apple as well. 
For Safari, they are moving rapidly. 
ACTION: Philippe to contact Hakon regarding the test suite, cc Bob Philippe: We currently have a DOM Level 1 Core Test Suite, but DOM Level 1 doesn't exist a Core module. 
It only references Core interfaces. 
DOM Level 1 XML and DOM Level 1 HTML do use those Core interfaces though. 
Johnny: seems a reorganization issue Dimitris: should focus on DOM Level 2 instead. 
- Once the DOM Level 2 test suite is released, we may think about DOM Level 1. TF and Chair Philippe: Following Dimitris's concerns, we discussed the idea of having a kind of Task Force for the DOM Test Suite. 
It will provide an organization of the work. 
However, neither Dimitris or myself do have the cycles for that unfortunately. 
We need someone who can keep track on what's going on, follow up on test submissions, provide a roadmap, organize teleconferences, ... Bob will try to get an answer by the end of the week. 
(Philippe will be on the road for a week starting end of this week) It should be possible to run the ECMAScript tests on a different or custom test framework with an adaption layer and little no changes to the generated tests. 
The Java tests initially supported multiple test frameworks (JUnit and Avalon), but since Avalon was abandoned by ASF there hasn't been any continuing effort to support multiple test frameworks. 
I haven't been able to run JSUnit on Palm's Web Browser 2.0 emulator on Windows and was thinking that might require doing a stripped down test runner. 
The Internet Explorer 5.5 for Windows CE looked like it might be able to run JSUnit as is if you increased the timeouts substantially. 
The layout of JSUnit on Palm's Web Browser 2.0 is pretty bad. 
See I believe both JSUnit 1.3.3 and Bob's version have a annoying problem around line 293 of JsUnitCore.js that raised an exception when displaying the test files in the browser. 
The following change will avoid the problem. 
-if (top.xbDEBUG.on 
&amp;&amp; top.testManager) +if (top.xbDEBUG != null &amp;&amp; top.xbDEBUG.on 
&amp;&amp; top.testManager) 
Earlier adapters for MSXML did "adapt" for COM exceptions as did the original NIST JavaScript test suite. 
Per discussions on the list from last year (or before), that adaptation was removed. 
The only remaining "adaption" for MSXML is to remove the processing instruction used to represent the XML declaration. 
Using PI's to represent the XML declaration was stated to be acceptible by the WG. 
However, since only MSXML displays the behavior to my knowledge and it would add a great deal of complexity to a lot of tests to adapt for this behavior, the simplest way to address the issue is just to have the loader remove it. 
I'll double check, but I don't believe there any remaining sniffing. 
Would be great to have JSUnit and DOM TS support the new PDA browsers. 
I've done a little exploration, but it might require some vendor support too. 
I know that the Konqueror team has been able to run the test suite, but I haven't been able to get Konqueror 3.1 on SuSE 8.0 to run it. 
It would be great if they could provide pointers to getting things set up. 
I hope to have an iteration into the CVS in a few hours. 
Can you provide a tar ball with the generated tests ? 
From what I've remember none of us had been able to get the Java Code working. 
Note that if you receive any patches from Apple they'll probably help with Konqueror problems as well as the code base is almost identical (especially the non-rendering part). 
Harri. 
