In the documentation for initMutationEvent, the descriptions of prevValueArg, newValueArg and attrNameArg specify their values may be NULL. 
The spec is not clear as to whether this means the value is optional, or only that it may be NULL if it is not used for specific MutationEvent types, such as prevValueArg is not used for a DOMSubtreeModified MutationEvent. 
In order to be DOM-compliant, are prevValueArg, newValueArg and attrNameArg required to be non-null for those MutationEvent types for which they apply? 
It seems like supporting this requirement for prevValue could degrade overall UA performance since it could significantly increase the memory requirements and event traffic associated with document modification. 
In many cases, I could see the event being useful without the previous value. 
The impact of newValue isn't as significant since it should also be the node's current value, but it does seem redundant for the same reason. 
Brad Pettit Microsoft Corp. 
The motivation for initMutationEvent is to enable DOM users to dispatch their own events that can be adequately represented using the MutationEvent interface. 
There should not be any requirement that an events generated by a DOM implementation (like the standard mutation events) use initMutationEvent to prepare their events for dispatching. 
The requirements placed on the standard mutation events fired by the dom implementation and the requirements on the parameters are orthogonal. 
For example, a dom user could use initMutationEvent to prepare a MutationEvent of type "ExampleCorp.PriceMarkdown". 
That event might be defined so that prevValue is required to be provided, but initMutationEvent cannot enforce it since it has no knowledge of that event type. 
attrNameArg apply? 
Yes. 
In general mutation events are a performance challenge simply because they're so pervasive and uncontrolled. 
You can do some things with partially deferred computation, or with suppressing events unless there are active listeners; I believe Xerces' implementation demonstrates a few simple ideas along those lines. 
Joe Kesselman / IBM Research The requirements are what I am asking about. 
In the DOMCharacterDataModified variant, is an implementation required to provide a non-NULL prevValue in order to claim compliance? 
As far as the requirements being orthogonal among standard events and custom events, that is not specified. 
There is no Event Exception specified when - for example - the bubbles or cancelable parameters of an "init" method differ from any previously specified behavior. 
Or in the case of a MutationEvent, when a script dispatches a DOMCharacterDataModified event with a NULL prevValue event though prevValue is documented to be available. 
