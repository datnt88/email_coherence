(S1 (SQ (AUX Is) (NP (PRP it)) (ADJP (JJ legal)) (S (VP (TO to) (VP (VB PROPPATCH) (NP (NP (DT the) (NN DAV)) (: :) (NP (NP (NN label-name-set)) (PP (IN on) (NP (DT a) (JJ checked-out) (NN resource)))))))) (. ?)))
(S1 (S (PRN (-LRB- -LRB-) (PP (IN whether) (NP (NP (DT a) (JJ checked-out) (NNP VCR)) (CC or) (NP (DT a) (VBG working) (NN resource)))) (-RRB- -RRB-)) (NP (PRP It)) (VP (VBZ seems) (ADJP (JJ feasible) (PP (TO to) (NP (PRP me)))) (, ,) (PP (IN with) (NP (NP (DT the) (NN caveat)) (PP (IN of) (NP (JJ possible) (NN rejection))) (PP (IN at) (NP (NP (JJ CHECKIN) (PRN (-LRB- -LRB-) (CC or) (VB MERGE) (-RRB- -RRB-)) (NN time)) (ADJP (JJ due) (PP (TO to) (NP (NP (DT a) (NN label) (NN conflict)) (PP (IN with) (NP (NP (DT another) (NN version)) (PP (IN in) (NP (DT the) (NN version) (NN history))))))))))))) (. .)))
(S1 (S (ADVP (RB Specifically)) (, ,) (NP (NP (DT the) (NN problem)) (SBAR (WHNP (WDT that)) (S (NP (PRP I)) (VP (AUX 'm) (VP (VBG considering)))))) (VP (AUX is) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB label) (NP (DT a) (NN baseline)) (PP (IN before) (S (VP (VBG checking) (NP (PRP it)) (PRT (RP in)))))))))) (. .)))
(S1 (S (S (NP (PRP I)) (VP (VBP think) (SBAR (IN that) (S (NP (PRP I)) (VP (AUX 'm) (ADVP (RB also)) (ADJP (JJ okay)) (PP (IN with) (S (VP (VBG labelling) (PP (IN via) (NP (NP (DT a) (JJ second) (NN request)) (PRN (-LRB- -LRB-) (PP (IN after) (NP (DT the) (NN checkin/merge))) (-RRB- -RRB-)))))))))))) (, ,) (CC but) (S (NP (DT that)) (VP (AUX does) (VP (VB lead) (PP (TO to) (NP (NP (DT a) (NN race)) (PP (IN between) (NP (DT the) (NN checkin) (CC and) (NN label))))) (SBAR (IN that) (S (NP (PRP I)) (VP (MD 'd) (VP (VB like) (S (VP (TO to) (VP (VB avoid) (SBAR (IN if) (S (ADJP (JJ possible)))))))))))))) (. .)))
(S1 (FRAG (NP (NNS Cheers)) (, ,) (NP (JJ -g) (NNP Greg) (NNP Stein)) (, ,) (VP (VBN http)) (: :) (NP (CD //www.lyra.org/))))
(S1 (X (X (IN From) (: :) (NP (NNP Greg) (NNP Stein)) (FW gstein) (SYM @)) (NP (NN lyra.org))))
(S1 (SQ (AUX Is) (NP (PRP it)) (ADJP (JJ legal)) (S (VP (TO to) (VP (VB PROPPATCH) (NP (NP (DT the) (NN DAV)) (: :) (NP (NP (NN label-name-set)) (PP (IN on) (NP (DT a) (JJ checked-out) (NN resource)))))))) (. ?)))
(S1 (S (NP (PRN (-LRB- -LRB-) (PP (IN whether) (NP (NP (DT a) (JJ checked-out) (NNP VCR)) (CC or) (NP (DT a) (VBG working) (NN resource)))) (-RRB- -RRB-)) (JJ Only) (NNS versions)) (VP (AUX have) (NP (NP (DT a) (NN DAV)) (: :) (NP (NP (JJ label-name-set) (NN property)) (, ,) (RB not) (NP (JJ version-controlled) (NNS resources)) (CC or) (NP (JJ working) (NNS resources))))) (. .)))
(S1 (S (NP (PRP It)) (VP (VBZ seems) (ADJP (JJ feasible) (PP (TO to) (NP (PRP me)))) (, ,) (PP (IN with) (NP (NP (DT the) (NN caveat)) (PP (IN of) (NP (JJ possible) (NN rejection))) (PP (IN at) (NP (NP (JJ CHECKIN) (PRN (-LRB- -LRB-) (CC or) (VB MERGE) (-RRB- -RRB-)) (NN time)) (ADJP (JJ due) (PP (TO to) (NP (NP (DT a) (NN label) (NN conflict)) (PP (IN with) (NP (NP (DT another) (NN version)) (PP (IN in) (NP (DT the) (NN version) (NN history))))))))))))) (. .)))
(S1 (S (NP (NP (DT The) (NN possibility)) (PP (IN of) (NP (DT a) (`` ``) (NN label) (NN conflict) ('' '')))) (VP (AUX is) (VP (VBN avoided) (PP (IN by) (S (VP (RB only) (AUXG having) (NP (NNS labels)) (PP (IN on) (NP (NNS versions)))))))) (. .)))
(S1 (S (ADVP (RB Specifically)) (, ,) (NP (NP (DT the) (NN problem)) (SBAR (WHNP (WDT that)) (S (NP (PRP I)) (VP (AUX 'm) (VP (VBG considering)))))) (VP (AUX is) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB label) (NP (DT a) (NN baseline)) (PP (IN before) (S (VP (VBG checking) (NP (PRP it)) (PRT (RP in)))))))))) (. .)))
(S1 (S (S (NP (PRP I)) (VP (VBP think) (SBAR (IN that) (S (NP (PRP I)) (VP (AUX 'm) (ADVP (RB also)) (ADJP (JJ okay)) (PP (IN with) (S (VP (VBG labelling) (PP (IN via) (NP (NP (DT a) (JJ second) (NN request)) (PRN (-LRB- -LRB-) (PP (IN after) (NP (DT the) (NN checkin/merge))) (-RRB- -RRB-)))))))))))) (, ,) (CC but) (S (NP (DT that)) (VP (AUX does) (VP (VB lead) (PP (TO to) (NP (NP (DT a) (NN race)) (PP (IN between) (NP (DT the) (NN checkin) (CC and) (NN label))))) (SBAR (IN that) (S (NP (PRP I)) (VP (MD 'd) (VP (VB like) (S (VP (TO to) (VP (VB avoid) (SBAR (IN if) (S (ADJP (JJ possible)))))))))))))) (. .)))
(S1 (S (PP (IN With) (NP (DT the) (JJ current) (NN protocol))) (, ,) (NP (PRP you)) (VP (MD would) (VP (AUX have) (S (VP (TO to) (VP (AUX do) (NP (DT the) (VBG labeling)) (PP (IN in) (NP (NP (DT a) (JJ second) (NN request)) (PRN (-LRB- -LRB-) (SBAR (IN after) (S (NP (DT the) (NN version)) (VP (AUX was) (VP (VBN created))))) (-RRB- -RRB-))))))))) (. .)))
(S1 (SBAR (WHNP (WP What)) (S (VP (AUX is) (NP (DT the) (NN race))))))
(S1 (FRAG (NP (NN condition)) (S (NP (PRP you)) (VP (AUX were) (VP (VBN concerned) (PP (IN about))))) (. ?)))
(S1 (SBARQ (CC And) (WHADVP (WRB how)) (SQ (MD would) (NP (PRP it)) (VP (AUX be) (VP (VBN addressed) (PP (IN by) (S (VP (VBG allowing) (NP (NP (DT a) (NN label)) (PP (IN on) (NP (DT a) (JJ working) (NN baseline)))))))))) (. ?)))
(S1 (NP (NNP Cheers) (, ,) (NNP Geoff)))
(S1 (NP (NP (DT The) (NN race)) (PP (IN between) (NP (NP (NP (DT the) (NN creation)) (PP (IN of) (NP (DT the) (NN baseline)))) (CC and) (NP (NP (DT the) (NN application)) (PP (IN of) (NP (DT the) (NN label)))))) (. .)))
(S1 (S (S (NP (NNP Hmm)) (VP (VBZ ..)) (. .)) (CC but) (S (NP (DT that)) (ADVP (RB probably)) (VP (AUX does) (RB n't) (VP (VB matter) (NP (DT that) (JJ much))))) (. .)))
(S1 (S (NP (DT The) (NN baseline)) (ADVP (RB just)) (VP (AUX is) (RB n't) (ADJP (JJ accessible)) (PP (IN by) (NP (NP (DT a) (NN label)) (PP (IN for) (NP (DT that) (NN period)))))) (. .)))
(S1 (S (NP (PRP You)) (VP (MD could) (VP (AUX have) (NP (NP (DT the) (NN label)) (PP (IN for) (NP (NP (DT the) (NN baseline)) (ADJP (JJ available) (PP (IN at) (NP (NP (DT the) (NN moment)) (SBAR (S (NP (DT the) (NN baseline)) (VP (AUX is) (VP (VBN created))))))))))))) (. .)))
(S1 (S (S (NP (NNP Hmm)) (VP (VBZ ..)) (. .)) (CC but) (S (NP (DT this)) (VP (MD would) (RB n't) (ADVP (RB even)) (VP (VB solve) (NP (NP (DT the) (JJ basic) (NN problem)) (SBAR (WHNP (IN that)) (S (NP (PRP I)) (VP (AUX 'm) (PP (IN after))))))))) (: :) (S (NP (NNP SVN)) (VP (MD will) (ADVP (RB automatically)) (VP (VB label) (NP (NP (DT a) (NN baseline)) (PP (IN for) (NP (JJ later) (NN access))))))) (. .)))
(S1 (S (NP (DT The) (NN question)) (VP (AUX is) (SBARQ (WHADVP (WRB how)) (SQ (MD can) (NP (DT the) (NNP SVN) (NN client)) (VP (VB compensate) (PP (IN for) (NP (NP (NNS servers)) (SBAR (WHNP (WDT that)) (S (ADVP (RB *)) (VP (AUX do) (RB n't) (VP (VB *) (NP (JJ auto-label) (NNS baselines)) (PP (IN in) (NP (DT some) (NN way))))))))))))) (. ?)))
(S1 (S (S (NP (PRP I)) (VP (AUX have) (VP (VBN figured) (PRT (RP out)) (PRN (, ,) (ADVP (RB though)) (, ,)) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB discover) (NP (DT the) (NNS auto-labels))))))))) (: --) (S (NP (PRP I)) (VP (MD 'll) (ADVP (RB just)) (VP (VB ask) (PP (IN for) (NP (NP (DT the) (NN DAV)) (: :) (NP (NP (NN label-name-set)) (PP (IN in) (NP (DT the) (VB MERGE) (NN operation))))))))) (. .)))
(S1 (S (NP (PRP It)) (VP (MD will) (VP (AUX be) (NP (ADJP (ADJP (JJ non-empty) (PP (IN for) (NP (DT the) (JJ new) (NN baseline) (NN resource)))) (, ,) (CC and) (ADJP (JJ empty) (PP (IN for) (NP (PDT all) (DT the) (JJ new) (NN version))))) (NNS resources)))) (. .)))
(S1 (S (`` -LSB-) (S (NP (PRP it)) (VP (MD would) (VP (AUX be) (ADJP (JJ nice) (S (VP (TO to) (VP (VB return) (NP (NN nothing)) (PP (IN at) (NP (DT all))))))) (PRN (-LRB- -LRB-) (PP (FW e.g.) (NP (NP (DT no) (NN DAV)) (: :) (NP (JJ label-name-set/) (JJ empty) (NN element)))) (-RRB- -RRB-)) (SBAR (IN for) (S (NP (DT the) (NN version)) (VP (NNS resources))))))) (, ,) (CC but) (S (NP (DT that)) (VP (VBZ seems) (NP (NP (JJ illegal) (JJ -RSB-) (NNS Cheers)) (, ,) (ADJP (JJ -g) (NP (NP (NNP Greg) (NNP Stein)) (, ,) (NP (CD http))))) (: :) (ADVP (RB //www.lyra.org/))))))
(S1 (X (X (IN From) (: :) (NP (NNP Greg) (NNP Stein)) (FW gstein) (SYM @)) (NP (NN lyra.org))))
(S1 (S (NP (NNP SVN)) (VP (MD will) (ADVP (RB automatically)) (VP (VB label) (NP (NP (DT a) (NN baseline)) (PP (IN for) (NP (JJ later) (NN access)))))) (. .)))
(S1 (S (NP (DT The) (NN question)) (VP (AUX is) (SBARQ (WHADVP (WRB how)) (SQ (MD can) (NP (DT the) (NNP SVN) (NN client)) (VP (VB compensate) (PP (IN for) (NP (NP (NNS servers)) (SBAR (WHNP (WDT that)) (S (ADVP (RB *)) (VP (AUX do) (RB n't) (VP (VB *) (NP (JJ auto-label) (NNS baselines)) (PP (IN in) (NP (DT some) (NN way))))))))))))) (. ?)))
(S1 (S (SBAR (IN If) (S (NP (DT the) (NNP SVN) (NN client)) (VP (VBZ depends) (PP (IN on) (`` ``) (NP (NP (NN auto-label) (`` ``) (NNP ing)) (PP (IN of) (NP (DT any) (NN kind)))))))) (, ,) (ADVP (RB then)) (NP (PRP it)) (VP (AUX is) (ADJP (JJ likely) (S (VP (TO to) (VP (AUX have) (NP (NP (NN trouble)) (PP (IN with) (NP (DT any) (JJ non-SVN) (NN client)))) (, ,) (SBAR (IN since) (S (SBAR (RB even) (IN if) (S (NP (PRP it)) (VP (AUX did) (ADJP (JJ auto-label))))) (, ,) (NP (PRP it)) (VP (AUX is) (ADJP (RB extremely) (JJ unlikely)) (SBAR (IN that) (S (NP (PRP it)) (VP (MD will) (VP (VB use) (NP (DT the) (JJ same) (VBG labeling) (NN scheme)) (SBAR (IN as) (S (NP (NNP SVN)) (VP (VBZ uses) (PRN (-LRB- -LRB-) (NP (VBG increasing) (NNS integers)) (, ,) (SBAR (IN as) (S (NP (PRP I)) (VP (VBP recall)))) (-RRB- -RRB-))))))))))))))))) (. .)))
(S1 (SQ (MD Can) (RB n't) (NP (PRP you)) (VP (VB make) (S (NP (DT the) (NNP SVN) (NN client)) (ADVP (RB just)) (VP (VB use) (NP (DT the) (NN baseline-URL))) (, ,) (PP (RB instead) (IN of) (S (VP (VBG depending) (PP (IN on) (NP (NP (DT a) (JJ linear) (NN sequence)) (PP (IN of) (NP (NNS integers)))))))))) (. ?)))
(S1 (S (-LRB- -LRB-) (NP (NP (PRP$ Your) (NN answer)) (PP (TO to) (NP (DT this)))) (VP (MD might) (VP (VB point) (NP (NP (DT a) (NN way)) (PP (IN towards) (NP (DT an) (JJ interoperable) (NN approach)))))) (-RRB- -RRB-) (. .)))
(S1 (S (S (NP (PRP I)) (VP (AUX have) (VP (VBN figured) (PRT (RP out)) (PRN (, ,) (ADVP (RB though)) (, ,)) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB discover) (NP (DT the) (NNS auto-labels))))))))) (: --) (S (NP (PRP I)) (VP (MD 'll) (ADVP (RB just)) (VP (VB ask) (PP (IN for) (NP (NP (DT the) (NN DAV)) (: :) (NP (NP (NN label-name-set)) (PP (IN in) (NP (DT the) (VB MERGE) (NN operation))))))))) (. .)))
(S1 (S (NP (PRP It)) (VP (MD will) (VP (AUX be) (NP (ADJP (ADJP (JJ non-empty) (PP (IN for) (NP (DT the) (JJ new) (NN baseline) (NN resource)))) (, ,) (CC and) (ADJP (JJ empty) (PP (IN for) (NP (PDT all) (DT the) (JJ new) (NN version))))) (NNS resources)))) (. .)))
(S1 (S (NP (DT That)) (VP (AUX is) (ADJP (JJ true))) (. .)))
(S1 (SQ (SBAR (IN If) (S (NP (PRP you)) (VP (VBP get) (PRT (RP back)) (NP (DT no) (NNS auto-labels))))) (, ,) (MD will) (NP (DT the) (NNP SVN) (NN client)) (ADVP (RB still)) (VP (AUX be) (ADJP (JJ able) (S (VP (TO to) (VP (VB work)))))) (. ?)))
(S1 (S (`` -LSB-) (S (NP (PRP it)) (VP (MD would) (VP (AUX be) (ADJP (JJ nice) (S (VP (TO to) (VP (VB return) (NP (NN nothing)) (PP (IN at) (NP (DT all) (PRN (-LRB- -LRB-) (NP (NP (CD e.g.) (RB no) (NNP DAV)) (: :) (NP (JJ label-name-set/) (JJ empty) (NN element))) (-RRB- -RRB-)))))))) (PP (IN for) (NP (DT the) (NN version) (NNS resources)))))) (, ,) (CC but) (S (NP (DT that)) (VP (VBZ seems) (NP (NP (JJ illegal) (NN -RSB-)) (SBAR (S (NP (PRP I)) (VP (VBP imagine) (SBAR (S (NP (JJS most) (JJ robust) (NNS clients)) (VP (MD will) (VP (VB treat) (NP (NN nothing)) (PP (IN at) (NP (NP (DT all) (ADJP (RB as) (JJ equivalent) (PP (TO to) (NP (DT an) (JJ empty) (NN property) (NN element))) (, ,) (SBAR (IN so) (S (NP (PRP I)) (VP (MD 'd) (VP (VB think) (SBAR (S (NP (DT either) (NN way)) (VP (MD would) (VP (AUX be) (ADJP (JJ OK))))))))))) (. .) (PRN (-LRB- -LRB-) (SQ (CC Or) (AUX is) (NP (DT this) (NN distinction)) (ADJP (JJ important) (PP (TO to) (NP (DT some) (NNS clients)))) (. ?)) (-RRB- -RRB-)) (NNP Cheers)) (, ,) (NP (NNP Geoff))))))))))))))))
