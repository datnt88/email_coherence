Maybe Jason can take a look and see if he agrees. 
Below is a list of the 62 errors/failures reported by IE6 when running Bob Clary's jsUnit 1.3.0. 
I've looked at the tests results and have come up with the following summary. 
Test Name Test Status Test error reported (My opinion) HTMLAppletElement07 Test OK expected string but returned number HTMLAppletElement09 Test OK expected string but returned number HTMLAreaElement06 CASE problem expected rect but returned RECT (Test needs changed) HTMLBaseFontElement03 Test OK expected string but returned number HTMLButtonElement08 Test OK expected Reset Disabled Button but returned Reset HTMLDocument02 Test Problem referrer - wrong expected value in test (Test needs changed) HTMLDocument03 Test Problem domain - wrong expected value in test (Test needs changed) HTMLDocument08 Test OK applets attribute within object element HTMLImageElement04 Test OK expected number but returned string HTMLInputElement06 Test OK expected bottom - nothing returned HTMLIsIndexElement01 Test OK Asize error only one ISINDEX element found HTMLIsIndexElement02 Test OK Asize error only one ISINDEX element found HTMLIsIndexElement03 Test OK Asize error only one ISINDEX element found HTMLObjectElement11 Test OK expected string but returned number HTMLObjectElement16 Test OK expected string but returned number HTMLPreElement01 Test OK expected number but returned string HTMLSelectElement03 Test OK nothing selected should return -1 HTMLSelectElement08 CASE problem New test commited with ignoreCase=auto HTMLTableCellElement09 CASE problem expected 00FFFF but returned #00ffff (Test needs changed) HTMLTableCellElement10 CASE problem expected FF0000 but returned #ff0000(Test needs changed) HTMLTableCellElement11 Test OK expected : but returned "blank" HTMLTableCellElement12 Test OK expected : but returned "blank" HTMLTableCellElement13 Test OK expected 1 but returned "blank" HTMLTableCellElement14 Test OK expected 1 but returned "blank" HTMLTableColElement03 Test OK expected * but returned "blank" HTMLTableColElement04 Test OK expected $ but returned "blank" HTMLTableColElement05 Test OK expected 20 but returned "blank" HTMLTableColElement06 Test OK expected 15 but returned "blank" HTMLTableElement07 CASE problem New test commited with ignoreCase=auto HTMLTableElement08 CASE problem New test commited with ignoreCase=auto HTMLTableElement09 CASE problem New test commited with ignoreCase=auto HTMLTableElement31 Test OK Asize error value returned by tBodies should be 0 not 1 HTMLTableElement34 Test OK Exception Test HTMLTableElement35 Test OK Exception Test HTMLTableElement36 Test OK Exception Test HTMLTableElement37 Test OK Exception Test HTMLTableElement38 Test OK Exception Test HTMLTableRowElement07 CASE problem expected #00FFFF but returned #00ffff HTMLTableRowElement08 Test OK expected * but returned "blank" HTMLTableRowElement09 Test OK expected 1 but returned "blank" HTMLTableRowElement15 Test OK Exception Test HTMLTableRowElement16 Test OK Exception Test HTMLTableRowElement17 Test OK Exception Test HTMLTableRowElement18 Test OK Exception Test HTMLTableRowElement19 Test OK Exception Test HTMLTableSectionElement03 Test OK Asize error Finds 2 tbody elements instead of 1 HTMLTableSectionElement04 Test OK expected * but returned "blank" HTMLTableSectionElement05 Test OK expected + but returned "blank" HTMLTableSectionElement06 Test OK Asize error Finds 2 tbody elements instead of 1 HTMLTableSectionElement07 Test OK expected 1 but returned "blank" HTMLTableSectionElement08 Test OK expected 2 but returned "blank" HTMLTableSectionElement09 Test OK Asize error Finds 2 tbody elements instead of 1 HTMLTableSectionElement12 Test OK Asize error Finds 2 tbody elements instead of 1 HTMLTableSectionElement15 Test OK Asize error Finds 2 tbody elements instead of 1 HTMLTableSectionElement18 Test OK Asize error Finds 2 tbody elements instead of 1 HTMLTableSectionElement21 Test OK Asize error Finds 2 tbody elements instead of 1 HTMLTableSectionElement24 Test OK Asize error Finds 2 tbody elements instead of 1 HTMLTableSectionElement25 Test OK Exception Test HTMLTableSectionElement26 Test OK Exception Test HTMLTableSectionElement27 Test OK Exception Test HTMLTableSectionElement28 Test OK Exception Test HTMLTableSectionElement29 Test OK Exception Test The color test failures are interesting: HTMLTableCellElement09 CASE problem expected 00FFFF but returned #00ffff (Test needs changed) HTMLTableCellElement10 CASE problem expected FF0000 but returned #ff0000(Test needs changed) HTMLTableRowElement07 CASE problem expected #00FFFF but returned #00ffff I believe these tests also (or similar) fail in Mozilla. 
Note these are not exhibiting ignoreCase="auto" behavior where tag and attributes names are uppercased by the implementation. 
The bkcolor values in at least some of the test documents are invalid, for example tablecell.html 
contains "00FFFF" and "FF0000" which are invalid according to should be "#00FFFF" and "#FF0000"). 
Bringing the source document into compliance MIGHT eliminate the case case normalization, but might not. 
The HTML DOM document does not hint at any particular normalization of color values. 
For example, it does not say that if bkcolor="aqua" appears in the source document, whether it is appropriate to return "#00FFFF". 
The previous HTML link mentions that the color values are case-insensitive. 
I would recommend: a) changing tablecell.html 
and tablecell.xml 
to add missing hash on color codes. 
b) changing ignoreCase to true (not auto) c) Running parallel cases where red and aqua are used instead of their hex equivalents and see if you get hex or color names back. 
d) Maybe some statement in the spec about the acceptable normalization of color values. 
Continuing a thread started in This is similar to the color tests described earlier in the day. 
There is no specific instruction in addresses the allowable changes to the case of attribute values (though element and attribute tag names are explicitly addressed). 
I think it would be good to extend a case-insensitive comparision cause to include any attribute value designated as case-insensitive in the HTML recommendation. 
Otherwise, we are just bending the tests to meet the deployed implementations. 
