These are refinements and additions to the minimum functions proposed by Kitch[1] for single command functions. 
For hypertext documents: 1. Move focus to next active element 2. Move focus to previous active element 3. Select link 4. Change state of control with focus (checkbox, radio group) 5. Move to previous resource in history list (back function) 6. Move to next resource in history list (forward function) 7. Refresh current resource 8. Move next piece of content into the current viewport (Page Down) 9. Move previous piece of content into the current viewport (Page Up) 10. Move next line of content into the current viewport (Down Arrow) 11. 
Move previous line of content into the current viewport (Down Arrow) 12. Search for text 13. 
Search again for same text 14. 
Stop loading resource 15. 
Go to history list 16. 
Add current resource to favorites list 17. Go to favorites list 18. Increase font size 19 Decrease font size 20. 
Open new resource For multi-media: 1. Start playing 2. Stop playing 3. Fast forward 4. Rewind 5. Pause 6. Increase volume 7. Decrease volume [1] http://lists.w3.org/Archives/Public/w3c-wai-ua/2000AprJun/0525.html 
Jon Gunderson, Ph.D., ATP Coordinator of Assistive Communication and Information Technology Division of Rehabilitation - Education Services MC-574 College of Applied Life Studies University of Illinois at Urbana/Champaign 1207 S. Oak Street, Champaign, IL 61820 Voice: (217) 244-5870 E-mail: jongund@uiuc.edu 
WWW: http://www.staff.uiuc.edu/~jongund 
WWW: http://www.w3.org/wai/ua Jon, Thanks for the refined list. 
Recently Mark and I had a brief discussion about using single keystroke commands to move back, for example back to the previous element or link. 
Since, shift plus a key, is pretty much a convention for reversing we wondered if having a single keystroke command would be problematic. 
For example, currently shift + tab is used to move back a link. 
If a user agent offers a single keystroke for that same function would it confuse users more than help them. 
Just a thought for discussion. 
Kitch Kitch, Remember this is a list of functions the user can configure for one step/command access. 
The default keyboard configuration can and should use system conventions (i.e. the windows convention you suggest). 
Jon Jon Gunderson, Ph.D., ATP Coordinator of Assistive Communication and Information Technology Division of Rehabilitation - Education Services MC-574 College of Applied Life Studies University of Illinois at Urbana/Champaign 1207 S. Oak Street, Champaign, IL 61820 Voice: (217) 244-5870 E-mail: jongund@uiuc.edu 
WWW: http://www.staff.uiuc.edu/~jongund 
WWW: http://www.w3.org/wai/ua 
And it depends VERY much on the user paradigm. 
I use up arrow and down arrow to move forward or backward through links, and that seems pretty intuitive to me... Charles McCN Kitch, Remember this is a list of functions the user can configure for one step/command access. 
The default keyboard configuration can and should use system conventions (i.e. the windows convention you suggest). 
Jon is used to move Jon Gunderson, Ph.D., ATP Coordinator of Assistive Communication and Information Technology Division of Rehabilitation - Education Services MC-574 College of Applied Life Studies University of Illinois at Urbana/Champaign 1207 S. Oak Street, Champaign, IL 61820 Voice: (217) 244-5870 E-mail: jongund@uiuc.edu 
WWW: http://www.staff.uiuc.edu/~jongund 
WWW: http://www.w3.org/wai/ua W3C Web Accessibility Initiative http://www.w3.org/WAI Location: I-cubed, 110 Victoria Street, Carlton VIC 3053 Postal: GPO Box 2476V, Melbourne 3001, Australia Hi Jon, I mostly agree with this list. 
My comments below. 
Checkpoints are numbered according to the 7 July draft [1] [1] http://www.w3.org/WAI/UA/WD-UAAG10-20000707 Yes, this is a P1 requirement (7.3) No, this is only a P2 requirement (7.4) Change "select" to "activate". 
I don't agree with this one. 
Also, there are some controls that require more than one keystroke to change (e.g., an HTML text box). 
Yes, this supposes a history mechanism, which is subject to applicability. 
Yes. 
Yes. 
Instead: move the start of the viewport in content to the current end of the viewport. 
The abstract notion of page depends on the dimensions of the viewport. 
Note that for viewports without dimension, page down means nothing (and I think the above description still works). 
Adjust comments from 8. A line in this sense is an artifact of a graphical rendering. 
If we require it, we should note that it's for graphical (and perhaps tactile) user agents. 
Same. 
Ok. Ok. 
The distinction from 12 is that the user isn't required to enter the same text again. 
Ok. 
I don't think this is a P1 requirement, as long as you can serially navigate the history (required above). 
I don't think this is a P1 requirement for single key access. 
I would note that applicability also kicks in here for those UAs that don't offer a favorites list. 
I don't think this is a P1 requirement for single key access. 
For graphical UAs only. 
Same. 
I understand this to mean allow the user to select a resource either by typing the URI OR by allowing the user to select piecemeal the path to the resource. 
It should be made clear which is meant. 
Start playing from the start or from where the presentation has been paused. 
I presume this means for the selected media object. 
stop playing and the next start will start from the beginning. 
Ok Ok Ok. Global volume, I presume. 
Or does this mean the selected audio object? 
Ok. Ian Jacobs (jacobs@w3.org) http://www.w3.org/People/Jacobs Cell: +1 917 450-8783 AG:: How about "advance [one] viewport" and "retreat [one] viewport"? 
Text following these short names would explain that [one] reflects a step-size through the content which defaults to the scope of a viewport but may (it is preferred to) be user-configurable. 
There needs to be some sort of thought to how this relates to the pwWebSpeak interface where one can step by a browser-defined phrase-sized chunk. 
This is the most scientific definition I have seen yet of an audio-display viewport. 
So there are issues of two devices attached to different viewports and which is the master viewport in terms of defining this step advance through the bulk content. 
Al AG:: I would poll the users explicitly before dropping these. 
They are very important for independence, as it is hard enough to find sites you can use. 
Saving links to these so they are "follow a link" away instead of "enter an URL" away makes a _very_ important difference. 
Al I just want to note that we have no requirement on the user agent to implement a bookmarks feature. 
Having a P1 requirement to provide single command access to such a feature is problematic for me. 
Unless we add a P1 requirement to implement such a feature. 
Most of the other bindings in the proposed list have corresponding checkpoints (e.g., navigation of active elements). 
So, I think we need to make the requirement explicit in order to determine the appropriate priority level. 
I don't think that single command access to a P2 required functionality should be P1. - Ian Ian Jacobs (jacobs@w3.org) http://www.w3.org/People/Jacobs Cell: +1 917 450-8783 JRG: Checkpoint 10.5 is currently a P2 requirement. 
I don't understand what functionality you are referring to as a P1 requirement. 
Could you explain? 
Thanks, Jon Jon Gunderson, Ph.D., ATP Coordinator of Assistive Communication and Information Technology Division of Rehabilitation - Education Services MC-574 College of Applied Life Studies University of Illinois at Urbana/Champaign 1207 S. Oak Street, Champaign, IL 61820 Voice: (217) 244-5870 E-mail: jongund@uiuc.edu 
WWW: http://www.staff.uiuc.edu/~jongund 
WWW: http://www.w3.org/wai/ua 
The list of functionalities one must be able to activate with a single command includes adding a page to one's favorites. 
But the UA Guideilnes does not require that the UA implement a favorites mechanism. 
If we require a binding to a function then that implies that we also are requiring the function. 
Unless the applicability clause is invoked. 
And that has not been made clear. 
Therefore, choose one of the following: 1) Add a requirement to have a favorites functionality. 
2) Remove the functionalities related to favorites from the list of required bindings. 
3) Indicate clearly that some of the bindings only apply if the feature has been implemented (e.g., history mechanism, favorites, mechanism, etc.). 
Also indicate that some of the bindings are for functionalities that are required by the UA Guidelines (e.g., navigation to active elements). 
- Ian Ian Jacobs (jacobs@w3.org) http://www.w3.org/People/Jacobs Cell: +1 917 450-8783 Ian, I was under the assumption that we using the applicability clause, just like with other checkpoints. 
If you have this function provide single key access. 
Did anyone have another understanding? 
3) Indicate clearly that some of the bindings only apply if the feature has been implemented (e.g., history mechanism, favorites, mechanism, etc.). 
Also indicate that some of the bindings are for functionalities that are required by the UA Guidelines (e.g., navigation to active elements). 
Jon Jon Gunderson, Ph.D., ATP Coordinator of Assistive Communication and Information Technology Division of Rehabilitation - Education Services MC-574 College of Applied Life Studies University of Illinois at Urbana/Champaign 1207 S. Oak Street, Champaign, IL 61820 Voice: (217) 244-5870 E-mail: jongund@uiuc.edu 
WWW: http://www.staff.uiuc.edu/~jongund 
WWW: http://www.w3.org/wai/ua 
