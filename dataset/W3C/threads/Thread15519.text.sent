Is XSL likely to include any of the tree transformation capabilities offered by DSSSL? 
There is a need for a widely deployed mechanism that will allow documents conforming to XML DTD's to be transformed, in accordance with rules provided by the developer of the DTD, into HTML 4.0 for purposes of accessibility. 
I realise that the above question falls outside the topic of the HC list, so it may be better to continue the discussion of this topic by private e-mail until the PF list is formed. 
From:Jason White [SMTP:jasonw@ariel.ucs.unimelb.EDU.AU] Sent:Thursday, November 20, 1997 21:51 Subject:XSL and document transformations for XML accessibility Jason Is XSL likely to include any of the tree transformation capabilities DP:Yes, most definately. 
DP: Can be done with DSSSL, or other tools. 
Suggest SGMLC, Omnimark and others are fully capable of this sort of work. 
Regards DaveP e-mail dpawson@rnib.org.uk 
From:Jason White [SMTP:jasonw@ariel.ucs.unimelb.EDU.AU] 
I would be interested to see evidence of this definite statement. 
The XSL submission appears to omit all mention of the tree transformation capabilities of DSSSL, and uses only rhe flow object construction (stylesheet) stage. 
Yes, there is. 
It appears that XSLwill not provide this capability, however. 
Transformation from one DTD to another turns out to be hard, if there is a requirement to generate conforming document instances and to retain semantics. 
If the requirement is only to generate a document that is well formed (in the XML sense) as opposed to conformant to a particular DTD, the job becomes somewhat easier. 
Do either of these implement the tree transformation capabilities of DSSSL? 
Chris Lilley, W3C [ http://www.w3.org/ ] Graphics and Fonts Guy The World Wide Web Consortium chris@w3.org 
2004 Rt des Lucioles / BP 93 The purpose of the transformation is to relieve the author of the document or of the DTD from the responsibility of writing braille and audio style sheets. 
Once the document has been transformed into valid HTML, the user's default braille or audio style sheet can then be applied. 
This is also the basis of the ICADD mechanism and should offer a good solution in those cases in which the semantic content of the document can be adequately represented in HTML. 
The draft XML syntax specification omits those aspects of SGML that were used by ICADD to effect transformations of this kind. 
What is needed, I think, is a document transformation facility that is built into XSL or another widely deployed style or scripting language, so that an XML document can be linked to a transformation script or style sheet, which the user can invoke to convert the document instance into HTML. 
Braille and audio style sheets are then applied in the usual manner. 
Responding to Chris Lilleys comments: From:Jason White [SMTP:jasonw@ariel.ucs.unimelb.EDU.AU] DP: I'm presently using DSSSL to transform SGML documents into multiple media. 
Part of this, for instance is to create a table of contents using the article titles. 
On meeting the toc, I traverse the parent tree to each 'article' then extract the text from the title element, inserting into the table of contents. 
The constructs which do this are parent (current-node), descendent or children to go down, or I can search with (select-elements (children (current-node) "GI")) which searches the children of the current node for elements whose GI matches the given string. 
Not having used it, the XSL spec, derived from DSSSL o, I assume not to have lost these characteristics. 
I will check for the actual syntax if you want. 
From memory at last reading, such items were in the spec. 
Reaching a bit of a grey area here. 
Suggestions: If you need DTD to DTD transform, any of the commercial tools will do it easily. 
DSSSL _can_ do it. 
Bit of a kludge ( I have done it on a unity basis simply to add the table of contents). 
The sgml output of Jade (the tool I am using, does not handle _properly_ the relevant part of the spec. 
It does do it, but by some clever James Clark'ism. 
We find SGMLC easy to use for DTD -DTD transforms. 
Possibility that it may not be needed? 
A typical scenario would be that an intermediate transform is needed (e.g. to add the toc), then to use standard XSL techniques to do the tree transformation at the presentation phase of the job. 
How's that as a solution. 
Regards, DaveP From: Dave Pawson. 
RNIB(UK) e-mail dpawson@rnib.org.uk 
This discussion is losing sight of the forest while wandering around the trees. 
An XML document in general will have far richer information than an HTML 4.0 document. 
I think it is a wasteful exercise to speculate on how one would transform an XML document to an HTML 4.0 document in the name of accessibility since a Braille or audio style sheet (especially an aural style sheet) will do much much better with the richer tagging available in the XML document. 
This said, the rest of the world will probably do the XML - html4.0 transform one way or the other simply to be able to quickly display XML documents. 
This said, just because ICADD projected documents down to a very simple DTD in the name of accessibility doesn't mean that that was either completely correct or the right way to proceed. 
Keep in mind that ICADD in its design was primarily motivated on designing a DTD that would allow electronic documents to be converted to a fairly simple minded etext format for reading with screenreaders or for translation to a simple Braille scheme. 
Things like tree transformation are powerful ideas and whatever XSL provides in this area will help us produce much more usable presentations for all. 
However, it would be detrimental to focus on projecting rich information structure to any given DTD --ICADD, HTML4.0 or whatever else. 
Each of those systems are dated in their own right and contain design compromises that newer systems should not try to drag along. 
So in summary think of XML/XSL in its own right rather than trying to limit the design by what has gone before. 
Best Regards, --raman as representative of my employer, Adobe Systems Inc. From: Dave Pawson. 
RNIB(UK) e-mail dpawson@rnib.org.uk 
TV: DP: Or being pragmatic? 
Perhaps Jason has a point in terms of _today_. 
Once XML tools are available I will support your position. 
Assuming a time lag, a simple transform into html for quick (and dirty) access seems to waste very little if a static dtd is being used. 
The real difficulty comes when authors throw away the dtd and start using tag names without any structural considerations, the dtdless document instance. 
Then I need to write a transform script for each document I receive. 
If that happens then forget the easy route to html or anything else, and look for the XSL toolset. 
Fully support the rest of TV's message and hope that the structural capabilities of XML are supported, as well as the richness of the tagset! 
Regards, DaveP In my experience attempting short-term hacks typically results in the short-term hack hanging around far longer than the perpetrator intended -- and the XML to HTML4.0 projection if done in the name of accessibility will haunt us for a long time. 
Here are a few kluges that would emerge and hang around: Today's accessibility mechanisms in HTML4.0 and CSS1.x are not necessarily the best solutions and one needs to bend over backwards in providing access to certain kinds of structured information --the best example is tables. 
I shudder to think of the kind of hacks people would come up with in order to take a richly structured data record in XML to a "accessible HTML table". 
Best Regards, --raman as representative of my employer, Adobe Systems Inc. 
I think it can be generally agreed by all participants in this discussion that the ICADD DTD is far too limited for present, let alone future needs, and that a solution is required which can evolve with technology. 
Assuming that authors are unlikely to write speech and/or braille style sheets for their custom-developed DTD's, there is a need to convert the semantic content of the XML document into a form to which pre-existing braille and audio style sheets can be applied. 
Judging from the WAI meeting minutes, it appears that the ICADD group regards HTML as the most promising intermediate format. 
Since HTML will continue to evolve, it would be possible to improve the quality of such transformations as the scope and flexibility of HTML improves. 
However, it should also be expected that specific braille and audio style sheets will be created which correspond to widely used XML DTD's. 
Thus, the conversion of documents into HTML should be regarded as a secondary option which is applicable only where the developer of the DTD is not prepared or does not have the expertise with which to develop full braille and audio style sheet support. 
I understand this to be essentially the ICADD position, and it seems to be quite reasonable and practical. 
An attempt was made by ICADD late last year, as documented on their web site, to develop a transformation from HTML 3.2 to the ICADD 22 DTD. 
Although some positive developments may have emerged from this work, its fundamental premise that accessibility would be well served by converting HTML documents into the ICADD format is clearly mistaken. 
Rather, it is HTML which, at least in the short term, is likely to become the predominant structured document format, for which audio and, eventually, braille style sheets will be written. 
To the extent that document transformations are needed in order to achieve access, HTML should be the destination. 
This however is not to underestimate the importance of XML in its own right and the need to make adequate provision in XML for braille and audio output. 
The ICADD site is at http://www.cm.spyglass.com/doc/icadd.html 
good-- Jaysen, I agree with everything you say-- and your note clarifies and removes the concerns I raised earlier this morning. 
Best Regards, --raman as representative of my employer, Adobe Systems Inc. I'll take the opportunity of this thread to expose one some issues regarding XML accessibility, for the record before we start PF and we get to talk to the XML WG directly. 
OK, so we now have HTML attribute ALT required on IMG and LONGDESC support as well. 
Say I'm designing a new Menu XML DTD, including support for images of PadThai and other Boar Ragout of course. 
My Menu image element is called IMAGE (in french) How does one qualify my Menu DTD as being accessible ? 
This is important as W3C is getting and acknowlegding a lot of these, and we might want to qualify them thru WAI before accepting them. 
Say I have called my IMAGE "textual" attributes DESC and DESCPLUS, how does a user-agent get to know that that's what they are ? 
The obvious solution is to define a mapping onto the equivalent HTML4 pieces, but I'm not even sure SGML LPD (Link Process Definition) accounts for that level of details (to the attribute level I mean). 
What Raman is saying is that my Menu DTD might even be more accessible that HTML4, then, how do I express that with a mapping to HTML4 ? 
Y'all -- please be prepared to resume this thread when we get the PF listserv going. 
-- Al 
