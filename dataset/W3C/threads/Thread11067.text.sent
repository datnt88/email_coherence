Some will use SGML, others will not. 
Developers will wonder what we were thinking not allowing them to include "modules" *in* XML. 
Why can the doctype itself not be considered a module? 
I feel strongly that we should leave them in. 
Simplicity does not always equal functionality. 
True but it goes a long way toward first pass implementation simplicity and as stated, "training wheels" DTDs. 
I don't find PEs hard; just rugs for hiding domain messiness. 
However, I like Dan Connolly's suggestion about functionality beyond "pastie thingies" and think that should be considered before a final decision about PEs is made. 
This may be a very golden opportunity. 
len Some will use SGML, others will not. 
Developers will wonder what we were thinking not allowing them to include "modules" *in* XML. 
Well, it can. 
I'm all for it!!!! 
I would love to have a better model for reusing, including, and subclassing definitions. 
Can we accomplish this in XML? 
Should we? I'd rather see a uniform solution come into play from the WG8 group that addresses issues for XML. 
Considering this, we can push ideas "up" from XML but I'm not sure if we should explicitly attempt to solve this in XML. 
I feel strongly that we should leave them in. 
Simplicity does not always equal functionality. 
Agreed. 
I like Dan Connolly's idea. 
I'm not sure if we (the XML working group) should address such functionality in XML. 
We should make use of parameter entities easy restricting it if necessary to make things easier on developers and users. 
In addressing philosophies, parameter entities as they currently exist are nothing more that referenceable storage objects. 
Hence, they have no formal meaning until they are resolved and parsed. 
If we want to solve more complex problems such as re-use, subclassing, subtyping, etc. we should work on *different* ideas potentially submitting them to ISO/WG8 for incorporation in the current revision or future revisions. 
In other words, parameter entities are useful and other ideas are more useful but I'm not convinced we have the time and have gathered the requirements to be able to solve this problem on our current schedule for XML. 
Let us keep parameter entities and restrict whatever necessary to make implementation and use reasonable. 
R. Alexander Milowski http://www.copsol.com/ 
alex@copsol.com 
Copernican Solutions Incorporated (612) 379 - 3608 We could, but I think like the rest of you, there is a considerable amount of other groundwork to be done before this becomes a work item. 
But it has been a pet wish for some SGMLers for a very long time now, so I expect to see it argued here sooner or later. 
A big issue wiil be that classes and objects are defined as data encapsulated with behavior, and that's a non-starter if past debates are an indication. 
I have a different view of XML: I see it as the focus of experimentation and development whose successful results work their way into the parent standard. 
That is a good process and makes the "two sets of books" problem go away. 
Continued negotiations with WG8 are a very healthy thing. 
Yep. 
I don't like PEs much, but I've used them and others have used them a lot. 
My last back against the wall argument is really only, "how much time and how much has to be done to get products in the pipeline for the first season of shows". 
len 
