As discussed in [1]: Embedded resources result from either the part-of association ??? one of the fundamental concepts in object-oriented modeling ??? or the theorem of weak entity classes in database management. 
In UML class diagrams, for example, associations having a diamond on one side indicate that the class on that side represents composite objects having instances of the class on the other side as their parts. 
They go even further and say that if the diamond is darkened, then the instances of the class on the other side may never exist independently from instances of the class on the side of the diamond ??? quite similar to the concept of weak entity classes in database management. 
However, there is currently no standard way to specify part-of associations as such in RDF schema or OWL. 
CC/PP [8], as an RDF-based approach for articulation and exchange of contextual knowledge in profiles, has proposed the concept of components that can be seen as a solution for this problem. 
It was not consistent enough, though. 
It seems that the understanding of profiles in CC/PP is something like the old ".ini"-files in Windows(TM); i.e. all attributes must appear in some component and no attributes within components may have another component as value. 
None of these restrictions matched our requirements. 
This approach ignores the evolution of such config-files into tree structures like Windows(TM) registry. 
To improve OWL in this regard, I suggest to add the following concepts: hasComponent|hasPart rdf:type TransitiveProperty componentOf|partOf rdf:type TransitiveProperty componentOf|partOf inverseOf hasComponent|hasPart WeakClass|WeakEntity rdfs:subClassOf Class hasContainerClass|dependsOn rdf:type TransitiveProperty hasContainerClass|dependsOn rdfs:domain WeakClass|WeakEntity hasContainerClass|dependsOn rdfs:range Class Other statements may also be added, e.g. about the cardinality of 'hasContainerClass' for instances of 'WeakClass' (it must be greater than 0). 
Of course, 'hasComponent' and 'componentOf' should be used in the descriptions of instances only when no additional semantics of the corresponding relation is known. 
Usually, however, one should introduce appropriate sub-properties of them and use the sub-properties in order to imply the additional semantics. 
Regards, -- Saied [1] Tazari, M.R. A Context-Oriented RDF Database. 
Semantic Web and Databases, Berlin (Germany), September 2003. 
This is a very interesting suggestion, but I wonder if this version of the OWL specification is the best place for it. 
As we said in the status of the 31 March requirements draft... "Requests for significant changes to the requirements are not anticipated and will be evaluated in the context of the scope and schedule of the Web Ontology Working Group charter and other plans for the W3C Semantic Web Activity" -- http://www.w3.org/TR/2003/WD-webont-req-20030331/ 
As work on this version of OWL winds down, we have started talking about best practices for using OWL and such. 
Coincidentally, part/whole relationships is one of the first things we've started writing about in this context: See also discussion of a charter for a possible Best Practices working group: SW Best Practices WG - draft charter for discussion Guus Schreiber (Monday, 10 November) Does it seem satisfactory to take up your suggestion in a later stage of work? 
Note the OWL drafts have been out since March 2002 and we were really hoping to get all comments on the OWL specs in by 20 September 2003. 
Dan Connolly, W3C http://www.w3.org/People/Connolly/ Thank you very much for the introduced links. 
I'm relieved to hear that this is already a discussion point in the SW community. 
It also shows that the deferment of the suggestion was not that wrong: as I had guessed, there were others who missed this fundamental feature but waited for the next round of discussions :-) -- Saied 
