I've written and tested In there we use an experimental description (in n3, nt and rdf) [1] and it runs with euler as jview Euler etc001.nt 
Pat: are there use/mention bugs in (or the .nt or .rdf as you prefer) Jan: you are of course the test description owner, this is just a proposal... Jos PS could Art, Brian, Eric, DanB or DanC make [1] public? 
OK, I havn't been taking this log:implies stuff seriously, but if I am forced to, then I cannot make sense of it. 
For example this example contains the triple _:a1 http://www.w3.org/2000/10/swap/log#conjunction 
Now, what kind of thing is the object of that triple? 
What kinds of things are in the extension of the property http:....log#conjunction ? 
Pat IHMC(850)434 8903 home 40 South Alcaniz St.(850)202 4416 office phayes@ai.uwf.edu according to http://dev.w3.org/cvsweb/~checkout~/2000/10/swap/log.n3 log:conjunction a rdf:Property; rdfs:label "conjunction"; rdfs:domain log:List; rdfs:range log:Formula; rdfs:comment """"A function to merge formulae: logical AND. 
The subject is a list of formulae. 
The object, which can be generated, is a formula containing a copy of each of the formulae in the list on the left. 
so I have done it completely wrong, sorry for the confusion the intention is to have -- there is something, say _:a1 and that something is the merge of a set of graphs identified by those URI's in object position (and then of course that merged graph entails a graph) help... Jos OK, I'm getting there, sorry I'm slow. 
Yes, I see. 
This makes sense, I agree. 
The things are the RDF graphs/Ntriples documents, whatever, and the relationships between them are defined by entailment relationships between those graphs/documents. 
I think you ought to call them things like (rather than log#), is all, but that's just aesthetics.(It would help to keep the different entailments straight, though.) 
I guess I'm still slightly puzzled by HOW you get from the fact that the merge of a, b and c simple-entails d, to the assertion of the existence of the entailment of the conjunction. 
There seems to be a kind of entailment-reification going on here, and *that* isn't RDF-valid, of course, though we could probably state it as another semantic extension, and call it entailment-valid, or something. 
Cute! 
Pat IHMC(850)434 8903 home 40 South Alcaniz St.(850)202 4416 office phayes@ai.uwf.edu 
You are right, it is puzzling... Let's try first the WHAT. 
We look for 'something1' that 'etc:supportsProofOf' 'something2' where 'something1' is intended to be some engine, but it's actually not important to know for the problem description and 'something2' is intended to be an entailment testcase thing described via 'etc:blunt', 'etc:kind' and 'etc:sharp' properties like in http://www.w3.org/2000/10/rdf-tests/rdfcore/entailment/etc001.n3 (or the .nt or the .rdf) 
which allows to describe different (combinations of) kinds of entailment (the rest is blunt |- sharp) It runs for the moment with euler (getting stuff from everywhere and spinning around) I had to look into the dictionary for that one :-) Jos 
