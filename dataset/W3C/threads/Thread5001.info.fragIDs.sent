<s> I've been pondering about the extraction of concise bounded descriptions in the case of "bnode-centric" models such as FOAF, and believe that OWL can provide a very elegant and simple solution to the "overgeneration" of levels that will occur with the present RDF-only definition of concise bounded descriptions.  </s>
<s> Essentially, owl:InverseFunctionalProperty is employed to bound the depth of descriptions, such that, for any bnode object, if there exist any statements for which it is the subject and which employ properties of rdf:type owl:InverseFunctionalProperty then those and only those statements are included in the description and the recursion ends there.  </s>
<s> This provides just enough information about the bnode denoted resource for an agent to obtain a complete description of that uniquely identified resource if necessary, in a system-independent manner (irrespective of system-specific bnode labels).  </s>
<s> In fact, the "fragment description" of the resource consisting of only its uniquely identifying properties constitute a query template, which should result in a complete description of that resource.  </s>
<s> If no statement with an instance of owl:InverseFunctionalProperty exists for the bnode, then recursion continues, adding all statements about the bnode delimited resource to the description.  </s>
<s> Now, for vocabularies for which there do not (yet) exist any OWL ontology which specifies which properties are of rdf:type owl:InverseFunctionalProperty, the ability to submit auxiliary knowledge along with an RDF query really shines.  </s>
<s> If one knows they are querying a knowledge base using a particular bnode-centric vocabulary, they can include along with the query extra information such as, e.g. ex:emailAddress rdf:type owl:InverseFunctionalProperty .  </s>
<s> or blargh:employeeNumber rdf:type owl:InverseFunctionalProperty .  </s>
<s> etc. to be taken into account when executing the query, and thus bounding the bnode closure in an effective manner.  </s>
<s> In any case, one would *have* to continue recursion for bnode denoted resources where no uniquely identifying properties are evident, since otherwise, one is unnable to request a description of that bnode denoted resource in a system-independent, portable manner since bnode labels are system-dependent.  </s>
<s> So simply limiting the number of levels is not an optimal solution.  </s>
<s> This OWL augmented approach to generating concise bounded descriptions at least helps to lessen the magnitude of the problem substantially (and completely solves the problem for FOAF, which already defines which properties are instances of owl:InverseFunctionalProperty).  </s>
<s> Eh? Patrick Patrick Stickler Nokia, Finland patrick.stickler@nokia.com  </s>
<s> I'm afraid I don't entirely understand a lot of this.  </s>
<s> At the very least, I think you're assuming a very very particular processing model and assuming that the limitations of that particular implementation are semantics implied by OWL.  </s>
<s> Making a property inverseFunctional doesn't necessarily end any algorithm or recursion.  </s>
<s> It simply asserts that under certain circumstances it can be inferred that two different names refer to the same instance.  </s>
<s> Any even mildly sophisticated RDF/OWL reasoner has at least minimal separation between data retrieval and true inferencing.  </s>
<s> Attempting to exploit inverse functional properties to prevent particular aspects of data retrieval from happening is nothing but an optimization and should absolutely *not* be required.  </s>
<s> Perhaps I'm just misunderstanding; can you provide a sample data set and explain just what you expect inverseFunctional assertions to change about it?  </s>
<s> Hi Everybody, I'm very pleased to be able to join the group as an Invited Expert.  </s>
<s> I've been a programmer and technical writer off and on since 1965.  </s>
<s> In past lives I've written articles and online columns on programming issues (object-oriented programming, Java, parsing issues, etc etc.) for Apple, Microsoft, and IBM.  </s>
<s> I live and work in beautiful Roberts Creek, British Columbia, just north of Vancouver.  </s>
<s> Most relevant to the task at hand, I'm the author of an open-source, Java-based XQuery engine [1] and am the editor of Addison-Wesley's "XQuery from the Experts," [2] a collection of technical essays from members of the Query working group.  </s>
<s> In accordance with the Charter item on XQuery [3], I'm particularly interested in seeing whether lessons learned from XQuery can usefully inform the decisions of the DAWG.  </s>
<s> My personal programming interests include efficient implementation of data structures, language syntax, and at the moment REST.  </s>
<s> I'm currently working on a tutorial for IBM's developerWorks website on a RESTfull interface to an XQuery back end.  </s>
<s> I am probably the RDF "babe" in the group (I speak in terms of knowledge and experience, not sexual magnetism unfortunately!) and am paddling as fast as I can to catch up to the rest of you.  </s>
<s> Nice being aboard.  </s>
<s> I'm generally quite quick to respond to email.  </s>
<s> Howard [1] http://xqengine.sourceforge.net/  </s>
<s> [2] 624-3508624 [3] http://www.w3.org/2003/12/swa/dawg-charter#XQueryBinding  </s>
<s> Howard Katz Fatdog Software Inc. 3771 Highway 101 Roberts Creek, BC Canada V0N 2W2 home/office: 1-604-885-7662  </s>
