BTW, IE's downloadable font implementation is a strict subset of what CSS2 defines for Fonts. 
We didn't pick that syntax randomly - it came straight from the WebFonts Working Draft (http://www.w3.org/TR/WD-font), which both Microsoft and Bitstream had a hand in developing. 
(Todd, I know that you know this; this was for others' benefit.) Yes, thanks for pointing that out Chris. 
I haven't heard anything to suggest that Netscape will be supporting OpenType anytime soon. 
s/Opentype/Embedded Opentype/g Nor I. They do have a plug-in font rendering architecture though, so a third party could implement it. 
However, TrueDoc is now usable in Internet Explorer through an ActiveX control.[1] 
How do you and your readers like ActiveX? 
You have to embed the control in the HTML of every page you want to use TrueDoc in - can't specify it in the stylesheet and have done. 
I think you just answered your own question there ;-) This is indeed true, and is not an optimal solution. 
Todd, you fail to mention two of the main drawbacks of the TrueDoc format - 1) it throws away all hinting and auto-hints the font - some people say they can see the difference, and 2) the last time I looked, the TrueDoc recorder doesn't pay any attention to the font license information, e.g. the bit in the font that says, "you're not allowed to embed this." Presumably because they do not see themselves as embedding the font, but as embedding the output of the font. 
(Again, that was for other folks benefint, I know that Chris and Todd are aware of the argument). 
Our OpenType embedding does; if the typographer has a restrictive license, you will not be able to embed it. 
Designers need to realize that fonts are software (as well as works of art), and are protected as such. 
Yup. 
Embedded fonts need to be created with regard to their license (some foundries let you, some don't); transmitted in a form that is not directly usable, and not installed or otherwise made available to people to use for other documents. 
Unfortunately, Netscape (the TrueDoc implementor) doesn't implement enough CSS to let you embed fonts through CSS. 
You still have to muck around in the HTML, against the recommendations of the HTML 4.0 Specification. 
Is this really against the recommendation of the HTML4 spec? 
It's a bit of a hack, to be sure, but they just use a META tag, which I don't think is very strenuously defined in HTML 4.0. 
Their syntactic usage of the META tag is indeed within the spec, although their usage of tagging for font embedding is contrary to the Web Fonts design principles which were decided by a number of companies, Netscape and Microsoft included. 
Their syntactic usage of the deprecated face attribute on font is also within the spec for Transitional HTML 4.0. 
Of course, that attribute was added because certain vendors had already implemented and it was in widespread use; the presence of the face attribute in Transitional HTML 4.0 representss a documentation of existing practice not a recommendation for creation of new content. 
I hope this will be fixed in an upcoming 5.0/Mozilla release. 
It's a little late, but I'd also like to see some way to specify a list of fonts in different formats in CSS @font-face rules, You mean, apart from the existing way to specify a list of fonts in different formats in CSS @font-face rules ? 
;-) for UAs to sort out, so CSS authors aren't forced to take sides in a proprietary font format war. 
Today, if you use OpenType, you cast your vote for Microsoft and their errant (IMO) type rendering. 
If you use TrueDoc, you can be browser-neutral and pro-anti-aliasing,but only by means of ActiveX and deprecated HTML in place of CSS. 
Hey, someone should just step up and volunteer to implement the correct CSS2 syntax in Mozilla. 
;-) I have spoken to the Netscape folks about that, they do promise to change it in the next version. 
It would be good to see fuller support for the correct CSS2 WebFont syntax in new versions of all the CSS-supporting browsers, actually. 
I am thinking particularly of a) the intelligent font matching (based on the Panose number) b) the font-size-adjust c) the font-stretch property for specifying condensed and expanded faces in the same family. 
I could probably convince our typography team to assist anyone who wanted to implement OpenType embedding in Mozilla as well. 
I'm sure you can imagine why I can't offer to do it myself. 
;^) That assistance would include help with the necessary licensing of the Microtype Express technology from Agfa? 
You can, in fact, specify a list of different formats in the CSS @font-face rules for the UA to select. 
Yes, exactly (tsk, Todd, you know that already) although Navigator 4.0x will not recognise the syntax. 
Even so, though, the designer would need to create two copies of the font (one as Embedded OpenType, one as TrueDoc), right, but you can point to these two copies from your style sheet and say which format each uses. 
I agree having to make two or more formats is a pain. 
presuming you didn't want to insert the TrueDoc ActiveX control in your pages. 
If you're going to build two copies of the font anyway, you can use the CSS2 syntax IE4 uses for the EOT file, and the META syntax Nav uses - neither will interfere with each other. 
Actually they will. 
Not the meta syntax per se, which is harmless (although the hxburned attribute inserted by Hexmac Typograph is non-standard) but the fact that you need to have font face tags all over your HTML, which has several problems: - tying the content down to a single style of presentation - high specificity of stylistic control on a single element, messes up inheritance in the CSS - people omit the actual 'semantic' tags and just use font, making the pages inaccessible, hard to search, and difficult to automatically convert to a style sheet - encourages using fonts to lie about content/charset encodings; HTML and CSS take rather different approaches toward the byte/character/glyph model. 
But, it is possible to use the CSS2 syntax for clients that want eot, pfr, or any other flavour of font; in the same style sheet, without ambiguity. 
WebFonts was explicitly designed that way, because we knew there were multiple font formats now and would likely be more in the future. 
Chris Lilley, W3C http://www.w3.org/ Graphics,Fonts,Stylesheets Guy The World Wide Web Consortium chris@w3.org 
2004 Rt des Lucioles / BP 93 OK, time for Bitstream to throw in it's $.02.... I'll stay away from all the anti-aliased versus delta hinted stuff except to say that the end result depends highly on (a) the font in question, (b) the quality of the anti-aliasing algortihm, and (c) personal preference. 
And, just to keep the record straight, it is possible to reproduce the delta-hinted bitmaps using TrueDoc, if that is what the document author desires. 
Extensis BeyondPress currently supports this ability. 
BTW, IE's downloadable font implementation is a strict subset of what CSS2 defines for Fonts. 
We didn't pick that syntax randomly - it came straight from the WebFonts Working Draft (http://www.w3.org/TR/WD-font), which both Microsoft and Bitstream had a hand in developing. 
(Todd, I know know this; this was for others' benefit.) 
It does, though the current implementation does not expose the @font-face informaiton in the document object model (at least not as far as I can tell), not does it support the kind of plug-in extensibility for rendering the would allow the @font-face rule to reach it's full potential. 
I believe that Netscape is going to add @font-face support in 5.0. 
I hope that Microsoft can provide the plug-in capability for rendering. 
Then document authors can get back in the drivers seat... 
As an interesting side note to all of this, as big a fan as I am of @font-face, I think the use of LINK and FONT FACE may very well be here to stay-- at least for a while. 
Many embedded developers would like to have access to the fonts but are not enthused about having to spend the memory to implement CSS. 
However, TrueDoc is now usable in Internet Explorer through an ActiveX control.[1] 
How do you and your readers like ActiveX? 
You have to embed the control in the HTML of every page you want to TrueDoc in - can't specify it in the stylesheet and have done. 
True enough. 
However, you could put the LINKs, the OBJECT for the ActiveX, and the reference to the stylesheet all in a JavaScript file and accomplish the same thing. 
(I agree that things will be better when it can all be done via the stylesheet, but all that was a DRAFT- not to be implemented- until today.) Unfortunately, Netscape (the TrueDoc implementor) doesn't implement enough CSS to let you embed fonts through CSS. 
You still have to muck around in the HTML, against the recommendations of the HTML 4.0 Specification. 
NS 4.0 does support CSS font markup. 
You do NOT have to use FONT FACE. 
Many authoring tools do not support CSS yet, that's true. 
But it's pretty easy to work around-- if you've been to truedoc.com and looked at the source, you'll find a fair amount of stuff done with CSS. (Like all of the test drive.) NS 4.0 does not support the (at the time of release) DRAFT @font-face rule. 
If they don't clean it up in 5.0, then we yell at 'em. 
;-) I could probably convince our typography team to assist anyone who wanted to implement OpenType embedding in Mozilla as well. 
I'm sure you can imagine why I can't offer to do it myself. 
;^) We could do it if we had the rights to the software at both ends. 
presuming you didn't want to insert the TrueDoc ActiveX control in pages. 
If you're going to build two copies of the font anyway, you can use the CSS2 syntax IE4 uses for the EOT file, and the META syntax Nav neither will interfere with each other. 
As mentioned above, this is incorrect. 
You can use CSS1 for everything. 
The only divergence is the LINK vs. the CSS2 @font-face. 
And you can put this all in a single JavaScript file that you load by reference. 
Nope, it's not a perfect world. 
(Being heavily involved in web site production at the moment, I can attest to THAT!) But, you can get it to work pretty well now, and with a lttle teamwork, I think it's gonna get better. 
Brad Chase Bitstream Inc. bchase@bitstream.com 
Well, just for the sake of it... OpenType supports PS Type 1 (or CFF if you like) as well as TrueType. 
Simon made the point about the GASP table, and I share with him the support of "grid-fitting smoothing" over pure greyscaling (just look at what Photoshop does to type!). 
The reason being that screen aren't high-res enough to deal with greyscaled stems, logically if you've got a stem width of one pixel you can only jump up to two or three, even with the mitigation of these additional pixels being lighter shades the result still looks a mess. 
Pure greyscaling will only ever work at sizes above 20ppem (or so) so when we all get 300dpi screens it'll be just dandy. 
Todd said something like: Why for art thou not fluffy? 
Because it don't work at lowres. 
There's a simple and well tried reason for this, and believe it or not it's the reason why type is as "sophisticated" as it is today. 
It is much easier to make fluffy type than it is to hint it, but someone, long ago, decided that at lowres people needed something better, and lo, thus was born hinting. 
And no, TrueDoc does not pay any attention to the existing embedding bits in a font, or carry the copyright notice of the original. 
Some OpenType stuff at: Some news about Bitstream: -- Clive Brad Chase wrote at 12/05/98 7:24 pm Don't know about anyone else, but I got six copies of that, so it seems Bitstream threw in it's $0.12. 
Perhaps this is related to the $700,000 loss posted in the last quarter? 
-- Clive 
