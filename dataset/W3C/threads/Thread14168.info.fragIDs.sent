Chuck has raised this issue before. 
What should we be doing about HTML applications? 
Currently they are briefly covered in the Guidelines - if you create a User Interface, make it accessible. 
Do we need to go beyond that? 
Are there any checkpoints we should have but do not? 
What is an HTML application ? 
A DHTML page ? 
Anything with a FORM ? 
I can't find a definition in the guidelines or techniques. 
In the sense that CChuck uses the term I think it is an application which 
is written in some flavour of HTML - I guess there is a range between a simple bit of DHTML and a complete interface that the user cannot tell is presented in HTML. 
It is not defined in the documents anywhere. 
It is one of those issues that has been floating on the periphery, and my personal view is that the answer is to rely (fairly heavily I must say) on the guideline which requires that a user interface is responsible for meeting the guidelines itself - we could revisit that and tighten the definition a bit. 
But I think we should raise the issue and resolve it. 
It is also related to my otherwise unloved issue about event triggers. 
(Which I will now trot out again...) Some triggers - onSelect, onUnload - are triggered by events which are not denedent on a device, and could easily make sense to any user agent which recognises the script that is run by the trigger. 
Others - ondblClick, onMouseDrag, are based on a mouse, and it is difficult to see how they will be implemented in a device-independent manner. 
And some triggers, as commonly used, could be recast into logical triggers - onMouseClick in MS/NS (= onMousedblClick in AMaya, =onRightArrow in Lynx...) could be easily mapped to device-independent triggers - eg onActivate. 
I would like to see the possibility that a better model is produced for the next release of HTML considered by the WG. 
Although I am not going to run away and sulk if it is rejected, I would like to thear why. 
Charles 
What is an HTML application ? 
A DHTML page ? 
Anything with a FORM ? 
I can't find a definition in the guidelines or techniques. 
--Charles McCathieNevile - mailto:charles@w3.org 
W3C Web Accessibility Initiative - http://www.w3.org/WAI 545 Technology sq., Cambridge MA, USA 
So I won't see it. 
I think that it's important that the guidelines strongly address dynamic (small 'd') HTML with a refresher on Accessible Software Design - keyboard access, color, etc. 
OK, I understand dHTML, DHTML, Dynamic HTML can loosely be defined as being the same thing: a combination of HTML, CSS and some scripting language, which presents a dynamic user interface, responds to user input and possibly reformats itself based on such. 
The issue is: can we produce guidelines for a technology that has no formal specification and how useful will they be ? 
The issue of scripting languages has already been discussed at great length in the working group and I don't think there would be much value in simply repeating that analysis at this stage, given that the underlying standards and technologies have undergone no significant change in this regard during the past month. 
Basically, the recommendation that we settled upon is that, since there is no universal scripting language which is supported by every user agent, alternatives must be provided to every document that employs scripts at the client level. 
These alternatives should present the same content as the original, using forms and server-side scripts to accomplish this objective. 
It has also been proposed that documents involving scripts should be made directly accessible, though little can be said in this regard owning to the lack of standards in this area. 
Once the DOM matures further, it should become possible to offer more detailed advice; but at present I think the current guidelines are defensible as the best that can reasonably be achieved given the current state of the technology. 
Of course, additional advice can be inserted into the non-normative "techniques document" as it becomes available, and may also be included in subsequent versions of the guidelines. 
I'm not certain why the language of the script matters. 
The DOM is language independent, and is actually very mature, having released in a Level 1 specification already. 
It's not the language that matters, but the ability to convey information and present user interface. 
If you don't know the language, how do you parse the script ? 
factorielle(X) [ (0)=1 &amp;&amp; (X)=(X-1)*X; ] 
CO:: 
I'm not certain why the language of the script matters. 
The DOM is 
language 
independent, and is actually very mature, having released in a Level 1 specification already. 
It's not the language that matters, but the ability to convey information and present user interface. 
DD:: 
AG:: I have to agree with Daniel, here. 
The language matters. 
Remember what Greg Lowney said about "making it easy, making it default"? 
Well, the present scripting languages and the present situation where there is no W3C or other broad community process controlling scripting language make it easy to do inaccessible things and do not make it easy to do it "right." 
Moreover, to make accessible-by-construction dynamic behavior the default on the Web it is likely that some rules have to be put not only in the author tools but in the behavior definition language itself. 
Note that this is the key question. 
So long as the DOM just mirrors what is in W3C languages and the dynamic behavior is defined in language outside the scope of the W3C specs, then the DOM can't do much to help us much with the accessibility of Web dynamics. 
It can only close the barn door after the horse is gone. 
Al 
I agree with Daniel and Al on this point: until and unless there is a relatively universal scripting language implemented by most user agents, it must be assumed that for a certain proportion of users, it will not be possible to execute the script at all, and that an alternative version of the document is needed. 
I would also be reluctant to endorse any changes to the guidelines regarding ALT text, which is based purely on the way in which some graphical browsers present the value of the TITLE and ALT attributes. 
This question has been discussed before and the consensus was that, due to the variety of devices which may support HTML user agents, which may be graphical, text-based, auditory, etc., the guidelines should not make any assumptions regarding the manner in which the ALT attribute is or is not presented by the user agent, other than that it can be accessed when the user is unable to or chooses not to view the image. 
I would suggest that the presentation issue is largely a user agent concern that should be addressed in the u a guidelines. 
You don't parse the script - there is no way that anyone can figure out the meaning or end result of a stored program. 
by running it ? 
I didn't mean what I say to be restricted to the assistive technology add-on framework. 
Take the example of a page that has a big onLoad event that generates all the HTML on the fly (using specific JavaScript document.write 
syntax) If the HTML is accessible, the only thing that prevents this page from being accessible is the knowledge of the scripting language. 
Lynx could implement a JavaScript runtime, and make this kind of page (today completely inaccessible) accessible, but why JavaScript, and not VBScript ? 
My point is that if we had a scripting language standardized, it would result in more UA implementing it. 
Hi, 
I have a situation to navigate around the form for diffrent input text fields in the order of request rather than the order of apearent (the TABINDEX feature). 
Main problem is I have to work it out with netscape 4.0 version and TABINDEX is supported from netscape 5.0, do you have any sugession. 
Regards, Bala 
Re: TABINDEX - HTML Applications From: Daniel Dardailler (danield@w3.org) 
Date: Fri, Jan 08 1999 * Next message: Charles McCathieNevile: "Re: TABINDEX - HTML Applications" * Previous message: Charles McCathieNevile: "RE: TABINDEX - HTML Applications" * Next in thread: Charles McCathieNevile: "Re: TABINDEX - HTML Applications" * Reply: Charles McCathieNevile: "Re: TABINDEX - HTML Applications" * Maybe reply: Daniel Dardailler: "Re: TABINDEX - HTML Applications" * Maybe reply: Daniel Dardailler: "Re: TABINDEX - HTML Applications" * Maybe reply: Daniel Dardailler: "Re: TABINDEX - HTML Applications" * Maybe reply: Daniel Dardailler: "Re: TABINDEX - HTML Applications" * Messages sorted by: [ date ] [ thread ] [ subject ] [ author ] * Other mail archives: [this mailing list] [other W3C mailing lists] * Mail actions: [ respond to this message ] [ mail a new topic ] Message-Id: 199901081250.NAA08895@www47.inria.fr 
From: Daniel Dardailler danield@w3.org cc: "Charles (Chuck) Oppermann" chuckop@microsoft.com , WAI GL w3c-wai-gl@w3.org 
Date: Fri, 08 Jan 1999 13:50:50 +0100 Subject: Re: TABINDEX - HTML Applications 
Chuck has raised this issue before. 
What should we be doing about HTML applications? 
Currently they are briefly covered in the Guidelines - if you create a User Interface, make it accessible. 
Do we need to go beyond that? 
Are there any checkpoints we should have but do not? 
