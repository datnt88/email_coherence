Hello all, I am interested in your opinions relating to the similarity or difference between rule L of US Section 508 standards and WCAG Checkpoint 6.3. 
My interpretation is that they are almost equivalent, except for the following differences: 1. 508 does not require a page with scripts to work if scripts are disabled or not supported, while WCAG 6.3 does. 
2. 508 says "...the information provided by the script shall be identified with functional text that can be read by assistive technology." 
My interpretation of "functional text" is a bit hazy. 
I would expect that this standard requires that information provided or created by a script and the user interface controls used to manipulate the script, i.e. the input and output elements generated by the script, are in themselves accessible. 
However, it seems that this is not the case and all that is required is to "identify" the information. 
I interpret this as "provide a text description of the information". 
This suggests that it's OK for the output from a script to be inaccessible, as long as it has an accessible description. 
For example, a user might invoke a script which generates a bus timetable between locations A &amp; B. The information contained in the timetable might be inaccessible, but as long as there is an identification, e.g. "Here is the bus timetable between A &amp; B", this is compliant with rule L. 
I'm basing this on my interpretation of an explanation of 508 rule L which is available at this URL For convenience, here is the text of the 508 standard in question: (l) When pages utilize scripting languages to display content, or to create interface elements, the information provided by the script shall be identified with functional text that can be read by assistive technology. 
As always, your opinions will be of value and interest. 
Cheers Anthony Anthony Quinn Interaction Design and Accessibility Specialist Access Testing Centre A division of Access OnLine Pty Limited 112 Alexander Street P: +61 2 9467 5047 Crows Nest NSW 2065 F: +61 2 9467 5020 E-mail: anthonyq@testingcentre.com 
This email is confidential, intended solely for the addressees, and may be legally privileged. 
If you're not the intended recipient, any access, copying, distribution, or action taken or omitted relying on it is prohibited and may be unlawful. 
Hi Anthony, In my understanding, Section 508 ?1194.22(l) and WCAG Checkpoint 6.3 are very different (compare http://www.jimthatcher.com/sidebyside.htm#508View and http://www.jimthatcher.com/webcoursea.htm). 
I interpret WCAG 6.3 to say that the page must work and carry all the same information when scripting is disabled. 
That means that scripting is relegated to things like attribute changes with mouse-Over and form verification that would happen on server side when scripting if off. 
Section 508, on the other hand, just requires that the results of scripts make sense to assistive technology. 
The simplest idea that is allowed by 508 and not by WCAG is simple writing (document.write) 
with JavaScript during page load, like for a ?Last updated? 
line. 
In the webcourse referenced above there are other examples. 
Jim 508 Web Accessibility Tutorial http://jimthatcher.com/webcourse1.htm. 
"Constructing Accessible Web Sites:" http://jimthatcher.com/news.htm 
Of Quinn, Anthony Hello all, I am interested in your opinions relating to the similarity or difference between rule L of US Section 508 standards and WCAG Checkpoint 6.3. 
My interpretation is that they are almost equivalent, except for the following differences: 1. 508 does not require a page with scripts to work if scripts are disabled or not supported, while WCAG 6.3 does. 
2. 508 says "...the information provided by the script shall be identified with functional text that can be read by assistive technology." 
My interpretation of "functional text" is a bit hazy. 
I would expect that this standard requires that information provided or created by a script and the user interface controls used to manipulate the script, i.e. the input and output elements generated by the script, are in themselves accessible. 
However, it seems that this is not the case and all that is required is to "identify" the information. 
I interpret this as "provide a text description of the information". 
This suggests that it's OK for the output from a script to be inaccessible, as long as it has an accessible description. 
For example, a user might invoke a script which generates a bus timetable between locations A &amp; B. The information contained in the timetable might be inaccessible, but as long as there is an identification, e.g. "Here is the bus timetable between A &amp; B", this is compliant with rule L. 
I'm basing this on my interpretation of an explanation of 508 rule L which is available at this URL For convenience, here is the text of the 508 standard in question: (l) When pages utilize scripting languages to display content, or to create interface elements, the information provided by the script shall be identified with functional text that can be read by assistive technology. 
As always, your opinions will be of value and interest. 
Cheers Anthony Anthony Quinn Interaction Design and Accessibility Specialist Access Testing Centre A division of Access OnLine Pty Limited 112 Alexander Street P: +61 2 9467 5047 Crows Nest NSW 2065 F: +61 2 9467 5020 E-mail: anthonyq@testingcentre.com 
This email is confidential, intended solely for the addressees, and may be legally privileged. 
If you're not the intended recipient, any access, copying, distribution, or action taken or omitted relying on it is prohibited and may be unlawful. 
I would also summarize by saying that WCAG 1.0 Checkpoint 8.1 (see note 1) is more the same as 508 paragraph L, in fact I agree with Jim that 508 and WCAG are more like exact opposites here. 
WCAG 1.0 is much older and focused on removing the need for JavaScript while 508 is more forward thinking and is focused on making JavaScript directly accessible. 
WCAG 8 says: "Guideline 8. Ensure direct accessibility of embedded user interfaces." 
Ensure that the user interface follows principles of accessible design: device-independent access to functionality, keyboard operability, self-voicing, etc. Checkpoint: 8.1 Make programmatic elements such as scripts and applets directly accessible or compatible with assistive technologies [Priority?1 if functionality is important and not presented elsewhere, otherwise Priority?2.] WCAG 1.0 is a little contradictory here, if the web site meets 6.3, i.e., runs with JavaScript turned off, then there would be no need to meet 8.1 and make the JavaScript directly accessible. 
In my opinion, the need to be able to run without JavaScript is not a pure accessibility requirement now that assistive technologies have and can be made to directly support JavaScript. 
Use of JavaScript may still be of concern to some due to security fears and older technology that doesn't support JavaScript, but the important thing is to get it right in WCAG 2.0 by better defining what directly accessible JavaScript is. 
Removing this difference between 508 and WCAG 1.0 is a very important part in harmonizing the standards. 
Note 1 WCAG 8.1 checkpoint http://www.w3.org/TR/WCAG10/#gl-own-interface 
Note 2 WCAG 8.1 techniques Regards, Phill Jenkins, IBM Research Division - Accessibility Center 11501 Burnet Rd, Austin TX 78758 http://www.ibm.com/able 
I get your point. 
What would an attorney do with the phrase "identified with functional text". 
Clearly, most list members would believe that the meaning of the rule is that any information generated by a script must be provided in a way that can be accessed by assistive technologies. 
In your example, this would be the actual bus schedule, not just words that say, "the bus schedule is below this text". 
However, I've heard a lot of nit-picking over language in WCAG and 508, and would be interested to hear what a lawyer would say about the meaning of this specific phrase of the rule. 
Any lawyers out there? 
Andrew Andrew Kirkpatrick CPB/WGBH National Center for Accessible Media 125 Western Ave. 
Boston, MA 02134 E-mail: andrew_kirkpatrick@wgbh.org Web site: ncam.wgbh.org 
617-300-3400 (main NCAM) 617-300-2489 (TTY) WGBH enriches people's lives through programs and services that educate, inspire, and entertain, fostering citizenship and culture, the joy of learning, and the power of diverse perspectives. 
I agree that removing the difference is important. 
508 should harmonize with wcag and 2.0 should continue to warn that hava script should not be needed for accessibility. 
Onder technologies and security are still a long way from being resolved. 
I would also summarize by saying that WCAG 1.0 Checkpoint 8.1 (see note 1) is more the same as 508 paragraph L, in fact I agree with Jim that 508 and WCAG are more like exact opposites here. 
WCAG 1.0 is much older and focused on removing the need for JavaScript while 508 is more forward thinking and is focused on making JavaScript directly accessible. 
WCAG 8 says: "Guideline 8. Ensure direct accessibility of embedded user interfaces." 
Ensure that the user interface follows principles of accessible design: device-independent access to functionality, keyboard operability, self-voicing, etc. Checkpoint: 8.1 Make programmatic elements such as scripts and applets directly accessible or compatible with assistive technologies [Priority 1 if functionality is important and not presented elsewhere, otherwise Priority 2.] WCAG 1.0 is a little contradictory here, if the web site meets 6.3, i.e., runs with JavaScript turned off, then there would be no need to meet 8.1 and make the JavaScript directly accessible. 
In my opinion, the need to be able to run without JavaScript is not a pure accessibility requirement now that assistive technologies have and can be made to directly support JavaScript. 
Use of JavaScript may still be of concern to some due to security fears and older technology that doesn't support JavaScript, but the important thing is to get it right in WCAG 2.0 by better defining what directly accessible JavaScript is. 
Removing this difference between 508 and WCAG 1.0 is a very important part in harmonizing the standards. 
Note 1 WCAG 8.1 checkpoint http://www.w3.org/TR/WCAG10/#gl-own-interface 
Note 2 WCAG 8.1 techniques Regards, Phill Jenkins, IBM Research Division - Accessibility Center 11501 Burnet Rd, Austin TX 78758 http://www.ibm.com/able 
I agree that 508 and WCAG are different. 
508 would seem to allow, according to the letter, text like "this applet is inaccessible" as an appropriate replacement, with the proviso that there is a system wihch meets 508's user agent requirements and which could have dealt with the script. 
WCAG requires that people can use the content without the script. 
It also requires that for people whose user agent can handle the technology, the onject is written so it is compatible with the user agent. 
As an example, it is possible in an interactive SVG image to include audio descriptions of the visual rendering, which can be triggered with voice commands. 
Under 508 it seems OK to simply have "you can't see this" provided to people without an accessible SVG viewer, so long as such a thing exists. 
Under WCAG 6.3 there needs to be some way to operate the functionality without an SVG viewer (although as Anthony said this seems counter to the spirit). 
It is also required by WCAG 8.1 that the SVG in question does have accessibility features used - it is not clear that this is required by 508 either. 
So I agree with David that the Section 508 requirements seem a little underspecified here in terms of ensuring actual accessibility to people. 
just my 2 cents worth... chaals Charles McCathieNevile Fundacion Sidar I'm not sure who david is here but If I have not yet weighed in on this thread, It is important to note that the us is a small part of the world and in the view of the world, has to live in the world rather than the other way round. 
It is also important to note that wcag is not a standard but something on which standards are based and if we let the bar slip, how far will the standards slip in a knee jerk response or for other reasons? 
I agree that 508 and WCAG are different. 
508 would seem to allow, according to the letter, text like "this applet is inaccessible" as an appropriate replacement, with the proviso that there is a system wihch meets 508's user agent requirements and which could have dealt with the script. 
WCAG requires that people can use the content without the script. 
It also requires that for people whose user agent can handle the technology, the onject is written so it is compatible with the user agent. 
As an example, it is possible in an interactive SVG image to include audio descriptions of the visual rendering, which can be triggered with voice commands. 
Under 508 it seems OK to simply have "you can't see this" provided to people without an accessible SVG viewer, so long as such a thing exists. 
Under WCAG 6.3 there needs to be some way to operate the functionality without an SVG viewer (although as Anthony said this seems counter to the spirit). 
It is also required by WCAG 8.1 that the SVG in question does have accessibility features used - it is not clear that this is required by 508 either. 
So I agree with David that the Section 508 requirements seem a little underspecified here in terms of ensuring actual accessibility to people. 
just my 2 cents worth... chaals Charles McCathieNevile Fundacion Sidar Based upon the overall Section 508 and Access Board comments, I believe your literal reading is incorrect. 
Specifically, I seem to recall an example where a script performs a login and the NOSCRIPT can't simple say "This is the login page" but has to provide the functionality (i.e., allow the user to actually login). 
In your example, where an accessible SVG viewer exists, my understanding is that the page needs to provide the URI to download the plugin and not simply say "sorry but you can't see this". 
That said, I agree with Phil's comment, "508 is more forward thinking and is focused on making JavaScript directly accessible." 
Regards, Larry Hi Folks, I eventually concluded that the wording "functional text" in Rule L refers to the output of the script. 
In this respect, I think 508 L is closer to WCAG 8.1. 
However, that's my "eventual" interpretation and to a degree, I interpret it that way because I want the script to be accessible. 
My initial thinking was that the functional text was basically what Charles has described. 
The real problem here, is that the standard is not that clearly defined. 
It's open to interpretation. 
Sorry if this adds to the confusion but such is life. 
Cheers Anthony Based upon the overall Section 508 and Access Board comments, I believe your literal reading is incorrect. 
Specifically, I seem to recall an example where a script performs a login and the NOSCRIPT can't simple say "This is the login page" but has to provide the functionality (i.e., allow the user to actually login). 
In your example, where an accessible SVG viewer exists, my understanding is that the page needs to provide the URI to download the plugin and not simply say "sorry but you can't see this". 
That said, I agree with Phil's comment, "508 is more forward thinking and is focused on making JavaScript directly accessible." 
Regards, Larry focused and be I agree that with the overall commentary and exegesis 508 is clarified - although it does show that the attempt to create something that would not need such clarification was unsuccessful. 
(I believe that is a problem with the difficulties of explaining complex information to humans, not a problem with 508 per se). 
Both 508 and WCAG require accessbile Javascript - WCAG via checkpoint 8.1 whose value Phill claimed was nil. 
WCAG requires, in addition, a working fallback, for situations which arise in the world like "there is an accessible plugin in english, but the content of the page is in hebrew", or "the plugin which meets the 508 requirements unfortunqtely doesn't meet the requirements of a particular user". 
Comparing the two side by side I think there is little evidence to sustain the argument that 508 is more forward thinking. 
It is narrower in focus, removing many of the backward-compatibility provisions of WCAG among other things. 
cheers chaals Charles McCathieNevile Fundacion Sidar 
