Per previous note, Here is the new draft for review. 
It is not linked off the GL home page so you will have to use the URL below if you want to find it. 
Try it. 
You'll like it. 
(or send in your comments) Gregg Gregg C Vanderheiden Ph.D. Professor - Human Factors Dept of Ind. 
Engr. - U of Wis. 
Director - Trace R &amp; D Center GV@tracecenter.org , http://tracecenter.org/ 
For a list of our listserves send "lists" to listproc@tracecenter.org I'm afraid we still have this problem in the imagemaps section (section 3 in this document): 'authors should indicate with the "alt" attribute of the MAP element' The MAP element doesn't have an ALT attribute. 
The only elements relevant to this context that can have an ALT attribute are the IMG and the AREAs. 
Also, there seems to be an internal contradiction. 
The use of client side maps _instead_of_ server side maps is "Required", (which literally means that the presence of a server-side map, even in conjunction with an equivalent client-side map, would be forbidden, could that really have been the intention?), but the note then discusses what to do when only server-side maps are used - which the "requirement" has literally already ruled out? 
I don't really understand what the drafters meant by "when a server-side map must be used", but I'm assuming they have some concrete situation in mind. 
Are they for example thinking of a contest or puzzle, with the answers hidden in the server, and the use of a client-side map could give the answers away? 
Might I suggest that the requirement itself would be better stated as "Provide client-side maps and/or provide alternative means of accessible navigation". 
That avoids any internal contradiction with the rest of what is said, and seems to me to express the functional requirements without unnecessarily enforcing one specific solution for all possible imagemap contexts. 
"Invisible images used as spacers" I think the recommendation ought to read something like this ... 'Provide "null" (ALT="") or "white space" (ALT=" ") alt-text, whichever the context needs.' best regards Hi Alan, Thanks for the quick review. 
1) Regarding 'authors should indicate with the "alt" attribute of the MAP element' You are correct. 
That should read the "alt" attribute of the IMG element. 
It is on our correction sheet and we were sure we had changed that one, but it looks like we somehow missed it in the cut and paste operations. 
(Or we made the change on a wrong copy). 
Thanks for catching it (again). 
We'll fix it this time - and quadruple check it. 
(is there such a thing a mnemetic text?) [mnemetic metal can be reshaped but it will return to its original shape if heated] 2) Regarding REQUIRED This is a topic that comes up a lot. 
I will put this in a separate email for thread purposes. 
3) Ignoring the Required part for now - your suggesting regarding wording on the image maps is interesting. 
It doesn't capture it all but it is an interesting tack. 
We will have to look at this. 4) Ditto for the suggestion on spacers. 
This one however is kind of a hot one. 
LOTS of opinions on null alt text. 
However, in this context, there may be places where at least a space I required to keep text from running together if the spacer is removed. 
Hmmmmmmmm Gregg Gregg C Vanderheiden Ph.D. Professor - Human Factors Dept of Ind. 
Engr. - U of Wis. 
Director - Trace R &amp; D Center GV@tracecenter.org , http://tracecenter.org/ 
For a list of our listserves send "lists" to listproc@tracecenter.org I'm afraid we still have this problem in the imagemaps section (section 3 in this document): 'authors should indicate with the "alt" attribute of the MAP element' The MAP element doesn't have an ALT attribute. 
The only elements relevant to this context that can have an ALT attribute are the IMG and the AREAs. 
Also, there seems to be an internal contradiction. 
The use of client side maps _instead_of_ server side maps is "Required", (which literally means that the presence of a server-side map, even in conjunction with an equivalent client-side map, would be forbidden, could that really have been the intention?), but the note then discusses what to do when only server-side maps are used - which the "requirement" has literally already ruled out? 
I don't really understand what the drafters meant by "when a server-side map must be used", but I'm assuming they have some concrete situation in mind. 
Are they for example thinking of a contest or puzzle, with the answers hidden in the server, and the use of a client-side map could give the answers away? 
Might I suggest that the requirement itself would be better stated as "Provide client-side maps and/or provide alternative means of accessible navigation". 
That avoids any internal contradiction with the rest of what is said, and seems to me to express the functional requirements without unnecessarily enforcing one specific solution for all possible imagemap contexts. 
"Invisible images used as spacers" I think the recommendation ought to read something like this ... 'Provide "null" (ALT="") or "white space" (ALT=" ") alt-text, whichever the context needs.' best regards Section 1.1 requires that authors "Use elements that comply with the strict HTML 4.0 Definition". 
The wording is a bit odd here in that one could interpret it to mean that HTML 4.0 Strict elements have to be used but attributes have no such restriction. 
I assume the intention is to require valid, HTML 4.0 Strict documents, which I think is unrealistic. 
Valid HTML (as defined by http://validator.w3.org/ ) should be required, but most authors would prefer HTML 4.0 Transitional or Frameset over HTML 4.0 Strict since that allows them to use APPLET and various harmless attributes such as ALIGN. 
As a side note, the draft declares itself to be HTML 4.0 Strict but uses deprecated ALIGN attributes that are only in HTML 4.0 Transitional. 
(There are also some &amp;nbsp;'s that look like leftovers from a WYSIWYG editor or a conversion program, e.g., "the WAI author guidelines can&amp;nbsp; also".) Section 1.3: We should probably explain what is meant by "proper" and "improper" nesting of headings. 
Section 1.8: Confusing terminology is used as ALIGN, BORDER, and BACKGROUND are lumped in as "presentational elements" when they are presentational attributes. 
As well, BORDER is not deprecated and it does no harm (that I can see) from an accessibility point of view. 
Section 1.10 mentions the CITE attribute as being used to indent a paragraph. 
The CITE attribute has no such use; it's not even supported by any browsers that I know of. 
Section 2.1.1 is a nice improvement. 
Section 2.1.2 still uses "XYZ Logo" as alternate content. 
The example in section 2.5 is good, but I don't see the point in using the TITLE attribute specifically for images used as links. 
If the content of the link is abbreviated or not context-free, then the TITLE attribute should be used on the A element. 
But if the content of the link (including the ALT text) is a sufficient description of the link's contents, then using the TITLE attribute is unnecessary and redundant. 
Section 3.1 requires the use of alternative text for each script. 
The dynamic interactivity provided by client-side scripts generally cannot be replaced by static content. 
The user is often better off not knowing about the script. 
A good example is client-side form validation, for which no alternate content would be necessary or appropriate since a good author would duplicate the validation with the server-side form handler. 
Section 3.2 requires alternative text for each applet and suggests using the ALT attribute. 
There is no point to the ALT attribute on APPLET; it should not be used since markup-rich alternate content can be provided as the content of the APPLET element. 
The example's ALT text would be better suited as a TITLE attribute value. 
As well, decorative applets and objects may not require alternative content, just as some IMG elements should use ALT="". 
Minor corrections: Java applets as OBJECT elements should use CLASSID="java:Press.class" instead of CLASSID="Press.class" according to the examples in the HTML 4.0 Recommendation [2]. 
And section 3.2.2 uses "application/mpeg" in an example when the registered media type for MPEG videos is "video/mpeg" [3]. 
Sections 3.2 and 3.3 seem to be redundant. 
Section 3.6 mentions "the following example", but there is no example. 
Section 6.1 uses "for the text version click here" as an example of good link text. 
I don't think we should advocate any example that uses "click here" due to its device dependence. 
Section 6.3 uses "Press C to go to XYZ page" for a link with "C" as an access key. 
This is worse than "Click here for XYZ page" since almost no browsers support the ACCESSKEY attribute. 
We have to depend on the user agent to indicate the access key; to facilitate this the access key should be present in the link text, e.g., A accesskey="X" href="doc.html" 
XYZ page /A . 
Section 10.14 includes a link to A Kinder, Gentler Validator, which is out-of-date. 
The W3C Validator should be sufficient. 
[1] http://lists.w3.org/Archives/Public/w3c-wai-gl/1998AprJun/0020.html [2] http://www.w3.org/TR/REC-html40/struct/objects.html#edef-OBJECT [3] ftp://ftp.isi.edu/in-notes/iana/assignments/media-types/media-types 
Liam Quinn Web Design Group Enhanced Designs, Web Site Development Each region of a client side map must conform to one of the shapes supported by the SHAPE attribute defined in the HTML 4.0 specification. 
If a more complex map is to be created, in which the regions are irregular in shape, then the author has no choice but to opt for a server side map. 
Hence it is necessary for the guidelines to provide an alternative solution which can be applied whenever this contingency arises. 
This is only true in the short term. 
Perhaps the guideline should state that a valid HTML 4.0 transitional or frameset document is required, but it is recommended that authors comply with the HTML 4.0 strict DTD. 
There is an apparent inconsistency between the guidelines concerned with image maps. 
One can not both require that client-side maps be used, and then provide an alternative in the event that server-side maps are needed. 
By definition, the "required" classification in this context would preclude the use of server-side maps altogether. 
Perhaps an alternative would be: (1) Required: either make the image map accessible or provide a textual alternative. 
Recommended: use client-side maps. 
Required: if server-side maps must be used ... Also, the document as a whole needs to be proofread and edited for grammar and style. 
It contains a number of obvious errors which have probably resulted from the many rounds of revision which the text has undergone. 
I know from personal experience that elementary mistakes can easily arise during the editing of a document and that careful proofreading is the best means of identifying them. 
I.e one of RECT, CIRCLE, POLY or DEFAULT You have me at a loss now. 
I wasn't aware that typical server-side maps supported any other shapes. 
The CERN server supports circle, rectangle and polygon: NCSA and Apache support rect, poly, circle and point. 
While "point" may offer additional convenience, I think it can be adequately simulated for a client side map by using the available shapes. 
Or were you thinking of some kind of custom script, instead of the server's own imagemapping program? 
Yes, I wasn't offering any objection at all to that as a principle (I was a bit concerned about the self-contradictory way in which the guidelines set it down, but that has already been discussed in the last few days). 
The point of my question was not to object to the principle, but rather to learn more about what kind of situations the drafters had in mind as ones where a server-side map "must be used". 
best regards 

Section 3.2 requires alternative text for each applet and suggests using the ALT attribute. 
There is no point to the ALT attribute on APPLET; it should not be used since markup-rich alternate content can be provided as the content of the APPLET element. 
The example's ALT text would be better suited as a TITLE attribute value. 
As well, decorative applets and objects may not require alternative content, just as some IMG elements should use ALT="". 
I agree that ALT and the markup inside of APPLET need to be better defined. 
Also for OBJECT as well. 
I though that it was okay to say that the markup was sufficient, but is it? 
Wendy's testing of the OBJECT tag had dismal results for accessibility. 
What should a browser do when it recognizes the tag, but is not displaying the applet or object because of (a) user choice or (b) the operation failed? 
Should the browser display the ALT attribute or the markup in-between? 
More importantly, what should authors do? 
For example, O'Reilly's "HTML: The Definitive Guide" 2nd Edition has this to say about the matter: Page 400, Section 13.1.5.11 Supporting incompatible browsers Since some browsers may not support applets or the applet tag, sometimes you may need to tell readers what they are missing. 
You do this by including HTML body content between the applet and /applet tags. 
Remember that this contained text is different from the text supplied by the alt attribute of the applet tag. 
The ALT text is displayed by browsers that support the applet tag but cannot execute or display the specified applet. 
The contained text is displayed by browsers that do not support the applet tag at all. 
In order to accommodate both classes of browsers, the considerate author supplies both for each applet tag. 
If your browser were capable of handling applets, you'd see a nifty analog clock right here! 
LQ:: This is silly. 
The result is that newer browsers provide less capable replacements for APPLETs since they move from giving rich markup alternatives (the content of the APPLET) to plain text alternatives (the ALT attribute) when they add support for the APPLET element. 
APPLET allows replacements with full markup; let's not throw that away because somebody made a mistake and added an ALT attribute to APPLET. 
(There's a reason why OBJECT doesn't have an ALT attribute.) 
I don't see a need to have different alternate content depending on whether the browser supports the APPLET element or not. 
Either way, the user will not see the APPLET. 
Besides, the guidelines clearly don't care about pre-HTML 3.2 browsers, so we can probably assume APPLET support for the sake of the guidelines. 
By the way, the April 13th draft mentions in numerous places that the ALT attribute is required for APPLET. 
This is not the case in any version of HTML. 
Liam Quinn Web Design Group Enhanced Designs, Web Site Development I don't disagree with any of your points. 
I'm trying to get guidance on how Internet Explorer should be representing OBJECT and APPLET when it encounters them but for some reason isn't going to display them. 
Do we always display the markup or just display the ALT (if available)? 
I agree that we should display the markup, but if web masters are following the recommendation of O'Reilly book (and possibly others), then their efforts will be lost. 
What about the down-level browser case? 
Since APPLET does have an ALT attribute, but OBJECT does not, the W3C is sending mixed signals and that needs to be corrected. 
My point in bringing this up is that this is a complex problem, requiring changes to (a) the guidelines, (b) HTML and (c) user agents. 
More to the the LQ:: This is silly. 
The result is that newer browsers provide less capable replacements for APPLETs since they move from giving rich markup alternatives (the content of the APPLET) to plain text alternatives (the ALT attribute) when they add support for the APPLET element. 
APPLET allows replacements with full markup; let's not throw that away because somebody made a mistake and added an ALT attribute to APPLET. 
(There's a reason why OBJECT doesn't have an ALT attribute.) 
I don't see a need to have different alternate content depending on whether the browser supports the APPLET element or not. 
Either way, the user will not see the APPLET. 
Besides, the guidelines clearly don't care about pre-HTML 3.2 browsers, so we can probably assume APPLET support for the sake of the guidelines. 
By the way, the April 13th draft mentions in numerous places that the ALT attribute is required for APPLET. 
This is not the case in any version of HTML. 
Liam Quinn Web Design Group Enhanced Designs, Web Site Development I would propose three modes of browsing that are easily selectable by the user (a la Opera's images-on-off-cached toggle): 1. 
All objects rendered if possible. 
2. Objects replaced by alternative content. 
There should be no indication that an object is present. 
3. Objects replaced by alternative content that is surrounded by a border (possibly inset) with an icon indicating that an object is present. 
A pop-up menu would provide a method of loading an individual object or all objects in a document on request. 
For more user flexibility, you could have a list of objects which would still be rendered if possible in modes 2 and 3. For example, a blind user might want embedded audio clips to be rendered but not other objects while a deaf user might want all objects except embedded audio clips to be rendered. 
Under mode 2: i. 
If there is alternate content within the element, render the alternate content as if there were no embedded object. 
ii. 
If there is no alternate content within the element and the APPLET element is used, render the ALT text as if there were no embedded object. 
iii. 
If there is no alternate content and no ALT text, render nothing. 
For mode 3, the above steps would also be followed except that the alternative content would be surrounded by a border with an icon indicating that an object is present. 
The icon should be sufficient for case iii. 
But if the authors are following the recommendation [1] of my HTML 4.0 Reference [2], then their efforts will pay off :-) Putting the alternate content within the element is the ideal solution for browsers that do not support the element. 
APPLET is deprecated; OBJECT is not. 
I think that provides as much clarity as is possible without removing the ALT attribute entirely (an option that I'd prefer, but probably not too practical since HTML 3.2 contains it). 
[1] http://www.htmlhelp.com/reference/html40/special/applet.html [2] http://www.htmlhelp.com/reference/html40/ 
Liam Quinn Web Design Group Enhanced Designs, Web Site Development 
