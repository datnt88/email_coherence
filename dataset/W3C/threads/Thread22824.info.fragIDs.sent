In DOM L2 only INPUT elements can have focus. 
They have the focus() method which makes them receive input. 
Although this is not part of the spec yet, 
I assume that those elements will fire onKeyClick events or something similar. 
What I don't understand is how will DOM L3 handle situation when no INPUT element has focus. 
Note that this might be very useful for implementing "manual" focus navigation - one could write an app that draws DIVs and hand logical focus from one to the other. 
However, the prerequisite is that I can somehow get keyboard events. 
IE 5.0 has an elegan solution - one can give focus to almost any DOM element. 
For example, I can focus a DIV and it will fire keyboard events. 
Although this is not DOM (yet), I was able to write a DOM-like wrapper for keyboard events. 
Will DOM L3 try to address this issue any time soon? 
Sincerely yours Boris Motik 
Hello. Being able to set a keyboard listener to DIV is great. 
However, if the DIV doesn't have focus() method, will it get the event after all (once when the 
even interface has been defined)? 
That is, will a DOM implementation be required to deliver onKeyClick (or something similar) to the DIV even if there are no descendants of it that are of INPUT type="TEXT" defined for the DIV? 
Thank you very much Boris Motik keshlam@us.ib 26.06.2000 
Subject: Re: Keydoard handling - who has the focus? 
14:58 
The focus() method you're mentioning is defined only in the HTML DOM. 
And I believe its behavior was taken pretty directly from the constraints of HTML 4.0. 
One way to step out from under it might be to process your document using an XML DOM. 
Note that DOM Level 2 doesn't define keyboard events at all; they were deferred pending input from the I18N and WAI Working Groups. 
Also note that the DOM Level 2 Events module doesn't have any concept of focus; that's dealt with outside the DOM and affects which node the event is dispatched to. 
Of course you could also set a keyboard-event listener on your DIV node and either capture the events before they reach the DIV's descendents, or respond after they've bubbled upward (assuming that the inner elements haven't cancelled the event before bubbling reaches the DIV). 
Joe Kesselman / IBM Research 
If someone posts a DOM event to a child of the DIV/ , normal DOM event handling says that the event's flow is subject to both capture and bubble... so unless an earlier handler cancels the event flow, it should reach the DIV/ But I'm really not sure whether an HTML system will ever post a keyboard event to any node except an input element. 
I _think_ that's something for the HTML spec to determine, rather than the DOM...? Joe Kesselman / IBM Research 
