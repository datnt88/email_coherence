I've been trying to figure out how to add If-Match (I-M) and If-None-Match (I-N-M) to my server. 
I'm getting a severe headache as I read and reread the relevant sections and try to understand the interactions between them and If-Modified-Since (I-M-S) and If-Unmodified-Since (I-U-S). 
(I haven't even got to If-Range yet!) The remarks below apply to a simple server that's trying to respond to a GET. 
14.25 If-Match If the request would, without the If-Match header field, result in anything other than a 2xx status, then the If-Match header MUST be ignored. 
This paragraph implies to me that I should test I-M-S before I-M, because it's possible that I-M-S could produce a 304. 
(Note that Apache 1.2.5 does the I-M test first, on the theory that I-M is a more accurate test. 
I'm using Apache as a reference because I'm assuming that Roy had a strong hand in the code. 
So I would expect it to reflect the desired behavior.) 14.26 If-None-Match If any of the entity tags match the entity tag of the entity that would have been returned in the response to a similar GET request (without the If-None-Match header) on that resource, or if "*" is given and any current entity exists for that resource, then the server MUST NOT perform the requested method, unless required to do so because the resource's modification date fails to match that supplied in an If- Modified-Since header field in the request. 
Instead, if the request method was GET or HEAD, the server SHOULD respond with a 304 (Not Modified) response, including the cache-related entity-header fields (particularly ETag) of one of the entities that matched. 
For all other request methods, the server MUST respond with a status of 412 (Precondition Failed). 
Same remarks here. 
Same remarks about Apache. 
The problem is, if I test I-M-S first, then I-N-M, I can run afoul of this part of 14.26: If none of the entity tags match, then the server MAY perform the requested method as if the If-None-Match header field did not exist, but MUST also ignore any If-Modified-Since header field(s) in the request. 
That is, if no entity tags match, then the server MUST not return a 304 (Not Modified) response. 
Also, I'm uncertain what the proper behavior is for I-N-M if an Etag match succeeds and there's no I-M-S, or if there's an I-M-S and the file has been modified since the I-M-S date. 
Return 412 (Precondition Failed)? 
The response isn't well specified. 
I'm too confused to ask any further coherent questions, so I'll wait for responses to these. 
Dave Kristol 
[Warning: lengthy analysis follows.] 
14.25 If-Match If the request would, without the If-Match header field, result in anything other than a 2xx status, then the If-Match header MUST be ignored. 
This paragraph implies to me that I should test I-M-S before I-M, because it's possible that I-M-S could produce a 304. 
(Note that Apache 1.2.5 does the I-M test first, on the theory that I-M is a more accurate test. 
I'm using Apache as a reference because I'm assuming that Roy had a strong hand in the code. 
So I would expect it to reflect the desired behavior.) 
First of all, I think it's a mistake to refer to the Apache implementation to try to figure out what your implementation should do. 
It's quite possible that Apache does the right thing; however, the IESG expects us to document multiple "independent" implementations based on the specification, and it seems to me that basing your decision on how Apache did it subverts this goal. 
If the spec is wrong or ambiguous, we need to fix it, but not on the basis that any particular existing implementation has already chosen one option. 
I should also point out that this specific topic was discussed on the HTTP-WG mailing list in mid-November (1997), resulting in some changes that might not have appeared in a release of Apache that came out in early January. 
So that version of Apache wouldn't necessarily agree with the specification anyway (although the Apache people know better than I do what kind of schedule they followed). 
Anyway, the specific "issue" to look at is IMS_INM_MISMATCH, which cites as a "fix" my message: and a follow-up: Let me start by addressing your questions regarding If-None-Match, since that is what we have already discussed and resolved (?): 14.26 If-None-Match If any of the entity tags match the entity tag of the entity that would have been returned in the response to a similar GET request (without the If-None-Match header) on that resource, or if "*" is given and any current entity exists for that resource, then the server MUST NOT perform the requested method, unless required to do so because the resource's modification date fails to match that supplied in an If- Modified-Since header field in the request. 
Instead, if the request method was GET or HEAD, the server SHOULD respond with a 304 (Not Modified) response, including the cache-related entity-header fields (particularly ETag) of one of the entities that matched. 
For all other request methods, the server MUST respond with a status of 412 (Precondition Failed). 
The problem is, if I test I-M-S first, then I-N-M, I can run afoul of this part of 14.26: If none of the entity tags match, then the server MAY perform the requested method as if the If-None-Match header field did not exist, but MUST also ignore any If-Modified-Since header field(s) in the request. 
That is, if no entity tags match, then the server MUST not return a 304 (Not Modified) response. 
I'm not sure there is a contradiction. 
The first paragraph you cite from 14.26 says (if I'm not confused by my own words!) if (any entity tags match) { if (IMS-date != last-modified) { MUST perform method else { MUST NOT perform method if (method == GET or HEAD) return 304 else return 412 else { unspecified behavior The second paragraph says, in effect if (no entity tags match) { process request, ignoring any IMS header else { unspecified behavior MUST NOT return 304 The composition of these two conditionals should be obvious ... Dave asks: Also, I'm uncertain what the proper behavior is for I-N-M if an Etag match succeeds and there's no I-M-S, or if there's an I-M-S and the file has been modified since the I-M-S date. 
Return 412 (Precondition Failed)? 
The response isn't well specified. 
It is possible to edit the first quoted paragraph, by deleting inapplicable clauses, to answer these two questions: for I-N-M if an Etag match succeeds and there's no I-M-S, "If any of the entity tags match ... the server MUST NOT perform the requested method" (since the "unless" clause in that sentence isn't triggered). 
"[If] the request method was GET or HEAD, the server SHOULD respond with a 304 ... [for] all other methods, ... respond with a status of 412." if there's an I-M-S and the file has been modified since the I-M-S date. 
"the server ... is required to do so [i.e., perform the method] because the resource's modification date fails to match that supplied in an If-Modified-Since header field in the request." 
I suspect the english here could be a bit clearer, but I don't think it's actually ambiguous or contradictory. 
Now, back to If-Match. 
You're basically asking what to do if you see this request: GET /foo.html 
HTTP/1.1 Host: research.bell-labs.com 
If-Match: "xyzzy" If-Modified-Since: Wed, 25 Feb 98 14:51:40 GMT To me, this looks like a meaningless (or at best, highly unlikely) request. 
What it appears to mean is that the client only wants the entity-body of /foo.html if the resource HAS been changed since the last-modified date of the client's current cache entry for /foo.html, 
AND if the (strong) entity tag HAS NOT changed. 
In other words, I can't see much of a reason for combining If-Match and IMS. 
It might make more sense to combine If-Match and If-Unmodified-Since, e.g.: GET /foo.html 
HTTP/1.1 Host: research.bell-labs.com 
If-Match: "xyzzy" If-Unmodified-Since: Wed, 25 Feb 98 14:51:40 GMT but then I think the only question is whether this means that the request is performed if all of the "If-*" conditions are met, or if at least one of them is met. 
The language in the spec for If-Match is: If none of the entity tags match ..., the server MUST NOT perform the requested method, and MUST return a 412 (Precondition Failed) response. 
[...] If the request would, without the If-Match header field, result in anything other than a 2xx status, then the If-Match header MUST be ignored. 
and the language for If-Unmodified-Since is: If the requested variant has been modified since the specified time, the server MUST NOT perform the requested operation, and MUST return a 412 (Precondition Failed). 
If the request normally (i.e., without the If-Unmodified-Since header) would result in anything other than a 2xx status, the If-Unmodified- Since header should be ignored. 
It turns out that there *is* a contradition here: if none of the entity tags match AND if the variant has been modified, then each header "wants" to cause us to return 412, but the rules for each header individually says "ignore me because my buddy wants us to return 412". 
So I think the phrase "2xx status" in both quotes above should be "2xx or 412 status". 
With that fix applied (I'll submit this as an "issue"), I think the meaning of a request with both IM and IUS is straightforward: if ((no entity tags match the If-Match value) or (last-modified date not same as IUS value)) { return 412 else { process request, ignoring If-Match and If-Unmodified-Since hdrs Clear? 
-Jeff 
[More lengthy commentary follows.] 
My thanks to Jeff Mogul for his clarifications. 
I won't copy the whole discourse here, but I do have follow-up comments. 
Despite the IESG's need for independent implementations, I resorted to looking at the Apache code in the hope that that code would help me to understand what the spec. 
was trying to say. 
It didn't help. 
The reasons I didn't follow the tangled discussions in November on this issue were multiple. 
The most obvious is that, with something this tangled, it's hard to follow in the abstract. 
Now that I'm actually trying to implement, my interest is higher, and my attention is greater. 
Jeff's comments, taken piece by piece, make sense. 
While I'm not the sharpest person in HTTP-WG, I think I should have been able to follow the spec. 
and I couldn't. 
I'm concerned that my difficulty suggests it will be far too easy for others to "get it wrong" too, which is the antithesis of what the spec. is meant to do. 
I commend Jeff's little snippets of pseudo-code, and I wonder whether they aren't a whole lot more helpful that the paragraphs of confusing words. 
Maybe they should be in the spec. 
(And, see below.) The overall problem I have with Jeff's explanation is that it assumes a reasonable client. 
But a good implementation has to deal with an arbitrary combination of headers, even those that seem to make no sense. 
Of course the spec. 
itself should also be consistent even in the face of "unreasonable" combinations of headers. 
So I find myself trying to deal with all combinations of I-M-S, I-U-S, I-M, and I-N-M. 
Architecturally I want to have a single routine to handle all the conditional headers. 
At the very least it would have to look something like if (header1 exists) process header1 if (header2 exists) process header2 Those might be "else if", but you get the idea. 
The "process" step might end with exiting the routine. 
So the next question is, which header is header1, which is header2, etc.? Let me try the following pseudo-code on the group. 
Do you think it reflects the spec. 
(as revised by Jeff's remarks about 412)? 
/* Test conditional headers. 
*/ suppress-IMS = 0; /* If-None-Match */ if (I-N-M is present) { if (any entity tags match) { if (IMS-date == last-modified) { /* MUST NOT perform method */ if (method == GET or HEAD) return 304 else return 412 /* Note: fall through to test other conditionals. 
*/ else { /* no tags match; must suppress 304 (Not Modified) */ suppress-IMS = 1; /* If-Modified-Since */ if ( suppress-IMS == 0 &amp;&amp; I-M-S is present &amp;&amp; method == GET &amp;&amp; IMS-date != last-modified) return 304 /* If-Match */ if (I-M is present &amp;&amp; no entity tags match) return 412 /* If-Unmodified-Since */ if (I-U-S is present &amp;&amp; IUS-date != last-modified) return 412 return process method One nit from 14.26 If-None-Match Instead, if the request method was GET or HEAD, the server SHOULD respond with a 304 (Not Modified) response, including the cache-related entity-header fields (particularly ETag) of one of the entities that matched. 
The description of If-Modified-Since says it applies to GET, but when it's used in conjunction with If-None-Match it evidently also applies to HEAD. 
Is that what is intended? 
Should something in that regard be said in the I-M-S description? 
Dave Kristol 
