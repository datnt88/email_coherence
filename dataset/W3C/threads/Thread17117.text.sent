Could someone advise me is it possible to change the default value for a button of input type="file" in a form the default seems to be " browse" and that is not appropriate. 
it may be my code but i have tried value="find" without success thanks No doubt this is not the correct place to ask, my apologies Jonathan That sets the default file name, which is generally ignored, for security reasons. 
I would say that this was really a user agent design issue, as the meaning doesn't change from page to page. 
You might be able to change it in a Mozilla skin. 
Failing that it is a styling issue, and styling is generally very limited when it comes to controls, which, for IE, at least, are generally the standard OS controls (so if browse is a bad choice of words, this is probably If the implementation of file input involves a button, then the text in the button is up to the user agent. 
The text in the button tends to vary according to the language of the user agent, i.e. the language used in its user interface like menus, help texts, and error messages. 
Why do you think "find" would be an improvement? 
When I use, say, Opera (Finnish version), a file input element appears as as a box for a filename together with a button with the text "Valitse" on it. 
It may look odd on a page in English, for example, but that's what I'm accustomed to as a user of that browser. 
If you managed to change it to "find", it would look like a submit button to me. 
The important thing is the recognizability of a browse button as a browse button. 
When you first encounter one, you are probably puzzled. 
Later, you will remember what you learned, and expect a button with some specific text act as a way of browsing your computer's file system. 
File input elements - or, rather, their poor implementation in browsers - involves serious accessibility problems. 
Some of them are discussed at my Jukka "Yucca" Korpela, http://www.cs.tut.fi/~jkorpela/ 
David, I did think about this, and in my view it may not be a CSS problem as it is the word 'BROWSE' which one needs to be able to change, the styling can be changed. 
The word might easily change from page to page, depending on the local meaning to the user, eg browse, find , look, search similarly one might wish to associate an image such as 'document','speaker' or 'graphic' with the browse button, which may not be possible at present. 
and one may further wish to suggest likely locations, such as 'My Pictures' or 'google images' so it still seems possible that this is a WCAG issue, in so far as 'browsing' is being enabled via a web page. 
Jonathan your sentence seems to have been caught short, in the copy i have: Jukka, It is the nature of our user group, people with severe learning difficulties that they need individual or personal solutions. 
Browse is not an easy word to read in English, find and look are arguably easier. 
further, browse has a laid back, relaxed meaning(similar to meander) whereas find look and search are probably perceived as more proactive. 
of greater concern is the reality that many of our users cannot read, and would benefit from an associated image. 
it might seem that this is perverse, but XP and some other OS allow one to see thumbnails. 
Jonathan That means _user agent_ tuning, does it not? 
If you used a site-specific solution that makes the button text "Find" on your site, people would then be even more confused on all other pages, which are displayed using "Browse", or whatever the user agent shows by default. 
Well, English is one of 6,000 or so languages, and it is admittedly common even in contexts where it shouldn't, such as user interfaces of Web browsers used by people who don't know English well. 
But "browse" is hardly among the key problems here. 
I don't quite understand all the polysyllabic words there, but a) the word "Browse" (or whatever) is surely among the least difficult features in the implementation of file input b) words like "Find" or "Search" already have _two_ common meanings in Web surfing, namely searching for a string within a page (as per a user agent's functionality) and searching for a string within a site or the Web in general (as per a search form processed by a server side script); do we really need a third usage for further confusion? 
Maybe, but then they need to have the user agent tuned to use an image that they recognize. 
Using an image as a page-specific way of implementing browsing for file input selection (assuming it were possible - it probably will, some day), would alienate all the users who know well their browser's way of telling that they can invoke some file selection but cannot figure out what the image means. 
You mean in the file selection dialogue? 
Fine. 
But the "Browse" issue is about getting to such a dialogue in the first place. 
Jukka "Yucca" Korpela, http://www.cs.tut.fi/~jkorpela/ 
This should have ended: a problem with the design of Windows, rather than with the browser). 
As I've said before, although Jon didn't understand it, and thought I was joking, what he is really trying to do is to write his own user agent, using HTML, CSS and browser (proprietory) automation features as his user interface graphics library. 
This is, to some extent, common practice in the general commercial use of web browsers. 
Whilst he fails to get this point, and thinks he is writing web pages, I don't think he will really understand your point here. 
He's also trying to simulate things that really need a special markup language or extensions to the existing ones. 
I'd like to be able to say that the right way of writing your own user agent would be to start from Mozilla sources, but compared with hacking things with browser object models, there is just too steep a learning curve. 
It's this massive job of writing a custom user agent at this level that is probably why he thinks I'm joking when I say he's writing his own user agent, but, at least in principle, one could create a user agent creation kit that made custom user agents easier that carrying the user agent with the document (although many people would then ask how to do things that are not possible because of the simplification, as they do for hacking user agents with HTML etc.) (Things tend to be worse with commercial use of user agents written in HTML, as they usually want to force their user agent on every user of the page, as part of their corporate idendity, exacerbating the problem I was arguing with Joe Clark about design leading to a lack of consistency in user interfaces, making the web difficult to learn from cold.) The only context in which I can see a justification for using any word other than that normally used by the shell is if the site in question would be the only experience the user would ever have of using a computer with that shell (or with a similar shell). 
Otherwise your just creating another piece of jargon. 
In fact it's worse; you're creating an ideolect. 
Yes, Jon's clients fit this pattern. 
If he doesn't adapt the look-and-feel from the native shell, the computer just doesn't work for them and so they have no other experience of [successfully] using the computer without the adaptations. 
As required to adapt the web for use by this community. 
Yes, under most circumstances a Web User Agent should inherit and follow the conventions of the client OS shell. 
This is clearly set out in the UAAG. 
On the other hand, where this must be adapted to rescue the availability of any service at all from the [Web browsing] application, it must be adapted. 
For better or for worse, the need of the cognitively disabled individual for us to fit our dialog into their existing ideolect (the language that they control) and not expect them to adapt to the shell designer's trumps the conventions of the native shell of the OS in use. 
They need an adapted shell with an appropriate look-and-feel (a real shell and not just a browser, if they are going to do any computer use other than browsing web stuff). 
If we can get there, we must go there. 
The experience is that some of these users only can use Web sited cooked to honor such rules, at present. 
Or to put it another way: -- a screen reader supplants the erstwhile 'shell in use.' -- an AAC device likewise takes over and is the 'shell in use.' -- SLD individuals absolutely need a look-and-feel that is much narrower than the default behavior of the common GUI shells. 
Much more like the waiter's order-entry touch-screen look-and-feel. 
Jonathan, I think your icon is a filing cabinet with one drawer pulled out. 
Signifying "look in the files." 
If you can get into XForms I believe you will find it much more friendly to everything that you need to do. 
I will see what I can do to get the U.S. Federal Government XForms pilots to generate working examples that would work for your clients. 
The PF group is working on an issues and strategies page that will go public soon in this area of natural language usage. 
Stretching 'natural language' enough to subsume synthetic, but then mnemonic, icon systems. 
Al 
