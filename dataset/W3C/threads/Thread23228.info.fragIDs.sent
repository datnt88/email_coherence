What do I need to be able to programmatically create XML that allows me to write the !DOCTYPE tag? 
I am using createProcessingInstruction to write the ? 
xml version="1.0" 
? . 
I have read that both the above and !Doctype are not available with DOM LEVEL 1, but obviously I have accomplished one of the two. 
What do I need to accomplish the writing of the !Doctype programmatically using C++ (Microsoft Visual Studio 6 sp4) ? 
I am moving MSXML 3.0. 
I hoping it has the W3C DOM LEVEL compliance necessary for this ability. 
Lisa Lombardo Software Engineer/Chief Fun Officer llombardo@courion.com 
COURION CORPORATION phone 508 879-8400, ext. 
203 www.courion.com 
http://www.courion.com/ 
THIS EMAIL CONTAINS CONFIDENTIAL INFORMATION AND IS INTENDED FOR THE RECIPIENT ONLY. 
PLEASE DELETE THIS IF YOU HAVE RECEIVED IT IN ERROR. 
As far as I know, this is not possible at this point in time. 
I have been using Xerces and not found it feasible. 
Please someone help me if I am wrong and tell me how. 
You could manually add the statement to the output xml file. 
Jeff "Lombardo, llombardo@cou cc: rion.com 
Subject: Creating !DOCTYPE programmatically Sent by: www-dom-reques t@w3.org 05/07/02 08:12 PM What do I need to be able to programmatically create XML that allows me to write the !DOCTYPE tag? 
I am using createProcessingInstruction to write the ? 
xml version="1.0" 
? . 
I have read that both the above and !Doctype are not available with DOM LEVEL 1, but obviously I have accomplished one of the two. 
What do I need to accomplish the writing of the !Doctype programmatically using C++ (Microsoft Visual Studio 6 sp4) ? 
I am moving MSXML 3.0. 
I hoping it has the W3C DOM LEVEL compliance necessary for this ability. 
Lisa Lombardo Software Engineer/Chief Fun Officer llombardo@courion.com 
COURION CORPORATION phone 508 879-8400, ext. 
203 www.courion.com 
http://www.courion.com/ 
THIS EMAIL CONTAINS CONFIDENTIAL INFORMATION AND IS INTENDED FOR THE RECIPIENT ONLY. 
PLEASE DELETE THIS IF YOU HAVE RECEIVED IT IN ERROR. 
DOM Level 2 added fields to DocumentType which can describe the !DOCTYPE . 
These are set at the time the DocumentType node is created -- which, in DOM2, must be before the Document node is created, since some enhanced DOMs might want to use the DocumentType information to help guide selection of specific DOM implementation classes. 
A modern DOM serializer should recognize those fields and produce the correct output. 
DOM3 was considering allowing later binding of the DocumentType node to the Document; I'm not sure what the current status of that proposal is. 
Joe Kesselman / IBM Research 
DOM Level 3 allows the doctype node to be changed: It is also implemented in Xerces2: the latest code from CVS will allow you to remove/add doctype. 
For more information see the "how to modify DOCTYPE node in an existing document?" 
thread in xerces-j-user list: Thanks, Elena Litani / IBM Toronto 
