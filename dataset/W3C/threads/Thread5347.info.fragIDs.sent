One small, but measurable, good we might do is to specify how to use Dublin Core Metadata elements in OWL-S. 
This is cropping up in WSDL (at my instigation) to handle versioning of interfaces and files, so we might as well thrash some out here. 
For example, we have the property on a profile "textDescriptoin". 
Why not either sameProperty or subProperty dc:description? 
Or, better yet, just *use* dc:description? 
I notice we restrict the textDescription cardinality to being 1. 
That 1) precludes providing translations of the description in different languages, thus hurting internationalization and 2) precludes having different "level" of description, say, suitable for a tooltip as opposed to a web page, or for a novice rather than an expert. 
Cheers, Bijan Parsia. 
Well, I don't exactly object, but I'm not sure I see the motivation, either. 
I thought Dublin Core was mainly about classifying documents, like for library purposes. 
I'm not aware that it has anything to say about services (?). OK, a service is a resource, and I guess Dublin Core is basic provenance for any kind of resource. 
But if there are only one or two DC elements 
that apply (description, name), I'm not sure it it's worth the added 
overhead of using it. 
The more there are, the more useful it seems. 
I agree that we shouldn't have the cardinality restriction on text Description. 
Cheers, David 
Yep. 
dc:creator, dc:publisher, dc:relation (with the various subProperties, isVersionOf, replaces, etc.), I'm unsure about the temporal and geographic coverage ones, rights, date. 
I agree that it might be a stretch in some cases, but it also seems worth investigating. 
yeah, that's a no brainer, I think. 
Cheers, Bijan Parsia. 
I'll decloak for a moment to say: yes, this is desirable but there are certain ambiguities in the use of DC that would need to be addressed - 
danbri has done a nice Wiki page on the topic at [1]. 
He's talking primarily about dc:creator, but it's likely that similar semantic vagueness occurs elsewhere in DC. 
It isn't clear whether dc:creator relates documents to people, or to their names. 
For historical reasons, DC has had a concern with 'dumbing down', to allow simple and complex metadata to co-exist. 
Cheers, Danny. 
[1] http://rdfweb.org/topic/UsingDublinCoreCreator 
I'm aware of this (and other) ambiguities. 
I'm unclear if they *need* to be addressed, or rather, how :) dc:description seems pretty safe :) 
I don't think it's dumbdown that causes *this* problem. 
It's more likely to stem either from the various multiple formats (HTML, XML) and a focus on cataloging rather than kr. 
Cheers, Bijan Parsia. 
We want to be careful about adding many attributes for annotations...much 
like we want to try to cluster the various attributes of OWL-S into more fundamental classes of things. 
I suggest that all annotations in OWL-S are clustered into a single "annotation" type that we can then sub-class into desirable sets of different notations with different types or properties. 
So all 
textural/string attributes can be clustered and it can be understood when some are related to others - e.g. different language variants of a textual description or tooltip. 
I suggest that all annotations are of form key=value where arbitrarily complex values are allows... and (but this is less obvious) I think reasonably complex keys might be useful... not restricted to some simple symbol name. 
Austin 
Well, I'm mostly talking about avoiding proliferating roughly equivalent properties. 
Dublin Core is a central vocabulary. 
Well, that's the design for *some* parts of OWL-S, namely serviceParameter.That's *not* the design for some other properties, like textDescription. 
I don't much care about making Yet Another Wrapper for dublin core without a direct motivation. 
Dublin Core doesn't work that way, so we'd have to rework that. 
Pfft. 
So all textural/string attributes can be clustered and it can be understood when some are related to others - e.g. different language variants of a textual description or tooltip. 
Usually done with an xml:lang. 
I would love if the Dublin Core got more sophisticated about complex content. 
Cheers, Bijan Parsia. 
