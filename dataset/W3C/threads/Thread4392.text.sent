A "/" at the beginning of a path expression is an abbreviation for the initial step fn:root(self::node()). 
The effect of this initial step is to begin the path at the root node of the tree that contains the context node. 
If the context item is not a node, a type error is raised. 
Given this, shouldn't a leading / be considered part of Abreviated syntax and expanded in 3.2.4. 
It was a primitive in Xpath 1, but Xpath 1 didn't have fn:root(). 
Also it wasn't clear to me from this description whether a leading / was supposed to be fn:root(self::node()) or fn:root(self::node())/ in particular whether [] predicates are allowed. 
XPath 1 didn't allow /[.....] but it would be useful. 
A "//" at the beginning of a path expression is an abbreviation for the initial steps fn:root(self::node())/descendant-or-self::node(). 
The effect of these initial steps is to establish an initial node sequence that contains all nodes in the same tree as the context node. 
This node sequence is then filtered by subsequent steps in the path expression. 
If the context item is not a node, a dynamic error is raised. 
This is wrong. 
It doesn't select all nodes in the document, attribute and namespace nodes are not selected. 
This appears to be a separate definition of a leading // which is an unnecessery risk of introducing inconsistencies into the document. 
It should surely be the case that a leading // can be defined by expanding a // as given 3.2.4 and then further expanding the resulting leading /. 
David This e-mail has been scanned for all viruses by Star Internet. 
The service is powered by MessageLabs. 
For more information on a proactive anti-virus service working around the clock, around the globe, visit: In a message dated 06/05/2003 13:07:49 GMT Daylight Time, davidc@nag.co.uk David, I was a little surprised to see the term "root node" used in the above quote from 3.2. 
Isn't XPath 1.0 "root node" now "document node" in XPath 2.0? 
Or is "root node" in XPath 2.0 now being used to mean both document node and whatever other node type fn:root() can return (cf F&amp;O 14.1.9)? 
Andrew Watt In the XPath 2.0 data model, any node can be parentless, and any parentless node is considered to be the root of a tree, whether or not it is a document node. 
Michael Kay In a message dated 06/05/2003 13:07:49 GMT Daylight Time, davidc@nag.co.uk 
A "/" at the beginning of a path expression is an abbreviation for the initial step fn:root(self::node()). 
The effect of this initial step is to begin the path at the root node of the tree that contains the context node. 
If the context item is not a node, a type error is raised. 
David, I was a little surprised to see the term "root node" used in the above quote from 3.2. 
Isn't XPath 1.0 "root node" now "document node" in XPath 2.0? 
Or is "root node" in XPath 2.0 now being used to mean both document node and whatever other node type fn:root() can return (cf F&amp;O 14.1.9)? 
Andrew Watt In a message dated 07/05/2003 07:21:21 GMT Daylight Time, Michael, Thanks for the reply and clarification. 
Given that the term "root node" in XPath 1.0 is synonymous with "document node" in XPath 2.0, the more recent use of the term "root node" to mean, essentially, any kind of node which happens to be the root of a tree seems to me to be potentially confusing. 
Since I have already raised that point in a comment on Data Model 4 I don't plan to labour the point, unless some new aspect of the situation is brought to light. 
Andrew Watt Michael In the XPath 2.0 data model, any node can be parentless, and any parentless node is considered to be the root of a tree, whether or not it is a document node. 
"root of the tree" is OK but I think Andrew is correct that the document ought not to say "root node of the tree" as "root node" even though it doesn't have a meaning in Xpath2 means something completely different in Xpath1 and confusion between root nodes and "root elements" (document elements) is already a major source of confusion and FAQ's: parentless elements are not exactly going to simplify the situation and so trying to minimise overloading of the term root and especially of "root node" would be good I think. 
David [this comment is essentially unrelated to the initial comment that started this thread of course] This e-mail has been scanned for all viruses by Star Internet. 
The service is powered by MessageLabs. 
For more information on a proactive anti-virus service working around the clock, around the globe, visit: 
