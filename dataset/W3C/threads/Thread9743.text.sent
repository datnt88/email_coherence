If the chair wishes, I would be prepare to propose the following resolution: The WG resolves: + that the RDF Core Specs will include a local datatyping mechanism + that the RDF Core Specs will not include a global datatyping mechanism + to rescind the stake-in-the-ground decision DECISION 2002-02-22/2: DECISION 2002-02-22/3: see If we were to consider this I would suggest three straw poll questions before hand: Qu1: who cannot live with a tidy model theory and no global datatyping? 
Qu2: who cannot live with an untidy model theory and no global datatyping? 
Qu3: who cannot live with no global datatyping? 
My suspicion is that while many in the group have strong opinions about both tidiness and global datatyping that a decision not to do global datatyping reduces the tension and permits us to achieve consensus, at the cost of doing less. 
I would be surprised if we are down to fewer than one responder to each of those, but we might find that the minorities are small enough to be overruled without breaking consensus. 
Jeremy I believe it is important to differentiate between global datatyping assertions versus global implicit datatyping of inline literals. 
They are similar but not identical. 
Please see the Implications section of the restructured DT spec (http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Aug/0257.html) 
I don't see things as being so simple. 
Either we must simple leave the MT silent about the meaning of inline literals or we must choose tidy vs. untidy. 
If we actually make a decision for tidy or untidy inline literal semantics (which has been the actual point of deadlock) then the particular mechanisms for global implicit datatyping fall clearly out of that decision, either way. 
If we choose tidy semantics for inline literals, then there is no global implicit datatyping semantics at all. 
If we choose untidy semantics for inline literals then the global datatyping assertion machinery defined in Part 1 of the restructured specification essentially work as-is for global implicit datatyping. 
The real question here is, who cannot live with leaving the meaning of inline literals completely undefined by the MT and outside the scope of RDF Datatyping, as that is the real straw poll which will determine whether the local datatyping only solution is palatable to the WG. 
It's not about whether to provide for global implicit datatyping. 
It's about whether inline literals will be ascribed any semantics at all. 
Giving inline literals any formal semantics essentially decides the global datatyping question one way or another. 
Patrick In the context of this discussion, I refer you to which Pat Hayes says: With regards to this last point, yes. 
DAML and OIL and probably OWL will need the flexibility of allowing (semantically) untidy literals, and if we forbid them then the DAML spec will need to be rewritten and OWL will probably no longer base itself on RDF (or, an alternative scenario, the Webont WG will split apart into two rival groups which will produce incompatible standards. 
It is perilously close to this already.) --Frank Frank Manola The MITRE Corporation 202 Burlington Road, MS A345 Bedford, MA 01730-1420 With regards to this last point, yes. 
DAML and OIL and probably OWL will need the flexibility of allowing (semantically) untidy literals, Thanks for reminding us of this Frank. 
There is also Jos's comment in [[really? 
I haven't seen OWL supporting untidy literals]] Could someone please elaborate on owl's requirement. 
Brian 
