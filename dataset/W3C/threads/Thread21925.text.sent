DOM Level 2 HTML has just been moved to Last Call (see update the build.xml 
to point to the new version over the weekend and raise any issues encountered. 
I'm also going to try to finish up the contentType extensions that allow tests to be run on different types of content (specifically XML, HTML, XHTML and SVG) and enable HTML testing on IE and Mozilla. 
We haven't had any more HTML tests committed. 
I would really like to have a look at as many HTML tests as possible before we put DOM L1 Core to bed since I assume that there are at least some tests that don't use HTML specific interfaces and are really just Core (and likely Core L1) tests operating on HTML documents. 
Any chance that we could have more tests committed? 
Should be pretty quick to filter them, if an HTML test validates against a modified version of dom1.xsd (modified to change the namespace from Level-1 to Level-2), it is most likely really a DOM L1 Core test. 
Thanks for the update Curt, you put me at shame as I should have done the update. 
Since you are going to update build.xml, 
please take the following into account (we can move the discussion offline if you prefer): 1. Point to patch files as if they were in a separate directory, it's a cosmetic but irritating point that they are the only ones floating around in the top-level directory 2. Could we kame use of the descritpion attribute on the top-level tasks instead of creting out own usage targets? 
ant -projecthelp lists them and you get relevant statement directly from the tasks (got this tip in an email about the Ant/xalan problems we've had) Please let me know if I can help /Dimitris Dimitris Dimitriadis dimitris@ontologicon.com That the patch files are needed at all is also irritating, I'll move them. 
The description attribute is helpful, unfortunately there are a lot of targets that are not intended for external use (they'd make good "private" tasks if there were such a concept) and the resulting output of projecthelp won't distinguish between the useful targets and the not so useful ones. 
I've also done some piecemeal changes to eliminate the get 'ing of static content (the specs, jsunit, junit) when they are available locally. 
I'll finish that up and they will make running the build while offline painless. 
OK; could/should we use the attributes for the "external" tasks and keep your design for the "internal" ones? 
I'm trying to safeguard against major revisions if Ant were to go the attribute way. 
/Dimitris Dimitris Dimitriadis dimitris@ontologicon.com 
