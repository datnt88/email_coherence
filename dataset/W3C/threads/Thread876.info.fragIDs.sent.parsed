(S1 (S (NP (PRP I)) (VP (AUX need) (S (VP (TO to) (VP (VB update) (NP (NP (NN script) (NN section)) (PP (IN of) (NP (DT the) (NN html)))) (PP (IN through) (NP (NP (DT the) (NN tidylib)) (PP (IN for) (NP (CD eg.) (NN function))))) (SBAR (IN funct1) (S (S (-LRB- -LRB-) (-RRB- -RRB-) (VP (MD should) (VP (AUX be) (VP (VBN updated) (S (VP (TO to) (VP (VB function) (NP (NP (NNS funct1)) (PRN (-LRB- -LRB-) (NP (-RRB- -RRB-) (NN function) (NN new_function)) (-LRB- -LRB-) (-RRB- -RRB-)))))))))) (VP (VBZ ie) (SBAR (S (NP (PRP I)) (VP (AUX need) (S (VP (TO to) (VP (VB add) (NP (CD one) (JJR more) (NN function)) (ADVP (RB programmatically)) (PP (TO to) (NP (NP (NN script) (NN section)) (PP (IN of) (NP (CD html) (NN document)))))))))))))))))) (. .)))
(S1 (SQ (MD can) (NP (PRP i)) (VP (VB use) (S (NP (NN function)) (VP (VB tidyNodeIsSCRIPT) (-LRB- -LRB-) (NP (NN structTidyNode.htm)))))))
(S1 (S (VP (VP (VB TidyNode) (NP (NN tnod)) (-RRB- -RRB-)) (: ;) (CC and) (VP (VB proceed) (S (INTJ (UH please)) (VP (VB help) (NP (PRP me))))))))
(S1 (INTJ (JJ Renjith) (. .)))
(S1 (NP (JJ Great) (NN question) (. .)))
(S1 (S (NP (NP (CD One) (NN thing)) (SBAR (S (NP (JJ Tidy)) (VP (AUX is) (ADJP (JJ _not_)))))) (PRN (, ,) (SINV (CC nor) (MD will) (NP (PRP it)) (VP (VBP become) (PP (IN in) (NP (DT the) (JJ foreseeable) (NN future))))) (, ,)) (VP (AUX is) (NP (DT a) (JJ Javascript) (NN parser))) (. .)))
(S1 (S (NP (DT That)) (VP (VBD said) (, ,) (S (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (PRP you)) (VP (MD could) (VP (AUX do) (SBAR (WHNP (WP what)) (S (NP (PRP you)) (VP (VBP want) (ADVP (RB much) (RBR more) (RB easily)) (PP (PP (IN with) (NP (DT a) (NNP Regex) (NN library))) (CC and) (PP (IN by) (S (VP (VBG separating) (NP (DT the) (NNP Javascript)) (PP (IN from) (NP (DT the) (NN markup))))))))))))))))) (. .)))
(S1 (S (ADVP (RB Thus)) (, ,) (NP (PRP$ my) (NN lo-tek) (PRN (-LRB- -LRB-) (NN tm) (-RRB- -RRB-)) (NN suggestion)) (, ,) (VP (MD would) (VP (AUX be) (S (VP (TO to) (VP (VB keep) (NP (PRP$ your) (NN Javascript)) (PP (IN in) (NP (NP (DT a) (JJ separate) (NN file)) (, ,) (SBAR (WHNP (WDT which)) (S (NP (PRP you)) (VP (MD can) (VP (VB generate) (SBAR (IN as) (S (VP (VBN needed) (S (VP (VBG using) (NP (PRP$ your) (JJ own) (NN code)))))))))))))))))) (. .)))
(S1 (NP (NNP hth) (, ,) (NNP Charlie)))
(S1 (S (S (NP (DT That) (NN function)) (VP (AUX is) (ADJP (JJ usefull)) (PP (IN for) (NP (PRP me))))) (, ,) (NP (PRP I)) (VP (AUX have) (VP (VBN set) (NP (NP (DT the) (NN value)) (PP (IN of) (NP (NP (DT an) (NN attribute)) (PP (IN of) (NP (DT the) (NN node)))))) (PP (IN by) (S (RB NOT) (VP (VBG using) (NP (JJ public) (NNS interfaces))))))) (. .)))
(S1 (SBARQ (WHADVP (WRB How)) (SQ (MD can) (NP (PRP i)) (VP (VB set) (NP (NP (DT the) (NN value)) (PP (IN of) (NP (DT a) (NN node)))))) (. ?)))
(S1 (SBARQ (S (VP (VBP Note) (SBAR (IN that) (S (SBAR (RB even) (IN though) (S (NP (JJ public) (NNS functions)) (VP (AUX are) (RB not) (ADJP (JJ available))))) (NP (PRP i)) (VP (AUX have) (VP (VBN set) (NP (NN value)) (S (VP (TO to) (VP (VB attribute) (PP (IN of) (NP (DT a) (NN node))) (PP (IN by) (S (VP (VBG following) (NP (NN way)))))))))))))) (, ,) (WHADVP (WRB how)) (SQ (MD can) (NP (PRP i)) (VP (VB apply) (NP (DT this) (NN technique)) (PP (IN for) (NP (PRP$ our) (NN problem))))) (. ?)))
(S1 (FRAG (WHNP (WDT Which) (NNS structures)) (SBAR (WHNP (WDT which) (NN member) (NN variable)) (S (VP (MD should) (VP (AUX be) (VP (VBN updated)))))) (. ?)))
(S1 (NP (NP (NP (JJ AttVal) (JJ *) (NN controlVal)) (: ;) (NP (NP (JJ controlVal) (SYM =)) (NP (NP (NNP GetAttrByName)) (PRN (-LRB- -LRB-) (NP (NN child)) (, ,) (NP (`` ``) (NN value) ('' '')) (-RRB- -RRB-)))) (: ;) (NP (NP (JJ controlVal-) (NN value)) (VP (SYM =) (`` ``) (ADJP (JJ renjith)) ('' '')))) (: ;) (NP (NNP Renjith)) (. .)))
(S1 (S (NP (EX There)) (VP (AUX was) (NP (NP (RB just) (DT a) (JJ long) (NN thread)) (PP (IN about) (NP (DT this))))) (. .)))
(S1 (NP (NP (PRP$ My) (NN suggestion)) (: :) (NP (NP (NN tidyNodeGetText)) (-LRB- -LRB-) (-RRB- -RRB-)) (. .)))
(S1 (NP (NP (NN Problem) (CD 1)) (: :) (S (NP (EX there)) (VP (AUX is) (RB not) (NP (NP (NN way)) (SBAR (S (VP (TO to) (VP (VB _update_) (NP (DT a) (NN node)) (PP (IN in) (NP (DT the) (JJ public) (NNP interface)))))))))) (. .)))
(S1 (S (CC But) (NP (PRP I)) (VP (VBD thought) (SBAR (S (NP (PRP you)) (VP (VBD knew) (NP (DT this)))))) (. .)))
(S1 (NP (NP (NN Problem) (CD 2)) (: :) (S (NP (PRP$ Your) (NN code)) (VP (MD may) (VP (VB run) (PP (IN into) (NP (NN trouble))) (SBAR (IN if) (S (NP (PRP it)) (VP (AUX is) (VP (VBN run) (PP (IN on) (NP (DT the) (JJ same) (NN file))) (ADVP (RBR more) (IN than) (RB once))))))))) (. .)))
(S1 (S (ADVP (FW I.e.)) (NP (PRP you)) (VP (MD will) (VP (VB add) (NP (DT the) (JJ same) (NN function)) (NP (DT every) (NN time)))) (. .)))
(S1 (S (ADVP (RB So)) (NP (PRP you)) (VP (MD may) (ADVP (RB still)) (VP (VB want) (S (VP (TO to) (VP (VB use) (NP (NP (DT a) (JJ regular) (NN expression)) (PRN (: -) (CC or) (PP (IN at) (NP (DT a) (JJ minimum) (NN strstr))) (-LRB- -LRB-) (-RRB- -RRB-)) (: -)) (S (VP (TO to) (VP (VB make) (ADJP (JJ sure) (SBAR (S (NP (DT the) (NN function)) (VP (AUX is) (RB not) (ADVP (RB already)) (ADJP (JJ present)))))))))))))) (. .)))
