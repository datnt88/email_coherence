Hi All, 
I've seen a few sites that use a form field to contain terms and conditions. 
I suppose the assumption is that the terms and conditions are basically a 
form in that they typically end with the user clicking an "accept" button. 
This seems like a clunky way to handle this. 
I would have thought an HTML 
text page with an "Accept" button (possibly even as an image) would be simpler. 
So, I'm wondering which is better from an accessibility perspective: the form approach or the HTML text page. 
Assuming that the form is correctly coded of course. 
Cheers Anthony Anthony Quinn Interaction Design &amp; Accessibility Specialist Access Testing Centre 112 Alexander Street Crows Nest NSW 2065 P: 02 9467 5047 F: 02 9467 5020 E: anthonyq@testingcentre.com W: www.testingcentre.com 
Fit for Purpose, Fit for People, Fit for Business Access Online Pty Limited trading as Access Testing Centre 
This email is confidential, intended solely for the addressees, and may be 
legally privileged. 
If you're not the intended recipient, any access, copying, distribution, or action taken or omitted relying on it is prohibited and may be unlawful. 
Please delete it and notify the sender. 
Views expressed in the message are those of the individual sender, and are not necessarily the views of Access Testing Centre. 
Anthony, in my opinion, using a form such as These are the Terms and Conditions for this site... or similar for the terms and conditions presents us with two problems: 
1) obviously, screenreaders will announce that the user is currently in a form. 
The tc textarea will be announced as "Edit - Terms and Conditions". 
This can be slightly irritating. 
Moreover, the version of JAWS I used to test this (4.02) did not announce that it was in fact a read only edit box, so when entering the textarea, it will prompt the user to "type in text"...which obviously they can't. 
Not sure how other screenreaders handle this... 
2) textarea does not allow any markup for its content beyond pure text. 
You can't add structure (headings, paragraphs) or things such as abbreviation/acronym tags. 
Especially with long T&amp;C, this can be very tedious and can potentially pose a substantial accessibility problem. 
So, IMHO it would be far better not to stick T&amp;Cs into a textarea. 
You avoid confusing and/or annoying at least certain users (1) and you can properly structure your text, adding any relevant tags you need (2). 
I would posit that at least one of the main reasons for the wide-spread use of these forms is that the legalese T&amp;C are in many cases overly long, convoluted pieces of text (Microsoft's EULA springs to mind). 
By sticking these in a multiline textarea with scroll mechanism, you can fit a huge ammount of text into the page while still controlling (or, more precisely, limiting) its appearance so the page does not become hundreds of lines of text long. 
Sticking the T&amp;Cs in a div with an "overflow:auto" CSS rule and set dimensions can achieve the same effect whilst avoiding the problems outlined previously (although on older browsers the styling might not work and the div will just grow vertically with the ammount of text etc contained within...but at least it's still perfectly usable/accessible despite the fact that it won't look that "pretty" anymore). 
And once you stop using textarea, there is no reason anymore to actually use a form (although without it, users won't be able to just skip to the submit button quickly...but this could be addressed with a reasonable tabindex for the "I accept" 
link/image). 
Hope my weird ramblings made some kind of sense...it's still too early in the morning and I haven't had my coffee yet... Patrick Patrick H. Lauke Webmaster / University of Salford 
I agree wholeheartedly, this is the best way to do it. 
Forms are the only way to use normal HTML to send a POST (there are a few more convoluted ways, such as javascript submitting a hidden form or javascript transmitting an XML document). 
Therefore without POST you are left with GET and the semantics of GET don't agree to anything; GET is "looking" where POST is "doing". 
See http://www.w3.org/TR/webarch/#safe-interaction and http://www.w3.org/2001/tag/doc/whenToUseGet.html . 
Two cases where the semantics have a practical effect is with robots and links that bypass the T&amp;C page. 
In these cases the T&amp;C cannot be agreed to, as they haven't been seen. 
Users can be held accountable for what they POST but not for what they GET. 
Does anyone else know if other screen readers notify a user that an edit field is disabled or read-only? 
If not, this seems like a problem with the readers, not the pages. 
Just to clarify, I agree that the Terms content should be in a div, not a textarea. 
I am just wondering about legitimate uses of disabled and read-only form fields. 
Thanks, James Craig 
It seems they want to make it possible for the text to scroll. 
For that, they should be using the wonderful and neglected iframe. 
Every tried to tab through or even read one of these monsters in Lynx? 
Joe Clark | joeclark@joeclark.org 
Author, _Building Accessible Websites_ 
I doubt that. 
I think it is simply because they want to enusure that they are on the page, but know that virtually no-one will read them, and the rest will be annoyed by having to scroll through them. 
(Of course, they have to maintain the fiction that people read them, otherwise, like your bogus confidentiality notice, they risk having courts take the position that users weren't really accepting them when they pressed the Accept button.) As in the other reply, they can't rely on browsers having CSS2 overflow support. 
A very few actually monitor the text box, I seem to remember, and will not process the accept until you have scrolled through the text. 
I agree, though, with the other point that a simple link is probably undesirable in terms of not being a positive statement of acceptance, but then neither is a confidentiality notice that is read only after the unintended recipient has read the confidential message! 
Clearly not true, so why should I believe it contexts where it might be true? 
Hey folks, we're all making interesting points about HTML pages, but I think the original question was about HTML pages vs dialogs (not web pages). 
For example, when installing many products the native OS generates a dialog that contains the Terms and conditions and an accept button. 
The best convention I've seen is for the dialog to contain the text in a read-only form field so that the text can be copied, so the text inherits the systems font size and colors, and so that the screen readers will automatically read the text. 
If it is just plain text in the dialog, not associated with any control, then many screen reader settings may skip reading it automatically, it doesn't inherit the fonts size ... etc.. Regards, Phill Jenkins, IBM Accessibility Services 
