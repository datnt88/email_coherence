The MCF and XML-data people might be interested in the HyTime "description tables". 
(HyTime:1992 6.5.6) 
They are a way of getting element and text embedding without having to use entity references, just using elements and attributes. 
So they are quite in spirit with the "declarations...boo; elements...hurrah" feelings of our webbed (though not green) friends. 
They are also smarter than text entities, in that they can have attributes on them, not just on their contents. 
Rick Jelliffe 
Someone suggested offline that I should post an example of [HyTime] description tables, so here is something. 
It uses the HyTime description tables, linked with xml-link syntax (more or less...) (Please do not repost this outside the group, it is from a draft that may be in my book, so it is (C) me and has not been checked, etc etc etc. ) Rick Jelliffe DOCUMENTATION Here is a way to provide structured documentation for element types and attributes, using [HyTime] description tables and the [XML] link syntax. 
The first step is to make a description table. 
This has a pattern similar to the HTML definition list: !ATTLIST desctab id ID #REQUIRED where %stuff; is whatever element set you need. 
For example, you could have p The title (e.g. of an article, or subsection). 
Must start with a number. 
/p p A logical paragraph. 
It may contain embedded lists, tables and figures. 
/p which specifies a table with three descriptions. 
The definitions include element for GUI menu item text in English and German, a text explanation, and a lexical typing model (using the HyLex syntax from [HyTime]), to allow a computer to perform stronger typeing checks of the data. 
It could be extended according to taste to add documentation and typing for attributes as well. 
!ATTLIST art doco CDATA #IMPLIED -- an XML link -- and then .... /art You application must be programmed to interpret the documentation attribute as a hypertext reference, of course, but the information is there. 
Tim, Jon, When I added a "status of this document" section, I neglected to add a "comments should be sent to ..." sentence. 
The last thing I want to see is insightful and/or useful comments on that spec[1] not getting due consideration. 
Tim, as editor, would you prefer comments were sent to this forum, or to you directly in stead? 
Jon, as chair, what do you think about comments on MCF-XML in this forum? 
(a) absolutely not: do it again and we file a motion to remove you from the WG (b) I'd rather they didn't, but since Tim reads the mail here, it's reaching the editors, and so no serious harm is done. 
But please send comments directly to the editor as a rule. 
(c) Only if they directly relate to xml-lang, xml-link or other specs in scope here (d) Sure! we expect mcf-xml to be reviewed in this forum eventually, so we might as well start now. 
[1] http://www.w3.org/TR/NOTE-MCF-XML-970624 
Dan Connolly 
Well, what we'd like is if somebody spots a dropped comma or other typo, just yell at the nearest editor, don't congest bandwidth, but if they feel there are deep architectural problems, that has to be aired out in public. 
Is there boilerplate language for this purpose, or should I invent something. 
My take: isn't this a job for the new Metadata co-ordinating committee? 
- Tim 
[Dan Connolly:] 
I'm going to extend your question to cover Microsoft's XML-data proposal as well, and assume that by "this forum" we also mean the renamed xml-ig when it goes online. 
The answer has to be (c). 
Discussion of the metadata proposals and convergence on a common schema apparatus is clearly the job of the metadata activity. 
The subject should arise here only to the extent that it directly concerns the specs within the scope of the XML activity. 
Enforcing this distinction is going to be tedious, but that's what I intend to do. 
The existence of an alternative syntax that can perform the function of an XML DTD raises some fascinating philosophical questions and will probably engender some lively discussions somewhere, but I don't think that this list (sgml-wg or xml-ig) is the place for it; I think that we should be careful to stick to XML design issues or we will simply be swept under by the volume of mail. 
Beyond ruling out-of-scope discussion out of order in this list, it's not my business to tell people where to hold this kind of debate, but personally I think that a newsgroup such as comp.text.sgml is the right place for it. 
Mail lists like xml-dev and this one don't seem to be as well suited to open-ended discussions. 
Jon 
