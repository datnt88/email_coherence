Is there a suite of test cases for URis, covering basic syntax, finding relative forms, finding absolute forms, etc.? #g Graham Klyne Good question. 
I keep a set of test cases in it includes the set in the appendix of Note things like... (base, '../../../g', 'http://a/g'), #@@disagree with RFC2396 (base, '../../../../g', 'http://a/g'), #@@disagree with RFC2396 I should probably check those against Roy's issues list. 
Dan Connolly, W3C http://www.w3.org/People/Connolly/ 
Maybe a couple of others to consider?: "http://example/x/y%2Fz" "http://example/x/abc" "abc" "http://example/x/y/z" "http://example/x%2Fabc" "../../x%2Fabc" "http://example/x/y%2Fz" "http://example/x%2Fabc" "../x%2Fabc" "http://example/x%2Fy/z" "http://example/x%2Fy/abc" "abc" #g Graham Klyne OK, I added these, after a tweak... TimBL prefers root-relative paths, i.e. "/x%2Fabc" to "../../x%2Fabc" Both are correct relative paths from here to there, but our code currently does "/x%2Fabc". 
I don't really like it; it doesn't support moving filesets around as well as it could. 
But I haven't convinced timbl, nor have I completely debugged an algorithm for returning "../../x%2Fabc". 
Dan Connolly, W3C http://www.w3.org/People/Connolly/ 
I've got both in my test suite for now. 
I'll sort out which to keep later. 
How does this square with these cases?: ('file:/ex/x/y/z', 'file:/ex/x/r', '../r'), ('file:/ex/x/y/z', 'file:/r', '/r'), # I prefer this. 
- tbl If using a root-relative path, wouldn't the first be: ('file:/ex/x/y/z', 'file:/ex/x/r', '/ex/x/r'), ? 
(Maybe that's what the "I prefer" case aims to show?) #g Graham Klyne 
