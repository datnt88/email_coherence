<s> Thanks for the comment.  </s>
<s> This wasn't an easy decision to make, we revisited it several times and there were good arguments on both sides.  </s>
<s> From my point of view, the compelling arguments in favour of the resolution that we decided on were: * we have a two language model, and it is desirable to avoid duplication between the two languages.  </s>
<s> That means there should be a clear separation of responsibilities between the two languages.  </s>
<s> There are various possible boundaries that one could draw, but to my mind the most natural is that XSLT (with its XML-based syntax) is good for creating nodes, while XPath (with its algebraic syntax) is good for computing values; the distinction between nodes and values is a very strong one in the data model.  </s>
<s> A separation of concerns based on what objects each language manipulates is more likely to work than a split based on functionality.  </s>
<s> * it is important to have absolute clarity about whether two adjacent instructions in the stylesheet are creating two sibling nodes (which might be merged, if they are text nodes) or two values in a sequence (which will not be merged).  </s>
<s> XQuery achieves this by allowing the node-construction expressions to be composed with the sequence-construction syntax.  </s>
<s> Being a two-language system, XSLT doesn't have this luxury.  </s>
<s> I don't think any of the proposals for doing sequence construction in XSLT created a clear enough distinction between sequence construction and tree construction.  </s>
<s> * backwards compatibility is not an optional extra, nor is it something we should begrudge.  </s>
<s> We have inherited the stewardship of a successful language, and we need to respect the essential characteristics of the language.  </s>
<s> Changing the type system is radical enough, but changing the very clear processing model - in which the stylesheet tree acts very directly as a template for the result tree - would in my view be a step too far.  </s>
<s> The asymmetry between XSLT and XPath is deliberate.  </s>
<s> We regard XSLT as a language that is closed with respect to trees, in the same way as SQL is closed with respect to relations.  </s>
<s> Within that we have a sublanguage that is closed over sequences of the 19 primitive types.  </s>
<s> This is a similar model to SQL, which does arithmetic and boolean operations on working data, but always delivers tables as its final result.  </s>
<s> As far as xsl:value-of is concerned (and AVTs equally), we have adopted the same solution as XQuery (generally, in the model for constructing typed trees, we decided to let the XQuery WG beat the path through the jungle).  </s>
<s> Like XQuery, we found it difficult to come up with a model for putting typed values on trees directly, rather than going through the two-stage process (at least conceptually) of taking the string value and then validating it using a schema processor.  </s>
<s> This was a long and difficult debate.  </s>
<s> Thanks for your comments, anyway.  </s>
<s> It's good to force us to stand back from the detail and ask ourselves why the big decisions were made they were.  </s>
<s> Deadlines didn't come into it, except from the viewpoint that you can't sit on the fence for ever.  </s>
<s> Michael Kay This note responds to an issue originally raised on 11 Jan 2002 by Jeni Tennison, which is archived at: and to the response provided by Michale Kay: I was disappointed and concerned to hear that XSL WG has decided against incorporating the idea that XSLT should be generalized to generate sequences.  </s>
<s> As a designer of an XSLT 2.0 engine I can report first hand that this proposal has an aesthetic quality which should be compelling to any architect in a similar position to myself and I would hope that the conceptual simplification would be attractive to an XSLT developer.  </s>
<s> As arguments, I do not intend to reproduce the level of detail provided in Jeni Tennison's proposal since I believe that that proposal was thorough enough to show that the approach is workable.  </s>
<s> Instead, I would like to make the more general architectural observation that there exists asymmetry (based on the current XSLT spec) between the result produced by an XPath evaluation tree, and an XSLT evaluation tree.  </s>
<s> Whereas the XPath evaluation tree is thought of as returning a sequence, the XSLT tree generates a pseudo data model - most often a single document but perhaps multiple documents, if the XSLT 1.1 instruction xsl:document is employed.  </s>
<s> In truth there should exist a symmetry between a compiled XPath expression and a compiled XSLT "Push Instruction" (using Michael Kay's own terminology) where the only distinction is whether you are "pulling" (returning) a sequence (as in XPath) versus "pushing" a sequence (as in XSLT).  </s>
<s> In fact, originally, my main motivation for seeking a symmetry was to define a uniform expression model for XPath and XQuery, but it became obvious that XSLT should be no different.  </s>
<s> In general I feel that the XSLT specification is being loaded with new functionality (most of which I think is good), but the integration with the XPath 2.0 and XQuery 1.0 Data Model is being treated as a second-class citizen, almost an inconvenience.  </s>
<s> For a concrete example, consider xsl:value-of .  </s>
<s> This tried-and-trusted friend deserves a better fate than producing just strings for evermore.  </s>
<s> Clearly it was destined to generate typed-values (atomic-value*).  </s>
<s> The same should be true of attribute value templates - aren't attribute values typed-values?  </s>
<s> I understand that backwards compatibility is a keen consideration and that deadline goals should be strived for, but I can't help wondering whether we are getting the cart before the horse; can these really be our priorities?  </s>
<s> Finally, I would like to add a simple endorsement to Jeni's lonely voice and a reminder that the W3C WGs focus should be less to produce a CR by a certain date, and more to provide a firm conceptual foundation for XML processing over a time frame that should far exceed the specification development time.  </s>
<s> And since this is my first note, I should add that I am enthusiastic about helping XML having a bright future through the W3C process.  </s>
<s> Cheers, David Holmes  </s>
<s> MessageDear Michael, Thanks for your prompt reply and for being so patient to explain.  </s>
<s> I understand your points (although I confess that I have some homework to do on XQuery operation) and strongly respect the desire to maintain backwards compatibility.  </s>
<s> However, I'd like to run one final "thought experiment" to feel satisfied that we aren't giving up the potential of the XSLT paradigm and because I think we may be able to have our cake and eat it.  </s>
<s> I'm going to suppose that the technical issues that you raised relating to sibling nodes and xsl:value are tractable (based on 50% ignorance, 40% experience doing an implementation, and 10% willpower).  </s>
<s> It strikes me that the key paradigm that flies in the face of having an XSLT engine emit/return sequences is that there is an implicit assumption that you are generating a principal document - a singleton sequence containing one document node and all its descendants.  </s>
<s> No question for backwards compatibility that we can't break that paradigm.  </s>
<s> Suppose, however, that we define a new XSLT document element, call it xsl:query/ for grins ( xsl:procedure/ might be less controversial!).  </s>
<s> Under xsl:query we have the usual compliment of XSL instructions that can appear under xsl:stylesheet/ .  </s>
<s> Processing is more or less the same - matching template rules (Jeni Tennison's xsl:item details and others to be worked out!) but instead of creating an implicit document, we are creating an implicit sequence.  </s>
<s> My viewpoint is that this is not a different language paradigm but is another style rather like the difference between standard stylesheets and the literal result style.  </s>
<s> As stated, there are details to be worked out but I believe there is much value in avoiding having XSLT dead-end as a single document generator (I am aware of xsl:document but that's not the same issue).  </s>
<s> Having accepted this possibility, the strategy will be to examine how existing XSL instructions behave and aim for consistency.  </s>
<s> This process will help to inform and formalize the behavior of existing XSLT instructions operating under xsl:stylesheet ; especially the ones with string codependency!  </s>
<s> For example, I believe that the moment someone wrote "a sequence contains items" in a W3C spec, the genie was out of the bottle.  </s>
<s> Now, if xsl:text has a content constructor, or since xsl:value has a select XPathExpression, how do you stop a user generating a sequence of atomic values?  </s>
<s> The answer to me is that you don't and don't have to.  </s>
<s> In fact, I believe that the signatures of xsl:text and xsl:value-of can be practically identical (optional select/content, separator, d-o-e) with the only difference being that the former generates a typed text node and the latter generated a typed value.  </s>
<s> I believe that this approach might allow us to explore the possibilities in 1) a backwardly compatible way that 2) allows users to leverage their XSLT knowledge and 3) helps to formalize XSLT as a whole in the new "strong-typed" world.  </s>
<s> I think the possibility of seeing familiar XSLT as a bone-fide query language in some vendor's DBMS makes this option worth pursuing.  </s>
<s> BTW.  </s>
<s> I concur that the two language model has some interesting benefits, especially in the way that it provides a host for XPath, and that there is a division of responsibilities that should be maintained.  </s>
<s> I would phrase this as saying that the XSLT instructions are more generally responsible for *item* generation and flow-of-control while the XPath expressions are good for computing values.  </s>
<s> I would differ though in the view that there is a fundamental difference or asymmetry between an XSLT instruction and an XPath expression.  </s>
<s> In fact it is my design experience that while XSLT instructions generally "push" items and XPath expressions return sequences, the roles can be inverted; an XSLT operation can return a sequence and an XPath expression can push it's items.  </s>
<s> There is also an interesting transition stage in XSLT where a sequence-constructor(oops - content-constructor!) behaves more like an expression returning a sequence (which might need to be atomized e.g. xsl:value-of).  </s>
<s> One way to look at this (I used to be a physicist) is to say that the symmetry has been broken by our conventional notions of what an XSLT instruction is versus what an XPath expression is.  </s>
<s> In fact both are manifestations of a single executable entity that can both push and pull sequences.  </s>
<s> I might be wrong but I am betting that this is the XQuery expression model and that in the end our differences may be purely syntactic!  </s>
<s> Apologies if I seemed disrespectful on the deadline issue.  </s>
<s> I understand the need to get off the fence and I hope that this proposal offers a conceptual simplification and strategy that might bring us more quickly to a more powerful solution.  </s>
<s> Besides, why should the XQuery folks have all the fun?  </s>
<s> Best Wishes David Holmes Thanks for the comment.  </s>
<s> This wasn't an easy decision to make, we revisited it several times and there were good arguments on both sides.  </s>
<s> From my point of view, the compelling arguments in favour of the resolution that we decided on were: * we have a two language model, and it is desirable to avoid duplication between the two languages.  </s>
<s> That means there should be a clear separation of responsibilities between the two languages.  </s>
<s> There are various possible boundaries that one could draw, but to my mind the most natural is that XSLT (with its XML-based syntax) is good for creating nodes, while XPath (with its algebraic syntax) is good for computing values; the distinction between nodes and values is a very strong one in the data model.  </s>
<s> A separation of concerns based on what objects each language manipulates is more likely to work than a split based on functionality.  </s>
<s> * it is important to have absolute clarity about whether two adjacent instructions in the stylesheet are creating two sibling nodes (which might be merged, if they are text nodes) or two values in a sequence (which will not be merged).  </s>
<s> XQuery achieves this by allowing the node-construction expressions to be composed with the sequence-construction syntax.  </s>
<s> Being a two-language system, XSLT doesn't have this luxury.  </s>
<s> I don't think any of the proposals for doing sequence construction in XSLT created a clear enough distinction between sequence construction and tree construction.  </s>
<s> * backwards compatibility is not an optional extra, nor is it something we should begrudge.  </s>
<s> We have inherited the stewardship of a successful language, and we need to respect the essential characteristics of the language.  </s>
<s> Changing the type system is radical enough, but changing the very clear processing model - in which the stylesheet tree acts very directly as a template for the result tree - would in my view be a step too far.  </s>
<s> The asymmetry between XSLT and XPath is deliberate.  </s>
<s> We regard XSLT as a language that is closed with respect to trees, in the same way as SQL is closed with respect to relations.  </s>
<s> Within that we have a sublanguage that is closed over sequences of the 19 primitive types.  </s>
<s> This is a similar model to SQL, which does arithmetic and boolean operations on working data, but always delivers tables as its final result.  </s>
<s> As far as xsl:value-of is concerned (and AVTs equally), we have adopted the same solution as XQuery (generally, in the model for constructing typed trees, we decided to let the XQuery WG beat the path through the jungle).  </s>
<s> Like XQuery, we found it difficult to come up with a model for putting typed values on trees directly, rather than going through the two-stage process (at least conceptually) of taking the string value and then validating it using a schema processor.  </s>
<s> This was a long and difficult debate.  </s>
<s> Thanks for your comments, anyway.  </s>
<s> It's good to force us to stand back from the detail and ask ourselves why the big decisions were made they were.  </s>
<s> Deadlines didn't come into it, except from the viewpoint that you can't sit on the fence for ever.  </s>
<s> Michael Kay  </s>
<s> David Holmes: It strikes me that the key paradigm that flies in the face of having an XSLT engine emit/return sequences is that there is an implicit assumption that you are generating a principal document - a singleton sequence containing one document node and all its descendants.  </s>
<s> MK: not necessarily one result document, but certainly a set of documents: i.e. not a set of integers or strings.  </s>
<s> The latest drafts take us in the direction of transforming a set of input documents into a set of result documents.  </s>
<s> I think that reflects the role of XSLT: it's an XML transformation language, it produces trees from trees.  </s>
<s> DH: No question for backwards compatibility that we can't break that paradigm.  </s>
<s> Suppose, however, that we define a new XSLT document element, call it xsl:query/ for grins ( xsl:procedure/ might be less controversial!).  </s>
<s> Under xsl:query we have the usual compliment of XSL instructions that can appear under xsl:stylesheet/ .  </s>
<s> .... MK: there's no question that it's possible.  </s>
<s> The question is, do you get a better language as a result?  </s>
<s> Would you be able to take anything out of XPath, and if so, what?  </s>
<s> Would it be easier for users to do things at the XSLT level rather than, as currently designed, doing it at the XPath level?  </s>
<s> And would it be sufficiently better than it's worth reducing the amount of functionality that's shared in the XPath core, which is available in contexts other than XSLT?  </s>
<s> The question of shared functionality is a real one.  </s>
<s> There is an argument that we should be sharing more: for example, why have different syntax in XQuery and XSLT for defining functions?  </s>
<s> Hopefully, vendors will ensure that function libraries written in XSLT are usable from XQuery and vice-versa.  </s>
<s> But do we actually need two different languages?  </s>
<s> Most approaches to "constructing sequences in XSLT" seem to depend on overloading xsl:value-of so that in some circumstances it produces a text node and in other circumstances it produces a string (or some other typed value).  </s>
<s> I just think that kind of overloading gets very messy, especially if you can't decide statically which it's going to do; and it's unnecessary, because the functionality is available in XPath, and I don't think we want to take it out of XPath, because that would reduce composability.  </s>
<s> But as I say, these are my views, and reflect the reason we took this decision.  </s>
<s> I'm not saying that alternatives weren't viable, or that they wouldn't have any advantages.  </s>
<s> We had to make a judgement on balance.  </s>
<s> Michael Kay  </s>
