(TOP (FRAG (NP (NNP Whoops) (CD ..)) (. .) (NP (ADJP ($ $) (CD cvs)) (JJ diff) (NN -u)) (. ?)) )
(TOP (NP (NNP httpAsync.pyc)) )
(TOP (S (. ?)) )
(TOP (NP (NNP ircAsync.pyc)) )
(TOP (NP (NP (CD cvs) (NN server)) (: :) (NP (NNP Diffing)) (. .)) )
(TOP (NP (NN Index) (: :) (JJ ircAsync.py)) )
(TOP (NP (NP (JJ RCS) (NN file)) (: :) (NP (NP (JJ /sources/public/2000/scribe-bot/ircAsync.py) (, ,) (JJ v) (JJ retrieving) (NN revision) (CD 1.8) (NN diff) (NN -u)) (NP (CD -r1.8) (NNS ircAsync.py)))) )
(TOP (NP (JJ ---) (NN ircAsync.py)) )
(TOP (NP (QP (CD 2001/08/24) (CD 05:50:52)) (QP (CD 1.8) (CD +++)) (JJ ircAsync.py)) )
(TOP (NP (NP (NP (QP (CD 2001/08/24) (CD 17:43:59) (SYM @) (SYM @) (CD -24,10)) (NNS +24,8)) (NP (SYM @) (X (X (SYM @)) (NP (NP (NN import) (NN string)) (, ,) (NP (NNP re) (NN import) (NN socket) (NN import) (NN asyncore)) (, ,) (NP (NP (JJ asynchat) (NN +import)) (VP (VBG threading) (NP (QP (# #) (date (CD RFC)) (CD 2811))))))) (: :) (S (NP (NNP Internet) (NNP Relay)) (VP (VB Chat))))) (: :) (NP (NN Client) (NNP Protocol) (# #) (CD 2.3) (NNS Messages) (# #) (CD http)) (: :) (NP (NN //www.valinor.sorcery.net/docs/rfc2812/2.3-messages.html))) )
(TOP (S (NP (SYM @)) (X (SYM @)) (X (NP (JJ -72,6) (JJ +70,7) (SYM @)) (SYM @)) (NP (NNS self._startChannels)) (VP (SYM =) (NP (NP (JJ -LSB-) (PRN (: ') (NP (NP (# #) (NN test) ('' ') (JJ -RSB-) (NN self._dispatch) (PRN (FRAG (X (SYM =)) (X (FW -LSB-) (FW -RSB-) (FW self._doc) (SYM =)) (NP (JJ -LSB-) (JJ -RSB-) (NN +) (NN threading.Thread) (PRN (-LRB- -LRB-) (NN target=doStuff) (-RRB- -RRB-)) (NN .start))) (-LRB- -LRB-) (-RRB- -RRB-)) (NN def) (NN makeConn)) (PRN (-LRB- -LRB-) (NP (NP (NN self)) (, ,) (NP (NN host)) (, ,) (NP (NN port))) (-RRB- -RRB-))) (: :)) (NN self.create_socket)) (PRN (-LRB- -LRB-) (NN socket.AF_INET) (, ,))))) )
(TOP (NP (NNP socket.SOCK_STREAM) (-RRB- -RRB-)) )
(TOP (S (NP (SYM @)) (VP (SYM @) (NP (JJ -122,7) (NN +121,7) (S (S (NP (SYM @)) (VP (SYM @) (NP (NP (FW self.rxdMsg) (PRN (-LRB- -LRB-) (NP (NNS args)) (, ,) (NP (NN text)) (, ,) (NP (NN origin)) (-RRB- -RRB-) (: -)) (NN def) (NN bind)) (PRN (-LRB- -LRB-) (NP (NN self) (, ,) (NN thunk) (, ,) (NN command) (, ,) (NN textPat=None)) (, ,) (NP (NN doc=None)) (-RRB- -RRB-))))) (: :) (S (NP (CD +) (NN def) (NN bind) (PRN (-LRB- -LRB-) (NP (NN self) (, ,) (NN thunk) (, ,) (NN command) (, ,) (NN textPat=None) (, ,) (NN doc=None)) (, ,) (NP (CD threadSafe=0)) (-RRB- -RRB-) (: :)) (NN thunk)) (VP (AUX is) (NP (NP (DT the) (NN routine)) (PP (TO to) (NP (NN bind)))))) (: ;) (S (NP (PRP it)) (VP (AUX 's) (VP (VBN called) (NP (NP (NNP ala) (NN thunk)) (PRN (-LRB- -LRB-) (S (S (NP (NP (NN matchObj) (CC or) (NN None) (, ,) (NN origin) (, ,) (NNS args) (, ,) (NN text) (-RRB- -RRB-) (SYM @)) (NP (NP (NP (SYM @)) (NP (JJ -134,7) (NN +133,7))) (SYM @) (X (SYM @)) (PP (IN if) (NP (NP (NN type)) (PRN (-LRB- -LRB-) (NP (NN textPat)) (-RRB- -RRB-)))))) (VP (AUX is) (NP (NN type)))) (-LRB- -LRB-) ('' '') ('' '')) (-RRB- -RRB-)))))) (: :) (S (NP (NN textPat)) (VP (SYM =) (NP (NP (JJ re.compile) (PRN (-LRB- -LRB-) (NN textPat) (-RRB- -RRB-) (: -)) (NN self._dispatch.append)) (PRN (-LRB- -LRB-) (-LRB- -LRB-) (NN command) (, ,))))))))) )
(TOP (NP (NP (JJ textPat) (PRN (, ,) (INTJ (UH thunk)) (-RRB- -RRB-) (-RRB- -RRB-)) (JJ +) (NN self._dispatch.append)) (PRN (-LRB- -LRB-) (-LRB- -LRB-) (NN command) (, ,))) )
(TOP (FRAG (NP (NN textPat)) (PRN (, ,) (INTJ (UH thunk)) (, ,) (ADJP (JJ threadSafe)) (-RRB- -RRB-) (-RRB- -RRB-)) (SBAR (IN if) (FRAG (NP (NNP doc)) (: :) (X (FW self._doc) (SYM =)) (NP (FW self._doc))))) )
(TOP (S (NP (NP (NP (NP (NNP +) (NNP doc) (SYM @) (X (SYM @) (X (NP (CD -142,15) (CD +141,23) (SYM @)) (SYM @)) (PP (IN if) (NP (JJ args-LSB-0) (JJ -RSB-) (NN ==) (NN PING))))) (: :) (NP (NP (NN self.todo)) (PRN (-LRB- -LRB-) (NP (NN -LSB-PONG)) (, ,) (NP (NN text) (CD -RSB-)) (-RRB- -RRB-))) (: -)) (PP (IN for) (NP (NNS cmd)))) (, ,) (NP (NNP pat)) (, ,)) (VP (VBP thunk) (PP (IN in) (NP (NN self._dispatch)))) (: :)) )
(TOP (FRAG (NP (NP (NNS +)) (PP (IN for) (NP (NNS cmd)))) (, ,) (NP (NNP pat)) (, ,) (INTJ (UH thunk)) (, ,) (NP (NP (NN threadSafe)) (PP (IN in) (NP (NN self._dispatch)))) (PRN (: :) (PP (IN if) (NP (JJ args-LSB-0) (JJ -RSB-) (JJ ==) (NNS cmd))) (: :)) (SBAR (IN if) (S (NP (NNP pat) (PRN (: :) (NP (NP (# #) (CD debug)) (S (-LRB- -LRB-) (VP (POS ') (VP (VBG dispatching) (PRT (RP on)))) (: ...) ('' '))) (, ,) (NP (NNP pat)) (-RRB- -RRB-)) (NNP m)) (VP (SYM =) (NP (NP (NN pat.search)) (PRN (-LRB- -LRB-) (NN text) (-RRB- -RRB-))))))) )
(TOP (S (PP (IN if) (NP (NNP m))) (: :) (: -) (NP (NP (NN thunk)) (PRN (-LRB- -LRB-) (NP (NNP m) (, ,) (NN origin) (, ,) (NNS args) (, ,) (NN text)) (-RRB- -RRB-))) (VP (VBZ +) (PP (IN if) (NP (NP (NN threadSafe)) (: :) (NP (NP (CD +) (NN thunk) (PRN (-LRB- -LRB-) (NP (NNP m)) (, ,) (NP (NN origin)) (, ,) (NP (NNS args)) (, ,) (NP (NN text)) (-RRB- -RRB-)) (NN +)) (ADJP (RB else))) (: :) (NP (NP (CD +) (NN self.tell)) (-LRB- -LRB-) (NP (FW replyTo)) (PRN (-LRB- -LRB-) (INTJ (UH self.nick)) (, ,))))))) )
(TOP (FRAG (NP (NN origin)) (PRN (, ,) (NP (NNS args)) (-RRB- -RRB-)) (, ,) (`` ``) (NP (NP (NN Hold)) (PP (IN on) (NP (DT a) (NNP sec)))) (: ...) ('' '') (-RRB- -RRB-) (NP (NP (JJ +) (NN stuffToDo.append)) (PRN (-LRB- -LRB-) (INTJ (UH -LSB-thunk)) (, ,)))) )
(TOP (NP (NP (NNP m) (PRN (, ,) (NP (NP (NN origin)) (, ,) (NP (NNS args)) (, ,) (NP (NN text) (NNS -RSB-))) (-RRB- -RRB-)) (NN else)) (: :) (: -) (NP (NP (JJ thunk) (PRN (-LRB- -LRB-) (NP (NP (NN None)) (, ,) (NP (NN origin)) (, ,) (NP (NNS args)) (, ,) (NP (NN text))) (-RRB- -RRB-)) (NNP +)) (PP (IN if) (NP (NN threadSafe)))) (: :) (NP (NP (JJ +) (NN thunk) (PRN (-LRB- -LRB-) (NP (NP (NN None)) (, ,) (NP (NN origin)) (, ,) (NP (NNS args)) (, ,) (NP (NN text))) (-RRB- -RRB-)) (NN +)) (ADJP (RB else))) (: :) (NP (NP (CD +) (NN self.tell)) (-LRB- -LRB-) (NP (FW replyTo)) (PRN (-LRB- -LRB-) (INTJ (UH self.nick)) (, ,)))) )
(TOP (FRAG (NP (NN origin)) (PRN (, ,) (NP (NNS args)) (-RRB- -RRB-)) (, ,) (`` ``) (NP (NP (NN Hold)) (PP (IN on) (NP (DT a) (NNP sec)))) (: ...) ('' '') (-RRB- -RRB-) (NP (NP (JJ +) (NN stuffToDo.append)) (PRN (-LRB- -LRB-) (INTJ (UH -LSB-thunk)) (, ,)))) )
(TOP (FRAG (NP (NP (NN None)) (, ,) (NP (NN origin)) (, ,) (NP (NNS args)) (, ,) (NP (NN text) (NN -RSB-))) (-RRB- -RRB-) (NP (NP (NP (NN def) (NNS startChannels)) (PRN (-LRB- -LRB-) (NP (NN self)) (, ,) (NP (NNS chans)) (-RRB- -RRB-))) (: :) (NP (NNS self._startChannels))) (X (SYM =)) (X (NP (NNS chans)) (NP (SYM @)) (SYM @)) (NP (JJ -167,6) (CD +174,14) (SYM @) (X (X (SYM @)) (NP (NP (NN def) (NN notice)) (PRN (-LRB- -LRB-) (NP (NN self) (, ,) (NN dest) (, ,) (NN text)) (-RRB- -RRB-)) (: :) (`` ``) (S (S (`` ``) (`` ``) (S (VP (VB send) (NP (DT a) (NN NOTICE)) (PP (TO to) (NP (NN dest))))) (, ,) (NP (DT a) (NN channel) (CC or) (NN user)) ('' '') ('' '') ('' '') (NP (NN self.todo) (PRN (-LRB- -LRB-) (NP (NP (NN -LSB-NOTICE)) (, ,) (NP (NN dest) (NN -RSB-)) (, ,) (NP (NN text))) (-RRB- -RRB-)) (NN +stuffToDo)) (VP (SYM =) (NP (JJ -LSB-) (JJ -RSB-) (NN +def) (NN doStuff)))) (-LRB- -LRB-) (-RRB- -RRB-)) (: :) (JJ +) (QP (IN while) (CD 1)))) (: :) (NP (NP (CD +)) (PP (IN if) (NP (NP (NNP len)) (PRN (-LRB- -LRB-) (NP (NN stuffToDo)) (-RRB- -RRB-))))) (: :) (NP (NNP +) (NNP d)) (X (SYM =)) (FW stuffToDo.pop) (-LRB- -LRB-)) (-RRB- -RRB-)) )
(TOP (S (NP (NNS +)) (VP (VBP apply) (NP (NP (-LRB- -LRB-) (JJ d-LSB-0) (NN -RSB-)) (, ,) (NP (NP (JJ d-LSB-1)) (: :) (NP (NP (JJ -RSB-) (-RRB- -RRB-) (NN def) (NN actionFmt)) (PRN (-LRB- -LRB-) (NP (CD str)) (-RRB- -RRB-))) (: :) (NP (NP (NN return) (`` ``) (NN \001ACTION) ('' '') (NN +)) (NP (JJ str) (JJ +) (`` ``) (CD \001) ('' '') (NNP Index))) (: :) (NP (JJ rdfn3chat.py)))))) )
(TOP (NP (NP (JJ RCS) (NN file)) (: :) (NP (NP (JJ /sources/public/2000/scribe-bot/rdfn3chat.py) (, ,) (JJ v) (JJ retrieving) (NN revision)) (NP (CD 1.11) (JJ diff) (JJ -u) (NN -r1.11) (NNS rdfn3chat.py)))) )
(TOP (NP (person (JJ ---)) (NN rdfn3chat.py)) )
(TOP (NP (QP (CD 2001/08/24) (CD 06:28:02)) (QP (CD 1.11) (CD +++)) (JJ rdfn3chat.py)) )
(TOP (NP (NP (QP (CD 2001/08/24) (CD 17:44:00) (SYM @) (SYM @) (CD -43,13) (CD +43,12) (SYM @) (SYM @) (# #) (NP (NNP Semantic) (NNP Web) (NN Application) (NN Platform) (PRN (-LRB- -LRB-) (NN swap) (-RRB- -RRB-)) (NN stuff)) (# #) (CD http))) (: :) (NP (JJ //www.w3.org/2000/10/swap/) (# #) (CD http)) (: :) (NP (NP (JJ //dev.w3.org/cvsweb/2000/10/swap/) (NN -sys.path.append)) (PRN (-LRB- -LRB-) (NP (`` ``) (NN /home/connolly/w3ccvs/WWW/2000/10/swap) ('' '')) (-RRB- -RRB-)))) )
(TOP (NP (NP (QP (# #) (SYM @) (SYM @) (CD +sys.path.append))) (PRN (-LRB- -LRB-) (`` ``) (NP (NN /Users/aaronsw/Projects/cwm/swap)) ('' '') (-RRB- -RRB-))) )
(TOP (NP (# #) (SYM @) (X (X (SYM @)) (NP (NP (NN import) (NN cwm)) (, ,) (NP (CD notation3)) (, ,) (NP (CD sax2rdf) (NN import) (NN ircAsync)) (, ,) (NP (NP (NN httpAsync)) (PP (IN from) (NP (JJ ircAsync) (NN import) (NN debug) (X (NP (NP (NP (NP (NP (NN class) (NNS T)) (PRN (-LRB- -LRB-) (NP (CD ircAsync.T)) (-RRB- -RRB-)) (: :)) (NN def) (NNS __init__)) (PRN (-LRB- -LRB-) (NN self) (-RRB- -RRB-))) (: :) (NP (CD ircAsync.T.__init__) (-LRB- -LRB-) (NN self) (-RRB- -RRB-) (SYM @)) (X (SYM @))) (NP (JJ -66,9) (NNS +65,9)) (NP (SYM @)) (SYM @) (X (JJ self._userid) (SYM =)) (X (NP (NN None) (NN self._password)) (SYM =)) (NP (NN None))) (: -) (NP (NN self.bind)))) (PRN (-LRB- -LRB-) (NN self.doHelp))) (, ,)))) )
(TOP (NP (NNP ircAsync.PRIVMSG) (, ,)) )
(TOP (S (NP (`` ``) (NN help) ('' '')) (-RRB- -RRB-) (NP (NP (JJ +) (NN self.bind)) (PRN (-LRB- -LRB-) (INTJ (UH self.doHelp)) (, ,)))) )
(TOP (NP (NNP ircAsync.PRIVMSG) (, ,)) )
(TOP (NP (NP (`` ``) (NP (NN help)) ('' '') (PRN (, ,) (INTJ (UH threadSafe=1)) (-RRB- -RRB-))) (: -) (NP (NP (NN self.bind)) (PRN (-LRB- -LRB-) (FW self.doInvite) (, ,)))) )
(TOP (PRN (NP (NN ircAsync.INVITE)) (-RRB- -RRB-)) )
(TOP (NP (NP (JJ +) (NN self.bind)) (PRN (-LRB- -LRB-) (FW self.doInvite) (, ,))) )
(TOP (NP (NNP ircAsync.INVITE) (, ,)) )
(TOP (NP (NP (CD threadSafe=1) (-RRB- -RRB-) (JJ def) (NN start)) (PRN (-LRB- -LRB-) (NP (NN self)) (, ,) (NP (QP (SYM @) (SYM @) (CD -97,7) (CD +96,7) (SYM @) (SYM @) (CD self.bind))) (-LRB- -LRB-) (NN self.doPart) (, ,))) )
(TOP (NP (NNP ircAsync.PRIVMSG) (, ,)) )
(TOP (NP (SYM r) (`` ``) (NP (NP (CD ^) (NN %)) (NP (PRP s))) (, ,) (NP (NP (JJ *) (NN part) (NN *)) (PRN (-LRB- -LRB-) (NP (JJ -LSB-^) (JJ -RSB-) (NNS +)) (-RRB- -RRB-))) (. ?)) )
(TOP (NP (NP (NP (NNP *) (. !) (ADJP (money ($ $)) ('' '')) (NN %) (NN self.nick)) (, ,) (NP (JJ -LSB-) (`` ``) (NN %) (NNP s) (PRN (, ,) (S (NP (NN part)) (VP (VBN _address_)) (. !)) ('' '') (NP (NN %) (NN self.nick)) (, ,) (NP (: -) (`` ``) (S (VP (TO to) (VP (VB dismiss) (NP (PRP me)) (PP (IN from) (NP (DT a) (NN channel)))))) ('' '') (NN -RSB-)) (-RRB- -RRB-)) (NNP +) (`` ``) (S (VP (TO to) (VP (VB dismiss) (NP (PRP me)) (PP (IN from) (NP (DT a) (NN channel)))))) ('' '') (NN -RSB-)) (, ,) (NP (NN threadSafe=1) (-RRB- -RRB-) (NN self.bind))) (PRN (-LRB- -LRB-) (INTJ (UH self.doLoad)) (, ,))) )
(TOP (NP (NNP ircAsync.PRIVMSG) (, ,)) )
(TOP (FRAG (NP (SYM @)) (X (SYM @)) (NP (JJ -254,7) (JJ +253,7) (SYM @)) (X (SYM @) (ADJP (IN if) (RB not) (JJ addr))) (: :) (NP (JJ self.tell) (PRN (-LRB- -LRB-) (FW replyTo) (, ,) (`` ``)) (NNP huh)) (. ?)) )
(TOP (S (FRAG (NP (NN load) (NNS _what_)) (. ?) ('' '') (-RRB- -RRB-)) (NP (NN return) (NNS p)) (VP (SYM =) (NP (NP (NN sax2rdf.RDFXMLParser)) (PRN (-LRB- -LRB-) (INTJ (UH self._kb)) (, ,))))) )
(TOP (FRAG (NP (NNP addr)) (-RRB- -RRB-) (VP (VB try)) (: :) (NP (JJ p.load) (-LRB- -LRB-) (NN addr) (-RRB- -RRB-) (SYM @)) (X (SYM @)) (NP (JJ -336,6) (NNS +335,7)) (NP (SYM @)) (X (SYM @) (X (NP (FW self.notice) (PRN (-LRB- -LRB-) (FW replyTo) (, ,) (`` ``)) (NN %)) (NP (PRP i)) (NP (NP (JJ new) (NNS statements)) (PP (IN in) (NP (NP (NP (NP (NP (NN %)) (NP (PRP i) (JJ iterations.) ('' '') (NN %))) (PRN (-LRB- -LRB-) (JJ grandtotal) (PRN (, ,) (NP (NNS iterations)) (-RRB- -RRB-)) (-RRB- -RRB-))) (NN def) (JJ main)) (PRN (-LRB- -LRB-) (NP (CD argv)) (-RRB- -RRB-)))))) (: :) (PP (IN if) (NP (NP (NNP len)) (PRN (-LRB- -LRB-) (NP (CD argv)) (-RRB- -RRB-)) (NP (CD 7)))) (: :))) )
(TOP (S (NP (PRP I)) (VP (AUX do) (RB n't) (VP (VB see) (NP (NP (DT any) (NNS locks)) (PP (IN around) (NP (NP (DT the) (NN stuffToDo) (NN queue) (NN ..) (. .)) (SBAR (WHNP (WDT that)) (S (VP (AUX does) (RB n't) (VP (VB look) (ADJP (JJ threadsafe)) (PP (TO to) (NP (PRP me)))))))))))) (. .)) )
(TOP (SQ (AUX Have) (NP (PRP you)) (VP (AUX done) (NP (JJ much) (NN programming)) (PP (IN with) (NP (NNS threads)))) (. ?)) )
(TOP (S (NP (PRP I)) (ADVP (RB highly)) (VP (VBP recommend) (ADVP (RB ..))) (. .)) )
(TOP (S (NP (DT An) (NN Introduction)) (VP (TO to) (VP (NN Programming) (PP (IN with) (NP (NNS Threads))))) (. .)) )
(TOP (NP (NNP Andrew) (NNP D.) (NNP Birrell) (. .)) )
(TOP (NP (NP (date (NNP January) (CD 6) (, ,) (CD 1989))) (NP (NP (CD 35) (NNS pages)) (NP (JJR bummer) (NN ..))) (. .) (NP (DT no) (organization (NNP HTML)) (NN version)) (. .)) )
(TOP (S (NP (NP (person (NNP Dan) (NNP Connolly))) (, ,) (NP (NNP W3C) (NN http))) (: :) (VP (VBZ //www.w3.org/People/Connolly/))) )
(TOP (S (NP (NP (PDT All) (DT the) (JJ threaded) (NN programming)) (SBAR (S (NP (PRP I)) (VP (AUX 've) (VP (AUX done) (VP (AUX has) (VP (AUX been) (PP (IN in) (NP (DT an) (NN environment))) (PP (IN without) (NP (JJ mutable) (NNS objects))) (S (VP (VP (VBG using) (NP (DT a) (NNS RDBMS)) (PP (IN as) (NP (DT a) (NN datastore)))) (, ,) (ADVP (RB so)) (VP (VBG locking))))))))))) (VP (AUX was) (ADVP (RB never)) (NP (DT an) (NN issue))) (. .)) )
(TOP (S (NP (PRP I)) (VP (AUX was) (VP (ADVP (NN sort) (IN of)) (VBN disappointed) (SBAR (IN that) (S (NP (NP (NNP Python)) (, ,) (ADJP (RB rather) (JJ easy-to-use) (PP (IN in) (NP (JJ other) (NNS respects)))) (, ,)) (VP (VBZ makes) (S (NP (JJ threaded) (NN programming)) (ADJP (ADVP (RB so) (RB much)) (RBR more) (JJ difficult)))))))) (. .)) )
(TOP (S (ADVP (RB Hmm)) (, ,) (ADVP (RB perhaps)) (NP (PRP I)) (VP (AUX do) (PP (IN like) (NP (NNP Tcl))) (NP (NP (JJR more)) (PP (IN than) (NP (NNP Python))))) (. .)) )
(TOP (FRAG (SBAR (IN If) (S (NP (NP (RB only) (PDT all) (DT that) (NN code)) (ADJP (JJ available) (PP (IN for) (NP (PRP it))))) (VP (VBZ ..)) (. .))) (X (JJ -LSB-) (NP (`` ``) (NP (NNP Aaron) (NNP Swartz)) ('' '') (: ;) (NP (NN mailto))) (: :) (NP (PRP me)) (SYM @)) (NP (NP (NN aaronsw.com)) (: ;) (NP (NN http)) (: :) (NP (NN //www.aaronsw.com/)))) )
(TOP (NP (NN -RSB-)) )
(TOP (S (S (NP (NNP python)) (VP (AUX does) (RB n't) (VP (VB make) (S (NP (PRP it)) (ADJP (RBR more) (JJ difficult)))))) (: ;) (S (NP (PRP it)) (VP (AUX 's) (ADJP (JJ difficult) (PP (IN by) (NP (NN nature)))))) (. .)) )
(TOP (S (NP (NNP tcl)) (VP (AUX has) (NP (PDT all) (DT the) (JJ same) (NNS issues))) (. .)) )
(TOP (S (NP (NP (person (NNP Dan) (NNP Connolly))) (, ,) (NP (NNP W3C) (NN http))) (: :) (VP (VBZ //www.w3.org/People/Connolly/))) )
