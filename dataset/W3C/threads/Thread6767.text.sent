To support the new pubrules, and because I've been meaning to do this for the stylesheets for a long time, I've published a new set of DTDs and Stylesheets at This includes a 2.2 version of the DTD (with support for 'altlocs' to handle the new pubrules and also with marked sections to make customization practical). 
I made the executive decision that I could publish 2.2 without warning or consultation. 
It may very well be the case that I have no authority to do so. 
In any event, this message is the only place that refers to that URI publically. 
I won't say anything else in any other forum until there's some buy in. 
Be seeing you, norm Norman.Walsh@Sun.COM | Language is by its very nature a communal XML Standards Architect | thing; that is, it expresses never the exact Sun Microsystems, Inc. | thing but a compromise--that which is common to you, me, and everybody.--T. 
E. Hulme Thanks for the work Norm. 
I'd like a few addition to the next version: - would it be possible to define a namespace for the xmlspec elements? 
- would it possible to use xlink? 
ie s/href/xlink:href/ - the DOM added two attributes on the DOM extensions in xmlspec: !-- #1999-07-21: lehors: Added since and version attributes to most idl elements -- !-- since attribute: Provides the version in which the element was introduced. 
-- !ENTITY % idl-since.att 
'since CDATA #IMPLIED' !-- version attribute: Provides the version in which the element was modified. 
-- !ENTITY % idl-version.att 
'version CDATA #IMPLIED' Have a look at [1] to see where we use them. 
I quickly adapted your version with what we're using today. 
If you add the two attributes, I'll be able to use v2.2 without modifying at all. 
Some examples: - it would be nice to have an XML Schema (and others as well) version of the DTD. 
Philippe [1] http://www.w3.org/2002/08/xmlspec-v22-dom.dtd / Philippe Le Hegaret plh@w3.org was heard to say: No. Doing so would break every existing stylesheet for xmlspec. 
Yes. 
But it would be a significant backwards-incompatibility problem. 
Certainly not something I'd want to do before a 3.0 release. 
Good to know. 
Eve, Sabine, and I are (slowly) working on gathering requirements for 3.0 by looking at what extensions other groups have made. 
Ideally, we'll be able to produce a 3.0 that few groups will need to customize. 
FWIW, I've become convinced that putting human readable text in attribute values is a bad thing. 
It's just not properly internationalizable. 
I suggest instead that you use a keyword in the version attribute and have the stylesheets "do the right thing". 
It would. 
And perhaps for 3.0 we can. 
There is an experimental, possibly non-functioning, W3C XML Schema version in CVS. 
Be seeing you, norm Norman.Walsh@Sun.COM | What good is a can of worms if you never open XML Standards Architect | it?--Bob 
Arning Sun Microsystems, Inc. | then let's change the stylesheet as well. 
I've been working with Ian on an issue system designed for the W3C Process and I'd like to reuse the xmlspec elements as much as possible. 
ok, but since we're going to have to replace the DTDs and stylesheets, why don't we bite the bullet and switch to xmlspec v3.0 then. 
Lots of WGs already have workarounds to be in sync with the latest pubrules so the value of v2.2 is not really significant for them. 
I'm going to chew this and see if we can come up with something better. 
Philippe / Philippe Le Hegaret plh@w3.org was heard to say: | / Philippe Le Hegaret plh@w3.org was heard to say: | | I'd like a few addition to the next version: | | - would it be possible to define a namespace for the xmlspec elements? 
| | http://www.w3.org/2002/08/xmlspec (or something like this). 
| | No. Doing so would break every existing stylesheet for xmlspec. 
Well, yeah, sure. 
Except that there are lots of mutated copies of it all over the world, a whole raft of important legacy documents, etc. 
I hear you. 
| | - would it possible to use xlink? 
ie s/href/xlink:href/ | | Yes. 
But it would be a significant backwards-incompatibility problem. 
| Certainly not something I'd want to do before a 3.0 release. 
I'm not saying we need to have a 2.2 before we have a 3.0. 
But if it turns out that 10 or 15 small backwards-compatible changes would help most WGs a lot, I'd like to do that too. 
If we make 3.0 radically different (like in a new namespace or with completely different linking semantics), many existing documents will never convert to the new spec. 
This means I'll get to maintain the old version with it's multiple hacks, the new version, and a set of stylesheets for both. 
Can you sense my hesitation :-) Be seeing you, norm Norman.Walsh@Sun.COM | It's all fun and games until someone loses an XML Standards Architect | eye. 
Then it's just fun with a pirate. 
Sun Microsystems, Inc. | Trying to convert the XSLT WD to the new xmlspec.xsl. 
(1) I get the error message: no template matches edtext. 
This simply seems to be a missing template rule? 
Perhaps the template rule should conditionally expand or suppress the edtext depending on a stylesheet parameter. 
(2) I get a few dozen messages of the form: Unsupported specref to [initiating] (Contact stylesheet maintainer). 
These are caused by the fact that my "specref" element is in a different XML document from the element that's the target of the reference. 
I obviously need to do some customizing of the stylesheet here. 
I suggest splitting the template rule for match="specref" into two, a template rule with match="specref" that calls a named template with a parameter, as shown below: (in the named template, all calls on key() are replaced by use of $target, otherwise the code is unchanged): !-- output a cross-reference to the element supplied in the $target parameter -- xsl:text Bad call to template output-specref: target contains I can then override the template rule for match="specref" while being able to reuse the rest of the logic. 
(3) The message: Unsupported specref to bibl [FANDO] (Contact stylesheet maintainer). 
was caused by a specref element that pointed to a bibl entry; it should have been a bibref . 
Since this is my error and not yours, you might like to change the error message! 
Cheers, Michael Kay I think xspecref is there for offboard references -- I use that for the refs between parts 1 and 2 of XML Schema. 
ht Henry S. Thompson, HCRC Language Technology Group, University of Edinburgh W3C Fellow 1999--2002, part-time member of W3C Team 2 Buccleuch Place, Edinburgh EH8 9LW, SCOTLAND -- (44) 131 650-4440 URL: http://www.ltg.ed.ac.uk/~ht/ [mail really from me _always_ has this .sig -- mail without it is forged spam] That's a different scenario from mine. 
I'm not holding links from one document to another, I'm generating fragments of xmlspec documents from data files and then trying to render these fragments as structured appendices in the spec. 
I'm just asking for this template rule to be split into two to ease customisation: it currently performs two functions, (a) following of a cross-reference to find a target element, and (b) rendering a reference to a target element; and with my customisations of the DTD, it would be very useful to be able to access these two pieces of functionality separately. 
Doing so would substantially reduce the amount of code in my stylesheet customisation layer. 
Looking at it again, it would be even better if the big xsl:choose statement were turned into an apply-templates with a special mode: then the way that cross-references to each element type are rendered could be customized separately. 
Michael Kay Ah, right, sorry not to read more carefully. 
That makes good sense. 
ht Henry S. Thompson, HCRC Language Technology Group, University of Edinburgh W3C Fellow 1999--2002, part-time member of W3C Team 2 Buccleuch Place, Edinburgh EH8 9LW, SCOTLAND -- (44) 131 650-4440 URL: http://www.ltg.ed.ac.uk/~ht/ [mail really from me _always_ has this .sig -- mail without it is forged spam] I have been asked by the I18N WG to forward to you some information about changes we have made to our version of xml-spec.dtd 
and the accompanying style sheet that transforms into XHTML output. 
We would like to know whether you feel it appropriate to include some of these changes in the canonical version of the xmlspec suite. 
Find enclosed the latest version of our DTD and the version of the XSL stylesheet used to generate output. 
The stylesheet contains a detailed change log at the top that reveals most of the changes from the original version of xmlspec. 
You can see an instance of the output at Best regards, Richard Richard Ishida W3C The W3C Internationalization Activity has restructured, and has issued a call for participation. 
See http://www.w3.org/International/about.html From: spec-prod-request@w3.org [mailto:spec-prod-request@w3.org] 
On Behalf Of Henry S. Thompson Sent: 16 September 2002 18:13 Subject: Re: New release of XML Spec DTD/Stylesheets could be customized separately. 
Sorry, but I've spent a few minutes looking at these and there's no way I'm going to give an opinion on the changes unless I see some proper explanation. 
Basically, we can't do this by looking at code and comments. 
There has to be a high-level description of the changes - what new structures are provided in the markup, what changes of rendition are there for existing markup. 
We can then have a sensible discussion about which of these are general purpose and which should remain part of your custom layer. 
(There appears, for example, to be some markup designed for handling lists of requirements, which is something I have in my own customisation for XSLT, but it's very hard to tell whether there's any overlap). 
Michael Kay -----Original Message----- From: spec-prod-request@w3.org [mailto:spec-prod-request@w3.org] 
On Behalf Of Henry S. Thompson Sent: 16 September 2002 18:13 Subject: Re: New release of XML Spec DTD/Stylesheets then the way that cross-references to each element type are could be customized separately. 
