LANG="EN" Oh. Sometimes I forget how stupid I can be. 
I had made the fairly fatal error of not checking how browsers implemented the specs, and what was in the older specs. 
Which explains why Nir must have thought I was stupid - right again. 
It is possible to achieve what I am setting out to achieve - the graphic imagemap at the top for Microsoft (and everyone who has a site that looks like that) which can be rendered instead as a set of text links at the bottom for anyone who prefers to read their site that way. 
This is based on the premise that people really do like using imagemaps. 
The difference is that to my examples AREAs must be added. 
P A HREF="some.htm" SHAPE="rect" COORDS="0,0,100,100" Somewhere /A | A HREF="else.htm" SHAPE="rect" COORD="100,0,200,100" Elsewhere /A | With CSS2 positioning and Attribute Matching, this enables styling on the presence of USEMAP and on MAP itself to control which parts are rendered, and when or where. 
With CSS1 it is possible for an author to hide the MAP and for a few users to force its display. 
(Communicator apparently won't allow the use of an author style sheet) Using classes would provide a kluge that allowed CSS1 control of the imagemap's presentation. 
So the implications for the guidelines are: Imagemaps: Don't use server sided ones. 
Use Client-side, with ALT on AREAs and a set of text links. 
[P1] Place the MAP itself, including the redundant links, at the end of the page [P3] Rationale: non-visual users find it tiring to wade through standard links before getting to the content. 
In the ALT text of the element which provides the Imagemap say "Imagemap - links repeated at end of page" or something[p2] Rationale: It will help non-visual users orient themselves if they know that the imagemap and text links are the same set of links before they wade through them all. 
For UA's we then ask them to implement text links as content for MAP as per HTML4.0, with the text of the link providing alternative content in the same way as ALT does for AREA [p2?] Am I making more sense now? 
Charles McCathieNevile 
First to comment on Charles: The only way to use image maps nowadays is with IMG, MAP and AREA. 
I strongly suggest to forget about any other technique until MSIE4.0 vanishes from the market. 
(I didn't check MSIE5.0 and Netscape 4.5, but it could be that we'll have to wait for some of them disappearing as well) The problem of using an image map with IMG and something different from AREA as the content of MAP is that all HTML3.2 (and current) browsers will show the image without any links behind them, and this will disorient users of visual media with images turned on. 
This is why the HTML4.0 spec has no such example. 
Clearly, the spec. 
made the (incorrect) assumption that browsers who support OBJECT also support MAP with non-AREA content. 
That's why it recommened using: OBJECT, MAP with non-AREA content. 
The fourth combination OBJECT, MAP, AREA will render only the content of OBJECT (if it is not MAP-AREA) in HTML3.2 browsers, and this may cause some navigation difficulties to users. 
The spec. 
has arediculus example that degarde to the useless: P This is a navigation bar in an HTML3.2 browser. 
Now the clarification: My proposal was just to use MAP for *navbars that have no image*. 
This is because MAP has more semantics than DIV class=nav Like this text-only navigation bar: A HREF="some.htm" Somewhere /A | A HREF="other.htm" Otherwise /A | A HREF="else.htm" Elsewhere /A Then a sophisticated future browser can be configured to skip the MAP (in the same way that it can be configured to skip the proposed DIV class=nav) Using MAP is just better semantics than using the semanticless DIV with a semanticless class. 
Although HTML3.2 and current browsers do not support image maps where non-AREA is used as content of MAP, they do support text navbars inside a MAP. 
This usage of MAP was not mentioned in the spec. 
since they didn't want to markup navbars as such. 
But if we do, MAP is the best we can do with HTML4.0. 
The WAI may propose a NAVBAR element for future HTML versions if we think that marking navbars as such is important. 
I hope that I made myself clear. 
Nir Dagan, Ph.D. "There is nothing quite so practical as a good theory." -- A. Einstein 
Currently there are two alternative techniques which have been proposed as long-term solutions: 1. Clusters of navigational links can be identified by using CLASS="nav" on a container element, inserting DIV as a container if necessary. 
2. Alternatively, MAP can be used to enclose the navigational links: map p [links] /map without any corresponding image and with no need forany AREA elements. 
Given the uncertain backward compatibility of (2) and Al's persuasive argument that it is entirely consistent with the HTML 4.0 specification and the existence of users' style sheets to establish widespread conventions for associating particular semantics with CLASS values, I would opt for solution (1) as originally proposed. 
Both of these solutions are compatible with the preferred short term strategy of including at the start of the navigation cluster a link to the block of text which immediately follows it, for example, the next heading or paragraph. 
