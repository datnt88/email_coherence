Hello all, I've been workin in the HTTP 1.1 accesibility issues, and I must admit that I'm a little bit lost on the way to approach requirements. 
My very first ideas come later, and I'd appreciate comments (maybe I got it al wrong...). 
From my point of view, our goal is to provide dalternate media types for people who cannot deal with a determined type (e.g blind people and images) As long as alternate media types are selected using the HTML file, we have three different approaches in the way we select them. 
1.The alternate media type may be included in the HTML file (e. g. ALT tag to describe image contents) 2.The alternate media type is in the file referenced an HTML HREF tag (e.g D tag to describe graphic images). 
3.The alternate media type may be embedded in the file referenced by the HTML file using the IMG SRC tag, (e.g. text description in gif 89 files or video captioning in QuickTime video), If the alternate media is in thew HTML file, theres no way to tell HTTP what to choose. 
If it is in a different file, maybe HTTP could be used to select the file that fullfills user's needs. 
If the thrid case, where alternate media is included in the file, the whole file must be transmitted through the net, so again theres's no use in using HTTP to select media type. 
Is this correct? 
Thanks in advance, Javier Roma?ach Madrid, Spain jromanac@dial.eunet.es 
One modification to HTTP which would benefit people with disabilities has been suggested by Al Gilman and is documented on his web site: Essentially, the proposal is that HTTP should be changed to allow the title of an HTML document to be requested and retrieved independently of the document itself. 
Thus, if the content of an anchor element is an image, the client is text based, and no ALT attribute is provided, then the title of the HTML document to which the link refers could be obtained without having to transfer the entire file across the network. 
Although I think this idea has merit, in that it offers a practical solution in cases where authors have neglected to include alt attributes in img elements which serve as links to other HTML documents, I would prefer that the alt attribute itself be required and that authoring software adopt the practice of prompting for a textual description whenever a reference to an image is made.. I have sometimes wondered whether, by making the kind of modification to HTTP that Al has suggested, one would be inadvertently sending a signal to content providers that they do not need to be diligent in ensuring that the alt attribute is used, since the HTTP change will serve as a fall-back mechanism that text-based clients can rely upon in any case. 
Another issue which is also relevant here, is the practice of writing text only pages, in circumstances in which the default (graphical) presentation can not be readily modified so as to make it accessible. 
Firstly, I would question whether, given the HTML 4.0 proposals relating to tables and forms, there will be much need for "text only" alternative pages in the future, particularly once the "screen reader" access paradigm has been supplanted by the widespread availability of braille and audio clients that have direct access to HTML and CSS content. 
However, if it is considered that there will continue to be a substantial need for "text only" pages, then it might be reasonable for a client to be able to indicate to the server via HTTP that text only pages are to be provided, if available. 
Correct. 
That might be were we need HTTP extension: to request part of the file, like "just the comment/title in an image file". 
HTTP already has a HEAD request, different from regular GET, which is used in HTML to return the HEAD .. /HEAD part, and HEAD could be used with image/* as well to mean just the "header" part of the image, not the bits. 
I wonder how this differs from the HEAD request, which returns the TITLE as part of HEAD . 
I'm with you, but on a purely OO basis, it's good to have the description of the data (here an image) stored with the image, and retrieved from the same source. 
Maybe this is all too theorical and ALT and ALTSRC is all we need. 
My personal opinion, and I'm sure you understand it very well: I think this is even more dangerous than the other proposal: the whole idea of SGML is to have one version of the markup and different presentation. 
If we start "advocating" different version of the sources, we're in for trouble, but I got your argument about what is needed today to facilitate browsing. 
Some kind of new text/html-text-only mime-type is one way to approach the problem. 
Another way to implement text/only I've heard before is the use of LINK with some REL=text-only keyword, so that once the regular HEAD is fetched, the user-agent can automatically finds the text-only version. 
to follow up on what Daniel Dardailler said: [quoting Jason White] The distinction you raise is very important, in practical terms. 
It is not so much where the description is physically stored as how it is logically accessed. 
A description which is of the image itself, innocent of any use of the image, should be accessible by the client software without any extra manual effort on the part of the HTML author using the image in an HTML page. 
An anchor defines a use of the image. 
It should not have to redundantly refer to the image and the description of the image. 
If the HTML author wants to support alternative content in an anchor, depending on some factors in the context of the use of that HTML file, that is another matter. 
We need that and we need it to be more pervasive and capable. 
What we see today is this - many ALT attributes are absent - most of those that are populated are loaded with a context-independent description of the image. 
Sometimes this is appropriate, sometimes not. 
- very few are populated with the highest and best text to use in the context of a text-mode browse of the page. 
To get to a solution we can enforce, we need a better solution than ALT. 
To tide us over until the necessary infrastructure is all in place, we need to tell people to use context-aware ALT strings. 
Al Gilman I am somewhat ignorant of image file formats. 
Do those formats which are in use today allow for a header, containing a descriptive title, to precede the graphical data? 
I remember having read that W3C was working on the development of image formats, so this issue could be raised in that context. 
Now as is pointed out in RFC1866, it is expected that the client will retrieve an image file referenced by an img element automatically, without user intervention. 
This could easily be extended to an HTTP request for the header containing the description. 
Furthermore, the header could include, among others, the following two components: (1) a title for the image; (2) an optional long description of the image. 
The same scheme could also be applied to audio resources. 
A fully concur with Daniel's misgivings regarding "text only" pages: there should only be a single HTML document, which contains all of the necessary semantic content in a form that is independent of presentation. 
In the WAI briefing package, it was said that there is a need for web page simplification, namely, techniques for reducing the complexity of web pages. 
Although this could be accomplished by the server in response to an HTTP request (assuming the necessary extensions to HTTP), it would be better, I think, to conduct any needed transformations on the client side by means of style sheets. 
The following reference is also relevant to this topic: In my hypothetical image format, the long description field which precedes the graphical data could contain either the text of the description (perhaps even in HTML format), or an URL to an HTML document containing the description. 
I would also agree that a single solution is the way to go. 
I fully believe that CSS will provide both the content designer and the user with the freedom to deliver, render, and receive data. 
- Mike From: Jason White jasonw@ariel.ucs.unimelb.EDU.AU X-Sender: jasonw@ariel.ucs.unimelb.EDU.AU Subject: Re: Need some help Resent-From: w3c-wai-wg@w3.org 
X-Mailing-List: w3c-wai-wg@w3.org archive/latest/160 X-Loop: w3c-wai-wg@w3.org 
Sender: w3c-wai-wg-request@w3.org 
Resent-Sender: w3c-wai-wg-request@w3.org 
I am somewhat ignorant of image file formats. 
Do those formats which are in use today allow for a header, containing a descriptive title, to precede the graphical data? 
I remember having read that W3C was working on the development of image formats, so this issue could be raised in that context. 
Now as is pointed out in RFC1866, it is expected that the client will retrieve an image file referenced by an img element automatically, without user intervention. 
This could easily be extended to an HTTP request for the header containing the description. 
Furthermore, the header could include, among others, the following two components: (1) a title for the image; (2) an optional long description of the image. 
The same scheme could also be applied to audio resources. 
A fully concur with Daniel's misgivings regarding "text only" pages: there should only be a single HTML document, which contains all of the necessary semantic content in a form that is independent of presentation. 
In the WAI briefing package, it was said that there is a need for web page simplification, namely, techniques for reducing the complexity of web pages. 
Although this could be accomplished by the server in response to an HTTP request (assuming the necessary extensions to HTTP), it would be better, I think, to conduct any needed transformations on the client side by means of style sheets. 
Michael G. Paciello Executive Director, E-Mail: mailto:paciello@yuri.org Yuri Rubinsky Insight Foundation Please Make a Tax-Deductible Donation: http://www.yuri.org/donate.html 
[Back on the action item, I think.] 
Maybe it would help to separate the question into two steps: 1. 
What is the range of dialog modes that we need to support? 
- Can we combine equipment capabilities, user capabilities, and user preferences under one browse-mode description? 
- can we encode this as a virtual-terminal model with a display virtual-datatype, a control virtual-datatype, and a machine model connecting display flow and control events? 
2. What are our options in terms of how we connect a common core of information with those varying dialog modes? 
- for the options that involve communicating client display [and control?] 
capabilities to a server, does the capability negotiation function of HTTP 1.1 fill the communication need? 
- maybe the server only ever needs to worry about the display capability of the virtual terminal? 
You see, I think that the allocation of the adaptation function between client and server will be a market decision. 
We can't decide that arbitrarily. 
We need to provide protocol capabilities to support all options in the competitive range. 
We need part 1. regardless of what we think is going to happen in part 2. The first part is about things like how partial color vision is an separate question compared to visual acuity. 
What are the dimensions of capability we need to be aware of? 
What scales can we use to characterize the capability in those dimensions? 
Can we select a finite set of capability clusters in this capability space to target with representation styles? 
Or do there need to be parametric adjustments built into the styles to match the user's ability and preference on a continuous basis? 
In part 2. there are a range of approaches to how to adapt the content to the diversity of browse modes. 
At one end of the spectrum the author of some content has multiple styles for the different browse modes and checks his document in all these styles until happy with it. 
On that condition, it makes sense for the client to communicate its browse mode description to the server and the server to select the most appropriate style to go with the document. 
At the other extreme is the [likely more common] case where the author only checks the document in one style. 
Adapted views are generated by transformations whose output the author hasn't checked. 
These could be alternate style sheets that come with the client software or from a third party. 
They could also be functions built into the client or a piped filter. 
I wasn't at Sofia, so I may have misunderstood the action item. 
Is this related? 
Al Gilman Best Regards, --raman as representative of my employer, Adobe Systems Inc. PNG has the ability to capture image descriptions as part of the image file. 
But this only works for this graphic format. 
We need to create rules that will work for all the formats that are placed in HTML pages. 
A browser COULD though, detect if there is a description in a graphic and automatically treat this as if a DESC= link were in the image - and if requested it would pull it out of the picture rather than asking the server for it. 
Gregg Gregg C. Vanderheiden Ph.D. Professor - Dept of Industrial Engineering Director - Trace R &amp; D Center, Waisman Center University of Wisconsin- Madison gv@trace.wisc.edu, 
WWW&amp;FTP at Trace.Wisc.Edu for a list of our Listserves send "index" to listproc@trace.wisc.edu 
Yes, but the browser has no interest in fetching the bits (big) part of the image if it is only interested in the metadata part (title, desc, etc). 
A way to ask only that part to the server is needed. 
to follow up on what Daniel Dardailler said: If the browser and server share a structure model for the type of the object in question, it would be possible to request part of a remote resource. 
On the other hand, I believe it will be more productive in the long run to go at it the other way around, via classes of queries and subsets of meta-information. 
In other words, the client poses the server a query about the href-ed object and the server has the option to consult server-maintained catalog data or mine information out of the object's file. 
I don't know if this is the right place to say it, but I really do like the strategy that Daniel mentioned earlier, that we have a server guideline concerning exception handling for the case where an href points at an image file and the "Accept:" header accepts only text. 
In that case, I would like it if the recommended exception-handling method were to reply with the response that an "ABOUT" method would have elicited. 
The response to an hypothetical HTTP ABOUT method would, in some priority order approximating the following, - follow an explicit "Content-About:" header value in the object's metadata known to the server. 
- search for an "about_foo.typ" 
object in the same directory as the requested foo.img object. 
[.typ is in text/*] - search for an "about_this_*.typ" object in the same directory. 
- search for a README.html or README.txt file in the same directory. 
- search data-storage containers outward until a resource matching the pattern is found. 
There would be a site-maintenance guideling for the WebMaster to - ensure that there is an "about_this_site.html" at the root level. 
- ensure that the "about_this_site.html" 
provides a method by which to request manual assistance. 
Al Gilman 
