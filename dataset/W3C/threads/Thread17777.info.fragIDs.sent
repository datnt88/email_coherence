Hello, The news on 9 Dec 1998 provides insight for the UA Guildlines. 
Someone speaking for a major software firm said computer buyers don't want a built it yourself OS. &amp; 'Assembling The International Space Station' continued Astronauts are highly trained &amp; rehearsed, computer buyers mostly wish to get things done. 
Guildlines Section 3 says people with disabilities will likely have to find Accessibility information on their own, from easy to use formats recognizing this is a new &amp; unrehearsed task! 
Sub-section 3.2, however seems to expect people with disabilities to configure many details on their own, in stark contrast to the idea that software shouldn't be do it yourself &amp; that complex tasks demand much training. 
It is unthinkable to leave people that need more time to get things done to finish building programs. 
Good default settings &amp; extensive templates &amp;/or profiles are the only way to simplify configuration in context of each OS specifics; this is a vital necessity! 
While keyboard matters are 2nd nature to me CSS is a mystery that might help with the new problem of the keyboard Up command highlighting the last link on a page. 
If CSS can turn off DHTML the link highlight might goto the last visible link on the screen at the lower right. 
Yet I've no wish to become conversant in CSS to build a style sheet, someone else knows what to do for CSS along with other things &amp; that knowledge should lie with these Guildlines. 
The Techniques page could give examples, or as a 2nd best the W3C could have a tips section for people with disabilities. 
The PC industry prides itself on providing total solutions. 
Please let us not leave this matter to be solved over &amp; over again by each newcomer to computers. 
Regards, Bryan - "I don't need to stand to talk, to advise, &amp; to generally make a pain in the ass out of myself." 
Dr. Stephen Franklin, "Babylon 5": 'Shadow Dancing' 
Well said. 
What specific changes would you suggest for the guidelines? 
Should the UA developer be expected to provide applicable templates or install options for various disabilities, or ?... 
-- Paul Adelson * The views expressed are those of the * author and do not necessarily reflect the * position of Citibank or its affiliates. 
Hi, I agree with these comments. 
The goal should be to make it as easy as possible to use. 
There's a video editting system called the Toaster. 
It's goal was to have the system easily used by video editors. 
I think that it sould be similar for blind people using browsers. 
Some concepts I've heard/read which bother me include: The user could write his/her own CSS file. 
The user just gets the right plug-in to work with the browser and the screen reader. 
The user could learn how to navigate the HTML tree structure. 
Why should a blind user go through all these "hoops"? 
I believe a good user model is an average intelligence blind user who is not very computer literate and is trying to work alone at 2 in the morning. 
Why should that user need to learn CSS or HTML tree structure? 
Scott 
I think your fears of users being required to learn twenty languages a week are misplaced. 
I would be surprised if any major manufacturers did not provide simple interfaces to their products. 
What concerns me is if there is no possibility of a major product being reconfigured extensively by a user who has some need not anticipated by the designer of the 'simple interface'. 
This problem is even greater if manufacturers of 'assistive technology' do not have the ability to reconfigure the interface. 
Do address your example of CSS, it should be possible to create a CSS stylesheet. 
Actually there are a number of simple tools used to specify styles already - the fonts/colours section of IE and Netscape, or the more extensive controls offered by Opera, none of which require any particular knowledge, can all be used to generate style sheets without the user having to know what underlies the technology. 
But the ability of the user to control those features is very important. 
As I see it we are not telling anyone how to make their user interface. 
Whether they use a command line interface that requires knowledge of HTML, CSS, HTTP, GNU, and Swahili, or whether they use a series of plain english questions and multiple choice answers is how manufacturers provide product differentiation. 
In this personal view, the role of the UA group is to determine a set of functions which a User Agent should be (somehow) able to perform in order to ensure that it facilitates access to the content which it renders. 
This is also, of course, not a total specification - there are many functions which could be provided which are not necessary, but again enhance product differentiation. 
And there are many functions which are taken for granted - the most obvious in the case of browsers being the ability to render the text and follow links. 
--Charles McCathieNevile W3C Web Accessibility Initiative (visiting) mail: LCS, 545 Technology sq., Cambridge MA, USA 
In response to Charles McCathieNevile: 
I would be surprised if any major manufacturers did not provide simple 
interfaces to their products. 
Rather than expecting / hoping developers will do what we think they should, we should provide clear guidelines. 
For the conscientious developers much of this will be 'low hanging fruit', but for others it will be a wake-up call. 
The group has discussed CSS for alternative table rendering and other complex processes that go well beyond fonts / colors. 
If we state that enabling CSS support for an alternate rendering style is what a UA needs to do, we are _not_ making a clear statement that the user shouldn't need to research and reinvent arcane stylesheet code if they want to implement that alternative. 
An extreme example: can a vendor who makes their source code available claim that their product is therefore 100% accessible and 100% flexible, because all it takes to meet specific needs is writing your own code? 
A developer once made a similar claim to me (that his product was compatible with all peripherals and major operating systems because you could buy the source code and re-write it however you wanted.) 
-- Paul Adelson * The views expressed are those of the * author and do not necessarily reflect the * position of Citibank or its affiliates. 
The problem of User Interface is a difficult one. 
Some people buy programs which do everything via a wizard, which asks them simple questions in natural language and does all the work itself. 
Some people avoid those products and will only use products which are based on the model of your extreme example. 
Many people fall somewhere in between. 
As a specific example, Microsoft Word is popular with some people because it is easy to use and you don't have to think. 
It is popular with other people because it provides a powerful programming interface which can be used to make it into the word processor that the individual really wants to use. 
Some people curse it because it automatically formats text, or recognises HTML and does conversions. 
Other people pay the list price specifically to have those functions. 
If we specify too far one way or the other then we are doing a disservice to the users at the end of the process, and a disservice to manufacturers, many of whom use their user interface as a major part of product differentiation. 
It seems to me that this approach may be to the detriment of those with cognitive disabilities. 
I hope that review of the document by people with expertise in that area will give us a clearer picture of what the priorities really are. 
But it is not easy to reconcile the need for a simple interface with the need for complex control of extensive functionality. 
Different ways of doing this will be tried by different manufacturers, which will hopefully result in a diversity of browsers large enough that everybody can find one which suits their needs, or in browsers which are sufficiently configurable that they suit the needs of everybody. 
--Charles McCathieNevile - mailto:charles@w3.org 
W3C Web Accessibility Initiative - http://www.w3.org/WAI 545 Technology sq., Cambridge MA, USA In response to Charles McCathieNevile: 
I would be surprised if any major manufacturers did not provide simple 
interfaces to their products. 
Rather than expecting / hoping developers will do what we think they should, we should provide clear guidelines. 
For the conscientious developers much of this will be 'low hanging fruit', but for others it will be a wake-up call. 
The group has discussed CSS for alternative table rendering and other complex processes that go well beyond fonts / colors. 
If we state that enabling CSS support for an alternate rendering style is what a UA needs to do, we are _not_ making a clear statement that the user shouldn't need to research and reinvent arcane stylesheet code if they want to implement that alternative. 
An extreme example: can a vendor who makes their source code available claim that their product is therefore 100% accessible and 100% flexible, because all it takes to meet specific needs is writing your own code? 
A developer once made a similar claim to me (that his product was compatible with all peripherals and major operating systems because you could buy the source code and re-write it however you wanted.) 
