I'm uncomfortable that "Level 1 RDF Schema on Steroids" focuses on global domain/range restrictions rather than local restrictions. 
I've found general consensus that local restrictions are preferable. 
I think we want as seamless a progression as reasonable/possible from Level 1 to Level 2 (so users can graduate as they appreciate and/or need additional features). 
If we only support global restrictions in Level 1, I'm tempted to suggest that we drop local restrictions from Level 2. I think cardinality (preferably arbitrary, but at least 0+/0-1/1/1+/n) needs to be addressed in Level 1. 
Most current DAML+OIL ontologies include cardinality restrictions. 
XML Schemas typically include cardinality restrictions. 
I'm torn on the functional property issue. 
While I think a global restriction could be a useful hint to reasoners, I think this would often be misused. 
For instance, a usSocialSecurityNumber property uniquely identifies a Person but not a BankAccount. 
As suggested by others in the past, I'd prefer a local property like :usSocialSecurityNumber owl:uniquelyIdentifies :Person 
Generalizing and going out on limb a bit, I'm concerned that we're giving RDF too much sway (ignoring charter issues). 
If WebOnt is successful, I expect most folks will use it rather than RDF. 
This is typical in layered systems (compare the amount of application code written to use 10baseT, Ethernet datagrams, IP, TCP/UDP, and HTTP which are (roughly) successive layers in the ISO OSI Reference Model). 
I'm a bit concerned that we're making decisions that will inconvenience millions of future WebOnt users for the sake of hundreds of current RDF users. 
Mike 
Frank, 
I like very much the way you grouped functionalities. 
I think it provides the right level of granularity for this discussion on compliance level. 
However, I am not sure about the new proposal. 
My idea of a level 1 was something like a 'basic frame language', one which however is not as 'basic' as RDFS. 
Your proposal, as Mike also points out, focuses on properties, rather than additional machinery for slot specification. 
My intuition is that this is not what 'basic' users of OWL will need. 
What I would like to see is the RDF Schema stuff + machinery for specifying value/range/cardinality restrictions. 
We could then discuss whether to add (In)equality &amp; Property characteristics, but I guess these extensions will greatly complicate the implementation of reasoners for basic OWL, and may make pointless to have a distinction between level 1 and 2. - Enrico 
I very strongly agree with this point and indeed I said similar things at the f2f in Amsterdam. 
It is crazy that we are making our life difficult by imposing a RDF syntactic compatibility constraint, which may only be worth enforcing for a short period anyway. 
We should rather focus on semantic compatibility (and indeed we do!) Enrico 
