I'd be grateful for some advice on how the slogan 'applications should be liberal in what they receive and conservative in what they send' should be applied to proxy servers. 
The particular case I have in mind is an origin server (which shall remain nameless) returning an entity body with a 304. 
The client-side of our proxy is liberal enough to cope with this on receipt, but the server- side conservatively refuses to forward it. 
In this scenario it seems pretty reasonable to discard the entity: there's no way of reporting an error back to the origin server, and it seems a bit extreme to send the client a 502. 
But trying to generalize to other kinds of upstream and downstream bad behaviour opens up a can of worms. 
The options seem to be, 1. Forward broken HTTP. 2. Enforce strict conformance by responding to all bad requests with 400s and all bad replies with 502s. 
3. Fixup up bad requests/replies on their way through wherever possible. 
(1) is pretty much out of the question; (2) is over the top; and (3) is completely unspecified, so liable to be done differently be different proxy implementors. 
What to do? 
Cheers, Miles Miles Sabin Cromwell Media Internet Systems Architect 5/6 Glenthorne Mews msabin@cromwellmedia.co.uk England Sounds right to me. 
I think that the only sensible thing to do is to figure each case out as they arise; you've arrived at a good solution for this one, and it sounds like you have it right - the server side is stricter than the client side. 
I would make sure that your log files include the Server: header for any offending responses, so that proxy operators can complain effectivly to vendors. 
I assume that you've not kept silent to the (nameless) vendor for this obvious bug. 
Scott Lawrence Director of R &amp; D lawrence@agranat.com 
Agranat Systems, Inc. Embedded Web Technology http://www.agranat.com/ 
Scott Lawrence wrote, Agreed, but the problem here is that _my_ decision on what the Right Thing to do isn't necessarily going to be the same as everyone else's ... who knows, I might even get it wrong ;-) Maybe it's not a big deal, but this does seem to open up a hole for interoperability problems to sneak through. 
Granted this is probably moot (interoperability problems of this sort pale into insignificance when measured against all the broken UAs and servers out there), but it'd be nice if there was an annex to RFC2616 which taped it down. 
Indeed ... apparently fixed now. 
Cheers, Miles Miles Sabin Cromwell Media Internet Systems Architect 5/6 Glenthorne Mews msabin@cromwellmedia.co.uk England 
