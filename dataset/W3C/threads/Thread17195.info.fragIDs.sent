Hi All Before I started producing Accessible material, I developed a kiosk system, the user interface of which is a touch screen displaying a server-generated web page on a Mozilla browser. 
I need to re-engineer this system and would like to incorporate 
accessibility features where possible. 
I would appreciate any comments on my ideas: 1) All code to be valid XHTML with CSS formatting. 
2) Menu bar - available in "normal" and "huge" icon sizes and positionable on either side of screen to cater for "handedness"; this would allow the scrolling of pages (the Dark Demon of touch screens?) by existing in a transparent layer above the displayed text. 
3) Additional visitor preferences of: * Show pictures y/n * Change text size * Change language (subject to availability of translations) * Change colour schemes [black &amp; white, black &amp; gold] 4) Optional use of four physical buttons for those who find the touch screen hard to use. 
I plan to look at a speaking version, once IBM releases the ViaVoice toolkit for Linux. 
If anyone can suggest a working (preferably free, since this is a not-for-profit project) TTS system for Linux that's accessible through Perl and only requires a standard sound card - there's a pint of beer waiting here for you ;-) 
Finally, does anyone know whether it is possible to make a JavaScript mouse event emulate the tab key? 
(Tabbing between links using touch screen). 
Cheers M Matthew Smith | Business: http://www.kbc.net.au 
IT Consultant | PGP Key: http://gpg.mss.cx 
Kadina, South Australia | * Tivis Project * Community Connect * 
If you have Mozilla embedded you could use CSS absolute positioning, and just change the style sheet to change the size... 
Festival/mbrola is used a lot in linux screen readers - it's free and available for several languages. 
The blinux list archives, details at https://listman.redhat.com/mailman/listinfo/blinux-list 
might be a good place to look for more information... 
will work if you keep an array of links and where you were at - for a click on anything that doesn't already have an associated onclick action. 
If you have a particular button to do this it should be where the onclick attribute is... (a better javascripter than I am might be more helpful here... :) cheers Chaals 
There are issues around touchscreens that I've yet to understand. 
for instance how to change focus.... 
timing is one route ie tap for redirection, hold for tab, this way sighted users notice nothing unusual, unless they hold. 
but this is not a standard, so might need to be learnt.... double click may also be possible. 
bearing in mind that not everyone has the same idea of tap, hold or dble. 
alternatively: a tab button on the screen seems a reasonable possibility, who is this for? 
a blind person might need guidance as to where the tab key was, assuming no keyboard is provided. 
thanks Jonathan 
There is classic work at Trace. 
I can't tell if you are aware of this as yet. 
For your work, you have the luxury of adding functionality in the client. 
So in a sense you should be looking at software or kiosk 
accessibility resources, not Web Content guides. 
The latter are for stuff that has to play in a user-selected common denominator of WebTop Client. 
An example: the fundamental blind/touch mode in the EZ package of strategies is a single linear menu running up and down the left-hand margin of the touchscreen, such that if you rest your finger against the 
mechanical frame around the display surface you are touching the menu entries. 
It does rely on a small mechanical button array for things like confirm and for users with reach limitations. 
What is new since that work was done is that there are actually cell phones that work like this with a one-dimensional touchbar for selection. 
The point is that nowadays you will want to consider using one of the Device Independence single-authoring tool environments to develop your content and mode the html at the server, not entirely adapt it at the client. 
Plus you will have the access modes supported with browser wrinkles in the software in the kiosk. 
Best of luck. 
Al EZ Access from Trace: EZ Access Interface Techniques Single-Authoring environments: W3C DIAT Workshop XML Conference &amp; Exposition 2002 / Exposition 
Review the DOM Level 2 HTML module to see if there is a built-in TABINDEX iterator in this collection of services. 
Otherwise, as Charles says, you can build the iterator yourself. 
Al 
But mostly these are the results of trying to write the user agent, rather than the document, in HTML. 
also some disabilities have tremor or spasticity that makes "touch" difficult and tap well how long and can the person control the "how long" Bob ASCII Ribbon Campaign accessBob NO HTML/PDF/RTF in e-mail accessys@smartnospam.net NO MSWord docs in e-mail Access Systems, engineers NO attachments in e-mail, *LINUX powered* access is a civil right THIS message and any attachments are CONFIDENTIAL and may be privileged. 
They are intended ONLY for the individual or entity named above. 
If you are not the intended recipient, Please notify the sender as soon as possible. 
Please DO NOT READ, COPY, USE, or DISCLOSE this communication to others and DELETE it from your computer systems. 
Thanks 
Matthew, did you have any comments? 
having thought about this a little more and tried out our new Donuts 'recipe' site*, I realise that this is a really serious problem. 
Using an ipaq many students had problems learning the pressure that was sufficient to work as a tap, nearly the whole screen is an image linked to the next page. 
yes the screen was walloped and still failed to click.... few would be able to navigate, if the screen size of a link was less than 1/4 screen size. 
so tab and enter buttons are certainly a bonus. the ipaq would seem not to offer these, except in linux(if I remember rightly) it does offer scroll options. 
thanks Jonathan *http://www.peepo.com/pda/donuts/donuts.html for ipaq + IE CE3.0 bgsound and/or supporting embed 
