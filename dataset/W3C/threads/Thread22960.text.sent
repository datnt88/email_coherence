what would be the easiest and more direct way of converting nodes from one implementation to another? 
From http://www.w3.org/DOM/faq.html: 
NEW: How do I move a Node from one document to another? 
Neither Level 1 nor Level 2 allow you to move a Node from one document to another, although Level 2 has an importNode method which allows you to copy a Node from one document to another. 
So, using Level 2, you copy the Node from the source to the target document and then delete the Node from the source document. 
If you want to do this in Level 1, you will need to write your own function that creates a new Node in the target document and then copies the data. 
importNode should work across implementations, if both have implemented the DOM correctly. 
Joe Kesselman / IBM Research Hi, Juan, As far as I know, XercesJ as well as XML4J parser have adoptNode() function which allows to move a node from one document to another. 
I believe you should first use Document.importNode() to get a copy of your node and when use DocumentImpl.adoptNode() to actually move a node to a DOM tree. 
Please, note that adoptNode() is still in 'experimental' stage (it might be available in DOM Level 3) so adoptNode() might fail (depending on the content). 
But you should at least try it out .. Hope it helps. 
Elena Hi, I'm trying to convert a document from the org.w3c.tidy.dom 
format to the org.apache.xerces.dom 
format, and I can't find the way. 
The only thing I have found is that it should be possible with DOM 2.0 implementation, but, as things are now, what would be the easiest and more direct way of converting nodes from one implementation to another? 
I have tried deep copy, node-by-node copy, and no way. 
I get runtime or compilation errors. 
Any hint? 
Name: Juan J. Merelo Title: Consultant Civista Mobile: +34 627 397239 Facsimile: +44 (0) 20 84086399 Services and Applications for a Wireless World This e-mail and the information that it contains may be confidential and protected by law and is for access by the intended recipient only. 
Any liability (in negligence or otherwise) arising from any third party acting, or refraining from acting, on any information contained in this e-mail is hereby excluded. 
If you are not the intended recipient, please notify the sender immediately and do not disclose the contents to any other person, use it for any purpose, or store or copy the information in any medium. 
Copyright in this e-mail and any attachments belongs to Civista Limited and/or its subsidiary companies. 
While this message is virus checked, Civista can not be held responsible for its integrity. 
The Level 3 adoptNode() method is definitely not the right answer for this particular cases. 
adoptNode() will only succeed when the two Documents are in "the same implementation" -- and even subclasses of the same implementation may not be compatable enough for adoptNode() to run successfully. 
Unless tidy is using the Xerces DOM, you will definitely not be able to adopt tidy's nodes. 
Joe Kesselman / IBM Research Hi, I'm trying to convert a document from the org.w3c.tidy.dom 
format to the org.apache.xerces.dom 
format, and I can't find the way. 
The only thing I have found is that it should be possible with DOM 2.0 implementation, but, as things are now, what would be the easiest and more direct way of converting nodes from one implementation to another? 
I have tried deep copy, node-by-node copy, and no way. 
I get runtime or compilation errors. 
Any hint? 
Name: Juan J. Merelo Title: Consultant Civista Mobile: +34 627 397239 Facsimile: +44 (0) 20 84086399 Services and Applications for a Wireless World This e-mail and the information that it contains may be confidential and protected by law and is for access by the intended recipient only. 
Any liability (in negligence or otherwise) arising from any third party acting, or refraining from acting, on any information contained in this e-mail is hereby excluded. 
If you are not the intended recipient, please notify the sender immediately and do not disclose the contents to any other person, use it for any purpose, or store or copy the information in any medium. 
Copyright in this e-mail and any attachments belongs to Civista Limited and/or its subsidiary companies. 
While this message is virus checked, Civista can not be held responsible for its integrity. 
Hi. 
I'm new to DOM. 1) I don't understand why a document has to own all nodes it can reference. 
2) If I get a reference to DOM document, what should I do to be certain that the changes I do, don't reflects in the original data structure? 
Should I use importNode (to a memory-only document) or cloneNode? 
thanks in advance. 
Morten Nedertoft Brief answer: Because that's what the spec says. 
Longer answer: Because implementing a DOM often involves nonpublic interfaces (in order to achieve the desired behavior), and those won't work across implementations. 
And because Documents may be subclassed differently, in some DOMs, which can further impede interchangability of nodes. 
I'm not sure what question you're asking. 
If you don't want to affect the original DOM tree, don't alter the nodes which belong to that tree -- copy them first. 
Whether that should be done via cloneNode or by importing into a new Document is up to you, and depends on what you intend to do with the copied nodes. 
Joe Kesselman / IBM Research 
