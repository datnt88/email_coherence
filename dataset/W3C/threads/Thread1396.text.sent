Currently, the versioning spec defines a few special values for DAV:resourcetype. 
It has been pointed out in a current thread that this is only done in a few cases, whereas in most cases, the type of a resource is inferred from the DAV:supported-live-property-set. 
To make this more consistent, I propose that we remove those redundant resource types, which means that you will be able to tell whether or not something is an activity, version history, or baseline, by looking at its DAV:supported-live-property-set, as is done for the other versioning resources. 
This follows the Goland "you are done when you can't delete anything" protocol principle. 
Cheers, Geoff It would appear that there are two camps represented on the list. 
Those that want more info in DAV:resourcetype, even if that means duplicating information that can be deduced by DAV:supported-live-properties et al. 
Those that want the opposite, i.e. downplay DAV:resourcetype and rely on the capabilities of a resource to determine it's 'type'. 
Pistols at dawn? 
A democratic vote? 
Reasoned debate? 
Tim This doesn't feel right. 
Tim's point about supersets worries me. 
And clients that don't look at enough scope to be able to differentiate future/private types. 
We have specific types of resources in the spec. 
Semantic/conceptual types of resources. 
It seems better to state "this resource is of THIS type" than to let it be inferred by the property set. 
That inference step is rather brittle over time. 
Cheers, -g Greg Stein, http://www.lyra.org/ 
I agree with Greg. 
I believe that all client implementors can correctly implement a simple string comparison against the value(s) in DAV:resourcetype. 
I do not have faith that *all* client implementors will (a) think about the issue long enough to realize that they can, in fact, infer the resource types from the supported live properties, and (b) implement the inference logic uniformly and correctly. 
Clients and servers don't even support the "charset" MIME parameter uniformly, and this is relatively simple in comparison. 
Therefore, I recommend that the DeltaV specification *keep* the DAV:activity, DAV:version-history, and DAV:baseline resourcetype values. 
- Jim What about "version-controlled-resource", "version" and "workspace"? 
It would also be nice to identify a version-controlled collection in some way that it's also recognizable as a collection (e.g. DAV:resourcetype DAV:collection/ DAV:version-controlled-collection/ /DAV :resourcetype lisa And DAV:working-resource Cheers, -g Greg Stein, http://www.lyra.org/ 
