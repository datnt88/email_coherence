<s> Hi!  </s>
<s> First of all, I'm not quite sure wheter the general opinion is to have everything in DOM implemented as Nodes/NodeIterators or if attributes should be a special case, with an AttributeList.  </s>
<s> I would like to see a special-case implementation for attributes, as opposed to using Nodes for attributes.  </s>
<s> Here I present an alternative to AttributeList, designed with performance efficient implementation and usage in mind: 1) Each document should have an AttributeIndex object.  </s>
<s> 2) This object has a list of AttributeDefinitions. 3) The document can create AttributeData objects, which are used thoughout the document instead of the old AttributeLists.  </s>
<s> Something like this: interface AttributeDefinition //Abstract superclass for defining the interface readonly attribute wstring name; readonly attribute wstring type;// Returns the name of the subclass of // this instance.  </s>
<s> // (This may not be necessary with RTTI) // Conversion functions for reading and writing the attribute value as known types // Will raise an exception if the desired conversion is not possible attribute wstring asString; attribute long asLong; attribute datetime asDateTime;// This type is just an example... attribute rgbColor asRGBColor;// Another example attribute cmykColor asCMYKColor;// Still example... //Add more conversion functions here interface StringAttrDef : AttributeDefinition { // Implements an attribute stored as a string // If say, get_asLong is called, then the string is converted // to "long" if it has a valid format.  </s>
<s> Otherwise an exception is raised interface longAttrDef : AttributeDefinition {} // Implements an attribute stored as a long.  </s>
<s> interface datetimeAttrDef : AttributeDefinition {} // Implements an attribute stored as some datetime type.  </s>
<s> interface colorAttrDef : AttributeDefinition {} // Implements an attribute stored as color interface AttributeIndex unsigned long attributeDefs();// Count AttributeDefinitons AttributeDefinition attributeDefAtIndex(in unsigned long index); AttributeDefinition attributeDefByName(in wstring name); AttributeDefinition addAttributeDef(in wstring name, in wstring type); // Adds a subclass of AttributeDefinition to the list, and returns it.  </s>
<s> // If an AttributeDefinition with the same name exists, // the existing one is returned instead.  </s>
<s> If the existing // one have a different type, an exception is raised.  </s>
<s> void removeAttributeDefAtIndex(in unsigned long index); void removeAttributeDefWithName(in wstring name); interface AttributeData void activate();// You call this to operate on the // attribute data stored in this object.  </s>
<s> The above architecture have one limitation though: Any attributes in the document (AttributeData) with a given name (say, FGColor), has to be of the same AttributeDefinition type.  </s>
<s> But isn't this what is intended?  </s>
<s> Here is an example using this architecture: AttributeIndex index = document.getAttrIndex();  </s>
<s> // You want to create an FGColor attribute: // First make sure the FGColor type exists in the index: AttributeDefinition fgColor = index.addAttributeDef("FGColor",  </s>
<s> "colorAttrDef"); // Now create the data object to store the attribute: AttributeData data1 = document.createAttrData();  </s>
<s> // Now store the color: data1.activate();  </s>
<s> fgColor.set_asRGBColor(0xffffff);  </s>
<s> // You want to store another FGColor some other place in the document: AttributeData data2 = document.createAttrData();  </s>
<s> data2.activate();  </s>
<s> fgColor.set_asRGBColor(0x8050ff);  </s>
<s> // You also want to store BGColor in data2 AttributeDefinition bgColor = index.addAttributeDef("BGColor",  </s>
<s> "colorAttrDef"); data2.activate();  </s>
<s> // Just to make sure... ;) bgColor.set_asRGBColor(0x101010);  </s>
<s> // You want to read data1's FGColor as a string: data1.activate();  </s>
<s> wstring fgColStr = data1.get_asString();  </s>
<s> // fgColStr might be: "R:FF,G:FF,B:FF", if that is the RGB-string format.  </s>
<s> If you want to know why I think this architecture is performance efficient compared to something like AttributeList (or Node/NodeIterator), I can post my implementation ideas too... If any of you people knows Delpi, this architecture is similar to TTable and TField operating on a database-table with records, where: TTable is similar to AttributeIndex, TField is similar to AttributeDefinition each database record is similar to AttributeData.  </s>
<s> You just navigate the "database table" with attrData.activate();  </s>
<s> instead of table.First();,  </s>
<s> table.Next(),  </s>
<s> table.EOF()  </s>
<s> etc.  </s>
<s> Any comments appreciated.  </s>
<s> Cheers ANOQ of the Sun / Johnny Andersen E-Mail: anoq@vip.cybercity.dk or anoq@berlin-consortium.org Homepage: http://users.cybercity.dk/~ccc25861/  </s>
<s> We've moved away from the idea of attributes being a special case.  </s>
<s> We discussed attribute handling in yesterday's DOM teleconference, and we agreed to leave it roughly as it was INTENDED to be in the April 15 draft (with errors corrected).  </s>
<s> Your proposal is rather more elaborate than we'd like to have the DOM core be at this point.  </s>
<s> The performance efficiency of  </s>
<s> implementations is of less concern to the WG at this point than keeping the spec simple and re-using the basic interfaces whereever possible, so we're going to keep Attributes specified using Nodes and NodeLists.  </s>
<s> There are a lot of interesting convenience methods in this proposal, however, so it might be useful to implement them ON TOP of the DOM as an "aftermarket" product, or if experience indicates that they are indeed very useful, they might be specified as part of an optional package in a subsequent release of the DOM spec.  </s>
<s> In a nutshell, here's how attribute will be specified in the next draft of the DOM API spec.  </s>
<s> Please let us know what you think -- there's still time to get suggestions considered at next week's face to face DOM WG meeting: [a bit of background information] We've removed NodeIterator from the Core (it may come back in a later revision of the DOM API, probably as an optional package rather than part of Core).  </s>
<s> Everywhere we once used NodeIterator, we now use NodeList: To be consistent with the Java 1.2 terminology, we accept the definition of the the word "Set" to mean a grouping of unique objects, "Collection" to mean a grouping that allows duplicates but doesn't define a particular ordering, and "List" to mean an ordered collection.  </s>
<s> In most uses in the DOM, the sets of objects we manipulate may contain duplicates but are in a specific order, so NodeList seems like the best label for the set of child nodes of an Element, the set of entity declarations in a DocumentType, etc. Attribute is derived from Node.  </s>
<s> This SHOULD have been specified in the 4/15 draft.  </s>
<s> mea culpa ... In the "object model", the value of an attribute is specified by the Attribute's child nodes.  </s>
<s> In the simple case, the value would be a single Text node, in the more complicated case where the attribute value contains entity references, this may be a list of nodes or even a list of Elements and subtrees.  </s>
<s> This is unchanged from the 4/15 draft.  </s>
<s> The Attribute interface will look just like it did in the 4/15 draft: interface Attribute : Node { wstring getName(); wstring getValue(); attribute boolean specified; wstring toString(); Since Attribute is a Node, it has a getParent() method ... we are discussing whether it should return NULL (since Attributes are not "children" of elements), and have a getElementNode method on Attribute to get the Element that contains an Attribute.  </s>
<s> Thoughts????  </s>
<s> There is no longer an AttributeList interface; instead Element has a NodeList containing the Attribute nodes to represent all the attribute-value pairs defined for a given element.  </s>
<s> [OK, it should probably be a "NodeSet", but a) we don't want to add an interface just to be "politically correct" with respect to terminology, and b) the actual set of attributes is in SOME order defined by the implementation (if not by the XML spec), and NodeList provides the methods needed to enumerate all the Attributes.]  </s>
<s> The "power user" MAY index into the NodeList of attributes and use the Attribute interface to get and set specific attribute values.  </s>
<s> This will be useful mainly to those using XML where attribute values may have entity references.  </s>
<s> The typical user may use various "convenience" methods on the Element interface to get/set/remove Attribute Node's by the name of the attribute, and to get/set/remove attribute VALUES represented as strings.  </s>
<s> Thus, the Element interface will look as follows: interface Element : Node { wstring getTagName(); NodeList getAttributeList(); wstring getAttribute(in wstring name); void setAttribute(in string name, in string value); void removeAttribute(in wstring name); Attribute getAttributeNode(in wstring name); void setAttributeNode(in Attribute newAttr); void removeAttributeNode(in Attribute oldAttr); void getElementsByTagName(in wstring tagname); (normalize() will -- I hope -- be removed)  </s>
<s> Are there any other issues that have been discussed on the www-dom list with respect to Attributes that are still murky?  </s>
<s> It appears that there have been some inconsistency between my brain and the DOM-spec... ;) (i.e.  </s>
<s> I didn't understand it correctly...) My impression was, that attributes were used for things such as the color of text, the text-font, alignment etc.  </s>
<s> I see now that elements with tagnames are used for this purpose.  </s>
<s> So I guess the spec.  </s>
<s> will be just great.  </s>
<s> I'm very sorry about this...  </s>
<s> There are a lot of interesting convenience methods in this proposal, however, so it might be useful to implement them ON TOP of the DOM as an "aftermarket" product...  </s>
<s> If it should be implemented, I think it should be a layer _below_ the current API... But I guess you are not referring to API-layers when you say "on top of"... are you?  </s>
<s> I wonder, what kind of data/information is stored in attributes?  </s>
<s> Can you give any concrete examples?  </s>
<s> Cheers ANOQ of the Sun / Johnny Andersen E-Mail: anoq@vip.cybercity.dk or anoq@berlin-consortium.org Homepage: http://users.cybercity.dk/~ccc25861/  </s>
