Hi, I wonder what happens when I copy or move a VCR? 
For COPY I'd expect to got a new VCR at the destination with an exact copy of properties. 
This implies that the new created VCR must share the version-history with the source VCR. 
Is this correct? 
Is this desireable? 
Defining this behavior as not expected by the user, I'd say COPY means creation of a new version-history and copy of the checked-in version to that new VH. 
With that the checked-in property of the copied VCR must change. 
Same for MOVE except for the deletion of the source. 
Regards, Daniel 
Hi, 
[Daniel said:] 
I think this is desirable and correct but with one caveat... 
Both in section 1.3 (where the workspace term is defined) and in section 6 the DeltaV specification says that you can only have one VCR for a given version history in a workspace. 
If copy created a new VCR but pointed to the original VHR then this rule could be violated if the destination is in the same workspace as the source of the copy. 
If the copy does not break this rule then it would be fine to have two VCRs pointing to the same version history. 
I certainly wouldn't have thought that moving a VCR would create a new history resource. 
Regards, Peter Raymond - MERANT Principal Architect (PVCS) WWW: http://www.merant.com 
Hi, I wonder what happens when I copy or move a VCR? 
Defining this behavior as not expected by the user, I'd say COPY means creation of a new version-history and copy of the checked-in version to that new VH. 
With that the checked-in property of the copied VCR must change. 
Same for MOVE except for the deletion of the source. 
Regards, Daniel 
So my first assumption was right - except for workspaces Thanks for clarification Daniel 
Hi, 
[Daniel said:] 
I think this is desirable and correct but with one caveat... 
Both in section 1.3 (where the workspace term is defined) and in section 6 the DeltaV specification says that you can only have one VCR for a given version history in a workspace. 
If copy created a new VCR but pointed to the original VHR then this rule could be violated if the destination is in the same workspace as the source of the copy. 
If the copy does not break this rule then it would be fine to have two VCRs pointing to the same version history. 
I certainly wouldn't have thought that moving a VCR would create a new history resource. 
Regards, Peter Raymond - MERANT Principal Architect (PVCS) WWW: http://www.merant.com 
http://www.merant.com 
-----Original Message----- mailto:daniel.kirmse@sap.com 
] Hi, I wonder what happens when I copy or move a VCR? 
Defining this behavior as not expected by the user, I'd say COPY means creation of a new version-history and copy of the checked-in version to that new VH. 
With that the checked-in property of the copied VCR must change. 
Same for MOVE except for the deletion of the source. 
Regards, Daniel 
Hi, In my opinion yes, it makes sense to create a new VCR pointing to the 
existing history if possible. 
Some server implementers may not want to copy version-controlled resources, eg the result of the copy would be a new non-version-controlled resource. 
I think this is why the specification is vague about the results of copying a VCR. 
Also note that in WebDAV (RFC2518 section 8.8.2) the copying of the resources live properties is optional (eg some servers may not copy the live properties). 
Regards, Peter Raymond - MERANT Principal Architect (PVCS) WWW: http://www.merant.com 
So my first assumption was right - except for workspaces Thanks for clarification Daniel -----Original Message----- Hi, 
[Daniel said:] 
I think this is desirable and correct but with one caveat... 
Both in section 1.3 (where the workspace term is defined) and in section 6 the DeltaV specification says that you can only have one VCR for a given version history in a workspace. 
If copy created a new VCR but pointed to the original VHR then this rule could be violated if the destination is in the same workspace as the source of the copy. 
If the copy does not break this rule then it would be fine to have two VCRs pointing to the same version history. 
I certainly wouldn't have thought that moving a VCR would create a new history resource. 
Regards, Peter Raymond - MERANT Principal Architect (PVCS) WWW: http://www.merant.com 
-----Original Message----- Hi, I wonder what happens when I copy or move a VCR? 
Defining this behavior as not expected by the user, I'd say COPY means creation of a new version-history and copy of the checked-in version to that new VH. 
With that the checked-in property of the copied VCR must change. 
Same for MOVE except for the deletion of the source. 
Regards, Daniel 
From: Kirmse, Daniel [mailto:daniel.kirmse@sap.com] 
I wonder what happens when I copy or move a VCR? 
See section 3.14 (Additional COPY Semantics) and section 3.15 (Additional MOVE Semantics). 
For COPY I'd expect to got a new VCR at the destination with an exact copy of properties. 
No. See the DAV:must-not-copy-versioning-property postcondition 
defined in 3.14. 
Versioning properties are not copied by COPY. 
The resource created by the COPY is the same as would be created by a GET/PROPFIND(dead properties)/PUT/PROPPATCH combination (i.e. it is not version-controlled, unless the server automatically puts all resources under version control, and in the latter case, a new version history is created for the new resource). 
This implies that the new created VCR must share the version-history with the source VCR. 
No, this would never be the case. 
Is this correct? 
Is this desireable? 
No, and no. 
Defining this behavior as not expected by the user, I'd say COPY means creation of a new version-history and copy of the checked-in version to that new VH. 
With that the checked-in property of the copied VCR must change. 
Close. 
COPY of a VCR creates a new resource whose content and dead properties are the same as the source for the COPY. 
A new version history is created only if the server automatically puts every new resource (such as the result of a PUT) under version control. 
In this case, the checked-in property is guaranteed to be different. 
Same for MOVE except for the deletion of the source. 
No, MOVE is totally different. 
A MOVE is just a "rename", so the resource (including all its versioning properties) remain the same, but it is now mapped to a new URL. 
See section 3.15. 
Cheers, Geoff 
From: Peter Raymond [mailto:Peter.Raymond@merant.com] 
[Daniel said:] 
I think this is desirable and correct but with one caveat... 
Well, one can debate whether or not it is desirable, but it definitely is not correct. 
COPY does not create a new VCR, unless the server automatically puts all new resources under version control, and in that case, a new version history will be created for it. 
Both in section 1.3 (where the workspace term is defined) and in section 6 the DeltaV specification says that you can only have one VCR for a given version history in a workspace. 
If copy created a 
new VCR but pointed to the original VHR then this rule could be violated if the destination is in the same workspace as the source of the copy. 
If the copy does not break this rule then it would be fine to have two VCRs pointing to the same version history. 
Yes, but you need to use the VERSION-CONTROl request (identifying a version) to make this be the case, not a COPY. 
I certainly wouldn't have thought that moving a VCR would create a new history resource. 
That is correct. 
A MOVE is very different from a COPY, since it effectively just renames the resource, but otherwise leaves it unmodified. 
Cheers, Geoff 
Just to make sure there is no confusion on this point, the behavior of COPY is independent of whether or not the destination is in a workspace. 
In either case, a new resource is created at the destination, which has no relationship to the source resource, other than having the same content and dead properties. 
The behavior of MOVE is also independent of whether or not the destination is a workspace, except that a MOVE from one workspace to another will fail if there already is a VCR for that version history in the target workspace. 
Note: This means that Daniels first assumption was incorrect, but instead the defined behavior is closer to the behavior that he wished was the case. 
Cheers, Geoff So my first assumption was right - except for workspaces Thanks for clarification Daniel -----Original Message----- 
Hi, 
[Daniel said:] 
I think this is desirable and correct but with one caveat... 
Both in section 1.3 (where the workspace term is defined) and in section 6 the DeltaV specification says that you can only have one VCR for a given version history in a workspace. 
If copy created a new VCR but pointed to the original VHR then this rule could be violated if the destination is in the same workspace as the source of the copy. 
If the copy does not break this rule then it would be fine to have two VCRs pointing to the same version history. 
I certainly wouldn't have thought that moving a VCR would create a new history resource. 
Regards, Peter Raymond - MERANT Principal Architect (PVCS) WWW: http://www.merant.com 
-----Original Message----- Hi, I wonder what happens when I copy or move a VCR? 
Defining this behavior as not expected by the user, I'd say COPY means creation of a new version-history and copy of the checked-in version to that new VH. 
With that the checked-in property of the copied VCR must change. 
Same for MOVE except for the deletion of the source. 
Regards, Daniel 
Hi, 
But 3.14 states (DAV:copy-creates-new-resource): If the source of a COPY is a version-controlled resource or version, and if there is no resource at the destination of the COPY, then the COPY creates a new non-version-controlled resource at the destination of the COPY. 
The new resource MAY automatically be put under version control, but the resulting version-controlled resource MUST be associated with a new version history created for that new version-controlled resource, and all postconditions for VERSION-CONTROL apply to the request. 
so there would be a new version-history for the copy-target. 
What is right here??? 
I certainly wouldn't have thought that moving a VCR would create a new history resource. 
Regards, Daniel -----Original Message----- Hi, I wonder what happens when I copy or move a VCR? 
Defining this behavior as not expected by the user, I'd say COPY means creation of a new version-history and copy of the checked-in version to that new VH. 
With that the checked-in property of the copied VCR must change. 
Same for MOVE except for the deletion of the source. 
Regards, Daniel 
Is it allowed to DELETE a version resource which appears in the checkout or checkin property of a VCR? 
If so, what happens to the checkin/checkout property? 
Julian 
Implementation-defined, I'd think. 
(SVN doesn't allow it) 
I'd say that it just gets left around. 
If somebody tries to use it, then they get a 404. 
I'd also be happy with language that states a MAY or SHOULD (but not a MUST; IMO, we shouldn't force the server to fix dangling links) Cheers, -g Greg Stein, http://www.lyra.org/ 
From: Kirmse, Daniel [mailto:daniel.kirmse@sap.com] 
From: Peter Raymond [mailto:Peter.Raymond@merant.com] 
One could debate whether it is desireable, but it definitely is not correct (:-) ... see section 3.14 that Daniel quotes below. 
But 3.14 states (DAV:copy-creates-new-resource): If the source of a COPY is a version-controlled resource or version, and if there is no resource at the destination of the COPY, then the COPY creates a new non-version-controlled resource at the destination of the COPY. 
The new resource MAY automatically be put under version control, but the resulting version-controlled resource MUST be associated with a new version history created for that new version-controlled resource, and all postconditions for VERSION-CONTROL apply to the request. 
so there would be a new version-history for the copy-target. 
What is right here??? 
The spec (:-). 
I certainly wouldn't have thought that moving a VCR would create a new history resource. 
MOVE does not, but COPY does. 
This is true in general for MOVE and COPY, i.e. that MOVE just gives a resource a new name (URL), while COPY creates a new resource. 
Cheers, Geoff 
It is server-defined. 
Some servers will disallow the DELETE in those cases, while others want to leave them dangling. 
We couldn't get consensus on either behavior so, it is left as server-defined. 
Cheers, Geoff Is it allowed to DELETE a version resource which appears in the checkout or checkin property of a VCR? 
If so, what happens to the checkin/checkout property? 
Julian 
