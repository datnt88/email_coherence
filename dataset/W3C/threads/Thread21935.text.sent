comments inlined -----Ursprungligt meddelande----- Fr?n: Fred L. Drake, Jr. [mailto:fdrake@acm.org] 
Skickat: den 31 maj 2001 21:12 Till: Dimitris Dimitriadis Kopia: 'www-dom-ts@w3.org' 
?mne: 
Re: Minutes in brief and action items This is a quick account of theminutes from Tuesday's telcon: Thanks for summarizing! 
Perhaps the complete minutes will answer my questions; I'll look there next. 
1. 
We decided to unify the schemas that have been proposed so far. 
We will produce _one- schema for the DOM TS ML, which will exist in XML Schema and DTD form, without losing any information (it is obvious that we will loose some schemas-specific constraint checking in the DTD).Keep the IDL-ish naming conventions, boil both existing frameworks down to this set, extend with construct parts, metadata and packaging/suite defs. 
Will this include DTD/Schema documentation? 
[dd] Yes, documentation (which is an action item on me) will also contain documentation of the schema/dtd. 
5. The test suite will be able to support export to and import from the xUnit-type frameworks. 
Are you saying that a test can be imported from code? 
[dd] Sorry, I wasn't clear. 
It would support, were the tests XMLified, not directly from code. 4. Look into an issue tracking system (there is no such colution within the W3C) (Philippe/Jason) Are there reasons this couldn't be a SourceForge project? 
[dd] W3C license 5. Rewrite styelsheets for code generation (Java and ECMA primarily, others welcome) (NIST for the Java one, ECMA open) Once I have time to understand the test schema, I'll try writing the stylesheet for Python generation. 
[dd] brilliant. 
The DOM TS will consists of the tests, documentation, tests is Java and ECMA as well as the stylesheets used to procude Java/ECMA, but any additional XSLT goes to show that we can support many other bindings. 
-Fred Fred L. Drake, Jr. fdrake at acm.org PythonLabs at Digital Creations Sounds good; once the schema/DTD has settled down, I'll be glad to help with this. 
I'm presuming this will be done using the same DTD as the W3C XML specifications use, but have no particular preference myself as long as we're using a non-propriety text-based format. 
I have written DTD documentation before: I've also been heavily active as a proofreader, editor, and technical reviewer for the standard Python documentation and a number of the Python books. 
Dimitris: Either brilliant or complete folly -- I expect this to be a serious test of my XSLT abilities! 
But hey, at least I'll learn something, and hopefully there will be a useful result. 
-Fred Fred L. Drake, Jr. fdrake at acm.org PythonLabs at Digital Creations 4. Look into an issue tracking system (there is no such colution within W3C) (Philippe/Jason) I don't think the W3C license is important when we talk about the bug tracking system. 
As long as the service is publicly accessible, reliable and don;t constraint use too much, I don't see any reason to not use it. 
It's up to those who are going to use it a lot to pick one. 
Philippe You could use the bug, patch and new feature trackers within xmlconf. 
I haven't used them yet, but they are at: http://sourceforge.net/tracker/?group_id=8114 
(It appears that you only see Feature Requests if you aren't logged in, but there are Bug, Support Request, and Patches trackers visible if you log in). 
The key configuration item is to define the categories of bugs and groups. 
Though these could evolve, it would be good to have a reasonable starting set. 
I've added marybrady and fdrake as Techs and Admin's in the trackers on xmlconf, so if you want to explore please feel free. 
If anybody else is interested, send me your SourceForge id. 
If anyone knows how I can remove mbrady (Michael Brady) from the developer list, please let me know. 
4. Look into an issue tracking system (there is no such colution within W3C) (Philippe/Jason) I don't think the W3C license is important when we talk about the bug tracking system. 
As long as the service is publicly accessible, reliable and don;t constraint use too much, I don't see any reason to not use it. 
It's up to those who are going to use it a lot to pick one. 
Philippe Perhaps not from the W3C's perspective, but for SourceForge, the *project* must have an OSD license to use the SF facilities -- even if the facility isn't CVS. 
It is unfortunate that the W3C license is not OSI approved, but that's not a battle I want to take on. 
-Fred Fred L. Drake, Jr. fdrake at acm.org PythonLabs at Digital Creations The first thing to do is to define the distinction between "Category" and "Group" -- the last time I looked, SF did not provide any guidance on this, but it makes a difference. 
For Python, we use "Category" to describe components/aspect of the software (documentation, build system, parser/compiler, library modules, etc.), and "Group" to describe the bug (irreproducable, not a bug, third-party bug, platform-specific, etc.). 
It's not clear that the bug, feature request, or patch trackers should be separated -- I have a *strong* suspicion that that adds navigational complexity without adding value. 
I would suggest enabling only one of those three &amp; calling it a "bug tracker". 
"Documentation" is always a good category. 
Note that comments on project Web pages may also end up here. 
For this project, perhaps we should also consider "xUnit Conversion" (with *which* xUnit being largely indicated by who it's assigned to) or have a "fooUnit Conversion" for each "foo" that's covered. 
Another category could be "Schema/DTD", covering the schema/DTD and their generation. 
Additional categories should be added for other "subprojects". 
It looks like you've figured this out already, so I'll replace the text I started to write with this sentence. 
;-) -Fred Fred L. Drake, Jr. fdrake at acm.org PythonLabs at Digital Creations Since HTML tidy was accepted recently on SourceForge [1], I believe it is possible to use SourceForge. 
As far as the W3C knows, we are fully compatible with the OSI approved licenses. 
We requested in the past the approval but never got any response from them [2]. 
Philippe [1] http://sourceforge.net/projects/tidy/ [2] http://lists.w3.org/Archives/Public/www-dom/2000JulSep/0153.html 
This is good news. 
Given that using SF means that there's no need for the W3C to allocation additional resources to setting up issue trackers or other services, or spend time configuring them, I'll suggest that using SF is inherantly better than inventing everything all over again. 
For Python, we've had a very good experience using SF, and strongly encourage use of their facilities. 
They may not be perfect, but they sure seem to handle it well and are actively improving the service. 
Sigh. 
Ok, I'll fire off one email to someone I know... -Fred Fred L. Drake, Jr. fdrake at acm.org PythonLabs at Digital Creations I was not able to find a SourceForge user id for you or I would have. 
To register as a SourceForge user, http://sourceforge.net/account/register.php 
Let me know your user ID and I'll add you as an admin to the bug tracking system. 
If you wish to use another license that is not currently approved by the Open Source Initiative, let us know and we will review these requests on a case-by-case basis. 
The W3C License is not listed as a standard SourceForge supported license. 
But SourceForge can accept other licenses and apparently has for HTML Tidy (HTML Tidy is listed as an Other/Proprietary license) but there aren't any links that clearly describe how it is licensed. 
SourceForge's artifact tracker (the bugs tracker is a artifact tracker for a specific type of artifact) could be used in the test submission process. 
The test tracker could allow the public to submit a test and it could be configured to mail www-dom-ts@w3.org (or another mailing list) with a notification that a test has been submitted. 
Here is an example: Bugs item #429422, was updated on 2001-06-01 12:30 You can respond by visiting: Category: None Group: None Status: Open Resolution: None Priority: 5 Submitted By: Nobody/Anonymous (nobody) Assigned to: Nobody/Anonymous (nobody) Summary: Test of bug tracking Initial Comment: This is a test of bug tracking. 
If you visit that page, you are allowed to make comments on the test which could serve as a threaded discussion on the specific test. 
I might try to mock up a new "tracker" for test submissions on xmlconf as a prototype for www-dom-ts.sourceforge.net 
or whatever a possible SourceForge project for the DOM test suite definition is called. 
Creating a SourceForge project with the W3C license would solve a lot of our infrastructure issues. 
