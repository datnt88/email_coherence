[copy to www-archive, not www-webont-wg; i.e. feel free to show this to anybody you like, but I don't think it's worth the WG's time...] The situation can be summed up as follows. 
This just looks like hand-waving and appeal to Authority, not an actual technical argument. 
Not to say that the burden of persuasion is necessarily on you; but if you're trying to persuade me, this doesn't do it. 
I would like to understand the technical argument. 
The WebOnt language is obliged by the layering requirements which layering requirements? 
Definite descriptions without clear referents don't help much. 
to treat its own syntactic constructions What do you mean by 'syntactic constructions' here? 
By my reckonning, the syntactic constructions of WebOnt are exactly the same as those of RDF: terms: literals, bnodes, and URIref names atoms: S P O triples. 
formulas: conjunctions of atoms. 
Please give an example of what you mean by syntactic construct. 
as assertions of the existence of a class corresponding to the syntactic construct(and in fact of a great deal else as well, eg lists). 
This is because the RDF meaning of the RDF encoding of every piece of the WebOnt language amounts to an assertion of the existence of that class. 
Quite. 
That's by design, and seems quite natural to me. 
And, as Peter has shown, such a requirement is very dangerous, He has shown that it *can* be very dangerous. 
He has not shown, to my satisfaction, that it is must be dangerous in every case; that there is no design that avoids the problems. 
since it can rapidly lead to paradoxes or contradictions of various well-known kinds when the language is reasonably expressive. 
(It may be worth emphasizing that the kind of problems that Peter is talking about have been well-known now for close to a century, are widely studied, and that there is no easy or cute way to hack around them. 
Some very smart people (Hilbert, Russell, Church, Turing, Goedel, Quine, Kripke, Montague) have wrestled with these problems, and the consensus seems to be that there isn't any way to avoid them. 
Look, if it's that well-studied, just spell out (or at least point to) the argument. 
An appeal to authority only makes me more suspicious of your position; recall our exchange about orthodoxy and Des-Cartes experiences. 
Certainly they cannot be avoided by appeals to other kinds of logic, such as multi-valued logics or abandoning the law of excluded middle. 
They have the same kind of status in foundations of mathematics as, say, the conservation of energy has in physics. 
A blithe confidence that some way will be found to hack around them should be treated rather like a patent application for a perpetual-motion machine: its really not worth getting into the details of what is wrong with it.) Meanwhile, you found it worthwhile to read and criticize Jeremy's attempt to do exactly this, no? 
That criticism doesn't seem to say that it's hopeless to persue this line of work. 
I don't understand how to reconcile your messages. 
Dan Connolly, W3C http://www.w3.org/People/Connolly/ Sure, I concur. 
Im just sloppy about CC lines, I tend to use the ones that get put in automatically. 
The situation can be summed up as follows. 
I wasn't giving an argument. 
As Guus requested, I was trying to give clarification on what the issue was. 
The WebOnt language is obliged by the layering requirements That OWL syntax be RDF syntax and that OWL interpretations include the same commitments as RDF interpretations (ie that an OWL interpretation of X which makes X true contains, or is an extension of, an RDF interpretation of X which also makes X true.) 
Well, that is obviously wrong, even of DAML, since the DAML meanings of the RDF graphs are not *conjunctions* of the RDF meanings of the DAML triples. 
In the case of DAML, I mean the lists in things like intersectionOf. 
The DAML MT treats them (correctly) as syntactic primitives, not as implicit existential assertions. 
as assertions of the existence of a class corresponding to the syntactic construct(and in fact of a great deal else as well, eg lists). 
This is because the RDF meaning of the RDF encoding of every piece of the WebOnt language amounts to an assertion of the existence of that class. 
Even when the class that RDF says exists is the Russell set in OWL? 
Why would that be natural? 
And, as Peter has shown, such a requirement is very dangerous, Right. 
OK, if you want to get involved with foundations of set theory every time a web language is created, then I guess you are entitled to take your life in that direction. 
Seems pointless to me. 
Apart from the waste of time, I would have no confidence that Id be able to do it. 
Proving consistency of set theories is heavy work. 
since it can rapidly lead to paradoxes or contradictions of various well-known kinds when the language is reasonably expressive. 
(It may be worth emphasizing that the kind of problems that Peter is talking about have been well-known now for close to a century, are widely studied, and that there is no easy or cute way to hack around them. 
Some very smart people (Hilbert, Russell, Church, Turing, Goedel, Quine, Kripke, Montague) have wrestled with these problems, and the consensus seems to be that there isn't any way to avoid them. 
Im thinking of the Russell paradox in set theory, Goedel incompleteness, Turing undecideability, Tarski's results on meta-descriptions (a consistent language can't be the same expressive power as its own metatheory), Montague's paradox (showing that even quite weak languages can't consistently describe their own semantics), and Quine's attempts to construct set theories that avoided the ZF constructions by using more 'natural' comprehension principles, like his New Foundations and the odd system in Set Theory and Its Logic - the first logic book I ever read! - which are now considered to be historical curiosities. 
(If Quine could't do it, I certainly can't do it.) Oh, and Kripke's demolition job on the substitutional interpretation of modal quantifiers. 
All of these have a common theme: they are all variations on the liar paradox, which all lead to the conclusion that when you try to let a language define itself, or use definitions of its own semantics or meanings at all 'freely' (ie except under *very* tightly 'layered' conditions, eg ramified type theory, say, or Tarski's strict heirarchy of meta/meta-meta/..languages, each stronger than the one below it) then you get paradoxes. 
People have tried just about every dodge to get round it and none of them have worked. 
Im not appealing to MY authority, in case you think I am, by the way. 
I'm not an expert in this stuff. 
Chris Menzel for example knows this area much better than I do. 
Feel free to ask anyone else about it. 
Certainly they cannot be avoided by appeals to other kinds of logic, such as multi-valued logics or abandoning the law of excluded middle. 
They have the same kind of status in foundations of mathematics as, say, the conservation of energy has in physics. 
A blithe confidence that some way will be found to hack around them should be treated rather like a patent application for a perpetual-motion machine: its really not worth getting into the details of what is wrong with it.) Come on!! I only read the damn thing because you yelled at me during the telecon about it. 
Normally I don't bother to read ideas about how to re-do set theory properly, unless they come with a VERY good provenance. 
But you asked me to look at it and say what was wrong with it, and I said I would, so I did. 
Perhaps I didnt express myself forcefully enough. 
It was meant to convey that general idea. 
I think Ive been fairly consistent on this issue. 
Maybe Ive been too polite at times, but we all have to try to get along. 
Pat IHMC(850)434 8903 home 40 South Alcaniz St.(850)202 4416 office phayes@ai.uwf.edu nope. 
Yes, they are; that is: the DAML meanings are complete w.r.t. the RDF semantics; the DAML+OIL semantics (the way I see them; ala the axiomatic semantics) further constrain interpretations. 
But we've switched from syntax to semantics somehow here... intersectionOf is (a name for) a property that relates one class to a list of classes. 
It's not a syntactic primitive. 
It is specified thus: for intersectionOf(X, Y) read: X is the intersection of the classes in the list Y; i.e. if something is in all the classes in Y, then it's in X, and vice versa. 
cf OIL AND -- http://www.daml.org/2001/03/daml+oil 
See also: as assertions of the existence of a class corresponding to the syntactic construct(and in fact of a great deal else as well, eg lists). 
This is because the RDF meaning of the RDF encoding of every piece of the WebOnt language amounts to an assertion of the existence of that class. 
No, that's not natural. 
I'm not convinced that RDF (along with DAML+OIL semantics) says it exists. 
And, as Peter has shown, such a requirement is very dangerous, OK, stalemate there. 
Those I'm familiar with... 
That one I don't know; it seems clearly relevant; I'll have to study it. 
Pointers are welcome. 
[... other bits skipped for lack of time...] OK; I see now. 
Thanks. 
Dan Connolly, W3C http://www.w3.org/People/Connolly/ 
