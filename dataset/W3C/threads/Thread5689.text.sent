it is the opinion of the chair of WOWG (me) that we have now met all of our exit criteria (modulo potential change in RDF) and thus I am going to begin preparing materials for our eventual move to Proposed Recommendation -- one thing that would help is if the implementors of OWL reasoners, ontologies, or etc. were to share with us their experiences -- this is especially valuable (but not limited to) those who have contributed their results to our test documents. 
We are expecially interested in feedback with respect to whether you were able to implement the langauge based on the documents (were we clear), were there other people's tools, products, techniques you found valuable, and how long did it take you and how hard was it (in qualitative terms is fine). 
Unclear to me exactly how I will use this information, but I would prefer responses to this list, and in public, so that I am free to forward what you write to the Working Group and/or other W3C lists. 
thanks Jim Hendler p.s. Please feel free (and encouraged) to circulate this message to all and sundry who may have implemented in this space Professor James Hendler hendler@cs.umd.edu 
Director, Semantic Web and Agent Technologies 301-405-2696 Univ of Maryland, College Park, MD 20742 *** 240-277-3388 (Cell) From: Jim Hendler hendler@cs.umd.edu 
Subject: Call for comments on your implementation experience Date: Fri, 7 Nov 2003 10:09:40 -0500 I had no severe problems in implementing OWLP, either the parsing side or the reasoning side. 
I did not find the OWL documents difficult to read. 
The biggest problems I encountered in implementing the parsing part of OWLP had to do with the RDF syntax. 
Implementing a parser for the abstract syntax was much easier than implementing a parser for the RDF/XML syntax. 
This had less to do with the OWL encoding in RDF than it had to do with RDF itself. 
The biggest problems I encountered in implementing the reasoning part of OWLP had to do with the RDF embedding, particularly handling annotations as real parts of the meaning of an OWL ontology. 
The other parts of the (partial) reasoner in OWLP were easy to handle by passing the reasoning off to a description logic reasoner. 
The total effort to implement OWLP was about three months. 
Peter F. Patel-Schneider Bell Labs Research Hi all, This is our experience of providing OWL DL support to the WebODE ontology engineering platform. 
- The effort needed to implement a translation system between OWL DL and WebODE was around 2.5 man months, taking into account that we had already studied in depth the OWL language and its evolution during the last year. 
This effort can be further decomposed in the following: * 1 month for creating an ad hoc Java API to read OWL documents. 
We must remark that by the time when we started its implementation there were no APIs available for OWL. 
We used the Jena support (version 1.6.1) for RDF. 
Our work consisted in transforming the OWL document into a set of RDF triples, using ARP, and using RDQL to define the queries that allowed us to fill in the corresponding OWL model in our API. * 1 month for defining the transformations needed to import OWL ontologies into WebODE, taking into account that they are based on different KR formalisms. 
* 1/2 month for defining the transformations needed to export OWL ontologies from WebODE. - With regard to the OWL documentation, it was fine, taking into account that we had already a deep knowledge of DAML+OIL. 
The main problems that we faced were due to the evolution of the language while we were developing the tool (we started around February/March 2003). 
- Finally, regarding tools, we used Jena 1.6.1. 
No need to say that we would have used Jena 2 if it had been available by the time when we started working, since much of the work we needed to do was then done by them. 
Regards, Oscar Corcho Ontological Engineering Group Universidad Politecnica de Madrid -----Mensaje original----- De: public-webont-comments-request@w3.org [mailto:public-webont-comments-request@w3.org]En nombre de Jim Hendler Enviado el: viernes, 07 de noviembre de 2003 16:10 Para: public-webont-comments@w3.org Asunto: Call for comments on your implementation experience it is the opinion of the chair of WOWG (me) that we have now met all of our exit criteria (modulo potential change in RDF) and thus I am going to begin preparing materials for our eventual move to Proposed Recommendation -- one thing that would help is if the implementors of OWL reasoners, ontologies, or etc. were to share with us their experiences -- this is especially valuable (but not limited to) those who have contributed their results to our test documents. 
We are expecially interested in feedback with respect to whether you were able to implement the langauge based on the documents (were we clear), were there other people's tools, products, techniques you found valuable, and how long did it take you and how hard was it (in qualitative terms is fine). 
Unclear to me exactly how I will use this information, but I would prefer responses to this list, and in public, so that I am free to forward what you write to the Working Group and/or other W3C lists. 
thanks Jim Hendler p.s. Please feel free (and encouraged) to circulate this message to all and sundry who may have implemented in this space Professor James Hendler hendler@cs.umd.edu 
Director, Semantic Web and Agent Technologies 301-405-2696 Univ of Maryland, College Park, MD 20742 *** 240-277-3388 (Cell) Hi, This is our experience of implementing Bossam rule engine and applying it for OWL inference. 
First, the overall story of implementation. 
The inference engine we use, Bossam, is a production rule engine we developed in this year. 
We tried to design Bossam so that it can be comfortably used for reasoning on the web. 
After finishing the first phase of Bossam development, we started to write inference rules for OWL. 
At first, we did not understand well the differences among OWL species, but now we've just begun to understand. 
We're reorganizing a rulebase for OWL. 
We're currently working on OWL DL inference. 
And here're some numbers: - 1 month for understanding ontology and OWL *in general*. 
We had no prior knowledge on description logics, then. 
But we knew about RDF, frames, FOL and AI in general. 
It was and still is difficult for us, non-experts in logics and computational theory, to catch exactly what the differences and meanings imposed on different OWL species are. 
OWL AS&amp;S is a notorious document among developers in here. 
- 5 months for implementing the first (quasi-)stable version of Bossam - 1 month for designing Buchingae, a rule language for Bossam, and implementing a parser for it. 
We used ANTLR for writing syntax rules and generating a parser. 
- 1/4 month for implementing an OWL importing feature for Bossam. 
We used Jena2 to produce RDF triples from OWL documents. 
The triples are transformed into a series of facts, which are finally loaded into Bossam's working memory. 
This was quite straight and simple. 
- 1/2 month for writing inference rules for OWL. 
We began from OWL test cases one by one and wrote rules for each test case. 
We soon realized that it was not a proper process of working out inference rules for OWL. - 1/4 month for writing inference rules for OWL DL. Still far from complete, and there're still many things to be learned. 
Currently, Bossam has passed 50 tests out of 88 approved positive entailment tests. 
There are 15 facts and 55 rules defined in the rulebase for OWL DL inference. 
It took about 6 minutes to load W3C's wine ontology and derive all the facts derivable by the rulebase. 
Hope it helps. 
Best, Minsu Minsu Jang Senior Member of Engineering Staff Business Knowledge Research Team Electronics and Telecommunications Research Institute Hi, This is our experience for the implementation of Pellet reasoner. 
Pellet is a Description Logic reasoner based on tableaux algorithms. 
When we started our implementation we didn't have any experience on implementing this kind of reasoner. 
We spent a month or so to understand the tableaux algorithms and implement the first prototype of a DL reasoner. 
Supporting reasoning about individuals and entailments took nearly a month. 
Another month was for implementing various different optimization techniques. 
Description Logic handbook was the main reference we used. 
Implementing the parser to support most of OWL constructs was not so hard as we have used Jena toolkit to do the RDF parsing. 
But implementing a full syntax checker that would cover all the features of OWL was really hard as there were many corner cases especially about structure sharing issues. 
At the time, there was little documentation we could find but the new documents provide more information about these issues. 
Overall, we were able to implement a full syntax checker and an OWL DL reasoner in 3-4 months. 
In this process, we have found the test cases very useful as they covered all the different syntax cases but it was still easy enough for us to find the bugs in our reasoning algorithms. 
Regards, Evren 
