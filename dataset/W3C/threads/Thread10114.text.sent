we have been testing/finding that :road :repair "P1Y2M3DT10H30M"^^xsd:duration . 
:testcase :made "2002-11-16T01:41:00+01:00"^^xsd:dateTime . 
:john :birthday "1956-01-10"^^xsd:date . 
:jenny :age "10"^^xsd:decimal . 
RDFS/XSD entails :road :repair "P14M3DT10H30M"^^xsd:duration . 
:testcase :made "2002-11-16T00:41:00Z"^^xsd:dateTime . 
:john :birthday "1956-01-10T+02:00"^^xsd:date . 
:jenny :age "1E1"^^xsd:decimal . 
Jan/Dave is this useful as a testcase? 
we also have been testing/finding that nothing RDFS/XSD/MATH entails "10.1"^^xsd:decimal math:greaterThan "8.4"^^xsd:decimal . 
"P1Y2M"^^xsd:duration math:notGreaterThan "P14MT10H"^^xsd:duration . 
"01:41:00+01:00"^^xsd:time math:lessThan "05:41:00Z"^^xsd:time . 
"1956-01-10"^^xsd:date math:notLessThan "1956-01-10"^^xsd:date . 
"10"^^xsd:int math:equalTo "010"^^xsd:int . 
"10"^^xsd:string math:notEqualTo "010"^^xsd:string . 
but this is not yet proposed as a testcase Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/ 
Could I suggest 4 test cases, one for each triple. 
For a developer implementing XSD being able to see progress: on Monday they do decimals (1/4), Tuesday they do dates (2/4), Wednesday they do dateTime (3/4), Thursday they do duration (4/4), and Friday they have a party! 
Jeremy Very useful. 
Good stuff, Jos! jan grant, ILRT, University of Bristol. 
http://www.ilrt.bris.ac.uk/ "My army boots contain everything not in them." - Russell's pair o' Docs. 
I now think that :john :birthday "1956-01-10"^^xsd:date . 
RDFS/XSD entails :john :birthday "1956-01-10T+02:00"^^xsd:date . is wrong in http://www.w3.org/TR/xmlschema-2/ we can see that If the time zone is included, both hours and minutes must be present. 
Since the lexical representation allows an optional time zone indicator, date values are partially ordered because it may not be possible to unequivocally determine the order of two values one of which has a time zone and the other does not. 
If date values are considered as periods of time, the order relation on date values is the order relation on their starting instants. 
This is discussed in Order relation on dateTime (?3.2.7.3). 
See also Adding durations to dateTimes (?E). 
Pairs of date values with or without time zone indicators are totally ordered. 
I was believing the entailment because Xerces's new DateDatatypeValidator().compare(s1, s2) gives equal, but I now see that .NET using System.Xml 
DateTime.Compare(XmlConvert.ToDateTime(s1), XmlConvert.ToDateTime(s2)) does't give equal Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/ 
Oooh, does it?? 
That is, where did those IEXT(I(math:whatevers)) get their semantic restrictions from? 
Can a datatype impose some extra semantic conditions on some *properties* as well as on the datatyped literals ?? That's a more generous notion of datatype than we have been considering up to now. . 
I didn't put anything like that in the MT, but maybe I should have done. 
In fact I like this idea. 
Where are the math: thingies defined? 
(URI??) Pat IHMC(850)434 8903 home 40 South Alcaniz St.(850)202 4416 office FL 32501 (850)291 0667 cell phayes@ai.uwf.edu http://www.coginst.uwf.edu/~phayes s.pam@ai.uwf.edu for spam right and this is just exploring possibilities... right now at or if you prefer to read it in n3 at I have very good experience with those e.g. for graphs descibing reasonably complex geometric model entailments Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/ 
