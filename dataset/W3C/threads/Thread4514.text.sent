What is the rationale for supporting functionality beyond the Infoset: e.g. documents with empty content, with multiple element children, etc ? 
As Michael Kay has said, backward compatibility concerns should mean that removing this functionality is not even under consideration, however this feature is not only there for backward compatibility. 
It is a useful (and much used) feature. 
There is a requirement on XSLT (and any reasonable XML transformation language) to be able to construct external parsed entities as well as complete documents. 
Xpath models these using the same model of a root node (Xpath 1) (Document node in Xpath 2) but without the constraint that there need be exactly one element child, and it similarly merges concepts of an xml declaration on a document and a text declaration on an external parsed entity, and models them both in the same way ie, doesn't model them at all in the data model and generates them based on the same parameters to the serialisation. 
David This e-mail has been scanned for all viruses by Star Internet. 
The service is powered by MessageLabs. 
For more information on a proactive anti-virus service working around the clock, around the globe, visit: David, I am not sure I understand your answer. 
Please let me concentrate on the issue that I think will cause more trouble for the future: relaxing the constraints associated with the document node. 
According to this point I only see backwards compatibility issues, not real requirements (XSLT could very easily enforce that documents nodes have to obey Infoset rules). 
With this respect we are in a dilemma: we are either backwards compatibility with XSLT 1.0 or in compatibility with XML itself and Infoset. 
We did choose XSLT 1.0 and ignored XML itself and Infoset. 
That's a strange choice, with unfortunate long term consequences. 
Best regards, Dana Only by rewriting history, and removing one of the design requirements that went into the design of the language, and a functionality that has been used by many users since the language was released. 
Not at all. 
The grammar and definition of an external parsed entity is defined in the XML REC and is (unlike the infoset) a core feature of the XML recommendation. 
The infoset chose only to represent complete documents, That is their choice but that came some years after XSLT. 
The fact that they made that choice (which may well be reasonable in the context of the infoset) can have no bearing on the model used for Xpath. 
XSLT was designed to be able to generate external entities and that's what it is used for. 
Already with Xpath 2, W3C is in danger of losing all credability as a standards body as backwards compatibility has clearly been given such little importance. 
As far as I have seen (after several threads on xsl-list) xpath2 is already so unpopular amongst existing Xpath/xslt implementors that the majority are not planning on implementing xslt2 at all. 
At this stage in the process for XSLT1 there were several available implementations that could be tested and allow comments on the language features. 
Don't you find it worrying that currently there is only one XSLT 2 implementation publicly advertised? 
The working group should be striving to remove many of the more glaring incompatibilities and usability problems, not considering adding more. 
David 
