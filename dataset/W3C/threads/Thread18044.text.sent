The DOM WG reviewed that part of the UA Guidelines that affects the DOM, and does not consider changes to be necessary. 
regards, Lauren Wood, DOM WG Chair. 
aloha, lauren! 
have you seen h?kon's comments on the DOM in his review of the UAGL? 
[1] quote 5.6 Conform to W3C Document Object Model specifications and export interfaces defined by those specifications. 
[Priority 1] Adding support for DOM effectively turns a browser into an editor. 
This is often beneficial, but in memory-constrained enviroments it is often impossible. 
By making this Priority 1, a whole segment of UAs will fail conformance and might therefore pay less attention to the Guidelines in general. 
I suggest changing it to Priority 2 and limit the requirement fo the read (i.e. not write) portions of the DOM. 
I suggest changing all sections in Guidline 5 to reflect this. 
unquote what do you think? 
gregory. 
References 1. http://lists.w3.org/Archives/Public/w3c-wai-ua/1999OctDec/0529.html 
He that lives on Hope, dies farting -- Benjamin Franklin, Poor Richard's Almanack, 1763 Gregory J. Rosmaita unagi69@concentric.net 
WebMaster and Minister of Propaganda, VICUG NYC 5.6 Conform to W3C Document Object Model specifications and export interfaces defined by those specifications. 
[Priority 1] It depends on why you say that UAs should implement the DOM. 
Since I think that you could use the DOM to implement 5.1, 5.3 and 5.5, which are all Priority 1, it would seem to follow that at least some parts of the DOM should be Priority 1. 
If the UA is a readonly tool, then obviously read-write parts of the DOM are inapplicable, but could be used for "writing" parts of a document to, e.g., a screen-reader. 
However, if you don't see the DOM as being a way to implement other guidelines, but as something else entirely, then the priority should depend on what use cases you have for using the DOM at all. 
Lauren 
