I was wondering if someone could comment on the relationship of the current DOM API and the XPointer spec. 
I was sort of expecting that the DOM, in particular its ECMA script bindings, would include accessor methods like an_element.child(2, "foo"), etc. 
Was this not done because A) not enough time B) it doesn't belong in level 1 C) the XPointer api sucks D) the XPointer api is expected to change E) other? 
Thanks ted 
It must be possible to implement XPointers on top of the DOM. 
That does not mean that the DOM has to provide an XPointer API. 
And certainly not in Level 1! 
Personally, I might prefer to have a function that executes an entire XPointer - I see no point to having the ECMA masquerade as XPointers when XPointer notation can do that itself. 
If I were to implement something like this, I might prefer something like this: this_node=that_node.traverse("child(3,DIV1).child(4,DIV2).child(29,P)"); 
The Java or ECMA script code need not mimic the structure of the XPointer syntax, it can just use it as a parameter. 
But we're not working on that. 
We've been working on other things. 
XPointer is a lower priority than the things we've managed to finish so far. 
Jonathan jonathan@texcel.no 
Texcel Research 
That would, in my opinion, be a disastrous mistake. 
There is no need to require the DOM to include a parser and interpretor for the clumsy XPointer notation -- or any other notation, for that matter. 
Surely that's a language issue. 
On the other hand, one could reasonably expect that it would be possible to implement XPointer on top of the DOM, and that the Node interface could easily be extended to include all of the XPointer navigation operations. 
Certainly the syntax of XPointer notation is easily mapped (mainly with the addition of string quotes) into Java or ECMA. 
If that turns out not to be the case (i.e. if the DOM is, for whatever reason, insufficient to implement XPointer on top of), that would in my opinion indicate a serious deficiency in the DOM. 
Has anyone checked recently to ensure that all of XPointer is supported? 
Stephen R. Savitzky Chief Software Scientist, Ricoh Silicon Valley, Inc., steve@rsv.ricoh.com 
California Research Center home: steve@starport.com 
URL: http://www.starport.com/people/steve/ 
Although it's not part of the current level of DOM standard draft, look at the XPointer implementation in IBM's XML for Java. 
There is enough usable API there to whet your appetit. 
-- Dave 
Taken out of context, this looks like my message was suggesting that this is something the DOM should do. 
That's not at all what I meant to say. 
What matters is that it should be possible to implement things like this on top of the DOM. 
Jonathan jonathan@texcel.no 
Texcel Research 
One of the general requirements for the DOM is that it be possible to implement XPointers on top of it. 
XPointers are still being developed, so the final form may differ from the current public WD. 
If we need to add something to the DOM to make it possible to implement the final version of XPointers, we will do so. 
So, the answer to the original email is B) not in Level 1. Lauren 
