Hi, First off, apologies if this has been discussed ad nauseum on this list. 
I've no idea where the archives are kept. 
If you can point me there I'll gladly shut up and do my homework. 
I've been trying to come up with a more elegant way of presenting screen reader only links than using the anchored1px transparent gif with alt text trick, which works but strikes me as an ugly hack. 
What I want to do is use a style sheet to accomplish something like this. 
.speechlinks { display: none } Now, I know that this means that anything .speechlinks 
should be hidden 
from all user agents. 
However, I'm wondering if overiding like so, @media aural { .speechlinks 
{ display: block; } } would be effective and proper. 
Right now I can tell you that Home Page Reader 
pays attention to the first rule but ignores the rule in @media aural. 
Haven't tested this in my JAWS demo yet but I'm assuming from past experience that JAWS just ignores my stylesheets anyway. 
Is this a technique whose time has not yet come? 
Or should I be waving garlic, holy water and crosses at pages that try it? 
Thanks, Seth 
I've no idea where the archives are kept. 
(And the WAI IG home page is http://www.w3.org/WAI/IG/ ) 
I think we all share that feeling, and we've discussed some technical drawbacks too, e.g., the alt text is real text to several search engines. 
But there's hardly anything essentially better that we could do, except complete reorganization (put navigation onto a separate page, and you'll need just one navigational link; or put navigation at the bottom of the page, optionally with a link to it at the start of a page). 
I'm afraid we can't realistically expect that to work now or in the near future. 
Even if we got modern user agents that actually implement aural style sheets, there would be lots of people still using older software - including even arrangements like Lynx plus a speech synthesizer that uses Lynx output as its input. 
Jukka Korpela TIEKE Tietoyhteiskunnan kehitt?miskeskus 
ry Finnish Information Society Development Centre Salomonkatu 17 A, 10th floor, FIN - 00100 HELSINKI, FINLAND 
[Don't stop asking questions here. 
But for the times when you want to search the archives first, consider 
There are still going to be problems with implementation of the logic in the style implementations. 
But there is a prior problem. 
Your statement of the page functionality you are trying for is backwards. 
You can simplify the stylesheet logic and clean up your functionality at the same time. 
The idea of "speech-only links" is ethically repugnant. 
What lies are you telling the speech user that you are unwilling to have someone else be told? 
Under the current draft User Agent Guidelines [Guideline 2, particularly Checkpoint 2.3] this content has to be discoverable by any user whether you thought they would want it or not. 
Think in terms of "screen-only hiding" instead, as an optional optimization, and you will get the stylesheet logic right and understand the authoring groundrules for these links. 
These links are to be valid, but OK to hide under some circumstances. 
Not _only applicable_ under some circumstances. 
You want 
@media screen ... display: none not @media aural ... display: some This is the logic for fail-soft design. 
The content is valid content and the hiding is a hint, a situation-specific default optimization. 
Then you're OK. Al 
Harsh language Al, and I think you are wrong here, though I'm willing to be 
convinced otherwise. 
First, I'm not telling any lies. 
I'm attempting--key 
word, attempting--to provide some navigation shortcuts to non-sighted visitors who use some form of screen reading technology. 
The visually hidden links are not necessary or useful to most of the sighted. 
In this particular 
case I'm trying to make the navigation through a crowded three column collapsed table as easy for a blind person as a sighted person. 
Take a look and have at me again if you like: http://www.joneslibrary.org 
N.B. 
Off list I've been rightly taken to task because my coding so far does nothing for people who can see but not use a mouse! 
Sorry, you've completely lost me here. 
Thanks, Seth 
Let me try to tone down the invective a bit then. 
As you clearly don't get the distinction I was drawing between speech-*only* and speech-mostly links. 
You know you want the supplemental within-the-page navigation links to be available to screen reader users using audio output. 
This is very good. 
You know you want them to be hidden in the default presentation. 
This is good. 
The difference comes in the handling of the users who fall outside the above two cases. 
I agree. 
Those navigation links are not lies. 
There is no functional reason to hide them, just cosmetics and efficiency under circumstances where they are not needed. 
Are we tracking now? 
My issue concerns those who are in neither of the above groups. 
Note you had to fudge with 'most of.' And aural styles only get to some of the screen reader users, not all. 
The links will be useful, be better displayed than hidden, for people using a large enough screen magnification, possibly any screen magnification which makes a single column bigger than the screen. 
These are people using screen magnifiers who don't have screen readers. 
The extra navigation links are useful for anyone processing a linearized view; certainly in Lynx and possibly on a mobile phone. 
The issues is whether you see the full table layout at a glance or have to navigate a lot to reach all its parts. 
Not specifically whether the output is in audio or visual or tactile display. 
Technically, the styling you suggested would block the user with a screen reader and a braille display that is recognized by the style processor. 
These users might wish the additional navigation as well. 
Although a monospaced-font table layout might work in this context without the extra navigation links. 
I don't know. 
The question is what to have happen when the CSS implementation is incomplete or non-existent. 
In this case you want to err on the side of having the extra links show, probably, if indeed the difficulties caused by having them show sometimes when they are not needed is less than the difficulties caused by having them not show when they are needed. 
Where in your original post, you had: 
Consider simply using @media screen { .speechlinks 
{ display: none } } What this does is to default the links to _show_ rather than _hide_ for media other than screen, as opposed to showing only in aural view. 
This will likely help the user on a mobile phone deal with the material, too. 
Note that there is a new technology that is seeking to let you slice the show/hide rule even finer, called media queries in CSS3 which is under development. 
This would let you check how many characters fit across the screen and turn the supplemental nav links on if the table is more than, say, two screens wide. 
HTH Al Media queries 
