An Experimental Implementation of SimpleMD5 Simpmd5 is a server side implementation of the proposed SimpleMD5 authentication method for HTTP. 
The current specification for the proposal can be found at This specification describes an addition to the HTTP protocol to allow authentication in a way that does not send passwords over the network unencrypted. 
It is intended as a replacement for Basic authentication. 
At present no publically available clients support it. 
The SimpleMD5 protocol has several important advantages in addition to transmitting only encrypted passwords. 
1. 
It is simple, maybe even easier to implement than Basic authentication. 
2. It is very limited in its goals. 
It has no connection with any of the competing security protocols (Shen, S-HTTP, SSL). 
This means clients can introduce it as a replacement for Basic authentication only. 
No commitment to one of the security protocols is implied and it is not necessary to wait for security standards to emerge before implementing it. 
3. It is flexible. 
It allows for added features in the server (see below for examples). 
Simpmd5 is an experimental implementation of SimpleMD5 intended for use as an authentication module with the WN http server (see program in which case it will do two things: a) generate a server SimpleMD5 request for authentication or b) consult the enviroment variable HTTP_AUTHORIZATION, parse a client Authorization line there, consult a password file and return a string indicating acceptance or rejection. 
This implementation has two interesting features which are not part of the specification but are made possible by the flexibility of the proposed method. 
1. Timestamps: The maintainer can set the time period for which authentication granted the client is valid. 
After this time period the client will have to re-authenticate. 
The time period can be set to any number of seconds (or be unlimited) and is accurate to within 1% of the specified value. 
The timestamp is encoded in the "opaque" header field (see the specification). 
2. IP address stamps: The IP address (or the IP address of the client's proxy) is encoded in the "opaque" header field. 
This means that a replay attack would have to spoof the server with a false IP address. 
The simpmd5 program is written in C and the source code is available freely for any use. 
You can obtain it from John Franks john@math.nwu.edu 
The Shen/S-HTTP system also uses timestamps. 
These have the difficulty of clock synchronisation but remove the problem of keeping track of challenge /response pairs which is a problem if the connection cannot be kept open. 
This is especially a problem through gateways. 
How is the IP address of the proxy known? 
Using the IP address is very unsatisfactory since it adds little real security but a lot of inconvenience. 
Also I really don't like having a system that only authenticates the fact that a transaction has been authorised but does not authenticate which particular transaction is authorised. 
Extension of the system to perform a digest of the message header itself is very simple. 
It protects against man-in-the-middle attacks which is very important when using proxies. 
This extension can be achieved in a manner that is very simple and compatible with the S-http scheme. 
Thus implementors only have one scheme to worry about. 
I'm also very against discussing this in the http forum and not the security one. 
A lot of work has gone into unifying the security schemes proposed last year. 
It has always been my beief that they are part of the main HTTP spec. 
In this respect the name S-HTTP is probably misleading. 
Considering the potential problems with turf wars vis a vis various IETF parties we should be very clear that we ensure that security matters are raised on www-security-request@ns1.rutgers.edu. 
They might also be sent to other lists but they MUST definitely be seen in the security list. 
I get over 200 messages a day. 
I don't read all of them. 
The security list is one I do read, as do those doing security work. 
The bottom line is that with the minimal Digest scheme proposed a secure communication can be set up between a browser and a security enhancment proxy. 
I do not bleive that the simpleMD5 scheme offers this level of security unless the actual transaction itself is authenticated. 
Doing this makes the SimpleMD5 scheme effectively the same as the digest scheme. 
In other words the SimpleMD5 scheme is not a security `enhancement', it is a weakening of a scheme already proposed and implemented. 
:-( Moreover this is precisely the point Alan and myself raised against the original SSL scheme at the W3C security meeting. 
One other point, before the unification of Shen/S-HTTP proposals started Shen used the actual header itself for the authentication. 
This was discovered not to work with some proxies that reorganised the header lines :-( so I adopted the S-HTTP approach of having an encapsulated header, MIME style. 
Note however that full S-HTTP mucking arroung with ASN.1 encapsulation is not required! 
The digest scheme specs are avaliable from:- Phill Hallam-Baker 
When I posted the availability of an experimental implementation of SimpleMD5 authentication I neglected to mention that I am running a test version on my server. 
Those of you implementing SimpleMD5 in clients are welcome to test your clients at with the sample username/password pair that is in the SimpleMD5 specification from Spyglass. 
The source for my implementation is freely available for any use at I might also take this opportunity to respond to the criticism of SimpleMD5 posted here by Phil Hallam-Baker. 
As I understand it Phil's criticisms are 1) SimpleMD5 is not as secure as SHTTP, and 2) SimpleMD% is not a subset of SHTTP. 
Both of these are quite true. 
It is also true that SimpleMD5 is not as secure as SSL and not compatibile with it. 
But this really misses the point of SimpleMD5. 
In the fullness of time I hope and expect that security standards will emerge for HTTP and that they will subsequently be implemented in most browsers and servers. 
However, in the meantime Basic authentication, which transmits passwords essentially in the clear, is in widespread use. 
The point of the Spyglass proposal for SimpleMD5 is as a stop-gap measure to replace Basic authentication. 
It is nearly identical to Basic authentication except that passwords are encrypted. 
Of course security can be done better -- and presumably the security working group is doing precisely that. 
But in the meantime it is definitely worth quickly replacing Basic authentication. 
The changes required in the protocol are absolutely minimal. 
There need to be extra fields in one of the existing authentication header lines from the server and one from the client. 
Implementation for clients should actually be easier than Basic authentication. 
Implementation for the server is not at all difficult. 
One suggestion of Hallam-Baker I think is a very good one and I hope it will be considered before the SimpleMD5 specification is finalized. 
That is to authenticate the specific transaction rather than just all transactions within a realm. 
In practice this means requiring the client to encrypt the URI requested along with the "nonce" and user password. 
The added security is probably marginal but still worthwhile since it is trivial to implement. 
John Franks 
Proposals:- 1) We authenticate the message body 2) All things being equal we make it as compatible with S-HTTP as possible 3) The discussion of a security scheme for the Web take place on the mailing list the IETF has been told is the official forum for such schemes. 
4) We get something out fast enough that it can be included in HTTP/1.1 
In this connection, the www-security list may be the correct forum to talk about the security aspects. 
It seems to me that it would 
help to also spell out to the HTTP list what basic set of headers need to be used to negotate the use of this scheme and maintain upward compatibility with S-HTTP. 
Discussion may have started on the HTTP list because of its readership or because it has been more active lately... Albert Lunde Albert-Lunde@nwu.edu 
Oh all right! 
:-) Readers of www-security: 
A discussion of a new authentication scheme for HTTP has broken out. 
We here at Spyglass have proposed a digest scheme based on MD5. 
You may peruse our ideas at: 
SimpleMD5 has been implemented in our client and in 2 servers, and works nicely as specified. 
Philip Hallam-Baker does not share our enthusiasm for our proposal, and has suggested something totally distinct but similar, the details of which are at: The Digest scheme has apparently also been implemented, as the code for it is available linked to the above page. 
Philip apparently recently posted the following list of priorities, all of which I agree with: 
1) We authenticate the message body 2) All things being equal we make it as compatible with S-HTTP as possible 3) The discussion of a security scheme for the Web take place on the mailing list the IETF has been told is the official forum for such schemes. 
4) We get something out fast enough that it can be included in HTTP/1.1 
and, giving the horse yet another kick, I add 5) Make the scheme as SIMPLE as possible, leaving the meatier issues to S-HTTP discussions. 
There is every reason to move toward consensus. 
Perhaps, through discussion with the readers of www-security, we can locate the appopriate blend of Philip's ideas and ours? 
Eric W. Sink eric@spyglass.com 
This address is not complete. 
I did get to the www.rutgers.edu 
homepage, but havent been able to find the techreport section. 
thanks, 
drex datkins@unm.edu"Into the Backing" CIRT-ACS University of New Mexico 
this should be http://www.spyglass.com/techreport/simple_aa.txt jeff 
