HTML and DOM stickers: Please CC me on any replies. 1) Frames In the HTML specs, it says that the src attribute should be the original content of the frame, but it doesn't say whether you are allowed to dynamically update it. 
If you aren't officially allowed to dynamically update it, then it is an error with the standard, otherwise it is an error with the documentation. 
You should be allowed to update frames in DOM and if that isn't the intent of the DOM standard, then it needs to be added. 
Is there any errata on this? 
Bubbling of events from Frames - I don't see anything about how events should be bubbled from frames. 
For security reasons they shouldn't bubble from documents inside the frame, but should bubble from the frame itself - such as a reload. 
2) favicon.ico 
Please say something about favicon - like the favicon.ico 
method is against the standard. 
Mozilla is adding support for it and is also going to try to move people over to the link rel="icon" method with evangelism allowing any image format (including .ico). 
Favicon creates unnecessary spam in server logs. 
Do You Yahoo!? Get your free @yahoo.com 
address at http://mail.yahoo.com 
For user experience, the link method is good enough. 
No need to spam all servers with favicon.ico 
requests. 
/Jonas But at the same time favicon enhances user's browsing expereince. 
When you see favicon in bookmark or in location bar, you can understand better what is this site about (in case when icon is goog, of course) As about server logs - you can store data in database (and auto-exclude hits for FavIcon) or do not look at server logs at all. 
Vadim Plessky 33 Window Decorations and 6 Widget Styles for KDE KDE mini-Themes Yes - but that takes extra work for something that shouldn't have been done in the first place. 
Also, not every server admin will know how or want to do that. 
What is so hard about adding a link rel="shortcut icon" to the page? 
If you want it on all pages then add a server-side include or auto-insert. 
| HTML and DOM stickers: | Please CC me on any replies. 
| 2) favicon.ico 
| Please say something about favicon - like the favicon.ico 
method is | against the standard. 
Mozilla is adding support for it and is also going | to try to move people over to the link rel="icon" method with | evangelism allowing any image format (including .ico). 
Favicon creates | unnecessary spam in server logs. 
But at the same time favicon enhances user's browsing expereince. 
When you see favicon in bookmark or in location bar, you can understand better what is this site about (in case when icon is goog, of course) As about server logs - you can store data in database (and auto-exclude hits for FavIcon) or do not look at server logs at all. 
Vadim Plessky 33 Window Decorations and 6 Widget Styles for KDE KDE mini-Themes Do You Yahoo!? Get your free @yahoo.com 
address at http://mail.yahoo.com 
This (favicon.ico) is way off topic for both the www-dom or www-html mailing lists, it's not against any standards, how browsers deal with icons has nothing to do with any standard, especiall not any W3C standards. 
Again, off topic. 
jst ok, but as discussion thread is continuing already for the 3rd day, we should "fix" the list where this thread should go. 
Let me give you my opinion on this [favicon]. 
I think this question is somewhat related to "scrollbars" discussion which happened on www-style list some time ago. 
It was touching more fundamental question: *How User Interface should be defined (scripted, controlled) on user's computer/OS*? 
CSS3 has User Interface module, which is in my opinion is quite interesting (and promising) but needs enhancement. 
If we, say, agreed, that User Interface semantics should be defined in _XML_, and styled later in _CSS_ - than answer is clear, further discussion of "favicon" should go to www-style list. 
BTW it's pretty much inline with the way Bookmarks are defined in Konqueror and Mozilla (using XML - XBEL , IIRC). 
Each bookmark has "favicon" stored in browser's cache - on "per page" basis. 
This favicon is displayed (in KDE/Konqueror): 1) in Window Title bar - as Winodw's Menu opener button 2) in Konqueror's Location bar -- so typing in some URL you automatically get Favicon of that site and can see wether you launched right site or not. 
3) in Kicker (Panel) on bottom/top of the screen - next to window's/application name as you see, one icon is displayd in 3 different places. 
So it seems to me as really "presentational" issue, so it should (and can) be defined via CSS. 
I guess we need either to extend User Interface module further (to support Scrollbars, Titlebars, window's menues, etc.) or add new module to CSS3, let's call it Desktop module. 
Than you can create some element on Desktop via DOM method (createElement), and apply some style to it using scripting and/or CSS. 
like: JS code // get list of open browser's windows brs = desktop.getElementsByAppName("browser"); 
w = brs[0].window; 
// window element of first open Browser window // get TitleBar of that window tb = w.getElementById("titleBar"); mbut = tb.getElementById("menuButton"); if (mbut.style.visibility="visible") 
// if menuButton is visible (enabled) on titleBar // add Favicon to it mbut.style.background="url('myfavicon.png')" 
So you can easily add Aureal icons/notifications in such cases as well. 
What's also interesting - there is no need to transfer images (GIF, PNG) as FavIcon - you can define some piece of XML with CSS formatting, or put SVG picture inside. 
Sound like very cool technology :-) Vadim Plessky 33 Window Decorations and 6 Widget Styles for KDE KDE mini-Themes For security reasons, it is important not to let the user access the URI of the other document. 
src is not dynamically updated and we don't plan to add a new attribute for that effect. 
Please, let us know if you are (or are not) satisfy with this decision, Philippe, for the DOM WG. Benjamin D. Gray: The URI of the document within the frame is not readable by the document outside the frame. 
Phillipe: at least the document outside the frame should have some way of knowing that the frame's URI was change. 
I don't know if this is currently in the standard or not. 
I don't see how this is a huge security risk. 
Any information that should be secured (passwords, etc) shouldn't be put in the URI of a document. 
As for passwords to servers, such as ftp://user:pass@blah, the user agent can strip the user:pass part of the URI. 
I could see many uses for this ability. 
For instance... 
An embedding application could show information like stocks, etc while you are browsing. 
A web page could do the same thing in a frame while you are browsing in another frame. 
It could then show in a textarea where you are and you could even enter new URIs in the textarea and press Go, etc. 
If you think it's too much of a security risk to be able to do this, then what about being able to use the src attribute of the frame indirectly, such as copying it to a textarea, etc - but not being able to record it? 
When you write to the textarea, the textarea could be marked as no longer readable by the page until its cleared. 
Of Philippe Le Hegaret original in For security reasons, it is important not to let the user access the URI of the other document. 
src is not dynamically updated and we don't plan to add a new attribute for that effect. 
Please, let us know if you are (or are not) satisfy with this decision, Philippe, for the DOM WG. Do You Yahoo!? Get your free @yahoo.com 
address at http://mail.yahoo.com 
