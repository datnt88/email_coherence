(S1 (INTJ (INTJ (UH Hello)) (, ,)))
(S1 (S (NP (PRP I)) (VP (AUX have) (NP (NP (DT a) (NN question)) (PP (IN about) (NP (NP (DT the) (NNP CSSPrimitiveValue) (POS 's)) (NN setStringValue)))) (-LRB- -LRB-) (-RRB- -RRB-) (NP (NN method)) (PP (IN in)))))
(S1 (S (NP (DT the) (JJ current) (NNS DOM2)) (VP (VBP specification)) (. .)))
(S1 (S (NP (DT The) (NN specification)) (VP (VBZ states) (SBAR (IN that) (S (NP (DT an) (NNP INVALID_ACCESS_ERR) (NN exception)) (VP (AUX is) (S (VP (TO to) (VP (AUX be) (VP (VBN raised) (SBAR (SBAR (IN if) (S (NP (DT the) (JJ CSS) (NN value)) (VP (AUX does) (RB n't) (VP (VB contain) (NP (DT a) (NN string) (NN value)))))) (CC or) (SBAR (IN if) (S (NP (DT the) (NN string) (NN value)) (VP (MD can) (RB n't) (VP (AUX be) (VP (VBN converted) (PP (IN into) (NP (DT the) (VBN specified) (NN unit))))))))))))))))) (. .)))
(S1 (SQ (MD Should) (NP (DT this)) (ADVP (RB also)) (VP (VB say) (SBAR (IN that) (S (NP (PRP it)) (VP (MD will) (VP (AUX be) (VP (VBN raised) (SBAR (IN if) (S (NP (DT the) (VBN attached) (NN property)) (VP (AUX does) (RB n't) (VP (VB support) (NP (NP (DT the) (NN string) (NN value)) (CC or) (NP (DT the) (NN unit) (NN type))))))))))))) (. ?)))
(S1 (S (ADVP (RB Also)) (, ,) (NP (WP what)) (VP (AUX is) (VP (VBN expected) (S (VP (TO to) (VP (VB occur) (PP (IN with) (NP (NP (NNP CSSPrimitiveValue) (POS 's)) (NN getPrimitiveType))) (NP (NP (-LRB- -LRB-) (-RRB- -RRB-) (NN method)) (PP (IN in) (NP (DT the) (VBG following) (NN case))))))))) (. ?)))
(S1 (S (VP (VB Assume) (SBAR (S (NP (PRP I)) (VP (AUX have) (NP (DT a) (JJ CSSPrimitiveValue) (VBN named) ('' ') (NN primitiveValue) ('' ')))))) (. .)))
(S1 (S (ADVP (RB Also)) (, ,) (VP (VB assume) (SBAR (IN that) (S (NP (NP (NN primitiveValue) (POS 's)) (VBN attached) (NN property)) (VP (MD can) (VP (VB contain) (NP (NP (NNS CSSValues)) (PP (IN of) (NP (NN type))) (ADJP (JJ CSS_VALUE_LIST) (CC and) (JJ CSS_PRIMITIVE_VALUE)))))))) (. .)))
(S1 (SBARQ (WHNP (WP What)) (SQ (VP (VBZ happens) (PP (IN in) (NP (DT the) (JJ following) (NN situation))))) (. ?)))
(S1 (S (NP (NP (NNP value.setCssText)) (PRN (-LRB- -LRB-) (`` ``) (NP (DT a) (, ,) (ADJP (JJ valid)) (, ,) (NN list)) ('' '') (-RRB- -RRB-))) (VP (VBZ //) (NP (NP (DT no) (NN exception)) (VP (VBN raised) (PP (VBG according) (PP (TO to) (NP (JJ current) (NN specification))))))) (. .)))
(S1 (NP (NP (NNP value.getPrimitiveType)) (-LRB- -LRB-) (-RRB- -RRB-)))
(S1 (S (NP (NNP ==)) (VP (VBZ ????)) (. .)))
(S1 (S (NP (DT A) (JJ similar) (NN example)) (VP (MD can) (VP (AUX be) (VP (VBN given) (PP (IN for) (NP (NP (NNS CSSValues)) (PP (IN of) (NP (NN type))) (ADJP (JJ CSS_VALUE_LIST) (CC and) (JJ CSS_CUSTOM))))))) (. .)))
(S1 (NP (NP (NNS Thanks)) (PP (IN for) (NP (NP (DT the) (NN clarification)) (, ,) (NP (NNP Blaine) (NNP Brodie))))))
(S1 (FRAG (PP (IN in))))
(S1 (S (NP (PRP I)) (VP (VBD noticed) (SBAR (IN that) (S (PP (ADVP (RB further)) (IN up) (NP (NP (DT the) (NN method) (POS 's)) (NN description))) (, ,) (NP (DT this) (JJ previous)) (VP (AUX is) (VP (VBN stated) (, ,) (SBAR (IN so) (S (INTJ (UH please)) (VP (VBP ignore) (NP (DT the) (JJ previous) (NN question)))))))))) (. .)))
(S1 (S (NP (PRP I)) (VP (AUX do) (, ,) (ADVP (RB however)) (, ,) (VP (AUX have) (NP (NP (DT another) (NN question)) (PP (IN about) (NP (NN setStringValue)))) (-LRB- -LRB-) (-RRB- -RRB-))) (. .)))
(S1 (SBARQ (WHNP (WHNP (WDT Which)) (PP (IN of) (NP (DT the) (NN following)))) (SQ (VP (AUX is) (NP (NP (DT the) (JJ correct) (NN way)) (SBAR (S (VP (TO to) (VP (VB use) (NP (NN setStringValue)) (PP (IN in) (NP (DT the) (VBG following) (NNS cases)))))))))) (. ?)))
(S1 (NP (NP (NNP setStringValue)) (PRN (-LRB- -LRB-) (NP (NP (NNP CSS_STRING)) (, ,) (`` ``) (S (VP (VBG \) (`` ``) (NP (DT this) (NN way\)) ('' ''))) ('' '')) (-RRB- -RRB-)) (: ;) (CC or) (NP (NP (NN setStringValue)) (PRN (-LRB- -LRB-) (NP (NNP CSS_STRING)) (, ,) (NP (`` ``) (NP (DT this) (NN way)) ('' '')) (-RRB- -RRB-)) (: ;) (NP (NP (NN setStringValue)) (PRN (-LRB- -LRB-) (NP (NNP CSS_URL)) (, ,) (`` ``) (NP (NP (NP (NN url)) (PRN (-LRB- -LRB-) (INTJ (UH ###)) (-RRB- -RRB-) ('' '') (-RRB- -RRB-))) (: ;) (CC or) (NP (NN setStringValue))) (-LRB- -LRB-) (NP (NNP CSS_URL)) (, ,) ('' '') (ADJP (JJ ###)) ('' '') (-RRB- -RRB-))) (: ;))))
(S1 (S (NP (NP (NNP primitiveValue.setCssText)) (PRN (-LRB- -LRB-) (`` ``) (NP (DT a) (, ,) (ADJP (JJ valid)) (, ,) (NN list)) ('' '') (-RRB- -RRB-))) (VP (VBZ //) (NP (NP (DT no) (NN exception)) (VP (VBN raised) (PP (VBG according) (PP (TO to) (NP (JJ //) (JJ current) (NN specification))))))) (. .)))
(S1 (S (NP (NNP primitiveValue.getValueType)) (-LRB- -LRB-) (-RRB- -RRB-) (: ;) (VP (VBZ //))))
(S1 (S (S (ADVP (RB now)) (VP (VBZ returns) (NP (JJ CSS_VALUE_LIST) (NN primitiveValue.getPrimitiveType)))) (-LRB- -LRB-) (-RRB- -RRB-)))
(S1 (S (NP (CD ==) (RB ????) (. .) (NN ^^^Sorry)) (VP (VBD added) (NP (DT some) (NN information)) (SBAR (IN that) (S (NP (PRP I)) (VP (VBD forgot) (ADVP (RB about)) (PP (IN in) (NP (PRP$ my) (JJ previous) (NN post))))))) (. .)))
(S1 (NP (NNP Blaine)))
(S1 (S (S (NP (PRP$ Our) (NN intent)) (VP (AUX is) (S (VP (TO to) (VP (AUX have) (NP (: :) (NP (NP (NN setStringValue)) (PRN (-LRB- -LRB-) (VBG CSS_STRING) (, ,) (`` ``) (NP (DT this) (NN way)) ('' '') (-RRB- -RRB-))) (: ;) (CC and) (NP (NP (NN setStringValue)) (PRN (-LRB- -LRB-) (ADJP (NNP CSS_URI) (, ,) ('' '') (JJ ###)) ('' '') (-RRB- -RRB-))))))))) (: ;) (S (NP (NP (DT The) (NN return) (NN value)) (PP (IN of) (NP (NN getStringValue)))) (VP (AUX does) (RB n't) (VP (AUX need) (S (VP (TO to) (VP (AUX be) (VP (VBN parsed)))))))) (. .)))
(S1 (S (NP (DT This) (NN case)) (VP (VP (VBZ appears) (PP (IN on) (NP (NP (NNS properties) (POS ')) (JJ border-spacing) ('' ') (, ,) ('' ') (NP (NP (NNS quotes) (POS ')) (, ,) ('' ') (NP (NN play-during) (POS ')) (, ,) ('' ') (NP (NN counter-increment) (POS ')) (, ,) ('' ') (NP (NN counter-reset) (POS '))) (, ,) ('' ') (NP (NN size) (POS '))))) (, ,) (CC and) (VP (POS ') (NP (NN text-shadow) (POS ')))) (. .)))
(S1 (S (NP (PRP It)) (VP (VBZ means) (SBAR (IN that) (S (NP (DT the) (NN implementation)) (VP (AUX has) (S (VP (TO to) (VP (AUX do) (NP (NP (DT a) (JJ special) (NN handling)) (PP (IN for) (NP (JJ theses) (NNS cases))))))))))) (. .)))
(S1 (S (PP (IN In) (NP (PRP$ your) (NN case))) (, ,) (NP (PRP it)) (VP (MD would) (VP (VB mean) (SBAR (IN that) (S (NP (NN getPrimitiveType)) (-LRB- -LRB-) (-RRB- -RRB-) (VP (AUX has) (NP (DT an) (JJ undefined) (NN result)) (SBAR (IN since) (S (NP (DT the) (NN value)) (VP (AUX is) (ADVP (RB no) (RB longer)) (NP (DT a) (JJ primitive) (NN value)))))))))) (. .)))
(S1 (NP (NNP Philippe)))
