I am looking for a list of javascript commands in order 
to see what it will take to bring at least some javascript functionality to lynx. 
Probably what I need are javascript commands for Netscape since it is not as proprietary as Microsoft Internet Explorer commands. 
My goals are bear bones functionality regarding the navigation of links to start with. 
I have seen a number of sites that would probably work reasonably well with the lynx browser if only the 
navigation and selection of links worked. 
I would like to at least get things to the point where something happens when one selects a link on a site that uses javascript. 
Many times, the underlying pages are straight html 
but the links are relative links and the lynx browser doesn't know what to do with them. 
That is my goal for now. 
We'll worry about what still doesn't work after the links work and so on. 
This all reminds me of a huge tangle of string or wire that doesn't go anywhere until one finds just the right part of the knot and it all begins to straighten out. 
Martin McCormick WB5AGZ Stillwater, OK OSU Center for Computing and Information Services Network Operations Group 
"Martin McCormick" martin@dc.cis.okstate.edu 
core javascript is defined by the ECMAScript standard, IE6 and Netscape 6.1 are fully compliant bar bugs of which there aren't many. 
If you're bringing it lynx, then SeaMonkey is your obvious choice which is the engine that Mozilla uses. 
What you're actually talking about is the Document Object Model, of which 
Netscape 4 is probably more proprietary and Netscape 6 less, however there is a standard as defined by w3.org. 
For Lynx support though the most important and applicaple part is the so called DOM 0, which is not a standard (or even a recommendation), but is extremely well supported by a great many browsers. 
the 
Indeed, implementing the location object and the window.open 
object - 
neither of which are in any standard, would open a huge number of very poorly authored sites. 
Personally I find Microsofts documentation the clearest: 
for example, you'd want this object: ation.asp and window.open: 
dow.asp and: sp 
(the functionality of those objects are basically fixed across all javascript capable browsers other than window.open, 
however a window open which provided links would be very useful. 
Implementing those 3 would open up the majority of pages, next would probably be a form.submit() to cope with forms you can't otherwise submit. 
It's DOM 0 you need and all browsers have implemented it pretty much the 
same, so look for documentation that you find friendly. 
Jim. 
I will give you what feed back I can and serve as a tester if need be 
well in Lynx the sites cannot be found ?! 
Bob 
ASCII Ribbon Campaign accessBob NO HTML/PDF/RTF in e-mail accessys@smartnospam.net NO MSWord docs in e-mail Access Systems, engineers NO attachments in e-mail, *LINUX powered* access is a civil right THIS message and any attachments are CONFIDENTIAL and may be privileged. 
They are intended ONLY for the individual or entity named above. 
If you are not the intended recipient, Please notify the sender as soon as possible. 
Please DO NOT READ, COPY, USE, or DISCLOSE this communication to others and DELETE it from your computer systems. 
Thanks 
"Access Systems" accessys@smart.net 
There is that! 
The Netscape 4 documentation is rather flawed though IMO, as it confuses core/object model and other things: has it though. 
There's also: Opera's http://www.opera.com/docs/specs/js/ 
iCab's: http://www.muchsoft.com/inscript/ 
Jim. 
And which is what will be the real problem for Lynx as Lynx's internal document object model doesn't look much like that of the big 2; that's why people will say that adding Javascript is a major re-write. 
Technically, neither of these are parts of the DOM, they are parts of the browser object model as they are to do with browser automation; however, DOM0 is so fuzzy that it tends to cover them. 
I prefer the PDF files from Netscape, but don't have the URLs to hand. 
Although this will cover a fair amount, a lot of pages will use the Netscape or IE specific bits, and some more recent ones will even use W3C's DOM1 (which works on IE5, although a lot of authors are probably not aware of this, as they treat NS6 as the special case and continue to 
use document.all 
for IE5). 
Pages that come up completely blank often are 
doing a test to decide whether to use the IE or NS4 proprietory features. 
Specifically, they tend to branch between NS4 layers and IE5 document.all 
for manipulating the components of pop-up menus. 
"David Woolley" david@djwhome.demon.co.uk 
the 
to 
Using document.all 
has some very sensible arguments, it's supported by all capable browsers bar Netscape including iCab, IceStorm, Konquerer, Opera, and IE4 a huge number. 
and with appropriate object detection can cause no errors, the arguments (which I support) for using DOM1 are purely standards based rather than any expectation of working for the most users. 
In any case as using W3's DOM still requires using proprietary the requirement to use standards is slightly flawed. 
features. 
Yes, but mapping the location object to links in the page would solve that, even give you a choice, no need to implement any of those features. 
Jim. 
Mapping the location object, in that case, is potentially impossible, and in practice fairly difficult. 
It involves simultaneously executing all possible paths through the code. 
In the most general case, this is the halting problem, and is impossible in finite time, but in more practical cases it requires something other than a normal ECMA Script interpreter and rather more like (I think) Prolog, or a test coverage analysis tool. 
However, as much as anything, my point here was that, if you currently get a blank first page it probably means that the site authors believe that the site will be unuseable without browser specific extensions to DOM0, and will probably give a "please upgrade" page for the fallback 
case, if they have one. 
(Also, although document.all 
may have been implemneted by many minority browsers, it is for the same reason that Lynx would have to do it, namely 
that authors believe that there are only two brands of browser. 
As very 
few authors feature test for it, it also means forging the browser identity - 
something already common amongst Lynx users and which causes Lynx to be under-reported in statistics.) 
One thing I forgot to mention, is that, for reasonable coverage of real web sites, you will need bug-wise compatibility, e.g. the DOM is based on a parse tree for the document, so you will need the same syntax error fixups as IE (NS4 has never done a proper parse and its Javascript reflects this in that it only allows access to forms, controls and (proprietory) layers). 
"David Woolley" david@djwhome.demon.co.uk 
features. 
Not at all, you run the script N times with the navigator object (and probably .all/.layers set appropriately for the NN4/IE4 simplistic object detection) set to spoof the N User Agents you want to spoof, okay that doesn't gaurantee all paths, but in practice it does cover all usage, and suffers no scripting problems - I have implemented such a script and it suffers from no problems and can easily identify the different links written into the script. 
Obviously some paths may not be found, but they are likely down to the author checking for some very strange browsers so you've probably got enough to be vaguely accessible. 
fallback 
I think that's complete rubbish, most authors aren't even aware what their script needs or doesn't need, and this browser detection is more about choosing which html/css hacks to use to make it look "right" in IE/NN. 
namely 
very 
identity - 
The navigator object is very rarely used for statistical gathering and spoofing here would(especially multiple spoofing which I believe to be most appropriate for simply widening the pages lynx can at least access. 
Jim. 
