Hi, I am attaching a zip file with the testcases and a readme.html 
file which describes the attribute tested in the testcase. 
Can someone please check the basic sanity of the testcases, so that it can be added to the DOM TS. Thanks Siva 
Hi Siva Thanks for the tests. 
It feels really good to have another major contributor to the DOM TS. 
I think we should allow for a few days for sanity checking the submitted 
tests, and I can then commit them to the CVS (after changes, if any). 
Again, thanks /Dimitris 
On the first quick read-through, you may want to add author and organization data in the test's metadata element, as well as a prose description of the behaviour the test expect(not vital to test functionality, but it is good to have for displaying in the test matrix). 
Lastly, if you can, also add a pointer to the relevant part of the specification (this is used to point the relevant part of the spec from the text matrix to serve as reference for particular tests). 
See the example below with inlined comments. 
The "splitText(offset)" method returns the new Text node. 
Retrieve the textual data from the last child of the first employee and invoke the "splitText(offset)" method. 
The method should return the new Text node. 
The offset value used for this test is 30. 
The "getNodeValue()" method is called to check that the new node now contains the characters at and after position 30. 
(Starting count at 0) !-- here you give a text description of the test's expected behaviour -- subject resource="http://www.w3.org/TR/1998/REC-DOM- Level-1-19981001/level-one-core#ID-38853C1D"/ !-- Point to the relevant part of the spec, in this example (L1 Core, textsplittextfour.xml) it is the Text.splitText method, similar for your tests. 
-- Again, thanks, it's very good to see that we have a major submission from Netscape. 
/Dimitris 
Schema validating the tests identifies problems in a handful of tests, a couple of mismatched variable names, ignorecase for ignoreCase and missing ignoreCase attributes. 
I've attached an abridged output of the running of Sun's Multischema Validator on the tests. 
ignoreCase="auto" is being used inproperly. 
It should only be used when an HTML processor is required to uppercase the return value. 
With the NIST submission, I globally changed all ignoreCase="auto" to ignoreCase="false" and will need to walk through the tests to find the few that really should be ignoreCase="auto". 
A subject in the metadata section is necessary for tests to appear in the right place in the test matrix. 
Basically, would need to cut and paste URI's from dom1-subjects.xml for the attribute or method being tested. 
I'd prefer committing the tests to the CVS now so we can track the evolution 
of the tests. 
Committing the tests to the CVS does not imply any judgement on the tests, just they are a work in process that we are collaborating on. 
Fixing up the problems identified by the schema validation allows running 
dom1-html-jar which identified a few type mismatches. 
Currently that is about all dom1-html-jar is good for. 
dom1-html-javac: [javac] Compiling 539 source files to D:\domts\2001\DOM-Test-Suite\build\jav a [javac] D:\domts\2001\DOM-Test-Suite\build\java\org\w3c\domts\level1\html\bl ockquote01.java:58: cannot resolve symbol [javac] symbol : class HTMLBlockquoteElement [javac] location: class org.w3c.domts.level1.html.blockquote01 
[javac] vcite = ((HTMLBlockquoteElement)/*Node*/testNode).getCite(); 
[javac] ^ [javac] D:\domts\2001\DOM-Test-Suite\build\java\org\w3c\domts\level1\html\bu tton01.java:54: 
cannot resolve symbol [javac] symbol : class DOMString [javac] location: class org.w3c.domts.level1.html.button01 
[javac] vform = (DOMString)((HTMLButtonElement)/*Node*/testNode).getFo 
rm(); [javac] ^ [javac] D:\domts\2001\DOM-Test-Suite\build\java\org\w3c\domts\level1\html\co llection01.java:57: cannot resolve symbol [javac] symbol : class DOMString [javac] location: class org.w3c.domts.level1.html.collection01 
[javac] vlength = (DOMString)((HTMLCollection)/*NodeList*/nodeList).ge 
tLength(); [javac] ^ [javac] D:\domts\2001\DOM-Test-Suite\build\java\org\w3c\domts\level1\html\co llection02.java:53: cannot resolve symbol [javac] symbol : method assertEquals (java.lang.String,java.lang.String,or g.w3c.dom.Node) [javac] location: class org.w3c.domts.level1.html.collection02 
[javac] assertEquals("vitemLink","[HTMLTitleElement]",testNode); [javac] ^ [javac] D:\domts\2001\DOM-Test-Suite\build\java\org\w3c\domts\level1\html\ta ble01.java:54: 
cannot resolve symbol [javac] symbol : class DOMString [javac] location: class org.w3c.domts.level1.html.table01 
[javac] vcaption = (DOMString)((HTMLTableElement)/*Node*/testNode).get 
Caption(); [javac] ^ [javac] D:\domts\2001\DOM-Test-Suite\build\java\org\w3c\domts\level1\html\ta ble07.java:59: 
cannot resolve symbol [javac] symbol : method assertEquals (java.lang.String,java.lang.String,in t) [javac] location: class org.w3c.domts.level1.html.table07 
[javac] assertEquals("vrowsLink","1",vrows); [javac] ^ [javac] D:\domts\2001\DOM-Test-Suite\build\java\org\w3c\domts\level1\html\ta ble51.java:55: 
cannot resolve symbol [javac] symbol : method assertEquals (java.lang.String,java.lang.String,in t) [javac] location: class org.w3c.domts.level1.html.table51 
[javac] assertEquals("spanLink","20",vspan); [javac] ^ [javac] 7 errors BUILD FAILED Compile failed, messages should have been provided. 
Total time: 2 minutes 11 seconds 
I was under the impression that "auto" will not check for the case. 
That would be ignoreCase="true". 
I have the following questions regarding usage of "auto" 1. 
Will the usage of "auto" returns the value in uppercase or is it just 
the 
first character of the return value that is capitalized. 
2. What is the scenerio where the return value has to be in uppercase. 
ignoreCase="auto" is for (http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-5353782642) 
The HTML case insensitivity is also reflected in the DOM HTML API's in some ways, for instance, element and attribute names are exposed as all upper case (for consistency) when used on an HTML document, regardless of the character case used in the markup. 
ignoreCase="false" -- assertTrue(expected.equals(actual)) ignoreCase="true" -- assertTrue(expected.equalsIgnoreCase(actual)) ignoreCase="auto" (for HTML) -- assertTrue(expected.toUpperCase().equals(actual)) 
(for everything else) -- assertTrue(expected.equals(actual)) 
I will change the testcases so that ignorecase will be false and will use 
CVS 
from next time on to add testcases. 
I need anyone of your help in setting 
up the 
CVS account to be able to do checkin's 
I'd be in favor of having you granted commit rights to the CVS repository. 
However, Dimitridas would have to request that of the W3C support staff. 
You might want to email Dimitriadis a RSA public key. 
I will change the testcases so that ignorecase will be false and will use 
from next time on to add testcases. 
I need anyone of your help in setting 
CVS account to be able to do checkin's 
I'd prefer if the zip with the test cases was sent to the www-dom-ts-submission@w3.org mailing list, the I can commit them to the CVS, since this is the primary channel for contributing test. 
Besides, I'm not in charge of allowing access to the W3C CVS. 
