(TOP (NP (location (NNP Hi))) )
(TOP (S (PP (IN In) (NP (NP (DT a) (NN user) (NN forum)) (PP (IN of) (NP (DT an) (NN XSLT) (NN processor))))) (, ,) (NP (PRP it)) (VP (AUX was) (VP (VBN asked) (SBAR (IN if) (S (S (VP (VBG allowing) (NP (NP (NNS AVTs)) (PP (IN inside) (NP (NNS regexen)))))) (VP (MD should) (VP (AUX be) (VP (VBD disallowed) (SBAR (IN because) (S (NP (NNS coders)) (VP (MD could) (VP (VB forget) (S (VP (TO to) (VP (VB escape) (NP (NP (JJ curly) (NNS braces)) (SBAR (WHNP (WDT that)) (S (VP (AUX are) (RB n't) (VP (VBN meant) (S (VP (TO to) (VP (VB delimit) (NP (NNS AVTs))))) (, ,) (S (VP (VBG eg) (NP (JJR quantifier) (NNS delimiters))))))))))))))))))))))) (. .)) )
(TOP (S (NP (PRP I)) (ADVP (RB just)) (VP (VBD wanted) (S (VP (TO to) (VP (VB say) (SBAR (IN that) (S (NP (PRP I)) (VP (VBP think) (SBAR (IN that) (S (NP (PRP you)) (VP (MD should) (VP (VB continue) (S (VP (TO to) (VP (VB allow) (NP (NP (NNS AVTs)) (PP (IN inside) (NP (NN regexen)))))))))))))))))) (. .)) )
(TOP (S (S (NP (DT This)) (VP (VBZ offers) (NP (NN flexibility)))) (, ,) (CC and) (S (NP (NNS coders)) (VP (MD can) (VP (AUX be) (VP (VBN expected) (S (VP (TO to) (VP (VB remember) (S (VP (VBG escaping) (NP (JJ -LSB-note) (NN -RSB-))))))))))) (. .)) )
(TOP (NP (NNP Tobi) (JJ -LSB-note) (NN -RSB-)) )
(TOP (FRAG ('' ') (NP (NN Note)) (: :) (S (SBAR (IN Because) (S (NP (DT the) (JJ regex) (NN attribute)) (VP (AUX is) (NP (DT an) (NN attribute) (NN value) (NN template))))) (, ,) (NP (NP (JJ curly) (NNS braces)) (PP (IN within) (NP (DT the) (JJ regular) (NN expression)))) (VP (MD must) (VP (AUX be) (VP (VBN doubled))))) (. .)) )
(TOP (S (PP (IN For) (NP (NN example))) (, ,) (S (VP (TO to) (VP (VB match) (NP (NP (DT a) (NN sequence)) (PP (IN of) (NP (NP (QP (CD one) (TO to) (CD five)) (NNS characters)) (VP (VBN followed) (PP (IN by) (NP (NN whitespace)))))))))) (, ,) (VP (VB write) (S (VP (VBG regex=) (`` ``) (NP (. .) (JJ -LCB--LCB-) (JJ 1,5) (NN -RCB--RCB-) (NNS \s)) ('' '')))) (. .) ('' ')) )
(TOP (NP (NP (NNS Thanks)) (PP (IN for) (NP (DT the) (NN comment))) (. .)) )
(TOP (S (NP (PRP We)) (VP (AUX have) (VP (AUX had) (NP (DT some) (NN discussion)) (PP (IN on) (NP (DT this))) (PP (IN in) (NP (DT the) (NN working)))))) )
(TOP (NP (NN group) (. .)) )
(TOP (S (NP (PRP We)) (VP (AUX are) (VP (VBG looking) (PP (IN for) (NP (NP (DT a) (NN way)) (SBAR (S (VP (TO to) (VP (VB retain) (NP (DT the) (JJ current) (NN functionality)) (SBAR (IN while) (S (VP (VBG avoiding) (NP (NP (DT the) (JJ current) (`` ``) (NN gotcha) ('' '')) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (NN user)) (VP (VBZ obtains) (NP (JJ wrong) (NNS results)) (SBAR (IN if) (S (NP (PRP they)) (VP (VB forget) (S (VP (TO to) (VP (VB double) (NP (DT the) (NNS braces))))))))))))))))))))))) (. .)) )
(TOP (S (NP (PRP It)) (VP (MD might) (VP (AUX be) (SBAR (IN that) (S (NP (DT the) (NN problem)) (VP (MD can) (VP (AUX be) (VP (VBN solved) (ADVP (RB adequately)) (PP (IN with) (NP (NP (DT a) (NN warning)) (PP (IN from) (NP (NP (DT the) (NN compiler)) (: -) (SBAR (S (NP (PRP we)) (VP (MD 'll) (VP (VB see)))))))))))))))) (. .)) )
(TOP (NP (person (NNP Michael) (NNP Kay))) )
(TOP (S (VP (VBZ Sounds) (ADJP (JJ good))) (. .)) )
(TOP (S (SBAR (IN If) (S (NP (PRP you)) (VP (VBP find) (NP (NP (DT a) (NN solution)) (SBAR (WHNP (WDT which)) (S (VP (VBZ saves) (NP (NP (DT the) (JJ coder) (JJ potential) (NN trouble)) (SBAR (ADVP (RB then)) (SBAR (WHNP (WDT that)) (S (VP (AUX 's) (ADJP (JJ great)) (PRN (-LRB- -LRB-) (NP (NP (RB perhaps) (CD \)) (PRN (-LRB- -LCB-) (JJ 5\) (-RRB- -RCB-) (ADVP (RB instead)) (PP (IN of) (NP (JJ -LCB--LCB-) (CD 5))) (-RRB- -RCB-)) (-RRB- -RCB-)) (-RRB- -RRB-))))) (, ,) (CC but) (SBAR (RB even) (IN if) (S (NP (DT no) (JJ such) (NN solution)) (VP (MD can) (VP (AUX be) (VP (VBN found))))))))))))))) (, ,) (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (NP (NNS AVTs)) (PP (IN inside) (NP (NNS regexen)))) (VP (MD should) (VP (AUX be) (VP (VBN allowed))))))) (. .)) )
(TOP (NP (NNP Tobi)) )
