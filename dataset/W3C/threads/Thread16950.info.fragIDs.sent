I wonder if anyone has tried to use HTTP content negotiation mechanism for serving different variants according to special needs, e.g. to send a sign 
language version to people who have specified a sign language as their first preference. 
The problem that would be addressed this way is twofold: 1) The usual "version selection" page is an unnecessary and potentially confusing step. 
Naturally, such a page should be available too, for various reasons, but hopefully the automated mechanisms would, by time, mostly help to avoid it. 
2) It is impossible to present alternatives in a truely balanced way. 
The typical approach of having a "normal" page and links to alternate (abnormal?) versions can be regarded as making people with special needs second class netizens. 
And making e.g. a sign language version the primary version would not be suitable to the majority (though it might be a feasible solution on pages that are primarily intended for people who know sign language). 
Language negotiation is a well-defined technique that has been used for selecting between "normal" written languages. 
There are varying opinions on how suitable it actually is, but it seems to get more and more use, though slowly. 
Those who don't know the concept might wish to take a look at my But the accessibility issue is the use of language negotation so that sign languages, visual symbol languages, strongly simplified versions of "normal" languages, etc., are involved. 
Many of those languages have no formalized identifiers (as per ISO 639 and the relevant RFCs and registries) but this need not prevent experimentation or specialized use, since browsers typically let the user enter whatever string they like as language code. 
I think it would be useful to have some statements about the methods in which different variants are presented to users, in cases where the same content appears in different variants, for some good reason. 
Simple links are the simple answer, and will probably be always used as one way of accessing the different variants, but maybe we should aim at something more automatic in the long run. 
Jukka Korpela, senior adviser TIEKE Finnish Information Society Development Centre 
I think the problem with content negotiation is that it requires server configuration. 
Most informational page developers are one technology people, and if it can't be done with a meta element in HTML, it can't be done at all, as HTTP is a foreign technology. 
Slightly more legitimate reasons are that sources of cheap web space tend not to allow any server configuration, so people learning can't play with it and people an a budget can't afford it. 
The more technical problems with language negotiation are that it is difficult to do well and maintain cachability (not that that seems to matter to todays designers) and it can be difficult to have a satisfactory way of overriding the negotiated language (without reconfiguring the browser. 
If one negotiates every page, one needs to reconfigure the browser. 
If one only negotiates the home page, deep links will not benefit. 
If one has a negotiation page that redirects into a non-negotiated page, for ever page, it may be difficult to convince people linking to the site to pick up the link to the negotiation page rather than the negotiated page they are viewing. 
The only real life negotiated pages I have come across are Windows Update and Google (W3C negotiates graphics formats). 
In general I agree with David's assessment - currently most Web designers seem to have very little understanding of HTTP, which is important to content negotiation. 
And most people still rely on an external provider to host content, although more and more systems have web servers built in and people could host their own content. 
(This doesn't apply too large sites who generally do control their own systems). 
Actually W3C does negotiate content-types and languages when there are variants available - for example it is possible to request some documents as html, plain text, or rdf, or for some resources to request them as an image or as rdf... To enable this to work with deep linking is actually not terribly difficult. 
There are versions of a resource available in a specific type, with a URI, and there is a URI for a resource that can be content-negotiated. 
For example, http://www.w3.org/Icons/w3c_home is a W3C logo, and might be served as a GIF, a PNG, or in other forms. 
On the other hand 
of these can be bookmarked, but it makes more sense in most cases to bookmark the resource in its general version, not a specific representation of it. 
(Actually the fact that it ends in .gif just shows the way our server is configured - the relevant URIs could easily be .../jgfkgfjg and .../87otygoybig and the system would still work.) cheers Chaals 
I think the problem with content negotiation is that it requires server configuration. 
Most informational page developers are one technology people, and if it can't be done with a meta element in HTML, it can't be done at all, as HTTP is a foreign technology. 
Slightly more legitimate reasons are that sources of cheap web space tend not to allow any server configuration, so people learning can't play with it and people an a budget can't afford it. 
The more technical problems with language negotiation are that it is difficult to do well and maintain cachability (not that that seems to matter to todays designers) and it can be difficult to have a satisfactory way of overriding the negotiated language (without reconfiguring the browser. 
If one negotiates every page, one needs to reconfigure the browser. 
If one only negotiates the home page, deep links will not benefit. 
If one has a negotiation page that redirects into a non-negotiated page, for ever page, it may be difficult to convince people linking to the site to pick up the link to the negotiation page rather than the negotiated page they are viewing. 
The only real life negotiated pages I have come across are Windows Update and Google (W3C negotiates graphics formats). 
Location: 21 Mitchell street FOOTSCRAY Vic 3011, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) 
I covered that case. 
The problem is convincing people to bookmark anything other than the page that they are actually on. 
If you do temporary redirects for everything, people can't easily follow a link to a langauge version that differs from that implied by their browser settings. 
This is fairly straightforward - the setup is that you use the generic URI, and that is what the server provides (more specific information about the specific URI goes into the content-location header - for example so that if 
you are editing one version and save it back to the server it goes in the right place). 
So that is what gets bookmarked. 
(I forget the precise details of the server setup, which is specific to a given piece of server software.) Cheers Charles McCN 
I covered that case. 
The problem is convincing people to bookmark anything other than the page that they are actually on. 
If you do temporary redirects for everything, people can't easily follow a link to a langauge version that differs from that implied by their browser settings. 
Location: 21 Mitchell street FOOTSCRAY Vic 3011, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) 
Which is what the browser will display in the address bar and what will get bookmarked. 
If they have forced a language, they may not be going through the generic page at all, but navigating purely on their selected language pages. 
It is not necessarily true that the particular version gets shown in the browser. 
That depends on the details of the site setup. 
To test this, go to the WAI home page at http://www.w3.org and try to bookmark the W3C logo image. 
Or go to http://www.w3.org/Icons/w3c_home and bookmark it. 
If you don't get a URI from there that ends in .gif or .png then the content negotiation is working and you have bookmarked a generic resource. 
Cheers Charles 
Which is what the browser will display in the address bar and what will get bookmarked. 
If they have forced a language, they may not be going through the generic page at all, but navigating purely on their selected language pages. 
Location: 21 Mitchell street FOOTSCRAY Vic 3011, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) 
