I don't think this has been mentioned yet, but the spec needs to indicate that replaceChild, removeChild and appendChild will throw this exception if the node subclass does not support children. 
Currently, only insertBefore is stated as throwing that exception. 
Tom Otvos Director of Research, EveryWare Development Inc. "Try not! 
Do, or do not. 
There is no 'try'." - Yoda Tom, I can see that replaceChild and appendChild needs to throw NO_CHILDREN_ALLOWED_ERR but I don't see why removeChild needs to throw it? 
BTW, the latest spec (not public yet) documents insertBefore, appendChild, and replaceChild as throwing HIERARCHY_REQUEST_ERR instead of NO_CHILDREN_ALLOWED_ERR. Don Don, I would have thought that NO_CHILDREN_ALLOWED_ERR (or HIERARCHY_REQUEST_ERR) is more precise that the presumably alternate NOT_CHILD_ERR and may be more useful in some cases. 
As an aside, if one were building an editor, it may also be useful to have an accessor that determines whether or not children are allowed, so that the UI can adjust itself according to a node's "child bearing" capabilities. 
Just a thought... Tom Otvos Director of Research, EveryWare Development Inc. "Try not! 
Do, or do not. 
There is no 'try'." - Yoda Adding an isLeafNode() query is not a bad thought. 
It can be done now by checking the Node Type against a table, but having the DOM state it directly would be a nice convenience function. 
Joe Kesselman / IBM Research Unless stated otherwise, all opinions are solely those of the author. 
