From: Dave Beckett [mailto:dave.beckett@bristol.ac.uk] Subject: Re: Regrets - 1st Nov Are you going to have any comments on the syntax WD? If so, I'd prefer to have anything you've got ASAP so I can edit anything in before Friday. 
So far I have read up to but excluding the grammar (section 7 is it now). 
I have a few minor fixes and one substantive change:- 
Section 2 must have one of the following changes: - clearly marked as informative 
- moved to being an informative appendix 
- deleted (if we were to follow the puritanical minimalist model - which 
would be my pref. 
but I would freely admit that the other docs including RDF-C&amp;ADM don't follow this) 
The minor fixes I have are corrections to section 2 which is occasionally incorrect. 
We are unlikely to have found all the bugs, which is why the change to explicit informative status is imperative. 
As a taster: 2.8 "beginning a:Collection" The example should be change to delete the whitespace between the end of the 
ex:prop start tag and the beginning of the a:Collection start tag, so that the comment cannot be misinterpreted as indicating that the whitespace is insignificant. 
I think my other corrections are at a similar level of pedantry. 
An editorial issue in section 2 is the use of the word value for the object of a triple. 
I think this is probably misguided and confusing. 
I suggest that we should not use 'value' for anything syntactic - often I believe the phrases would be better with the word "object". 
I hope to send my full comments first thing tomorrow morning. 
Jeremy 
Jeremy Carroll said: 
From: Dave Beckett [mailto:dave.beckett@bristol.ac.uk] Subject: Re: Regrets - 1st Nov Are you going to have any comments on the syntax WD? If so, I'd prefer to have anything you've got ASAP so I can edit anything in before Friday. 
No, I intend it to be normative ("relating to or dealing with norms") 
and these are normal, standard and legal examples. 
It also informs, but it is expected to be correct (the complete examples have been machine checked). 
There are plenty of examples given in normative sections of specifications, and this is one section - it defines what a node element, property element etc. is. 
No. People needed examples and there were definitely a need for them plus an explanation of how the syntax works - this document isn't just for parser writers. 
I've already had positive feedback on this. 
Definitely not. 
See above feedback. 
I didn't mention whitespace in the text, but pointed to the concepts doc section on XML Literals. 
I doubt object is a better word to use than value in terms of lessening ambiguity. 
There are probably 3-4 different categories of things in the RDF/XML document that people might call objects, depending on their background. 
Would the phrase "object node" would make more sense? 
Dave 
Jeremy: 
Dave: 
Clearly a matter of disagreement. 
Jeremy 
Dave: 
Non-sequitor. 
A non-normative appendix is still part of the doc, still available for the reader. 
The primary role of a normative spec is to specify. 
Other docs can give examples. 
Jeremy: 
Dave: 
This is still a non sequitor, but I won't push this point. 
(Useful material can be published independent of a spec. 
A clear recommendation can only be published as part of a standards process). 
Jeremy: 
the 
Dave: 
The concepts doc on XML Literals normatively defers to XML Canonicalization, which I think normatively defers to the XPath Nodeset, where I believe you find the whitespace as significant (or you may need to go further back). 
A reader faced with a *normative* section that says that the object node labelled with XML content beginning a:Collection, and faced with some RDF/XML that delivers "\n a:Collection ..." may be forgiven for not following the refs and simply adding a spurious trim() function to their understanding of how RDF works. 
Yes, you used that a few times, it's better but still awkward though. 
There is little clarity in section 2 as to when you are talking about XML and when you are talking about RDF. ... I'll try and be constructive in my detailed comments tomorrow. 
Jeremy 
Of course the primary role of a normative spec is to specify. 
Including some examples doesn't diverge from that role; in fact, it aids in the performance of that role. 
More specifically, the primery role of a normative spec is to *convey the meaning of that specification to the people who need to use it*. 
A normative spec that no one could understand wouldn't be terribly useful, in spite of how "normative" it was. 
The RDF/XML specification is supposed to describe the RDF/XML syntax in a normative way, and I would interpret that to mean "not just to parser writers and parsers" (who can process syntax rules and determine whether a piece of RDF/XML is written properly or not). 
After all, many W3C normative documents include examples. 
I'd suggest people 
look at this the other way: I can't think of a better way to insure that what people think RDF is (including both RDF/XML and Schema) is what's described in the Primer than to make all the normative specs "bare-bones normative" (and hence virtually unreadable). 
The specs people can read tend to become "normative" by usage. 
--Frank Frank Manola The MITRE Corporation 202 Burlington Road, MS A345 Bedford, MA 01730-1420 
There is an broader issue of terminology here. 
We have many audiences to speak to and they bring different presuppositions to bear on what we write. 
So I think it is OK to occasionally err on the side of loquacity in order to avoid possible misunderstanding, eg using phrases like 'object, in the sense of the third item in the triple' Pat IHMC(850)434 8903 home 40 South Alcaniz St.(850)202 4416 office FL 32501 (850)291 0667 cell phayes@ai.uwf.edu http://www.coginst.uwf.edu/~phayes s.pam@ai.uwf.edu for spam 
Very well-argued. 
Jeremy 
Frank: 
Jeremy: 
I wrote that a couple of days ago, I guess it got held up on my PC. On reflection, I feel this is a good argument to make the primer correct, which I think we wanted to do anyway. 
It does not matter at all if people don't have examples of how to use bagID because its useless. 
All the rdf:parseType's are there for other specs to and implementations to build on - apart from "Literal" which I hope the primer will treat a little. 
If the primer doesn't mention property attributes, and then no one uses them, that won't be a huge lose to humanity. 
Jeremy 
