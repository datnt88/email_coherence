Charset name: KS_C_5601-1987 Charset aliases:ISO-IR-149 KS_C_5601-1989 KSC_5601 KS_C_5601 Suitability for use in MIME text: yes 
Published specification(s): KS_C_5601-1987 Additional information: The existing registration for KS_C_5601-1987 does not include an alias for KS_C_5601. 
However, that alias name is widely used by implementations. 
Conversely, the existing shorthand alias KSC_5601 is not widely used by implementations. 
Furthermore, given the placement of underscores in the canonical name versus the existing alias, it is highly probable that future implementations will default to "KS_C_5601" instead of the alias in the charset registery. 
This registration is intended to be a modification to the existing registration, adding KS_C_5601, while keeping KSC_5601 for backwards compatibility. 
Person &amp; email address to contact for further information: Eric A. Hall ehall@ehsco.com 
, administrative effort to fix typo. 
Keld J?rn Simonsen keld@dkuug.dk , original registrar 
of ks_c_5601-1987 (RFC 1345), and still the proper source contact for the charset. 
Intended usage: COMMON 
Just one thing that we need to check. 
My definition of iso-ir-149 did not include the 2022 shift between an 7-bit ASCII-like charset and the 14-bit iso-ir-149. 
Maybe that is the intention with ks_c_5601 . 
We need to check with Korean users. 
Kind regards Keld 
I don't have the spec and I don't want the spec, so can somebody that has/wants the spec do this? 
I'm just trying to fix the typo, but if it isn't a typo (even though "KS_C_5601" doesn't exist in the charset registry), then obviously this change should not be accepted. 
Eric A. Hall http://www.ehsco.com/ 
Internet Core Protocols http://www.oreilly.com/catalog/coreprot/ 
I have a copy of that standard at work, but in Korean (which I can read about as well as the average scientist can read Greek :-(. 
But I think the problem isn't the standard itself, because the standard (or the way people use it) both includes the simple 14-bit table as well as the combination with ASCII (or it's Korean equivalent). 
If you can point us to a few files with actual data, this may help. 
Regards, Martin. 
nit: isn't the underscore illegal in MIME charset parameters? 
We might want to add a "(preferred MIME name)" indicator - not sure where to add it. 
Harald 
Microsoft treats KS_C_5601-1987 the same as Windows CP-949 whose Unicode mapping table is available at: ftp://ftp.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP949.TXT 
It does include 7-bit ASCII characters. 
And we have a problem if a chraset definition of any of these new alias disagrees with Windows 949. 
Microsoft Outlook Express, which I used to work on, and Microsoft Outlook send Korean Messages including US ASCII characters using "KS_C_5601-1987", and Korean web pages including US ASCII characters also use KS_C_5601-1987 everywhere. 
Thanks -takao 
Hello Takao, others, 
I have just had a look at the situation, and I can only say that it's a major mess. 
I have looked at the CP 949 table in Nadine Kano's book as 
well as at (somehow ftp didn't work for me today). 
I also have a copy of both KS C 5601-1992 as well as KS C 5601-1987, and Ken Lunde's CJKV book gives the table for KS X 1001:1992. 
Codepoint-wise, all these three are the same, but there is a huge difference between these and CP 949, in that CP 949 contains 8822 more Hangul syllables, stuffed in around the 94x94 block of iso-ir-149 in a manner similar to GBK. 
Using KS_C_5601-1987 for CP 949 looks like a serious mistake. 
Takao, can you check whether KS_C_5601-1987 is indeed used for CP 949, or whether it is only used for the appropriate subset? 
There are three things that need labels: a) The 94x94 block of iso-ir-149 b) The combination of a) and an ASCII-like 7-bit set c) The combination of b) and the 8822 more Hangul The current official situation in the charset registry is: a) Name: KS_C_5601-1987 [RFC1345,KXS2] MIBenum: 36 Source: ECMA registry Alias: iso-ir-149 Alias: KS_C_5601-1989 Alias: KSC_5601 Alias: korean Alias: csKSC56011987 b) Name: EUC-KR (preferred MIME name) [RFC1557,Choi] MIBenum: 38 Source: RFC-1557 (see also KS_C_5861-1992) Alias: csEUCKR c) No label registered This unfortunately doesn't coincide with actual practice. 
Either way, some implementations won't work together, and some people will get unhappy. 
I'm not sure whether we need a lot of labels for a) (using only Korean, without some 7-bit set, should be very rare). 
Also, I have no idea whether things such as iso-ir-149 (there are a lot of these in the charset registry) are supposed to be used in GL or in GR; maybe Keld can enlighten us. 
Also, because the additional 8822 Hangul syllables in CP 949 are used very rarely, most of the pages labeled as KS_C_5601-1987 by Microsoft applications will at least conform to b). 
So I guess this would lead to more or less the following plan: - In the registry, add a notice to KS_C_5601-1989 to say that this is misused to mean EUC-KR or CP949 by some applications. 
Potentially deprecate it clearly. 
- In the registry, add an entry for CP949 (if Microsoft has a need to label it). 
- By applications: Use EUC-KR or CP949 depending on what the repertoire is. 
Any comments? 
Regards, Martin. 
How stands codepage 1361 in this panorama? 
Antoine 
Martin, sorry for my slow reply. 
KS_C_5601-1987 is indeed used for CP 949 as a whole set. 
Microsoft doesn't has interest in using CP949 or euc-kr as the charset aliases to mark those documents/files that contain 11,172 characters. 
I totally understand that's not what many people agree, but I am just letting you know that's how it's been done for Windows platforms/products. 
-takao 
