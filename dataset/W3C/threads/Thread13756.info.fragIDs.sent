I've tinkered a little more with it since our earlier discussion. 
Nothing I do seems to improve the appearance of the RDF, or the number of anonymous nodes, but I haven't finished with trying yet. 
I will revisit my IRC log - in particular Wendy and Nadia's comments - within the next day or two. 
I have implemented Jim's suggestion of accepting Content-Location as an identifier. 
Nick Kew Available for contract work - Programming, Unix, Networking, Markup, etc. 
Hi Nick, 
In the current Valet output, the following:- 
earl:validity rdf:resource="http://www.w3.org/2001/03/earl/1.0-test#fails"/ should be:- earl:validity rdf:resource="http://www.w3.org/2001/03/earl/1.0-test#Fail"/ 
Apart from that, it seems alright: good work. 
What's all this about using Content-Location? 
I'm not sure what you mean, 
but note that "Content-Location" simply points to a resource whose associated representations are the same as the subject resource. 
It does not mean that the resources are equivalent, necessarily, from the Semantic Web/RDF point of view. 
It one of those points that could only ever get raised on an RDF list, though. 
Kindest Regards, Sean B. Palmer @prefix : http://purl.org/net/swn# . 
:Sean :homepage http://purl.org/net/sbp/ . 
Thanks. 
Will fix that next time I log in and tinker with it. 
The webservice parses XML you POST to it. 
That is to say, anonymous input. 
It assigns it a system identifier of modxml:input. 
Jim wanted to be able to post a document from a URL, and have the results refer to that URL. 
So we decided in chat to use the Content-Location HTTP header. 
If the Client sets a Content-Location, 
mod_xml will (now) use that as the System Identifier of the input. 
Nick Kew Available for contract work - Programming, Unix, Networking, Markup, etc. 
That was actually one of the problems we ran into in our discussion yesterday - earl doesn't seem to have a property that uses earl:fails as a value. 
I picked earl:validity because it seemed the closest thing to suggest at the moment, even though it's technically incorrect. 
So assuming a user is really set on using earl:fails instead of just earl:Fail, but wants to qualify their predicate with other properties like Nick does, what would you suggest? 
Nadia 
Consider that user A wants to use {earl:fails :myLevel :Severe} and user B wants to use {earl:fails :level :Light} (or even that user A later wants to use a different level). 
When you merge the two you get a conflict; you 
can't declare things about terms in the EARL namespace that you don't know to be true, and in this case aren't true. 
Note that we already have a confidence level set for earl:fails: {earl:fails earl:confidence earl:High (earl:Certain in the latest draft)}. 
earl:Fail is there so that people can create their own properties, with 
different confidence levels or whatever; these properties do not have to be anonymous, of course. 
Kindest Regards, Sean B. Palmer @prefix : http://purl.org/net/swn# . 
:Sean :homepage http://purl.org/net/sbp/ . 
Erm, you're dealing with qualifiers that are subjective measures. 
The severity property for a validation error is clearly defined, so if two validators disagree then one of them is buggy. 
These errors are Confidence: Certain. 
Severity is a different property. 
Likewise, when a document fails validation, errorCount is a property of that failure. 
The point is that an RDF predicate may need to have properties additional to an earl:Fail. 
Nick Kew Available for contract work - Programming, Unix, Networking, Markup, etc. 
