Hi there, in DOM level 2 Core I read about an importNode(importedNode, deep) method. 
How is the importedNode to be referenced, or how is a "foreign" document to be referenced? 
Is there a way to create a document object for a "foreign" document via URI or something? 
I didn't subscribe to this list. 
Please email me directly. 
Tnx Johannes Koch http://waldbaer.home.pages.de/ 
ILR (Institute of Aerospace Engineering) TU Berlin, GERMANY In te, Domine, speravi; non confundar in aeternum. 
(from: Tedeum, 4th century) importNode copies the other node "by value" -- it extracts all the information and uses it to produce a new node (or nodes) belonging to the target document. 
The data being copied must already be available via the DOM Node API; you're importing from another Document, not from a URI or file. 
If all you have is a URI, your application will have to use that URI to retrieve the data, pass it through a parser and find the node it's interested in (or otherwise find that data and express it as a DOM Node). 
After you have done so, importNode can be used to copy it. 
Joe Kesselman / IBM Research Actually, not "all" the information. 
If the node is of some subtype that the "importing" DOM doesn't fully recognize, that information can't be imported. 
Examples include additional attributes and of course any specialized methods the original subtype supported. 
- Dave I don't think we _forbid_ copying additional information, if your implementation happens to recognize the source node as belonging to an implementation that it knows how to handle (itself, for example). 
But we can't require that, because in the general case all that we know about the source node is that it's a DOM Node. 
Joe Kesselman / IBM Research Just like I said! 
Fast guess: It looks like you are trying to use importNode to import an entire Document. 
You can't insert a Document into a Document. 
Try changing: Node myNode = tidy.parseDOM(in, 
null); Document myDoc = new DocumentImpl(); myDoc.appendChild( 
myDoc.importNode( 
myNode, false )); to Document sourceDoc = (Document) tidy.parseDOM(in, null); Document myDoc = new DocumentImpl(); myDoc.appendChild( 
myDoc.importNode( 
sourceDoc.getDocumentElement(), 
true )); Note the "true" in that last line. 
I presume you _do_ want to import the entire subtree... CAVEAT: This is nonportable code. 
Even ignoring the direct referenct to DocumentImpl, there's no promise that you can simply append a root element to an empty Document... and in fact there's no standard way to create an empty Document at this time. 
A more portble solution would be: Document sourceDoc = (Document) tidy.parseDOM(in, null); Element sourceRoot=sourceDoc.getDocumentElement(); // This one line currently needs to be aware of which DOM you're using // Since you said you were using the Xerces DOM: DOMImplementation myDOMImpl=org.apache.xerces.dom.DOMImplementationImpl.getDOMImplementation // I'm assuming here that tidy's DOM is a Level 1 DOM. 
If it's Level 2, // you'll want to alter this line appropriately. 
(Best solution would be // to use hasFeatures to check whether the source DOM is Level 1 or Level 2) // I'm also assuming you aren't assigning a DocumentType. 
Document myDoc = myDOMImpl.createDocument(null,sourceRoot.getNodeName (),null) for(Node n=sourceRoot.getFirstChild(); 
n!=null; n=n.getNextSibling()) myDoc.getDocumentElement().appendChild( 
myDoc.importNode( 
n, true ) Re the null pointer exception: Outside of the fact that you can't insert a Document into a Document... this looks like either Tidy returned null and you didn't notice, or Tidy isn't implementing the DOM correctly, or there's a bug in the Xerces implementation of importNode. 
Debug your way into the code and check which. 
If you need assistance, there's a mailing list for Xerces development -- I don't remember the details offhand, but you can find out more about it at http://xml.apache.org/xerces 
Hope that helps... Joe Kesselman / IBM Research Extending a bit in my previous message: this what I want to do. 
Get a file, tidy it, and then convert it to xerces DOM (to eventually show it on a web page). 
public class TestDOM3 { public TestDOM3() {} public static void main(String args[]) { FileInputStream in; Tidy tidy = new Tidy(); TestDOM3 t = new TestDOM3(); try { in = new FileInputStream("kk2.html"); tidy.setMakeClean(true); tidy.setXmlTags(true); 
Node myNode = tidy.parseDOM(in, 
null); Document myDoc = new DocumentImpl(); myDoc.appendChild( 
myDoc.importNode( 
myNode, false )); catch ( IOException e ) { System.err.println( "IO Exception " + e.toString() ); This seems pretty much straight forward, but I get this exception: C:\progs\jakarta-tomcat\webapps\cocoon\mixsp java -classpath .;c:\progs\jtidy-04 
aug2000r5\build\Tidy.jar;c:\progs\xerces-1_2_1\tools\xerces.jar 
TestDOM3 Exception in thread "main" java.lang.NullPointerException at org.apache.xerces.dom.DocumentImpl.importNode(DocumentImpl.java:698) at TestDOM3.main(TestDOM3.java:27) 
Is there something else that must be done to import a Node? 
Same goes if I import with "true" as second argument. 
Thanks for any hint! 
Name: Juan J. Merelo Title: Consultant Civista Mobile: +34 627 397239 Facsimile: +44 (0) 20 84086399 Services and Applications for a Wireless World This e-mail and the information that it contains may be confidential and protected by law and is for access by the intended recipient only. 
Any liability (in negligence or otherwise) arising from any third party acting, or refraining from acting, on any information contained in this e-mail is hereby excluded. 
If you are not the intended recipient, please notify the sender immediately and do not disclose the contents to any other person, use it for any purpose, or store or copy the information in any medium. 
Copyright in this e-mail and any attachments belongs to Civista Limited and/or its subsidiary companies. 
While this message is virus checked, Civista can not be held responsible for its integrity. 
