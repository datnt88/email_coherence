(S1 (NP (NP (NP (JJ Hi) (, ,) (JJ Quick) (NN summary)) (PP (IN of) (NP (NNS options)))) (: :) (NP (CD 1)) (. .)))
(S1 (NP (NNP Current) (NNP Spec) (. .)))
(S1 (S (NP (DT This)) (VP (AUX is) (ADJP (JJ intuitive)) (PRN (-LRB- -LRB-) (PP (IN in) (NP (PRP$ my) (NN opinion))) (-RRB- -RRB-)) (SBAR (IN because) (S (NP (PRP it)) (VP (AUX is) (VP (VBN based) (PP (IN on) (NP (NP (DT a) (JJ linear) (NN sequence)) (PP (IN of) (NP (VBN set) (NN operations.)))))))))) (. .)))
(S1 (S (NP (JJ Typical) (PRN (-LRB- -LRB-) (NP (NNP IMHO)) (-RRB- -RRB-)) (NN use) (NNS cases)) (VP (VBP require) (NP (CD 2) (JJ XPath) (NNS evaluations))) (. .)))
(S1 (S (S (ADVP (RB However)) (, ,) (NP (ADJP (RB increasingly) (JJ complex)) (VBG filtering) (NNS requirements)) (VP (VBP incur) (NP (VBG increasing) (NN cost)))) (: ;) (S (NP (DT an) (ADJP (RB arbitrarily) (JJ complex)) (NN expression)) (VP (VBZ requires) (NP (NP (DT an) (RB arbitrarily) (JJ large) (NN number)) (PP (IN of) (NP (JJ simple) (JJ XPath) (NNS expressions)))))) (. .)))
(S1 (S (ADVP (RB However)) (, ,) (NP (DT the) (JJ standard) (NNP XPath) (NN filter)) (VP (MD may) (VP (AUX be) (ADJP (RBR more) (JJ useful)) (PP (IN for) (NP (DT these) (NNS anyway.))))) (. .)))
(S1 (S (NP (NN Operation)) (VP (MD can) (, ,) (PP (IN in) (NP (JJS most) (NNS cases))) (, ,) (VP (AUX be) (VP (VBN commingled) (PP (IN with) (NP (NNS c14n))) (PP (IN for) (NP (NN efficiency))))) (, ,) (CC but) (: :)) (. .)))
(S1 (S (NP (DT The) (NN union) (NN operator)) (VP (AUX is) (ADJP (RB really) (JJ ugly) (CC and) (JJ unintuitive))) (. .)))
(S1 (S (VP (VBG 2.) (NP (NP (NNP Christian) (POS 's)) (NNP Spec))) (. .)))
(S1 (S (VP (VB *) (S (S (NP (PRP I)) (ADVP (RB *)) (VP (AUX do) (RB not) (VP (VB believe) (SBAR (S (NP (DT this)) (VP (AUX is) (ADJP (RB as) (JJ intuitive)))))))) (: ;) (S (NP (PRP it)) (VP (VBZ involves) (S (VP (VBG labeling)))))))))
(S1 (S (NP (NNS nodes)) (ADVP (CC and) (RB then)) (VP (VBD traversing) (NP (DT the) (NN document)) (, ,) (S (VP (VBG proceeding) (PP (VBN based) (PP (IN on) (NP (NP (JJ node) (NNS labels)) (PRN (-LRB- -LRB-) (FW e.g.) (, ,) (ADJP (JJ omit-but-traverse)) (-RRB- -RRB-)) (. .))))))) (. .)))
(S1 (S (NP (JJ Typical) (NN use) (NNS cases)) (VP (VBP require) (NP (CD 2) (JJ XPath) (NNS evaluations))) (. .)))
(S1 (S (NP (ADJP (RB Increasingly) (JJ complex)) (VBG filtering) (NNS requirements)) (VP (MD can) (VP (AUX be) (VP (VBN solved) (PP (IN in) (NP (NP (DT a) (JJ fixed) (NN number)) (PRN (-LRB- -LRB-) (NP (CD 2/3)) (-RRB- -RRB-)) (PP (IN of) (NP (ADJP (RB increasingly) (JJ complex)) (JJ XPath) (NNS expressions)))))))) (. .)))
(S1 (S (. .)))
(S1 (S (NP (NN Operation)) (VP (MD can) (VP (AUX be) (VP (VBN commingled) (PP (IN with) (S (VP (VBG c14n) (PP (IN for) (NP (NN effiency))))))))) (. .)))
(S1 (S (INTJ (INTJ (UH 3.)) (CC Or)) (, ,) (NP (PRP we)) (VP (MD can) (VP (VB take) (NP (NP (DT a) (NN variant)) (PP (IN of) (NP (DT the) (JJ current) (NN spec)))))) (. .)))
(S1 (S (S (NP (PRP I)) (VP (MD will) (RB n't) (VP (NN detail) (NP (PRP it)) (ADVP (RB horrendously))))) (, ,) (CC but) (FRAG (ADVP (RB basically)) (: :)) (. .)))
(S1 (S (NP (DT The) (JJ XPath) (NNP Filter) (CD 2.1)) (VP (VBZ takes) (, ,) (PP (IN as) (NP (DT a) (NN parameter))) (, ,) (NP (NP (DT a) (NN sequence)) (PP (IN of) (NP (NP (NNS operations)) (, ,) (SBAR (WHNP (NP (DT each)) (WHPP (IN of) (WHNP (WDT which)))) (S (VP (AUX is) (VP (VBN characterized) (PP (IN as) (NP (NP (NP (DT a) (VBN set) (NN operation)) (PRN (-LRB- -LRB-) (INTJ (VB intersect) (, ,) (VB subtract) (, ,) (NN union)) (-RRB- -RRB-))) (CC and) (NP (DT an) (JJ XPath) (NN expression)))))))))))) (. .)))
(S1 (S (. .)))
(S1 (S (NP (NP (NN Operation)) (PP (IN over) (NP (DT an) (NN input) (NN node) (NN set)))) (VP (AUX is) (SBAR (IN as) (S (VP (VBZ follows) (: :) (S (NP (NNS *)) (VP (VB Construct) (NP (NP (DT a) (NN node)) (VP (VBN set) (NP (NNP N))) (VP (VBG consisting) (PP (IN of) (NP (NP (PDT all) (DT the) (NNS nodes)) (PP (IN in) (NP (DT the) (NN input) (NN document))))))))))))) (. .)))
(S1 (S (NP (NNPS *)) (VP (VBP Iterate) (PP (IN through) (NP (NP (DT each)) (PP (IN of) (NP (DT the) (NNS operations)))))) (. .)))
(S1 (NP (NP (QP (# #) (VB Evaluate)) (DT the) (JJ XPath) (NN expression)) (: ;) (S (S (NP (DT the) (NN result)) (VP (AUX is) (NP (NNP X.) (# #) (VB Expand)) (S (NP (DT all) (VBN identified) (NNS nodes)) (VP (TO to) (VP (VB include) (NP (PRP$ their) (NNS subtrees))))))) (: ;) (S (NP (DT the) (NN result)) (VP (AUX is) (NP (NNP Y.) (# #) (VB Assign) (SBAR (S (NP (NNP N) (SYM =) (NP (NNP N) (CD op)) (NP (CD Y) (NNS *))) (VP (VBP Use) (NP (NP (DT the) (VBG resulting) (NN node)) (VP (VBN set) (NP (NNP N)))) (PP (IN as) (NP (DT a) (NN filter) (S (VP (TO to) (VP (VB select) (SBAR (WHNP (WDT which)) (S (NP (NP (NNS nodes)) (PP (IN from) (NP (DT the) (NN input) (NN node) (NN set)))) (VP (MD will) (VP (VB remain) (PP (IN in) (NP (DT the) (NN output) (NN node) (NN set))) (, ,) (PP (ADVP (RB just)) (IN as) (NP (DT the) (NNP XPath) (CD 1.0) (NN filter))))))))))))))))))) (. .)))
(S1 (S (NP (DT This)) (VP (AUX is) (ADJP (JJ tantamount) (PP (TO to) (NP (NP (NN intersection)) (PP (IN with) (NP (DT the) (NN input) (NN node) (NN set))))))) (. .)))
(S1 (S (NP (NNP *) (NNP Implementations)) (VP (MD SHOULD) (VP (VB note) (SBAR (IN that) (S (NP (NP (DT an) (JJ efficient) (NN realization)) (PP (IN of) (NP (DT this) (VB transform)))) (VP (MD will) (RB not) (VP (VB compute) (NP (NP (DT a) (NN node)) (VP (VBN set) (PP (IN at) (NP (NP (DT each) (NN point)) (PP (IN in) (S (S (NP (DT this)) (VP (VP (VB transform)) (, ,) (CC but) (VP (ADVP (RB instead)) (VB make) (NP (NP (DT a) (NN list)) (PP (IN of) (NP (NP (DT the) (NNS operations)) (CC and) (NP (DT the) (JJ XPath-selected) (NNS nodes)))))) (, ,) (CC and) (RB then) (VP (VB iterate) (PP (IN through) (NP (DT the) (NN input) (NN document))) (ADVP (RB once))))) (, ,) (PP (IN in) (NP (NN document) (NN order))) (, ,) (VP (VBG constructing) (NP (NP (DT a) (VBG filtering) (NN node)) (VP (VBN set) (NP (NNP N)) (PP (VBN based) (PP (IN upon) (NP (NP (DT the) (NNS operations)) (CC and) (NP (VBN selected) (NNS nodes)))))))))))))))))))) (. .)))
(S1 (S (NP (NNP *) (NNP Implementations)) (VP (MD SHOULD) (VP (VB note) (SBAR (IN that) (S (S (VP (VP (VBG iterating) (PP (IN through) (NP (DT the) (NN document)))) (CC and) (VP (VBG constructing) (NP (NP (DT a) (VBG filtering) (NN node)) (VP (VBN set) (NP (NNP N))))))) (VP (MD can))))))))
(S1 (S (VP (AUX be) (VP (ADVP (RB efficiently)) (VBN commingled) (PP (IN with) (NP (DT the) (NN canonicalization))))) (VP (VB transform) (SBAR (IN if) (S (NP (NN canonicalization)) (VP (AUX is) (VP (VBN performed) (ADVP (RB immediately)) (SBAR (IN after) (S (NP (DT this)) (VP (VB transform))))))))) (. .)))
(S1 (S (. .)))
(S1 (S (PP (IN With) (NP (DT this) (NN formulation))) (, ,) (NP (NN intersection) (CC and) (NN subtraction)) (VP (AUX are) (ADJP (JJ IDENTICAL) (PP (TO to) (NP (DT the) (VBG existing) (NN spec)))) (, ,) (PP (IN with) (S (NP (DT the) (JJ only) (NN change)) (VP (AUXG being) (SBAR (IN that) (S (NP (PRP you)) (VP (MD can) (VP (VB put) (NP (PRP them)) (PP (IN in) (NP (NP (CD one)) (VP (VB transform) (CC or) (VBN many.)))))))))))) (. .)))
(S1 (S (NP (NNP Union)) (VP (AUX is) (, ,) (ADVP (RB however)) (, ,) (ADJP (RB much) (JJ improved)) (PRN (-LRB- -LRB-) (PP (IN in) (NP (PRP$ my) (NN opinion))) (-RRB- -RRB-))) (. .)))
(S1 (S (NP (PRP You)) (VP (MD can) (ADVP (RB only)) (VP (VB use) (NP (PRP it)) (S (VP (TO to) (VP (VB include) (NP (NP (NNS nodes)) (SBAR (WHNP (WDT that)) (S (VP (MD would) (VP (AUX be) (VP (VBN removed) (PP (IN by) (NP (NP (DT a) (JJ previous) (NN operation)) (PP (IN in) (NP (DT the) (JJ same) (VB transform)))))))))))))))) (. .)))
(S1 (S (PP (IN As) (NP (DT a) (NN result))) (, ,) (NP (DT the) (NN output) (NN node) (NN set)) (VP (MD will) (ADVP (RB only)) (VP (VB include) (NP (NP (NNS nodes)) (PP (IN from) (NP (DT the) (NN input) (NN node) (NN set.)))))) (. .)))
(S1 (S (NP (NN Efficiency)) (VP (AUX is) (PP (IN as) (PP (IN with) (NP (DT the) (JJ current) (NN spec))))) (. .)))
(S1 (S (ADVP (RB Basically)) (NP (DT this)) (VP (VBZ fixes) (NP (NN union))) (. .)))
(S1 (S (S (NP (PRP I)) (VP (VBP write) (NP (DT this)) (ADVP (NP (DT a) (NN while)) (RB ago)))) (: ;) (S (VP (VBD thought) (SBAR (S (NP (PRP I)) (VP (MD 'd) (VP (VB send) (NP (PRP it)) (PP (RB rather) (IN than) (VP (VB delete) (NP (PRP it)))))))))) (. .)))
(S1 (S (NP (PRP It)) (VP (AUX 's) (ADVP (RB probably)) (ADJP (JJ wasteful)) (S (VP (TO to) (VP (VB propose) (NP (RB yet) (DT another) (NN option)))))) (. .)))
(S1 (NP (NNP Merlin)))
(S1 (S (NP (NNP Hi) (NNP Merlin)) (, ,) (ADVP (RB First)) (, ,) (NP (PRP I)) (VP (AUX do) (RB n't) (VP (VB think) (SBAR (IN that) (S (NP (PRP it)) (VP (AUX 's) (ADJP (`` ``) (JJ wasteful) ('' '')) (S (VP (TO to) (VP (VB propose) (NP (RB yet) (DT another) (NN option)))))))))) (. .)))
(S1 (S (NP (PRP It)) (VP (MD should) (RB n't) (VP (AUX be) (ADJP (RB too) (JJ late) (PP (IN for) (NP (JJ good) (NNS ideas)))))) (. .)))
(S1 (S (S (NP (NP (CD 1)) (: :) (NP (JJ Current) (NN spec)) (: :))) (: -) (S (NP (PRP I)) (VP (VBP agree) (S (PP (IN that) (S (S (NP (NP (DT the) (CD three) (NNS operations)) (PRN (-LRB- -LRB-) (NP (NN union/intersect/subtract)) (-RRB- -RRB-)) (PP (IN in) (NP (NN general)))) (VP (AUX are) (ADJP (JJ intuitive)))) (, ,) (CC but) (S (PRN (-LRB- -LRB-) (PP (IN for) (NP (PRP me))) (-RRB- -RRB-)) (, ,) (NP (PRP it)) (VP (AUX 's) (ADJP (RB absolutely) (JJ non-intuitive)) (SBAR (IN that) (S (NP (PRP I)) (VP (MD can) (VP (VB use) (NP (NN union)) (S (VP (TO to) (VP (VB include) (NP (NP (NNS nodes)) (SBAR (WHNP (WDT which)) (S (VP (AUX have) (RB not) (VP (AUX been) (PP (IN in) (NP (DT the) (NN input) (NN node) (NN set))) (PRN (-LRB- -LRB-) (SBAR (ADVP (RB even)) (IN if) (S (NP (PRP it)) (VP (AUX 's) (VP (VBN /possible/) (PP (IN from) (NP (DT the) (NNP XML) (NN Signature) (NN spec))))))) (-RRB- -RRB-))))))))))))))))))))) (. .)))
(S1 (S (: -) (NP (NP (CD One) (NN thing)) (SBAR (WHNP (WDT that)) (S (VP (VBZ makes) (S (NP (PDT all) (DT this)) (ADJP (NP (DT a) (JJ little) (NN bit)) (JJ confusing))))))) (VP (AUX is) (SBAR (IN that) (S (S (VP (VBG e.g.) (NP (NP (DT a) (NN union)) (PRN (-LRB- -LRB-) (NP (NNP /)) (-RRB- -RRB-))) (PP (IN as) (NP (JJ last) (NN step))))) (VP (VBZ destroys) (NP (NP (PDT all) (DT the) (NN selection) (NN work)) (PP (IN from) (NP (JJ previous) (NNS steps)))) (SBAR (IN because) (S (NP (PRP it)) (VP (VBZ includes) (NP (NN everything)) (ADVP (RB again))))))))) (. .)))
(S1 (NP (LST (LS 2)) (: :) (NP (PRP$ My) (NN spec)) (: :) (: -) (S (INTJ (UH Well)) (, ,) (PP (IN of) (NP (NN course))) (, ,) (PP (IN for) (NP (PRP me))) (, ,) (NP (PRP it)) (VP (AUX 's) (ADJP (JJ intuitive)))) (: ;) (S (LST (: -) (-RRB- -RRB-) (-RRB- -RRB-)) (: -) (NP (PRP It)) (VP (AUX has) (NP (DT a) (ADJP (RB nearly) (JJ constant)) (JJ runtime) (CD 3)))) (: :) (NP (NNP Merlins) (NN xfilter) (CD v2.1)) (: -) (S (SBAR (IN If) (S (NP (PRP I)) (VP (VBD understood) (NP (PRP it)) (ADVP (RB right))))) (, ,) (NP (PRP you)) (VP (VBP select) (SBAR (S (NP (NP (DT the) (JJ same) (NNS nodes)) (PP (IN from) (NP (DT the) (NN input) (NN *) (NN document)))) (VP (VBD *) (SBAR (IN as) (S (PP (IN in) (NP (CD v2.0))) (, ,) (CC but) (ADVP (RB then)) (NP (PRP you)) (VP (AUX do) (RB not) (VP (VP (NN output) (NP (DT the) (NN result)) (PP (IN as) (NP (NN result) (NN node)))) (CC but) (VP (VB use) (NP (PRP it)) (PP (IN as) (NP (NP (NN intersection) (NN mask)) (PP (IN with) (NP (DT the) (NN input) (NN node) (NN set))))))))))))))) (. .)))
(S1 (S (S (NP (JJ Multiple) ('' ') (NNS steps) ('' ')) (VP (MD can) (VP (AUX be) (VP (VBN combined) (PP (IN in) (NP (DT a) (JJ single) (NNS ds))))))) (: :) (S (VP (VB Transform))) (: -) (S (NP (DT That)) (VP (AUX 's) (ADJP (JJ good)) (, ,) (SBAR (IN because) (S (NP (PRP it)) (VP (AUX does) (SBAR (WHNP (WP what)) (S (NP (DT a) (NN /filter/)) (VP (AUX does))))))))) (. .)))
(S1 (S (NP (PRP It)) (VP (VBD cannot) (NP (NP (JJ re-include) (NNS nodes)) (SBAR (WHNP (WDT which)) (S (VP (AUX have) (ADVP (RB already)) (VP (AUX been) (VP (VBN excluded) (PP (IN in) (NP (NP (DT a) (JJ previous) (NNS ds)) (: :) (S (VP (VB Transform)))))))))))) (. .)))
(S1 (S (: -) (PP (IN As) (NP (DT a) (NN result))) (: :) (S (NP (PRP I)) (ADVP (RB REALLY)) (VP (VBP like) (NP (PRP it)))) (: --) (CC but) (S (NP (PRP I)) (VP (AUX do) (RB not) (VP (VB understand) (NP (DT the) (NN following))))) (: :)))
(S1 (SQ (AUX Does) (NP (DT this)) (VP (VB mean) (SBAR (IN that) (S (S (PP (VBN based) (PP (IN on) (NP (DT the) (NNS operations)))) (, ,) (NP (PRP you)) (VP (VBP make) (NP (DT some) (NN tree-labeling)))) (: ;) (S (LST (: -) (-RRB- -RRB-)) (-RRB- -RRB-) (CC and) (RB then) (NP (PRP you)) (VP (VBP make) (S (NP (CD one) (NN tree-traversal)) (VP (TO to) (VP (NN output) (NP (DT the) (VBN selected) (NNS nodes)))))))))) (. ?)))
(S1 (S (S (VP (VBZ Sounds) (ADJP (JJ cool)) (, ,) (PP (IN in) (NP (DT that) (NN case))))) (, ,) (NP (DT the) (NN efficiency)) (VP (MD would) (VP (AUX be) (ADJP (RB much) (JJR better)) (PP (IN then) (NP (NP (DT the) (JJ current) (NNS results)) (PP (IN of) (NP (CD v2.0))))))) (. .)))
(S1 (SBARQ (WHNP (WP What) (NN kind) (PP (IN of) (NP (NN algorithm)))) (SQ (AUX do) (NP (PRP you)) (VP (VP (VBP use) (PP (IN for))) (: -) (VP (VB make) (NP (NP (DT a) (NN list)) (PP (IN of) (NP (NP (NNS operations)) (CC and) (NP (JJ selected) (NNS nodes)) (, ,))))) (: -) (VP (VB decide) (PP (VBN based) (PP (IN on) (NP (NP (DT this) (NNS data)) (SBAR (WHNP (WDT which)) (S (NP (NNS nodes)) (VP (AUX are) (NP (DT the) (NN result))))))))))) (. .)))
(S1 (X (X (NP (NP (NNP Christian) (NN --On) (NNP Donnerstag)) (, ,) (VP (VBN 6.) (NP (NNP Juni) (CD 2002)))) (NP (QP (CD 01:09) (CD +0100))) (FW merlin) (FW merlin) (SYM @)) (NP (NN baltimore.ie))))
(S1 (NP (NP (NNP r/geuer-pollmann) (SYM @) (CD nue.et-inf.uni-siegen.de/2002.06.06/10)) (: :) (NP (CD 29:55))))
(S1 (S (INTJ (UH Yes)) (, ,) (CC but) (NP (DT this)) (VP (AUX is) (NP (NP (DT the) (JJ exact) (NN algorithm)) (SBAR (WHNP (WDT that)) (S (VP (VBZ implementations) (PP (IN of) (NP (DT the) (JJ _current_) (NN XPath))) (S (NP (NNP Filter) (CD 2.0)) (VP (VB transform) (NP (NN _should_) (NN use)) (SBAR (IN if) (S (NP (NP (DT a) (NN sequence)) (PP (IN of) (NP (DT the) (JJ current) (NN XPath) (NNP Filter) (CD 2.0)))) (VP (VBZ transforms) (NP (NNS precedes)) (ADVP (RB c14n)))))))))))) (. .)))
(S1 (S (NP (NP (DT This) (NN formulation)) (PP (IN of) (NP (DT the) (NN filter)))) (ADVP (RB simply)) (VP (VBZ makes) (S (NP (PRP it)) (ADJP (JJR easier)) (S (VP (TO to) (VP (VB express) (PP (IN in) (NP (NP (NNS terms)) (PP (IN of) (NP (NNP SHOULD) (NN language)))))))))) (. .)))
(S1 (S (SBAR (IN If) (S (NP (PRP you)) (VP (AUX 're) (VP (VBG asking) (PP (IN for) (NP (NP (DT a) (JJ normative) (NN algorithm)) (PP (IN for) (NP (DT the) (JJ general) (NN case))))))))) (, ,) (ADVP (RB then)) (NP (PRP I)) (VP (MD would) (VP (AUX have) (S (VP (TO to) (VP (VB think) (PP (IN for) (NP (DT a) (NN while)))))))) (. .)))
(S1 (FRAG (S (VP (VBG Restricting) (NP (PRP myself)) (ADVP (RB somewhat)))) (: :) (FRAG (ADJP (JJ First)) (, ,) (VP (VB let) (S (NP (PRP 's)) (VP (VB characterize) (NP (NP (DT a) (NN sequence)) (PP (IN of) (NP (NNS filters))))))) (: :) (NP (NNP Filter) (CD ::)) (S (NP (SYM =) (-LRB- -LRB-) (VP (VB INTERSECT) (S (NP (NNP |)) (VP (VB SUBTRACT) (NP (NNP |) (NNP UNION))))) (-RRB- -RRB-)) (VP (VBZ +) (SBAR (S (NP (PRP You)) (VP (MD will) (VP (VB observe) (SBAR (SBAR (IN that) (S (NP (JJ adjacent) (VB SUBTRACT) (CC and) (VB INTERSECT) (NNS operations)) (VP (MD can) (VP (AUX be) (VP (ADVP (RB idempotently)) (VBN reordered)))))) (, ,) (CC and) (SBAR (IN that) (S (NP (NP (JJ adjacent) (NNS operations)) (PP (IN of) (NP (DT the) (JJ same) (NN type)))) (VP (MD can) (VP (AUX be) (ADJP (RB computationally) (JJ merged)))))))))))))) (. .)))
(S1 (S (ADVP (RB However)) (, ,) (NP (PRP I)) (VP (MD would) (VP (VB expect) (S (NP (NP (DT that) (NN type)) (PP (IN of) (NP (NN thing)))) (VP (TO to) (VP (AUX be) (VP (AUX done) (PP (IN in) (NP (DT the) (NNP XPath) (NNS expressions))) (SBAR (IN so) (S (NP (PRP I)) (VP (MD will) (VP (VB ignore) (NP (DT this)))))))))))) (. .)))
(S1 (FRAG (S (VP (VBG Restricting) (NP (PRP myself)) (PP (TO to) (NP (NP (DT the) (JJ following) (NN production)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ captures) (SBAR (S (NP (NP (DT all) (NNS _common_)) (PRN (-LRB- -LRB-) (PP (IN in) (NP (PRP$ my) (NN opinion))) (-RRB- -RRB-))) (VP (VBP use) (NP (NNS cases)))))))))))) (: :) (NP (NNP SimpleFilter) (CD ::)) (X (SYM =)) (X (DT A)) (: :) (NP (NNP UNION) (CD *)) (-LRB- -LRB-) (NP (NNP B)) (: :) (NP (NP (NNP INTERSECT) (NNP |) (NNP C)) (: :) (NP (VB SUBTRACT) (-RRB- -RRB-) (NNP *) (NNP D)) (: :) (NP (NP (NNP UNION) (NNP *) (NNP Iterate)) (PP (IN over) (NP (DT the) (NN document))))) (. .)))
(S1 (S (-LRB- -LRB-) (VP (VB define) (PRN (-LRB- -LRB-) (JJ include-node) (-RRB- -RRB-))) (: ;) (: ;) (S (NP (NP (UCP (IN whether) (CC or) (S (RB not) (VP (TO to) (VP (VB include) (NP (NP (DT a) (NN node)) (PRN (-LRB- -LRB-) (JJ cond) (: ;) (: ;) (NP (NP (NNS returns)) (NP (DT the) (JJ first) (NN match) (PRN (-LRB- -LRB-) (-LRB- -LRB-) (NP (JJ encountered-any) (NNP D)) (-RRB- -RRB-)) (NNP t))) (-RRB- -RRB-)) (PRN (: ;) (: ;) (SBAR (IN if) (S (NP (PRP you)) (VP (AUX 've) (VP (VBN encountered) (NP (DT a) (NN node)) (PP (IN in) (NP (NP (DT a) (VBG trailing) (NN union)) (PRN (-LRB- -LRB-) (NP (PRN (-LRB- -LRB-) (NP (JJ encountered-any) (NNP C)) (-RRB- -RRB-)) (NN nil)) (-RRB- -RRB-)))))))) (: ;)) (: ;)) (SBAR (RB not) (IN if) (S (NP (PRP you)) (VP (AUX 've) (VP (VBN encountered) (NP (NP (DT a) (NN subtraction) (NN node)) (PRN (-LRB- -LRB-) (-LRB- -LRB-) (NP (NN null) (NNP B)) (-RRB- -RRB-))))))))))) (NNP t) (-RRB- -RRB-) (: ;) (: ;)) (PP (IN if) (NP (EX there))) (VP (AUX are) (NP (DT no) (JJ intersect) (NX (NP (NP (NNS operations)) (PRN (-LRB- -LRB-) (NP (PRN (-LRB- -LRB-) (NP (JJ encountered-all) (NN B)) (-RRB- -RRB-)) (NNP t)) (-RRB- -RRB-)) (: ;)) (: ;))) (PP (IN if) (NP (PRP you))))) (VP (AUX 've) (VP (VBN encountered) (NP (DT a) (NN node)) (PP (IN in) (NP (NP (DT each) (JJ intersect) (NN node) (NN set)) (PRN (-LRB- -LRB-) (NP (NNP t) (NN nil)) (-RRB- -RRB-) (-RRB- -RRB-) (-RRB- -RRB-))))))) (: ;) (: ;) (S (ADVP (RB not) (RB otherwise)) (VP (VBP Note) (SBAR (IN that) (S (NP (JJ encountered-any) (NNS returns)) (VP (VBP nil) (SBAR (IN if) (S (NP (PRP$ its) (NN parameter)) (VP (AUX is) (NP (NP (DT an) (JJ empty) (NN list)) (PP (IN of) (NP (JJ node) (NNS sets)))))))))))) (, ,) (CC but) (S (NP (NN encountered-all)) (VP (AUX is) (ADJP (JJ true)) (PP (IN in) (NP (DT this) (NN case))))) (. .)))
(S1 (S (NP (PRP We)) (VP (MD can) (ADVP (RB therefore)) (VP (VB express) (NP (NP (DT this) (NN concisely)) (: :) (S (PRN (-LRB- -LRB-) (S (VP (VB define) (NP (-LRB- -LRB-) (JJ include-node) (-RRB- -RRB-) (PRN (-LRB- -LRB-) (CC or) (-LRB- -LRB-) (NP (JJ encountered-any) (NNP D) (-RRB- -RRB-) (PRN (-LRB- -LRB-) (CC and) (PRN (-LRB- -LRB-) (RB not) (PRN (-LRB- -LRB-) (NP (JJ encountered-any) (NN C)) (-RRB- -RRB-)) (-RRB- -RRB-) (-LRB- -LRB-) (NP (JJ encountered-all) (NN B)) (-RRB- -RRB-)) (-RRB- -RRB-))) (-RRB- -RRB-))))) (-RRB- -RRB-)) (NP (PRP You)) (VP (MD can) (VP (VB implement) (ADJP (JJ encountered-foo) (CC and) (RB therefore) (JJ include-node)) (PP (ADVP (RB strictly)) (IN in) (NP (NP (NNS terms)) (PP (IN of) (NP (NP (NN node) (VBG labeling)) (, ,) (NP (DT a) (VB stack)) (CC and) (NP (NN iteration)))))))))))) (. .)))
(S1 (S (ADVP (RB Obviously)) (NP (PRP you)) (VP (MD must) (ADVP (RB also)) (VP (VB consider) (NP (DT the) (NN input) (NN node) (NN set)))) (. .)))
(S1 (S (S (VP (VBG Going) (PP (IN from) (NP (DT this))) (PP (TO to) (NP (DT a) (ADJP (RB fully) (JJ general)) (NN solution))))) (VP (AUX is) (ADJP (RB fairly) (JJ straightforward))) (. .)))
(S1 (S (S (VP (VBP Observe) (SBAR (SBAR (IN that) (S (NP (NNS UNIONs)) (VP (VP (AUX are) (ADJP (JJ subject) (PP (TO to) (NP (DT ALL) (JJ subsequent) (NN INTERSECT))))) (CC and) (VP (VB SUBTRACT) (NP (NP (NNS operations)) (, ,) (CC but) (NP (DT no) (JJ preceding) (NNS ones))))))) (, ,) (CC and) (SBAR (IN that) (S (NP (DT the) (JJ entire) (NN filter)) (VP (AUX is) (ADJP (JJ equivalent) (PP (TO to))))))))) (: :) (S (NP (NNP UNION/) (NNP Filter)) (NP (PRP I)) (VP (MD can) (ADVP (RB then)) (VP (VB say) (SBAR (IN that) (S (NP (DT a) (NN node)) (VP (AUX is) (VP (VBN included) (SBAR (IN if) (S (NP (PRP I)) (VP (AUX have) (VP (VBN encountered) (NP (DT a) (NN node)) (PP (IN in) (NP (DT ANY))) (PRN (-LRB- -LRB-) (S (NP (NP (NN UNION) (NN operation)) (CC AND) (NP (RB NOT) (DT ANY) (JJ SUBSEQUENT))) (VP (VB SUBTRACT) (NP (NP (NN operation)) (CC AND) (NP (DT ALL) (JJ SUBSEQUENT) (JJ INTERSECT) (NNS operations))))) (-RRB- -RRB-))))))))))))) (. .)))
(S1 (S (NP (NN Work)) (VP (AUX done) (S (VP (TO to) (VP (VB compute) (S (NP (DT this)) (VP (VP (AUX is) (ADJP (JJ proportional) (PP (TO to) (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NNS filters))))))) (CC but) (ADVP (RB only)) (VP (AUX done) (PP (IN at) (NP (DT a) (VBN labeled) (NN node)))))))))) (. .)))
(S1 (NP (NNP Merlin)))
