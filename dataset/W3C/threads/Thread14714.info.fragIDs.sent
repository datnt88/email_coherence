I don't understand what you mean. 
As I understand it, accesskey is a structure oriented towards navigation, that was unfortunately a bit under-specified (tabindex is like this, and map, although the very trivial problem with map was fixed in HTML 4.01). 
cheers Charles ?  
accesskey function is triggered, and it is a sensible arrangement. 
Explorer 
?  uses the Alt modifier, which of course is not available to DoCoMo whose ?  
browser typically runs on a mobile phone. 
Opera uses most keys 
already, so 
? Thinking about, the problem is really that access key is a presentational ? 
attribute that got left in. 
AG:: David has a point. 
AccessKey makes assumptions about the delivery environment in a way which is not fully device independent. 
This protocol is part of what should be reviewed before it moves forward in XHTML 2.0. 
If we're going to tell the DI people these things have to have 'hint' status, we should see to it that HTML plays by the rules. 
Or at least I haven't understood it if there is a coherent approach to the blending of input bindings. 
The device independent methods are "comeToMe" and/or "doMeImmediate" and the UI bindings for these methods have scopes and have to be blendable into the established environment of the delivery context. 
Al 
Charles McCathieNevile??? 
409 134 136 
W3C Web Accessibility Initiative???? Location: 21 Mitchell street FOOTSCRAY Vic 3011, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, 
France) 
OK, I think I get where you are at. 
As far as I can tell there is some value in being able to say "this thing is important enough to have a special trigger (either to get there, or to activate it)". 
The point is that if we rely on users being able to generate any character we are lost, and if we can't internationalise this we are still lost, and if we rely on a certain keyboard layout we are lost. 
So as far as I can tell this thing has to be a hint to work. 
Although it is a useful thing, and we would like it to work. 
In the meantime, if people use it, they can go for things that already work (seems like there are a handful of numbers) or can hope that it gets fixed and so use the spec as is. 
Charles AG:: David has a point. 
AccessKey makes assumptions about the delivery environment in a way which is not fully device independent. 
This protocol is part of what should be reviewed before it moves forward in XHTML 2.0. 
If we're going to tell the DI people these things have to have 'hint' status, we should see to it that HTML plays by the rules. 
Or at least I haven't understood it if there is a coherent approach to the blending of input bindings. 
The device independent methods are "comeToMe" and/or "doMeImmediate" and the UI bindings for these methods have scopes and have to be blendable into the established environment of the delivery context. 
CMN: In the meantime, if people use it, they can go for things that already work (seems like there are a handful of numbers) or can hope that it gets fixed and so use the spec as is. 
GJR: actually, the accesskey palette need not be limited to either alphabetic or numeric symbols/glyphs - it is possible to use character-entity codes for non-alpha-numeric characters, such as those widely deployed in programming/markup languages: at least, the at-sign (@), the pound/number-sign (#), the dash (-), equals signs (=), greater- and less-than signs, back- and forward-slashes, etc., some/many of which are available/prevalant on handheld devices (depends upon the device, naturally) in any event, i've attached a copy of a document that tests support for non-alphanumeric accesskeys - it is part of the implementation tests i marked up for UAAG - note that the test portion of the page is complete; it is only the preamble that is incomplete - please note as well that i didn't change the mailto link in the "How to Provide Feedback" section to point to the GL or xtech lists - it still points to the UA list, so exercise due caution when providing feedback from within the document... gregory. 
