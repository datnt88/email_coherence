I am not a supporter for using WAI defined classes for semantics, or for inventing special anchor names. 
In my view, if WAI wants to add semantics to HTML, it should propose new elements (or attributes) to extend HTML4.0. 
These elements should degrade gracefully to HTML4.0 browsers. 
E.g., a block level element NAVBAR with content %block; is fine with me. 
This is better than giving semantics to the class attribute in contradiction to the HTML spec. 
after people have been using it for more than two years, and accidentally may have used one of the WAI classes. 
With named anchors there is the same problems but also an additional one: When I write a website I choose the URLs and fragment identifiers to have some meaning in the human language of the document. 
It makes is easier to remember URLs or understand where links go to by looking at the status bar. 
That's one reason why XML allows ID to have non-ascii characters. 
If you define a recommended anchor name, in what language should it be written? 
Nir Dagan, Ph.D. "There is nothing quite so practical as a good theory." -- A. Einstein to follow up on what Nir Dagan said: What is the actual problem caused by these practices? 
The W3C is having trouble getting people to implement even all of what is in HTML4.0. 
If there is a reason to prefer one means of extension over another, we may find it by asking the people who would have to implement it what is easier for them. 
Where is the contradiction? 
CLASS was put in HTML4.0 specifically to be an extension mechanism, to support semantics not covered in the DTD. 
This is just the tip of the iceberg. 
In XML all semantics is after the fact, except for one very abstract inclusion tree and cross-reference via X-pointer. 
Yes, anchor names that are in the language of the document could be better. 
I think that we are debating how the examples are constructed anyway, not rigid presecriptions in guidelines. 
1. Define what it should mean 2. Translate this idiomatically into the [five?] 
core langauges used at the U.N. Offer all these as examples of good anchor names, not required. 
The requirement is to make logical starting points within the document easy destinations by the use of A[nchor] NAMEs. 
Supported by strategically defined examples like "start-reading," "&amp;agrave;-propos," etc. 
The growing edge would appear to be in XML appications, more than in adding features to HTML. 
We can benefit from reviewing what works in successful XML applications like the NISO Digital Talking Book application before drawing conclusions as to what extension techniques offer the greatest chance of success. 
Al to follow up on what Nir Dagan said: The HTML specification does not distinguish between authors and stylesheets as the originators of class definitions. 
Since the class attribute exists in an experimental HTML version published by the W3C shortly after CSS1 became recommendation, we can safely assume that every class name that can you think of has been used by many people for completely different author defined semantics. 
I doubt this. 
What is the incidence on the web today of CLASS= anything much less CLASS="nav"? 
I may have used class=nav to indicate a poem. 
If WAI decides that class=nav is defaulted by browsers to {speak:none} it is exactly the same as saying that from now on H1 should be defaulted by browsers to {display:table}, as getting all my poems not to be read is more or less as bad as displaying all my headings as tables. 
The proposal to reserve the "nav" value of CLASS for objects which are navigation aids does not include with it any default value of the ACSS 'speak' property. 
It is simply an attempt to get a consistent spelling adopted for this common page-structure notion. 
And your "exactly the same" is only looking at the formalities which capture a minority of what is really going on. 
We should look at what those structures are useful for, and actually used for, before seeing if this default is comparable to that default or not in its advisability. 
Any class name may have pre defined semantics in *existing particular documents*. 
Yes, I can see that there would be some actual damage to incumbent uses of tokens for which we suggest a community semantic. 
Authors who believed the W3C, assumed that browsers and users do not and never will set style rules for the author defined classes. 
In HTML4 and CSS2 the W3C made it clear that authors must write documents in the knowledge that their styling can be overridden by a user stylesheet. 
The WAI should be making it clear that authors should use community-based classes that will be already understood and handled in user stylesheets. 
Not making up new tokens where something close enough is already recognized by the community. 
Capricious or merely idiosyncratic use of classes is one of the major failure modes of the HTML+CSS architecture as an accessible technology. 
On the other hand if we say that the new HTML element NAVBAR may be defaulted to display:none in browsers, it is a problem of the author if he extended W3C recommendations to include this element to describe poems. 
This is because HTML states that authors should not extend the DTD by declaring new elements. 
In this sense if WAI says that browsers should safely assume that class=nav is a navigation bar, and skip them when spoken, WAI recommendations are backward imcompatible with HTML4.0, which allows class=nav to be anything that the author wanted, including a poem. 
It makes more sense to deprecate using CLASS="nav" for poems than to deprecate I and B , and the W3C has already taken that step. 
If you can show me three different authors who have used CLASS="nav" for something radically different from a navigation aid, we can look for a different token. 
Actually, if we had the muscle we should search the web with a thesaurus in hand and find out if anyone has already started using a CLASS mark for any semantic like this and jump on the bandwagon. 
Just formally endorse the best token in use today. 
Al Al says: "Where is the contradiction? 
CLASS was put in HTML4.0 specifically to be an extension mechanism, to support semantics not covered in the DTD. 
This is just the tip of the iceberg. 
In XML all semantics is after the fact, except for one very abstract inclusion tree and cross-reference via X-pointer." 
Class is an extention mechanism for author defined semantics. 
Class is not a mechanism that allows the W3C to extend HTML in a way that breaks existing documents. 
HTML spec. 
says authors can define any class for any purpose. 
Since the class attribute exists in an experimental HTML version published by the W3C shortly after CSS1 became recommendation, we can safely assume that every class name that can you think of has been used by many people for completely different author defined semantics. 
I may have used class=nav to indicate a poem. 
If WAI decides that class=nav is defaulted by browsers to {speak:none} it is exactly the same as saying that from now on H1 should be defaulted by browsers to {display:table}, as getting all my poems not to be read is more or less as bad as displaying all my headings as tables. 
Any class name may have pre defined semantics in *existing particular documents*. 
Authors who believed the W3C, assumed that browsers and users do not and never will set style rules for the author defined classes. 
On the other hand if we say that the new HTML element NAVBAR may be defaulted to display:none in browsers, it is a problem of the author if he extended W3C recommendations to include this element to describe poems. 
This is because HTML states that authors should not extend the DTD by declaring new elements. 
In regard to XML, its advantage is the you can create documents in a "modular" way using some *prespecified* semantics of different tag-sets (MathML, vector graphics, etc.), as well as some of the author's own, if needed. 
The fact that an author can use author defined set of tags without any universal meaning is useless because anything you can do with XML + stylesheets you can do with HTML + stylesheets using only the SPAN element with the class attribute. 
(as the SPAN element and class attribute have no predefined semantics). 
The advantage of XML is not that WAI says that I have to rewrite my website because the WAI decided that class=nav is a navigation bar after I, following HTML4.0, decided that it is poem. 
In this sense if WAI says that browsers should safely assume that class=nav is a navigation bar, and skip them when spoken, WAI recommendations are backward imcompatible with HTML4.0, which allows class=nav to be anything that the author wanted, including a poem. 
Nir Dagan, Ph.D. "There is nothing quite so practical as a good theory." -- A. Einstein Hmm. 
So when are you going to send us some of these poems? 
*smile* To the point: CLASS and REL are similar beasties. 
Both allow extension of semantics. 
REL has some values which are suggested by W3C (eg stylesheet) and probably lots which are introduced by people building their intranets out of HTML and fancy parsers. 
But where a REL value is widely accepted, this is a Good Thing (TM), as it allows for reproduceable functions to be added to HTML. 
If there were some (more or less) standard CLASS values then we could reuse stylesheets as well. 
But as Nir says, if we want to reserve values we need to give a long lead time. 
(Much as there is a long lead time before the reserved terms LONGDESC, OBJECT, etc are actually really useful.) In the case we are discussing, we are looking for a way to deal with clusters of links. the MAP element was designed to do so. 
In the transition from HTML 3.2 to HTML 4.0 it was made much better at it. 
In the next transition there may be a few more improvements (allow AREA and block-level content, make it block level?). 
At that point the WAI may wish to suggest that several CLASS values be 'reserved'. 
To allow browsers to set them as display:none would be more than I was happy with - I would prefer for defaults to simply shift them to the end of a page. 
But given the amount of lead time before any of this is likely to actually be implemented, the whole prospect does not concern me unduly. 
It is important that IF we look at this path then there is an onus on EO to ensure that this is well known, Internationally. 
An alternative would be to allow an attribute NAV to the element MAP. 
But it does seem redundant - MAPs made of AREAs don't have any initial rendering (although good things like lynx offer the possibility) and MAPs are collections of links - I find it hard to think of an example where this is not a navigation system. 
Not that that means it doesn't happen. 
So although in principle I think that we can reserve a CLASS value or two, in practice I do not see that it is necessary. 
Charles McCathieNevile All that is necessary is to indicate CLASS="nav" in the technique; then authors who implement the technique will use it, but it doesn't have any impact on HTML 4.0 as such. 
Quite simply, it becomes a widely used convention which default style sheets (or user-supplied style sheets) can follow, with confidence that authors who implement the technique will use it. 
MAP is an interesting alternative, but we are yet to be presented with evidence of how existing user agents treat block-level content in this context. 
On balance, I tend to prefer a conventional CLASS value, but I am obviously willing to be persuaded either way. 
MAP with block-level content is currently presented as if the MAP element were not there. 
The content is rendered, and the MAP is not related to the image. 
(I tested this with MSIE 4 and Netscape 4.07 and Lynx) Which is a minor problem for users. 
On the other hand, both browsers tolerate the technically incorrect construction of a MAP which has both AREAs and block-level content. 
They render the content, and associate the AREAs with the MAP. 
So I think it is OK to use MAP to cluster links, or to provide AREA-based imagemaps. 
I don't know if it violates the specification to have an imagemap which nothing refers to. 
I would like to see MAP allowed to carry both blocks and AREA simultaneously. 
And I think I would like to see it as a block-level element. 
(I am not sure of this one.) I would like to see UAs provide the content of A links in the same way as they provide the ALT-text of AREAs. 
And then I would be a happy camper, suggesting that everyone's CSS2-compliant browser be used with a stylesheet that does things which are appropriate to them with MAP and [USEMAP] and not worried about what classes they were. 
Otherwise I think we should revisit the idea of CLASS="nav", which I think is an inferior solution. 
cheers Charles McCathieNevile 
