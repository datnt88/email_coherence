In an attempt to unify the responses from MERGE and UPDATE, and to address the concerns some have expressed for parsing the responses of these methods, I propose that: (a) the DAV:ignore-set is dropped from the responses. 
What would you do with them anyway? 
Speak up if you have a use-case that requires these; and, (b) the response marshalling should be in the Multi-Status format so that implementations can reuse their existing code. 
I think the responses will fit well in this format. 
Note that (a) will simplify the protocol, and (b) will simplify the implementation without changing the semantics of the operations. 
They are relatively minor changes. 
Regards, Tim 
The concern about the complexity of the idiosyncratic response marshalling of MERGE and UPDATE responses has been raised in the past, and I agree with the approach that Tim describes below. 
Does anyone object? 
Cheers, Geoff In an attempt to unify the responses from MERGE and UPDATE, and to address the concerns some have expressed for parsing the responses of these methods, I propose that: (a) the DAV:ignore-set is dropped from the responses. 
What would you do with them anyway? 
Speak up if you have a use-case that requires these; and, (b) the response marshalling should be in the Multi-Status format so that implementations can reuse their existing code. 
I think the responses will fit well in this format. 
Note that (a) will simplify the protocol, and (b) will simplify the implementation without changing the semantics of the operations. 
They are relatively minor changes. 
Regards, Tim 
Tim, Good suggestion. 
I agree. 
"Tim Ellison" tim@peir.com 
Sent by: ietf-dav-versioning-request@w3.org 08/21/2001 05:25 PM Subject: MERGE &amp; UPDATE responses In an attempt to unify the responses from MERGE and UPDATE, and to address the concerns some have expressed for parsing the responses of these methods, I propose that: (a) the DAV:ignore-set is dropped from the responses. 
What would you do with them anyway? 
Speak up if you have a use-case that requires these; and, (b) the response marshalling should be in the Multi-Status format so that implementations can reuse their existing code. 
I think the responses will fit well in this format. 
Note that (a) will simplify the protocol, and (b) will simplify the implementation without changing the semantics of the operations. 
They are relatively minor changes. 
Regards, Tim 
