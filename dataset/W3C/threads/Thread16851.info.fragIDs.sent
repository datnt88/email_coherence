All- 
I wanted to get your opinions on what it really means for a page to be readable when style sheets are disabled. 
The popular notion is that 
this constraint means that when a page is disabled elements that are on the page should be visible to the user - so no black text on a black background. 
However that constraint would seem to more accurately fall 
under the sufficiency of text color contrast - a priority three item not a priority one item. 
As far as I can tell there are three broad cases when page content may not be "readable" with style sheets disabled. 
The first is when content 
is generated on the client side via style sheets such as with the 'background-image', 'list-style', or 'content' properties. 
The second 
is when structural content is communicated with formatting properties, 
such as 'border', 'border-width' and 'outline', instead of the appropriate structural markup. 
The third is when positioning 
information is used in the style sheet that causes the page linearization to be different than the visual read order of the page. 
Amongst these three cases, however, is not a case that says if font color reduces in contrast to an unreadable point than the page is "unreadable." 
Is this implicit or is a page considered readable as long as all the content is there? 
Further it is my understanding that readability with style sheets is a constraint to ensure that older browsers could access page content. 
Basically it forms a lowest common denominator to ensure accessibility of content -- Is this constraint still reasonable and valid given the current state of browsers and assistive technology? 
Thanks in advance for your opinions! 
If possible CC me directly on responses so that I can keep a record. 
Timothy Stephen Springer Director of Client Services 415.975.8036 timsp@ssbtechnologies.com 
Lost in the path to compliance with 508? 
Start on the Accessibility Path Today Assess Address Assure 
It's fundamental to the philosophy of HTML; content should not be communicated solely by presentation. 
XHTML 2.0 drafts have just been released, and the impression I get is that this tries to stress this separation even more. 
Also, Lynx, text to speech systems, PDAs, mobile phones, etc. don't support visual style sheets (a slight oversimplification for things like JAWS which actually don't support audio ones but can't represent visual information from the visual ones). 
Black and white printers don't fully support them on visual browsers. 
Also, I've had to disable browser colours after accessing sites with very poor colour contrasts and disable font sizes when unreasonably small absolute fonts are used, and I don't always turn them on again immediately. 
Also, a fundamental design principle for style sheets is that the user can completely override every aspect of them, so that the site cannot rely on their style sheet being used, even when style sheet logic is being used. 
Tim, 
As far colors go, I really don't think they should even be an issue. 
If you have experimented or developed to XHTML then the concept of color within your actual HTML document does not (should not?) exist, it must all be done via your CSS. 
Thus, with CSS removed the end result *should* be essentially black text on white (gray?) background, although this is generally up to the user agent/software owner. 
Some tools such as lynx will output black on 
grey, in the major contender browsers I believe the default colors re black and white, although they allow the owner to specify other combinations if they so choose. 
But if the style sheet support is removed, then color as defined by the content author is nullified. 
The Web Design Group (www.htmlhelp.com) 
offers a couple of little tools they call WiDGets which extend right-click functionality to IE 5+. 
One of the tools they offer disables style sheets; it's a tool I use all the time. 
(Note, it only disables linked or @import style sheets... in-line styles are not affected) JF 
hmmm, my LYNX default is (has always been) white on black Bob ASCII Ribbon Campaign accessBob NO HTML/PDF/RTF in e-mail accessys@smartnospam.net NO MSWord docs in e-mail Access Systems, engineers NO attachments in e-mail, *LINUX powered* access is a civil right THIS message and any attachments are CONFIDENTIAL and may be privileged. 
They are intended ONLY for the individual or entity named above. 
If you are not the intended recipient, Please notify the sender as soon as possible. 
Please DO NOT READ, COPY, USE, or DISCLOSE this communication to others and DELETE it from your computer systems. 
Thanks 
I think http://www.w3.org/TR/WCAG10-TECHS/#tech-order-style-sheets says it rather clearly, though implicitly: the page must make perfect sense without style sheets, and style sheets just add some suggested visual, aural, or other presentation style to it. 
A style sheets could suggest some particular way of making headings prominent, for example; you're still supposed to use markup that indicates headings as headings so that _any_ browser, with or without style sheets, can present them as headings. 
Is it? 
If you apply the recommended approach, purely structural markup and all presentational suggestions delegated to CSS, such problems don't arise at all. 
You're not saying anything about any colors, except in CSS. 
The most common case, which is getting more and more common I'm afraid, is the use of div , span , or non-HTML XML, relying on style sheets for "formatting", which is virtually always designed for visual on-screen presentation only. 
When the document lacks headings, paragraphs, emphasis, tables, and other structuring, it becomes plain text when presented without style sheets (or, more exactly, without obeying all of the author's style sheet). 
It could be even worse, of course; the text fragments might even be out of order. 
Background images cause problems only when displayed, unless they're abused in order to present actual content. 
The same applies to list style properties. 
Generated content is a problem if used to generate real content. 
The simple criterion is: disable style sheets and listen to the page. 
The second is when structural content is communicated with formatting 
properties, 
Yes, the relevant thing is "instead of the appropriate structural markup". 
It doesn't matter much what you say in CSS after deciding not to use appropriate structural markup. 
There are borderline cases, of course. 
There is, for example, no structural way (in HTML) of saying "this paragraph is less important than the main flow of content". 
Some people use "quasi-structutal markup" p small ... /small /p , with or without CSS, whereas others just use p class="..." ... /p with some CSS; it's hard to say which is better, or the lesser of evils. 
But a failure to indicate a paragraph as less important is hardly a _crucial_ matter in accessibility. 
The simple criterion is whether the page makes sense when read sequentially, ignoring style sheets. 
If you use CSS for, say, putting a "navigation menu" into the upper right corner, the real question is where it appears when CSS is not in use. 
Hopefully at the bottom. 
It might matter where is appears when CSS _is_ in use, since a screen reader might read the page by its visual appearance, intermixing the menu items with actual content; but I'd classify this as a user agent problem. 
No, it's _much_ more than that. 
Since virtually all authors who use style sheets write them for certain types of visual presentation only, it is sufficient for most purposes to ask: does your page sound good when read aloud, by a speech synthesizer (or a human being) that only looks at the markup, ignoring CSS? 
Jukka Korpela, senior adviser TIEKE Finnish Information Society Development Centre 
