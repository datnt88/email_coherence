hello. 
i use amaya 1.2a version. 
but it has many problem. 
i describe some of them. 
one is that accessing speed for internet is very slow. 
and one is that it do not support frame. 
and one is that its color is very strange, i tried to change color, but did not work properly. 
why? 
i want that developer of amaya repair these problems. 
as the last, i like amaya since it is first mathml browser. 
In-reply-to: Your message of Tue, 03 Feb 1998 12:36:33 +0900." 
This concerns the http implementation. 
Amaya uses the libwww http 1.1 implementation. 
I think that the access speed depends on the server protocol level. 
Do you know if this occurs with a specific server or if is it slow with all servers? 
Frames are not part of the strict HTML 4.0 DTD. 
We're internally discussing whether we have to support them or not. 
WAI people doesn't agree with this feature. 
On what platform Unix or Windows? 
Could you Irene. 
The HTTP/1.1 implementation is unlikely to be an issue; we don't believe there is any circumstance underwhich it should be slower than HTTP/1.0, and is generally faster. 
For some operations, HTTP/1.1 is very much faster than HTTP/1.0, and the libwww implementation is quite speedy (dunno the state of the Java implementation sometimes used). 
One way to see the effects of the protocol is to look a different servers, one that runs using 1.0 and one that uses 1.1; you'll generally see a speedup when talking to 1.1 servers. 
This is certainly the experience we're seeing from the Arena implementation that is being updated to 1.1. 
- Jim In our previous episode, Jim Gettys said: One situation in which HTTP/1.0 gives the illusion of being faster is when you use libwww to access an HTTP/1.0 server. 
The libwww implementation is ressource friendly. 
When accesing an HTTP/1.1 server, libwww opens a single connection per site, then feeds all the requests thru this connection (using Keep-Alive). 
When accessing an HTTP/1.0 server, libwww is still ressource friendly in that it only opens one connection per request to the server and will only open a new connection when the previous one has finished. 
If you compare this behavior with other browsers which open many parallel connections to the same server, of course Amaya/libwww will appear to be much more slower. 
Of course, opening parallel connections does have bad side-effects and that's one of the things what HTTP/1.1 tries to solve. 
So, what should we do with Amaya? 
Personally, I don't think it's efficient to downgrade and try to use parallel connections when talking with an HTTP/1.0 server. 
My position is that old servers should be upgraded: * most current implementations of the servers can now understand the Keep-Alive header. 
Many popular servers (e.g., Apache) now support HTTP/1.1 * browsers lag will be reduced. 
-Jose First, thank you for your answers. 
-----????????? ??????AAo----- ???????? ???c????: Irene VATTON Irene.Vatton@imag.fr 
??????A ???c????: Nova 1infi1@ppp.kornet.nm.kr AuA??: amaya www-amaya@w3.org 
???A???: 1998??a 4??u 23AI ??n??aAI ??AEA 3:51 A|??n: Re: problem of amaya I tested some servers. 
amaya accessed them a little quickly except one server. 
but amaya did not accessed my math bbs properly well. 
amaya accessed bbs and stopped and accessed and stopped. 
that is, amaya accessed bbs very slowly. 
some case is that amaya accessed bbs for a little time and stopped with a message "can't access server" but IE4.0 accessed my bbs very quickly. 
whY? 
Why? 
Why amaya access my bbs very slowly? 
how can i check my using server's http version? 
i don't know. 
my bbs's address is http://inhavision.inha.ac.kr/~s952011/wwwboard/index.cgi please visit my math bbs and then you will understand my word. 
give me a solution for this problem. 
i want to use my math bbs with amaya quickly. 
what is the meaning of this statement? 
i don't understand. 
i use win95 Hello, To check your server's HTTP version, just do a telnet to port 80, using the server's name. 
Then type in what should be send using the HTTP request (look at the HTTP standard or a book for more details :) : telnet inhavision.inha.ac.kr 80 Trying 165.246.10.162... Connected to inhavision.inha.ac.kr. 
Escape character is '^]'. 
GET /~s952011/wwwboard/index.cgi HTTP/1.1 Host: inhavision.inha.ac.kr Connection: Keep-Alive HTTP/1.0 200 OK Server: Netscape-Communications/1.12 Date: Monday, 04-May-98 12:30:08 GMT Content-type: text/html user: 0.1 system: 0.0166666666666667 Your server is an HTTP/1.0 one. 
In addition, it seems to be a rather old one. 
as it doesn't understand the keep-alive connection (maybe it's not well configured). 
About Amaya being slower than Netscape and IE... 
This may come from a combination of the way HTTP/1.1 works, the kind of document your server returns, and the way Amaya parses documents. 
As we pointed out before, Amaya uses libwww for its HTTP/1.1 implementation. 
This is a resource-friendly implementation in that only one connection is opened to a server at a time. 
Older versions of the above browsers (don't know if it's still the case with the latest ones), open multiple connections to the same browser. 
Under these conditions, Amaya is slower than other browsers when accessing an HTTP/1.0 server (and not using Keep-Alive). 
The document you're serving seems to be generated on the fly. 
I see this in that the server's response doesn't have a Content-Length header. 
The only way that the server may tell the client that it finished sending the document is by breaking down the connection. 
Thus, a new connection has to be set up. 
Finally, Amaya first downloads the complete document before starting to parse it. 
The other browsers do support an on-the-fly parsing of the document, so they can send requests for the images, before the document finished loading. 
In conclusion, because of the above points, Amaya is indeed slower than other browsers while accessing HTTP/1.0 servers. 
However, it's a testbed and our goal is to show the benefits you can gain from HTTP/1.1. 
It works much faster then. 
We could have implemented multiple connections on Amaya to have a better performance on HTTP/1.0. 
However, it consumes time to have two different behaviors on libwww and we prefered to invest our time on the HTTP/1.1 implementation. 
Hope this clears up things up, -Jose 
