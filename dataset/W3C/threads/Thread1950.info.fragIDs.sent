Last year, I made a study of how present mailers handled the combination of "Content-Type: multipart/alternative" with different "Content-Language" on each part. 
My conclusion was that this combination cannot in practice be used, since the recipient will be shown either only the first part, or only the last part, with both major mailer, irrespecitive of which language version the recipient actually preferred or was able to read. 
I then suggested to use "Content-Type: multipart/alternative" only when the parts differ in their Content-Type, and 
instead to use a new "Content-Type: multipart/choices" when 
the parts differ in other ways. 
I also suggested that "Content-Type: multipart/choices" should have the 'differences' parameter, as proposed in RFC 1766, mandatory, to avoid the same problem repeating itself in the future if new kinds of differences are used. 
In discussion of this in this mailing list mainly between February and June 2001, several people objected to the introduction of a new variant "Content-Type: choices" when the standards already had "Content-Type: alternative". 
Because of this, I have been thinking about alternatives to a new Content-Type, and which would still work acceptably with the installed base of mailers. 
Just saying that "Multipart/Alternative" should be used combined with "Content-Language" is *not* a viable solution, because it works so very badly with the installed base of mailers. 
Because of this, I have submitted a new version of draft-palme-e-mail-translation-03.txt which proposes a new solution to this problem. 
My new idea is to use "Multipart/alternative" but to have the following set of alternative content parts: (1) Plain text, all language versions concatenated within the text of one body part. 
(2) .. (n-1) The different language versions, one part for each language. 
(n) HTML, all language versions concatenated within the text of the body part, adding a "table of contents" at the top with a list of the languages and internal links to the part of the HTML with each language. 
I am sure people will not like this solution either. 
But those who do not like either of my solutions, should then propose a third solution which works also with the installed base of mailers. 
Proposing to use "Multipart/alternative" combined with one body part for each language will *never* work. 
No mailer will want to send a message in a format which will be misunderstood disastrously by most of the installed base of mailers. 
My new solutions has two disadvantages: It is not neat, and the text is copied three times. 
It has, however, a major advantage: It will work acceptably well with the installed base, and it will work best, of course, with mailers supporting the new standard. 
That the text is repeated three times is not a major problem since users will only see one of the parts, and bandwith is not expensive. 
That the solution is not neat is not a major advantage, it is a long tradition in IETF to prefer solutions which works to solutions which are neat. 
No one has said that encoding binary or 8-bit text as 7-bit text in MIME is neat. 
But it was chosen in order to work acceptably with the installed base of MTAs and MUAs. 
From: Internet-Drafts@ietf.org Reply-to: Internet-Drafts@ietf.org Subject: I-D ACTION:draft-palme-e-mail-translation-03.txt Date: Wed, 09 Jan 2002 16:05:40 -0500 Sender: scoya@cnri.reston.va.us 
A New Internet-Draft is available from the on-line Internet-Drafts directories. 
Title: Support for Language Translation in E-Mail and Netnews Author(s): J. Palme Filename: draft-palme-e-mail-translation-03.txt 
Pages: 7 Date: 08-Jan-02 This memo specifies extensions to e-mail and netnews standards, to allow for the submission of translations of messages, not only at initial submission time, but also at later time, and made by other translators than the original author of the message. 
Three new e-mail/netnews header fields are proposed, 'Content-Translation-Of', 'Content- Translator' and 'Translation-Request'. 
A URL for this Internet-Draft is: To remove yourself from the IETF Announcement list, send a message to ietf-announce-request with the word unsubscribe in the body of the message. 
Internet-Drafts are also available by anonymous FTP. 
Login with the username "anonymous" and a password of your e-mail address. 
After logging in, type "cd internet-drafts" and then "get draft-palme-e-mail-translation-03.txt". 
A list of Internet-Drafts directories can be found in or ftp://ftp.ietf.org/ietf/1shadow-sites.txt Internet-Drafts can also be obtained by e-mail. 
Send a message to: mailserv@ietf.org. 
In the body type: "FILE /internet-drafts/draft-palme-e-mail-translation-03.txt". 
NOTE:The mail server at ietf.org can return the document in MIME-encoded form by using the "mpack" utility. 
To use this feature, insert the command "ENCODING mime" before the "FILE" command. 
To decode the response(s), you will need "munpack" or a MIME-compliant mail reader. 
Different MIME-compliant mail readers exhibit different behavior, especially when dealing with "multipart" MIME messages (i.e. documents which have been split up into multiple messages), so check your local documentation on how to manipulate these messages. 
Below is the data which will enable a MIME compliant mail reader implementation to automatically retrieve the ASCII version of the Internet-Draft. 
[The following attachment must be fetched by mail. 
Command-click the URL below and send the resulting message to get the attachment.] 
mailto:mailserv@ietf.org?body=ENCODING%20mime%0D%0AFILE%20/internet-drafts/draft-palme-e-mail-translation-03.txt [The following attachment must be fetched by ftp. 
Command-click the URL below to ask your ftp client to fetch it.] 
ftp://ftp.ietf.org/internet-drafts/draft-palme-e-mail-translation-03.txt 
Jacob Palme jpalme@dsv.su.se (Stockholm University and KTH) for more info see URL: http://www.dsv.su.se/jpalme/ 
Concatinating makes it impossible for a computer to ever determine there are multiple languages present; we'll forever be stuck with this weakness, and will need some MIME-like device ("++boundary++" or suchlike) to separate the different languages. 
As the behavior of the concatinated text is the same as multipart/mixed (all parts of multipart/mixed have to 
be 'processed' or displayed to the user), how about using 
multipart/alternative as you have proposed, but using 
multipart/mixed as a sub-type for each language within the plain part, like this: Content-Type: multipart/alternative; boundary=ABC --ABC content-type: multipart/mixed; boundary=HHH --HHH content-type: text/plain content-language: english 
Good day. 
--HHH content-type: text/plain content-language: german Guten Tag. 
--HHH-- However, I don't know how mailers respond to multipart/mixed embedded inside multipart/alternative. 
As nested MIME parts aren't common, some mailers may puke on this. 
Concatinating makes it difficult/impossible to write a parser that could pull out individual languages. 
But there isn't a way in HTML to reliably get at other 'attachments'... Hm, I can't think of a different way to do this. 
-d 
From: Internet-Drafts@ietf.org Reply-to: Internet-Drafts@ietf.org Subject: I-D ACTION:draft-palme-e-mail-translation-03.txt Date: Wed, 09 Jan 2002 16:05:40 -0500 Sender: scoya@cnri.reston.va.us 
A New Internet-Draft is available from the on-line Internet-Drafts directories. 
Title: Support for Language Translation in E-Mail and Netnews Author(s): J. Palme Filename: draft-palme-e-mail-translation-03.txt 
Pages: 7 Date: 08-Jan-02 This memo specifies extensions to e-mail and netnews standards, to allow for the submission of translations of messages, not only at initial submission time, but also at later time, and made by other translators than the original author of the message. 
Three new e-mail/netnews header fields are proposed, 'Content-Translation-Of', 'Content- Translator' and 'Translation-Request'. 
A URL for this Internet-Draft is: To remove yourself from the IETF Announcement list, send a message to ietf-announce-request with the word unsubscribe in the body of 
the message. 
Internet-Drafts are also available by anonymous FTP. 
Login with 
the username 
"anonymous" and a password of your e-mail address. 
After logging in, type "cd internet-drafts" and then "get draft-palme-e-mail-translation-03.txt". 
A list of Internet-Drafts directories can be found in or ftp://ftp.ietf.org/ietf/1shadow-sites.txt Internet-Drafts can also be obtained by e-mail. 
Send a message to: mailserv@ietf.org. 
In the body type: "FILE /internet-drafts/draft-palme-e-mail-translation-03.txt". 
NOTE:The mail server at ietf.org can return the document in MIME-encoded form by using the "mpack" utility. 
To use this feature, insert the command "ENCODING mime" before the "FILE" command. 
To decode the response(s), you will need "munpack" or a MIME-compliant mail reader. 
Different MIME-compliant mail readers exhibit different behavior, especially when dealing with "multipart" MIME messages (i.e. documents which have been split up into multiple messages), so check your local documentation on how to manipulate these messages. 
Below is the data which will enable a MIME compliant mail reader implementation to automatically retrieve the ASCII version of the Internet-Draft. 
[The following attachment must be fetched by mail. 
Command-click the URL below and send the resulting message to get the attachment.] 
mailto:mailserv@ietf.org?body=ENCODING%20mime%0D%0AFILE%20/intern 
et-drafts/draft-palme-e-mail-translation-03.txt 
[The following attachment must be fetched by ftp. 
Command-click the URL below to ask your ftp client to fetch it.] 
ftp://ftp.ietf.org/internet-drafts/draft-palme-e-mail-translation-03.txt 
Jacob Palme jpalme@dsv.su.se (Stockholm University and KTH) for more info see URL: http://www.dsv.su.se/jpalme/ 
the correct answer is to use multipart/alternative. 
even if current UAs don't support it, they don't support any other language selection mechanism either. 
either the UAs will evolve to support language selection via multipart/alternative, or they won't - but that's not within IETF"s control. 
Keith 
Do you mean multipart/alternative with one body part for each language? 
I do not think that is feasible, if you check how present mail UAs handle this. 
Most people 
would get only the first or the last alternative, quit independently of which language they actually can read. 
My proposal with multipart/alternative, but with an extra body part first and last in the multipart/alternative, was an attempt at accomodating your wish to use multipart/alternative, and still get something wich works acceptably when received by today's mail UAs. 
Jacob Palme jpalme@dsv.su.se (Stockholm University and KTH) for more info see URL: http://www.dsv.su.se/jpalme/ 
Well, what I suggested was a separate body part for each language in the middle of the multipart/alternative. 
It was only the first and the last body part which would contain concatenated 
translations in different languages. 
If this becomes a standard, mailers which support the standard, and know their users' language preferences, will select one of the middle body parts. 
They will then have no problem selected the right language. 
The concatenation of all the languages was only meant for those mailers which did not have any capability of selecting alternative based on Content-Language. 
Since many mail UAs will work like this for a long time in the future, the standard must propose a format which works for their users. 
Jacob Palme jpalme@dsv.su.se (Stockholm University and KTH) for more info see URL: http://www.dsv.su.se/jpalme/ 
how present mail UAs handle this is irrelevant, because they don't handle any other scheme for language selection either. 
the only question for IETF is - what's the best way to do this in MIME protocol? 
and nobody has come up with a better alternative (so to speak) than multipart/alternative. 
Keith 
When the MIME standard was introduced, the handling by present mail was central in the design of mail. 
For example, 
the QUOTED-PRINTABLE format was chosen, because messages encoded in this format would be at least partly readable for recipients with old mailers. 
Why should not a graceful downgrading to existing mailers be important for language translation in e-mail, when it was so very important in the design of MIME itself? 
Jacob Palme jpalme@dsv.su.se (Stockholm University and KTH) for more info see URL: http://www.dsv.su.se/jpalme/ 
yes, to a point. 
In particular, MIME was designed to allow plain-text portions of MIME messages to be readable by existing UAs that could read plain-text RFC 822 messages. 
This also influenced the default behavior of multipart/alternative, in order to allow a plain-text alternative to be viewable on an RFC 822 UA without the recipient having to skip over several screenfuls of base64-encoded material. 
But MIME didn't attempt to provide new features in existing user agents. 
First of all, the primary reason for including encodings in MIME was to insure backwards compatibility with deployed messaging _standards_, not deployed messaging _systems_. 
It is one thing to avoid breaking implementations coded in good faith to the standards of the time, it is quite another thing to attempt to cater to implementations that weren't coded very well to begin with. 
Second, in the case of quoted-printable, we also attempted to finesse the backwards compatibility issue somewhat by defing an encoding that would be partly readable. 
However, this attempt was, in retrospect, a nearly complete failure. 
In hindsight, it may have been more trouble than it was worth. 
In summary, you win few if any points in this debate by comparing what you're proposing to quoted-printable. 
See above -- the comparison isn't as apt as you seem to think, and even if it were apt you're basically saying we should repeat something that didn't work the first time. 
An additional point. 
The pent up demand for MIME in the early 90s was enormous. 
A standardized message format for internationalized text and material other than text was urgently needed. 
This more than anything else drove the deployment of MIME support, and even then deployment was pretty slow. 
By contrast, the demand for language translation support in email is minimal at best. 
I know it is something you want very badly, but how many other people want it? 
Uptake of other MIME enhancements or extensions that require substantial UA changes has been sporadic at best, and seems largely related to the perceived needs of the vendors themselves, not a desire for full standards compliance. 
Because of this I fear that any proposal you make (other than one where you 
simply use multipart/mixed rather than multipart/alternative) is going to suffer the same fate as the attempt to use content-language fields to select between alternative parts. 
Simply put, while what you are doing is arguably a legitimate standards exercise, I see little chance of change in the real world because of it. 
There are, however, two alternate approaches that immediately come to mind that might work better: (1) Do some coding work yourself. 
There are plenty of open source UAs in use today and several other UAs provide hooks for extensibility. 
Have you tried coding honest to goodness alternative language support for these? 
Doing so and proving the value of such capabilities might help your cause. 
(Several MIME compliant mail systems were released at the same time the MIME RFCs came out. 
This helped enormously in getting MIME started.) 
(2) Work the problem from the other end. 
Efforts are under way to develop and deploy facilities for determining the recipient characteristics and sending messages that match those characteristics. 
I don't know if these efforts are going to be successful, but if they are and language selection is included in the initial rollout you might get something deployed, albeit vicariously. 
There are probably others, not to mention variants on these themes. 
Sometimes the way to win is not to play. 
Ned 
Not quite true. 
Quoted-Printable allows existing user agents to display in a partly readable format messages in a new format. 
This is the same thing which I am trying to do - define multi-lingual messages in a format which will be displayed in a readable format in existing user agents. 
Jacob Palme jpalme@dsv.su.se (Stockholm University and KTH) for more info see URL: http://www.dsv.su.se/jpalme/ 
I do not agree. 
Quoted-printable was not a complete failure, and my proposed solution for multi-lingual messages does not have the problem which quoted-printable has. 
Messages will be quite readable, with the format I propose, for old mail clients. 
The only disadvantage is that the UA will not automatically select the language preferred by the user. 
All the more reason to define multi-lingual messaging in a way which works nicely with existing mailers. 
In that way, multi-lingual messaging can come gradually, first some senders implementing the new format, then, if this becomes more common, some receiving UA software will maybe also handle the new format. 
Using only multipart/alternative combined with content-language will not co-work nicely with existing receiving UA software, and thus has much less chance of ever being used by anyone. 
I intend to do this if I can get the necessary funding. 
I am trying to apply for funding money, have not got it yet. 
However, if I do get funding, it would be better if I implement something which is acceptable to the standards-making community as a new standard. 
That is why I am discussing this issue in this mailing list at this time - to find out which solution is acceptable. 
I have suggested two alternative solutions: (a) multipart/choices. 
(b) multipart/alternative, with an additional first and last body part containing a concatenation of all the translations. 
(c) A third alternative, possibly the intention of existing standards, would be just multipart/alternative with one body part in each language. 
This third alternative will only work if all recipients are using a mailer which supports the new format. 
(d) A fourth alternative, a variant of (a), is to use multipart/mixed. 
If I do get the money, should I then implement (a), (b), (c) or (d). 
I am not very happy with (c), because it downgrades so badly with existing mailers. 
(d) is a possibility, but what is its advantages compared to (c). 
Since the MIME standard says that un-known subtypes to multipart should be handled as multipart/mixed, (c) has advantages but no disadvantages compared to (d). 
Maybe. E-mail already has a facility for sending a message in different formats to different recipients. 
This is the "Bcc" header. 
But most existing mailers, I believe, does 
not implement this by actually sending different messages to different recipients. 
Instead, they only send a single message, with no Bcc content to any of the recipients. 
(Which is allowed by the standards, but still not a full implementation of Bcc.) 
Another disadvantage with sending only one language version to each recipient is that some recipients may want a message in more than one translation. 
They may, for example, want to check if the translation was OK, and, if not, maybe want to submit their own translation. 
Especially if the original translation was made by a machine, this might be a reasonable need. 
Of course, a registry system could allow such people to register that they want a message in more than one language. 
This will however only work if such people have a mailer supporting the combination of multipart/alternative with content-language. 
Jacob Palme jpalme@dsv.su.se (Stockholm University and KTH) for more info see URL: http://www.dsv.su.se/jpalme/ 
Not a complete failure, perhaps, but a partial failure nevertheless. 
And your assertion that what you propose is "quite readable" is following the exact same line of reasoning that led to quoted-printable, which makes me very nervous. 
That's a fine goal if you can come up with a proposal that achieves it. 
I don't think you have done so thus far. 
And this is basically my point: I think you're setting your sights on something that isn't achievable. 
And that's why you're flailing around. 
Unfortunately, the whole space MIME operates in is filled with compromises, some of which are quite painful. 
You need to be prepared to make very painful compromises. 
As I've said before, I suspect you're going to find that this works even less well with existing mailers than multipart/alternative. 
This is the same sort of solution as quoted-printable, and while you may not be willing to admit it, experience has shown that there's a real downside to this approach. 
Please note that I'm not saying that you should avoid this approach. 
What I'm saying is that you shouldn't look at quoted-printable as justification for using this approach. 
Instead you should look at quoted-printable and try to learn what can go wrong from that experience. 
One other point to consider is that software that supports (b) will support (c) trivially. 
As such, it may make sense to try (b) but plan to cut over to (c) if the need arises. 
I strongly recommend that you stay away from (a). 
You're a bit confused here. 
The bcc field has nothing to do with sending messages in different formats. 
The bcc facility in some UAs may end up sending slightly different messages to different recipients, but that's an effect of the UA's interpretation of bcc semantics, nothing more. 
I haven't done any sort of survey of clients, but I get a lot of bcc's, and most of them are separate messages with slightly different content. 
Sounds to me like you're now optimizing for the very uncommon case. 
This is the sort of thing you really need to avoid. 
Ned 
Receiving a message in multiple language versions, concatenated after each other in a single body part, and with an index of languages at the top, will surely be readable. 
This is what I have done manually a few times, when I have had the need to send messages to people, some of which are in France, a country where people are proud to claim they cannot understand English. 
Yes, that is very reasonable. 
If we start with (b) (multipart/alternative with two additional body parts first and last with all the language versions concatenated) then we can of course hope for a possible future where the additional body parts first and last are not needed any more (c). 
Jacob Palme jpalme@dsv.su.se (Stockholm University and KTH) for more info see URL: http://www.dsv.su.se/jpalme/ 
--On Thursday, January 17, 2002 11:21 AM +0100 Jacob Palme 
I have another suggestion here based on the MIME pre-amble text you sometimes see at the top of MIME messages which is an indicator that your client does not support MIME. 
Do what you suggestion above, but instead of making the special first and last parts a concatenation of each translation, use some descriptive text in each of the languages of the other parts explaining that this is a multi-lingual alternative MIME message, e.g. (for English): This message has been written in different languages. 
If you see this text then your client is not able to automatically select the part of the message corresponding to your chosen language. 
You will need to select that part by-hand. 
Clients that knew about this new format could auto-select the appropriate tagged part and display that. 
Clients that didn't know about this would likely present the first or last part with the descriptive text. 
The benefits of this are: 1) The descriptive text in the first and last parts will likely be much 
smaller than the concatenation of the actual multi-lingual parts. 
2) Users that see this special message will likely get annoyed by it over time and put pressure on their client vendor to have it auto-select the appropriate part. 
Cyrus Daboo 
Jacob, I think there are two separate problems here that should not be combined: 1. 
If you are trying to send out multi-lingual text to today's user agents, naturally you need to choose whatever format you think is most compatible with the user agents used by the recipients of those messages. 
2. If we want to standardize a MIME format for sending out multi-lingual text, then we would need to pick a format that met the criteria for standards-track documents: no known technical omissions, etc. 
As a practical matter, we would also want reason to believe that at least some UA vendors (whether commercial or not) were likely to implement that format. 
It's quite reasonable to ask which representation of the messages would work best for purpose #1. 
That doesn't mean, however, that such a representation would meet the quality for standards-track documents or that vendors would implement it. 
Keith 
I do not think this will work. 
When I tested sending multipart/alternative with different languages in different body parts, then most existing mailers just showed either the first or the last body part, without even telling me that there were any other body parts, or giving me any option to select a particular body part. 
Because of this, my conclusion is that if you use multipart/alternative with different languages in different body parts, then the first and the last body parts must both of them contain a concatenation of all the languages. 
Did I correctly understand your proposal? 
Jacob Palme jpalme@dsv.su.se (Stockholm University and KTH) for more info see URL: http://www.dsv.su.se/jpalme/ 
I believe that the first implementations will be a few vendors who provide *sending* of messages in multiple languages. 
For example, SYSTRAN might develop and market a translation agent, which a company can install, and which will, at the request of their users, forward a message with machine translations to different target languages. 
Or SYSTRAN might set up such a service on their own servers, which will receive mail in one language and forward it in multiple languages. 
If the above service becomes successful and much used, then as a second step one might expect existing vendors of receiving mailers to be able to select the right body part dependent on the user's preferences. 
Because I expect that senders will implement the new standard before recipients, it is very important that the standard works well for receiving mail UAs which do not yet support the standard. 
A good standard should of course support both your choices #1 and #2. 
Using multipart/alternative has the advantage, that in some far future, when all receiving UAs will support this, one can omit the extra body part at the start and end of the messages, and thus get the neat solution which one would prefer in a standard. 
Jacob Palme jpalme@dsv.su.se (Stockholm University and KTH) for more info see URL: http://www.dsv.su.se/jpalme/ 
A good standard should of course support both your choices #1 and #2. 
actually, I would argue that in this case the two are mutually exclusive. 
Keith 
