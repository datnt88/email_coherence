<s> I would like what criterion you use for the choice the accesskey.  </s>
<s> Is it important to avoid the accesskey coincide with the browser's  </s>
<s> accesskeys? Yes, it is important to avoid conflicts with the browser's shortcut keys.  </s>
<s> If there are conflicts, anybody who uses keyboard only techniques to access menus -- including people who are blind, have low vision, or certain mobility impairments -- will get very frustrated!  </s>
<s> In general, you can choose as accesskeys any letter or number that is NOT used by any of the major graphic-based browsers.  </s>
<s> For example, you should avoid Alt +F, E, H because these keystroke combinations are almost universally used for File, Edit, and Help respectively.  </s>
<s> If you check all of the recent versions of all of the major browsers, you may find that the set of available accesskeys is quite small.  </s>
<s> There may be an additional complication that can arise from using accesskeys.  </s>
<s> However, this is pure speculation; I don't know for certain.  </s>
<s> Certain access applications may use Alt key combinations that could conflict with accesskeys.  </s>
<s> I can't think of any such programs off the top of my head, but perhaps other readers on this list may know of screen readers or text enhancers or other assistive technologies that appropriate unusual Alt key combinations to perform particular tasks.  </s>
<s> (My guess is that a few Windows-based assistive technologies would use the Alt key as a modifier.) Alan Alan Cantor Cantor + Associates Workplace Accommodation Consultants acantor@interlog.com  </s>
<s> www.interlog.com/~acantor  </s>
<s> Hello.  </s>
<s> I would like what criterion you use for the choice the accesskey.  </s>
<s> Is it important to avoid the accesskey coincide with the browser's accesskeys?  </s>
<s> Thank in advance.  </s>
<s> Ricardo  </s>
<s> aloha, ricardo!  </s>
<s> in october, i was asked to summarize the problems posed by ACCESSKEY, as it is defined in HTML4, for the User Agent Guidelines Working Group... my summary, which includes suggestions for avoiding the known problems with ACCESSKEY, can be found at: before you implement ACCESSKEY (an i _do_ encourage you to do so), there are a few things that you should know about the current state of support for ACCESSKEY, and some of the reasons why it has not yet been fully (or extensively) supported by browsers, despite the fact that acceleration keys such as those which the author can supply via the ACCESSKEY in HTML4, are not only the keystone of direct (versus serial) access for any user interface that supports direct access, but the very principle upon which a lot of adaptive technology for persons with motor impairments is based... to my knowledge (and i would be overjoyed if i were to be proved mistaken), there is currently only 1 browser which supports ACCESSKEY -- MSIE, versions 4.01 and 5, and both versions of IE do so in different ways... MSIE5 (running on the Windows platform) uses the ALT key as the ACCESSKEY trigger, which means that you need to hold down the ALT key while typing the ACCESSKEY defined for an element, in order to move focus to the element for which the ACCESSKEY has been defined... the choice of the ALT key as the triggering mechanism for ACCESSKEY does lead to conflicts with some standard Windows keybindings -- particularly, the ALT+F (open File menu) and ALT+H (open Help menu), but all of the other menu items that are addressable using ALT key combinations in IE5 -- such as ALT+E (opens the Edit menu), ALT+V (opens the View menu), ALT+A (opens the fAvorites menu), and ALT+T (opens the Tools menu) -- do _not_ cause such conflicts... looking at the issue from a broader perspective, part of the problem posed by ACCESSKEY, as defined in the HTML4 spec, is that there is no normatively defined action that a user agent _must_ perform upon the invocation of an ACCESSKEY... this is one of the areas where the HTML4 spec is excruciatingly vague -- quote when a user activates a link defined by the A element, the user agent generally follows the link.  </s>
<s> unquote -- so, while HTML4 doesn't explicitly forbid the UA from only moving the focus or system caret to the element in which the ACCESSKEY is defined when the ACCESSKEY is invoked, there is a reasonable expectation that the UA should activate the element when it's ACCESSKEY is invoked... the need for uniform action upon invocation is an issue which i have raised in several WAI forums, as the user needs to know what to expect when he or she invokes an ACCESSKEY -- will the focus be moved to the element for which an ACCESSKEY has been defined, or will activation of an ACCESSKEY cause the element for which the ACCESSKEY has been defined to be activated (i.e. the link followed or the form control toggled)?  </s>
<s> personally, i would like the resolution of this question left to the user -- what happens when an ACCESSKEY is triggered should not only be configurable (i.e. move focus to the element for which the ACCESSKEY has been defined or activate the element for which the ACCESSKEY has been defined), but changeable on-the-fly, as there are cases where one would want to simply refocus the user agent's point-of-regard upon the element for which the ACCESSKEY has been defined, and there are cases where one would want the element activated... it would also be of immeasurable benefit if the user agent allowed the user to define the triggering mechanism used to invoke an ACCESSKEY i have implemented an informal mini-test-bed for ACCESSKEY, illustrating its use by reformatting 2 existing hypertext forms so that they (a) are more accessible, by virtue of implementing several of the accessibility features built into HTML4; (b) illustrate the power and limitations of the current implementation of ACCESSKEY; and (c) illustrate what i believe is a necessary authoring practice when one uses ACCESSKEY -- the provision of a list of the ACCESSKEYs for a document... the forms are located at: Search Recording for the Blind &amp; Dyslexic's Catalog Universally Accessible RealAudio Download Form i also implemented ACCESSKEY in the conformance evaluation of HomeSite 4.01 that i performed for the Authoring Tools Working Group in my evaluation, i defined an ACCESSKEY for each guideline, so that the ACCESSKEY for guideline 1, is 1; the ACCESSKEY for guideline 2 is 2; and so on, through Guideline 7, the ACCESSKEY for which is 7... in addition, there are ACCESSKEYs defined for the Table of Contents (C) and the List of Guidelines (G) i should point out that -- due to faulty implementation on the part of IE -- none of the ACCESSKEYs defined for the conformance evaluation work when the page is rendered using IE5, despite the fact that the page validates against the W3C Validation Service as valid HTML4... the problem seems to lie in the fact that i defined the ACCESSKEYs in name anchors (i.e. a HTML4 DTD... IE also has difficulty with ACCESSKEYs when they are defined for the AREA element -- something which is also permissible, according to HTML4... here are some supplemental references for you to investigate: 1. definition of ACCESSKEY in the HTML4 Recommendation: 2. my summation of the ACCESSKEY issue for the User Agent mailing list: 3. my thinking-out-loud about ACCESSKEY post to the member-confidential PF list: http://lists.w3.org/Archives/Member/w3c-wai-pf/1999OctDec/0065.html 4. my post to w3c-wai-ua on the irrelevance of the source of User Interface (UI) controls 5. Keyboard Control section of the User Interface for CSS3 Working Draft 6. list of threads related to this issue that transpired on the User Agent Working Group's Mailing List w3c-wai-ua@w3.org : and, finally, a bit of redundant advice: if you define ACCESSKEYs for a document, provide a link to a list of the ACCESSKEYs which you have defined -- ACCESSKEYs (no matter how they are activated) are useless if the user doesn't know that they exist; therefore, the user needs to be able to obtain a list of the ACCESSKEYs which have been defined for the document... i hope that this very brief summary of some of the issues relating to ACCESSKEY, and the pointers to pertinent references, is of assistance to you... gregory.  </s>
<s> He that lives on Hope, dies farting -- Benjamin Franklin, Poor Richard's Almanack, 1763 Gregory J. Rosmaita unagi69@concentric.net  </s>
<s> WebMaster and Minister of Propaganda, VICUG NYC  </s>
<s> It is a goo idea to avoid browser controls if possible.  </s>
<s> But it is not possible to know what the controls are on every browser, so to implement accesskey properly a browser should ensure that an element with an accesskey attribute can be accessed directly, and should have a way for the user to know how to access that element.  </s>
<s> For example, if an element has accesskey Q, one browser might make the q key go to that element, another might mak it alt-q, and another might already use those keys, so make it alt-3.  </s>
<s> In each case, only the browser knows what the accesskey is, so it must tell the user.  </s>
<s> As a more complex example, there is no key on my keyboard for the japanese character "Kuchi" although that is a legitimate character for an accesskey.  </s>
<s> So my browser will have to use a different key, and tell me how I use that.  </s>
<s> As another complex example, a mobile phone browser may take the items that have an accesskey and make a separate "tabbing order" so I press the * key and then tab through the things that have accesskeys.  </s>
<s> Again, the browser knows what it will do, but the author doesn't.  </s>
<s> Charles McCN Hello.  </s>
<s> I would like what criterion you use for the choice the accesskey.  </s>
<s> Is it important to avoid the accesskey coincide with the browser's accesskeys?  </s>
<s> Thank in advance.  </s>
<s> Ricardo W3C Web Accessibility Initiative http://www.w3.org/WAI 21 Mitchell Street, Footscray, VIC 3011, Australia (I've moved!)  </s>
