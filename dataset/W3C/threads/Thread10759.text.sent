The SGML ERB met Wed. 
Oct 16th and voted on several items already submitted to the SGML WG. Participating: Bosak, Bray, Clark, Maler, Paoli, Sperberg-McQueen, and Sharpe. 
Absent: DeRose, Hollander, Kimber, Magliery, and Connolly. 
All decisions were by consensus of all those participating in the call, and thus carry a majority of the membership of the ERB. 
Several issues were left unresolved at the end of the meeting; the ERB will be meeting today and Saturday to discuss them further and resolve them. 
A.20 XML will retain the notion and syntax of comments (= 8879's 'comment declarations') (7.6, 10.3), but comment declarations will contain at most one comment: comments will take the form ' ! 
' or else will begin with ' !--' and end with '-- ' (no space allowed), and may not contain '--'. 
Comments will take the form ' !--' ... '-- ', no internal '--' is allowed and no white space between the final '--' and the final ' '. Empty comments ( ! ) will not be allowed in XML. 
B.1 What should XML's character-set rules be? 
Should conforming XML documents be restricted to particular character sets? 
Should conforming XML processors be required to be able to parse all conforming XML documents (13.1)? 
Agreed: - the character repertoire of XML documents is that of ISO 10646 - conforming XML documents may be in UTF-8 or UCS-2 form - all XML processors must accept documents in UTF-8 and UCS-2 (or optionally UTF-16) form - XML processor may provide a user option which causes them to accept documents in other coded character sets (e.g. ISO 8859 or JIS 0208) or other encodings of 10646 or other coded character sets (e.g. Extended Unix Code) -- this behavior must be optional (i.e. the user must be able to turn it off, so that documents not in UTF-8 or UCS-2 raise errors). 
Still open: details of the mechanism to be used for signaling the encoding and/or coded character set in use. 
B.2 Should XML require each document instance to have a DTD or not (7.1)? 
XML will not require each document instance to have a DTD. 
Open question: details of partial DTDs or DTD summaries, if any, and possible declarations indicating whether the correct ESIS is derivable for a document its DTD is not read. 
B.4 Should XML forbid comments and processing instructions in mixed content, as a way of simplifying RE handling (7.6)? 
Assuming that a satisfactory RE rule can be agreed on, XML will not forbid comments and processing instructions in mixed content. 
B.5 Should XML restrict the use of the PCDATA token in content models, to simplify RE handling or eliminate the Mixed Content Problem? 
(7.6.1, 11.2.4) * B.5 restrict PCDATA to models of the form (#PCDATA) No. * B.6 restrict PCDATA to models of the form (#PCDATA | x ... | z)* Yes. 
B.8 Should XML use MSOCHAR, MSSCHAR, and MSICHAR strings (9.7)? 
No. B.11 Should XML forbid, allow, or require empty end-tags (7.5)? 
Forbid. 
-C. M. Sperberg-McQueen University of Illinois at Chicago Good. 
Good. 
I'm not a great fan of UTF-16, and am worried about the connotations of "accept". 
Does that mean parse, process, or just accept and die? 
OK. 
I can live with this, but am not overly happy about the "must be optional" clause. 
3 methods: 1) MIME headers for HTTP/email/filesystem (via *.mim) 2) FSI attributes 3) Catalog parameters On Thu, 17 Oct 1996 14:40:06 -0400 Gavin Nicol said: I think it means parse successfully. 
Some processing may involve resources (e.g. fonts) over which neither an XML implementor nor a user may have control, so it'd be hard to guarantee or require that. 
(Users at my university, for example, do not control which X11 fonts are available on our Unix systems. 
I'm not sure our staff does either, but that's another question.) Accept-and-die doesn't fall within the range of meanings I associate with 'accept', but if there's any doubt the spec should make it clear. 
Motivation is simple: if I want to ensure that document D is in a form that all XML processors can parse, then I need a way, using the processor in front of me, to check that. 
It's the same idea as in the Pascal spec: conforming Pascal implementations *must* provide a user option turning off all local extensions and flagging as errors anything the spec says is an error. 
There was some sentiment, when we discussed the topic again this morning, to restrict this rule to validating processors, and allow non-validating processors to do it whether the user likes it or not. 
This seems to me a pointless complication of a simple rule, but it may go into the spec. 
-C. 
M. Sperberg-McQueen OK. 
I can accept that. 
Let's hope XML doesn't go the same way as PASCAL though... 
