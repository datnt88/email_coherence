Hello, In [1], Martin Duerst submitted the following comment on the Last Call Working Draft of XSLT 2.0 and XQuery 1.0 Serialization on behalf of the I18N Working Group. 
[23] Section 4: "The base URIs of nodes in the two trees may be 
different." 
Does this mean that base URIs are not serialized? 
This should be checked or at least explained. 
Thanks to Martin and the I18N Working Group for this comment. 
In [2] Michael Kay responded as follows: 
Yes, the base URI typically is supplied at the time a tree is built by a parser, it is not normally explicit in the content of the tree. 
The XSL and XQuery Working Groups discussed this comment, and concurred with Michael Kay's response. 
The working groups did not feel any clarification of the specification was required. 
May I ask the I18N Working Group to confirm that this response is acceptable? 
Thanks, Henry [1] [2] Henry Zongaro Xalan development IBM SWS Toronto Lab T/L 969-6044; Phone +1 905 413-6044 
Hello, In [1], Martin Duerst submitted the following comment on the Last Call Working Draft of XSLT 2.0 and XQuery 1.0 Serialization on behalf of the I18N Working Group. 
[24] Cases of creation of non-wellformed XML where the processor is not required to signal an error: It would be good to have an option to request well-formedness checking even if Character Maps are used. 
Thanks to Martin and the I18N Working Group for this comment. 
The XSL and XQuery Working Groups discussed the comment, and concluded that, although such a mechanism might be useful, an XML parser would be capable of performing the same well-formedness checking. 
On those grounds, the working groups decided it was not necessary to duplicate that functionality in Serialization. 
May I ask the working group to confirm that this response is acceptable? 
Thanks, Henry [On behalf of the XSL and XQuery Working Groups.] [1] Henry Zongaro Xalan development IBM SWS Toronto Lab T/L 969-6044; Phone +1 905 413-6044 
Hello, In [1], Martin Duerst submitted the following comment on the Last Call Working Draft of XSLT 2.0 and XQuery 1.0 Serialization on behalf of the I18N Working Group. 
[4] This only defines serialization into bytes. 
In some contexts (e.g. Databases, in-program,...), serialization into a stream of characters is also important. 
The spec should specify how this is done. 
Thanks to Martin and the I18N Working Group for this comment. 
The XSL and XQuery Working Groups discussed the comment. 
The working groups noted that there is an analogy in parsing XML documents. 
XML 1.0 and XML 1.1 parsed entities are defined as sequences of character code points, each in some encoding. 
Though it is common practice to parse XML documents that have already been decoded into a sequence of characters, the XML 1.0 and XML 1.1 Recommendations do not describe the actions of an XML processor in those terms. 
Based on this analogy, the working groups decided that it was not appropriate for Serialization to specify normatively how to serialize into a stream of characters. 
The working groups did decide to add a note to Section 3 of Serialization indicating that a processor could provide an option that would permit the fourth phase of serialization (Encoding) to be skipped. 
May I ask the I18N Working Group to confirm that this response is acceptabe? 
Thanks, Henry [On behalf of the XSL and XQuery Working Groups.] [1] Henry Zongaro Xalan development IBM SWS Toronto Lab T/L 969-6044; Phone +1 905 413-6044 
Hello, In [1], Martin Duerst submitted the following comment on the Last Call Working Draft of XSLT 2.0 and XQuery 1.0 Serialization on behalf of the I18N Working Group. 
[17] Section 4.2 (XML output method, encoding): "When outputting a 
newline 
character in the data model, the implementation is free to represent it using any character sequence that will be normalized to a newline character by an XML parser,...": This should probably says that for interoperability, it is better to avoid x85 and x2028. 
In [2], Michael Kay responded: 
I don't see a specific need to say that: if you're generating XML 1.0 then you need to avoid these characters and if you're generating XML 1.1 then you don't. 
This seems to be covered by the statement as written. 
Thanks to Martin and the I18N Working Group for this comment. 
The XSL and XQuery Working Groups discussed the comment, and agreed with Michael Kay that the statement regarding the representation of newline characters in the serialized document was correct as written, and that no change is required. 
May I ask the I18N Working Group to confirm that this response is acceptable? 
Thanks, Henry [On behalf of the XSL and XQuery Working Groups.] [1] [2] Henry Zongaro Xalan development IBM SWS Toronto Lab T/L 969-6044; Phone +1 905 413-6044 
Hello, In [1], Martin Duerst submitted the following comment on the Last Call Working Draft of XSLT 2.0 and XQuery 1.0 Serialization on behalf of the I18N Working Group. 
[20] 6.4 HTML Output Method: Writing Character Data: "Certain 
characters, 
specifically the control characters #x7F-#x9F, are legal in XML but not in HTML. 
... The processor may signal the error, but is not required to do so.": Please change this to require the processor to produce an error. 
In [2], Michael Kay responded: 
I worry that we will get many complaints from users who are misusing these codepoints if we do this. 
Their code will stop working, and it may be quite difficult for them to fix it. 
(Though it's a good use case for character maps...) 
Thanks to Martin and the I18N Working Group for this comment. 
The XSL and XQuery Working Groups discussed the comment, and decided to endorse Michael Kay's response without any change to the Serialization specification. 
May I ask the I18N Working Group to confirm that this response is acceptable? 
Thanks, Henry [On behalf of the XSL and XQuery Working Groups.] [1] [2] Henry Zongaro Xalan development IBM SWS Toronto Lab T/L 969-6044; Phone +1 905 413-6044 
Hello, In [1], Martin Duerst submitted the following comment on the Last Call Working Draft of XSLT 2.0 and XQuery 1.0 Serialization on behalf of the I18N Working Group. 
[18] Section 4.5 (XML output method, omit-xml-declaration): "The omit-xml-declaration parameter must be ignored if the standalone parameter is present, or if the encoding parameter specifies a value other than UTF-8 or UTF-16.": 
This disallows producing XML other than UTF-8 or UTF-16 without an xml declaration even though this is legal e.g. if served over HTTP with a corresponding charset parameter. 
We are not sure this is intended, and we are not sure this is a good thing. 
On the other hand, omit-xml-declaration must also be ignored if version is not 1.0. 
Thanks to Martin and the I18N Working Group for this comment. 
The XSL and XQuery Working groups discussed this comment. 
Regarding the second point, although XML 1.1 requires a document entity to have an XML declaration, it does not require an external general parsed entity to have a text declaration. 
The setting of the omit-xml-declaration parameter could still be meaningful, even if the version parameter has a value other than 1.0. 
Regarding the first point, as originally written, XML 1.0 required an XML declaration or a text declaration if the encoding of the document or external general parsed entity was anything other than UTF-8 or UTF-16. 
XSLT 1.0 enforced that requirement in its serialization mechanism. 
The draft of Serialization inherited that behaviour from XSLT 1.0. 
However, an erratum to XML 1.0 removed that requirement. 
In response to both points, the working groups decided that the Serialization specification should permit an XML declaration or text declaration to be omitted in precisely those circumstances in which it can be omitted according to XML 1.0 and XML 1.1. 
In particular, the working groups decided that if the serialized result could be considered to be the text declaration of an external general parsed entity, the omit-xml-declaration parameter could have the value yes or the value no, and the parameter's setting would take effect. 
They further decided that if the serialized result could only be considered to be a document entity because o the standalone parameter had the value yes or no; or o the version parameter had a value other than 1.0 and the doctype-system parameter was supplied the omit-xml-declaration parameter must have the value no. 
Otherwise, a serialization error results. 
A host language would, of course, have the option of ensuring such conflicts never arise through whatever language-specific mechanism it uses to specify serialization parameters. 
May I ask the working group to confirm that that response is acceptable? 
Thanks, Henry [On behalf of the XSL and XQuery Working Groups.] [1] Henry Zongaro Xalan development IBM SWS Toronto Lab T/L 969-6044; Phone +1 905 413-6044 
Hello, In [1], Martin Duerst submitted the following comment on the Last Call Working Draft of XSLT 2.0 and XQuery 1.0 Serialization on behalf of the I18N Working Group: 
[5] Section 2, point 3: "each separated by a single space": Inserting a space may not be the right thing, in particular for Chinese, Japanese, Thai,... which don't have spaces between words. 
This has to be checked very carefully. 
Thanks to Martin and the working group for this comment. 
The XSL and XML Query Working Groups discussed the comment, and decided that no change to the Serialization specification is required. 
The reason for separating each pair of string values by a single space is not to achieve any kind of linguistic separation of words, but to separate values in a way that would be consistent with the requirements for an XML Schema type derived by list, for instance. 
May I ask the I18N Working Group to confirm that this response is acceptable? 
Thanks, Henry [On behalf of the XSL and XML Query Working Groups] [1] [2] Henry Zongaro Xalan development IBM SWS Toronto Lab T/L 969-6044; Phone +1 905 413-6044 
Hello, In [1], Martin Duerst submitted the following comment on the Last Call Working Draft of XSLT 2.0 and XQuery 1.0 Serialization: 
[15] Section 4, "To anticipate the proposed changes to end-of-line handling in XML 1.1, implementations may also output the characters x85 and x2028 as character references. 
This will not affect the way they are interpreted by an XML 1.0 parser.": 
XML 1.1 is now a REC, so this is no longer anticipated. 
See 
Thanks to Martin and the working group for this comment. 
The XSL and XML Query Working Groups discussed the comment, and agreed that the Serialization specification should be amended so that it no longer refers to XML 1.1 as if it were not yet a recommendation. 
Furthermore, the working groups decided that the handling of x85 and x2028 should be such that they can be successfully processed by either an XML 1.0 or an XML 1.1 processor without being normalized to a line-feed character, even if the value of the version parameter is 1.0. 
Following are the changes required to implement that change: Replace the paragraph after the bulleted list in Section 4 with the following: 

A consequence of this rule is that certain whitespace characters must be output as character references, to ensure that they survive the round trip through serialization and parsing. 
Specifically, CR, NEL and LINE SEPARATOR characters in text nodes must be output respectively as &amp;#xD;, &amp;#x85;, and &amp;#x2028;, or their equivalents; while CR, NL, TAB, NEL and LINE SEPARATOR characters in attribute nodes must be output respectively as &amp;#xD;, &amp;#xA;, &amp;#x9;, &amp;#x85;, and &amp;#x2028;, or their equivalents And replace the note following the bulleted list with the following note: 

Note: XML 1.0 did not permit processors to normalize NEL or LINE SEPARATOR characters to a LINE FEED character. 
However, if a document entity that specifies version 1.1 invokes an external general parsed entity with no TextDecl or a TextDecl that specifies a version of 1.0, the external parsed entity is processed according to the rules of XML 1.1. 
For this reason, NEL and LINE SEPARATOR characters in text and attribute nodes must always be escaped using character references or CDATA sections, regardless of the value of the version parameter. 
May I ask the working group to confirm that this response is acceptable to it? 
Thanks, Henry [On behalf of the XSL and XML Query Working Groups] [1] Henry Zongaro Xalan development IBM SWS Toronto Lab T/L 969-6044; Phone +1 905 413-6044 
