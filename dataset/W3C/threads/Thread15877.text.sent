Sorry is this is a dumb question but what exactly is the difference between ABBR and ACRONYM? 
And as ACRONYM seems to be in the latest HTML4 spec and ABBR is not is it more sensible to use ACRONYM? 
One difference we (RNIB) need to recognise, for an acronym, presented to a low end synth speech system 'reading' a page, the acronym needs to be 'spaced out', such that RNIB becomes R N I B, whereas this is not necessary with an 'abbrev' which can (often) be 'read out' without being 'spelled out' - if you catch my drift. 
This (IMHO) necessitates differentiation between the two. 
How many authors appreciate such finesse I am unsure. 
regards, DaveP On another subject has anyone had any bright ideas about what to do with mdashes -- one site I've been helping with has been using two regular dashes, like this: -- and I've been using &amp;#151; on another site. 
However I've now realized that while &amp;#151; works OK it's not in the ISO character set. 
And what is concerning me more is how speech synthesizers would deal with this, anyone got any ideas? 
Could you give more details as what it is you want to convey with -- and then we can look at a better match in On Fri, 30 Jan 1998 08:59:31 +0100, Daniel Dardailler It's basically a long dash, try looking at &amp;#151; in a browser or try ALT 0151 in wordpad (or whatever) on a PC. 
These pages have a couple instances of &amp;#151; in them: I've had a look at the spec at the w3 site but &amp;#151; is not there - I guess it's a propriety thing that either Netscape or Microsoft introduced. 
Other characters that I've been using that are also not "correct" are &amp;#147; and &amp;#148; as they look better that &amp;#quot; but I guess they will only work on a MS Windows computer and do something weird on a UNIX box or whatever - can speech synthesizers handle them? 
If not I'll change them all to &amp;#quot; Chris chris@atomism.demon.co.uk 
On Fri, 30 Jan 1998 07:56:48 -0000, "Pawson, David" I see, am I correct in understanding that you mean that things that should be read out as separate letters should use ARCONYM and things that are pronounced more like a word use ABBRV? 
I think a clearer explanation is needed, it could be really annoying if people start using them the wrong way around. 
Chris chris@atomism.demon.co.uk 
The SGML view would be that the markup reflects the authors intent. 
The 'braillists' view would be as you say. 
I must support the former position. 
If it is an acronym, mark it up as such, if an abbreviation for a longer word, mark it as abbrev . 
Thats the black and white version. 
The grey shades come in where a word is both pronouncable (as an acronym) and is an abbreviated form. 
Acronyms are formed from the initial letters (or syllables) of other words [chambers]. 
hence radar is an acronym - should it be marked up as such? 
I would say no. Abbrev is 'part of a word written instead of the whole'. 
E.g. abbrev. 
When I (sighted) read that I read it as the full word. 
The text to speech system cannot do that, hence perhaps the 'right' thing to do is avoid the use of abbreviations. 
Acronyms are less easy to avoid! 
They are in such common use it simply needs judgement as to the need to expand to the full - or mark up as an acronym and ensure recognition as such! 
Hope that helps DaveP Examples of sources of confusion? 
NATO is a good example. 
It is an acronym It is (often) pronounced as a word. 
Should it be acronym NATO /acronym to produce N A T O or should it be unmarked, implying that all readers will have heard of NATO and 'pronounce it' as NATO. 
There are probably better examples in esoteric fields full of jargon. 
acronym IT /acronym is just such a field. 
Someone not familiar with the field may not recognise acronym RAM /acronym as a computer term and interpret as a sheepish item. 
this from a colleague next door more familiar with the issues of mistranslation. 
Thanks Jeannie! 
regards, DaveP -----BEGIN PGP SIGNED MESSAGE----- Sorry is this is a dumb question but what exactly is the difference between ABBR and ACRONYM? 
And as ACRONYM seems to be in the latest HTML4 spec and ABBR is not is it more sensible to use ACRONYM? 
There is a major problem in that no one (myself included) actually knows what constitutes an acronym and what constitutes an abbreviation. 
The HTML 4.0 Recommendation does not adequately explain the intended difference. 
My dictionary (Webster's) gives example abbreviations that include "N.Y." (New York), "Mr." (Mister), and "lb." (pound). 
It defines acronym as "a word formed from the first (or first few) letters of a series of words, as _radar_, from _radio detecting and ranging_". 
This implies to me that RNIB is not an acronym, since I would not consider it a word. 
For something to be a word, I think it needs to be pronouncable, so I would consider NATO and WAI to be acronyms. 
Since RNIB is not an acronym, I would mark it up with ABBR along the lines of Webster's "N.Y." example. 
There are also some initialisms like SQL and URL that are pronounced as words by some and spelled out letter by letter by others. 
In this case, I recommend using ABBR, possibly in combination with a style sheet rule specifying how the initialism should be pronounced. 
For example: with the following CSS2 style sheet: abbr[title="Uniform Resource Locator"] { speak: spell-out } Using ABBR for these ambiguous cases ensures that ACRONYMs are always pronouncable words. 
-----BEGIN PGP SIGNATURE----- Version: PGP for Personal Privacy 5.0 Charset: noconv iQB1AwUBNNHbUg/JhtXygIx1AQE8MAMAnvdZVo6EoS+ma3esbZP5HY9PL/bMeGyo 1JDPENyI1Ue0n2ngSorykJuu5P8vsiYhDztczPVkmIb4vSGLUbF6NyFdzxE8vwJk VljgcVzKwe9VQeGyYpW548kFtSCo7KWk =BHnk -----END PGP SIGNATURE----- Liam Quinn Web Design Group Enhanced Designs, Web Site Development Apologies, but this strikes me as a really neat problem. 
For many acronyms a simple check of the phonemics (?) can determine whether it should be parsed as a word or as 'letter-spelling'. 
Other acronyms may require interpretation once or always: 'RAM', for instance, might be read as 'Random Access Memory' the first time [with a little client-level semantic sugaring: "...Random Access Memory, known as RAM,...". 
I assume the tag supports a reference to the full word? 
Matt. 
Ram might not be a good example, but what we need have done is to have the acroneem passed as r a m. this would give a screenreader the opportunity to spell it out and avoide misconceptions as to what it is based on what it sounds like. 
Hands-On-Technolog(eye)s touching the internet voice: 1-(301) 949-7599 poehlman@clark.net 
ftp://ftp.clark.net/pub/poehlman 
I did a quick check and found the following using JAWS For Windows: In Netscape 4.01 and MSIE 3.02, &amp;#151; is spoken as "ANSI 151". 
The JFW user can choose whether to have various gradations of ANSI characters spoken, but very few would know what it meant. 
In Braille it shows up as sort of an underline character (dots 4,5,6,7). 
With Lynx 2.6 it just shows up as "&amp;#151;". 
Patrick Patrick J. Burke burke@ucla.edu 
University of California Los Angeles Disabilities &amp; Computing Program Analyzing Usability Since 1994 My thinking is that a person familiar with the context in which 'RAM' is being used might find that really irritating. 
But I gather that you are thinking of a mark-up to browser to screen reader chain, rather than direct parsing of the mark-up by a text-to-speech browser. 
In that case I almost agree with you, except that for people reading the acronym visually, R space A space M would be less than optimal. 
Thus, I would suggest that the HTML 4.0 specification should instruct that browsers support optional acronym spacing. 
RAM is an interesting case because there is almost no audience for which one wishes to speak it as its spelling. 
If they don't know what RAM is, then one needs to say "Random Access Memory" or "main memory." 
depending on the context. 
Here is a case where CSS2 gives some real help. 
There are speak/spell controls that can be applied to classes of elements, for example ACRONYM vs. ABBR, and you can introduce a user's stylesheet coordinated with the screen reader you have. 
The style processing could introduce the spaces between letters in the case of a known-dumb screen reader. 
I don't know if this style is currently in inventory or not. 
I feel that I wouldn't know finally what to suggest to authors without asking the UI group what their developers saw as the best way their tools should behave on this point. 
Al Gilman I'm suggesting here that it be parsed that way not displayed that way if posssible. 
Hands-On-Technolog(eye)s touching the internet voice: 1-(301) 949-7599 poehlman@clark.net 
ftp://ftp.clark.net/pub/poehlman 
I have been following this thread and would offer a comment. 
is are case Most screen readers have tools for dealing with acronyms/abbreviations by either spelling out them out or making a verbal substitution. 
Even without these automatic features, the user usually has a "spell word" command to apply to the text which can accomplish the same objective. 
In my experience, there are no universal rules here. 
Some abbreviations/acronyms are more understandable when parsed (spelled out) and others are not. 
When people read text aloud, they will usually choose one or the other according to which result is more understandable. 
For the most part they are following conventions rather thatn firm rules. 
For example, everyone will pronounce "ROM" as a word but spell out "IBM". 
Good screen readers have pronunciation exception dictionaries which are fine for applications that have a limited number of abbreviations/acronyms on the screen. 
When dealing with documents or web pages, however, where an abbreviation/acronym will be encountered just once, or at most, only a few times, it is not practical to take the time to add a new pronunciation exception to the dictionary. 
Parsing or spelling out every abbreviation/acronym is not the solution because this impedes the flow and rhythm of the spoken text and becomes tedious. 
Pronouncing every abbreviation/acronym as though it were an authentic word is not the solution either, because some letter combinations are too difficult to discern this way. 
Your suggestion of having an optional parsing built into the browser will probably be beneficial for those screen readers that don't already have features for dealing with abbreviations/acronyms and unnecessary for screan readers that do. 
Most important is that this be an option or it may short-circuit the screen readers functions that are already designed to handle them. 
Yes. 
I didn't express it too well, but that's what I meant when I originally said the problem was 'neat'. 
It's possible that those distinctions are generated purely by conformative usage, but I wonder if there are cadence 'rules' (heuristic) to speech in a given language that guide the selection. 
The problem is complicated by the fact that it used to be normative for acronyms to be spelt out, and that acronyms now tend to be chosen (to the point of silliness) so that they can be spoken as a word. 
But when people spell out acronyms, they often vocalize them 'in quotes', as it were, if the names are new or not normally pronounced that way; IBM, in contrast, is pronounced normally as three short words. 
It may just be the prejudice of usage, but I have trouble thinking that sentences such as "Today, Ib'm announced that..." flow as well as "Today, eye be-em announced..." The matter could come down to a fairly simple rhythmic-consistency rule, with a bias towards the shortest means of expression... -----BEGIN PGP SIGNED MESSAGE----- An acronym should, by definition, be pronounced as a word. 
-----BEGIN PGP SIGNATURE----- Version: PGP for Personal Privacy 5.0 Charset: noconv iQB1AwUBNNJWMg/JhtXygIx1AQGwcQL/UqJ1t7IbWXknFbgYBPnnQ9Zw4v18gFvv yNeOqbdHeeLKVnTh54D+A6rtrg90iyzJ2P8pyIoZINNbnAtin6pKJw0Af7ClYCay WTAo9vMHa/ZOsLGbfZSPOff9eBoKoi13 =EnUX -----END PGP SIGNATURE----- Liam Quinn Web Design Group Enhanced Designs, Web Site Development This thread has been going a little while now. 
And a lot of it has presented acronyms and abbreviations with no mark-up. 
Perhaps an important question to ask is "How are those who use screen-readers, braille printers, etc, understanding the discussion so far?" 
As a sighted reader, it has not presented many problems to me. 
Is that the case for others? 
Charles McCathieNevile Apologies to anyone for whom this has been the case. 
In a context like wai-ig, I feel that I can usually trust others to beat myself up for me, and I think someone would have mentioned it. 
But I have the thread here locally on my Mac, and I'd be happy to edit for legibility and re-post any message if that is the case. 
In terms of the more general question, screen readers will always have to deal with ASCI occasionally, and (although I'm not familiar with the technology) I suspect that on-the-fly parsing of mark-up is not neccisarily standard. 
I don't think I'm having a problem. 
Please provide an example of what you think might cause a problem and let's deal with it. 
I've learned fr instance that &amp;#151; is a dash right? 
or is it an m-. m dash. 
anyway, maybe we need a way to pass the word "acronym" to the screen reader at least once for a strange one and it would be nice if there was some wy to mark up those &amp;#xxx; characters to produce the correct sounds. 
Hands-On-Technolog(eye)s touching the internet voice: 1-(301) 949-7599 poehlman@clark.net 
ftp://ftp.clark.net/pub/poehlman 
to follow up on what David Poehlman said: I suspect it is an em-dash, that is to say a dash that is one Em long. 
The Em is a standard way to give lengths that are relative to the type size you are using. 
There are two issues here. 
The way to pass the "acronym" classification of something that would othewise be treated as a word is illustrated by MSAA, I think. 
Assuming that the HTML 4.0 representation of a document includes the markup how would, for example, IE4 make this information available through the MSAA interface? 
Making sure this works comes is in the domain of the WAI-UI group, by the way. 
They will be working on standards for how screen readers can get this information. 
The second issue is "What is &amp;#151, anyway?" 
Here one has to ask what is the code page in which #151 is the character desired. 
As I understand it, this is a reference in the standard Windows code page. 
If there is not ISO character entity for the character you get from #151 in this code page then this is a bug and the people from Windows and the people from ISO need to get together and heal the breach. 
How the screen reader learns that a given word is an acronym is part of the job of the Browser Guidelines or WAI-UI working group. 
How we know that a given character reference is an em-dash is in the area of internationalization, because internationalization is the area where we have to deal with the fact that there are lots of characters that aren't in ASCII. 
Al Gilman Being new to the list, I don't want to cover ground that has been gone over before, but thought I'd chip in another perspective on abbreviations and acronyms. 
In the library world, there's a standard reference work called the _Acronyms, Abbreviations, and Initialisms Dictionary_. 
As I recall its introductory materials, it sets out definitions in which acronyms and initialisms are both subsets of the larger body of abbreviations; as has been pointed out, acronyms are pronounced as words (e.g. NASA and UNICEF) and are created from the [usually] first letters of the words in a phrase. 
Initialism is the term given to first-letter abbreviations that are pronouned letter by letter (IBM and FBI). 
The superset of abbreviations includes shortenings that are typically pronounced as the word or phrase they come from (the state of Wisc., Mr. Bob Smith, Jr., etc.); codes that may have little relation to the word they stand for (travelers in the states are familiar with ORD as the code for Chicago O'Hare Airport, the National Weather Service code for Columbus, Ohio is CMH and so on); abbreviations of phrases in one language used for words in another (English language use of 2 lb. 6 oz.) and other miscellany. 
This makes it seem to me that an ACRONYM element is superfluous with a more general ABBR element, and incomplete without it. 
Thomas Dowling OhioLINK - Ohio Library and Information Network tdowling@ohiolink.edu 
[Pawson, David] No, I was thinking that we need to identify them. 
Treatment of them can be localised (I would only expand them when outputting to a text to speech system, inserting the spaces - a browser app may treat them differently. 
My main request is that they be identified by being tagged, which permits treatment of them! 
If they are unidentified, then we can't treat them other than as plain text.) regards, DaveP [Pawson, David] DP: Exactly. 
If we can persuade the authors to tag these beasts, then such output treatment software as CSS can 'deal' with them. 
Its when we don't tag them up that we are into guessing games. 
Right tagging will support right treatment [which is where this thread started if I remember rightly]. 
regards, DaveP. 
to follow up on what Pawson, David said: If we want access to the information, we need to be open to solutions based on informed interpretation of words as well as scrupulous tagging. 
Syntax-based guessing that a word is an acronym or initialism is a piece of cake. 
Is the word all uppercase? 
{if yes: Is the context all uppercase? 
{if no: Bingo!}} 
So client software functions compete with server markup to fill this need. 
We shouldn't prune off alternative opportunities for relief until the problem has actually gone away. 
In the WAI-UI group I would think that the speech-access community should be pushing the browser people as to how they use and share dictionaries. 
The access adapter is not the only piece of software that may have access to a dictionary. 
In fact, if we want authors to ever employ the distinction between "acronyms" and "initialisms" we had better infiltrate the spell-check dictionaries of popular word processors and not stop at screen-readers. 
If the system interpreting the HTML has a resident dictionary it can do a very good job of recognizing acronyms and commonly used initialisms and attaching phonetic markup for the ones where the normal pronunciation practices don't work. 
The screen reader doesn't need to know whether the author or the browser pasted the phonetics on the item. 
Or it may know it can check the installed word-processor's dictionary that the system has told it is available on the system side of the accessibility API. 
As Dave and Jason and Max have all pointed out, there are more customers for pronunciation information that just screen readers. 
Participate in WAI-UI and ask the holders of dictionaries how they propose to share them. 
Al Gilman Floodgate Warning. 
to follow up on what Thomas Dowling said: AG:: Welcome, indeed. 
You are filling a gap in our knowledge base. 
AG:: Great. 
The good news is that there already is in standard library parlance a semantic model that meets the needs of the screen reader. 
The bad news is that it is jargon, not English. 
So it doesn't meet the needs of the author community. 
The distinction between acronyms and initialisms is, in linguistic terms, "not controlled by a preponderance of the speakers of English." 
In this business, we need to take such a populist standard for what English is. 
My vocabulary is somewhere in the upper tail of English speakers and I don't recall encountering it before. 
It's not in my desktop dictionary. 
So this terminology which is commonplace among librarians is not yet a solution to "how do we get authors to distinguish in the way needed to guide pronunciation?" 
In a companion post I suggested it is not totally a failure if the browser or screen reader has to guess. 
It is even better if the spell-checker does some guessing regarding when to challenge the author for an expansion or pronunciation for an unfamilar word. 
For the acronym RAM, if you don't mark it as an acronym, the people who suffer are the people who don't know anything about computers, not the people using text-to-speech. 
Because if the screen reader ignores the acronym status of this term and says "ram" the listener will hear the right message. 
If we tie markup to "failure to reach audience X" we can expect authors to be responsive. 
We can use prognostic guessing as a way to limit the burden on authors. 
If the spell checker includes rules for which abbreviations are likely to cause pronunciation problems, then the author will not be asked to mark all acronyms with markup. 
If we ask the author to manually add markup for all acronyms used, we will get outright rebellion and we won't be able to do much more than be remembered as martyrs. 
In terms of how much we bug the author, we should be savvy. 
The author has a notion of his/her intended audience. 
Start by getting the things marked up that the author needs to reach the audience that he/she already believes in. 
If the audience is a general audience and not just computer geeks, then the RAM acronym may lead to confusion and not just 'title="Random Access Memory"' but also a link to the RAM entry in "A Child's Garden of Computers" is appropriate. 
The spell-check dictionary is the place to distinguish between pronounceable acronyms and initialisms that should be spelled or expanded to words in speaking. 
Find a market where this function is backed by demand with money. 
The TelePromTer market which does prompting texts for high-profile speakers in politics and the media is where one might expect this distinction to be a requirement backed with money. 
How do they handle this. 
Do they have an existing markup that they ask word-processing tools to provide, or do we have the capability to solve a problem for them with HTML? 
In summary: The distinction between acronyms and initialisms begs the question of how do we get authors to notice and do something effective. 
We should ask authors for explicit markup only in the case where the prevailing text to speech methods fail. 
This means putting a somewhat cautious algorithm in the author tool based on algorithms that parallel those used in screen readers. 
Integration with spell-checking is a promising way to get this check actually used. 
Al Gilman 1. 
A source of resolution many authors already use is to follow the first definition by the acronym, abbrevation, or initialism (AAI) in parentheses. 
Henceforth the AAI is used in the document. 
We should encourage both this style of writing, means to recognize it (tag the definition, and an attribute to identify that AAI is cleanest), extract it to the AAI dictionary, and even possibly include a link back to where the first use and its definition appears. 
Such an explicit back link presumes that the reader can recognize the definition there, without having to automatically recognize it to One weakness of this approach is that the first use may not be the first encountered, as non-linear reading is common. 
So such links may need to be made relative to the root of the set of documents that includes the one in which the AAI first appears. 
Multiple documents may define, then use the same AAI, and each may provide its own presumed definition for it. 
For example, one document uses personal computer (PC); and another document uses politically correct (PC). 
A common AAI glossary across another document set could show that different definitions occur, but given only an AAI, the implied universal meaning for it doesn't resolve such ambiguity. 
They must be taken in context. 
The preferred scope would be the original document where an AAI is defined (before shredding). 
A document-specific glossary of AAIs could be built and used for indirect resolution of any AAI meaning. 
Failing a resolution there, a wider universe of possibly merged glossaries could be checked. 
For some, the resolution would likely be in between IBM. 
Any deviant such as I've been moved (IBM) would be up to the author to make local. 
A reference befor de 2. Should we recommmend a default choice among AAI kinds? 
Regards/Harvey Bingham Bobby says: 1.A LABEL must be associated with the INPUT control. 
Line 29: INPUT TYPE="radio" NAME="$TEXTBASE_NAME" VALUE="BACKFILE" CHECKED Current research. 
I can't find a good accessible example of a correct implementation. 
I've looked through section 10 of the WAI Accessibility Guidelines: Page Authoring, W3C Working Draft 03-Feb-1998, and section 17.4 of the HTML 4.0 Specification, W3C Recommendation 18-Dec-1997. 
When I click on #1 above Bobby takes me to an example that doesn't seem to apply to my case. 
The above INPUT stuff goes to our cgi. 
Any help would be appreciated. 
The page I've been testing is at LABEL text in there, but it shows up on the screen (I don't want it to). 
danw Dan Wendling - wendling@mindspring.com Publications Coordinator National Rehabilitation Information Center (NARIC) 800/346-2742, ext. 
15 (Voice); 301/495-5626 (TTY) Information for Independence LABEL ACCESSKEY=r INPUT TYPE="radio" NAME="$TEXTBASE_NAME" VALUE="BACKFILE" CHECKED Current research. 
/LABEL Liam Quinn Web Design Group Enhanced Designs, Web Site Development I'm crossposting this to wai-gl cause it seems relevant. 
It's not clear to me that the radio button INPUT element needs to be nested within a LABEL. 
Suppose for, example, the label, and the radio button were in two separate columns of a table. 
I think the correct labelling of a radio button would be: and then someplace else, but usually right after or right before, Josh Krieger CAST [on the content] That is another good example. 
There are probably cases where it is better. 
But it is not "the correct" way to do it, to the exclusion of the earier example, so far as I can tell. 
I believe that the previous example also satisfies the purpose of the guideline. 
The earlier example has the advantage of making the least change in the appearance of the page. 
[on crossposting] Someone suggested sending separate posts of the same content to two lists, if you feel you need to send something both places. 
This reduces inadvertent cross-posting by people replying to your message. 
On the whole, if you send the full text of something to WAI-IG, you don't need to cross-post to another WAI list. 
The topical groups are supposed to monitor what is happening here. 
By the way, threads like this one would be good to expose in the HTML Writers Guild context, as well. 
And bring back a suggestion for an answer to WAI-GL if a consensus emerges. 
Al Gilman to follow up on what Josh Krieger said: Uh oh, my ears are burning. 
:) I can certainly bring issues to the Guild's lists -- I can't guarantee a concensus report though :). 
Getting more than 2 or 3 HWG members to agree on anything is quite some work! 
:) Kynn Bartlett kynn@hwg.org 
Governing Board Member, HTML Writers Guild Education and Outreach working group member, Web Accessibility Initiative In order for this to work in Internet Explorer 4.01 the LABEL will need a FOR attribute. 
LABEL FOR=radio1 ACCESSKEY=r INPUT TYPE="radio" ID=radio1 NAME="$TEXTBASE_NAME" VALUE="BACKFILE" CHECKED Current research. 
/LABEL Internet Explorer 4.01 currently does not support implicit binding of attributes (such as ACCESSKEY) to the labeled control. 
Charles Oppermann Program Manager, Active Accessibility, Microsoft Corporation "A computer on every desk and in every home, usable by everyone!" LABEL ACCESSKEY=r INPUT TYPE="radio" NAME="$TEXTBASE_NAME" VALUE="BACKFILE" CHECKED Current research. 
/LABEL Liam Quinn Web Design Group Enhanced Designs, Web Site Development Is this going to be changed to bring it into line with HTML 4.0 as per the recommendations, and if so do you know when this might occur? 
Charles McCathieNevile Apparently, this is a non-trivial problem for the developers, but HTML 4.0 compliance is a goal. 
Is this going to be changed to bring it into line with HTML 4.0 as per the recommendations, and if so do you know when this might occur? 
Charles McCathieNevile Oh. 
I hadn't imagined that it would be terribly difficult. 
-charles 
