You know, I never really thought of that much. 
I suppose that it could be a problem with most speech synthesizers. 
It is hard to say if that is a flaw with the synthesizer, the specs, or the writer. 
The little emoticons are almost a language of their own. 
It would be a shame to stop using them because of perceived accessibility problems. 
They often translate to something that words cannot describe in an adequately short space. 
:o could never be totally captured by words. 
Not to mention that almost anyone could understand ;) without translation. 
CSS2 could help tremendously. 
Controlling the prosody would be a useful thing. 
But, I am not sure that something wouldn't be lost if we gave up our emoticons completely. 
Emotional states for the voice would be a useful addition to CSS. 
I mean, do most people know which volume, pitch, stress, richness values would make a voice sound happy or sad? 
A high quality speech synthesizer, using the MBROLA algorithm for instance, could easily duplicate emotional inflections in its speech. 
Some of the rougher voices, like Peter, wouldn't benefit much. 
Here is something that surprised me the first time I heard it. 
My speech synthesizer speaks "Winking Smiley Face" when it encounters ;) and it speaks "Smiley Face" when it encounters :) There is other ASCII 'art' that it speaks. 
I have noticed these in common practice, though. 
I am using MS IE 5.0 b1 on Windows 98 with MS Voice 4.0 installed. 
I am using the 'Mike' True Voice speech engine that comes with Voice 4.0. 
I modified one of the example programs to read using the Accessibility hooks in Windows 98. 
It isn't as sophisticated as the commercial screen readers, but, it works much better for my needs. 
I dislike all of the other screen readers that I have tried. 
I can, at least, fix mine when it does something stupid ;) 
I will add that I am not visually impaired or blind. 
So, I have not had to rely on the screen reader. 
I have many friends that do rely on them, though. 
However, I have found that the screen reader helps me stay focused. 
I often get distracted while reading. 
I read about 1000 words per minute, but, I rarely make it through more than a few minutes before drifting off on a tangent. 
The screen reader and headphones seem to keep me focused on what I am doing. 
It only speaks clearly to about 200 WPM, so I trade a little speed for endurance. 
I am sure it helps comprehension a bit, also. 
,David Norris World Wide Web - http://www.geocities.com/CapeCanaveral/Lab/1652/ 
Illusionary Web - http://illusionary.dyn.ml.org/ -- 02:00 - 10:00 GMT Video/Audio Phone - callto:illusionary.dyn.ml.org Page via mail - 412039@pager.mirabilis.com 
ICQ Universal Internet Number - 412039 E-Mail - kg9ae@geocities.com 
Hi all... i have been trying to work around the 'smiley problem', ie, that ':)' means nothing for aural browsers... my current solution is to use a span class="smiley" *smile* /span (or *wink* or *pout* or whatever...) and the use a CSS stylesheet so the *smile* is printed out in red (or pronounced in a different peach, although I haven't tried aural stylesheets as I cannot yet check them) Booby approves my pages but on accessibility tips it comments about ASCII art... 
The only thing I can think of as ASCII art is the '*' surrounding the words... how much of a problem is "*grin*" for an aural UA? Would it be better just "smile" and making it to stand out of the main text via the stylesheet? 
Any help appreciated... (note: pages with this are, if you like to check, at really welcome...) Thanks, David@ sig who David Su&amp;aacute;rez de Lis uri mailto:phdavidl@usc.es from institution University of Santiago de Compostela 
oh, try parens or then again, it might think it's invalid html if you use the latter. 
I 
like your idea though. 
what makes you think it will change pitch? 
*Hi all... *i have been trying to work around the 'smiley problem', ie, that ':)' *means nothing for aural browsers... *my current solution is to use a span class="smiley" *smile* /span (or **wink* or *pout* or whatever...) and the use a CSS stylesheet so the **smile* is printed out in red (or pronounced in a different peach, *although I haven't tried aural stylesheets as I cannot yet check them) *Booby approves my pages but on accessibility tips it comments about ASCII *art... *The only thing I can think of as ASCII art is the '*' surrounding the *words... how much of a problem is "*grin*" for an aural UA? Would it be *better just "smile" and making it to stand out of the main text via the *stylesheet? 
*Any help appreciated... *(note: pages with this are, if you like to check, at *http://web.usc.es/~phdavidl/slidedraw/, any comments and suggestions *really welcome...) *Thanks, *David@ * sig who David Su&amp;aacute;rez de Lis * uri mailto:phdavidl@usc.es * from institution University of Santiago de Compostela * country SPAIN federation EU /from * /sig Hands-On-Technolog(eye)s touching the internet voice: 1-(301) 949-7599 poehlman@clark.net 
ftp://ftp.clark.net/pub/poehlman 
Dynamic solutions Inc. Best of service for your Small Business network Needs 
thanks, good suggestions.. CAST suggests using a smiley pic and ALT text, but the problem remais when reading with Lynx and a screen reader, right? 
Well, when UA's fully support CSS2 there's the @aural media where you can propose a voice, pitch, volume, &amp;c for different elements.. consult W3C site, www.w3.org/Style, for more information... Thanks, David@ sig who David Su&amp;aacute;rez de Lis uri mailto:phdavidl@usc.es from institution University of Santiago de Compostela 
alts are fine. 
they show up well in lynx. 
** oh, try parens or ** then again, it might think it's invalid html if you use the latter. 
I 
** like your idea though. 
**thanks, good suggestions.. CAST suggests using a smiley pic and ALT text, **but the problem remais when reading with Lynx and a screen reader, right? 
** what makes you think it will change pitch? 
**Well, when UA's fully support CSS2 there's the @aural media where you can **propose a voice, pitch, volume, &amp;c for different elements.. consult W3C **site, www.w3.org/Style, for more information... **Thanks, **David@ ** sig who David Su&amp;aacute;rez de Lis ** uri mailto:phdavidl@usc.es ** from institution University of Santiago de Compostela ** country SPAIN federation EU /from ** /sig Hands-On-Technolog(eye)s touching the internet voice: 1-(301) 949-7599 poehlman@clark.net 
ftp://ftp.clark.net/pub/poehlman 
Dynamic solutions Inc. Best of service for your Small Business network Needs 
That's what  and  are for. 
John T. Whelan whelan@iname.com 
Mmm... that is an idea... Using CSS2 and the @aural media, I guess we could make some kind of on-the-fly translator for the most usual ASCII art, so on visual environments they would see ' :) ' or whatever, and on aural UAs have a gigle, or a description of the emoticon... that would require CSS2 fully aware UAs, btw... Would such a thing be possible with CSS2? 
(haven't dug too much on the @aural possibilities yet...) i am thinking is something like: span.smiley@aural { ":)": Rose.read "Smiling face" } or span.gigle@aural { ":)": Rose.play "gigle.wav" 
} Thanks, David@ 
