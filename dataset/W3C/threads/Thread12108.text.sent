Hello all, Here are some ideas for subtext: 4.1 Check for and inform the author of accessibility problems. 
[Relative Priority] This checkpoint requires at least some automation of accessibility checking. 
At minimum, prompt the author to manually check for specific problems. 
More advanced implementations might be automated to a high extent, prompting the author rarely and flagging problems as they occur. 
4.2 Assist authors in correcting accessibility problems. 
[Relative Priority] This checkpoint requires that, once accessibility problems have been found, either automatically or manually, authoring tools help the author to correct them properly. 
At minimum, provide context-sensitive help for problems detected by the accessibility checking that is required by checkpoint 4.1. 
More advanced implementations might provide the author with automated or semi-automated correction tools, in addition to guidelines and examples. 
Cheers, Jan Jan Richards Adaptive Technology Resource Centre (ATRC) University of Toronto jan.richards@utoronto.ca 
Hi, I disagree that there is a requirement for some automation in 4.1, since to me that suggests that prompting the authro for everything is not sufficient to meet the checkpoint. 
For the rest I propose we incorporate as is. 
Chaals Hello all, Here are some ideas for subtext: 4.1 Check for and inform the author of accessibility problems. 
[Relative Priority] This checkpoint requires at least some automation of accessibility checking. 
At minimum, prompt the author to manually check for specific problems. 
More advanced implementations might be automated to a high extent, prompting the author rarely and flagging problems as they occur. 
4.2 Assist authors in correcting accessibility problems. 
[Relative Priority] This checkpoint requires that, once accessibility problems have been found, either automatically or manually, authoring tools help the author to correct them properly. 
At minimum, provide context-sensitive help for problems detected by the accessibility checking that is required by checkpoint 4.1. 
More advanced implementations might provide the author with automated or semi-automated correction tools, in addition to guidelines and examples. 
Location: 21 Mitchell street FOOTSCRAY Vic 3011, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) Hi Charles, Actually, maybe we may need to re-think this checkpoint a bit. 
"Check for and inform the author" seems to me to imply al least some level of task automation on the part of the tool. 
But how much? 
I think we would all agree that it is not sufficient to put the full WCAG guideines and relevant techniques into the tool's help section for the author's reference. 
But, at the same time, we don't want to require that everything be automated, since some of the WCAG guidelines are not reasonably machine checkable at the current time. 
In your message, you mention "prompting for everything" should be sufficient to meet the checkpoint. 
Do you mean asking the user to perform a number of specific manual checks? 
Cheers, Jan Cheers, Jan Jan Richards Adaptive Technology Resource Centre (ATRC) University of Toronto jan.richards@utoronto.ca 
The minimum would be to ask the author to perform manual checks for each WCAG item (at the various priority levels). 
I agree that that would result in a horrid tool, but it would do the job better than many things people are using at the moment. 
One optimisation would be to customise the checks. 
Another is to automate parts of them. 
A good tool will do some of both and more besides. 
And the question of what part of the workflow this happens at is orthogonal - if it happens the tool can pass, if it doesn't the tool fails, and if it has to be configured to happen then the tool can only pass in that configuration. 
Cheers Charles I think we would all agree that it is not sufficient to put the full WCAG guideines and relevant techniques into the tool's help section for the author's reference. 
CMN:Yep. 
JR But, at the same time, we don't want to require that everything be automated, since some of the WCAG guidelines are not reasonably machine checkable at the current time. 
In your message, you mention "prompting for everything" should be sufficient to meet the checkpoint. 
Do you mean asking the user to perform a number of specific manual checks? 
Just a few questions: 1. Must a compliant tool start the check on its own? 
(i.e. after a save, before publishing, on the 27th minute of editing, etc.) Or is it sufficient to have a "Check Accessibility" item in the menu, or even a "How to check accessibility" section in somewhere in the Help. 
2. Is it sufficient to provide a copy of the applicable WCAG techniques document? 
Or would a compliant system re-work the techniques to make it easier to manually check one after another? 
3. How is the "inform" part done? 
Is this implicit in the fact that the author is the one who did the checks? 
Or should the tool allow the user to record the status of each manual check as it is done and then use this to inform them of the problems? 
Cheers, Jan Jan Richards Adaptive Technology Resource Centre (ATRC) University of Toronto jan.richards@utoronto.ca 
I think that a menu option to run the check is OK (but we should talk about that further I suspect). 
Having the stuff in help only is definitely not sufficient. 
I think that providing the manual checks prompting as the WCAG checklist is sufficient (but a pretty painful interface). 
Any good system (there are a few examples on the market) will do better than that, reworking the interface to suit the tool, and relating it correctly to the WCAG requirements. 
Where the user is required to participate in the testing the informing is done as part of that process, in general. 
Where there are automatic tests it must be by some other means... my 2 cents worth... Charles McCN Just a few questions: 1. Must a compliant tool start the check on its own? 
(i.e. after a save, before publishing, on the 27th minute of editing, etc.) Or is it sufficient to have a "Check Accessibility" item in the menu, or even a "How to check accessibility" section in somewhere in the Help. 
2. Is it sufficient to provide a copy of the applicable WCAG techniques document? 
Or would a compliant system re-work the techniques to make it easier to manually check one after another? 
3. How is the "inform" part done? 
Is this implicit in the fact that the author is the one who did the checks? 
Or should the tool allow the user to record the status of each manual check as it is done and then use this to inform them of the problems? 
Jan asked some great questions, but I think we should discuss more on Mondays conference call. 
As for my 2 cents, I think having the information in help is the minimum for meeting 4.2 but that 4.1 does require automation. 
I'm also somewhat unclear about the benefits of prompting the user to perform a manual test. 
Heather Swayne I think that a menu option to run the check is OK (but we should talk about that further I suspect). 
Having the stuff in help only is definitely not sufficient. 
I think that providing the manual checks prompting as the WCAG checklist is sufficient (but a pretty painful interface). 
Any good system (there are a few examples on the market) will do better than that, reworking the interface to suit the tool, and relating it correctly to the WCAG requirements. 
Where the user is required to participate in the testing the informing is done as part of that process, in general. 
Where there are automatic tests it must be by some other means... my 2 cents worth... Charles McCN Just a few questions: 1. Must a compliant tool start the check on its own? 
(i.e. after a save, before publishing, on the 27th minute of editing, etc.) Or is it sufficient to have a "Check Accessibility" item in the menu, or even a "How to check accessibility" section in somewhere in the Help. 
2. Is it sufficient to provide a copy of the applicable WCAG techniques document? 
Or would a compliant system re-work the techniques to make it easier to manually check one after another? 
3. How is the "inform" part done? 
Is this implicit in the fact that the author is the one who did the checks? 
Or should the tool allow the user to record the status of each manual check as it is done and then use this to inform them of the problems? 
4.1 Assist the author to check for accessibility problems This checkpoint requires the tool to provide the author with a utility that simplifies the process of checking documents for accessibility problems. 
At minimum, this utility must provide at least one, automated or manual, check for each and every WCAG 2.0 checkpoint. 
This utility must be designed so that it always displays those questions pertaining to "In General" WCAG 2.0 checkpoints, but only displays those "conditional" WCAG 2.0 checkpoints that have their conditions fulfilled by the document. 
DEFINE: "conditional" 2.0 checkpoints "in general" 2.0 checkpoints Except that for now we are still referring to WCAG 1, this looks good to me. 
Charles McCN 4.1 Assist the author to check for accessibility problems This checkpoint requires the tool to provide the author with a utility that simplifies the process of checking documents for accessibility problems. 
At minimum, this utility must provide at least one, automated or manual, check for each and every WCAG 2.0 checkpoint. 
This utility must be designed so that it always displays those questions pertaining to "In General" WCAG 2.0 checkpoints, but only displays those "conditional" WCAG 2.0 checkpoints that have their conditions fulfilled by the document. 
DEFINE: "conditional" 2.0 checkpoints "in general" 2.0 checkpoints Location: 21 Mitchell street FOOTSCRAY Vic 3011, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) 
