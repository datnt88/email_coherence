From RDF-comments [1]: 
While parsing the RDF/XML, the parser generated bNode IDs that were legal according to the RDF/XML specs and these were written as-is to the N-Triples document. 
An example bNode identifier is "node09FC-1E4A-2". 
In RDF/XML, the dashes (and underscores, etc.) are legal characters for bNode identifiers. 
In N-Triples, however, only (ASCII-)letters and number can be used. 
Thus the procedure sketched out above resulted in an illegal N-Triples document. 
So, my question is: wouldn't it be convenient to make the two definitions identical? 
Maybe it would be convenient, but I think any response should point out (and Concepts is quite clear about this [2]) that any particular representation of bnodes is always an artefact of the particular syntax used. 
When reading any syntax that uses bnode identifiers, applications must always be prepared to re-allocate the identifiers. 
I might even argue that having different syntax for N-triples and RDF/XML is (almost) a Good Thing, since it reinforces this point. 
#g [1] http://lists.w3.org/Archives/Public/www-rdf-comments/2003OctDec/0067.html 
[2] http://www.w3.org/TR/rdf-concepts/#section-URI-Vocabulary Graham Klyne 
I've not read the comment yet, going on Graham's quote. 
Suggested response is: In RDF/XML it would be unnatural to restrict bnode identifiers to US ASCII. 
This would prevent document authors from using bnode IDs with mnemonic identifiers in Thai for example. 
Given the goals of N-triple - a testing language, the restriction to US-ASCII is well-motivated. 
Thus it is not possible to align the two concepts while being faithful to the design goals of the two languages. 
It would be better to quote from the docs - I suspect there's a suitable piece about Ntriple being in US ASCII. 
Jeremy 
While parsing the RDF/XML, the parser generated bNode IDs that were legal according to the RDF/XML specs and these were written as-is to the N-Triples document. 
An example bNode identifier is "node09FC-1E4A-2". 
In RDF/XML, the dashes (and underscores, etc.) are legal characters for bNode identifiers. 
In N-Triples, however, only (ASCII-)letters and number can be used. 
Thus the procedure sketched out above resulted in an illegal N-Triples document. 
So, my question is: wouldn't it be convenient to make the two definitions identical? 
[2] http://www.w3.org/TR/rdf-concepts/#section-URI-Vocabulary Graham Klyne 
Well, OK, but guys, he has a point. 
Why not just tweak Ntriples to allow all of ASCII? 
That wouldn't break any of our stuff and it would be generally good-citizen-ish. 
Pat 
While parsing the RDF/XML, the parser generated bNode IDs that were legal according to the RDF/XML specs and these were written as-is to the N-Triples document. 
An example bNode identifier is "node09FC-1E4A-2". 
In RDF/XML, the dashes (and underscores, etc.) are legal characters for bNode identifiers. 
In N-Triples, however, only (ASCII-)letters and number can be used. 
Thus the procedure sketched out above resulted in an illegal N-Triples document. 
So, my question is: wouldn't it be convenient to make the two definitions identical? 
IHMC(850)434 8903 or (650)494 3973 home 40 South Alcaniz St.(850)202 4416 office FL 32501(850)291 0667 cell phayes@ihmc.us 
http://www.ihmc.us/users/phayes 
I believe that the (tacit) motivation is to maintain some level of compatibility with N3, where (in particular) "-" is a reserved character. 
jan grant, ILRT, University of Bristol. 
http://www.ilrt.bris.ac.uk/ Political talk? 
/ What is said can be unsaid / with good old BS -- ASCII haiku 
I find the argument underwhelming. 
The current situation is that the possible identifiers in Ntriple are a proper subset of those in RDF/XML. 
The proposed new situation is that the possible identifiers in Ntriple are a proper subset of those in RDF/XML. 
If you are generating identifiers and wish them to be interoperable between RDF/XML and NTriple it can be done in either case (generate Ntriple ids) If you are reading in RDF/XML and wisht to use the identifiers in Ntriple it can't be done in either case. 
(You need to do some work). 
We should only change things that are broken - I am not even convinced this is an improvement. 
Jeremy 
Thats because RDF/XML allows internationalized characters and NTriples does not, yes? 
Brian 
I was sure there was a reason and was waiting for it to appear. 
I expect a response, probably from Dave, along the lines of: - lunch ain't free - because RDF/XML is not restricted to US ascii, but permits international characters, an implementation must do some processing to translate RDF/XML bnode ID's to b-triples bnode IDs - the n-triple b-node id's are designed to be compatible with N3 as some implementations use N3 processors should put this one to bed. 
Brian 
That's one of the reasons. 
I've replied to the commentor, explaining why it's not possible, or unwise to unify these. 
I don't propose it needs any WG meeting time. 
Dave 
