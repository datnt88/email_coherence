The latest version of tidy automatically replaces hex color values with the 
corresponding names. 
The code looks as if this was supposed to become a 
configuration option in the future but is currently hardcoded to yes. 
I believe the default should be to not replace colors -- "#000000" is just as valid as "black". 
The option probably should allow conversions in both directions, i.e. ColorAttributes: symbolic|hexadecimal|asis 
Klaus Johannes Rusch KlausRusch@atmedia.net 
Good find. 
Thanks. 
Have submitted bug #477643. 
Bj?rn, it appears you intended this behavior to be configurable. 
Do you agree we should add the config option? 
My suggestion is to make a simple --replace-color yes|no option to work in concert with your existing code and leave the bidirectional conversion Klaus is requesting as a future task. 
Also, the list of portable color names is much bigger than the 16 HTML4 
colors. 
See Danny Goodman's "Dynamic HTML" or take it easy, Charlie 
The latest version of tidy automatically replaces hex color values with the 
corresponding names. 
The code looks as if this was supposed to become a 
configuration option in the future but is currently hardcoded to yes. 
I believe the default should be to not replace colors -- "#000000" is just as 
valid as "black". 
The option probably should allow conversions in both directions, i.e. ColorAttributes: symbolic|hexadecimal|asis 
Klaus Johannes Rusch KlausRusch@atmedia.net 
No, the behaivour is intended, Tidy should IMO always transform the case of hex digits and replace those 16 colors with their corresponding color names. 
I don't see any good reason why one wants Tidy to turn readable color names to unreadable color codes. 
Bj?rn H?hrmann { mailto:bjoern@hoehrmann.de } http://www.bjoernsworld.de am Badedeich 7 } Telefon: +49(0)4667/981028 { http://bjoern.hoehrmann.de 
25899 Dageb?ll { PGP Pub. 
KeyID: 0xA4357E78 } http://www.learn.to/quote/ 
There are at least two good reasons: 
* Color names are supported by MOST browsers but there are some, admittedly 
historic, browsers which only understand color values. 
Color values are the least common denominator (at least I am not aware of a browser supporting 
names but not values). 
* tidy should change what needs to be changed, but not mess with code that is already valid. 
The author of a document may have had a good reason, or just a personal preference, for choosing a color value instead of a color name. 
I do not see a benefit in making tidy unusable for folks who need to or want to use color values. 
Klaus Johannes Rusch KlausRusch@atmedia.net 
Why enforce this 'personal' preference? 
Well, the obvious example is varying browser support for color names. 
Regards, Doug 
Please name them. 
Color names were included in all HTML versions, user 
agents that do not support them are simply non-conforming. 
There may be many that do not support e.g. color=orange, since orange is no valid color keyword. 
Tidy generates a canonical version of the document. 
What this includes is not specified. 
I don't argue about an option to prevent the change the color values, I argue about conversions in both directions. 
Bj?rn H?hrmann { mailto:bjoern@hoehrmann.de } http://www.bjoernsworld.de am Badedeich 7 } Telefon: +49(0)4667/981028 { http://bjoern.hoehrmann.de 
25899 Dageb?ll { PGP Pub. 
KeyID: 0xA4357E78 } http://www.learn.to/quote/ 
Color names introduced in HTML 3.2 but implemented by browser vendors before the spec was finalized. 
Netscape 1.1(!) added support for hex values but not for names Netscape 1.22 interprets all color names as blue IBM WebExplorer 1.2 has color support for hex values but not for names. 
No doubt user agents should have supported color names. 
They don't. 
Following the principle that "an implementation must be conservative in its sending behaviour, and liberal in its receiving behaviour" (RFC 791 Internet Protocol) choosing something all browsers understand, whether or not they comply with standards, would be reasonable. 
IMHO it should be specified what the canonical version of a document is, otherwise running tidy multiple times against the same input document will result in a different output document every time (which makes it absolutely useless in an environment with version control because you end up checking in modifications which are just tidy's mood of the day). 
Why? Klaus Johannes Rusch KlausRusch@atmedia.net 
