In the 12.2 draft, Section 2.5 states: If the request-URL identifies a version-controlled resource, the resource just remains under version-control. 
This allows a client to be unaware of whether or not a server automatically puts a resource under version control when it is created. 
And then lists as a Postcondition: (DAV:already-under-version-control): If the request-URL identified a resource already under version control at the time of the request, the VERSION-CONTROL request MUST NOT change the DAV:checked-in or DAV:checked-out property of that version-controlled resource. 
Section 1.6 then leads one to believe that this condition would result in a 403 or a 409 status response, even though this appears to be normal operation, and hence would warrant a 200 OK response. 
Geoff Clemm's message of February 4, 2001 (http://lists.w3.org/Archives/Public/ietf-dav-versioning/2001JanMar/0311.htm l) makes it sound like this Postcondition would be dropped. 
Is it intentionally still in the draft? 
- Jim (DAV:already-under-version-control): If the request-URL identified a resource already under version control at the time of the request, the VERSION-CONTROL request MUST NOT change the DAV:checked-in or DAV:checked-out property of that version-controlled resource. 
Hmm, I think I was thrown off by the title of this precondition. 
It seems that the purpose of the postcondition is to flag when the property invariant (DAV:checked-in' == DAV:checked-in) ^ (DAV:checked-out' == DAV:checked-out) cannot be maintained, and so the name of the postcondition really should be something like "DAV:property-invariant-violated". 
- Jim The name of this postcondition probably should be changed to something like "DAV:must-not-change-existing-checked-in-out". 
It just says that a server must return a 403/409 if it cannot satisfy this condition. 
It's hard to imagine how a server could fail to satisfy the postcondition that tells it to leave something alone, but I gave it a name since all the other postconditions have names. 
The "return this on success" semantics has been removed, as stated in the message you quoted. 
Cheers, Geoff In the 12.2 draft, Section 2.5 states: If the request-URL identifies a version-controlled resource, the resource just remains under version-control. 
This allows a client to be unaware of whether or not a server automatically puts a resource under version control when it is created. 
And then lists as a Postcondition: (DAV:already-under-version-control): If the request-URL identified a resource already under version control at the time of the request, the VERSION-CONTROL request MUST NOT change the DAV:checked-in or DAV:checked-out property of that version-controlled resource. 
Section 1.6 then leads one to believe that this condition would result in a 403 or a 409 status response, even though this appears to be normal operation, and hence would warrant a 200 OK response. 
Geoff Clemm's message of February 4, 2001 (http://lists.w3.org/Archives/Public/ietf-dav-versioning/2001JanMar/0311.htm l) makes it sound like this Postcondition would be dropped. 
Is it intentionally still in the draft? 
- Jim Yes, I've gone and fixed that title. 
Note though that the title is always of the form "must do or not do X", i.e. what the postcondition gets you, and not "what went wrong". 
(Sort of a glass half full vs. half empty issue :-). 
So a standard error message would be "Could not ensure xxx". 
And "Could not ensure property-invariant-violated" probably isn't what we want (:-). 
Cheers, Geoff (DAV:already-under-version-control): If the request-URL identified a resource already under version control at the time of the request, the VERSION-CONTROL request MUST NOT change the DAV:checked-in or DAV:checked-out property of that version-controlled resource. 
Hmm, I think I was thrown off by the title of this precondition. 
It seems that the purpose of the postcondition is to flag when the property invariant (DAV:checked-in' == DAV:checked-in) ^ (DAV:checked-out' == DAV:checked-out) cannot be maintained, and so the name of the postcondition really should be something like "DAV:property-invariant-violated". 
- Jim 
