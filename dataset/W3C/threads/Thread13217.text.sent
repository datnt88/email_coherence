Hello Here is finally the promised draft of the pager of my ALTifier project. 
You can download it from http://www.vorburger.ch/project/alt/ in Word, PDF or PS format. 
Sorry for no time for an HTML version of this draft. 
The abstract is given below. 
Notice that this is a draft, and one should frequently substitute "is" by "will be" ... ;-) All comment is welcome! 
Any pointers to libraries that might be usefull are of interest; especially a proxy server, a GIF &amp; PNG comment extracting stuff, and a simple OCR API. 
Regards, Michael ABSTRACT of "ALTifier - Web Accessibility Enhancement Tool" full report at http://www.vorburger.ch/project/alt/ 
The goal of this project (?ALTifier - Web Accessibility Enhancement Tool?) was to research and implement tools to generate textual alternatives such as the ALT attribute in IMG and other graphical HTML elements. 
Often image and some other HTML tags lack a textual alternative. 
This makes them inaccessible to screen readers, non-visual/text-only browsers and braille readers. 
Adding alternate descriptions can make such pages more accessible. 
On one hand, the project focuses on HTML authors with an "author mode" tool to set ALT texts on a site-wide per-image basis, instead per each occurrence in HTML documents. 
The idea of this tool is motivate HTML authors to set ALT on all images by facilitating this job. 
On the other hand, for users surfing on existing sites with lack of ALT, a "user mode" tool tries to guess ALT text by heuristics. 
This tool is a proxy server which filters/transforms HTML and reads pages from the original Web server, inserts ALT, and sends them on to the Web client. 
The heuristics used to guess alternate text range from looking at an image's height &amp; width, following links to extract a description from a document title, apply OCR to find text on buttons, to some simple natural language recognition. 
The project report gives a detailed description of the implementation and explains design choices. 
Michael Vorburger mike@vorburger.ch 
&amp; michael.vorburger@epfl.ch 
QUOTE: "Everything that does not kill you, makes you stronger." 
HOMEPAGE: http://www.vorburger.ch 
Correct URL is http://www.vorburger.ch/projects/alt/ to get the PDF in HTML just refer to From: Chris Ridpath [mailto:chris.ridpath@utoronto.ca] 
Sent: Thursday, December 03, 1998 4:40 PM I noticed that you are looking for 'spacer' images (images height or width is 1) and setting the Alt to NULL (Alt=""). 
We've been having some discussions on the list about this sort of thing. 
For a spacer image, I think the Alt should be set to spaces (" ") so that screen readers know that the image is a spacer and not just an image without Alt text. 
Comments? 
Maybe we are having two slightly different "spacers" in mind: You seem to be thinking of "in-line" spacers to get a certain space between two words, correct? 
I am thinking of spacers that are used to force a certain table cell width or similar, as used 'en masse' on cnet.com sites and similar. 
(I also used them on I site I did, http://www.ipb.org, because I could not find another means of forcing column size.) 
I agree that "in-line spacers" should probably have alt=" " (how many spaces?) but the "others" alt="" -- How can we distinguish them? 
Or should I just set alt=" " for all such spacers, in a first version? 
Please comment. 
Regards, Michael Michael Vorburger mike@vorburger.ch 
&amp; michael.vorburger@epfl.ch 
QUOTE: "One has to dream of the impossible to reach the possbile." 
(H. 
Hesse) HOMEPAGE: http://www.vorburger.ch/ 
Mike, The Adobe converter Daniel mentioned produces a page 1 with garbage characters. 
I did a quick edit by hand to correct that error and added some ALT text to the image of the dialog box. 
I attached it to this email if you want to put it on your web site. 
(I don't know if the attachment will make it through the ER-IG email list forwarding, but Mike should get it since he's addressed directly). 
Len Leonard R. Kasday, Ph.D. Universal Design Engineer, Institute on Disabilities/UAP, and Adjunct Professor, Electrical Engineering Temple University Ritter Hall Annex, Room 423, Philadelphia, PA 19122 kasday@acm.org 
(215} 204-2247 (voice) (800) 750-7428 (TTY) Tx, it is now up at http://www.vorburger.ch/projects/alt/altpaper.html Michael Michael Vorburger mike@vorburger.ch 
&amp; michael.vorburger@epfl.ch 
ERASMUS European Students Exchange Program - FUN! Do it: Some initial reactions on reading through Michael's document: ** Strategy The document talks about three "frontends:" I would call these "representative applications" or insertions of the backend technology. 
1. Fully decisive ALT insertion as a batch transform on an HTML document. 
Demonstration is by HTTP proxy server which applies the transform. 
[Note: I would rather call this BATCH mode that USER mode because of the TRY HARDER concept in interactive user scenarios.] 2. [Un*x] command-line tool for site-wide ALT maintenance. 
3. Interactive "site-wide" Windows GUI tool. 
The third scenario is one that Michael Pieper's student is also addressing, if I remember correctly. 
I believe that there are other scenarios that the ER IG might give a high priority or the WG might be able to support with code such as integration into a Bobby report. 
I hope we can talk some about the shape of application scenarios for the central "novel" module in this project which is the guess generator. 
There are ER-IG issues about the expected utility of different application configurations such as OCR, and ER-WG issues about how can we use existing code such as Bobby as demonstration/evaluation harnesses for new code by swapping resources. 
** Tactics: [editorial] in the discussion of OBJECT repair it says "setting title only for the innermost" and it may be misunderstood unless you expand to "setting the TITLE value as the content ony for..." [detail] changing a bare ALT with no value indication to ALT="" is a repair that may be automatic in some circumstances and not others. 
I am suggesting that we separate candidate-generation methods such as this which are entirely determined by the resources found from "are we done?" 
rules which vary from application scenario to application scenario. 
[integration - ER-WG?] 
I am concerned that the PI to the A-Prompt works at too local a level to move the "guess" function in under the A-prompt call. 
The "guess function uses more global information than the A-Prompt call gets. 
For methods experimentation, I would think of a shared HTML -- DOM -- HTML environment or abstract PI to a variety of such environments as a foundation for integrating experimental transforms. 
This would leave the transforms operating on the DOM interface. 
Is this something we can do? 
Nobody in this group has yet come forward spontaneously working that way. 
[bias] As PF chair, I want this experiment capability to grow into something where one can prototype propsals that we offer to W3C working groups such as how the DOM should implement semantics that is in a schema and not an XML DTD (except by reference). 
Al 
