The ERB schedule calls for voting on these Feb. 19th. 
I've take the liberty of grouping a few here that seem totally related. 
2.1.a 
Should we allow link recognition via a reserved attribute? 
2.1.b 
If so, should we generalize this and say that it's an AF? 2.1.c 
If so, should we provide an introduction to AF's? 2.1.d 
If we allow such recognition, what should the attribute be, and what should be the values for each element type we define? 
Cheers, Tim Bray tbray@textuality.com 
http://www.textuality.com/ 
+1-604-708-9592 And we don't need to drag HyTime in to explain that. 
Amen. 
It should be named 'XML-form' Do we propose an AF for what users and authors currently call "forms" (ie fill-in forms a la HTML FORM )? 
I foresee infinite confusion here. 
I don't much care what name is picked, but no leading or trailing hyphens. 
But if we could find a reason to use blink it would be so amusing! 
Maybe Eve could revisit "butt" wrt "link" with a view to this :-) ///Peter And we don't need to drag HyTime in to explain that. 
Dead wrong. 
First, "drag in" is inflamatory not helpful. 
If it is an arch form, then referencing ISO 10744 does not hurt. 
Second, when SGML Lite is established by ISO, it makes the relationship clear and concise. 
Y'all are wandering into the weeds of religion and personal animosities. 
It won't help. 
len And we don't need to drag HyTime in to explain that. 
I meant that if we are taking a significantly shrunken subset of HyTime Architectural Forms [for instance, I think we can and should avoid any restrictions on content models], then it may be simpler to explain what we are doing directly, rather than pointing at HyTime, and explaining the differences. 
If you are defining a scripting language containing only the commands "if-then-else", expressions, variable assignment and "while" loops, pointing to C++ and saying what to ignore is not a productive explanatory strategy. 
You might mention that C++ compaitibility is a goal, but that would be additional information for the intersted, not part of the core explanation. 
"Drag in" was intended to say that making normative reference to irrelevant information is bad. 
In a separate message (maybe the same, for all I remember) I clearly advocated retaining a reference to HyTime, and it's AF facilities. 
I personally think it was a mistake to try to standardise them for applicability beyond HyTime, but they exist and we should not hide that fact. 
I'm not trying to supress the HyTime links -- HyTime has been very influential in forming how at least some of us think about this stuff -- but I do want to make XML, and XML linking stand on their own, without normative references to ISO standards. 
No personal animosity intended, nor religious argument either. 
I'm religious about separating declaration and processing (though if we don't define sufficiently powerful processing, I agree with you, we are SOL). 
I'm certainly not religious about HyTime either way. 
In fact, I'm aggressively agnostic. 
I think you may mistrust me because I'm so ready to question HyTime's specific solutions, but I don't regret having spent the time on it that I have, nor do I think it should be supressed. 
-- David David Durand dgd@cs.bu.edu \ david@dynamicDiagrams.com 
Boston University Computer Science \ Sr. Analyst --------------------------------------------\ http://dynamicDiagrams.com/ MAPA: mapping for the WWW \__________________________ Then what am I to make of Eliot's assertion that XML Linking is conforming HyTime. 
I admit that I don't have the time to work out the details of that. 
I also don't like restrictions on content models. 
It is a lot less ugly as deRose has shown to use them for linking information. 
That is the sticking point. 
Is it irrelevant? 
I'm not sure if that goal has any utility. 
Whereas, gratuitous references are not useful, normative references establish a chain of authoritative information. 
That does have utility. 
WG8 is very likely to build the SGML Lite over XML and that is a win-win for all of us. 
Oh, I don't distrust the questions at all. 
I wish we had all been doing this some years ago online and in this fevered way. 
But that is past. 
What I want to see now is a clear authoritative chain of standards expressed as running code and embraced as COTS applications. 
Then we can all go watch deRose ice skate. 
len I do want to make XML, and XML linking stand on their own, without normative references to ISO standards. 
I'm not sure if that goal has any utility. 
Whereas, gratuitous references are not useful, normative references establish a chain of authoritative information. 
That does have utility. 
David: If that is your goal, then what am I to make of Design Goal (3) "XML shall be compatibble with SGML"? 
What's more normative than "shall"? 
More ISO than SGML? 
Len: I agree. 
The kind of work I do is long-lived. 
For the sake of the integrity of my client's content, I want a stable reference point. 
Normative references, warts and all, provide that. 
On the internet, people scoff at the very thoguht of ISO standards because they are not willing to pay to read them. 
If we want XML to be accepted we must make the documents authoritative and self-standing. 
It is our job to make XML SGML conforming (or not). 
It is an implementor's job to follow what _We_ specify. 
We will not ease their task by making them read the ISO documents. 
That's the difference between an informative, and a normative citation. 
If it is normative, we require thaqt they read both. 
I think that this is socially, and politially unacceptable, and technically unnecessary. 
It is also implied by the goal of a 20page definition. 
If the definition is 20 pages, and makes nromative reference to 8879, we have made things _more complicated_ not _less complicated_. 
If we add the HyTime standard, we have compounded this problem by at least a factor of 2-3. 
Compatible means compatible. 
I can define language A as a subset of language B without making explicit reference to language B or its definition documents, so long as the definitions themselves meet the criterion. 
Clear enough now? 
-- David I agree that we should cite all relevant ISO documents for those interested in further background, or in need of features we are not providing that those standards do provide. 
Endorsement by the ISO is a feature that is variably rated by our target users. 
David Durand dgd@cs.bu.edu \ david@dynamicDiagrams.com 
Boston University Computer Science \ Sr. Analyst --------------------------------------------\ http://dynamicDiagrams.com/ MAPA: mapping for the WWW \__________________________ 
