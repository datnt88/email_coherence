(S1 (S (ADVP (RB All)) (, ,) (NP (PRP I)) (VP (AUX am) (VP (VBG using) (NP (NN JTidy)) (S (VP (TO to) (VP (VB parse) (NP (DT an) (NN input) (NN string)) (PP (IN into) (NP (DT an) (NN Element)))))))) (. .)))
(S1 (S (ADVP (RB Later)) (, ,) (SBAR (WHADVP (WRB when)) (S (NP (PRP I)) (VP (VBP serialize) (NP (DT the) (NN Element)) (ADVP (RB back) (PP (IN into) (NP (DT a) (NN String))))))) (, ,) (NP (PRP I)) (VP (VBP lose) (NP (DT a) (NN space))) (. .)))
(S1 (SQ (AUX Is) (NP (EX there)) (NP (NP (DT an) (NN option)) (SBAR (S (NP (PRP I)) (VP (MD can) (VP (VB specify) (ADVP (RB so) (RB as) (RB not)) (S (VP (TO to) (VP (VB lose) (NP (DT the) (NN space)))))))))) (. ?)))
(S1 (S (PP (IN In) (NP (NP (DT the) (NN sample) (NN code)) (VP (VBN provided) (PP (IN below))))) (, ,) (NP (PRP I)) (VP (VBP lose) (NP (DT the) (NN space)) (ADVP (RB just) (RB prior) (PP (TO to) (NP (NP (DT the) (NN letter)) (`` ``) (NX (NNP C)) ('' ''))))) (. .)))
(S1 (S (NP (PRP I)) (VP (AUX 'm) (ADJP (RB pretty) (JJ sure) (SBAR (S (NP (DT the) (NN problem)) (VP (AUX is) (VP (VBN introduced) (PP (IN in) (NP (NP (NP (DT the) (JJ first) (NN part)) (PRN (-LRB- -LRB-) (NP (DT the) (NN parsing)) (-RRB- -RRB-))) (CONJP (RB rather) (IN than)) (NP (NP (DT the) (JJ latter) (NN part)) (PRN (-LRB- -LRB-) (NP (DT the) (NN serializing)) (-RRB- -RRB-))))))))))) (. .)))
(S1 (S (ADVP (RB Interestingly)) (, ,) (SBAR (IN if) (S (NP (PRP I)) (VP (VBP change) (S (NP (PRP$ my) (NN input)) (VP (TO to) ('' '') (VP (VBZ html) (NP (JJ title/) (NN body)) (NP (DT A) (NNP b) (NNP B) (NN /b) (NNP C) (JJ /body) (NNS /html))) ('' '') (CC and) (VP (VB use) (NP (NP (NNS setXmlTags)) (PRN (-LRB- -LRB-) (JJ false) (-RRB- -RRB-))))))))) (, ,) (NP (DT the) (NN space)) (VP (AUX is) (RB not) (VP (VBN lost))) (. .)))
(S1 (FRAG (WRB Why) (. ?)))
(S1 (S (S (ADVP (RB Sincerely)) (, ,) (NP (NP (NNP Michael) (NNP S.) (NNP Goldberg)) (NN Sample) (NNP Code) (: :) (NP (NP (JJ Tidy) (NN tidyInstance)) (X (SYM =) (ADJP (ADJP (JJ new) (JJ Tidy)) (-LRB- -LRB-) (-RRB- -RRB-)))) (: ;)) (VP (VBZ tidyInstance.setXmlTags))) (-LRB- -LRB-)))
(S1 (S (LST (JJ true) (-RRB- -RRB-)) (: ;) (NP (NNP String)) (VP (VBG inString) (SYM =) ('' '') (VP (VB temp) (NP (NP (DT A) (NNP b) (NNP B) (JJ /b) (NN C) (NN /temp)) ('' '') (: ;) (NP (NP (NNP ByteArrayInputStream)) (PP (IN in) (X (SYM =)) (NP (NP (JJ new) (NNP ByteArrayInputStream)) (PRN (-LRB- -LRB-) (NNS inString.getBytes) (-LRB- -LRB-) (-RRB- -RRB-))))))))))
(S1 (S (-RRB- -RRB-) (: ;) (S (NP (NNS //)) (VP (VBP Use) (NP (NNP JTidy)) (S (VP (TO to) (VP (VB parse) (NP (DT the) (NN input)) (PP (IN into) (NP (NP (DT a) (NNP Document) (NNP Document) (NN document)) (VP (SYM =) (NP (NN tidyInstance.parseDOM)))))))))) (-LRB- -LRB-)))
(S1 (S (PP (IN in) (PRN (, ,) (INTJ (VB null)) (-RRB- -RRB-))) (: ;) (NP (NNP ElementdocumentElement)) (VP (SYM =) (VP (VB document.getDocumentElement) (-LRB- -LRB-) (-RRB- -RRB-))) (: ;)))
(S1 (NP (NP (NP (CD //) (NN Setup)) (NP (DT an) (NN output) (NN format)) (PP (IN for) (NP (DT the) (NN makeSerializer)))) (PRN (-LRB- -LRB-) (FRAG (-RRB- -RRB-) (VP (VB call) (PP (IN below) (NP (NNP OutputFormat) (NN outputFormat)))) (X (SYM =)) (NP (JJ new) (NN OutputFormat))) (-LRB- -LRB-) (-RRB- -RRB-)) (: ;) (NP (NN outputFormat.setOmitXMLDeclaration)) (-LRB- -LRB-)))
(S1 (S (S (LST (JJ true) (-RRB- -RRB-)) (: ;) (NP (NNS //)) (VP (VBP Set) (PRT (RP up)) (NP (NP (DT a) (NN byteArrayOutputStream)) (, ,) (NP (NP (DT the) (NN output)) (PP (IN of) (NP (DT the) (NN makeSerializer))))) (PRN (-LRB- -LRB-) (S (-RRB- -RRB-) (VP (VB call) (PP (PP (IN below) (FRAG (X (FW ByteArrayOutputStream) (FW byteArrayOutputStream) (SYM =)) (NP (JJ new) (NNP ByteArrayOutputStream)))) (-LRB- -LRB-)))) (-RRB- -RRB-)))) (: ;) (S (NP (NNS //)) (VP (VBP Get) (NP (NP (DT a) (NN SerializerFactory)) (PP (IN for) (NP (DT the) (NN makeSerializer)))) (-LRB- -LRB-) (-RRB- -RRB-) (VP (VB call) (PP (IN below) (NP (NP (JJ SerializerFactory) (NN xmlSerializerFactory)) (VP (SYM =) (NP (NNP SerializerFactory.getSerializerFactory)))))))) (-LRB- -LRB-)))
(S1 (S (NP (NNP Method.XML)) (-RRB- -RRB-) (VP (PRN (: ;) (S (NP (CD //) (NNP Use) (NN serializer)) (VP (TO to) (VP (VB convert) (NP (DT the) (NN element)) (PP (IN into) (NP (NP (DT a) (NNP String) (NNP XMLSerializer) (NN xmlSerializer)) (VP (SYM =) (NP (NP (-LRB- -LRB-) (NNP XMLSerializer) (-RRB- -RRB-) (NN xmlSerializerFactory.makeSerializer)) (PRN (-LRB- -LRB-) (NP (JJ new) (NNP OutputStreamWriter) (PRN (-LRB- -LRB-) (INTJ (UH byteArrayOutputStream)) (-RRB- -RRB-) (, ,)) (NN outputFormat)) (-RRB- -RRB-))))))))) (: ;)) (VB xmlSerializer.serialize) (NP (NP (-LRB- -LRB-) (NN documentElement) (-RRB- -RRB-)) (: ;) (NP (NP (NNP System.out.println)) (PRN (-LRB- -LRB-) (INTJ (UH byteArrayOutputStream)) (-RRB- -RRB-)) (: ;))))))
(S1 (S (VP (VP (VBG Reposting) (, ,) (SBAR (IN as) (S (NP (PRP I)) (ADVP (RB still)) (VP (AUX have) (NP (DT this) (NN issue)))))) (, ,) (CC and) (VP (MD would) (VP (VB love) (S (VP (TO to) (VP (VB see) (NP (DT a) (NN response)))))))) (. .)))
(S1 (SQ (AUX Is) (NP (EX there)) (NP (NP (DT a) (JJ separate) (NN forum)) (SBAR (S (VP (TO to) (VP (VB discuss) (NP (NNP JTidy))))))) (. ?)))
(S1 (S (NP (PRP I)) (VP (VB apologize) (PP (IN in) (NP (NN advance))) (SBAR (IN if) (S (NP (DT this)) (VP (AUX is) (RB not) (NP (NP (DT the) (JJ correct) (NN place)) (SBAR (S (VP (TO to) (VP (VB discuss) (NP (JJ JTidy) (NNS matters))))))))))) (. .)))
(S1 (S (ADVP (RB Sincerely)) (, ,) (NP (NP (NNP Michael) (NNP S.) (NNP Goldberg)) (NP (DT All))) (, ,) (NP (PRP I)) (VP (AUX am) (VP (VBG using) (NP (NN JTidy)) (S (VP (TO to) (VP (VB parse) (NP (DT an) (NN input) (NN string)) (PP (IN into) (NP (DT an) (NN Element)))))))) (. .)))
(S1 (S (ADVP (RB Later)) (, ,) (SBAR (WHADVP (WRB when)) (S (NP (PRP I)) (VP (VBP serialize) (NP (DT the) (NN Element)) (ADVP (RB back) (PP (IN into) (NP (DT a) (NN String))))))) (, ,) (NP (PRP I)) (VP (VBP lose) (NP (DT a) (NN space))) (. .)))
(S1 (SQ (AUX Is) (NP (EX there)) (NP (NP (DT an) (NN option)) (SBAR (S (NP (PRP I)) (VP (MD can) (VP (VB specify) (ADVP (RB so) (RB as) (RB not)) (S (VP (TO to) (VP (VB lose) (NP (DT the) (NN space)))))))))) (. ?)))
(S1 (S (PP (IN In) (NP (NP (DT the) (NN sample) (NN code)) (VP (VBN provided) (PP (IN below))))) (, ,) (NP (PRP I)) (VP (VBP lose) (NP (DT the) (NN space)) (ADVP (RB just) (RB prior) (PP (TO to) (NP (NP (DT the) (NN letter)) (`` ``) (NX (NNP C)) ('' ''))))) (. .)))
(S1 (S (NP (PRP I)) (VP (AUX 'm) (ADJP (RB pretty) (JJ sure) (SBAR (S (NP (DT the) (NN problem)) (VP (AUX is) (VP (VBN introduced) (PP (IN in) (NP (NP (NP (DT the) (JJ first) (NN part)) (PRN (-LRB- -LRB-) (NP (DT the) (NN parsing)) (-RRB- -RRB-))) (CONJP (RB rather) (IN than)) (NP (NP (DT the) (JJ latter) (NN part)) (PRN (-LRB- -LRB-) (NP (DT the) (NN serializing)) (-RRB- -RRB-))))))))))) (. .)))
(S1 (S (ADVP (RB Interestingly)) (, ,) (SBAR (IN if) (S (NP (PRP I)) (VP (VBP change) (S (NP (PRP$ my) (NN input)) (VP (TO to) ('' '') (VP (VBZ html) (NP (JJ title/) (NN body)) (NP (DT A) (NNP b) (NNP B) (NN /b) (NNP C) (JJ /body) (NNS /html))) ('' '') (CC and) (VP (VB use) (NP (NP (NNS setXmlTags)) (PRN (-LRB- -LRB-) (JJ false) (-RRB- -RRB-))))))))) (, ,) (NP (DT the) (NN space)) (VP (AUX is) (RB not) (VP (VBN lost))) (. .)))
(S1 (FRAG (WRB Why) (. ?)))
(S1 (S (S (ADVP (RB Sincerely)) (, ,) (NP (NP (NNP Michael) (NNP S.) (NNP Goldberg)) (NN Sample) (NNP Code) (: :) (NP (NP (JJ Tidy) (NN tidyInstance)) (X (SYM =) (ADJP (ADJP (JJ new) (JJ Tidy)) (-LRB- -LRB-) (-RRB- -RRB-)))) (: ;)) (VP (VBZ tidyInstance.setXmlTags))) (-LRB- -LRB-)))
(S1 (S (LST (JJ true) (-RRB- -RRB-)) (: ;) (NP (NNP String)) (VP (VBG inString) (SYM =) ('' '') (VP (VB temp) (NP (NP (DT A) (NNP b) (NNP B) (JJ /b) (NN C) (NN /temp)) ('' '') (: ;) (NP (NP (NNP ByteArrayInputStream)) (PP (IN in) (X (SYM =)) (NP (NP (JJ new) (NNP ByteArrayInputStream)) (PRN (-LRB- -LRB-) (NNS inString.getBytes) (-LRB- -LRB-) (-RRB- -RRB-))))))))))
(S1 (S (-RRB- -RRB-) (: ;) (S (NP (NNS //)) (VP (VBP Use) (NP (NNP JTidy)) (S (VP (TO to) (VP (VB parse) (NP (DT the) (NN input)) (PP (IN into) (NP (NP (DT a) (NNP Document) (NNP Document) (NN document)) (VP (SYM =) (NP (NN tidyInstance.parseDOM)))))))))) (-LRB- -LRB-)))
(S1 (S (PP (IN in) (PRN (, ,) (INTJ (VB null)) (-RRB- -RRB-))) (: ;) (NP (NNP ElementdocumentElement)) (VP (SYM =) (VP (VB document.getDocumentElement) (-LRB- -LRB-) (-RRB- -RRB-))) (: ;)))
(S1 (NP (NP (NP (CD //) (NN Setup)) (NP (DT an) (NN output) (NN format)) (PP (IN for) (NP (DT the) (NN makeSerializer)))) (PRN (-LRB- -LRB-) (FRAG (-RRB- -RRB-) (VP (VB call) (PP (IN below) (NP (NNP OutputFormat) (NN outputFormat)))) (X (SYM =)) (NP (JJ new) (NN OutputFormat))) (-LRB- -LRB-) (-RRB- -RRB-)) (: ;) (NP (NN outputFormat.setOmitXMLDeclaration)) (-LRB- -LRB-)))
(S1 (S (S (LST (JJ true) (-RRB- -RRB-)) (: ;) (NP (NNS //)) (VP (VBP Set) (PRT (RP up)) (NP (NP (DT a) (NN byteArrayOutputStream)) (, ,) (NP (NP (DT the) (NN output)) (PP (IN of) (NP (DT the) (NN makeSerializer))))) (PRN (-LRB- -LRB-) (S (-RRB- -RRB-) (VP (VB call) (PP (PP (IN below) (FRAG (X (FW ByteArrayOutputStream) (FW byteArrayOutputStream) (SYM =)) (NP (JJ new) (NNP ByteArrayOutputStream)))) (-LRB- -LRB-)))) (-RRB- -RRB-)))) (: ;) (S (NP (NNS //)) (VP (VBP Get) (NP (NP (DT a) (NN SerializerFactory)) (PP (IN for) (NP (DT the) (NN makeSerializer)))) (-LRB- -LRB-) (-RRB- -RRB-) (VP (VB call) (PP (IN below) (NP (NP (JJ SerializerFactory) (NN xmlSerializerFactory)) (VP (SYM =) (NP (NNP SerializerFactory.getSerializerFactory)))))))) (-LRB- -LRB-)))
(S1 (S (NP (NNP Method.XML)) (-RRB- -RRB-) (VP (PRN (: ;) (S (NP (CD //) (NNP Use) (NN serializer)) (VP (TO to) (VP (VB convert) (NP (DT the) (NN element)) (PP (IN into) (NP (NP (DT a) (NNP String) (NNP XMLSerializer) (NN xmlSerializer)) (VP (SYM =) (NP (NP (-LRB- -LRB-) (NNP XMLSerializer) (-RRB- -RRB-) (NN xmlSerializerFactory.makeSerializer)) (PRN (-LRB- -LRB-) (NP (JJ new) (NNP OutputStreamWriter) (PRN (-LRB- -LRB-) (INTJ (UH byteArrayOutputStream)) (-RRB- -RRB-) (, ,)) (NN outputFormat)) (-RRB- -RRB-))))))))) (: ;)) (VB xmlSerializer.serialize) (NP (NP (-LRB- -LRB-) (NN documentElement) (-RRB- -RRB-)) (: ;) (NP (NP (NNP System.out.println)) (PRN (-LRB- -LRB-) (INTJ (UH byteArrayOutputStream)) (-RRB- -RRB-)) (: ;))))))
(S1 (S (NP (DT This)) (VP (AUX is) (NP (NP (DT an) (JJ OK) (NN place)) (PP (IN for) (NP (JJ JTidy) (NNS questions))))) (. .)))
(S1 (S (NP (NP (CD One) (NN thing)) (SBAR (S (VP (TO to) (VP (VB keep) (PP (IN in) (NP (NN mind)))))))) (, ,) (SBAR (RB even) (WHADVP (WRB when)) (S (VP (VBG parsing) (NP (JJ generic) (NNS XML))))) (, ,) (NP (NP (JJ Tidy)) (PRN (-LRB- -LRB-) (NP (VBG including)) (, ,) (NP (NNP AFAIK)) (, ,) (NP (NNP JTidy)) (-RRB- -RRB-))) (VP (MD will) (ADVP (RB still)) (VP (VP (VB recognize) (NP (NNP HTML) (NNS elements))) (CC and) (VP (VB treat) (NP (PRP them)) (ADVP (RB accordingly))))) (. .)))
(S1 (S (NP (EX There)) (VP (AUX have) (VP (AUX been) (NP (NP (DT some) (NNS improvements)) (PP (IN in) (NP (DT the) (NN whitespace) (NN handling)))) (PP (IN for) (NP (JJ inline) (NNS elements))) (PP (IN in) (NP (NNP C) (JJ Tidy))))) (. .)))
(S1 (S (NP (JJ JTidy) (NN development)) (VP (AUX has) (VP (AUX been) (ADJP (JJ inactive)) (PP (IN for) (NP (DT some) (NN time))))) (. .)))
(S1 (S (NP (PRP I)) (VP (VBP believe) (SBAR (S (NP (PRP they)) (VP (AUX are) (VP (VBG waiting) (PP (IN for) (NP (NP (DT an) (`` ``) (JJ official) ('' '') (NN release)) (PP (IN from) (NP (NP (PRP us)) (PRN (-LRB- -LRB-) (NP (NNP C) (JJ Tidy)) (-RRB- -RRB-))))))))))) (. .)))
(S1 (S (CC But) (NP (PRP we)) (VP (AUX do) (RB n't) (VP (AUX do) (NP (DT those)))) (. .)))
(S1 (S (PP (IN Besides) (NP (NP (NNS internals)) (PP (IN of) (NP (NN parsing))))) (, ,) (NP (DT the) (JJS biggest) (NN change/difference)) (VP (AUX is) (PP (IN in) (NP (NN option) (NN handling)))) (. .)))
(S1 (S (NP (NNP JTidy)) (VP (AUX is) (ADVP (RB still)) (ADJP (RBR more) (JJ advanced)) (PP (IN in) (NP (NP (NNS terms)) (PP (IN of) (NP (JJ I/O) (NN abstraction)))))) (. .)))
(S1 (S (VP (VB take) (NP (PRP it)) (ADVP (RB easy)) (, ,) (NP (NNP Charlie)))))
