I have published a new article on the Making Connections Unit (MCU) Website about access issues related to the use of Cascading Style Sheets (CSS). 
You can find it here: http://www.mcu.org.uk/articles/cssaccessproblems.html 
In this article: * How CSS is being used to mimic proper HTML tags. 
* Why using standard HTML is still important. 
* Why using cascading style sheets improperly can make Web pages less accessible. 
I am interested to hear your feedback. 
Of course I don't want to discourage people from using CSS for presentation and layout, but I think it is worth highlighting possible accessibility problems that may occur when using them. 
If you have an article related to accessible Web design and would like to publish it on the MCU Website, don't hesitate to get in touch. 
All the best, Jim Jim Byrne Project Director, The Making Connections Unit, Glasgow Caledonian University, Glasgow G4 OBA, 0141 331 3893 The Making Connections Unit provides guidance, information and services to those who would like to ensure that the information they publish on the Web is accessible to everyone. 
Services: Website Accessibility Audits, Accessible Web design, Accessible Website Management Training. 
The Making Connections Unit: http://www.mcu.org.uk/ 
Scottish Disability Information Mailing list: Hi Jim, A good piece - your have a reasonable point and argue it well. 
On the downside I would say that it only gives part of the story. 
You make the point that using e.g. SPAN rather than H1 for things that are headers is lacking something, though you don't actually pin down what it is. 
IMHO, I'd say that thing was metadata, that h1 should be considered more important than h2 and so on. 
It can be reasonably argued that the use of 'legacy' HTML 3.2 markup is one way of providing such information, and I think that is essentially what you do in this piece. 
Another way may be to use named classes, like "tophead" in your example, though of course it would be better if they came from well-known vocabularies - class="h1" perhaps? 
Hopefully in years to come the W3C's activities in the region of metadata will develop and provide a consistent, simple approach to situations like this, and we won't need to rely on a vocabulary of maybe two dozen terms plus fairly arbitrary nesting rules to explain our document's structure (at this point somebody reminds me of a standard that does this already ;-). 
For now at least, I reckon what you've written makes good pragmatic sense. 
Cheers, Danny. 
Danny Ayers Danny Ayers: I think this impression might be mainly caused by the subtitle-like text "Top ten accessibility problems created by use and misuse of CSS", which now appears in the "breadcrumbs" and pointing to which points (via redirection) to the page itself. 
Reflexive links (i.e., a link that points to the page itself) are confusing, and using different URLs adds to the confusion, since a browser initially treats it as unvisited link (since the _URL_ has not been visited). 
Maybe it's intended to become a structural link that points to a page with links to nine other articles? 
But despite such problems, and other (minor) problems in the accessibility of the page itself, like using alt="Decorative photo: white flowers." 
instead of alt="" title="Decorative photo: white flowers.", 
I found the page very good, too. 
I'm biased, in a sense, since I've presented similar points for years, e.g. in my article "Lurching Toward Babel: HTML, CSS, and XML" in "Computer" in July 1998, (Yes, in PDF format! 
Not my choice.) 
You make the point that using e.g. SPAN rather than H1 for things that are headers is lacking something, though you don't actually pin down what it I think the article presents that fairly well - it points out that SPAN lacks a defined meaning that could be adequately processed by programs, such as indexing robots, speech synthesis, browsers applying user style sheets, etc. 
And let's not forget browsers with CSS turned off (or not supported at all). 
What does SPAN degrade to? 
Nothing. 
There's no reason why SPAN markup per se should be processed in any particular way. 
For example, when headings are adequately marked up, a browser that generates speech can pause before a heading, read it slowly, pause, and continue its normal (fast) speed. 
This makes the document _much_ clearer and easier to listen; it is comparable to using spacing and large fonts in visual presentation. 
A browser could not, and should not, do anything like that with SPAN , even if the tag has class="otsikko" or class="rubrik" (or even class="heading" - it would be quite unappropriate for a browser to make guesses based on what some string might mean in some particular natural language). 
Sure, you could write an aural style sheet for some SPAN s. 
Even in principle, it would solve just small part of the problem. 
In practice, when did you last see a browser supporting aural style sheets? 
Besides, trying to cover _all_ the possible presentation environments by writing style sheets for them is an endless task. 
Some browsers use one font only but variation in font color to indicate major structural ingredients like headings. 
They do it automatically, as long as you use appropriate markup; but you can't make them do that for your SPAN s. IMHO, I'd say that thing was metadata In a sense, all markup is metadata, data about data. 
But I don't think this view is particularly useful. 
What we normally call metadata in the WWW context is data about such data that consists of entire documents like an HTML document and associated images etc., i.e. "Web pages". 
No, class="h1" does not mean anything more (to a browser) than class="foo". 
The class name is just an assigned symbol with no intrinsic meaning. 
Things might change if we defined some specific rules for class names, with semantic definitions (e.g., "h1" means 'first level heading') and published them and got wide acceptance. 
Then we would have reinvented the wheel, wouldn't we? 
It would be just like HTML, except more clumsy. 
It was one of the basic weaknesses of HTML as originally defined that it had only a handful of markup elements you can use. 
But it was also one of its fundamental strengths. 
The smaller the set of markup elements that a program _must_ recognize and process in some particular way, the easier it is to write programs that process marked-up data, for visible or audible presentation or for other purposes. 
(Actually, a qualified programmer could write a browser for HTML 2.0 in an hour, a _different_ browser that has some special treatment for markup like headings, to suit the properties of some new device, or the needs of some particular people.) And the ease of creating "different" user agents is essential to accessibility. 
Jukka Korpela TIEKE Tietoyhteiskunnan kehitt?miskeskus 
ry Finnish Information Society Development Centre Salomonkatu 17 A, 10th floor, FIN - 00100 HELSINKI, FINLAND Jukka, I agree, the 'breadcrumb' links are generated automatically - and this one went astray - I've fixed it. 
I know it's bad practice to have links on a page that point to themselves - but I will need to figure out how to change the script that generates the breadcrumbs to sort that problem. 
I intend to get around to it. 
We could argue about what should appear in the alt attribute - but we would only be covering old ground. 
I like to regard myself as flexible enough to change when persuaded by good arguments, but for the moment I'm doing it the way I'm doing it. 
You make the point that using e.g. SPAN rather than H1 for things that are headers is lacking something, though you don't actually pin down what snip.... 
I agree; HTML is a 'structured markup' language; there is a hierarchy of elements that makes sense, and agreement about what each tag means. 
That is what I am saying in the article - no need to re-invent the wheel. 
All the best, Jim Jim Byrne Project Director, The Making Connections Unit, Glasgow Caledonian University, Glasgow G4 OBA, 0141 331 3893 Everything you need to know about publishing accessible information on the Web. 
Services: Website Accessibility Audits, Accessible Web design, Accessible Website Management Training. 
The Making Connections Unit: http://www.mcu.org.uk/ 
Scottish Disability Information Mailing list: Agreed, markup is essentially metadata, and IMO acknowledging this can be very useful. 
(Who is this 'we', BTW?) A lot of people are seeing the value of finer-grained explicit metadata (e.g. the use of the metadata element in SVG), or even the use of metadata describing completely arbitrary resources (e.g. RDF). 
Depends on the browser - ok, there aren't any browsers I know of that would understand this, but I was making the point that use of common vocabularies could be referenced in other ways than by using HTML 3.2 syntax. 
My point exactly (apart from the clumsiness bit). 
Ok, I've got 6 'O' levels, and could probably hack together a browser in an hour, with special handling of some form or other. 
I think it would be a waste of an hour though - the strengths of HTML (and HTTP) that got the web going aren't necessarily the same ones that will keep it going (and developing). 
And the ease of Yes, I just think it's better to use a little analysis rather than falling back on legacy principles. 
Cheers, Danny. 
Hello All, Last Week HiSoftware announced its Accessibility Interview Wizard for use with its "Acc" Family of Products: Press Release: http://www.hisoftware.com/press/vwiz.html 
Specific Information: http://www.hisoftware.com/access/vInterview.html 
The Publisher combines Programatic, Programatic &amp; Visual Combined, and Visual Interview Functions to provide a Single combined report(s) for a page, group of pages, Site, or Enterprise Wide Webs and Sub Webs as to the accessibility of Web Content. 
The Acc Product Line and New Feature Set Utilizes Internal Data Stores as Well as XML / EARL EARL Info: http://www.w3.org/2001/03/earl/#introduction 
The HiSoftware Functions and Procedures are Published via our API's: Developers: http://www.hisoftware.com/developer/accproducts.html 
APIs are available for all Interfaces including the EARL Publisher API: To view an Accessible Multimedia Presentation of this new Visual Interview Enhancement to our Accessibility Product Line please visit our Multimedia Demos Page. 
All Requirements to view this demo are clearly listed on this page. 
The Demonstration is the first listed on the page: * Accessibility Interview Wizard We welcome any comments or feedback on the implementation. 
If you want you can send feedback to our engineering team ( eng@hisoftware.com ) Best Regards, Rob Yonaitis Forgot Link to Interview Wizard Demonstration: 
