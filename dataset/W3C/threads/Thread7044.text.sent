Hi: We believe that the following message about the newly proposed "info" URI Scheme will be of interest to this list. 
The "info" scheme will allow identifiers from certain public namespaces (particularly those of interest to the library community) to be used on the Web. 
Tony Tony Hammond Advanced Technology Group, Elsevier 32 Jamestone Road, London NW1 7BY, UK Announcing a new Internet-Draft for an Informational RFC, to allow commonly used identifiers to be part of the Web: The "info" URI Scheme for Information Assets with Identifiers in Public Namespaces Herbert Van de Sompel - Los Alamos National Laboratory Tony Hammond - Elsevier Eamonn Neylon - Manifest Solutions Stuart L. Weibel - OCLC Online Computer Library Center The draft is available at: a. Purpose of the "info" URI scheme: There exist many information assets with identifiers in public namespaces that are not referenceable by URI schemes. 
Examples of such namespaces include Dewey Decimal Classifications [1], Library of Congress Control Numbers (LCCN) [2], NASA Astrophysics Data System Bibcodes [3], and Open Archives Initiative (OAI) identifiers [4], among others. 
The "info" URI scheme will facilitate the referencing of information assets that have identifiers in such public namespaces by means of URIs. 
The "info" scheme is based on a Registry that invites the registration of public namespaces used for the identification of information assets, by the parties that maintain the namespaces. 
For example, assuming that the namespace of Dewey Decimal Classifications (ddc:) and the namespace of Library of Congress Control Numbers (lccn:) would be registered by their respective authorities, then: * the Dewey Decimal Classification 22/eng//004.678 
(for the term "Internet") could be expressed as the "info" URI info:ddc/22/eng//004.678 * the Library of Congress Control Number 2002022641 could be expressed as the "info" URI info:lccn/2002022641 b. Background of this effort The effort to create the "info" URI scheme emerged from the NISO process to standardize the OpenURL Framework for context-sensitive services [5], which requires the ability to describe resources by means of globally recognizable identifiers. 
The Draft Standard for Trial Use released for Public Comment introduced a "proprietary" naming architecture which allowed information assets to be referenced by means of widely used non-URI identifiers (e.g. PubMed identifiers, Digital Object Identifiers, Astrophysics Datasystem Bibcodes, and others) which would be registered under the OpenURL Framework. 
Public feedback led to the decision to fundamentally revise the naming architecture, and to base all resource identification requirements within the OpenURL Framework on URIs alone. 
Because it was deemed unreaslistic to expect that all namespaces required in the OpenURL Framework would be registered within the URI allocation by the respective namespace authorities, the "info" URI effort was launched. 
This work is being conducted under the auspices of NISO, and with active involvement and consultation from the IETF and the W3C. 
It is hoped that the lightweight, and community-based, registration mechanism that will underlie the "info" URI scheme will rapidly lead to the availability of "info" URIs to identify a wide variety of information assets. 
More detailed information of the effort is available at [6]. 
c. References [1] "Dewey Decimal Classification". 
Retrieved September 20, 2003 from http://www.oclc.org/dewey/ . 
[2] "Library of Congress Control Number". 
Retrieved August 1, 2003 from http://lcweb.loc.gov/marc/lccn_structure.html . 
[3] "NASA Astrophysics Data System Bibliographic Code". 
Retrieved August 1, 2003 from http://adsdoc.harvard.edu/abs_doc/help_pages/data.html [4] Lagoze, C., H. Van de Sompel, M. Nelson and S. Warner. 
"Specification and XML Schema for the OAI Identifier Format", June 2002. 
Retrieved September 4, 2003 from http://www.openarchives.org/OAI/2.0/guidelines-oai-identifier.htm . 
[5] Draft Standard for Trial Use ANSI/NISO Z39.88, "The OpenURL Framework for Context-Sensitive Services". 
Retrieved September 20, 2003 from [6] http://library.caltech.edu/openurl/PubComDocs/Announce/20030626-Announce 
-Naming2.htm 
I think a general rule of thumb should be that any URI scheme proposal that defines a meta-scheme, such that removal of that scheme in favor of separate schemes for its underlying names does not change the validity of the identifiers, should be rejected out-of-hand because uber-schemes are a waste of bytes on the wire and a political pain in the ass. 
Cheers, Roy T. Fielding, Chief Scientist, Day Software (roy.fielding@day.com) http://www.day.com/ 
Co-founder, The Apache Software Foundation (fielding@apache.org) 
http://www.apache.org/ 
I don't think this is a good rule of thumb, because is hard to evaluate and wouldn't apply retrospectively. 
My criteria for a good "rule of thumb" is that it's easy to tell whether it applies, even if the results are imperfect. 
I also think your reasons for proposing it ("waste of bytes" and "political pain in the ass") are questionable; whether something is a "waste of bytes" depends on the application, and whether something is a "political pain in the ass" or a "system of enormous value" depends on whose side you're on. 
Not that I don't think you have a good idea hiding in here somewhere, I just don't think you've hit the nail yet. 
Personally, I would have much less trouble with "info" as a URN namespace, named "us-niso", since it in effect sets up a delegated naming authority with no operational semantics. 
I've been pretty happy with the rule of thumb that says: Namespaces whose definitions are: "there is an authority, and the authority says what the name means" should be URN namespaces. 
Other namespaces where there is an operational definition for how to interpret the URI (independent of how the URI might get assigned) can be new URI schemes. 
The value of a new URI scheme depends on the clarity and likelihood of implementation of the operational interpretation. 
I wouldn't mind instituting a new rule-of-thumb that URI scheme proposals should come with examples of implementations of the operational definitions. 
What do you think of my proposed 'rules of thumb'? 
Larry Tim, So, as I understand it, 'info:' is just like 'urn:' except for: - For 'info:xxx:', NISO hands out the 'xxx' - There is no requirement for permanence or reference stability. 
This latter is I suppose why you wouldn't want to do 'urn:info:xxx:' which otherwise would work just fine. 
Is that oversimplifying? 
After ploughing through scads of email on this thread, I found it refreshing to find such a well framed question. 
Regrettably, it seems to have gone unanswered :-( Let me try to answer that one, at least. 
Yes, it is oversimplifying. 
The info: scheme resolves, in the scheme name, the car/document ambiguity that Patrick Stickler mentioned earlier. 
The urn: scheme does not. 
So far as I understand it. 
If it includes ISBNs as well as Dewey Decimal category numbers, then I am wrong. 
But I got the impression this was all about category designators. 
The proposed domain of the info: scheme if I understood it is for categories, known to be abstract concepts, and not documents or otherwise concrete utterances. 
Can someone from the NISO proponents of the info: scheme confirm or deny this interpretation? 
Al Long version: As I understand it, the info: scheme is being offered as not an omnibus ur-scheme for delegated naming, but as a merged naming scheme for a collection of similar concept pools. 
The commonality among all the concepts so collected is far stronger than that which obtains for urn: subdomains. 
We have heard two arguments against the 'info' scheme. 
One is "One ur-scheme is more than enough" The other is "All schemes existing primarily for the purpose of federating naming authority should be subschemes of the 'urn' scheme." 
Neither of these is, to me, convincing. 
I can see the community succeeding with either an urn: subscheme or collection of such subschemes, or with a novel top-level scheme. 
Let's look at the pros and cons for each, however. 
Let's take the second argument one first. 
Remember, DNS federates naming, as the http:-does-it-all voices have reminded us often. 
But my root argument is that there are two performance metrics that URIs are valued by: ease of recovery, and authenticity of communication. 
Most URI users want to support both in the services that they deliver over the web. 
There is a lively debate over the relative importance of naming and retrieval, but despite the differences in emphasis between advocates of the two performance metrics, the question "which is more important" cannot be answered completely until recovery time when the value system of the recipient is known. 
So it can't be the rule used for naming decisions. 
All we know is that the publisher wishes to support authentic identification and facile recovery with some concrete provisions in the URI or in the network services that handle that URI. 
In the URN case, it is ease of recovery that is dependent on services on the network more than on data in the URI. 
In the http: URL case, authenticity of the recovery is supported by network services -- PKI linking a signature in the body of the communication to an authentication argument involving a chain of certificates. 
In the case of an httpsy: YURL, we have data explicitly targeted to improving performance on both axes of performance: facility of recovery, and authenticity of communication. 
Even if this scheme isn't the answer, this is the way that URIs have got to evolve to grow up with the Internet. 
The presence of intelligent, hostile agents on the net has by now been well established, and the next wave of development will be more defensive against the actions of such agents than the waves up through DNS and the Web were. 
Authentic communication is what we will need to build more fundamentally into URI usage. 
This can be done today with http: scheme URLs with the network support of OpenURL schemas. 
Or almost fundamentally. 
Maybe fundamentally enough. 
Just as SOAP can run happily over HTTP even 'though in a way the capabilities in SOAP, had we had them then, would have made some of the features in HTTP unnecessary. 
In the case of the 'info' scheme there is a body of usage, some well-wrought community concepts like the Dublin Core Element Set, that would be better integrated into Web usage if they had an agreed linearization in the URI namespace. 
Functionally, this could be urn:dds:blah and urn:etc.:blah. 
urn: could be the syntax at the front of an info: URI just as "www." is the literal syntax at the start of a site address on the web. 
You know, the Web collapsed DNS into a flat space with structure siteAddress ::= 'www.' agglutenattedBusinessName '.com' ..but this is sub-optimal. 
It would be better to let this class float to the top of the syntax and give it its own top-level scheme. 
The internal consistency of the meaning of info: scheme URIs is far greater than the commonality that they share with other candidate urn: scheme applications. 
It's a matter of judicious source coding. 
'Naming' is too flimsy a concept to be the sole connotation of the root segment (that is to say the scheme part) in the URI's construction. 
The URI language is to be practiced by a vary large pool of mostly-autonomous actors. 
Thus the 'technical factors' that Roy sees as absent are not the only factors to be considered in deciding what schemes to authorize. 
It is also important that the URI language, in Cranmer's terms, be "understanded of the people." 
For the class of things that would be named under the proposed 'info' scheme, a root scheme would be much better 'understanded of the people,' the people coining and interpreting these URIs, than would a branch of the 'urn' scheme tree. 
The stretch to see a common concept across both Dewey Decimal sorting buckets and Library of Congress sorting buckets is a stretch we can begin to believe we can get many people to master and generally apply right. 
The stretch to the abstract notion of "a name, any name" is far less amenable to popular understanding. 
I can see this domain of application being served competently either by embedding these sub-schemes in the urn: tree or by coining a new top-level scheme for this application. 
But on balance as far as I can see now, this domain would most likely be better served by a dedicated top-level scheme. 
This is not a show-stopper, just a leaning. 
But those are some factors that I think we should be considering, and that's my leaning of the moment. 
Al From: Tim Bray [mailto:tbray@textuality.com] Sent: 2 October 2003 18:58 Subject: Re: Announcement: The "info" URI scheme So, as I understand it, 'info:' is just like 'urn:' except for: - For 'info:xxx:', NISO hands out the 'xxx' - There is no requirement for permanence or reference stability. 
This latter is I suppose why you wouldn't want to do 'urn:info:xxx:' which otherwise would work just fine. 
Is that oversimplifying? 
Eric Hellman outlined, quite clearly, the notion that the absence of a built-in dereference mechanism is an advantage for political reasons. 
While his sentences parse and I have to acknowledge that empirically, it's possible for a human to believe this, the whole notion that an identifier is better because non-dereferenceable just comes from a different planet thatn the one I live on. 
Like Roy says, let the market decide. 
I think, though, that if the URN fans and the doi: and info: and tag: people all got together in a room and came out with a reduced number of URI schemes, they and the community would be winners. 
Cheers, Tim Bray (http://www.tbray.org/ongoing/) 
URI List members who have opinions on the proposed info scheme should be aware that the trial use phase for NISO's OpenURL standard is coming to a close soon (Nov 1). the info scheme was developed in response to public comments on the first draft-for-public-comment, which used a non-URI naming scheme for the resources now handled under "info" NISO's rules require the standardization committee to carefully consider and respond to comments on the draft standard. 
See the beginnings of the registry are at Eric Eric Hellman, President Openly Informatics, Inc. eric@openly.com 2 Broad St., 2nd Floor 
