NOTE: i have added wai-xtech to the thread -- this post is part of a thread on the w3c-wai-gl list under the subject line: [resolved?] 
RE: natural language checkpoint for WCAG2 GL1 which is archived at (long URI warning): and which comprises part of the skein which originates at: aloha, y'all! 
charles, i, too, share your concern about the use of the term "document" in WCAG2, but i also share gregg's concerns about clarity and precision... using a compound term in place of "document" weighs the checkpoint down, whilst use of the term "application" in the XML sense would serve only to 
confuse the broader, more general audience at which the top levels of WCAG2 
are aimed... when drafting the checkpoint, i considered using "document instance", "document object", or "application", but i don't think that any of those terms mean anything outside of geekdom... moreover, use of a compound english terms such as "document instance" or "document object" not only leads to awkwardly constructed checkpoints, which are breeding grounds for ambiguity, but may prove difficult, if not impossible, to translate with precision, which is the lesson of the "transform gracefully" imbroglio... since one of the goals of WCAG2 is to reach a broader audience, whilst retaining precision, accuracy, and clarity, and since the glossary of WCAG 2.0 lacks a definition of the term "document", i propose the following: 1. that the term "document" be added to the WCAG2--and, by extension, the WAI-wide--glossary 2. that the definition of the term "document" explicitly state that, for the purposes of this document, the term "document" encompasses "documents rendered from a single source file" to "reusable fragments of marked-up content, which, when rendered as part of a 'document instance', combine to produce the end-user experience of interacting with a single document", etc., only more clearly articulated and more precisely stated... why the single word term "document"? 
for starters, WCAG 2.0 _is_ a document (at least in the common understanding of that term), even though, when modularized, it consists of several components--individual XHTML files, images, etc.--what constitutes a "document" is the user's experience of rendered content, not the manner in which the individual pieces of content are assembled into an ostensively cohesive whole... ATAG 1.0 already contains the following definition of the term "document": definition: "A 'document' is a series of elements that are defined by a markup language (e.g., HTML 4 or an XML application)." 
source: http://www.w3.org/TR/2000/REC-ATAG10-20000203/#def-document while the unified glossary located at: contains a compound definition derived from an pre-Last Call Cubed iteration of UAAG 1.0 in which the term "document" is defined thus: Documents, Elements, and Attributes [UAAG10] A document may be seen as a hierarchy of elements. 
Element types are defined by a language specification (e.g., HTML 4.0 or an XML application). 
Elements may include content, which generally contributes to the document's content. 
Elements may also have attributes that take values. 
i should also note that what i am attempting to convey through the use of the single word, "document", is, in essence, defined as the compound term "document object" in the 11 April 2001 working group draft of UAAG 1.0, located at: Document Object, Document Object Model In general usage, the term "document object" refers to the user agent's representation of data (e.g., a document). 
This data generally comes from the document source, but may also be generated (from style sheets, scripts, transformations, etc.), produced as a result of preferences set within the user agent, added as the result of a repair performed automatically by the user agent, etc. 
Some data that is part of the document object is routinely rendered (e.g., in HTML, what appears between the start and end tags of elements and the values of attributes such as "alt", "title", and "summary"). 
Other parts of the document object are generally processed by the user agent without user awareness, such as DTD-defined names of element types and attributes, and other attribute values such as "href", "id", etc. 
These guidelines require that users have access to both types of data through the user interface. 
Most of the requirements of this document apply to the document object after its construction. 
However, a few checkpoints (e.g., checkpoint 2.7 and checkpoint 2.10) may affect the construction of the document object. 
[...] [second definition snipped] so, the upshot of this post in regards adding checkpoint 1.x to WCAG2 is that, while i still support adoption of my PROPOSED2 verbiage, i do so with the caveat that we add a definition of the term "document" to the WCAG2 glossary which incorporates the concepts encapsulated in the ATAG and UAAG definitions cited above... i could live with the replacement of the term "document" with the clunkier, geek-speak compound term "document object", as it is currently defined in UAAG, but i think it behooves us to take advantage of the opportunity to coalesce the divergent terms now in currency into a simple, understandable single word term... gregory. 
IGNORAMUS, n. 
A person unacquainted with certain kinds of knowledge familiar to yourself, and having certain other kinds that you know nothing about. 
-- Ambrose Bierce, _The Devil's Dictionary_ Gregory J. Rosmaita, oedipus@hicom.net 
Camera Obscura: http://www.hicom.net/~oedipus/index.html 
Elements may include content 
So might documents. 
Also documents might include content. 
It is possible that content could include elements and documents. 
Files could include any/all/none(?) of the above. 
And of course all these are objects (which also might include some/all/none/any). 
I may be mistaken but it's also possible that any of these can have a URI and now that I've emailed this it is referenced by a link. 
(within, of course, a document). 
This fails to take into account instances and statements about the instances - all of which are data (and often simultaneously metadata) Now if I could just transform any/all of that gracefully! 
Once again "Welcome to the Pedantic Web". 
Love. 
ACCESSIBILITY IS RIGHT - NOT PRIVILEGE 
Whatever else we do, at least we've probably succeeded in that! 
Perhaps if Professor Corey isn't available we can get Ambrose Bierce to join the group (I guess we'd need a seance instead of a teleconference). 
Love. 
ACCESSIBILITY IS RIGHT - NOT PRIVILEGE 
William Loughborough wrote, in reaction to a citation contained in my post: 
Elements may include content 
all of which are compelling reasons why we need to (a) define, and then use, the following terms, and (b) answer the questions their use raises... to that end, here are some initial (very sketchy) comments and observations on a few key terms: 1. document -- is it the end result of the application of a rendering process to a collection of things (files, images, fragments, scripts, etc.) that combine to form a cohesive whole, or the collection of things themselves? is the archived version of WCAG as much a document instance as is the rendered version of WCAG? if not, why not, for--in combination--the individual objects contained in the archive form a cohesive whole, and that cohesive whole is "the document" 2. content -- the Authoring Tools WG went through a stretch of time (as i know you remember all too well, bill, in which it used, for the purposes of discussion, the working terms "content with a big c" and "content with a little c" in order to distinguish between the common usage of the term "content" (the stuff outside the angle brackets, the output of scripts, conditional content, etc.--the sort of thing you might obtain from a "content provider") and the more technical definition of the word "content" (meaning the pieces of the puzzle that you put together in order to construct a document); in the end, ATAG stayed clear of defining the term "content", but did use the terms "Web content" (signifying the output of an authoring tool--anything destined for the web or which uses technology traditionally thought of as being web-based) and "content", which was used to signify objects (be they strings of text, blocks of text, images, audio files, etc.) which are intrinsically intended to convey meaning to the perceiver 3. elements -- use of this word should be strictly limited to its use in Technical Recommendations; i'd have to trawl 'em all in order to discover the specifics of who's using the term and how, as well as if it is defined, but i think that the WAI guidelines use this word in the SGML/HTML/XML sense... 4. document object -- is this a concrete descriptor or an abstract concept? 
i'd say the latter, as the concept of "the document" (at least as i understand it) is specific enough to cover the morphing of the document due to conditions which are either: (a) set by the user (through configuration of the UA, CC/PP, etc.); (b) imposed by hardware restrictions; (c) imposed by software restrictions; (d) the result of parsing by a transformation engine; etc. -- an "object" therefore, can be defined as a specific instance of a document, and/or the document as it appears to the user, no matter how the user obtained it, in a particular circumstance... 5. object -- again, this is a word that has a practical, prosaic meaning (each individual object that combines to produce the user's experience of a document instance) and an abstracted meaning (the document as an object; the document as a collection of specific objects)... perhaps for a term such as "object" we need a normative, or at least stable, definitional reference -- anyone know of any pertinent nomenclature-related RFCs? as an aid to reflection, i'm ending this post with an intriguing snippet from ian jacob's analysis of his review of the User Agent Accessibility Guidelines with tantek celik, a developer of IE for the mac at Microsoft, and owner of (amongst others) the User Interface module of CSS3, which is archived at (long URI warning): quote Rendered content is the part of content capable of being perceived by a user through a given viewport (whether visual, auditory, or tactile). 
Rendered content is the part of content that the user agent makes available to the user's senses of sight, hearing, or touch (and only those senses for the purposes of UAAG 1.0). 
Any content that causes an effect that may be perceived through these senses constitutes rendered content. 
This includes text characters, images, style sheets, scripts, and anything else in content whose effect when processed may be perceived. 
At first, I was nervous about this model, but I am unable to draw a line between style sheets, text content, and binary image formats: they all require processing to create an effect that is perceived by the senses. 
It's easiest to say that when they cause an effect that may be perceived (by some users, but not necessarily by all), they are rendered content. 
Some examples of content that is generally not rendered: comments. 
They may be rendered in the source view. 
The only checkpoints that have requirements related to rendered content are 2.3 and 10.9, and this model is consistent with those requirements. 
The definition of "point of regard" refers to rendered content and is used in 9.3; the usage is also consistent there. 
unquote hmmm... gregory. 
As sheer casual reading matter, I still find the English dictionary the most interesting book in our language. 
-- Albert Jay Nock Gregory J. Rosmaita, oedipus@hicom.net 
Camera Obscura: http://www.hicom.net/~oedipus/index.html VICUG NYC: http://www.hicom.net/~oedipus/vicug/index.html Read 'Em &amp; Speak: http://www.hicom.net/~oedipus/books/index.html 
Would it be too imprecise to use the term "page" instead of document? 
Seems to me that's a web-specific term already ... Is it a document if the only contents of a link/page is a multi-media presentation and it's script? 
Anne 
Anne Pemberton apembert@erols.com 
Yep, using the word "page" instead of document gets us to a slightly vaguer territory. 
The idea about content is that it doesn't matter if it is a page, a bit in a page, or a whole site. 
Appropriate markkup needs to be used to identify the language. 
In HTML, the appropriate markup for a "web page" (or whatever you want to call it) is something like and then the rest of the stuff. 
If there are things in a different language (in this example I have used japanese as the basic language) they should identify themselves, for example Note that there are well-documented and resonably widely used server side HTTP techinques for doing a bunch of this. 
cheers Charles Would it be too imprecise to use the term "page" instead of document? 
Seems to me that's a web-specific term already ... Is it a document if the only contents of a link/page is a multi-media presentation and it's script? 
Anne 
