Accidentally caught by the spam filter. 
- Jim Accented characters The only reason we had to do this is that we translate UTF8 into MacOS Roman on the backend. 
One of the requirements was for OS9 users to be able to interop with OSX and vica versa via the iDisk service. 
In most cases, we use this hint "x-mac-japanese" to unambiguously translate UTF8 into Mac OS Roman. 
Further, for some reason OSX prefers fully decomposed UTF8 on the return trip. 
Based on a suggestion from Julian, I believe, we only provide this functionality to non OSX based User-Agents. 
Chris Just FYI, WebDAV client that comes with MacOS X speaks things like It is important for the WebDAV group to come up with a WebDAV spec that defines character encodings for file names and the relationship of filenames and encodings to URL strings. 
Don't expect this to be handled by changes to HTTP or URI specifications. 
It's good to know this. 
Please forgive me if I'm being dense, but isn't this out of the realm of WebDAV? 
Although there have been some exceptions when people said a given feature was unimplementable, we've usually said that we are only officially concerned with server behaviors that are exposed to and testable/verifyable by a WebDAV client. 
If we agree that this is still our philosophy, and that the use of files in an implementation is not visible to a client, then perhaps instead of adding it to the base webdav spec, someone should draft an RFC on this apart from WebDAV that documents and resolves this issue. 
J. Am Sonntag den, 24. 
Februar 2002, um 23:46, schrieb Jason Crawford: There are several aspects: - HTTP needs to define default character encoding for URIs (UTF-8). 
It would be useful to have a defined way to specify other character encodings to/from URIs and currently, I think, this is not well defined. 
At least RFC 2616 is silent on this issue. 
- WebDAV should define what the appropriate response is to a PUT/MKCOL with an "invalid" name for the new resurce. 
"Invalid" in that sense that the server cannot map it to its internal storage or will not permit certain characters. 
Maybe there should also be a optional Content-Location header in the response, indicating how the server names the new resource, in case this differs from the client (composite characters are one example of why this might be necessary). 
- WebDAV could define how servers should map "external" names to URIs. 
An "external" name being for example file names not completely under the servers control or document names from an existing database. 
//Stefan 
