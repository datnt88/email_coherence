Moving on to checkpoint 4.3 - Assure that technologies required to render the content are listed and widely available -- OR -- Use widely available technologies to render content, and list the technologies that are required [level 2 guideline] I am not completely comfortable with the way this is handled. 
I think interoperability between operating system (such as is inevitable by using w3 technologies - as required by WCAG1.0) needs to be included and should be level one. 
Alliteratively this section could be removed and put in the introduction to the guidelines, IE: that we have an explanatory text that explains that following these guidelines is only useful when the user, in what ever environment they may be in, can actually make use of the accessible fetchers next point: Something that affects me a a developer of new techniques Technologies and features on the required list are available in at least two independently-developed implementations. 
(it is preferable that the technologies used for the implementations have been supported for at least one prior version of the software) if the new technologies are server side but the resulting html is widely accessible - I assume that that is OK? Needs to be clear. 
All the best Lisa Seeman Visit us at the UB http://www.ubaccess.com/ 
Access website UB Access - Moving internet accessibility Apropos the subject line, what's a "4.3"? 
A terrible idea. 
Some ancient HTML techniques, like a rel or a type , are virtually unsupported. 
And now we're going to limit what future technologies people can use? 
Why not just de-invent the Web? 
In any event, for W3C technologies, we elsewhere require valid code. 
If it's in the spec, *you may use it*, and it is not your problem that IE6 still has 90% market share and nobody has a user agent that supports it. 
Or, more relevantly to this esteemed Working Group's history, it is not relevant that the heavily-favoured Jaws program does not support it. 
Joe Clark | joeclark@joeclark.org 
Author, _Building Accessible Websites_ There is a tension here that has resisted simple attempts to resolve it. 
I will begin with an example of the problem, and follow with some thoughts on what a solution might look like (since I don't have a clear and polished answer). 
SVG, a moderately new technology (the first implementations are only about 5 years old, and the finished recommendation is only a couple of years old), has been described by one accessibility expert as "vapourware" - i.e. not suitable for making content available. 
On the other hand, it has the ability to encode beautiful graphics, nice fonts with cool artistic effects, or what I would think of as hideously unclear pictures which obfuscate the idea they convey in a swirling miasma of animation effects and groovy filters, in a way that allows for conformant user agents to provide the clear accessible version of the information that the author included. 
(The SVG specification has formal accessibility requirements in its conformance section, and there is information around on ways to make it happen). 
Should authors avoid SVG? 
Should we "de-invent" it, and stick with the old raster formats that don't provide these accessibility features? 
Should we require people to work with the real-world mess of broken browsers? 
South America has a lot of people using email-based browsers, or windows 95 or 98 with a version of Internet Explorer 5, or Netscape 4? Or should we say "while there are only 7 people in the world with a working implementation of the format exampleML, it is very much better for accessibility than what is commonly used, so feel free to use it and claim your content is accessible"? 
It seems to me valuable to work with things that are available. 
People?developing for a new technology may not be creating content that is generally accessible, but content that will be more accesible in the (near?) future. 
People who ignore new features that are developed, and which don't have any ill effect when not supported, are in my opinion slowing the development of accessibility. 
The difficulty is finding a reasonable definition of when it is reasonable to use a new technology that is not backwards compatible. 
Or saying it another way, how much implementation in browsers, and how much do those browsers need to be used in the real world, is required for something to be useful? 
I don't think that "specified in a W3C recommendation" is sufficient to meet the requirements. 
Nor does it make sense to me that "works in Netscape 3" is a requirement. 
So I think a working approach would specify how to decide what level of implementation is necessary. 
Perhaps none - if the working group decides it doesn't matter whether tools are available to actual humans. 
Examples that have been proposed include whether something is available for two languages, or two operating systems, or for free, etc. 
Similarly, it should describe some way of determining what technology does not need to be supported (assuming the working group believes there is some technology in this category). 
So Joe is right that it is important to encourage development of newer and better technology, but I think it is not necessarily a good idea to assume that something is accessible just because it could be if people had the right software. 
I suspect finding a reasonable balance is going to be difficult - and "ask an expert" is probably not sufficiently specified to put in the guidelines... cheers Chaals [etc] Chaals, as usual on the button, but would add that it's not sufficient now to create accessible new technology and pages. 
What is significant is the need for simple and good authoring tools. 
Unfortunately there still isn't a great html authoring tool, smirk kind of looks promising. 
jsketch is great for SVG. 
But, and many of you may not credit this, but publishing is still a very complex issue. 
Teaching staff at our college after 2 years working on peepo, have not really come to terms with the reality of the separation of these two activities. 
Indeed that college doesn't have the skill set to manage there own site and farms this out. 
creating a navigeable site is just not trivial. 
SVG does nothing to improve this issue, which is a fundamental barrier to public access. 
Accessibility has to mean good tools for publishing complex sites, and it doesn't yet. 
We haven't developed the lexicon that describes what a site is, and so it's still a dream. 
thanks On Saturday, November 22, 2003, at 03:01 am, Charles McCathieNevile Jonathan Chetwynd "A web by people with learning difficulties" 
