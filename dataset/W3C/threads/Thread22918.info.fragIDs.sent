Hello, 
I'm developing DOM + SVG based product. 
In SVG, we can use the use tag to reference other elements, defined somewhere. 
I understand that as node or element referencing (in the DOM-style). 
So, maybe it will be useful to add 
some functions to access "referrers" by the referenced element. 
I'm not sure that this accords to Node extension, as I said in subject (maybe Element, not a Node). 
Anton. 
How is that reference declared in SVG's DTD or Schema? 
I would expect it's either an ID/IDREF pair, or uses the Schema's new Key capabilites, or is an 
XPath. 
The first can be supported via DOM Level 2's getElementByID() method. 
The second is reasonably likely to be supported by DOM Level 3's Content Model chapter. 
The third might be a middleware issue rather than a DOM issue per se. 
Joe Kesselman / IBM Research 
I think you'll better look at the spec yourself. 
SVG makes extensive use of URI references [URI] to other objects. 
For example, to fill a rectangle with a linear gradient, you first define a 'linearGradient' element and give it an ID, as in: You then reference the linear gradient as the value of the 'fill' property for the rectangle, as in: The second example on which I can explain what I want is below : !DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20000802//EN" "http://www.w3.org/TR/2000/CR-SVG-20000802/DTD/svg-20000802.dtd" 
I want the following : I have the reference to "MyRect" element (or Node). 
I want to get all referencers to this object. 
In the above example there are two "referencers" - second and third line in the source from the end. 
I think I'm not wrong with the mailing-list (I guess this topic is not for www-svg@w3.org). 
I'm not an expert with all XML-based applications, but I've heard smth about XLink. 
If we use this application, possibly, we do need the same feature. 
Finally, in the spec example I've quoted in the beginning, this feature (again possibly) will be useful for CSS (styling in SVG is inherited from CSS). 
an 
First example: The latter is a relative URI which consists only of a fragment identifier. 
Checking http://www.ietf.org/rfc/rfc2396.txt, 
The semantics of a fragment identifier is a property of the data resulting from a retrieval action, regardless of the type of URI used in the reference. 
Therefore, the format and interpretation of fragment identifiers is dependent on the media type [RFC2046] of the retrieval result. 
So what media type do SVG documents have, and how does that media type interpret fragment identifiers? 
If they're IDREFs (which is likely, given the use of an attribute called "id", but NOT guaranteed -- again, check the DTD or Schema which defines your language) you can take advantage of the DOM's support for IDs. 
If not, you have to provide whatever lookup mechanism is appropriate, and/or wait for the DOM or someone else to do so for you. 
Second example: 
use x="2cm" y="1cm" xlink:href="#MyRect" / 
See above comments -- if the id attribute really is declared as an ID, then the xlink implementation can take advantage of getElementsByID(); if not, it can't and must implement another solution. 
The DOM itself does not provide direct xlink support. 
I believe the expectation is that the folks defining XLink will provide an API for that purpose, possibly by describing how to extend the DOM to support their spec. 
I want to get all referencers to this object 
Reverse mapping from ID to IDREFs is not supported in DOM Level 2. It's an interesting thought. 
Will that really be a common enough request to make it worth building into the DOM, or should it be left as a middleware/application function? 
Joe Kesselman / IBM Research 
