Date: Fri, 12 Apr 2002 16:02:58 +0100 (BST) From: bwm@hplb.hpl.hp.com Subject: Actions/Decisions from RDFCore WG Telecon 2002-04-12 X-MailScanner: Found to be clean Jema noted the following actions during RDFCore WG Telecon 2002-04-12 2002-04-12#1: fm provide schedule for primer to last call, to brian 2002-04-12#2: bwm figure when this review fits in schedule (before or after last call?) 2002-04-12#3: danbri produce schedule for schema to last call, for next week 2002-04-12#4: gk will write use-case appendix for CC/PP (no schedule) 2002-04-12#5: aaron will write similar for dublin core 2002-04-12#6: em stimulate discussion with TBL on rdfms-assertion 2002-04-12#7: jjc post message to rdfcore with motivating example No decisions were recorded I'm trying to write a (hopefully brief) description of containers for the Primer, and a couple of questions came up. 
The questions are: 1. can I legally create a container resource (say, a Bag) without using any special syntax, simply by using the ordinary RDF/XML techniques for creating a blank node, and giving it the appropriate properties (including the type property pointing to the pre-defined rdf:Bag resource, and the various li (or explicit _number) properties)? 
2. can I also legally create a container resource that has a URI (i.e., that *isn't* a blank node), by using the ordinary RDF/XML techniques for creating a new resource with an ID, and giving it those same appropriate properties (e.g., a type property pointing to one of the pre-defined container type resources)? 
Note 1: since the above involves essentially the "manual" creation of container resources, if this is legit, ought we to have a constraint that says that the same container can't have multiple rdf:type properties that have inconsistent values (like the same container being both a bag and an alt; on the other hand, how would we enforce it?) Note 2: the syntax or test cases documents may well answer these questions, but I'm neither a RDF/XML nor a N-triples parser (and also, I'm lazy), so please don't refer me to them. 
Also, please don't refer me to prior RDF Core documented resolutions on containers. 
I've read them, and can't figure out what they mean (one of the reasons why I'm trying to explain this stuff in the Primer)! 
Thanks for any light you can shed. 
--Frank Frank Manola The MITRE Corporation 202 Burlington Road, MS A345 Bedford, MA 01730-1420 I think yes. 
In fact, I think there may be a container test case that does it. 
I think yes. 
Hmmm... I was tempted to say "why not?". 
But in the absence of other operations (e.g. comparison) on containers it's difficult to say what that might mean. 
But, suppose we have a "contains" relation on a bag and a sequence: contains on bag works like subset, and contains on sequence is true if one is a subsequence of the other. 
Then if two containers being both bags and sequences could reasonable satisfy a contains relation. 
I think where this leads is not to try and say anything: Bal, Seq, Alt is (presently) just hints -- depending on how these hints are used by other somponents will determine whether or not it is reasonable for more than one of these hints to apply. 
Er, OK... this seems to require some explanation for my responses to 1. and 2. Basically, it boild down to being perfectly legit RDF, as far as I can see, with no good reason to prohibit its use. 
Thus it seems simpler to let these forms be than to try and kill them off. 
And, of course, they might even be useful. 
(I have always assumed that rdf:Bag rdf:about='...' ... /rdf:Bag was legal and normal RDF. 
Doesn't it match the typed element production? 
Hmmm... I note that original M&amp;S allowed rdf:ID here but not rdf:about.) #g Graham Klyne Yes - this is the point of the resolution along time ago of rdf-containers-syntax-vs-schema Yes It is not inconsistent (said with a straight face!). 
A Bag indicates that here is a container with possibly multiple repeat entries (i.e. a multiset) Applications may wish to read Bags with conjunctive semantics An Alt indicates that here is a container with possibly multiple repeat entries (i.e. a multiset). 
The first element is distinguished (value of rdf:_1). 
Applciations may wish to read Alt with disjunctive semantics. 
Seq indicates that here is a container with possibly multiple repeat entries (i.e. a multiset). 
The elements of the container are ordered. 
Something that is both a Bag and an Alt is from the RDF Model Theory point of view just fine. 
From an application point of view, sometimes a disjunctive reading should be taken sometimes a conjunctive reading - not particularly helpful, but possible. 
We have decided not to formalise these differences. 
I am assuming the normative text like that in M&amp;S that states these things informally will go into the model theory. 
Such text will leave open issue like is intended as the same as or different from (at the model theory level these are clearly different). 
I understood the WG decision to close #rdf-containers-otherapproaches as a decision to not clarify these questions. 
Jeremy snip snip I certainly agree that we haven't clarified them! 
Unfortunately, decisions not to formalize things, or not to clarify things, go against the general spirit of a Primer, the job of which *is* to clarify things. 
What I'd like to do is clarify what things you can generally do with containers, and also either clarify what questions are undecided or unspecified, or (preferably) avoid getting into them. 
However (also unfortunately), it's hard to avoid getting into bear traps if it's unclear where they are! 
--Frank Frank Manola The MITRE Corporation 202 Burlington Road, MS A345 Bedford, MA 01730-1420 Unlike the formal specification, I don't think the primer needs to explore every nook and cranny, to describe every edge condition. 
I would expect the primer to follow a kind of 80-20 rule: to explain clearly how to use the 20% of RDF that achieves 80% of the desired results. 
(Or substitute your own preferred non-zero values for 80 and 20.) In this case, I think it's reasonable to recommend that only one of the container types be applied to any given resource, without being dogmatic about it. 
#g Graham Klyne 
