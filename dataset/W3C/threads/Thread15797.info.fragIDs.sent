My usual strategy of steadfast procrastination in the face of frustration has worked wonders for me once again! 
Really, despite the many suggestions from this group, I had given up on this idea. 
In practice, my job duties changed for a while and I was not able to do much html authoring at all, let alone teach anyone else! 
I am optimistic that I'll be back to working our site at least half time after the new year. 
In anticipation of this I revisited this idea. 
I am pleased to report that Netscape Composer 4.05/4.06 
(and presumably 4.5+ and latter too, I haven't tried) no longer has the unacceptable behavior I reported here some six months ago. 
It is past time to give credit where credit is due. 
The following has been true for some time now, but I have not seen it clearly stated here for the record: Composer will produce html code that sails through both W3C and Bobby validation. 
In May and June I sent a flurry of email to Netscape (and Microsoft regarding FrontPage) and cross posted to several mainstream user group lists. 
I was never given a hint that the two misbehaviors I noted (missing DOCTYPE, &amp;nbsp; after graphics) were legitimate complaints, let alone were being corrected! 
It is only my huge ego that allows me to believe that these concerns were addressed because of me. 
Thank you very much. 
You are quite welcome. 
Composer still coverts EM and STRONG to the the _vastly inferior_ 
I and B . 
Possibly more objectionably, it also coverts CITE (and who knows what else) to I as well. 
Composer is still fond of 
superfluous &amp;nbsp; but not so much as to cause Bobby errors. 
Composer favors BR over P when you are writing in the editor, but it no 
longer automatically replaces all P with BR when you edit a preexisting html source. 
Even though all of the above behavior is wrong headed, I can live with these idiosyncrasies. 
This is because of the following advantages: 1)The software is very inexpensive. 
Free is hard to beat. 
Better yet, it's not Microsoft! 
2)The html editor is very similar to the html browser. 
This makes it user-friendly of course. 
I prefer that a novice composes html with their browser rather than with the built-in html tools of their preferred word processor. 
This avoids all sorts of potential problems (e.g., the mechanics of conversion and posting, documents formatted as a binary WordPerfect file when they LOOK like asci/html) and provides some degree of separation in the user's mind between word processing and html composition. 
3)The actual mechanics of posting are very simple (click publish) and can be hidden from the novice without the person being given passwords. 
The template pages I will supply folks will include links to the W3C and Bobby validators (pointing to their starter page). 
This facilitates their checking of their page after they have posted it. 
There are potential pitfalls with my (planned) approach. 
1)The person might not learn html. 
2)Security is somewhat compromised since we are using an ISP that (of course) provides only one password for our entire site. 
If someone can post stuff regarding their program they can post stuff regarding the entire agency. 
I am not worried about malicious behavior so much as I am accidents. 
I will get around this problem by setting up directories on our site. 
If someone edits and publishes a page from a different department, they will end up with a (modified) copy in their directory that will not have any links to it. 
This whole discussion is only relevant to organizations that have a small number (but greater than one) of people producing modest amounts of html. 
If anyone is in a similar situation (that is, having non-technical people write and publish clean accessible html) I would appreciate hearing from you! 
Do you think using Netscape Communicator suite facilitates this? 
It will still be some time before anyone is helping me with my html work. 
Thanks very much for your time on this. 
FYI, this thread died (on and off the list), so there was no new information for me to share with the group until now. 
Bruce Bailey 
My many thanks to the several people who have responded privately to my initial post. 
I will endevor to ensure that the most salient points are posted here. 
The consensus so far: 1) FrontPage is quirky and you still have to know html to use it. 
2) It doesn't take much work to correct Communicator pages. 
3) Other packages MIGHT do the trick. 
I am still not satisfied. 
The beauty of Communicator is that, once it is set up, a neophyte can 1) select "edit", 2) make changes, 3) select "publish" AND THEY ARE DONE! 
The person doesn't have to know anything about ftp or html. 
(For that matter, they don't even need to know a password, but this only works with one account/directory.) 
When you add to this that the person is using software (the browser) that they are already comfortable with, we are talking about a NEAR ZERO learning curve. 
Even editing one line of code destroys the simplicity here. 
Does anyone know of a way to modify Communicator's behavior? 
Would the commercial versions address this need? 
How is it that no one at Netscape or Microsoft worries about producing html 4.0 compliant code? 
Thanks, Bruce Bailey 
From: Bruce Bailey[SMTP:bbailey@clark.net] Sent: Wednesday, May 13, 1998 1:50 PM Subject: Using htlm editors to produce clean code? 
Has anybody had success using Microsoft FrontPage or Navigator Gold to generate html code that parses through Bobby or the W3C Validator without errors? 
I am confortable with html and text editors, but I need to find tools that our secretaries can use without learning html. 
Front Page generates way too much extraneous code and actually makes it difficult to put in good alt text. 
It's really overkill for what I am looking for, since it is site-oriented instead of page oriented. 
I envision giving responsibility for one-page-per-person for our site (eventually -- smile). 
Communicator's editor is not too bad from this point. 
You really can browse a site live, edit, publish -- all without knowing many details. 
I hate that Communicator favors appearance tags vice logical ones ( B and I instead of STRONG and EM ), but only fails me on two points: 1) It won't include the !DOCTYPE... statement 2) It puts nbsp; after graphics in table cells which causes a Bobby error since my tables now mix graphics and text. 
Does anyone know how to defeat either of the above two behaviors? 
Thanks very much for your time. 
Bruce Bailey www.dors.state.md.us 
Great news! 
This is important information for those of us who work in environments where a lot of untrained, non-techie people will be expected to put content on the web. 
Kynn Bartlett kynn@idyllmtn.com http://www.idyllmtn.com/~kynn/ 
Chief Technologist &amp; Co-Owner, Idyll Mountain Internet; Fullerton, California Enroll now for my online stylesheets (CSS) class! 
http://www.hwg.org/classes/ 
The voice of the future? 
http://www.hwg.org/opcenter/w3c/voicebrowsers.html 
That it shouldn't mess with the tags in one thing (which is why I don't use it) - but could you please explain why I and B are vastly inferior to EM and STRONG ? 
Thanks, Henrik Henrik Frystyk Nielsen, World Wide Web Consortium 
Here at Butler, we have been training new web authors with Composer for most of a year because 1) It is the only web authoring package the university will buy because a) it is free. 
Kidding aside, just about any one can pick it up because most people climb a steeper learning curve with word processing. 
However, they do not learn HTML and so it helpful -- no essential -- that Netscape is cleaning up its own code. 
I hope that truly happens. 
When I train Composer (or any web authoring), I teach accessibility based upon how they think, organize and write, not on whether they use i or em . 
For the average web author to create accessible pages, we need software that will do the robotic work of creating clean code. 
Composer works well for us, other than the fact that its interface for creating and using tables is extremely clumsy and makes people not want to use tables. 
Oh, hey, maybe that's a blessing... ~(;-{)} - tom tom mcCain, Butler University, Indianapolis USA Email address: tmccain@butler.edu 
Web addresses: http://trevor.butler.edu/~tmccain 
I and B are presentational -- they assume a certain presentation which doesn't have meaning in all user agents. 
In other words, if you're reading something aloud, you can't put it in italics or bold. 
EM and STRONG, on the other hand, are broader. 
They mean "show this emphasized" or "show this strongly emphasized" and thus leave it up to the browser to determine how it should say something. 
I can emphasize words when speaking out loud, but I can't _italicize_ words while speaking out loud. 
The "preferred way" to do these kinds of things is to use EM and STRONG, and if you need italics or bold, use styles for visual browsers. 
Kynn Bartlett kynn@idyllmtn.com http://www.idyllmtn.com/~kynn/ 
Chief Technologist &amp; Co-Owner, Idyll Mountain Internet; Fullerton, California Enroll now for my online stylesheets (CSS) class! 
http://www.hwg.org/classes/ 
The voice of the future? 
http://www.hwg.org/opcenter/w3c/voicebrowsers.html 
Bingo! Same reason it's used here (HMC, and at CGU too). 
Kynn Bartlett kynn@idyllmtn.com http://www.idyllmtn.com/~kynn/ 
Chief Technologist &amp; Co-Owner, Idyll Mountain Internet; Fullerton, California Enroll now for my online stylesheets (CSS) class! 
http://www.hwg.org/classes/ 
The voice of the future? 
http://www.hwg.org/opcenter/w3c/voicebrowsers.html 
Being one of those "untrained, non-techie people" who has depended on Composer for quite some time, I can vouch for it's effectiveness. 
I've been learning HTML on my own, and, as I learn, I've been weaning myself off of Composer, but it really isn't all that bad. 
Yes, it has a number of bugs (spacing!), but, as a recovering FrontPage user, I'll take the Composer bugs!! 
However, if you check code written by Composer, it'll never pass one of the HTML checkers, like the one one hosted by the W3C page. 
There are too many components that Composer throws in that isn't standard HTML; i.e. the "NO SAVE" feature if you want to leave an image on your page in it's original location. 
It'll pass Bobby and TOM, though. 
I guess you just can't beat the real thing--coding the page yourself. 
Thanks, Kristine 
to follow up on what Bruce Bailey said: 
It won't break your budget to buy two sites/passwords from your ISP. Keep one for test and integration. 
Only give your fumble-fingered content experts the post-password for that one. 
They could potentially trash one another's play space but you can restore from the pulic site to which you hold the keys. 
They have to check sub-sites in through you. 
This is not a big burden when it is just a tree-replace after you have checked and accepted the stuff on the preparation side of the site. 
This is what the Virginia Dep't of Ed. did. 
Works for them. 
Al 
After reading this I just had to test Netscape Composer again, I had not in a long time and I have to admit failure with the ers:(( Corel Webmaster is still the only application that makes it through with minimal (less than 10 minutes per page) "by hand rework" on the first pass. 
-Eileen 
ite. 
If someone edits and publishes a page from a different 
From: Bruce Bailey[SMTP:bbailey@clark.net] Sent: Wednesday, May 13, 1998 1:50 PM Subject: Using htlm editors to produce clean code? 
Has anybody had success using Microsoft FrontPage or Navigator Gold to generate html code that parses through Bobby or the W3C 
Validator without 
find tools that 
our secretaries can use without learning html. 
Front Page generates way too much extraneous code and actually makes it difficult to put in good alt text. 
It's really overkill for what I am looking for, since it is site-oriented instead of page oriented. 
I envision giving responsibility for one-page-per-person for our site (eventually -- smile). 
Communicator's editor is not too bad from this point. 
You really can browse a site live, edit, publish -- all without knowing many details. 
I hate that Communicator favors 
appearance tags vice 
logical ones ( B and I instead of STRONG and EM ), but 
only fails me 
on two points: 1) It won't include the !DOCTYPE... statement 2) It puts nbsp; after graphics in table cells which 
causes a Bobby error 
Emacs-choose-your-favorite-HTML-compositon-mode (mine is psgml) is also free. 
But true enough, it only works if users are willing to learn HTML (which is just not that hard, dammit!). 
Given the reality that way too many pages are written by folks who refuse to use anything but their WYSIWYG editors, it's about flippin' time those editors produced compliant/accessible code. 
Have they also started including a more useful default NOFRAMES than "This document uses frames, but your browser doesn't support them" (which makes me want to slap the page author, the software engineer, or both)? 
John T. Whelan whelan@iname.com 
SoftQuad have been working with WAI groups to get HotMetal Pro doing the right thing. 
I will try out their evaluation thing tomorrow. 
I uspect it is a step forwards from what I have seen in the past. 
(not that it is difficult to make a few, but they are to be applauded for going about the proces) Charles McCathieNevile 
