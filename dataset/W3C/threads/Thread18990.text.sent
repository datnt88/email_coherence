This question is forwarded with permission from Astrid Callista: What does (checkpoint 2.9 [1]) mean? 
Reusing modules as originally specified or intended. 
Are there other ways to use it? 
Looking at the example, I understand it as using the two audio files in their original bitrate (namely 56000 and 28800). 
But this is SMIL, of which I unfortunately don't have enough knowledge. 
How does this point affect XML? 
[1] http://www.w3.org/WAI/PF/XML/xag-20020617#cp2_9 - "2.9 Reuse accessible modules from schema as originally specified / intended." 
As mentioned in the thread at checkpoint 2.9 should be merged with checkpoint 1.3 The checkpoint is meant to ensure that re-used schemas can be relied on when interpreted consistently. 
Since we are expecting schema re-use, through checkpoint 1.3, this becomes important. 
Cheers Chaals This question is forwarded with permission from Astrid Callista: What does (checkpoint 2.9 [1]) mean? 
Reusing modules as originally specified or intended. 
Are there other ways to use it? 
Looking at the example, I understand it as using the two audio files in their original bitrate (namely 56000 and 28800). 
But this is SMIL, of which I unfortunately don't have enough knowledge. 
How does this point affect XML? 
[1] http://www.w3.org/WAI/PF/XML/xag-20020617#cp2_9 - "2.9 Reuse accessible modules from schema as originally specified / intended." 
Location: 21 Mitchell street FOOTSCRAY Vic 3011, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) Hello all Charles has recommended that I post to this list (or move to this list) the discussions about Interoperable Language. 
Anyone who knows all the beginning stuff from PF or other lists can scroll down to the "RDF or XML" discussion. 
Background: In view of the anticipated development of symbolic language, translatable language, impairments in processing ambiguous, non-literal or generally difficult language, There is a definitive accessibility need for controlled use of language. 
But, as has been pointed out, web authors will not like to use one. 
So we are developing a standard technique for marking up typical electronic textual content, and referencing textual content, so that it's meaning becomes unambiguous, translatable and machine-readable. 
Most important. 
No one needs to change the way that they write. 
All that you do is use the meta data and markup to remove the ambiguity. 
So far so good...... How it works: Basically the idea is that you refer the document to a lexicon, or set of cascaded lexicons, (so that you can over ride the main lexicon, for localization, jargon, or just your own usage) You can also over ride a lexicon in line. 
In other words you specify the meaning of each word and phrase in the document. 
You can use bad to mean good and what ever you like. 
You just need to mark it up. 
In the document itself the default the meeting and word usage is the primary one defined in the highest priority lexicon. 
But Language can be marked up to include more then one meaning or a different meaning. 
Content can be marked up with implied content, sarcasm, and other form of non literal translations. 
The priority of text can be identified though markup, summary of any text can be provided though mark up. 
Current progress: I have put up a draft schema at: http://www.ubaccess.com/ils.html#drafts 
SO far it is implemented as XML, The problem or question is, should we be making this all sing as RDF? (see the next section) Using the gloss meta data we should have all the pieces in place to link to the primary lexicon. 
(we can also use marking up the schematic relationships to other lexicons to include them - See http://www.w3.org/WAI/PF/XML/#g4_0 ) RDF or XML discussion: Pro's of XML: People can start to use the system, (if they can use XML) without tools. 
Inline implementation, easy and intuitive. 
This schema could be markup for a document (not a lexicon) or a lexicon - which means that if you have defined some language usage inline in one document, you can use that document as a lexicon in other documents. 
So in other words, you can mark up a word usage once, inline, and refer to that language usage in other documents either by referencing it with meta data or referencing it inline. 
Basically once you start using it, you just reference the last document you did, and all your language usage from previous documents is included. 
You only need to reference unusual usage that you have never used before. 
Ideally we could extend the xhtml modules to include these elements or extent XHTML elements to have the included attributes. 
(but I am not sure how to do that, Is the XHTML schema modules finished or still at draft stage? 
) XSL is all the user agent needs to start to impliment usefuly. 
In other words - Peaple could use it today. 
Pro's of RDF Let us assume that no one will use it without tools (that is a big assumption) - that will invalidate most of the pro XML argument It really is RDF stuff- it is information about meta data All we can hope to do in the schema is a best guess as to what we need to put in. 
We know we will want this project to evolve, making RDF is the right environment. 
That's it so far your comments, suggestions...... 
All the best, Lisa Seeman UnBounded Access Widen the World Web 
