1) HTTP 1.0 script is written which expect to get GETs. 2) HTTP 1.0 resource is programmed to redirect with a 301/302 to the HTTP/1.0 script 3) Server is upgraded to HTTP/1.1 but the HTTP 1.0 resource and the HTTP 1.0 script are not upgraded. 
4) HTTP/1.1 browser comes along and sends a POST to the HTTP 1.0 resource and receives a 301/302. 
HTTP/1.1 browser sends a POST to the HTTP 1.0 script. 
The HTTP 1.0 script gets completely confused because it was expecting a GET and the user never sees the proper data. 
My suggestion is, as horrible as this is going to sound, that we change the definition of 301/302 to redirect to GET and make 303/304 be redirect, permanently or temporarily, with the same method. 
We can't force the whole world to rewrite all their scripts and our users aren't going to accept "Well gee, you know, the script is doing the wrong thing, it should send a 303 not a 301/302." 
Yaron Scripts are deployed and they are not going to get re-written. 
Servers have no mechanism for determining if a script is 1.0 or 1.1 and even if they did, they do not have facilities for taken any special action in that case. 
As such clients which want to work against the majority of redirected resources, almost all of whom have upgraded to the new Apache servers and thus are declaring themselves 1.1, will be forced to treat 301/302 as redirect to GET. Lets accept the need for backwards compatibility and make it easy for people to upgrade to 1.1. 
301/302 have been taken over, we can't undo that. 
So lets mark them as "deprecated - backwards compatibility" and move on with new numbers. 
Yaron From:Larry Masinter [SMTP:masinter@parc.xerox.com] 
Sent:Tuesday, July 29, 1997 1:36 AM Subject:Re: 301/302 A server could distinguish between old HTTP/1.0 scripts and new HTTP/1.1 ones, and either rewrite the response or change the version number, or support another URL that the redirected POST would redirect to, or change the version of the response... 
Even though it's awkward to do any of these things doesn't mean that it's wrong. 
Larry Which is, of course, a deficiency in CGI (and related) specs. 
If anyone ever gets around to sorting them out, they really ought to have a version number somewhere in the conversation between server and script. 
Cheers, Ben. 
ben@algroup.co.uk Technical Director URL: http://www.algroup.co.uk/Apache-SSL A.L. Digital Ltd, Apache Group member (http://www.apache.org) 
London, England. 
Apache-SSL author Why, you could have different configuration directives, so that .cgi files would be HTTP/1.0 and .cgi11 
files would be HTTP/1.1, or .asp would be HTTP/1.0 and .asq would be HTTP/1.1, etc. 
It's easy for servers to have a mechanism for determining if a script is 1.0 or 1.1. 
Larry The problem is servers which have not been upgraded receiving unexpected request method transforms from clients which have been upgraded. 
Given our rather confusing wording in the past about 301 and 302, we have a legacy of servers which won't expect what we now want them to receive. 
Yaron's proposal makes sense to me. 
This is another bit of historical cruft in the protocol. 
Dave Morris 
