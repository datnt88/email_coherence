(S1 (S (SBAR (IN As) (S (ADVP (RB presently)) (VP (VBN specified)))) (, ,) (NP (NNP DOM2)) (VP (AUX does) (RB not) (VP (VB indicate) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB obtain) (NP (NP (DT an) (NN instance)) (PP (IN of)))))))))))
(S1 (INTJ (JJ DocumentTraversal) (. .)))
(S1 (S (NP (PRP It)) (VP (VBZ appears) (SBAR (IN that) (S (NP (DT this) (NNP interface)) (VP (MD should) (VP (AUX be) (VP (VBN implemented) (PP (IN by))))))))))
(S1 (S (NP (WDT whatever) (NN class)) (ADVP (RB also)) (VP (VBZ implements) (NP (NN DOMImplementation)) (, ,) (CC and) (SBAR (IN that) (S (NP (PRP you)) (VP (MD should) (VP (AUX be) (ADJP (JJ able) (S (VP (TO to) (VP (VB cast) (NP (DT that)) (PP (TO to) (NP (NNP DocumentTraversal))))))) (SBAR (IN if) (S (NP (DT the) (NN implementation)) (VP (VBZ reports) (SBAR (IN that) (S (NP (PRP it)) (VP (VBZ supports) (NP (NNP DocumentTraversal))))))))))))) (. .)))
(S1 (S (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (DT some) (NN clarification)) (VP (AUX is) (VP (VBN needed) (, ,) (SBAR (RB even) (IN if) (S (ADVP (RB just)) (VP (TO to) (VP (VB say) (SBAR (IN that) (S (NP (NP (DT the) (NN way)) (SBAR (S (VP (TO to) (VP (VB get) (NP (NN one))))))) (VP (AUX is) (NP (NN implementation) (NN dependant)))))))))))))) (. .)))
(S1 (NP (NNP Keith)))
(S1 (FRAG (PP (IN of))))
(S1 (S (PP (IN In) (NP (NP (NNS DOMs)) (SBAR (WHNP (WDT which)) (S (VP (VBP support) (NP (DT the) (JJ Traversal) (NN feature))))))) (, ,) (NP (DT the) (NNP DocumentTraversal))))
(S1 (S (NP (NNP interface)) (VP (MD will) (VP (AUX be) (VP (VBN implemented) (PP (IN by) (NP (NNP Document) (NNS objects)))))) (. .)))
(S1 (S (NP (DT This)) (VP (AUX is) (VP (VBN shown) (PP (IN in) (NP (DT the)))))))
(S1 (NP (NP (NNS examples)) (: :) (NP (NP (NNP NodeIterator) (FW iter=) (PRN (-LRB- -LRB-) (NP (-LRB- -LRB-) (NNP DocumentTraversal) (-RRB- -RRB-) (NN document)) (-RRB- -RRB-)) (NN .creatNodeIterator)) (-LRB- -LRB-) (NP (NN node)) (, ,))))
(S1 (NP (NP (NN NodeFilter.SHOW_ELEMENT)) (PRN (, ,) (JJR myFilter) (-RRB- -RRB-)) (: ;)))
(S1 (S (S (S (VP (VBG ..)) (. .)) (CC but) (S (NP (PRP you)) (VP (AUX 're) (ADJP (JJ right))))) (, ,) (NP (PRP it)) (VP (AUX does) (RB n't) (VP (VB seem) (S (VP (TO to) (VP (AUX be) (VP (VBN stated) (ADVP (RB explicitly)))))))) (. .)))
(S1 (NP (NNS Oops) (. !)))
(S1 (S (NP (PRP I)) (VP (MD 'll) (VP (VB fix))) (. .)))
(S1 (NP (NNP Joe) (NNP Kesselman) (NNP /) (NNP IBM) (NNP Research)))
(S1 (S (S (INTJ (RB Really) (. ?) (. !) (. !)) (NP (DT That)) (VP (AUX 's) (ADJP (JJ disgusting)))) (: --) (S (NP (PRP it)) (VP (VBZ forces) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (DT a) (NN cast)))))) (. .)))
(S1 (S (INTJ (UH OK)) (, ,) (RB so) (NP (PRP it)) (VP (AUX 's) (ADJP (ADJP (RB no) (JJR worse)) (PP (IN than) (NP (NP (NN anything)) (VP (VBG em) (NP (NP (RB else) (NN /em)) (PP (IN in) (NP (NP (DT the) (NNP DOM)) (, ,) (SBAR (WHNP (WDT which)) (S (NP (RB simply) (JJ strong) (NN cannot)) (VP (AUX be) (VP (VBN used) (ADVP (RB safely)) (S (VP (VBG /strong) (PP (IN without) (NP (JJ run-time) (NN type) (NN checking))))))))))))))))) (. .)))
(S1 (S (NP (DT That)) (VP (AUX does) (RB n't) (VP (VB make) (S (NP (PRP it)) (ADJP (JJ right))))) (. .)))
(S1 (S (NP (PRP I)) (VP (VBP guess) (SBAR (S (S (NP (PRP I)) (VP (AUX 'm) (NP (NP (RB just) (RB too) (JJ much)) (PP (IN of) (NP (NP (DT a) (NN language) (NN purist)) (PP (IN for) (NP (DT this) (NN business)))))))) (: --) (S (NP (PRP I)) (VP (AUX 've) (ADVP (RB always)) (VP (AUX been) (PP (IN of) (NP (DT the) (NN opinion) (SBAR (IN that) (S (SBAR (IN if) (S (NP (PRP you)) (VP (AUX 're) (VP (VBN forced) (S (VP (TO to) (VP (VB resort) (PP (TO to) (NP (DT a) (NN cast))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (AUX do) (NP (NN something))))))))))))) (, ,) (NP (PRP you)) (VP (AUX 've) (VP (VBN found) (NP (DT a) (JJ serious) (NN design) (NN flaw)) (PP (IN in) (NP (DT the) (NNP API))))))))))))))) (. .)))
(S1 (S (NP (DT A) (JJR better) (NN alternative)) (VP (MD would) (VP (AUX be) (NP (DT a) (JJ getDocumentTraversal) (NN method)) (PP (PP (IN on) (NP (NNP Document))) (CC or) (, ,))))))
(S1 (NP (NP (NNP better) (, ,) (NNP DOMImplementation)) (: :) (S (NP (PRP it)) (VP (MD would) (PP (IN of) (NP (NN course))) (VP (VB return) (SBAR (RB null) (IN if) (S (NP (DT the) (NNP Traversal)))))))))
(S1 (S (NP (NN feature)) (VP (AUX was) (VP (VBN unimplemented))) (. .)))
(S1 (NP (NNP Stephen) (NNP R.) (NNP Savitzky) (NNP steve) (SYM @) (FW rsv.ricoh.com)))
(S1 (NP (NNP http) (: :) (NP (NNS //rsv.ricoh.com/~steve/))))
(S1 (NP (NP (NP (NN Platform)) (PP (IN for) (NP (NNP Information) (NNS Applications)))) (: :) (NP (NN http)) (: :) (NP (NN //RiSource.org/PIA/))))
(S1 (NP (NP (JJ Chief) (NN Software) (NN Scientist)) (, ,) (NP (NP (NNP Ricoh) (NNP Silicon) (NNP Valley)) (, ,) (NP (NNP Inc.) (NNP Calif.)))))
(S1 (NP (NP (NNP Research) (NNP Center) (NN home)) (: :) (NP (NNP steve)) (X (SYM @) (NP (NN theStarport.org)))))
(S1 (NP (NP (NN URL)) (: :) (NP (NN http)) (: :) (NP (NN //theStarport.org/people/steve/))))
(S1 (S (NP (JJ Same) (NN solution)) (PP (IN as) (PP (IN in) (NP (NP (NNS factories)) (PP (IN for) (NP (DT the) (JJ other) (JJ optional) (NN Level)))))) (, 2) (VP (VBZ modules)) (. .)))
(S1 (S (S (VP (VBG Hanging) (NP (PRP it)) (PP (IN off) (NP (NP (DT a) (NN factory) (NN method/getter)) (ADVP (RB elsewhere) (PP (IN in) (NP (DT the) (NNP DOM)))))))) (VP (MD would) (VP (AUX be) (ADJP (RB no) (JJR cheaper)))) (. .)))
(S1 (S (NP (PRP You)) (ADVP (RB only)) (VP (AUX have) (S (VP (TO to) (VP (VB cast) (ADVP (RB once)) (PP (IN per) (NP (NN document))) (, ,) (PP (IN of) (NP (NN course))) (, ,) (SBAR (IN if) (S (NP (PRP you)) (VP (NN cache) (NP (DT the) (JJ DocumentTraversal) (NN view))))))))) (. .)))
(S1 (FRAG (CC or) (, ,)))
(S1 (S (NP (PRP I)) (VP (VBP believe) (SBAR (S (NP (PRP we)) (VP (AUX did) (VP (VB look) (PP (IN at) (NP (DT that) (NN alternative)))))))) (. .)))
(S1 (S (NP (PRP I)) (VP (AUX 'm) (RB not) (ADJP (JJ sure) (SBAR (S (NP (PRP I)) (VP (VBP remember) (ADVP (RB exactly)) (SBAR (WHADVP (WRB why)) (S (NP (PRP it)) (VP (AUX was) (VP (VBN rejected)))))))))) (. .)))
(S1 (NP (NNP Joe) (NNP Kesselman) (NNP /) (NNP IBM) (NNP Research)))
(S1 (S (NP (PRP You)) (VP (MD might) (VP (VB want) (S (VP (TO to) (VP (VB re-think) (NP (DT this))))))) (. .)))
(S1 (S (PP (IN AT) (NP (NN present))) (, ,) (NP (DT both) (NNP Document) (CC and) (NNP DOMImplementation)) (VP (VBP serve) (PP (IN as) (NP (NP (NNS factories)) (PP (IN for) (NP (JJ various) (NNS things)))))) (. .)))
(S1 (S (S (NP (PRP You)) (VP (AUX are) (VP (VBG saying) (SBAR (IN that) (S (NP (PRP you)) (VP (MD would) (VP (VB use) (NP (NNP Document)) (S (VP (TO to) (VP (VB create) (NP (NNP TreeWalkers) (CC and) (NNP NodeIterators)))))))))))) (, ,) (CC but) (S (SBAR (IN as) (S (VP (ADVP (RB currently)) (VBN specified) (SBAR (S (NP (PRP you)) (VP (VBP use) (NP (NN DOMImplementation)) (S (VP (TO to) (VP (VB create) (NP (NNP DocumentType) (CC and) (NNP Document) (NNS objects))))))))))) (, ,) (NP (DT a) (NN bit)) (ADJP (JJ inconsistent))) (. .)))
(S1 (S (INTJ (UH No)) (, ,) (NP (DT that)) (VP (AUX 's) (ADVP (RB actually)) (ADJP (RB pretty) (JJ consistant))) (. .)))
(S1 (S (NP (NP (JJS Most)) (PP (IN of) (NP (NP (DT the) (NN DOM) (POS 's)) (NNS objects)))) (VP (AUX are) (VP (VBN required) (S (VP (TO to) (VP (AUX be) (ADJP (JJ aware) (PP (IN of) (SBAR (WHNP (WDT which)) (S (VP (VB Document) (NP (PRP they))))))))))))))
(S1 (S (VP (VBP belong) (PP (TO to))) (. .)))
(S1 (S (PP (IN As) (NP (DT a) (NN result))) (, ,) (S (NP (PRP they)) (VP (MD would) (VP (AUX need) (S (VP (TO to) (VP (AUX be) (RB either) (VP (VBN created) (PP (IN by) (NP (DT the) (NNP Document)))))))))) (, ,) (CC or) (S (NP (DT the) (NN Document)) (VP (MD would) (VP (AUX have) (S (VP (TO to) (VP (AUX be) (VP (VBN passed) (PP (IN into) (NP (PRP$ their) (NN factory)))))))))) (. .)))
(S1 (S (NP (PRP We)) (VP (VBD chose) (NP (NP (DT the) (NN former)) (, ,) (SBAR (WHNP (WDT which)) (S (NP (PRP I)) (VP (VBP think) (SBAR (S (VP (AUX is) (NP (DT a) (JJR better) (NN idiom)))))))))) (. .)))
(S1 (S (S (CC But) (NP (DT that)) (VP (AUX is) (RB n't) (ADJP (JJ true) (PP (IN of) (NP (NP (NNP Document)) (NP (PRP itself))))))) (: --) (S (S (NP (DT a) (NN Document)) (VP (AUX has) (NP (PRP$ its) (JJ own) (NN context)))) (, ,) (CC and) (S (NP (PRP we)) (VP (AUX did) (RB n't) (VP (VB want) (S (VP (TO to) (VP (VB require) (SBAR (IN that) (S (NP (PRP you)) (VP (AUX have) (NP (DT a) (NN Document)) (SBAR (IN before) (S (NP (PRP you)) (VP (MD could))))))))))))))))
(S1 (S (VP (VB create) (NP (DT a) (NN Document))) (. .)))
(S1 (S (SBAR (IN Since) (S (NP (NP (DT a) (NNP Document) (POS 's)) (NN context)) (VP (AUX is) (VP (ADVP (RB mostly)) (VBN defined) (PP (IN by) (NP (DT the) (NN DOMImplementation))))))) (, ,) (NP (PRP we)) (VP (VBP put) (NP (DT the) (NN factory)) (ADVP (RB there))) (. .)))
(S1 (S (S (NP (PRP We)) (VP (MD could) (VP (AUX have) (VP (VBN put) (NP (PRP it)) (PP (IN on) (NP (NNP DocumentType))))))) (, ,) (CC but) (S (NP (NNP DocumentType)) (VP (AUX is) (ADJP (JJ optional)))) (. .)))
(S1 (S (S (NP (PRP$ Our) (JJ current) (NN design)) (VP (VBZ assumes) (SBAR (IN that) (S (NP (DT the) (NNP DocumentType)) (VP (MD may) (VP (VB help) (S (VP (VB direct) (NP (NP (DT the) (NN instantiation)) (PP (IN of) (NP (DT the) (NNP Document)))))))))))) (: ;) (S (ADVP (RB therefore)) (NP (PRP we)) (VP (AUX have) (S (VP (TO to) (VP (AUX be) (ADJP (JJ able) (S (VP (TO to) (VP (VB create) (NP (PRP it)) (SBAR (IN before) (S (NP (DT the) (NN Document)) (VP (AUX is) (VP (VBN created)))))))))))))) (, ,) (CC and) (S (NP (PRP we)) (VP (VBP put) (NP (DT the) (NN factory)) (PP (IN on) (NP (NN DOMImplementation))))) (. .)))
(S1 (S (ADVP (RB However)) (, ,) (NP (NNP DocumentType)) (VP (AUX does) (VP (VB get) (VP (VBN bound) (PP (TO to) (NP (NP (DT a) (JJ specific) (NN Document)) (SBAR (WHADVP (WRB when)) (S (S (NP (NP (DT the) (NNP Document) (POS 's)) (NN factory)) (VP (AUX is) (VP (VBN called)))) (, ,) (CC and) (S (NP (DT some)) (VP (AUX have) (VP (VBN said) (SBAR (S (NP (PRP they)) (VP (VBP want) (S (VP (TO to) (VP (AUX be) (ADJP (JJ able) (S (VP (TO to) (VP (VP (VB instantiate)) (CC and) (VP (NN bind) (NP (DT the) (NNP DocumentType)) (PP (IN after) (NP (DT the) (NN Document))))))))))))))))) (: ;) (S (NP (PRP we)) (VP (MD 'll) (VP (VB look) (PP (IN at) (NP (DT this))) (PP (IN in) (NP (NP (JJR more) (NN detail)) (PP (IN in) (NP (NN Level) (CD 3))))))))))))))) (. .)))
(S1 (S (NP (PRP I)) (VP (AUX 'm) (RB not) (ADJP (JJ sure)) (SBAR (IN if) (S (NP (NNP traversal)) (VP (MD should) (VP (AUX be) (NP (NP (DT an) (NN exception)) (CC or) (RB not))))))) (. .)))
(S1 (S (SBAR (IN As) (S (VP (VBN noted) (ADVP (RB above))))) (, ,) (NP (PRP we)) (VP (AUX were) (VP (VBG guessing) (SBAR (IN that) (S (NP (NNP DOMs)) (VP (MD might) (VP (VB want) (S (VP (TO to) (VP (VB use) (NP (PRP$ their) (NN DocumentType)) (S (VP (TO to) (VP (VB direct) (NP (NP (NN subclassing)) (PP (IN of) (NP (DT the) (NN document) (NN tree)))))))))) (, ,) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB add) (NP (NP (NNS behaviors)) (ADJP (JJ specific) (PP (TO to) (NP (NP (DT that) (NN kind)) (PP (IN of) (NP (NN document))))))))))))))))) (. .)))
(S1 (S (PP (IN In) (NP (NN Theory))) (, ,) (NP (DT that)) (VP (MD might) (ADVP (RB also)) (VP (VB want) (S (VP (TO to) (VP (VB affect) (NP (NP (WDT which) (NN implementation)) (PP (IN of) (NP (NP (NP (DT the) (JJ traversal) (NNS engines)) (SBAR (S (NP (PRP you)) (VP (VBP use))))) (: --) (NP (NP (DT a) (NNP TreeWalker) (CC or) (NNP NodeIterator)) (SBAR (WHNP (WDT which)) (S (VP (AUX is) (ADJP (JJ aware) (PP (IN of) (NP (NP (DT the) (NN structure)) (PP (IN of) (NP (NP (DT a) (JJ valid) (NN document)) (SBAR (S (VP (MD may) (VP (AUX be) (ADJP (JJ able) (S (VP (TO to) (VP (VB optimize) (NP (NP (DT some) (NNS kinds)) (PP (IN of) (NP (NNP navigation))))))))))))))))))))))))))))) (. .)))
(S1 (S (-LRB- -LRB-) (S (`` ``) (NP (NP (DT This) (NN portion)) (PP (IN of) (NP (DT the) (NN grammar)))) (VP (MD will) (ADVP (RB never)) (VP (VB contain) (NP (DT a) (NN Text) (NN node))))) (, ,) (CC so) (S (VP (AUX do) (RB n't) (VP (VB bother) (S (VP (VBG looking) (PP (IN for) (NP (NP (CD one)) ('' '') (PRN (, ,) (CC or) (`` ``) (S (NP (NP (DT This) (NN kind)) (PP (IN of) (NP (NN document)))) (VP (VBZ uses) (NP (NP (DT a) (JJ different) (JJ back-end) (NN storage) (NN model)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (AUX has) (NP (NNP helper) (NNS functions)) (PP (IN for) (NP (DT the) (JJ next-matching-node) (NN lookup))))))))) ('' '') (-RRB- -RRB-))))))))) (. .)))
(S1 (S (S (SBAR (IN If) (S (NP (PRP we)) (VP (VBP move) (NP (DT the) (NN factory)) (ADVP (RB up) (PP (TO to) (NP (NNP DOMImplementation))))))) (, ,) (NP (PRP it)) (VP (AUX 's) (ADJP (NP (DT a) (NN bit)) (JJR harder)) (S (VP (TO to) (VP (VB take) (NP (NN advantage)) (PP (IN of) (NP (DT those) (NNS opportunities)))))))) (: --) (S (NP (PRP I)) (VP (VBP suspect) (SBAR (IN that) (S (NP (PRP you)) (VP (MD 'd) (VP (VB wind) (PRT (RP up)) (S (VP (AUXG having) (S (VP (TO to) (VP (VB pass) (NP (DT the) (NNP Document) (CC or) (NNP DocumentType)) (PP (IN into) (NP (DT the) (NN factory))) (PP (IN as) (NP (NP (DT a) (NN parameter)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (AUX is) (ADJP (RB roughly) (JJ equivalent) (PP (TO to) (S (VP (VBG moving) (NP (DT the) (NN factory)) (ADVP (RB back) (RB down) (PP (TO to) (NP (DT those) (NNS objects)))))))))))))))))))))))) (. .)))
(S1 (S (NP (DT The) (JJ other) (NN issue)) (VP (AUX is) (SBAR (IN that) (S (PP (IN because) (NP (NNP Node.getOwnerDocument))) (-LRB- -LRB-) (-RRB- -RRB-) (VP (AUX is) (VP (VBN specified) (S (VP (TO to) (VP (VB return) (NP (NN null)) (PRN (, ,) (SBAR (RB not) (S (NP (`` ``) (NP (DT this)) ('' '')) (, ,) (PP (IN in) (NP (NP (DT the) (NN case)) (PP (IN of) (NP (DT a) (NN DOCUMENT_NODE))))) (, ,) (NP (PRP you)) (ADVP (RB cannot)) (VP (VBP use) (NP (NP (DT the) (JJ following) (NN code)) (: :) (NP (NP (NN node.getOwnerDocument)) (PRN (-LRB- -LRB-) (NP (-RRB- -RRB-) (NN .createTreeWalker)) (-LRB- -LRB-) (-RRB- -RRB-))))))) (, ,))))))))))))
(S1 (S (NP (JJ DOM) (NN Level) (CD 1) (NN behavior)) (, ,) (VP (VBN debated) (PP (IN at) (NP (DT that) (NN time)))) (. .)))
(S1 (S (PP (VBN Given) (SBAR (IN that) (S (NP (EX there)) (VP (MD may) (VP (AUX be) (NP (NP (VBG existing) (NN code)) (SBAR (WHNP (WDT which)) (S (VP (VBZ depends) (PP (IN on) (NP (PRP it)))))))))))) (, ,) (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (PRP it)) (VP (AUX 's) (NP (DT a) (NN bit)) (PP (ADVP (RB late)) (IN for) (NP (DT a) (NN change))))))) (. .)))
(S1 (S (S (NP (DT A) (JJ simple) (JJ conditional)) (VP (MD will) (VP (VB handle) (NP (DT this) (NN case))))) (, ,) (CC but) (S (NP (PRP I)) (VP (VBP agree) (SBAR (S (NP (PRP it)) (VP (AUX is) (RB n't) (ADJP (JJ pretty))))))) (. .)))
(S1 (NP (NNP Joe) (NNP Kesselman) (NNP /) (NNP IBM) (NNP Research)))
(S1 (S (NP (PRP You)) (VP (MD might) (VP (VB want) (S (VP (TO to) (VP (VB re-think) (NP (DT this))))))) (. .)))
(S1 (S (PP (IN AT) (NP (NN present))) (, ,) (NP (DT both) (NNP Document) (CC and) (NNP DOMImplementation)) (VP (VBP serve) (PP (IN as) (NP (NP (NNS factories)) (PP (IN for) (NP (JJ various) (NNS things)))))) (. .)))
(S1 (S (S (NP (PRP You)) (VP (AUX are) (VP (VBG saying) (SBAR (IN that) (S (NP (PRP you)) (VP (MD would) (VP (VB use) (NP (NNP Document)) (S (VP (TO to) (VP (VB create) (NP (NNP TreeWalkers) (CC and) (NNP NodeIterators)))))))))))) (, ,) (CC but) (S (SBAR (IN as) (S (VP (ADVP (RB currently)) (VBN specified) (SBAR (S (NP (PRP you)) (VP (VBP use) (NP (NN DOMImplementation)) (S (VP (TO to) (VP (VB create) (NP (NNP DocumentType) (CC and) (NNP Document) (NNS objects))))))))))) (, ,) (NP (DT a) (NN bit)) (ADJP (JJ inconsistent))) (. .)))
(S1 (FRAG (PP (IN Except) (PP (IN for) (NP (NNP DocumentType) (NNS objects)))) (. .)))
(S1 (S (NP (NN Something)) (VP (AUX has) (S (VP (TO to) (VP (AUX be) (NP (DT a) (NN factory-for-the-factory))))) (, ,) (SBAR (IN so) (S (VP (AUXG having) (NP (DT a) (JJ special) (NN case))))))))
(S1 (S (S (VP (TO to) (VP (VB bootsrap) (NP (DT a) (NN Document))))) (VP (AUX does) (RB n't) (VP (VB seem) (ADJP (JJ odd)) (PP (TO to) (NP (PRP me))))) (. .)))
(S1 (S (CC And) (ADVP (RB anyway)) (, ,) (NP (NNP DocumentType)) (PP (IN as) (NP (NP (NN factory)) (PP (IN for) (NP (NNP Document))))) (VP (MD would) (VP (AUX be) (ADJP (JJ wrong)) (SBAR (IN since) (S (NP (DT the) (VBN contained) (NN object)) (VP (MD can) (RB n't) (VP (VB create) (NP (PRP$ its) (NN container)))))))) (. .)))
(S1 (NP (: -) (NNP Dave)))
(S1 (S (ADVP (RB Maybe)) (NP (DT another) (NN abstraction)) (VP (AUX is) (PP (IN in) (NP (NN order)))) (. .)))
(S1 (FRAG (WHADVP (WRB How)) (PP (IN about) (S (VP (VBG introducing) (NP (NP (NP (DT a) ('' ') (NNP DocumentSchema) (POS ')) (NNP interface)) (SBAR (WHNP (WDT that)) (S (VP (VBZ represents) (NP (NP (DT a) (JJ specific) (NN class)) (PP (IN of) (NP (NNS documents))))))))))) (. .)))
(S1 (S (NP (DT The) (NNP DocumentSchema) (NNP interface)) (VP (MD could) (VP (AUX be) (VP (VBN implemented) (PP (PP (IN with) (CC either) (NP (DT an) (JJ external) (NN DTD))) (CC or) (PP (IN by) (NP (DT a) (NNP Schema))))))) (. .)))
(S1 (S (NP (DT The) (NNP DocumentType) (NNP interface)) (VP (MD would) (VP (VB refer) (PP (TO to) (NP (DT the) (NNP DocumentSchema))))) (. .)))
(S1 (S (ADVP (RB So)) (NP (PRP I)) (VP (MD 'd) (VP (VB ask) (NP (DT the) (NN implementation)) (S (VP (TO to) (VP (VP (VB create) (NP (DT a) (NN schema))) (, ,) (VP (VB ask) (NP (DT a) (NN schema)) (S (VP (TO to) (VP (VB create) (NP (NP (DT a) (NN document)) (SBAR (WHNP (WDT that)) (S (VP (VBZ complies) (PP (IN with) (NP (DT that) (NN schema))))))))))) (, ,) (VP (VB tell) (NP (DT the) (NN document)) (S (VP (TO to) (VP (VB create) (NP (NP (PRP$ its) (NN document) (NN type)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (NNS references) (NP (NP (DT the) (NN schema)) (SBAR (WHNP (WDT that)) (S (VP (AUX was) (VP (VBN used) (S (VP (TO to) (VP (VB create) (NP (DT the) (NN document))))))))))))))))))))))) (. .)))
(S1 (S (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (DT this)) (VP (MD would) (VP (VB eliminate) (NP (DT the) (NN chicken) (CC and) (NN egg) (NN problem))))))) (. .)))
(S1 (S (ADVP (RB First)) (: :) (NP (DT The) (NNP DocumentTraversal) (NNS methods)) (VP (VBZ appears) (S (VP (TO to) (VP (AUX be) (NP (NP (DT an) (NN extension)) (PP (IN of) (NP (DT the) (NNP Node))))))))))
(S1 (NP (NP (NNP Interface)) (, ,) (CONJP (RB rather) (IN than)) (NP (NP (DT an) (JJ additional) (NNP interface)) (SBAR (WHNP (WDT that)) (S (VP (MD may) (VP (AUX be) (VP (VBN supported) (PP (IN by) (NP (DT the)))))))))))
(S1 (NP (NN Document) (. .)))
(S1 (S (NP (PRP You)) (VP (MD should) (VP (AUX be) (ADJP (JJ able) (S (VP (TO to) (VP (VB create) (NP (NP (DT a) (NN TreeWalker)) (CC or) (NP (NNP NodeIterator) (IN that)))))))))))
(S1 (S (VP (VBZ works) (PP (IN with) (NP (NP (DT any) (VBG conforming) (NN DOM) (CD 2) (NN implementation)) (VP (VBG using) (NP (RB only) (DT the) (NNP Node) (, ,) (NNS flags) (CC and) (NN filter)))))) (. .)))
(S1 (S (SBAR (IN Since) (S (NP (DT the) (NNP TreeWalker) (CC or) (NNP NodeIterator)) (VP (AUX is) (VP (VBN rooted) (PP (IN at) (NP (DT a) (JJ specific) (NN node))))))) (, ,) (NP (DT this)) (VP (MD would) (VP (VB seem) (S (VP (TO to) (VP (VB imply) (SBAR (IN that) (S (NP (DT the) (NN factory) (NN method)) (VP (MD might) (VP (AUX be) (VP (ADVP (RBS most) (RB appropriately)) (VBN placed) (PP (IN on) (NP (NNP Node))) (, ,) (SBAR (RB so) (IN that) (S (NP (NP (DT the) (NN root)) (PP (IN of) (NP (NP (DT the) (NNP walker)) (CC or) (NP (NP (NN iterator)) (VP (ADVP (RB thus)) (VBN created)))))) (VP (AUX is) (ADVP (RB simply)) (NP (DT the) (NN node) (SBAR (IN that) (S (NP (PRP it)) (VP (AUX was) (VP (VBN created) (PP (IN from)))))))))))))))))))) (. .)))
(S1 (S (SBAR (IN If) (S (NP (DT the) (NN implementation)) (VP (VBZ needs) (NP (DT the) (NN owner) (NN document)) (S (VP (TO to) (VP (VB create) (NP (DT the) (NN node)) (PP (IN from)))))))) (, ,) (ADVP (RB then)) (NP (PRP it)) (VP (MD can) (VP (VB obtain) (NP (DT that) (NN information)) (PP (IN from) (NP (DT the) (NN node))))) (. .)))
(S1 (S (NP (DT This)) (VP (VBZ puts) (NP (NP (NP (DT the) (NN onus)) (PP (IN of) (S (VP (VBG getting) (NP (NP (DT the) (NN owner) (NN document)) (PP (IN on) (NP (DT the) (NN implementation)))) (SBAR (IN if) (FRAG (ADJP (JJ necessary)))))))) (, ,) (CONJP (RB instead) (IN of)) (NP (NP (DT the) (NN application)) (VP (VBG using) (NP (DT the) (NNP DOM) (NNP API)))) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (PRP it)) (VP (MD should) (RB n't) (VP (AUX be) (ADJP (JJ necessary)))))))) (. .)))
(S1 (S (ADVP (RB Secondly)) (, ,) (NP (NP (DT the) (JJ expandEntityReferences) (NN flag)) (PP (IN on) (NP (DT the) (NN factory) (NN method)))) (VP (MD should) (ADVP (RB really)) (ADVP (RB just)) (VP (AUX be) (NP (DT another) (JJ constant) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (AUX be) (VP (VBN passed) (PP (IN into) (NP (NN whatToShow)))))))) (: :) (NP (NN SHOW_ENTITY_REFERENCE_EXPANSION) (CC or) (NN SHOW_ENTITY_REFERENCE_CHILDREN))))) (. .)))
(S1 (NP (DT This)))
(S1 (S (S (NP (NN change)) (VP (AUX does) (RB n't) (VP (VB remove) (NP (DT any) (NN functionality)) (PP (IN from) (NP (DT the) (NNP API)))))) (, ,) (CC and) (S (NP (PRP it)) (VP (AUX does) (VP (VB eliminate) (NP (DT a) (NN parameter)) (PP (IN from) (NP (NP (CD one)) (PP (IN of) (NP (DT the) (NNS methods)))))))) (. .)))
(S1 (NP (NNP Keith)))
(S1 (NP (NNP Node)))
(S1 (NP (DT the)))
(S1 (INTJ (JJ Interesting) (NN thought) (. .)))
(S1 (S (S (NP (PRP We)) (VP (VBD designed) (S (DT these) (VP (VP (TO to) (VP (VB live) (PP (IN on) (NP (DT the) (NN Document))) (PP (IN with) (NP (DT the) (JJ other) (NN factory) (NNS methods))))) (, ,) (CC and) (VP (TO to) (VP (AUX be) (VP (VBN passed) (NP (PRP$ their) (NN root) (NN node)) (SBAR (IN as) (S (NP (DT an) (NN argument)) (VP (VBZ ..)))))))) (. .)))) (CC but) (S (NP (PRP we)) (ADVP (RB _could_)) (VP (AUX have) (ADVP (RB instead)) (VP (VBN designed) (NP (PRP them)) (SBAR (IN so) (S (NP (DT the) (NN factory)) (VP (VP (AUX was) (VP (VBN invoked) (PP (IN on) (NP (NP (DT the) (NN root) (NN node)) (NP (PRP itself)))))) (, ,) (CC and) (VP (AUX had) (S (NP (DT that) (NN association)) (VP (AUX be) (ADJP (JJ implicit))))))))))) (. .)))
(S1 (S (NP (PRP I)) (VP (VBP agree) (SBAR (IN that) (S (NP (DT the) (NN latter)) (VP (AUX is) (ADJP (JJR prettier)) (ADVP (RB architecturally)))))) (. .)))
(S1 (S (CC But) (VP (VB consider) (NP (NP (DT the) (JJ recent) (NN comment)) (SBAR (`` ``) (S (NP (PRP You)) (VP (VBP mean) (SBAR (S (NP (PRP I)) (VP (AUX have) (S (VP (TO to) (VP (VB cast) (S (VP (TO to) (VP (VB get) (NP (NP (NN access)) (PP (TO to) (NP (DT the) (NNP DocumentTraversal) (NNS methods)))))))))))))))))) (. ?)))
(S1 (S (FRAG (NP (NN Yuck)) (. !) ('' '')) (: --) (SBAR (IN If) (S (NP (DT these)) (VP (VBP live) (PP (IN on) (NP (DT the) (NNP Document) (NN object)))))) (, ,) (NP (PRP you)) (VP (MD may) (VP (AUX be) (ADJP (JJ able) (S (VP (TO to) (VP (VP (VB cast) (ADVP (RB once))) (CC and) (VP (VB hang) (PP (IN onto) (NP (DT the) (NNP DocumentTraversal))) (PP (IN through) (NP (VBN repeated) (NNS operations))) (PP (IN on) (NP (DT that) (NN document)))))))))) (. .)))
(S1 (S (SBAR (IN If) (S (NP (PRP they)) (VP (VBP live) (PP (IN on) (NP (JJ individual) (NNPS Nodes)))))) (NP (PRP you)) (VP (MD 'd) (VP (AUX have) (S (VP (TO to) (VP (VB cast) (NP (NP (DT each) (NN root) (NN node)) (, ,) (ADVP (RB probably)) (NP (DT every) (NN time))) (SBAR (IN unless) (S (NP (PRP you)) (VP (AUX 're)))))))))))
(S1 (S (VP (ADVP (RB repeatedly)) (VBG iterating) (PRT (RP over)) (NP (DT a) (JJ single) (NN subtree))) (. .)))
(S1 (S (SBAR (IN Unless) (S (NP (DT the) (NN factory)) (VP (VBZ continues) (S (VP (TO to) (VP (VB take) (NP (DT the) (NN root) (NN node)) (PP (IN as) (NP (DT a) (JJ parameter) (NN ..)))))) (. .) (PP (IN in) (NP (WDT which) (NN case)))))) (NP (PRP I)) (VP (AUX 'm) (RB not) (ADVP (RB sure)) (NP (NP (DT the) (NN difference)) (PP (IN between) (NP (DT this) (NN proposal) (CC and) (NN status) (NN quo)))))))
(S1 (S (VP (AUX is) (ADJP (JJ large) (RB enough) (S (VP (TO to) (VP (VB make) (NP (JJ much) (NN difference))))))) (. .)))
(S1 (S (NP (PRP I)) (VP (AUX do) (RB n't) (VP (AUX have) (NP (NP (DT a) (ADJP (RB hugely) (JJ strong)) (NN opinion)) (PP (IN on) (NP (DT this) (DT either) (NN way)))))) (. .)))
(S1 (S (NP (PRP It)) (VP (MD could) (VP (AUX be) (NP (DT another) (NN bit)) (PP (IN in) (NP (DT that) (NN mask))) (, ,) (ADJP (JJ true)))) (. .)))
(S1 (S (S (NP (PRP I)) (VP (AUX 'm) (RB not) (ADJP (JJ sure) (SBAR (S (NP (DT this)) (VP (AUX is) (NP (NP (DT a) (JJ net) (NN gain)) (, ,) (ADVP (IN though))))))))) (: ;) (S (NP (PRP it)) (VP (AUX 's) (VP (VBG conflating) (NP (CD two) (NN seperate) (NNS operations))))) (. .)))
(S1 (S (PP (VBN Given) (SBAR (IN that) (S (NP (DT the) (NN factory) (NN call)) (VP (AUX is) (NP (NP (DT a) (ADJP (RB relatively) (JJ rare)) (NN operation)) (VP (VBN compared) (S (VP (TO to) (ADVP (RB actually)) (S (VP (VBG using) (NP (DT the) (JJ traversal) (NNS objects)))))))))))) (, ,) (NP (PRP I)) (VP (AUX 'm) (RB not) (ADJP (JJ convinced) (SBAR (IN that) (S (S (VP (VBG saving) (NP (DT a) (NN parameter)))) (ADVP (RB really)) (VP (VBZ gains) (NP (PRP us)) (NP (NN anything))))))) (. .)))
(S1 (SBAR (ADVP (RB Especially)) (IN as) (S (S (NP (NNS bits)) (VP (AUX are) (NP (DT a) (JJ scarce) (NN resource)))) (: ;) (S (NP (PRP I)) (VP (AUX do) (RB n't) (VP (VB expect) (S (NP (PRP us)) (VP (TO to)))))))))
(S1 (S (S (VP (AUX need) (NP (QP (JJR more) (IN than) (CD 31)) (NNS nodeTypes)))) (, ,) (CC and) (S (NP (EX there)) (VP (AUX 's) (NP (NP (DT the) (NN workaround)) (PP (IN of) (S (VP (VBG moving) (NP (DT the) (JJ nodeType) (NN test)) (PP (IN into) (NP (DT a) (NN filter))))))))) (, ,) (CC but) (S (NP (PRP I)) (VP (MD 'd) (ADVP (RB rather)) (RB not) (VP (VB establish) (NP (NP (DT a) (NN precedent)) (PP (IN of) (S (VP (VBG nibbling) (PP (IN from) (NP (NP (DT both) (NNS ends)) (PP (IN toward) (NP (DT the) (NN middle)))))))))))) (. .)))
(S1 (S (CC And) (S (VP (VBG thinking) (PP (IN about) (SBAR (WHADVP (WRB how)) (S (NP (PRP I)) (VP (MD 'd) (VP (VB implement) (NP (PRP it))))))))) (, ,) (NP (DT the) (JJ first) (NN thing)) (NP (PRP I)) (VP (MD 'd) (VP (AUX be) (VP (VBN inclined) (S (VP (TO to))))))))
(S1 (S (VP (AUX do) (SBAR (IN inside) (S (NP (DT the) (NN factory)) (VP (MD would) (VP (AUX be) (S (VP (TO to) (VP (VB break) (NP (NNP SHOW_ENTITY_REFERENCE_EXPANSION)) (PRT (RP out))))))))))))
(S1 (SINV (PP (IN into) (NP (DT a) (JJ separate) (NN boolean))) (SBAR (IN so) (S (NP (PRP it)) (VP (VP (MD could) (VP (AUX be) (VP (VBN tested) (ADVP (RB conveniently))))) (, ,) (CC and) (VP (VB clear) (NP (DT that) (NN bit)) (PP (IN in) (NP (DT the) (NN mask))) (SBAR (IN so) (S (NP (PRP I)) (VP (AUX did) (RB n't) (VP (AUX have) (S (VP (TO to) (VP (VB special-case) (NP (PRP it))))) (SBAR (WHADVP (WRB when)) (S (VP (VBG deciding) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB handle) (NP (DT the) (NN rest))))))))))))))))) (. .)))
(S1 (S (CC So) (S (VP (VBG saving) (NP (DT a) (NN parameter)))) (VP (MD might) (VP (VB increase) (NP (NN computation)))) (. .)))
(S1 (S (NP (PRP I)) (VP (VBP think) (NP (NP (DT this) (NNS winds)) (VP (ADVP (RB up)) (AUXG being) (NP (NP (NP (DT a) (NN matter)) (PP (IN of) (NP (NN style)))) (CONJP (RB as) (RB much) (IN as)) (NP (NN anything) (RB else)))))) (. .)))
(S1 (S (NP (PRP$ My) (NNS instincts)) (VP (VBP say) (S (VP (TO to) (VP (VB leave) (NP (PRP it)) (SBAR (IN as) (S (VP (AUX is)))))))) (. .)))
(S1 (S (NP (PRP$ Your) (NN milage)) (VP (MD may) (VP (VB vary))) (. .)))
(S1 (NP (NNP Joe) (NNP Kesselman) (NNP /) (NNP IBM) (NNP Research)))
(S1 (FRAG (WHNP (WP What) (RB sort)) (PP (IN of) (NP (FW schema))) (. ?)))
(S1 (FRAG (INTJ (VB RELAX)) (, ,) (NP (NNP RDF)) (, ,) (NP (NNP SOX1)) (, ,) (NP (NNP SOX2)) (, ,) (NP (NNP MS-Schema)) (, ,) (NP (NNP W3C-Schema)) (, ,) (INTJ (UH ..) (. .)) (. ?)))
(S1 (S (PP (IN In) (NP (DT any) (NN case))) (, ,) (NP (NP (NN support)) (PP (IN for) (NP (NP (DT all)) (PP (IN of) (NP (DT those)))))) (VP (MD would) (VP (AUX be) (NP (DT a) (JJ post-L2) (NN issue)) (, ,) (SBAR (IN since) (S (NP (NP (JJ many)) (PP (IN of) (NP (PRP them)))) (VP (AUX are) (RB n't) (ADJP (RB even) (JJ stable)) (ADVP (RB yet))))))) (. .)))
(S1 (S (S (INTJ (UH Nope)) (, ,) (S (VP (VB see) (NP (NP (PRP$ my) (NN original)) (VP (VBG posting) (PP (IN on) (NP (DT the) (NN chicken/egg) (NN problem))))))) (CC and) (S (NP (PRP you)) (VP (MD 'll) (VP (VB see) (SBAR (WHADVP (WRB why)) (S (NP (NN anything)) (ADJP (JJ short) (PP (IN of) (S (VP (AUXG having) (NP (DT the) (NN Document)) (VP (AUX be) (NP (DT the) (NN factory)) (SBAR (IN for) (S (NP (PRP$ its) (NN DocumentType)) (VP (AUX is) (RB not) (ADJP (JJ practical)))))))))))))))) (: :) (S (NP (EX There)) (VP (AUX 's) (NP (NP (DT a) (JJ direct) (NN translation)) (PP (TO to) (NP (NNS schemas)))) (PRN (, ,) (ADVP (RB too)) (: --)) (PP (IN except) (SBAR (IN that) (S (NP (PRP it)) (VP (AUX 's) (ADJP (RB likely) (JJR worse)))))))) (. .)))
(S1 (S (NP (NP (NN Anyone)) (VP (VBG reading) (NP (DT a) (NN document)))) (VP (AUX is) (RB n't) (VP (VBG going) (S (VP (TO to) (VP (VB know) (NP (DT the) (NN schema) (S (VP (TO to) (VP (VB use) (SBAR (IN until) (S (NP (PRP it)) (VP (AUX 's) (ADJP (RB partly) (JJ parsed)) (, ,) (SBAR (RB just) (IN like) (S (NP (PRP they)) (VP (AUX 're) (RB not) (VP (VBG going) (S (VP (TO to) (VP (VB know) (S (NP (DT the) (NNP DocumentType)) (VP (TO to) (VP (VB use) (PP (IN until) (ADJP (`` ``) (JJ late) ('' ''))))))))) (ADVP (DT either)))))))))))))))))) (. .)))
(S1 (S (PP (IN With) (NP (NNS DTDs))) (NP (PRP you)) (ADVP (RB only)) (VP (AUX need) (S (VP (TO to) (VP (VB read) (PP (IN through) (NP (DT the) (NN root) (NN element) (NN start) (NN tag))))))) (. .)))
(S1 (S (PP (IN With) (NP (NNS schemas))) (, ,) (PP (VBG depending) (PP (IN on) (SBAR (WHADVP (WRB how)) (S (NP (PRP they)) (VP (AUX 're) (VP (VBN associated) (PP (IN with) (NP (DT the) (NN document))))))))) (, ,) (NP (PRP you)) (VP (MD may) (VP (AUX need) (S (VP (TO to) (VP (VB read) (ADVP (RB much) (RBR more) (RB deeply)) (PP (IN into) (NP (DT the) (NN document) (NN text))) (SBAR (IN before) (S (NP (PRP you)) (VP (MD can) (VP (VB start) (S (VP (TO to) (VP (VB create) (NP (DT the) (NNP DOM) (NNP Document) (NN object)))))))))))))) (. .)))
(S1 (S (PP (IN For) (NP (NN example))) (, ,) (SBAR (IN if) (S (NP (DT a) (NN schema)) (VP (AUX were) (ADVP (RB wholly)) (VP (VBN embedded) (PP (IN in) (NP (DT the) (NN document))))))) (, ,) (NP (PRP you)) (VP (MD 'd) (VP (AUX have) (NP (JJ major) (NN trouble)))) (. .)))
(S1 (NP (: -) (NNP Dave)))
(S1 (S (S (NP (NNS Schemas/DTDs)) (VP (AUX are) (NP (NP (DT a) (JJ pending) (NN issue)) (, ,) (S (VP (TO to) (VP (AUX be) (VP (VBN addressed) (PP (IN in) (NP (JJ DOM) (NN Level) (NNS 3.)))))))))) (CC And) (S (INTJ (UH yes)) (, ,) (NP (PRP we)) (VP (AUX do) (VP (VB expect) (S (VP (TO to) (VP (VB reconsider) (NP (DT the) (JJ chicken-and-egg) (NN problem)) (PP (IN at) (NP (DT that) (NN time))))))))) (. .)))
(S1 (S (NP (NP (DT The) (NN relationship)) (PP (IN between) (NP (NP (DT these) (NN content) (NNS models)) (CC and) (NP (DT the) (NNP DocType))))) (VP (AUX is) (ADVP (RB still)) (S (VP (TO to) (VP (AUX be) (VP (VBN determined)))))) (. .)))
(S1 (NP (NNP Joe) (NNP Kesselman) (NNP /) (NNP IBM) (NNP Research)))
(S1 (S (SBAR (IN As) (S (NP (PRP you)) (VP (VBD said)))) (, ,) (NP (PRP$ your) (NN mileage)) (VP (MD may) (VP (VB vary))) (. .)))
(S1 (S (S (NP (PRP Mine)) (ADVP (RB still)) (VP (AUX does))) (, ,) (CC so) (S (ADVP (RB perhaps)) (NP (PRP I)) (VP (MD can) (VP (VB make) (NP (ADJP (RBR more) (JJ convincing)) (NNS arguments))))) (: :)))
(S1 (X (X (IN From) (: :) (JJ www-dom-request) (SYM @)) (NP (NN w3.org))))
(S1 (NP (NP (NN -LSB-mailto)) (: :) (NP (NN www-dom-request)) (X (SYM @)) (NP (NN w3.org) (NNS -RSB-)) (PP (IN On))))
(S1 (S (NP (NP (NN Behalf)) (PP (IN Of) (NP (NN keshlam)))) (VP (SYM @) (NP (NN us.ibm.com)))))
(S1 (FRAG (VP (VBN Sent)) (: :) (NP (NNP Monday)) (, ,) (NP (NNP March) (CD 06)) (, ,) (ADJP (QP (CD 2000) (CD 1:08)) (RB PM) (JJ Subject)) (: :) (NP (NNP Re)) (: :) (NP (NNP DocumentTraversal))))
(S1 (NP (NN time)))
(S1 (NP (NN proposal)))
(S1 (S (NP (NP (CD One) (NN way)) (SBAR (S (VP (TO to) (VP (VB avoid) (NP (DT this))))))) (VP (MD would) (VP (AUX be) (S (VP (TO to) (ADVP (RB just)) (VP (VB put) (NP (DT the) (CD two) (NN factory) (NNS operations)) (PP (IN on) (NP (NNP Node))) (, ,) (S (VP (VBG removing) (NP (DT the) (NN factory)) (ADVP (RB altogether))))))))) (. .)))
(S1 (S (RB Then) (VP (VB take) (NP (NP (DT the) (NN approach)) (SBAR (WHNP (WDT that)) (S (NP (DT a) (NN Node))))))))
(S1 (S (S (VP (VBG supporting) (PRN (-LRB- -LRB-) (S (S (NP (NN c.f.)) (`` ``) (VP (VBZ supports))) (-LRB- -LRB-)) (-RRB- -RRB-) ('' '') (-RRB- -RRB-)) (NP (DT the) (JJ traversal) (NNP API)))) (VP (MD would) (VP (VB return) (NP (NP (DT a) (JJ non-null) (NN TreeWalker/Iterator)) (PP (IN from) (NP (DT the) (JJ createTreeWalker/createIterator) (NNS methods)))) (, ,) (SBAR (IN whereas) (S (NP (NP (CD one)) (SBAR (WHNP (WDT that)) (S (VP (AUX does) (RB n't) (VP (VB support) (NP (PRP it))))))) (ADVP (RB simply)) (VP (VBZ returns) (ADVP (RB null))))))) (. .)))
(S1 (S (NP (DT This)) (VP (VBZ eliminates) (NP (NP (DT the) (NN need)) (PP (IN for) (NP (DT the) (NN cast))) (PRN (-LRB- -LRB-) (CC and) (NP (DT the) (JJ separate) (NN Factory)) (-RRB- -RRB-))) (ADVP (RB completely))) (. .)))
(S1 (S (INTJ (UH OK)) (, ,) (ADVP (RB so) (RB now)) (NP (PRP you)) (VP (AUX have) (S (VP (TO to) (VP (VB check) (NP (NP (DT the) (NN result)) (SBAR (S (ADVP (RB everytime)) (NP (PRP you)) (VP (VBP call) (S (ADJP (JJR createTreeWalker) (: ...) (, ,) (ADVP (RB perhaps)) (ADJP (RB not) (RB as) (JJ nice)) (PP (IN as) (NP (NP (DT a) (NN factory)) (SBAR (WHNP (WDT which)) (S (ADVP (RB always)) (VP (VBZ returns) (NP (DT a) (NNP TreeWalker) (CC or) (NNP Iterator))))))))))))))))) (. .)))
(S1 (S (ADVP (RB Yup)) (, ,) (S (NP (PRP it)) (VP (VBZ breaks) (NP (VBG existing) (NNS implementations)))) (, ,) (CC but) (S (NP (PRP you)) (VP (AUX 've) (ADVP (RB already)) (VP (VBN required) (NP (VBG existing) (NNS implementations)) (S (VP (TO to) (VP (VB modify) (NP (NN node)) (ADVP (RB anyway)))))))) (. .)))
(S1 (S (S (NP (NP (DT Those)) (SBAR (WHNP (WDT that)) (S (VP (AUX do) (RB n't) (VP (VB care) (S (VP (TO to) (VP (VB support) (NP (DT the) (JJ new) (NNS methods)))))))))) (VP (MD can) (VP (VB add) (NP (NP (DT a) (JJ few) (NNS lines)) (PP (IN of) (NP (NN code))))))) (CC and) (S (NP (PRP they)) (VP (AUX are) (VP (AUX done)))) (. .)))
(S1 (S (ADVP (RB Finally)) (, ,) (NP (PRP I)) (VP (MD would) (VP (VB hope) (SBAR (IN that) (S (NP (NP (DT the) (JJS largest) (NNS users)) (PP (IN of) (NP (DT the) (NNP API)))) (VP (MD would) (VP (AUX be) (NP (NNS developers)) (, ,) (ADVP (RB not) (RB implementors)))))))) (. .)))
(S1 (S (NP (DT That)) (VP (MD would) (VP (VB mean) (PP (TO to) (NP (PRP me))) (SBAR (IN that) (S (VP (VBG making) (S (NP (PRP it)) (ADJP (JJR easier)) (SBAR (IN for) (S (NP (NNS developers)) (VP (MD should) (VP (VB take) (NP (NN priority)))))))))))) (. .)))
(S1 (S (S (VP (VBG Making) (S (NP (PRP it)) (ADVP (RB easier)) (VP (TO to) (VP (VB access) (NP (DT these)) (PP (IN from) (NP (NNP Node)))))))) (VP (AUX does) (VP (VB make) (S (NP (PRP it)) (ADJP (ADJP (JJR easier)) (PP (IN for) (NP (NNS developers))))))) (. .)))
(S1 (FRAG (NP (NN NOTE)) (: :) (S (NP (PRP I)) (ADVP (RB cannot)) (VP (VBP make) (NP (NP (DT the) (JJ same) (NN argument)) (PP (IN for) (NP (NNP Range)))))) (, ,) (SBAR (IN as) (S (NP (DT that)) (ADVP (RB really)) (VP (MD should) (VP (AUX be) (ADJP (JJ available) (PP (IN from) (NP (NN Document)))))))) (. .)))
(S1 (S (SBAR (IN Although) (IN if) (S (NP (PRP you)) (VP (AUX do) (VP (VB decide) (S (VP (TO to) (VP (VB put) (NP (DT the) (NN factory) (NNS methods)) (PP (IN in) (NP (NN Document)))))))))) (, ,) (NP (PRP you)) (VP (MD should) (VP (VB take) (NP (DT the) (JJ same) (NN approach)) (PP (IN with) (NP (DT the) (NNP RangeFactory) (NNS methods))) (PP (IN in) (NP (DT a) (NN Document))))) (. .)))
(S1 (X (TO to)))
(S1 (X (TO to)))
(S1 (NP (NNP out)))
(S1 (S (NP (DT The) (NN spec)) (VP (VBZ says) (SBAR (S (NP (DT that) (`` ``) (NN whatToShow) ('' '')) (VP (VBZ specifies) (SBAR (WHNP (WDT which)) (S (VP (VBP node) (SBAR (S (NP (NNS types)) (VP (MD may) (VP (VB appear) (PP (IN in) (NP (NP (DT the) (JJ logical) (NN view)) (PP (IN of) (NP (NP (DT the) (NN tree)) (VP (VBN presented) (PP (IN by) (NP (DT the) (NN iterator))))))))))))))))))) (. .)))
(S1 (S (ADVP (ADVP (RB As) (RB far)) (SBAR (IN as) (S (NP (PRP I)) (VP (AUX 'm) (VP (VBN concerned)))))) (, ,) (NP (DT that)) (VP (AUX is) (NP (NP (DT the) (NN operation)) (VP (AUXG being) (VP (VBN referenced) (, ,) (SBAR (IN so) (S (NP (PRP I)) (VP (AUX do) (RB n't) (VP (VB consider) (S (NP (DT the) (CD two) (NNS operations)) (VP (TO to) (VP (AUX be) (VP (POS ') (VP (VBN conflated) ('' ')))))))))))))) (. .)))
(S1 (S (ADVP (RB Sure)) (, ,) (NP (PRP you)) (VP (AUX 've) (VP (VBN made) (S (NP (PRP it)) (ADVP (RB easy)) (VP (TO to) (VP (VB implement) (NP (PRP it)) (ADVP (RB as))))))) (: :) (SBAR (IN if) (PRN (-LRB- -LRB-) (-LRB- -LRB-) (NP (NP (JJ whatToShow) (NN &amp)) (PRN (: ;) (-LRB- -LRB-) (NP (NP (CD 1) (NN node.getNodeType)) (-LRB- -LRB-)) (-RRB- -RRB-))) (-RRB- -RRB-)))))
(S1 (S (S (. !) (NP (SYM =) (CD 0)) (-RRB- -RRB-) (VP (VBP show) (PRN (-LRB- -LRB-) (VB node) (-RRB- -RRB-) (: ;)) (SBAR (IN if) (S (-LRB- -LRB-) (NP (NP (NNS expandEntityReferences)) (NP (NP (NN &amp)) (: ;) (NP (NN &amp)) (: ;) (NP (NN node.getNodeType)) (-LRB- -LRB-))) (-RRB- -RRB-) (VP (VBP ==) (NP (NP (NNP Node.ENTITY_REFERENCE) (-RRB- -RRB-) (NNS showChildren)) (PRN (-LRB- -LRB-) (NN node) (-RRB- -RRB-)))))))) (: ;) (CC But) (S (NP (DT that)) (VP (AUX 's) (NP (JJ syntactic) (NN sugar)) (SBAR (IN unless) (S (NP (PRP you)) (VP (VBP make) (NP (NP (DT the) (JJ above) (NN implementation) (NN part)) (PP (IN of) (NP (DT the) (NN specification))))))))) (. .)))
(S1 (S (NP (NNP -LSB-i.e.)) (, ,) (VP (VB indicate) (SBAR (IN that) (S (NP (DT the) (NNS flags)) (VP (MD will) (ADVP (RB always)) (VP (AUX be) (VP (VBN specified) (S (NP (DT that) (NN way)) (ADJP (JJ -RSB-))))))))) (. .)))
(S1 (NP (NP (NN BTW)) (: :) (S (NP (NP (DT The) (JJ easy) (NN implementation)) (VP (VBN shown) (ADVP (RB above)))) (VP (MD would) (RB n't) (VP (VB pass) (NP (VB muster)) (PP (IN in) (NP (PRP$ our) (NN organization)))))) (. .)))
(S1 (S (S (NP (PRP It)) (VP (AUX 's) (NP (DT a) (JJ cute) (NN trick)))) (, ,) (CC but) (S (NP (PRP it)) (VP (AUX is) (RB n't) (ADJP (JJ obvious)) (SBAR (WHNP (WP what)) (S (NP (DT the) (NN code)) (VP (AUX does)))))) (, ,) (CC and) (S (NP (PRP it)) (VP (VBZ relies) (PP (IN on) (NP (NP (DT some) (NNS details)) (SBAR (WHNP (WDT that)) (S (VP (MD could) (VP (VB change) (PP (IN in) (NP (DT a) (JJ subsequent) (NN release))))))))))) (. .)))
(S1 (S (ADVP (RB Furthermore)) (, ,) (SBAR (IN if) (S (NP (PRP you)) (VP (VBP want) (NP (DT the) (JJ same) (`` ``) (NN simplicity) ('' ''))))) (NP (PRP you)) (VP (MD can) (VP (VB handle) (NP (PRP it)) (ADVP (RB just) (RB as)) (ADVP (RB easily)) (S (VP (VBG using) (NP (NP (DT a) (JJ static) (NN array)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (AUX is) (ADJP (JJ independant) (PP (IN of) (SBAR (WHADVP (WRB where)) (S (NP (PRP you)) (VP (VBP put) (NP (DT the) (JJ actual) (NN flag) (NNS values))))))))))))))) (. .)))
(S1 (FRAG (IN if) (-LRB- -LRB-) (-LRB- -LRB-) (NP (NN whatToShow) (NN &amp)) (: ;) (NP (NP (NN showMasks-LSB-node.getNodeType)) (PRN (-LRB- -LRB-) (NP (-RRB- -RRB-) (NN -RSB-)) (-RRB- -RRB-)))))
(S1 (S (. !) (NP (SYM =) (CD 0)) (-RRB- -RRB-) (VP (VBP show) (PRN (-LRB- -LRB-) (VB node) (-RRB- -RRB-) (: ;)) (SBAR (IN if) (FRAG (NP (-LRB- -LRB-) (NP (-LRB- -LRB-) (JJ whatToShow) (NN &amp)) (: ;) (NP (NN &amp)) (: ;) (NP (NP (NN expandMasks-LSB-node.getNodeType)) (PRN (-LRB- -LRB-) (NP (-RRB- -RRB-) (NN -RSB-)) (-RRB- -RRB-)))))))))
(S1 (FRAG (. !) (VP (SYM =) (NP (NP (CD 0) (-RRB- -RRB-) (NNS showChildren)) (PRN (-LRB- -LRB-) (NP (NN node)) (-RRB- -RRB-)))) (: ;) (S (NP (DT The) (JJ second) (NN implementation)) (VP (VBZ seems) (ADJP (JJ preferable)) (, ,) (SBAR (ADVP (RB especially)) (WHADVP (WRB when)) (S (NP (PRP you)) (VP (VBP consider) (SBAR (IN that) (S (NP (NNP TreeWalker) (CC and) (NNP NodeIterator)) (VP (MD may) (VP (AUX be) (VP (VBN used) (S (VP (TO to) (VP (VB walk/iterate) (PP (IN over) (NP (NNP DocumentTypes))) (PP (IN in) (NP (NP (CD DOM3)) (, ,) (SBAR (WHPP (IN in) (WHNP (WDT which) (NN case))) (S (NP (PRP you)) (VP (MD might) (VP (AUX have) (NP (JJR more) (NNS flags)) (PP (IN like) (NP (NN expandEntityReference)))))))))))))))))))))) (. .)))
(S1 (SQ (SBAR (IN If) (S (NP (PRP you)) (VP (AUX are) (VP (VBG going) (S (VP (TO to) (VP (VB stick) (PP (IN with) (NP (DT the) (CD two) (JJ separate) (NNS arguments)))))))))) (, ,) (MD could) (NP (PRP you)) (ADVP (IN at) (JJS least)) (VP (VP (VB make) (S (NP (DT the) (JJ second) (NN one)) (NP (DT another) (NN mask)))) (, ,) (CC and) (VP (VB define) (NP (DT a) (JJ constant)) (PP (IN for) (NP (NN entity) (NNS references))))) (. .)))
(S1 (S (NP (DT That) (NN way)) (NP (PRP it)) (VP (AUX is) (ADJP (RB extensible) (JJ enough)) (SBAR (RB so) (IN that) (S (SBAR (IN if) (S (NP (NNP DOM3)) (VP (VBZ wants) (S (VP (TO to)))))) (, ,) (NP (PRP it)) (VP (MD can) (VP (VB expand) (PP (IN into) (NP (DT the) (NN field)))))))) (. .)))
(S1 (NP (NNP Keith)))
(S1 (S (NP (PRP I)) (VP (AUX do) (RB n't) (VP (VB think) (SBAR (IN that) (S (NP (NN everybody)) (VP (MD would) (VP (VB like) (S (VP (TO to) (VP (VB see) (S (NP (NP (DT the) (NNS methods)) (SBAR (S (VP (TO to) (VP (VB get) (NP (NP (DT a) (NN range)) (CC or) (NP (NP (DT a) (NN css)) (PRN (-LRB- -LRB-) (CC or) (SBAR (WHNP (WDT whatever) (NN module)) (S (NP (PRP you)) (VP (VBP choose)))) (-RRB- -RRB-))))))))) (VP (VBP object) (PP (IN on) (NP (DT the) (NNP Node) (NNP interface))) (, ,) (ADVP (RB right))))))))))))) (. ?)))
(S1 (S (CC So) (S (VP (VBG adding) (NP (NP (DT the) (NN factory) (NNS operations)) (PP (IN of) (NP (DT the) (NNP Traversal)))) (PP (IN on) (NP (DT the) (NNP Node) (NNP interface))))) (VP (AUX is) (RB not) (NP (DT a) (JJ good) (NN idea))) (. .)))
(S1 (NP (NNP Philippe) (. .)))
