Many http server implementors seem to have interpreted the combination of these requirements to imply that a POST request without a Content-Length HTTP header cannot have a message-body. 
This implication might have held for HTTP/1.0, but is wrong for HTTP/1.1. 
Indeed, I have tried several commercial web servers and in all cases, a servlet or CGI program gets end-of-file as soon as it tries to read the message-body input stream for a POST request with chunked transfer-coding. 
Did these servers purport to support HTTP/1.1 for CGI scripts? 
implementations, but we didn't ask implementations to distinguish whether they supported 'chunked' transfer encoding specifically. 
In any case, you left out the most obvious solution: don't use 'CGI' to implement IPP. 
However, it would be useful to update CGI for HTTP/1.1. 
Larry Many http server implementors seem to have interpreted the combination of these requirements to imply that a POST request without a Content-Length HTTP header cannot have a message-body. 
Indeed, I have tried several commercial web servers and in all cases, a servlet or CGI program gets end-of-file as soon as it tries to read the message-body input stream for a POST request with chunked transfer-coding. 
Hmm. 
I'm pretty sure Apache works correctly in this case, but I doubt it has been heavily tested. 
Does anyone know different? 
Cheers, Ben. 
A.L. Digital Ltd, |Apache-SSL author http://www.apache-ssl.org/ 
London, England. 
|"Apache: TDG" http://www.ora.com/catalog/apache/ 
To wrap up this discussion, can we summarize the answer in RFC 2119 standard-speak? 
What requirements must an http server meet in order to claim compliance with HTTP/1.1 AND CGI/1.1? 
I can only speak with anything resembling authority on the CGI aspects. 
I find your questions a bit contradictory, but here's my take on them: 1. MAY a server discard the message body of a POST request with no Content-Length? 
[Opinion] No. The message-body is an integral part of the request, and cannot be silently ignored. 
The server should return a 411 (Length Required) instead. 
2. MAY a server discard the message body of a POST request with no Content-Length when the destination resource is CGI? [Opinion] Same answer as for [1]. 
3. MUST a server buffer the message body of a POST request with Transfer-Encoding: chunked and generate a CONTENT_LENGTH when the destination resource is CGI? 
Yes, if it accepts the request at all. 
The CONTENT_LENGTH metavariable is a MUST for CGI compliance. 
4. SHOULD a server buffer the message body of a POST request with Transfer-Encoding: chunked and generate a CONTENT_LENGTH when the destination resource is CGI? 
No, it's a MUST. 
What if the destination resource is a servlet? 
I don't think this applies to CGI. 
I don't know what interface is used by servers to communicate with servlets. 
If they use CGI, or a particular servlet implementation does, then they need to abide by the CGI requirements. 
Should this information be written in a spec or informational something somewhere? 
I think that specs that define how applications should juggle different protocols are a waste of time (MHO). 
This is more likely a HOWTO or FAQ sort of thing, explaining how related aspects should be handled by implementors. 
Of course, if you want to write something up for the CGI-NG draft, feel free.. :-) #kenP-)} Ken Coar http://Web.Golux.Com/coar/ 
Apache Group member http://www.apache.org/ 
"Apache Server for Dummies" http://Web.Golux.Com/coar/ASFD/ 
In a previous episode Rodent of Unusual Size said... ::  1. MAY a server discard the message body of a POST request with no ::  Content-Length? 
:: [Opinion] No. The message-body is an integral part of :: the request, and cannot be silently ignored. 
The server :: should return a 411 (Length Required) instead. 
Section 4.4 (http rev6): All HTTP/1.1 applications that receive entities MUST accept the "chunked" transfer-coding (section 3.6), thus allowing this mechanism to be used for messages when the message length cannot be determined in advance. 
so, imho, it must take it and use it. 
http-wg: upon reflection, I actually can't think of any reason why a server would ever send 411... 
About the best I can come up with is a complete request (sans body) that has been sent that does hold any of the criteria set forth in 4.4.. but it's not really CL that's needed there, it's something that meets the 4.4 criteria.. our server actually does issue 411 for the above case, but in retrospect I'm not really sure that's right. 
The archives didn't clear this up for me.. any recollections? 
-P In my opinion, Ken Coar is correct in saying that for a server to be *both* HTTP/1.1 compliant and CGI/1.1 compliant it MUST buffer chunked POST data and provide a Content-Length for the CGI script. 
My recollection is that some servers chose not to be completely CGI/1.1 
compliant to avoid the buffering. 
The 411 header was a way to be HTTP/1.1 compliant and indicate their rejection of chunked POST data. 
For example, I have heard that Apache rejects chunked POST data, but I have not personally verified this. 
John Franks john@math.nwu.edu 
Sending 411 is HTTP/1.1 compliant. 
Failure to parse the chunked encoding (and puking) would be non-compliance, but requiring a content-length for a given resource is necessary for many reasons (DoS and legacy system protection). 
Right, the default mod_cgi distributed with Apache will respond with 411 because it assumes the CGI is dumb. 
The core of Apache does support chunked reading, so one could always write a module that reads chunked, but CGI requires a content-length before the script is execed. 
A module that does limited-size buffering before handing over to the CGI script has been on my Apache to-do list for a long time (over a year). 
....Roy 
