[following your discussion with Herman] Although it is the case that 
{{?X rdf:type ?A} = {?X rdf:type ?B}} = {?A rdfs:subClassOf ?B}. 
I fail to see what an engine could ever do with that... Suppose it only has following facts loaded :Pat rdf:type :Human. 
:Pat rdf:type :American. 
:Peter rdf:type :American. 
does that then mean that it can conclude :Human rdfs:subClassOf :American? 
Of course not, as that would be nonmonotonic, but what else could it do? 
What am I missing? 
Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/ 
Not sure if this is relevant but, ... in OWL full a rdf:type owl:Restriction . 
a owl:onProperty rdf:type . 
a owl:hasValue b . 
entails a rdfs:subClassOf b . 
by this rule. 
(in fact the OWL Full expression could be seen as a definition of subClassOf) 
Jeremy 
Now I see the utility, that is a nice rule for OWL added http://www.agfa.com/w3c/euler/owl-rules#rule8s7 
thanks to Jeremy so we had { :rule3r1. 
?R owl:onProperty ?P; owl:hasValue ?Y. ?X a ?R } = { ?X ?P ?Y { :rule9r2. 
?R owl:onProperty ?P; owl:hasValue ?Y. ?X ?P ?Y } = { ?X a ?R and now added { :rule8s7. 
?A owl:onProperty rdf:type; owl:hasValue ?B } = { ?A rdfs:subClassOf ?B }. 
Any other cases? 
Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/ 
Jeremy Carroll Sent by: cc: w3c-rdfcore-wg-requ Subject: Re: iff est@w3.org 
2003-04-17 06:41 AM 
Not sure if this is relevant but, ... in OWL full a rdf:type owl:Restriction . 
a owl:onProperty rdf:type . 
a owl:hasValue b . 
entails a rdfs:subClassOf b . 
by this rule. 
(in fact the OWL Full expression could be seen as a definition of 
subClassOf) Jeremy 
No. See below. 
The 'antecedent' of this inference rule amounts to the existence of a subproof of x type B from x type A, with the variable in place. 
(In fact it doesnt have to be a variable, as long as the subproof doesnt use any other antecedents which mention the particular subject, since then the subject could be changed and the same derivation would work); and this entire subproof is the reason this must follow for ANY x, hence the final conclusion. 
This isn't a closure rule, but it is a valid inference rule. 
Searching for inferences like this make life hard for implementers, though, which is why hardly anyone directly implements natural deduction systems (except maybe for proof *checkers*). 
So the task I have is to show that this proof rule isnt actually needed since rdfs12 covers the only way it could be used, so RDFS can be fully captured using only closure rules. 
Pat 
IHMC(850)434 8903 or (650)494 3973 home 40 South Alcaniz St.(850)202 4416 office FL 32501???????????(850)291 0667 cell phayes@ai.uwf.edu http://www.coginst.uwf.edu/~phayes s.pam@ai.uwf.edu for spam 
Right, nicely put. 
Pat IHMC(850)434 8903 or (650)494 3973 home 40 South Alcaniz St.(850)202 4416 office FL 32501???????????(850)291 0667 cell phayes@ai.uwf.edu http://www.coginst.uwf.edu/~phayes s.pam@ai.uwf.edu for spam 
Hmm. 
Under this reasoning ex:foo rdf:type owl:Restriction . 
ex:foo owl:onProperty rdf:type . 
ex:foo owl:hasValue rdfs:Class . 
implies ex:foo rdfs:subClassOf rdfs:Class. 
I don't think so. 
peter 
I do. 
The argument: suppose (x type foo); then (x type Class) because of the restriction on type; but x is arbitrary, so (foo subClassOf Class) by the iff condition on rdfs:subClassOf. 
And this seems to me to make intuitive sense, since the restriction amounts to saying that anything that foo is true of must be of type rdfs:Class, so foo is a subclass of rdfs:Class. 
Obviously it would work for any class, not just rdfs:Class. 
Also in OWL-Full it would work with ranges as well, since they also have iff semantics. 
Pat PS the logical translation of the above amounts to 
foo(x) implies type(x,Class) which with the axiom type(x,y) iff x(y) 
gives foo(x) implies Class(x) with x free, ie universally quantified; which is a sufficient condition for Subclass(foo, Class) because Subclass(x,y) iff (all (z)(x(z) implies y(z) ) IHMC(850)434 8903 or (650)494 3973 home 40 South Alcaniz St.(850)202 4416 office FL 32501???????????(850)291 0667 cell phayes@ai.uwf.edu http://www.coginst.uwf.edu/~phayes s.pam@ai.uwf.edu for spam 
Arrgh. Sorry. 
You're right. 
I was confused. 
I'm not used to thinking of restrictions as things that need to be considered as classes. 
peter From: pat hayes phayes@ai.uwf.edu 
Subject: Re: iff Date: Fri, 18 Apr 2003 16:38:38 -0500 
