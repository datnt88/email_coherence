22 January 2001 UA Guidelines Teleconference Agenda: Minutes of previous meeting 18 January: Next meeting: 25 January (regular meeting). 
Possible regrets: Eric Hansen Following meeting: 1 February Possible regrets: Mickey Quenzer Present: Jon Gunderson, Ian Jacobs (scribe), Mickey Quenzer, Al Gilman, Harvey Bingham, David Poehlman, Eric Hansen Regrets: Charles McCathieNevile Absent: Denis Anson, Gregory Rosmaita, Kitch Barnicle, Jim Allan ISSUES 4.Issue 448: Checkpoint 5.7: Is CSS read-only or read/write? 
[This is checkpoint 5.9 in the 13 January 2001 draft.] 
Source: Refer to proposal from IJ: AG: I'm uncomfortable with the Note (may follow up). 
IJ: I think that user modification of author style sheets doesn't respect the intended cascade mechanisms. 
EH: I think I agree with Ian's argument. 
JG: Often, real browsers let you modify the computed value. 
Resolved: No change to the DOM 2 style requirement. 
5.Issue 450: If UA is implemented in Java, what system conventions should it follow? 
Source: Proposed: Change "operating system" to "operating system and language" globally. 
AG: I don't think that that's the solution. 
I think that the developer should be allowed to choose between, say, a Java solution and a Windows solution. 
But once they pick, they have to follow through and use the conventions. 
JG: When writing for java, the "os" conventions are the java virtual machine. 
AG: I think that you should probably say "language or OS" if the jvm is an option. 
IJ: Does java have "standard APIs for the keyboard"? 
AG: Not sure, but I think so. 
AG: "Environment conventions". 
In the glossary, make clear that operating system is one option, jvm is another. 
Resolved: - Add "environment conventions" to the glossary. 
- Global change of OS conventions to environment conventions. 
Action IJ: Implement "environment conventions" changes. 
6.Issue 451: Checkpoint 2.6: Generalize to decorative content, not just null alt Source: Resolved: Yes, we think we've generalized it as much as we can. 
UAAG 1.0 is based on WCAG 1.0. 
We would rather have developers meet critical needs today. 
May explore even more general requirement in another UAAG draft. 
We hope that in the future, formats will allow us to do more. 
7.Issue 452: Checkpoint 2.2: Review minimal requirement (three options?) Source: JG: The presentation is anything that's going on. 
This is not just about a single link, for example. 
How does this interact with our video/audio slow requirements? 
Action AG: Consult Trace Institute and reply to UAWG about what the requirement should be for checkpoint 2.6. 
DP: Check out their kiosk model. 
NO RESOLUTION. 
8.Issue 453: Checkpoint 3.5: Generalize to "programmatic objects" Source: IJ: Two questions: - Do we add plug-ins? 
(not author-supplied content) - Do we generalize to programmatic objects? 
AG: If you put an activeX control in the content, would that be an "applet" or some other programmatic object? 
I think that "programmatic object" is a valid generic term. 
"Scripts and applets" don't cover the entire space. 
AG: You may want dynamic control, even for plug-ins. 
You may want a plug-in installed, but not used in a particular case. 
Should the user have page-by-page control over plug-in functionality? 
[What's the granularity of this requirement?] 
IJ: In other words, is this a request for a per-resource control requirement? 
Is the requirement "Allow users to uninstall plug-ins?" 
We don't have any install requirements. 
JG: I'm not sure we have implementation experience for ocx controls. 
IJ: What's the difference between style sheets and a programmatic object? 
DP: In IE security settings, there are a lot of things you can turn off (including ActiveX controls), or set the settings to "safe". 
Even download actions. 
I'm in favor of the broader term. 
AG: If we use the broader statement, we may not have enough implementation. 
If we use the narrower statement, we may not ensure that the user's needs are not sufficiently covered MQ: I think that since we don't know what we're expanding the checkpoint to, we should leave it narrower. 
JG: I don't think we should broaden. 
EH: I don't have a strong feeling on this. 
AG: I like "programmatic objects" as a term, but I'm sensitive to the concern about implementation experience. 
I think that it's possible to make a crisper statement about what the user's need is: programmatic elements that make the interface act differently (e.g., a plug-in that changes the interaction rules), that there is an accessibility dependency. 
I'm not sure that all programmatic objects cause accessibility problems and thus that the user would need to turn off. 
IJ: Does programmatic object mean "thing that is executed"? 
AG: I think that's the point of this checkpoint, yes. 
Resolved: - This checkpoint is about global configuration related to author-supplied executable content. 
- Adopt "executable content". 
Change checkpoint to: "Allow the user to configure the user agent not to execute executable content (e.g., scripts or applets)." 
(and edit the configuration part appropriately) - Add ActiveX controls to techniques. 
- Do not include plug-ins in this checkpoint. 
- Do not add a per-resource "turn off this plug-in" control requirement in this version of the UAAG. 
Action IJ: Modify checkpoint 3.5 appropriately. 
9.Issue 454: Checkpoints 3.6/3.7: 
Should these be Priority 1? 
Source: IJ: I sympathize with the reviewer's comment: If the user can't get at this content, this is a P1 violation. 
I think that we didn't raise this because checkpoint 2.1 requires access to all content. 
JG: Does that make 3.6/3.7 
de facto P1? AG: I don't support putting them in Guideline 2. These are more about control than data visibility. 
DP: I'm inclined to think that we're covered. 
/* DP leaves */ IJ: What about just pointing to 2.1 and saying that all content must be available? 
AG: Send an issues-specific message to the list. 
Ask for input from the list. 
Action JG: Send a request to the list asking for input on this one. 
Action item review Done 2.IJ: Add IJ proposed checkpoint for character set API support for issue 324 Source: (This will be done in the next draft of the guidelines.) 3.IJ: Ask Philippe Le Hegaret about read only suport for DOM style module and alert the WG Source: 7.JG: Talk to Al Gilman at the next WAI CG meeting about a joint meeting with UA, PF, and Voice WG (or participants) to discuss accessibility issues. 
Source: 12.DP: Send information about tools that allow mouse binding reconfiguration Source: Done: Dropped 14.GR: Talk to AFB about captioning and positioning (deadline 1/18/2001) Refer to quicktime pro: Open 4.IJ, EH, AG: Propose new definitions forterms in question (equivalence, text element, etc.) 5.IJ and EH: to review the definition of "presentation" to possibly drop URI-dependencies. 
6.IJ and EH: Work on definition of "animation" that identifies "animated image" as a special case. 
Also talks about script effects, style sheets effects, markup languages as being able to create animations. 
(Blinking not part of animations...?) 8.JG: Send screen shots of directional techniqes Source: 9.JG: Implementation information for guideline 2 10.JG: Propose text for the techniques document about synthesized speech implementation issues. 
Notably UA and AT wanting to use the same synthesizer engine. 
11.JG: Create issue list for things that need to be addressed in the next version of the document 13.GR: Review checkpoints in Guideline 10 for implementation information 15.JA: Review checkpoints in Guideline 4 for implementation information 16.MQ: Send more details about control of speech parameters for the techniques document based on OpenBook. 
(deadline open) 17.KB: Submit technique on providing information on current item and number of items in search Ian Jacobs (jacobs@w3.org) http://www.w3.org/People/Jacobs Cell: +1 917 450-8783 server.rehab.uiuc.edu/ua-issues/issues-linear-lc2.html#448 http://lists.w3.org/Archives/Public/w3c-wai-ua/2001JanMar/0099.html http:// lists.w3.org/Archives/Public/w3c-wai-ua/2001JanMar/0099.html 
AG:: For the user to create a derived-work stylesheet and view the author's content through this stylesheet, is, I would think, a "just use" within the general architectural division of labor that says "content" is essential to the communication of the correct information, and "style" is adjustable without changing the information. 
For the user to re-distribute the derived composite (author's content and user's edit of author's stylesheet) on any terms other than a duly permitted and credited derived work would be an infringement of the author's intellectual property rights. 
But for the User Agent to allow the user to take the author's stylesheet at any time and use it as the initial value for creating a user's stylesheet on the fly (while viewing the content) has such strong access advantages that the UAAG should not discourage it.? Many User Agents that are not authoring tools will not provide this capability.? But it is a) inappropriate and b) counter to our values for the User Agent Guidelines to say anything against it.? The limits on such activity are intellectual property policy over which the CSS Recommendation does not have jurisdiction, and where we would be making a mistake to act as though it does. 
Direct manipulation of the style properties of objects in an open Web document, is markedly superior in usability to offline creation of a stylesheet in a formal style language.? The idea that the user can write and install their own style sheet is enough to gain a WCAG A rating, but should not be considered to get us past that point.? It basically leaves a P2 level barrier in place.? The users who can actually do this would amount to a small fraction of those who could cope with the direct manipulation version.? For the User Agent to offer direct manipulation to fix access problems by giving the user edit control of the style layer of the in-DOM document image, starting from the baseline laid down by the author, is just a much better interface to what we have all agreed the user should be able to do.? Nothing that is trying to advance access should discourage the implementation of this better interface. 
Clearly the user should not be able to upload their derived stylesheet in a way that replaces thte author's stylesheet at the server and in distribution of the author's work.? Normally, the derived stylesheet created when the user edits the author's stylesheet would be saved as a new stylesheet.? But this need not be addressed by any provisions of the UAAG. 
Making, for your own use, a derived copy of the author's web page with an edited stylesheet is the intellectual property rough equivalent of having a copy of a published and printed book with handwritten marginal notes and yellow highlights in it.? Were the User Agent to offer style editing while browsing as a means to do this, it would be better, not inappropriate, User Agent functionality.? Let us not put the W3C in the indefensible and access-hostile position of discouraging such better practice. 
Al I don't see the need to modify the existing style sheets. 
The CSS cascade mechanism is carefully defined so that it is possible to build a simple WYSIWYG-type interface to modify a particyular page's presentation, which the Usser agnet generates as a user style sheet. 
The User agent could also remember whether that is a general atyle sheet or one that is to ba associated with that partiular page/site/whatever (not a requirement, but good for bonus points). 
This is just a smart way to implemenet (technique for) the various checkpoints that require user control over various style features. 
Charles McCN server.rehab.uiuc.edu/ua-issues/issues-linear-lc2.html#448 http://lists.w3.org/Archives/Public/w3c-wai-ua/2001JanMar/0099.html http:// lists.w3.org/Archives/Public/w3c-wai-ua/2001JanMar/0099.html 
AG:: For the user to create a derived-work stylesheet and view the author's content through this stylesheet, is, I would think, a "just use" within the general architectural division of labor that says "content" is essential to the communication of the correct information, and "style" is adjustable without changing the information. 
For the user to re-distribute the derived composite (author's content and user's edit of author's stylesheet) on any terms other than a duly permitted and credited derived work would be an infringement of the author's intellectual property rights. 
But for the User Agent to allow the user to take the author's stylesheet at any time and use it as the initial value for creating a user's stylesheet on the fly (while viewing the content) has such strong access advantages that the UAAG should not discourage it.? Many User Agents that are not authoring tools will not provide this capability.? But it is a) inappropriate and b) counter to our values for the User Agent Guidelines to say anything against it.? The limits on such activity are intellectual property policy over which the CSS Recommendation does not have jurisdiction, and where we would be making a mistake to act as though it does. 
Direct manipulation of the style properties of objects in an open Web document, is markedly superior in usability to offline creation of a stylesheet in a formal style language.? The idea that the user can write and install their own style sheet is enough to gain a WCAG A rating, but should not be considered to get us past that point.? It basically leaves a P2 level barrier in place.? The users who can actually do this would amount to a small fraction of those who could cope with the direct manipulation version.? For the User Agent to offer direct manipulation to fix access problems by giving the user edit control of the style layer of the in-DOM document image, starting from the baseline laid down by the author, is just a much better interface to what we have all agreed the user should be able to do.? Nothing that is trying to advance access should discourage the implementation of this better interface. 
Clearly the user should not be able to upload their derived stylesheet in a way that replaces thte author's stylesheet at the server and in distribution of the author's work.? Normally, the derived stylesheet created when the user edits the author's stylesheet would be saved as a new stylesheet.? But this need not be addressed by any provisions of the UAAG. 
Making, for your own use, a derived copy of the author's web page with an edited stylesheet is the intellectual property rough equivalent of having a copy of a published and printed book with handwritten marginal notes and yellow highlights in it.? Were the User Agent to offer style editing while browsing as a means to do this, it would be better, not inappropriate, User Agent functionality.? Let us not put the W3C in the indefensible and access-hostile position of discouraging such better practice. 
Al Location: I-cubed, 110 Victoria Street, Carlton VIC 3053, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) 
