[offlist] On 2002-01-29 22:18, "ext Graham Klyne" Graham.Klyne@MIMEsweeper.com 
The only show stopper that has been claimed for TDL is that it doesn't have tidy literals -- based on the view that e.g. "1984" always means the same thing. 
I hope that it has become clear that this view is not valid in an environment of global interchange between disparate sources of knowledge. 
So it should be concluded that there are no show stoppers for TDL. 
I find this completely non sequitur. 
If any show stopper can be removed by introduction of a different show stopper, that doesn't mean there are no show stoppers. 
I'm not sure I follow you there. 
Both Dan and Sergey in their "can't live with S" postings focused primarily on the fact that because TDL presumed untidy literal nodes, it was fundamentally broken. 
I.e. 
Dan: http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Jan/0289.html 
TDL[TDL] does not meet the "duh!" requirement. 
(the TDL proponents will please correct me if I have misunderstood, but I'm pretty sure, based on the clarification of TDL I just got in the telcon, that it does not.) Therefore I find it totally unacceptable. 
Sergey: http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Jan/0293.html 
A major problem with TDL [1] is that it requires RDF graphs to be untidy on literals. 
This requirement would breaks most RDF applications that I am aware of. 
Existing applications that assume RDF graphs to be tidy on literals can safely conclude that the two literals in the above graph are identical. 
Responses from Jeremy, myself, and Pat have, I believe, made it clear that untidyness is required somewhere, and that where TDL chooses to deal with that untidyness is both valid, correct, and not broken. 
Applications which presume global consistency of meaning for literals are closed systems and not following the "spirit" of RDF as a means of global interchange of context independent knowledge. 
I am not introducing any other show stopper (which specifically did you mean) but pointing out that the presumed show stopper for TDL based on untidy literals was not in fact any show stopper. 
If TDL appears to "break" applications that presume global meaning for literals regardless of context, then it is in fact those applications which are defective and not TDL. 
TDL is doing those applications a favor by showing that they are making system-specific, closed context presumptions about the datatyping interpretation of literals, interpretations which rather should be based on knowledge expressed in the RDF and thus consistent globally for all applications. 
Thus TDL is not broken as Dan and Sergey claim. 
I am still open to a TDL proposal that actually works. 
From a stylistic viewpoint, I can agree that it is neater. 
I'm glad to hear that, and I can also say that I am not completely closed to S if the issues of compatability of local and global idioms and no recourse to idiom specific vocabularies can be addressed (because, even if you don't see that as a problem, it is a show stopper to me). 
Though that doesn't mean that I don't still have concerns about the impact S will have on further adoption and use of RDF by "common folk". 
I have a few specific questions, in the aim of understanding your prior and remaining concerns about TDL, particularly with regards to entailment: Given the fact that untidy literals for TDL are both neccessary and valid (i.e. the "Duh!" test is flawed) do your concerns about entailment remain? 
(for the original definition of TDL, not the recent "manditory bnode" variant) I.e. is it correct to expect that entailment be based on the presumption that literals have consistent global meaning independent of context? 
How does TDL meet the entailment requirements if based on the interpretation level, meaning, if per my example near the end of every literal was replaced by the TDL pairing(s) that actually apply? 
Thanks, Patrick 
I find this completely non sequitur. 
If any show stopper can be removed by introduction of a different show stopper, that doesn't mean there are no show stoppers. 
OK, let's back up. 
The original show stopper in this case was, in my view, the lack of self-entailment of a document, which was in turn a consequence of the treatment of untidy literal nodes. 
Jeremy offered a proposal that overcame the self-entailment problem, but which required a fundamental change to the handling of RDF (relative to at least DanC's and my understanding). 
The non sequitur here is: Proposal A is broken for reason of problem B. Proposal C fixes problem B = Proposal A+C is not broken. 
Roughly, you have to consider the wider picture, you can't just pick off problems in isolation. 
#g Graham Klyne MIMEsweeper Group Strategic Research http://www.mimesweeper.com 
On 2002-01-30 11:48, "ext Graham Klyne" Graham.Klyne@MIMEsweeper.com 
I find this completely non sequitur. 
If any show stopper can be removed by introduction of a different show stopper, that doesn't mean there are no show stoppers. 
My suggestion was that there only was an entailment problem if you subscribed to the view that literals are globally unique in meaning. 
Since it was shown that such a view is not correct, does then the entailment problem go away? 
I was not referring to Jeremy's revised proposal -- which really is not another proposal, but a way to view/implement TDL which makes the tidy/untidy issue a bit more explicit. 
This was not what I was saying. 
I was saying Proposal A (TDL) is broken for reason of problem B ("Duh!"). 
There is no problem B. Proposal A is not broken. 
Never did. 
You seem to have misunderstood me. 
Is the above now clearer? 
Cheers, Patrick 
Graham, I found your message very helpful. 
It is clearly logically correct. 
Our general approach to discussion in the WG does try to treat issues in isolation, and that can lead to problems. 
The need to release a new draft of TDL with the model theory revisions in it is clear, and is moving up my todo list. 
Jeremy 
From: Graham Klyne [mailto:Graham.Klyne@MIMEsweeper.com] 
Sent: 30 January 2002 09:48 Subject: Re: (offlist) Re: Datatyping Summary 
I find this completely non sequitur. 
If any show stopper can be removed by introduction of a different show stopper, that doesn't mean there are no show stoppers. 
Clearer, but I don't accept that there is no problem with self-entailment in TDL as currently presented. 
I think TDL possibly can be fixed (and have sent some ideas to Jememy), but until it is fixed it isn't in my mind a fully fledged proposal. 
#g Graham Klyne MIMEsweeper Group Strategic Research http://www.mimesweeper.com 
On 2002-01-30 13:51, "ext Graham Klyne" Graham.Klyne@MIMEsweeper.com 
Fair enough. 
Though I'd very much like your comments to my question in my MT commments to Pat, that insofar as the actual denoted values are concerned, I wonder if either TDL or S can ensure entailment, since RDF is stuck with non-canonical lexical forms. 
C.f. the last comment in 
Patrick 
My ideal outcome for the datatyping discussion is something like we agree on TDL or S-P (perhaps with an S-A idiom but S-P semantics) and then Pat works his model theoretic magic so that the literal strings somehow vanish from the model theory. 
I, never having got passed the apprentice stage, can't weave such wonders. 
Jeremy 
Unfortunately the question doesn't make sense to me -- entailment is a relationship between graphs, not something that happens to the values in (or denoted by) a graph. 
#g Graham Klyne MIMEsweeper Group Strategic Research http://www.mimesweeper.com 
Jeremy, Did my thoughts on an MT for TDL make any sense to you? 
Essentially, I was treating literals like blank nodes, but with some extra conditions. 
Originally, I started using a mapping from literal nodes to datatype map members, a bit like Pat's "A" for blank nodes, then felt I could could say the same thing without it. 
I've sent of copy of that bit of my note to the archive, with some links to Jeremy's related notes, available at: #g Graham Klyne MIMEsweeper Group Strategic Research http://www.mimesweeper.com 
On 2002-01-30 17:38, "ext Graham Klyne" Graham.Klyne@MIMEsweeper.com 
Then I guess I really don't grok the problem. 
It seemed to me that Dan's expectations of tidy literals was that he was treating node equality with value equality, rather than just string equality. 
Insofar as the graph itself is concerned, literals are just strings. 
They don't become values without interpretation based on a datatype context. 
So all you could entail between two literal nodes is string equality. 
But I'll just but out of this particular discussion and let you more capable and learned folks hash it out. 
(I knew I should have slept less in math class... ;-) 
Cheers, Patrick 
I guess it's my turn to try and be clearer. 
The strict treatment of literals advocated by DanC, and embodied in scheme S, is one way to ensure that literals don't break self-entailment of documents. 
I don't believe it's the only way, so in my arguments I've not tried to rely on a graph being tidy over literals. 
Self-entailment means: there is no interpretation that satisfies one instance of a graph but does not satisfy another instance of the same graph (with the same labels and structure). 
If the denotation of every node in a graph is fully defined by any interpretation together with the syntactic elements to which the interpretation is applied, then self-entailment must follow. 
Jeremy's original theory for TDL did not provide a specific denotation for each literal in a graph, so a given interpretation could yield different denotations (or no denotation) for different instances of a graph. 
And the truth-value of graph arcs (triples) depends on the denotations of nodes. 
So it would be possible for a given graph to evaluate to true OR false under a given interpretation, and this is what breaks self-entailment. 
Sergey has said he needs tidiness on literals to overcome this. 
I don't agree: that is a sufficient condition for self entailment, but I don't think it's necessary. 
E.g. Pat uses a different approach in his MT for blank nodes, which also don't have a fixed denotation under a given interpretation... [Enter my MT notes to Jeremy: (http://lists.w3.org/Archives/Public/www-archive/2002Jan/0147.html).] 
Now your language has departed from anything I can understand in terms of the words you use. 
"entail between two literal nodes" just doesn't mean anything to me: entailment is a relationship between expressions that evaluate to True or False. 
Me too... I've spent much of the past year learning something of what I should have learned in class. 
(Though I must say, I think Pat's an excellent teacher.) #g Graham Klyne MIMEsweeper Group Strategic Research http://www.mimesweeper.com 
