(S1 (S (SBAR (IN While) (S (VP (VBG implementing) (NP (JJ DOM2) (NN traversal))))) (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (PRP I)) (VP (AUX 've) (VP (VBN found) (NP (DT a) (VBG missing) (NN exception)) (PP (IN in) (NP (DT the) (JJ treeWalker) (NNP interface)))))))) (. .)))
(S1 (S (SBAR (WHADVP (WRB When)) (S (VP (VBG setting) (NP (DT the) (NN currentNode))))) (VP (MD should) (RB n't) (NP (DT a) (NNP WRONG_DOCUMENT_ERR)) (VP (AUX be) (VP (VBN raised) (SBAR (IN if) (S (NP (NN currentNode)) (VP (AUX is) (VP (VBN set) (PP (TO to) (NP (NP (DT a) (NN node)) (PP (IN in) (NP (DT another) (NN document)))))))))))) (. .)))
(S1 (S (ADVP (RB Otherwise)) (NP (DT a) (NN treeWalker)) (VP (VP (MD could) (VP (AUX be) (VP (VBN created) (PP (IN in) (NP (CD one) (NN document)))))) (CC and) (ADVP (RB then)) (VP (VBD used) (S (VP (TO to) (VP (VB walk) (NP (NP (DT another) (NN document)) (SBAR (WHNP (WDT that)) (S (VP (AUX has) (NP (DT a) (ADJP (RB compleatly) (JJ different)) (NN implementation))))))))))) (. .)))
(S1 (NP (NNP /) (NNP Jonas) (NNP Sicking)))
(S1 (FRAG (PP (IN in) (NP (DT the) (JJ treeWalker) (NNP interface))) (. .)))
(S1 (S (SBAR (WHADVP (WRB When)) (S (VP (VBG setting) (NP (DT the) (NN currentNode))))) (VP (MD should) (RB n't) (NP (DT a) (NNP WRONG_DOCUMENT_ERR)) (VP (AUX be) (VP (VBN raised) (SBAR (IN if) (S (NP (NN currentNode)) (VP (AUX is) (VP (VBN set) (PP (TO to) (NP (NP (DT a) (NN node)) (PP (IN in) (NP (DT another) (NN document)))))))))))) (. .)))
(S1 (INTJ (JJ Good) (NN question) (. .)))
(S1 (S (S (NP (PRP I)) (VP (MD can) (VP (VB argue) (NP (DT both) (NNS sides))))) (, ,) (CC and) (S (NP (DT this)) (VP (VBZ needs) (NP (JJR more) (NN thought)))) (, ,) (CC but) (S (ADVP (RB overall)) (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (PRP I)) (VP (AUX 'm) (ADJP (JJ inclined) (S (VP (TO to) (VP (VB agree) (PP (IN with) (NP (PRP you)))))))))))) (. .)))
(S1 (SBAR (IN Because) (S (NP (NNP TreeWalker)) (VP (VBZ needs) (S (VP (TO to) (VP (AUX be) (ADJP (JJ aware) (PP (IN of) (NP (NP (NP (QP (RB only) (CD one)) (NN node)) (PP (IN at) (NP (DT a) (NN time)))) (: --) (NP (NN behavior))))))))))))
(S1 (S (S (NP (DT the) (NNP Traversal) (NN team)) (VP (VBD referred) (PP (TO to)) (PP (IN as) (`` ``) (NP (JJ pure) (JJ current-node) (NNS semantics)) ('' '')))) (: --) (S (NP (PRP it)) (VP (AUX is) (ADJP (RB perfectly) (JJ possible)) (S (VP (TO to) (VP (VB write) (NP (NP (DT a) (NN TreeWalker)) (SBAR (WHNP (WDT which)) (S (VP (VBZ navigates) (S (VP (VBG using) (NP (RB only) (DT the) (JJ public) (NN DOM) (NN APIs))))))))))))) (. .)))
(S1 (S (NP (PDT Such) (DT an) (NN implementation)) (VP (VP (MD would) (VP (AUX be) (ADJP (RB perfectly) (JJ happy)) (SBAR (WHADVP (WRB when)) (S (VP (VBN applied) (PP (TO to) (NP (DT any) (NN DOM)))))))) (, ,) (CC and) (VP (MD could) (VP (AUX be) (VP (VBN moved) (PP (IN from) (NP (CD one) (NN document))) (PP (TO to) (NP (NP (DT another)) (ADVP (RB quite) (RB happily)))))))) (. .)))
(S1 (S (-LRB- -LRB-) (PP (IN By) (NP (NN contrast))) (, ,) (NP (NP (NNP NodeIterator) (POS 's)) (JJ maintain-relative-position) (NNS semantics)) (ADVP (RB currently)) (VP (VB tie) (NP (PRP it)) (PP (TO to) (NP (DT a) (JJ specific) (NN DOM) (NN implementation))) (, ,) (SBAR (IN though) (S (SBAR (WHADVP (WRB when)) (S (NP (NNP DOM) (NN Level) (CD 3)) (VP (VBZ brings) (NP (PRP us)) (NP (JJ event-listener) (NN grouping) (NNS capabilities))))) (NP (PRP it)) (VP (MD should) (VP (AUX be) (ADJP (JJ possible) (S (VP (TO to) (VP (VB use))))))))))))
(S1 (S (NP (NP (NN mutation) (NNS events)) (SBAR (S (VP (TO to) (VP (VB write) (NP (DT a) (ADJP (RB simiilarly) (JJ interoperable)) (NNP NodeIterator.)) (-RRB- -RRB-) (PP (IN Of) (NP (NN course))) (S (VP (VBG setting) (NP (NN currentNode)) (PP (TO to) (NP (DT a) (JJ different) (NN document)))))))))) (VP (MD would) (VP (VB mean) (SBAR (S (NP (NN traversal)) (VP (MD would) (ADVP (RB never)) (VP (VP (VB encounter) (NP (DT the) (NN root))) (CC and) (VP (ADVP (RB hence)) (RB not) (VP (AUX be) (VP (VBN bounded) (PP (IN by) (NP (PRP it)))))))))))) (. .)))
(S1 (S (NP (PRP We)) (ADVP (RB already)) (VP (VB discuss) (NP (NP (DT a) (JJ similar) (NN case)) (SBAR (WHADVP (WRB when)) (S (NP (NN currentNode)) (VP (AUX is) (VP (VBN set) (PP (TO to) (NP (NP (DT a) (NN node)) (PP (IN outside) (NP (DT the) (NN root) (POS 's)))))))))))))
(S1 (S (INTJ (UH subtree)) (, ,) (ADVP (RB so)) (NP (PRP I)) (VP (AUX do) (RB n't) (VP (VB see) (NP (DT that)) (PP (IN as) (NP (DT a) (JJ major) (NN problem))))) (. .)))
(S1 (S (PP (IN ON) (NP (DT THE) (JJ OTHER) (NN HAND))) (, ,) (NP (DT a) (NNP TreeWalker)) (VP (MD may) (VP (VB want) (S (VP (TO to) (VP (VP (VB reach) (PP (IN past) (NP (DT the) (NNP DOM) (NNPS APIs)))) (CC and) (VP (VB access) (NP (DT the) (JJ underlying) (NN data) (NN representation)))))) (, ,) (PP (IN for) (NP (NN efficiency) (NNS reasons))))) (. .)))
(S1 (S (NP (PDT Such) (DT a) (NN TreeWalker)) (VP (MD would) (ADVP (RB _not_)) (VP (VB interoperate) (PP (IN with) (S (NP (JJ other) (NNS DOMs)) (VP (VBG ..)) (. .))) (SBAR (IN unless) (S (NP (PRP it)) (VP (VB include) (NP (NP (DT the) (NN code)) (PP (IN for) (NP (NP (DT both) (NNS modes)) (PP (IN of) (NP (NN operation))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (MD might) (VP (AUX be) (VP (VBN argued) (S (VP (TO to) (VP (AUX be) (NP (NP (DT an) (JJ unreasonable) (NN imposition)) (PP (IN on) (NP (NNS implementations)))))))))))))))))))) (. .)))
(S1 (S (CC And) (S (VP (TO to) (VP (VB discourage) (NP (JJ nonportable) (NN DOM) (NNS applications))))) (, ,) (NP (PRP I)) (VP (MD would) (VP (ADVP (RB much)) (VB prefer) (S (VP (TO to) (VP (VB avoid) (NP (NN wording) (NNS suchn)) (PP (IN as) (`` ``) (S (VP (MD may) (VP (VB throw) (NP (DT an) (NN exception)) (SBAR (IN if) (S (NP (DT this) (NN implementation)) (VP (AUX does) (RB not) (VP (VB support)))))))) ('' ''))))))) (. .)))
(S1 (S (S (CC And) (, ,) (S (VP (TO to) (VP (VB top) (NP (PRP it)) (PRT (RP off))))) (, ,) (NP (NNP TreeWalker)) (VP (MD should) (VP (AUX be) (NP (DT a) (ADJP (RB relatively) (JJ lightweight)) (NN object))))) (: ;) (S (S (VP (VBG creating) (NP (DT a) (JJ new) (CD one)) (PP (IN in) (NP (DT the) (JJ new) (NN document))))) (VP (MD should) (RB n't) (VP (AUX be) (ADJP (RB unreasonably) (JJ expensive))))) (. .)))
(S1 (S (RB So) (PP (IN on) (NP (NN balance))) (, ,) (NP (PRP I)) (VP (AUX 'm) (VP (VBN inclined) (S (VP (TO to) (VP (VB agree) (SBAR (IN that) (S (S (NP (PRP we)) (VP (MD should) (VP (VB add) (NP (NNP WRONG_DOCUMENT_ERR)) (PP (TO to) (NP (NNP TreeWalker) (# #) (CD setCurrentNode.)))))) (CC But) (S (NP (DT the) (NNP DOM) (NNS WG)) (VP (MD will) (VP (AUX have) (S (VP (TO to) (VP (VP (VB talk) (NP (DT this)) (PRT (RP over))) (CC and) (VP (VB decide) (SBAR (SBAR (IN whether) (S (VP (TO to) (VP (VB issue) (NP (DT an) (NN erratum)))))) (, ,) (CC and) (SBAR (IN if) (S (RB so) (VP (VBP decide) (SBAR (IN whether) (S (NP (DT the) (NN phrasing)) (VP (AUX is) (`` ``) (VP (VBN thrown) (SBAR (WHADVP (WRB when)) (S (NP (DT the) (VBN proposed) (NN currentNode)) (VP (VBZ belongs) (PP (TO to) (NP (NP (DT a) (JJ different) (NN document)) (PP (IN than) (NP (NP (S (NP (DT the) (NN root) (NN node)) (VP (AUX does))) ('' '') (CC or) (`` ``) (NN ....) (JJ different) (NN document)) (PP (IN than) (NP (NP (DT the) (NN one)) (SBAR (WHNP (WDT which)) (S (VP (VBD created) (NP (DT this) (NNP TreeWalker)))))))))))))))))))))))))))))))))))) (. .) ('' '')))
(S1 (S (S (NP (DT Some) (NNS folks)) (VP (MD may) (VP (VB want) (S (VP (TO to) (VP (VB implement) (NP (JJ stand-alone) (NNP TreeWalker) (NNS implementations)) (PP (IN for) (NP (NP (JJ special) (NNS purposes)) (PRN (-LRB- -LRB-) (ADVP (RB again)) (, ,) (VP (VBG using) (NP (DT the) (JJ public) (NNP DOM) (NNP interface))) (-RRB- -RRB-)))))))))) (, ,) (CC and) (S (NP (DT those)) (VP (MD may) (RB not) (VP (AUX be) (VP (VBN created) (ADVP (RB directly)) (PP (IN by) (NP (DT a) (NN document))) (, ,) (SBAR (IN so) (S (NP (DT the) (JJ latter) (NN wording)) (VP (MD might) (RB not) (VP (AUX be) (ADJP (JJ optimal)))))))))) (. .)))
(S1 (NP (NNP Joe) (NNP Kesselman) (NNP /) (NNP IBM) (NNP Research)))
(S1 (S (NP (PRP I)) (ADVP (RB just)) (VP (VBD realized) (SBAR (IN that) (S (NP (DT a) (JJ similar) (NN situation)) (VP (VBZ occurs) (SBAR (IN if) (S (NP (PRP you)) (VP (VBP call) (NP (NNP DocumentTraversal.createTreeWalker)) (PP (IN with) (NP (NP (DT a) (NN root) (NN node)) (PP (IN from) (NP (DT another) (NN document)))))))))))) (. .)))
(S1 (S (NP (DT This)) (VP (AUX is) (ADVP (RB also)) (ADJP (JJ tricky)) (SBAR (IN since) (S (NP (DT the) (NNP DocumentTraversal) (NNP interface) (CC and) (NNP Document) (NNP interface) (NNS dos)) (ADVP (RB n't) (RB neccessailiy)) (VP (AUX have) (S (VP (TO to) (VP (AUX be) (VP (VBN implemented) (PP (IN from) (NP (DT the) (JJ same) (NN object))))))))))) (. .)))
(S1 (NP (NNP /) (NNP Jonas) (NNP Sicking)))
(S1 (FRAG (PP (IN in) (NP (DT the) (JJ treeWalker) (NNP interface))) (. .)))
(S1 (S (SBAR (WHADVP (WRB When)) (S (VP (VBG setting) (NP (DT the) (NN currentNode))))) (VP (MD should) (RB n't) (NP (DT a) (NNP WRONG_DOCUMENT_ERR)) (VP (AUX be) (VP (VBN raised) (SBAR (IN if) (S (NP (NN currentNode)) (VP (AUX is) (VP (VBN set) (PP (TO to) (NP (NP (DT a) (NN node)) (PP (IN in) (NP (DT another) (NN document)))))))))))) (. .)))
(S1 (NP (NN behavior)))
(S1 (NP (NN use)))
(S1 (NP (NN root) (POS 's)))
(S1 (INTJ (JJ expensive) (. .)))
