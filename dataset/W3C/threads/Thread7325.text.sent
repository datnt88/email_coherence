I don't think it has yet been decided whether our charter will be modified to bring e-mail access within scope, nor do I know what kind of interest there is in this functionality. 
So, I think I'll start out with an informal survey/straw poll: If DAV tools supported both HTTP and e-mail access, would you use one method or the other, or perhaps both? 
Do you believe the asynchronous nature of e-mail access would pose significant problems for large projects? 
If you do think e-mail access would be useful, would you describe some scenarios under which you would be likely to use it? 
How would you *not* choose to use e-mail for DAV functionality? 
What kinds of advantages and/or limitations of e-mail access would be deciding factor in your decision to use or not use this functionality? 
Do you see projects as being e-mail only, HTTP only, or using some combination of the two? 
Gregory Woodhouse gjw@wnetc.com 
/ http://www.wnetc.com/home.html 
If you're going to reinvent the wheel, at least try to come up with a better one. 
I don't see any reason to support both forms of access (Why have two ways of doing something when there is no advantage of the second method over the first) From: Gregory J. Woodhouse[SMTP:gjw@wnetc.com] Subject: E-mail access I don't think it has yet been decided whether our charter will be modified to bring e-mail access within scope, nor do I know what kind of interest there is in this functionality. 
So, I think I'll start out with an informal survey/straw poll: If DAV tools supported both HTTP and e-mail access, would you use one method or the other, or perhaps both? 
Do you believe the asynchronous nature of e-mail access would pose significant problems for large projects? 
If you do think e-mail access would be useful, would you describe some scenarios under which you would be likely to use it? 
How would you *not* choose to use e-mail for DAV functionality? 
What kinds of advantages and/or limitations of e-mail access would be deciding factor in your decision to use or not use this functionality? 
Do you see projects as being e-mail only, HTTP only, or using some combination of the two? 
Gregory Woodhouse gjw@wnetc.com 
/ http://www.wnetc.com/home.html 
If you're going to reinvent the wheel, at least try to come up with a better one. 
E-mail actually has some advantages over HTTP in some circumstances: 1) Email penetrates firewalls, virtually everywhere, allowing kinds and types of collaboration that would be difficult without it. 
2) Email is a "batch mode" type of interaction much better suited to laptops and situations without permanent IP connectivity. 
It is also better suited to certain types of automated updates done by tools, which then don't rely on the server being up to do (certain parts of) their work. 
The interesting question is not whether there are advantages, but how big they are, and how difficult it is to support both types of interactions. 
It is also possible that the e-mail interface could be defined in terms of an email= HTTP gateway scenario, such that mail messages could then become HTTP operations. 
Such a transformation could be defined in terms of a MIME type, and be an From:"Alan Robertson" alanr@bell-labs.com 
Mime-Version:1.0 Content-Type: application/webdav-request Content-Length:2794 WebDav-Version:1.0 HTTP-Operation:PUT Return-Mail:alanr@bell-labs.com Return-Subject:Desired Subject Operation-ID:12345 {or suitable suitable string} HTTP-URL:http://webdav.w3.org/gawdawfulurl... HTTP-Operand:(some method of indicating which attachment to use as an operand). 
With such a request, you also need a response type: Mime-Version:1.0 From:"WEBDAV server" webdav-server@mail.w3.org Subject:Desired Subject Content-Type:application/webdav-response Content-Length:356 WebDav-Version:1.0 HTTP-Operation:PUT Operation-ID:12345 HTTP-URL:http://webdav.w3.org/gawdawfulurl... HTTP-Operand:(some method of indicating which attachment to use as an operand). 
HTTP-Result:200 Such a gateway could be defined easily strictly in terms of such HTTP semantics as we are defining elsewhere. 
Again, the issue for the spec is: Is it worthwhile? 
Will anyone implement it? 
Would anyone use it? 
What is it "just the right approach" for? 
If it's worthwhile, then the questions about how it might be used come up. 
Things like: What kind of management entity is going to be looking at these results? 
What do they need to do their job?, etc. -- Alan Robertson alanr@bell-labs.com 
[ stuff omitted...] I erred in saying "strictly in terms of HTTP semantics". 
There is one significant difference between the email and HTTP worlds that matters here, and that is authentication. 
There are a number of differences between the two environments that would seem to imply there could be more difficulty than my previous note had indicated. 
-- Alan Robertson alanr@bell-labs.com 
first) The advantage of allowing an email form of access is for people trying to work in disconnected situations. 
If I can check out a bunch of documents to my laptop and work on them at 30k feet, this is nice. 
It would be even nicer if I could queue up the edited documents for check-in by way of my mailer when I next connect. 
So, there are times when an email version of DAV would have advantages. 
Having said that, I think those situations are in the minority. 
Further, nobody has yet said that they are going to implement DAV in email. 
So, I think the WG's approach of trying not to preclude DAV in email, but not working on that particular problem right now, is just about right. 
Ron Daniel Jr. voice:+1 505 665 0597 Los Alamos National Lab http://www.acl.lanl.gov/~rdaniel 
Los Alamos, NM, USA, 87545 I read your note about E-mail and HTTP, and for a moment I couldn't tell if I was in WEBDAV, IPP (Internet Print Protocol) I think the issues are the same. 
For many 'remote operations' it makes sense to have an 'operation' media type which is POSTed to the resource that performs that operation, whether the operation is located by "http" or "mailto". 
However, this issue was debated at great length in early WEBDAV history, and there was no interest in taking it on. 
Distributed authoring is more operation oriented, too. 
If you want to encapsulate HTTP POSTs in an email message, send a message with message/http content-type. 
(Does that work? 
I suppose we need to know). 
It seems that way to me too. 
We should not gratuitously preclude email access (I suspect we will be able to use it eventually at TCE), but I don't think we need to devote a lot of attention to it right now (except enough so that we don't preclude email access). 
Mark Leighton Fisher Thomson Consumer Electronics fisherm@indy.tce.com 
Indianapolis, IN "ViaCrypt? 
Vhy not!" 
