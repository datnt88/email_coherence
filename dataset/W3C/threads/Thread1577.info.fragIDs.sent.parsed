(S1 (S (NP (NP (NNP DeltaV) (NNS methods)) (SBAR (WHNP (WDT which)) (S (VP (VBP take) (NP (NN request) (NNS bodies)))))) (VP (AUX are) (ADJP (JJ extensible)) (, ,) (SBAR (IN in) (IN that) (S (NP (NP (DT the) (NNS DTDs)) (PP (IN for) (NP (NP (DT the) (JJ top-level) (NN element)) (PP (IN in) (NP (DT the) (NN body)))))) (VP (AUX are) (DT all) (VP (VBN declared) (S (VP (TO to) (VP (VB allow) (NP (DT ANY) (NNS sub-elements)))))))))) (. .)))
(S1 (S (ADVP (RB However)) (, ,) (NP (EX there)) (VP (AUX are) (NP (NP (CD three) (NNS methods)) (SBAR (WHNP (WDT which)) (S (VP (AUX are) (RB not) (VP (VBN defined) (S (VP (TO to) (VP (VB take) (NP (NP (NN request) (NNS bodies)) (: :) (NP (NN MKACTIVITY) (, ,) (NN MKWORKSPACE) (, ,) (CC and) (NN UNCHECKOUT)))))))))))) (. .)))
(S1 (SQ (MD Should) (NP (DT the) (NN protocol)) (ADVP (RB explicitly)) (VP (VB declare) (SBAR (IN that) (S (NP (PRP they)) (VP (MD can) (VP (AUX be) (VP (VBN extended) (PP (IN by) (S (VP (VBG defining) (NP (NN request) (NNS bodies)) (PP (IN for) (NP (PRP them)))))))))))) (. ?)))
(S1 (NP (NNP John)))
(S1 (FRAG (PP (IN From)) (: :) (`` ``) (NP (NNP Vasta) (, ,) (NNP John) ('' '') (NN jvasta)) (X (SYM @) (NP (NN rational.com)))))
(S1 (S (NP (NP (NNP DeltaV) (NNS methods)) (SBAR (WHNP (WDT which)) (S (VP (VBP take) (NP (NN request) (NNS bodies)))))) (VP (AUX are) (ADJP (JJ extensible)) (, ,) (SBAR (IN in) (IN that) (S (NP (NP (DT the) (NNS DTDs)) (PP (IN for) (NP (NP (DT the) (JJ top-level) (NN element)) (PP (IN in) (NP (DT the) (NN body)))))) (VP (AUX are) (DT all) (VP (VBN declared) (S (VP (TO to) (VP (VB allow) (NP (DT ANY) (NNS sub-elements)))))))))) (. .)))
(S1 (S (ADVP (RB However)) (, ,) (NP (EX there)) (VP (AUX are) (NP (NP (CD three) (NNS methods)) (SBAR (WHNP (WDT which)) (S (VP (AUX are) (RB not) (VP (VBN defined) (S (VP (TO to) (VP (VB take) (NP (NP (NN request) (NNS bodies)) (: :) (NP (NN MKACTIVITY) (, ,) (NN MKWORKSPACE) (, ,) (CC and) (NN UNCHECKOUT)))))))))))) (. .)))
(S1 (SQ (MD Should) (NP (DT the) (NN protocol)) (ADVP (RB explicitly)) (VP (VB declare) (SBAR (IN that) (S (NP (PRP they)) (VP (MD can) (VP (AUX be) (VP (VBN extended) (PP (IN by) (S (VP (VBG defining) (NP (NN request) (NNS bodies)) (PP (IN for) (NP (PRP them)))))))))))) (. ?)))
(S1 (S (NP (NNS Sounds)) (VP (JJ reasonable) (PP (TO to) (NP (PRP me)))) (. .)))
(S1 (NP (DT Any) (NNS objections) (. ?)))
(S1 (NP (NNP Cheers) (, ,) (NNP Geoff)))
(S1 (S (S (VP (VBZ Sounds) (ADJP (JJ gratuitous) (PP (TO to) (NP (PRP me)))))) (, ,) (CC but) (S (NP (PRP I)) (VP (AUX do) (RB n't) (VP (VB object)))) (. .)))
(S1 (FRAG (NP (VBZ Regards)) (, ,) (NP (NNP Tim) (`` ``) (NNP Geoffrey) (NNP M.) (NNP Clemm) ('' '') (NN geoffrey.clemm)) (X (SYM @) (S (NP (NP (NN rational.com)) (PP (IN on) (NP (QP (CD 2001-02-02) (CD 03:59:24))))) (VP (AUX AM) (ADVP (UH Please)) (VP (VB respond) (PP (TO to) (NP (`` ``) (NP (NNP Geoffrey) (NNP M.) (NNP Clemm)) ('' '') (SBAR (S (NP (NN geoffrey.clemm)) (VP (SYM @) (NP (NN rational.com)))))))))))))
(S1 (FRAG (NP (NP (NN Subject)) (: :) (NP (NNP Re)) (: :) (NP (NP (NN Extensibility)) (PP (IN for) (NP (DT all) (NNP DeltaV) (NNS methods)))) (X (IN From))) (: :) (`` ``) (NP (NNP Vasta) (, ,) (NNP John) ('' '') (NN jvasta)) (X (SYM @)) (NP (NN rational.com))))
(S1 (S (NP (NP (NNP DeltaV) (NNS methods)) (SBAR (WHNP (WDT which)) (S (VP (VBP take) (NP (NN request) (NNS bodies)))))) (VP (AUX are) (ADJP (JJ extensible)) (, ,) (SBAR (IN in) (IN that) (S (NP (NP (DT the) (NNS DTDs)) (PP (IN for) (NP (NP (DT the) (JJ top-level) (NN element)) (PP (IN in) (NP (DT the) (NN body)))))) (VP (AUX are) (DT all) (VP (VBN declared) (S (VP (TO to) (VP (VB allow) (NP (DT ANY) (NNS sub-elements)))))))))) (. .)))
(S1 (S (ADVP (RB However)) (, ,) (NP (EX there)) (VP (AUX are) (NP (NP (CD three) (NNS methods)) (SBAR (WHNP (WDT which)) (S (VP (AUX are) (RB not) (VP (VBN defined) (S (VP (TO to) (VP (VB take) (NP (NP (NN request) (NNS bodies)) (: :) (NP (NN MKACTIVITY) (, ,) (NN MKWORKSPACE) (, ,) (CC and) (NN UNCHECKOUT)))))))))))) (. .)))
(S1 (SQ (MD Should) (NP (DT the) (NN protocol)) (ADVP (RB explicitly)) (VP (VB declare) (SBAR (IN that) (S (NP (PRP they)) (VP (MD can) (VP (AUX be) (VP (VBN extended) (PP (IN by) (S (VP (VBG defining) (NP (NN request) (NNS bodies)) (PP (IN for) (NP (PRP them)))))))))))) (. ?)))
(S1 (S (NP (NNS Sounds)) (VP (JJ reasonable) (PP (TO to) (NP (PRP me)))) (. .)))
(S1 (NP (DT Any) (NNS objections) (. ?)))
(S1 (NP (NNP Cheers) (, ,) (NNP Geoff)))
