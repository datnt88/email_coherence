During today's editorial-group teleconference, we discussed whether the HTTP/1.1 specification should or should not specify precedences between If-* headers other than what is already specified in the draft-ietf-http-v11-spec-rev-02 document. 
Since this would represent a substantive change to the specification, we agreed that such a change requires specific justification. 
That is, we would like to see a concrete and plausible scenario described in which the lack of a precedence between (for example) If-Match and If-None-Match results in a failure of interoperability. 
We agreed that we would reopen this issue if someone provides such a scenario. 
In the absence of such a scenario, we agreed to make the specification more explicit about the lack of a precedence. 
The changes below, therefore, are editorial clarifications, and are not substantive changes to the specification. 
(1) To the end of section 14.24 (or 14.25, depending on which alphabetization you have), If-Match, add: This specification does not define a precedence between the If-Match header field and the If-None-Match or If-Modified-Since header fields. 
(2) To the end of section 14.25 (or 14.24, depending on which alphabetization you have), If-Modified-Since, add: This specification does not define a precedence between the If-Modified-Since header field and the If-Match or If-Unmodified-Since header fields. 
(3) To the end of section 14.26 (If-None-Match), add: This specification does not define a precedence between the If-None-Match header field and the If-Match or If-Unmodified-Since header fields. 
(4) To the end of section 14.28 (If-Unmodified), add: This specification does not define a precedence between the If-Unmodified-Since header field and the If-None-Match or If-Modified-Since header fields. 
-Jeff Excellent decision! 
John Franks john@math.nwu.edu 
It is impossible to tell right now whether failing to address the issue will leave several contradictions in the next draft, or if those contradictions will be fixed by other changes. 
Either way, there is only one order of precedence (and thus implementation) which will result in a conservative and efficient test of conditional requirements given the presence of both last-modified and etag. 
Spending effort to not specify that in the draft is a bit silly, but won't change the correct implemenations one iota. 
Specifying the interaction between mutually contradictory conditionals (If-Match/If-None-Match, If-Modified-Since/If-Unmodified-Since) does not describe a plausible scenario, but it is just as easy to say that the result of combining such conditionals is explicitly undefined, rather than saying that there is no precedence (which says nothing). 
Specifying the interaction between etag-based conditionals and last-modified-based conditionals is plausible (and indeed specified elsewhere in the draft, just not where the reader can easily find it) since such combinations will be the norm when using a proxy. 
....Roy 
