Is the term "subgraph" (used in requirement 3.4) formally defined anywhere? 
I'm trying to find a way to get around my objections to this requirement; perhaps making it clear that the requirement is about result formatting and not underlying structure would help: "It must be possible for query results to be formatted as a subgraph of the original queried graph." 
This changes "returned" to "formatted", uses "a subgraph" instead of "the subgraph", and drops "that the query matches". 
The original way the requirement was worded it seemed that the query processor would need to somehow figure out all the pieces of the original graph which had any relevence to the "matching" process, and that whole process is only meaningful for completely trivial query languages. 
I feel very strongly that we should keep deciding on the answers separate from the result format. 
(All that said, I'm still not comfortable supporting even my reworded requirement without a real definition for "subgraph".) Rob, When I have been using the term I mean a subset of the edges of the RDF graph. 
As RDF Graphs are restricted in what they can be (not the complete defintion in a graph theory book), the subgraph = subset of edges is similarly restricted. 
I personally don't imply "connected" in the term "subgraph" but I know this does arise in discussions elsewhere. 
The other thing is that what matters is not "being a subgraph of" but being "isomorphic to a subgraph of" because of bNodes but the language gets a little heavy to say that everytime. 
Googling ... getting sidetracked ... DMP - Discrete Mathematics Project === (fixing the typo) Subgraph A subgraph of a graph is itself a graph in which all of the edges and vertices are contained within the original graph. 
As RDF does not allow nodes (vertices) without edges (triples, statements), this seems to say that the usage is the same here. 
=== """A connected subset of a graph.""" 
And then goes on to talk about graphs for sensemaking. 
More inline. 
Andy Is this touching on the fact that it is only useful to worry isomorphism and not equality? 
It seems to me that "structure" is important so that subgraphs can be passed on to other systems. 
Some of this goes back to: And also descirptions like t"graphs with holes" meaning named variables for slots in the triples. 
Talking about "a subgraph" is better. 
I won't want to imply the necessity to find "the subgraph" for some virtual triples cases, like when that's infinite. 
In a query on an RDF graph (just the RDF graph), there is one particular subgraph of interest - the one that the query triple patterns match. 
Its the same as (isomorphic to) the merge of each of the matching subgraphs. 
Moving to virtual triples is not trivial and there are choices, based on, amongst other things, whether the predicates/classes in the query are returned or the ones on the graph, and this is only at the RDFS level. 
The intention is returning the information the query needed to match - we have to find a away to express that but maybe not in the requiremtn and leave it for further work in the WG. 
And what's the difference between "quried graph" and "original quried graph?" 
If no differece, why we use the latter in 3.4? 
Is the term "subgraph" (used in requirement 3.4) formally defined anywhere? 
I'm trying to find a way to get around my objections to this requirement; perhaps making it clear that the requirement is about result formatting and not underlying structure would help: "It must be possible for query results to be formatted as a subgraph of the original queried graph." 
This changes "returned" to "formatted", uses "a subgraph" instead of "the subgraph", and drops "that the query matches". 
The original way the requirement was worded it seemed that the query processor would need to somehow figure out all the pieces of the original graph which had any relevence to the "matching" process, and that whole process is only meaningful for completely trivial query languages. 
I feel very strongly that we should keep deciding on the answers separate from the result format. 
(All that said, I'm still not comfortable supporting even my reworded requirement without a real definition for "subgraph".) Yes. 
Here's a summary of the RDF terminology from and URIrefs, literals and blank nodes are mutually disjoint; in other words, whatever blank nodes are, they aren't urirefs or literals. 
A triple is a 3-tuple of the form (uriref or blank node) + uriref + (uriref or blank node or literal) An RDF graph is a set of triples. 
(It is not a graph in the sense used in graph theory. 
I once checked it out and I think it is technically a labelled multi-pseudo-digraph with a unique node labelling. 
Or something close to that, anyway. 
Whatever.) (So why did we call them 'graphs'? 
Because they look like that when you draw a picture, OK ?? Why do you ask so many questions??? ) Subgraph means subset of a set of triples. 
(The terms 'edge', 'label' and 'vertex' are not used. 
'Path' could be defined but doesn't seem to be a useful notion.) 
An instance of a graph is any graph obtained from it by substituting urirefs, blank nodes or literals for blank nodes in a systematic way. 
If the substitution replaces blank nodes by blank nodes in a 1:1 fashion, so the substitution is invertible and the instance is also a generalization, then the graph and the instance are equivalent, i.e. isomorphic, cf. 
Equivalent graphs are often treated as the same graph (using what in mathematics is called a 'familiar abuse of terminology'.) Generalization is the inverse of instance. 
Merging is taking a union of two graphs after replacing one of them by an equivalent graph so as to avoid any accidental collisions of blank nodes. 
There is a result about basic RDF inference: A graph G implies another graph H just when H is a generalization of a subgraph of G. (Strictly speaking, RDF inference also requires that literals typed with rdf:XMLLiteral are appropriately recognized and that urirefs used as properties are of the right rdf:type: see details.) Hope this is some help. 
Pat IHMC(850)434 8903 or (650)494 3973 home 40 South Alcaniz St.(850)202 4416 office FL 32501(850)291 0667 cell phayes@ihmc.us 
http://www.ihmc.us/users/phayes 
