Following the revision of the Annotea protocol, I modified the implementation of the annotation update protocol to use PUT rather than POST. 
The change is commited to CVS. 
I haven'y yet removed the code to use POST. 
I can leave it there and make its use optional if the other Annotea client developers think it's good to keep both protocols for any given issue. 
-jose 
Hi, I prefer to have the HTTP semantics less ambiguous. 
If a PUT always means updating an existing thing, and a POST always means creating a new one, then it is possible to create simpler servers - if they have to check the HTTP protocol used and the message on the wire it introduces complexity and I don't see any value in it. 
Backwards compatibility with systems that don't do PUT seems a backwards step given that Annotea is a new system anyway, and I would prefer to remove such complications. 
just my 2 cents Chaals (By the way I hope to have ruby command-line annotools that do replies next week. 
On the one hand they should only take an hour to develop from teh existing annotools at the outside. 
On the other hand I have a lot of things to do that only take an hour...) 
Post: 21 Mitchell street, FOOTSCRAY Vic 3011, Australia or W3C, 2004 Route des Lucioles, 06902 Sophia Antipolis Cedex, France 
Charles, Have you read the new Annotea draft protocol [1]? 
This is not clear from your message. 
It actually documents what you're proposing and Appendix B [2] explains why we were using POST. 
In a previous message we asked developers for feedback wrt making PUT the prefered practice and dropping altogether POST for updating annotations. 
-jose 
[1] http://www.w3.org/2002/12/AnnoteaProtocol-20021219 [2] http://www.w3.org/2002/12/AnnoteaProtocol-20021219#PostUpdate 
Yes. 
And I am suggesting, for just the reasons documented, that it is a good idea to drop the practice of using POST for updates. 
chaals 
Post: 21 Mitchell street, FOOTSCRAY Vic 3011, Australia or W3C, 2004 Route des Lucioles, 06902 Sophia Antipolis Cedex, France 
