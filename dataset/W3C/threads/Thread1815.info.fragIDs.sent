No, the DAV:workspace is not affected by the request-URL that you use to identify the URL (that would be bad for a variety of reasons). 
The only way you can have two different URLs for the same resource is if you have two bindings to either the resource or to a parent of the resource. 
In this case, some resource has multiple parents, and which parent is picked for inheritance of the DAV:workspace property is up to the server (but it has to pick one, and return it consistently). 
So the answer was: (d) None of the above (:-). 
Cheers, Geoff Hi, a very basic question... 
The workspace feature introduces a live (protected) resource property which seems to depend on the URI of the resource, not the resource itself: " If the request-URL did not identify a workspace, the DAV:workspace of the destination MUST have been updated to have the same value as the DAV:workspace of the parent collection of the destination." 
To me this seems to indicate that it's not really a property of the resource itself, but that it only depends on how you access the resurce. 
How does this property affect bindings to a resource in a workspace? 
a) there may be no additional bindings b) there may be additional bindings, but they must all reside in the same workspace's namespace c) there may be additional bindings, and the reported DAV:workspace property just depends on the URI used in the request (I currently lean towards c) Julian 
RE: workspace propertyNot convinced yet :-) The idea of a resource property which changes it's value upon MOVE isn't really appealing -- the properties of a resource should be independant of the access path. 
Up to now, I was expecting a MOVE to have the same properties as a BIND followed by a DELETE on the original URI -- this would be lost with your interpretation. 
Question: what is the use case for MOVEs between workspaces? 
Wouldn't it be much simpler to just forbid that? 
[mailto:ietf-dav-versioning-request@w3.org]On 
Behalf Of Clemm, Geoff No, the DAV:workspace is not affected by the request-URL that you use to identify the URL (that would be bad for a variety of reasons). 
The only way you can have two different URLs for the same resource is if you have two bindings to either the resource or to a parent of the resource. 
In this case, some resource has multiple parents, and which parent is picked for inheritance of the DAV:workspace property is up to the server (but it has to pick one, and return it consistently). 
So the answer was: (d) None of the above (:-). 
Cheers, Geoff -----Original Message----- Hi, a very basic question... 
The workspace feature introduces a live (protected) resource property which seems to depend on the URI of the resource, not the resource itself: " If the request-URL did not identify a workspace, the DAV:workspace of the destination MUST have been updated to have the same value as the DAV:workspace of the parent collection of the destination." 
To me this seems to indicate that it's not really a property of the resource itself, but that it only depends on how you access the resurce. 
How does this property affect bindings to a resource in a workspace? 
a) there may be no additional bindings b) there may be additional bindings, but they must all reside in the same workspace's namespace c) there may be additional bindings, and the reported DAV:workspace property just depends on the URI used in the request (I currently lean towards c) Julian 
Just forbidding the MOVE is certainly reasonable behavior from a server (that's what our server will do :-). 
There is precedent for having a property that is modified by a DELETE (e.g. the "DAV:parent-set" of a resource that supports multiple bindings), but one certainly would like to minimize the number of properties that act this way. 
Before banning a cross-workspace move in the protocol though, I'd probably prefer to wait a bit to make sure that this is in fact something that does not turn out to be generally useful/supported. 
Cheers, Geoff Not convinced yet :-) The idea of a resource property which changes it's value upon MOVE isn't really appealing -- the properties of a resource should be independant of the access path. 
Up to now, I was expecting a MOVE to have the same properties as a BIND followed by a DELETE on the original URI -- this would be lost with your interpretation. 
Question: what is the use case for MOVEs between workspaces? 
Wouldn't it be much simpler to just forbid that? 
-----Original Message----- [mailto:ietf-dav-versioning-request@w3.org]On 
Behalf Of Clemm, Geoff No, the DAV:workspace is not affected by the request-URL that you use to identify the URL (that would be bad for a variety of reasons). 
The only way you can have two different URLs for the same resource is if you have two bindings to either the resource or to a parent of the resource. 
In this case, some resource has multiple parents, and which parent is picked for inheritance of the DAV:workspace property is up to the server (but it has to pick one, and return it consistently). 
So the answer was: (d) None of the above (:-). 
Cheers, Geoff -----Original Message----- Hi, a very basic question... 
The workspace feature introduces a live (protected) resource property which seems to depend on the URI of the resource, not the resource itself: " If the request-URL did not identify a workspace, the DAV:workspace of the destination MUST have been updated to have the same value as the DAV:workspace of the parent collection of the destination." 
To me this seems to indicate that it's not really a property of the resource itself, but that it only depends on how you access the resurce. 
How does this property affect bindings to a resource in a workspace? 
a) there may be no additional bindings b) there may be additional bindings, but they must all reside in the same workspace's namespace c) there may be additional bindings, and the reported DAV:workspace property just depends on the URI used in the request (I currently lean towards c) Julian 
RE: workspace propertyGeoff, thanks for the feedback. 
BTW: the last BIND draft doesn't define DAV:parent-set. 
Maybe this is something that was removed for the very same reason? 
Julian [mailto:ietf-dav-versioning-request@w3.org]On 
Behalf Of Clemm, Geoff Just forbidding the MOVE is certainly reasonable behavior from a server (that's what our server will do :-). 
There is precedent for having a property that is modified by a DELETE (e.g. the "DAV:parent-set" of a resource that supports multiple bindings), but one certainly would like to minimize the number of properties that act this way. 
Before banning a cross-workspace move in the protocol though, I'd probably prefer to wait a bit to make sure that this is in fact something that does not turn out to be generally useful/supported. 
Cheers, Geoff -----Original Message----- Not convinced yet :-) The idea of a resource property which changes it's value upon MOVE isn't really appealing -- the properties of a resource should be independant of the access path. 
Up to now, I was expecting a MOVE to have the same properties as a BIND followed by a DELETE on the original URI -- this would be lost with your interpretation. 
Question: what is the use case for MOVEs between workspaces? 
Wouldn't it be much simpler to just forbid that? 
-----Original Message----- [mailto:ietf-dav-versioning-request@w3.org]On 
Behalf Of Clemm, Geoff No, the DAV:workspace is not affected by the request-URL that you use to identify the URL (that would be bad for a variety of reasons). 
The only way you can have two different URLs for the same resource is if you have two bindings to either the resource or to a parent of the resource. 
In this case, some resource has multiple parents, and which parent is picked for inheritance of the DAV:workspace property is up to the server (but it has to pick one, and return it consistently). 
So the answer was: (d) None of the above (:-). 
Cheers, Geoff -----Original Message----- Hi, a very basic question... 
The workspace feature introduces a live (protected) resource property which seems to depend on the URI of the resource, not the resource itself: " If the request-URL did not identify a workspace, the DAV:workspace of the destination MUST have been updated to have the same value as the DAV:workspace of the parent collection of the destination." 
To me this seems to indicate that it's not really a property of the resource itself, but that it only depends on how you access the resurce. 
How does this property affect bindings to a resource in a workspace? 
a) there may be no additional bindings b) there may be additional bindings, but they must all reside in the same workspace's namespace c) there may be additional bindings, and the reported DAV:workspace property just depends on the URI used in the request (I currently lean towards c) Julian 
