This small section of our site may be a decent rudimentary example. 
-Jamie Fox ----- Original Message ----- -Please respond to Amy Goldman at PIAT: piat@temple.edu 
Dear Colleague: In our quest to enhance web accessibility to ALL persons with disabilities, we are looking for exemplars of websites that are user-friendly for individuals with cognitive disabilities. 
This would include persons who have difficulty accessing text but who do not have screen readers, including those who can benefit from pictorially-presented information. 
Your recommendations and assistance is appreciated! 
Amy Goldman Pennsylvania's Initiative on Assistive Technology reply to: piat@temple.edu 
I don't really see how this site would help someone who has poor literacy. 
The thing that would help someone who is literate but has difficulty in learning (e.g. elderly) is not the graphics but the use of standard links in the main content section. 
The other links follow fairly standard idioms, although it would stil be necessary to teach a user about text as image side bars and tabbed dialogues. 
(I think the tabs would be particular difficult for someone to find until they had been taught the convention.) For someone trying to decipher the link cues## for this site, I think that Serving America... is simply confusing; it seems to establish a convention, but is really just part of the title bar. 
I also find the original question interesting, as the normal excuse on this list for heavy use of scripts and images is that the blind can afford IE aware screen readers. 
I'd tend to say that the right approach is to use a screen reader for people with poor literacy. 
This, by forcing static pages to be treated as dynamic is simply a waste of web resources. 
The animated icons don't aid navigation, as you have already reached the page. 
They don't provide an alternative to the text, and in some cases (e.g. washing machine) are almost visual puns, requiring the user to be reasonably good at understanding metaphors. 
The icons don't cover everything that is in the text. 
E.g. you have inspection but not sizing. 
I can't decipher the "upsetting mill" even with reference to the text. 
I assume the flame is the annealing, not the drying. 
It took me a long time to work out that the halo was a coin. 
Annealing is rather a technical term that needs explaining or replacing with a summary of its effect. 
In the blanking image, the coins seem to be being formed from the punches, not the sheet. 
The counter icon is animated too fast; I suspect that someone who needed it as their prime input might not follow what is happening. 
Generally, I'd consider that the images here are used purely to break up the text and make it look less serious. 
That's the same way as most commercial sites. 
I think they may even confuse understanding. 
Pallet is not a word that I knew as a small child even though I had a good reading age - generally the reading age of the text seems incompatible with someone with poor language skills. 
The page has a serious structural error, in that a script precedes the DOCTYPE. 
You've got a class called SectionHeader. 
What is this but Hn ! 
To add insult to injury, you then proceed to use presentational markup, rather than using the class to access the style sheet, which is strange given that you rely entirely on the style sheet for the background colour (or assume the IE default colour scheme). 
You have a smaller than average font set with an absolute size (10pt). 
I believe that lower case is easier for learning readers to read, but your text as graphics is all upper case. 
BR doesn't mean what you (and probably your browser) think it means. 
/BR does not exist at all - an obvious typo, but it confuses some versions of Lynx. 
The page has the same title as the home page. 
## In my view, one of the problems with heavily designed pages is that you need a lot of experience of the web (or a lot of waving of the mouse around) just to work out how to identify which features of a page are links. 
In my view, icons will only help here if they are taken from a very small set of standard icons, not invented or customised by every designer (and possibly for each of their clients). 
My guess is that the developer is using Fusebox, a methodology for applying object-oriented techniques to Cold Fusion sites (sort of). 
It allows parts of the site to be developed as modules and just plugged in here or there. 
Not bad for code reuse either. 
I think that there are often benefits to building "static" pages 
dynamically. 
I'm not sure that I agree that it is a "waste" of web resources, though it can be overkill. 
Charles F. Munat Seattle, Washington 
The problem with it is that forces an end to end load of the page, rather than allowing the page to be accessed from a nearby caching proxy. 
David Woolley: "The problem with it [dynamic pages] is that forces an end to end load of the page, rather than allowing the page to be accessed from a nearby caching proxy." 
Yes, that's true and one reason why I rejected the Fusebox method as it's currently applied. 
The trick is to avoid the ?. On my sites I substituted 
static pages which called the dynamic scripts, so no ? is needed except when the page is truly dynamic. 
With the right HTTP headers, the page can be cached. 
Another method that works is to have filtering on the server so you can call .com/coins/ 
Instead of .com/?action=coins Again, with the right headers, pages can be cached. 
Of course, you still have the overhead of server processing, but with proper optimization, the cost is minimal. 
Another problem with the ? is that many search engines do not index those pages, presuming that they are scripts... Charles F. Munat Seattle, Washington 
It's a pity that few people are aware of PATH_INFO, which allows, servers to construct virtual directories behind CGI applications. 
Orignally GETs to ? 
URLs were supposed to be cacheable, but abuse of this means that HTTP 1.1 requires a positive indication of cachability and some proxies don't even bother looking at the headers on request for them. 
This particular page also tried to dump two useless cookies on me, which is another thing that needs careful handling for cachability. 
Good point. 
Most of this stuff has been terribly abused - partly out of laziness, but also partly because no one anticipated how big the Web would be and the sorts of commercial uses it would be put to. 
The two cookies were probably CFID and CFTOKEN, which are used for session management. 
I have no idea why Cold Fusion needs two when everyone else seems to get by with one. 
Me, I'm moving my sites away from Cold Fusion and into Java servlets, mostly because CF is proprietary and requires the use of a CF server. 
My sites are designed so that the owner can maintain the site (add/edit/delete text and images, rearrange page hierarchy, add/edit/delete pages, etc.) without knowing any code. 
This has the advantage of allowing me to lock in accessibility features and maintain standards-compliant code. 
Yes, they can still make a mess of the site, but not as badly as otherwise, and they can update the pages without wasting my time. 
It's easier to do this if the site is stored in a database and the pages are generated dynamically (which means I can regenerate the site metadata at will). 
So if the owner moves a page in the hierarchy, all links and the site map are automatically updated to reflect this. 
I could write the software to write pages to the server (so they would be static), but these sites are intended to be hosted on rented space. 
While I can easily get use of a CF server and an Access database (or SQL Server), getting hosting companies to let me write to the server is almost impossible. 
So the database route it is, for now... Charles F. Munat Seattle, Washington Behalf Of David Woolley 
It's a pity that few people are aware of PATH_INFO, which allows, servers to construct virtual directories behind CGI applications. 
Orignally GETs to ? 
URLs were supposed to be cacheable, but abuse of this means that HTTP 1.1 requires a positive indication of cachability and some proxies don't even bother looking at the headers on request for them. 
This particular page also tried to dump two useless cookies on me, which is another thing that needs careful handling for cachability. 
