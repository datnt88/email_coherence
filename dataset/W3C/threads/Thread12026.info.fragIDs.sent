The current checkpoints: 2.1.1 Use operating system and accessibility standards and conventions for the platform(s) the tool runs on. 
[P1] 2.1.2 Ensure that user agent functionality offered by the tool (e.g., in a preview mode) conforms to the W3C's User Agent Accessibility Guidelines[1]. 
[WAI-USERAGENT][2] [P1] 2.1.3 Ensure the rendering used while authoring is independent of styles used for the published document (e.g., the font size, letter and line spacing, and text and background color, etc.). 
[P1] 2.1.4 Allow the author to display a textual equivalent of content while editing. 
[P1] 2.1.5 
For each element of a document, the properties of that element must be accessible to the author. 
[P1] 2.1.6 Enable navigation and editing via the structure of the document. 
[P1] 2.1.7 Enable editing of the structure of the document. 
[P2] I propose we: remove 2.1.2 (redundant with 2.1.1), 
2.1.3 (belongs in 2.6 perhaps? 
it's about providing multiple views - the rest is in 2.1.5) and 2.1.4 (as noted in previous email). 
I suggest we add a checkpoint - "make the tool accessible" (with the techniques I suggested earlier), and add reading and editing to 2.1.5. 
Along with some slight edits, this is the new checkpoints I am proposing: 2.1.1. 
Make the tool accessible [P1] 2.1.2. 
Follow operating system conventions and guidelines [P1] 2.1.3. 
Allow the author to read and edit all properties of every element of the document [P1] 2.1.4. 
Enable navigation and editing via the structure of the document P2] 2.1.5. 
Enable editing of the structure of the document [P2] In addition, we remove 2.4.1 (redundant with the new 2.1.3) and we have a new checkpoint in section 2.6: Provide multiple views for editing [P3] (this has been there before. 
It is a helpful thing to do, but I don't think it rates a higher priority than that) Charles McCN 
I'm still uncomfortable with having multiple tool accessibility checkpoints. 
I'm O.K. (marginally) with the checkpoint for following the operating system standards with a large list of techniques behind it. 
Beyond that, I would like to be convinced that this group has the correct expertise and can spend the appropriate time to define other UI accessiblity requirements. 
I know I don't have that expertise or the time. 
Can other folks speak to this? -- Bruce Charles McCathieNevile charles@w3.org @w3.org on 06/01/99 06:53:47 PM Sent by: w3c-wai-au-request@w3.org 
Subject: Guideline 2.1 proposals The current checkpoints: 2.1.1 Use operating system and accessibility standards and conventions for the platform(s) the tool runs on. 
[P1] 2.1.2 Ensure that user agent functionality offered by the tool (e.g., in a preview mode) conforms to the W3C's User Agent Accessibility Guidelines[1]. 
[WAI-USERAGENT][2] [P1] 2.1.3 Ensure the rendering used while authoring is independent of styles used for the published document (e.g., the font size, letter and line spacing, and text and background color, etc.). 
[P1] 2.1.4 Allow the author to display a textual equivalent of content while editing. 
[P1] 2.1.5 
For each element of a document, the properties of that element must be accessible to the author. 
[P1] 2.1.6 Enable navigation and editing via the structure of the document. 
[P1] 2.1.7 Enable editing of the structure of the document. 
[P2] I propose we: remove 2.1.2 (redundant with 2.1.1), 
2.1.3 (belongs in 2.6 perhaps? 
it's about providing multiple views - the rest is in 2.1.5) and 2.1.4 (as noted in previous email). 
I suggest we add a checkpoint - "make the tool accessible" (with the techniques I suggested earlier), and add reading and editing to 2.1.5. 
Along with some slight edits, this is the new checkpoints I am proposing: 2.1.1. 
Make the tool accessible [P1] 2.1.2. 
Follow operating system conventions and guidelines [P1] 2.1.3. 
Allow the author to read and edit all properties of every element of the document [P1] 2.1.4. 
Enable navigation and editing via the structure of the document P2] 2.1.5. 
Enable editing of the structure of the document [P2] In addition, we remove 2.4.1 (redundant with the new 2.1.3) and we have a new checkpoint in section 2.6: Provide multiple views for editing [P3] (this has been there before. 
It is a helpful thing to do, but I don't think it rates a higher priority than that) Charles McCN 
TRACE, ATRC, IBM, American Foundation for the Blind, are all members of the group, and publish extensively in the field. 
My review of the area over the last two weeks suggests that IBM, Microsoft, EITAAC, and Sun have all relied extensively on the work of TRACE. 
(As an historian, an important part of my expertise is looking at documents and determining what the dependencies are. 
It was an interesting exercise in this case.) Although I doubt that any one member of the group has sufficient expertise to create this information from nothing, I think the required expertise and the necessary background information are in fact readily available within working group. 
Part of that expertise is an understanding of what information a developer needs, and how best to present it. 
Your (Bruce's) expertise in that particular area is an important ingredient. 
I haven't come up with this information because I am some kind of genius. 
The checkpoints as I have proposed are those which seem, after discussion and reflection, to provide the necessary information for what must be done. 
The techniques I have collected and proposed are based on careful review of the following documents: "Macintosh Human Interface Guidelines" available at: "Requirements for Accessible Software Design" US Department of Education, version 1.1 March 6, 1997. 
Available at: "EITACC Desktop Software standards" Electronic Information Technology Access Advisory (EITACC) Committee. 
Available at: trace.wisc.edu/docs/eitacc_desktop_software_standards/desktop_software_standards.htm[3] "Software Accessibility" IBM Special Needs Systems. 
Available at: "MS checklist" available at: "Designing for Accessibility" Eric Bergman and Earl Johnson. 
Available at: "Towards Accessible Human-Computer Interaction" Eric Bergman, Earl Johnson, Sun Microsytems 1995. 
A substantial paper, with a valuable print bibliography. 
Available at: "Accessibility quick reference guide" Sun Microsystems. 
Not as useful as [SUN-DESIGN][8]. 
Available at: "Application Software Design Guidelines" compiled by G. Vanderheiden. 
A thorough reference work. 
Available at: "User Agent Accessibility Guidelines (Working Draft)" J. Gunderson, I. Jacobs eds. 
This is a work in progress, and the latest working draft is available at: "Web Content Accessibility Guidelines 1.0" W. Chisholm, I. Jacobs, C. LeTourneau, G. Vanderheiden eds. 
Guidelines for accessible web content, available at: "What is Accessible Software" James W. Thatcher, Ph.D., IBM, 1997. 
This paper gives a short example-based introduction to the difference between software which is accessible, and software which can be used by some assitive technologies. 
Available at Charles McCN I'm still uncomfortable with having multiple tool accessibility checkpoints. 
I'm O.K. (marginally) with the checkpoint for following the operating system standards with a large list of techniques behind it. 
Beyond that, I would like to be convinced that this group has the correct expertise and can spend the appropriate time to define other UI accessiblity requirements. 
I know I don't have that expertise or the time. 
Can other folks speak to this? -- Bruce 
