Hello all, I agree with Alexandre. 
Now for the directory to be any use, both the profile and the process have to be 
provided. 
If this is the case, the profile and the process could be merged. 
Also, the 1.0 release white paper says- "....Furthermore, the Profile implicitly specifies the intended purpose of the service: it advertises those functionalities that the service wants to provide, while it may hide (not declare publicly) other functionalities..." This might have been true for the earlier release as the profile had its own parameter descriptions (assuming that there might be a mechanism that first makes sure that the requester is a genuine and then provides the processModel file). 
In the new release, since the parameter descriptions are pointers to the process, the requester has access to the process model and therefore nothing would prevent the requester from accessing the hidden parameters/functionalities. 
regards, mithun 
Hi, I have a question about the new OWL-S 1.0 specification and I thought perhaps someone in the list could help me with this. 
Looking through the specification for the profile I noticed that the parameter descriptions (IOPEs) were modified and became simple pointers to definitions in the process model file. 
This new arrangement is more compact and clear, but from the point of view of service discovery and matchmaking, does not it means that now I need to send a profile and a process model to perform matching? 
In the last version of the specification the names and types of the parameters (IOPEs) were described in the profile itself, and to perform matchmaking I could simply send a profile description to a matchmaking engine, right? 
Now there is no such information on the profile anymore, and so I would need to send both descriptions (profile and process model) to the matchmaker. 
Either this, or not sending any information regarding IOPEs for the matchmaker, in which case the match would be done based only on service parameters and categories, and other information. 
I just wanted to know if really got it right, or if I missed something. 
Or perhaps there is some other solution to this. 
Can someone help me with this? 
Regards, Alexandre Lins. 
Acabe com aquelas janelinhas que pulam na sua tela. 
AntiPop-up UOL - � gr�tis! 
That's not really true. 
In the first place, OWL-S 1.0 does not state that a profile must refer to the IOPE definitions in the process model. 
That is left open. 
So yes, it is possible for the profile to refer to the IOPE definitions in the process model - and I view that as the most normal approach. 
But it is also possible for the profile to include its own IOPE definitions, which would normally be copies of what are in the process model, or a subset of them. 
Just because Parameter and its subclasses (Input, Output, etc.) are defined in Process.owl, does not mean that instances of these classes must appear in process models. 
That's part of the flexibility of OWL. 
Even if the profile refers to the same IOPE definitions as the process model, I don't think that means that the entire process model has to be made available along with the profile. 
For example, one simple solution would be to put all the IOPE definitions in a separate file, and have both the profile and the process model refer to the definitions in that file. 
(As to whether those definitions should be in the same or in a different namespace than the process model, I'm not sure at the moment.) Regards, David Martin 
Hi, I have a question about the new OWL-S 1.0 specification and I thought perhaps someone in the list could help me with this. 
Looking through the specification for the profile I noticed that the parameter descriptions (IOPEs) were modified and became simple pointers to definitions in the process model file. 
This new arrangement is more compact and clear, but from the point of view of service discovery and matchmaking, does not it means that now I need to send a profile and a process model to perform matching? 
In the last version of the specification the names and types of the parameters (IOPEs) were described in the profile itself, and to perform matchmaking I could simply send a profile description to a matchmaking engine, right? 
Now there is no such information on the profile anymore, and so I would need to send both descriptions (profile and process model) to the matchmaker. 
Either this, or not sending any information regarding IOPEs for the matchmaker, in which case the match would be done based only on service parameters and categories, and other information. 
I just wanted to know if really got it right, or if I missed something. 
Or perhaps there is some other solution to this. 
Can someone help me with this? 
Regards, Alexandre Lins. 
Acabe com aquelas janelinhas que pulam na sua tela. 
AntiPop-up UOL - � gr�tis! 
You are right. 
I mistakenly made the conclusion based on the two examples of profile. 
Both these files have pointers to definition of IOPEs in the process model. 
