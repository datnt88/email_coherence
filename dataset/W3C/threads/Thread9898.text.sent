Indeed, "cannot work with" instead of "cannot live with" (because life is mostly work for us). 
We thought to have a responsability (as an engineer) and when we don't succeed with something, we fail and backtrack. 
We didn't succeed with proposal 1. 
We did do the job with a kind of proposal 2 (the quote() stuff) but we can also understand and follow that that is not an option. 
We now do the job with N3 contexts and I'm convinced that Pat will convince you! 
Jos Can you live with the RDF spec having a (clarified version of) option 1, so long as its limitations are made clear? 
While I have big misgivings about the utility of rdf:Statement etc as currently defined/used, I've come to the view that it has some uses, and that a fixed up version requires substantial new vocabulary (eg. 
to handle blank nodes properly). 
I'd be happy seeing folk collaborate on a W3C Note to this end. 
So while I don't myself have much use for the current reification machinery, I'm happy so long as the spec is clear to warn folk about its possible risks / mis-use. 
The N3 contexts angle is interesting. 
I look forward to hearing Pat's pitch for why this is feasibly do-able... Dan Well Dan, a fixed proposal 1, I'm quite sure, will be something close to proposal 2, which I thought was not an option... that's quite close to proposal 3, seems to me which is the good news about proposal 3 Jos [some change of mind...] DanB: JosD: OK, I said "fixed", you asked "clarified" I can live with "clarified" -- it is in M&amp;S, so say what it means and clarify the limitations W.r.t. "filling the reification hole" I better use Pat's words: Fifth. 
(Although this is a slightly different topic, it's related. 
) After the recent webont hoo-ha about layering onto RDF, and after huge battles with Jim H., I am more firmly convinced than ever that RDF really, really needs some way to live a kind of dual life, to be a (simple but useful) basic, vanilla notation for expressing simple facts, sure; but also be a generic structure-encoding framework on which to construct more complex notations, which can parse, transmit and maybe manipulate those notations even when it cannot 'interpret' them. 
And right now, RDF really cannot do both these things at once. 
Reification has been used, and touted, as the way to do both at once, but I think that this is a really bad, bad way to use reification. 
If this is what it is for, then (1) it cannot also be used for what the M&amp;S says it is for, or any of this stuff we are talking about; and (2) this is a really clunky, awkward, triple-hogging, ugly, wasteful way to do that. 
So I would propose that we find, or invent, some OTHER way to do that, and leave reification to do other things. 
And I will suggest a way to do it in another message, just as soon as I can get the time; it is just a proposal to adopt the 'context' idea used in N3 and make it into a language feature. 
If that is out of charter (I will argue that it should not be) then we ought to sketch it in enough detail to see how it would work, recommend that the next WG do something like it ASAP, and assume that they will and that will solve that problem, and put it aside. 
That at least would free up reification from this issue. 
]]] -- http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Jan/0262.html 
Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/ 
