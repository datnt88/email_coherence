The ERB schedule calls for voting on these Feb. 19th. 
2.3 Should we provide a PI or other signaling mechanism whereby a document can specify that particular elements ought to be processed as link elements? 
Cheers, Tim Bray tbray@textuality.com 
http://www.textuality.com/ 
+1-604-708-9592 No - link identifying attributes should be all that is needed by any browser. 
Martin Bryan, The SGML Centre, Churchdown, Glos. 
GL3 2PU, UK Yes. 
Definitely. 
I would suggest PIs to be used to assign elements and/or attributes the role of links. 
This - I think - should simplify issues 2.1 a-d: Link Recognition by Reserved Attribute 2.2 a-b: Link Recognition by Reserved GI 2.4: Link recognition by processor fiat as well. 
Cheers, Hasse P.S. Not to push a badly veiled agenda, beneath is an excerpt from the Synex ViewPort documentation to illustrate what we have found to be a useful design. 
The PIs are used to register customized hypertext and elements using the TEI P3 extended pointer syntax. 
(Customized hypertext triggers callbacks, whereas the TEI extended pointers are handled internally). 
ViewPort supports two ways of registering link elements: - by element, or - by element if a specific attribute is non-implied The element can be specified either by its generic identifier (element name) or by an architectural form. 
Processing instructions are used for the registration. 
In the PI examples below, the "tag-link" registers a hyperlink element, and "att-link" a hyperlink defined using an element with a non-implied attribute. 
Examples: All elements named A become customized hypertext elements with the hyperform URL. 
All elements named A become customized hypertext elements with the hyperform URL if the corresponding element has an non-implied attribute named HREF. 
All elements having an attribute named HTMLFORM assigned the value ANCHOR become customized hypertext elements with the hyperform URL. 
All elements having an attribute named HTMLFORM assigned the value ANCHOR become customized hypertext elements with the hyperform URL if it has an non-implied attribute named HREF. 
The syntax of the processing instructions in formal terms is: tag-link :- 'TAGLINK' element hyperform [ param ] att-link :- 'ATTLINK' element attribute hyperform [ param ] element :- NAME | '#ARCHFORM' attribute value attribute :- NAME value :- LITERAL hyperform :- LITERAL param :- LITERAL A hypermedia form (hyperform) is an application-dependent keyword. 
ViewPort reserves "TEI-P3" internally, for the TEI extended pointer functionality. 
Panorama uses "URI" as the hyperform for its URL support. 
For ViewPort, the processing instructions must be included in the SGML document prior to the parsing of the document instance (in the DTD or document type declaration subset). 
Stora Nygatan 20 Internet: haitto@synex.se 
S-111 27 Stockholm, Sweden WWW: http://www.synex.se 
From: Martin Bryan mtbryan@sgml.u-net.com 
If we cannot have multiple attlists (in particular, an attlist in the internal subset that declares only an element's "link identifying attribute"), then it might be worthwhile to have some PI syntax that allows the effective equivalent of an "attlist augmentation." 
Then this PI--which would look a lot like an attlist decl--could declare the #FIXED link identifying attribute. 
To restate: assuming we identify link elements via an attribute, I still think we need some way to avoid requiring the link identifying attribute to be set explicitly on every instance of this element type in the absence of the complete DTD. 
This capability seems best provided by some sort of "partial declaration" such as an "attlist augmentation" in the internal subset. 
Now whether this takes the form of a PI or not depends on what happens in the 8879 TC and what we do with regards to multiple attlist decls in general in XML. 
On Wed, 12 Feb 1997 17:11:53 -0500 Tim Bray said: Working through mail thread by thread has its disadvantages. 
Having read the threads about recognition via GI and attribute and commented before seeing this one, I now have to modify my views. 
Rats. 
I think reserved attributes may be the best way to go, but they are best handled with multiple attlist declarations. 
When and if ISO changes SGML to allow multiple ATTLIST decls, that will be the only mechanism needed. 
In the meantime, I agree with Paul Grosso and Hasse Haitto that a PI is a good mechanism, and with Paul Grosso that it can be viewed as a substitute for using multiple attlist declarations. 
(But then, I thought DTD summaries were a good idea, too; this feels very similar.) -CMSMcQ yes. 
David Durand dgd@cs.bu.edu \ david@dynamicDiagrams.com 
Boston University Computer Science \ Sr. Analyst --------------------------------------------\ http://dynamicDiagrams.com/ MAPA: mapping for the WWW \__________________________ I agree. 
Essential. 
AFs revisited :-) ///Peter to discover 1000s of internal "homepages" that grew overnight like magic mushrooms on a rich motherlode of corporate horseshit. 
Copyright 1996, IBM. 
All Rights Reserved 
