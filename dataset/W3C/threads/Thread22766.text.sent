Hi, Few questions about DOM 2. 1 - DOM Range : Java bindings are great but why the static final variables are not converted to upper case (like in DOM core) ? 
see : StartToStart, StartToEnd, ... 2 - DOM Range : the Range interface has an IDL method called isCollapsed. 
Why the Java binding is getIsCollapsed() ? 
isCollapsed() sounds better. 
Thierry. 
Thierry Kormann Koala/Dyade/Bull @ INRIA - Sophia Antipolis Interesting point. 
The standard Java (or, more accurately, Java Beans) design pattern is that getters for boolean properties have names which follow one of two patterns, either getWhatever() -- as for any other property -- or isWhatever(). 
If the attribute's name is isCollapsed, then getIsCollapsed() may be confusing but does follow Java's conventions. 
isIsCollapsed() would be even more confusing, of course, but would still be formally "correct". 
I'm not delighted by the idea of making this a special-case in the conversion from abstract design to specific language bindings; I like the consistancy we've maintained so far. 
But it might be worth considering changing the property name from isCollapsed to simply collapsed. 
That would undo this minor cognative clash, and I don't think it would adversely impact comprehensibility of code. 
Joe Kesselman / IBM Research Consistency -- the attribute is named "isCollapsed", and there's a consistent (and automated) mapping from attribute names to accessors. 
Information and a minor correction. 
The info: the pattern was first associated with IDL ... CORBA's C binding used it before Green, I mean Oak, I mean Java was much more than a dream. 
And I know that the folk who did the JavaBeans (oneword[tm]) stuff knew that convention quite well. 
The minor correction: attribute "X" may only map to "isX" if it's boolean, as it is in this case. 
That's a pure JavaBeans-ism, unused in DOM AFAIK. 
Cognate of what? 
:-) That'd mean "getCollapsed" in most IDL bindings, which would make more sense at least to me! - Dave 
