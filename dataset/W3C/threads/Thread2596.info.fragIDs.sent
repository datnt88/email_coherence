While I wholeheartedly agree that PKCS is *far* superior to password based schemes, I suspect passwords will be around for some time to come. 
The idea that every workstation out there will be equipped with smart-card readers and all users will be walking around with smart cards that contain their personal client certificate is lovely but not one I think we're likely to see everywhere for many years to come. 
Smartcards are not a requirement for PKI. 
I have installed many PKIs and very few use smartcards. 
Password based systems are just too easy to manage and can be trivially used with existing legacy systems. 
Actually management of password systems in a large enterprise is far from easy. 
Management of passwords in a small system is no simpler than locally issued certificates. 
Either way, I don't think that the HTTP working group should spend any more time trying to make passwords work when applications such as SSH have demonstrated that public key based systems are more feasible and easier to manage. 
Phill 
Promise I'll take this thread off-line after this note unless anyone else is at all interested. 
Yes, but in many situations involving "public"/shared PC's there doesn't seem to be much of an alternative. 
Walking around with diskettes containing client certificates won't fly at a lot of places even if they are password protected. 
Not only are the diskettes easily copied, but they'll often sit on networked PC's that have virtually no real security built into them (or at the very least configured). 
Now the protection of the client certs depends on passwords that are probably easily guessed in many instances. 
Yes, but in either case it's already considered a "solved" problem or at least one that's relatively under control. 
Password systems are the devil one already knows and the devil one is stuck with anyway while supporting legacy systems. 
While I'm sure a lot of forward looking companies are using PKI there are a lot more that aren't. 
I notice the W3C members only archives are password protected (and not even over SSL it seems ?). 
Mine is not to say what the working group should be working on and once again profound apologies if I've wasted anyone's time on this. 
I just wanted to point out that since HTTP *does* support password authentication there *seemed* to be a bit of a hole in its support of password change/expiration. 
I was hoping (and am still hoping) someone would point out how that hole is not there. 
I also still believe that people will be using centrally stored passwords at least 10 years from now (Y2K programmers now know that 10 years is not such a long time, after all). 
Assuming I'm not missing anything, my recommendation to our customers would be PKI (though, they'll laugh at me: we have a hospital customer with 10,000 more or less public PC's with twice the number of users), use some change password HTML page technology with all its incumbent problems or use a hacked version of the publicly available Netscape Communicator that supports the sort of headers I had suggested in my first note. 
I suspect most will go with the second alternative as being the least attractive but requiring the least work and/or money. 
Less work almost always seems to trump most other considerations. 
Thanks again for your comments. 
Alex Kodat Sirius Software Cambridge, MA 
Unfortunately, there are problems with certificate security. 
Shamir recently demonstrated how easy it is find the private key in a PC because of different entropy of the objects. 
Also, how can I be sure that the "client" serving up the certificate is the endpoint? 
A toolkit like WIDL would appear to provide a screen scraping capability for http which effectively creates a potential proxy, of which I, at the server end have no knowledge. 
Even if I have a cryptographically secure tunnel, and have a certificate, how do I know that someone hasn't added their own plumbing to the client? 
There are times when it pays to use both belt and suspenders ... and even that may not be enough. 
Steve 
Err? And who leaves their private key lying around unencrypted? 
Why do you care? 
What were you planning to add to certs+crypto to make it more secure? 
Cheers, Ben. 
"My grandfather once told me that there are two kinds of people: those who work and those who take the credit. 
He told me to try to be in the first group; there was less competition there." - Indira Gandhi 
That's the question I would have asked myself until recently. 
Doesn't help (well, just a slight delay) - see Shamir and van Someren's paper "Playing hide and seek with stored keys", delivered 
to this year's Financial Cryptography conference: "We describe efficient 
algebraic attacks which can locate secret RSA keys in long bit strings, 
and more general statistical attacks which can find arbitrary cryptographic 
keys embedded in large programs. 
These techniques can be used to apply 
lunchtime attacks on signature keys used by financial institutes, or to defeat authenticode mechanisms in software packages." 
Shamir is the S in RSA. 
Useful tips on how to recover cryptographic keys from Windows NT can be found at Peter Gutmann's pages: 
If I trust the certificate alone, then I am mistakenly trusting a program, not an individual ... then I have delegated authentication to that program. 
I don't have a perfect answer. 
I would at least add passwords. 
And not use NT. 
Unfortunately, there is no plateau with security, and no soundbyte solution. 
Regards, Steve 
I take it this requires access to the process's memory space? 
|John Stracke | My opinions are my own | S/MIME &amp; HTML OK | |francis@ecal.com|============================================| |Chief Scientist | NT's lack of reliability is only surpassed | |eCal Corp. | by its lack of scalability. 
-- John Kirch | 
Since this usually gets swapped out at some point, the swap file would seem a much easier point of attack. 
How easy this is depends on implementations. 
Windows would appear to be easy. 
Systems with protected memory space such as AS/400 or various specialized trusted systems would appear to be immune - but Shamir was exploring the possibility of "lunchtime attacks" on client systems, which is virtually synonymous with Windows. 
Steve 
From: francis@ariel.local.thibault.org 
[mailto:francis@ariel.local.thibault.org]On 
Behalf Of John Stracke Sent: Tuesday, June 15, 1999 8:35 AM Subject: Re: Password change via HTTP 
