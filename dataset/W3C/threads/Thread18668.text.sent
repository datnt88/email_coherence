Hi Folks; Sorry to be bothering you with this question, but I've been looking for a solution to a condition related to your Client-Side Redirects Using HTTP-EQUIV="refresh" checkpoint 3.6. 
Here is my problem: I use HTTP-EQUIV refresh constantly to refresh a page for an internal company website. 
Since some of these users are half the world away, network delays/problems can cause the refresh to fail. 
Here is my question: what mechanism exists to give the client control over the failure to refresh? 
Preferably so that a JavaScript alert window could be opened to inform the client via pop-up window that the refresh has failed. 
Thanks for your time and my apologies if this question is inappropriate. 
Matthew E. Nuttall IBM Global Services 4601 Canada Way Burnaby, BC V5G 4X3 mnuttall@ca.ibm.com 
This sounds more like content refresh (3.5) than client-side redirects (3.6). 
The reload button. 
Your question is related to checkpoint 3.5, but from a different perspective. 
Checkpoint 3.5 is about making the automatic refresh behavior into a manual refresh behavior. 
Points 1 and 2 of checkpoint 3.5 apply. 
I could imagine the following behavior: - The user agent uses a time-out to detect failed GETs. 
- When a request fails, the user is informed, and the user is given the option of going to manual mode or leaving in automatic mode. 
- In manual mode, a persistent message lets the user know that manual mode is on, and the user can always refresh content by hand. 
- Make the alert to the user on failed GET optional, so the user can choose to not be bothered for each failure to get a resource, but auto mode continues to silently fail. 
- When in manual mode, let the user explicitly request to return to auto refresh mode. 
I'm not aware of this type of explicit mechanism available in user agents today. 
If you implement this (or something similar), please let us know! 
We welcome your implementation input on how you get the best user experience. 
This is an interesting question because it shows that the ability to toggle between auto and manual mode may have non-accessibility uses. 
- Ian Ian Jacobs (ij@w3.org) 
http://www.w3.org/People/Jacobs 
You can provide a URL parameter to cause a browser redirect to a different location as part of the refresh. 
I have seen this done on sites. 
Rich Rich Schwerdtfeger Senior Technical Staff Member IBM Accessibility Center Research Division EMail/web: schwer@us.ibm.com "Two roads diverged in a wood, and I - I took the one less traveled by, and that has made all the difference.", 
Frost "Ian B. Jacobs" Sent by: cc: w3c-wai-ua@w3.org w3c-wai-ua-reques Subject: Re: Client-Side Redirects Using HTTP-EQUIV="refresh" t@w3.org 01/22/2002 09:28 AM This sounds more like content refresh (3.5) than client-side redirects (3.6). 
The reload button. 
Your question is related to checkpoint 3.5, but from a different perspective. 
Checkpoint 3.5 is about making the automatic refresh behavior into a manual refresh behavior. 
Points 1 and 2 of checkpoint 3.5 apply. 
I could imagine the following behavior: - The user agent uses a time-out to detect failed GETs. 
- When a request fails, the user is informed, and the user is given the option of going to manual mode or leaving in automatic mode. 
- In manual mode, a persistent message lets the user know that manual mode is on, and the user can always refresh content by hand. 
- Make the alert to the user on failed GET optional, so the user can choose to not be bothered for each failure to get a resource, but auto mode continues to silently fail. 
- When in manual mode, let the user explicitly request to return to auto refresh mode. 
I'm not aware of this type of explicit mechanism available in user agents today. 
If you implement this (or something similar), please let us know! 
We welcome your implementation input on how you get the best user experience. 
This is an interesting question because it shows that the ability to toggle between auto and manual mode may have non-accessibility uses. 
- Ian Ian Jacobs (ij@w3.org) 
http://www.w3.org/People/Jacobs 
