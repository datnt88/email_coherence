Hi I am still working on getting a real process together to compile Amaya as fink packages for OS X. One of the issues I am facing is regularly downloading a large package via telephone. 
This coud be alleviated by using CVS, but it seems that it might be helpful to have source tarballs that are more modular. 
For example libjpeg and libpng are not required anymore by default, and it would be good to have a source tarball available that didn't include them. 
I presume this requires a change to the packaging files. 
On a related note, at least in OS X it is possible to compile libwww seperately as a package. 
Are there special configuration requirements for Amaya to use libwww or could it be compiled against a pre-existing installation of libwww? 
Again this would allow packaging systems (not just fink, but also deb and rpm, at least) to live with smaller chunks, and at the same time readily ensure that they manage versioning requirements, upgrading libwww etc as required. 
Cheers Chaals (PS No actual progress on compiling at the moment - I don't have a Mac right now...) Post: 21 Mitchell street, FOOTSCRAY Vic 3011, Australia or W3C, 2004 Route des Lucioles, 06902 Sophia Antipolis Cedex, France 
On Thu, 2 Jan 2003 11:00:49 -0500 (EST) 
It's probably useful in your case but confusing for other people. 
Why don't use cvs in your case? 
Jos? knows more than me but Amaya needs a special version of the libwww. 
Irene. 
It is the case of people compiling for the Mac, using fink (similar to debian packaging). 
It would be nice if the packaging mechanisms supported using CVS, but as far as I can tell they don't at this stage. 
What would be ideal is to have several tarballs generated - one for people who want the full source, and others that are designed around the idea of modularising the source (it seems unnecessary for people to download unchanged versions of lib* every time they want to compile a release version, and especially libpng/libjpeg which aren't used). 
Cheers Chaals 
is it documented anywhere what the differences are (apart from in the code itself)? 
Or can anyone tell me hich bits of the code I should look at to save me trying to read the whole of libwww source? 
cheers Chaals 
