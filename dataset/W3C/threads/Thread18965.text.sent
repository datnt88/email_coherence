can you write and attach RDF with a CSS file? 
You could, but it would be extremely complex. 
Although the BNF productions for CSS are grouped pretty much according to the semantics of each of the parts, you'd have to invent a CSSPath for that to be useful. 
Chaals's ideas of adding a new property ("background-longdesc"? 
I don't think you want people to be using chunks of HTML in CSS) to CSS and deploying decent image formats (PNG, SVG, etc.) seems to me to be on the mark. 
Oops. 
I suspect that Sean may be interpreting Lisa more literally than Lisa intended, in terms of "attach RDF with a CSS file." 
I believe that the leading-candidate method of applying the RDF which associates a description of the background is not by reference via CSS path into the CSS at all but by the URI of the first-class web object that the CSS processor binds as background to some base-language element. 
The association of a base-language element instance with the background image-resource is implied by the style algorithms and the sheaf of pertinent style sheets. 
The action of the style processor may be reduced to rule form as a binding of - the property-value pair (background, someImage) to - a match-pattern generated by selectors in style rules and the action of the cascade to isolate a surviving style rule per base language element instance As for "associate td.header with a standard h2", I'm not 100% sure what you mean, but I think you're in the realm of CSS pre-processing. 
Pre-processing, but not necessarily CSS pre-processing. 
Perhaps XSLT pre-processing. 
One application is to generate a new base-language syntax tree for an NN4-compatible view of the page. 
I don't believe that CSS will do that for you. 
This leaves the matter of how to frame some RDF that makes assertions about what rhetorical role this element is playing that makes the binding to this background image appropriate. 
I am unclear how far up the generic/specific or is_a ancestry of the element instance one can climb with RDF assertions. 
It would be nice to be able to bind sense-clarifications to match-patterns and not only to instances. 
But that may be a 'nice' that fails to make the grade in terms of lowest level language, c.f. our experience where only 'headers' is implemented among the cell/header association tools in HTML 4. Accessible TABLEs from W3C/WAI (FedStats pitch) Al Kindest Regards, Sean B. Palmer @prefix : http://purl.org/net/swn# . 
:Sean :homepage http://purl.org/net/sbp/ . 
Yep; I was thinking about applying the RDF solution more broadly, i.e. by extending it to annotate other bits of style (why I chose this background color: what it means, where I derived the style from, what date I updated this particular rule, why this bit doesn't work in a particular browser, etc.). 
In doing so, and because I'm a metahead and forgot to KIS (S!), I forgot about just talking about a particular image being used as a background. 
I guess that the "background-longdesc" property could easily point off to some XML/RDF as much as it could point to some further HTML. 
You'd have to run the majority of pages through Tidy before you could do anything with XSLT, of course. 
I'm still not quite sure what Lisa (or you) mean, to be quite honest. 
Most of the problems in NN4's display of HTML+CSS is in the CSS engine's inability to do anything correctly. 
Changing the HTML structure is not going to fix it, unless you take out all of the class hooks or something. 
I was thinking that she means "using the browser's built in h2 style for all td.header selected elements", which would go beyond simple pre-processing, in fact, requiring knowledge of the browser's built in style sheet. 
Kindest Regards, Sean B. Palmer @prefix : http://purl.org/net/swn# . 
:Sean :homepage http://purl.org/net/sbp/ . 
I will try to rexplain what I was thinking. 
My problem was that presention , for the most part, has content. 
The content may be "this is emphasised" or "you can trust this", or who knows what, but it is content. 
That content is lost with overriding user style sheets. 
A strong example of this is background grafics which may even have text in. 
Now, one way to deal with this would be to add discripitve atributes to all CSS elements, and emphasis levels and similar fun stuff. 
In other words a way to extract the content from the presentation. 
If we could do it in RDF that would be cooler. 
We leave CSS alone and say: this class, from this CSS file, has an emphasis level of "extremely irrelevant". 
This class, from this CSS file, has an association of "trustworthy" This class, from this CSS file, has an association of "urgent/dangerous" Now visually "urgent" may be rendered in red. 
but in a black and white rendering it may have a box around it, in aural it may be louder. 
- up to the user. 
Alternatively, when linking a document to a CSS file we could also link it to the RDF that explains or gives meaning to the CSS classes as used and quoted by the document. 
ok hear is the one that was confusing : This class (td.header for example), from this CSS file, is similar in our data model to a "H1 from XHTML" In other words, give Peaple an elegant way out of their misuse of XHTML and phudo classes I am not an "RDF person" (although you probably could describe me in lots of conflicting RDF definitions) But I am guessing that may be an elegant solution to a voice but none the less real problem. 
All the best, Lisa Seeman UnBounded Access Widen the World Web Behalf Of Sean B. Palmer css3-fonts, css21 Yep; I was thinking about applying the RDF solution more broadly, i.e. by extending it to annotate other bits of style (why I chose this background color: what it means, where I derived the style from, what date I updated this particular rule, why this bit doesn't work in a particular browser, etc.). 
In doing so, and because I'm a metahead and forgot to KIS (S!), I forgot about just talking about a particular image being used as a background. 
I guess that the "background-longdesc" property could easily point off to some XML/RDF as much as it could point to some further HTML. 
You'd have to run the majority of pages through Tidy before you could do anything with XSLT, of course. 
I'm still not quite sure what Lisa (or you) mean, to be quite honest. 
Most of the problems in NN4's display of HTML+CSS is in the CSS engine's inability to do anything correctly. 
Changing the HTML structure is not going to fix it, unless you take out all of the class hooks or something. 
I was thinking that she means "using the browser's built in h2 style for all td.header selected elements", which would go beyond simple pre-processing, in fact, requiring knowledge of the browser's built in style sheet. 
Kindest Regards, Sean B. Palmer @prefix : http://purl.org/net/swn# . 
:Sean :homepage http://purl.org/net/sbp/ . 
