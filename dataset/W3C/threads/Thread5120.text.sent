1. As I do more TAP examples, I see more examples such as FashionModelMacPherson,Elle ActorMacPherson,Elle which should be declared FashionModelMacPherson,Elle owl:sameAs ActorMacPherson,Elle So, the big question is: will TAP support such *essential* OWL constructs, or will TAP stick with just the RDF/RDFS constructs? 
2. The MKR equivalent is "FashionModelMacPherson,Elle" is "ActorMacPherson,Elle"; I *don't like the quotes* for MKR, but they are *required* to distinguish a single resource from a list/set of two resources. 
For example, I can say "AthleteYounger,Jordan", "AthleteOlder,Jordan" is "AthleteJordan,_Michael"; which indicates three names for the same resource. 
3. Because of 2, I would like to see TAP do away with the commas embedded in names. 
Dick McCullough knowledge := man do identify od existent done; knowledge haspart proposition list; The plan is to stick with RDF/RDFS and have a post-processing system run over the KB periodically to merge equivalent nodes using some set of guidelines. 
There are literally hundreds of these examples (Tom Waits and Suzanne Vega are two obvious ones). 
What about using a \ in the MKR system, something like AthleteYounger\,Jordan, AthleteOlder\,Jordan is AthleteJordan\,_Michael We could change to do away with the commas, or to percent escape them, but I'm reluctant to change it with preparations for a release underway. 
1. re: owl:sameAs Won't you need a relation like "is" or "owl:sameAs" to tell the post-processor what to do? 
2. re: commas In the MKR context, \ can be used as an ordinary character in concept names, so I am reluctant to do \ escapes. 
For example, the "classname" attribute looks like John has classname = John\Person\Animal\Entity\Thing; I have been using one escape: "\n" at the end of line will continue a quote (enclosed in either single or double quote marks) to the next line, and is intended to be interpreted as a line feed, as in C. I have used this for multi-line "quotes" to replace RDF comment ... /comment . 
I'm not sure I really want to continue supporting this convention. 
Anyway, the comma problem is not a big deal. 
I have no elegant solutions at this time. 
Let's ignore the issue for now. 
Dick McCullough knowledge := man do identify od existent done; knowledge haspart proposition list; The thought is that we'd collapse the two oid's together. 
An example would be Jennifer Lopez; she's listed as a tap:Musician and a tap:Actor. 
Okay, works for me :) 
