I still consider the question unresolved as to what version an HTTP/1.x server should return for an HTTP/1.0 request. 
I claim the draft (section 6.1) does not specify it: "The first line of a Response message is the Status-Line, consisting of the protocol version followed by ..." To review (minus the pros and cons), the issue is whether the server should return (1) HTTP/1.0 (the version of the request) or (2) HTTP/1.1 (the version the server software understands). 
The concern people have expressed is that in the first case you could never determine whether a server understands HTTP/1.1. 
I favor case one. 
Henrik Frystyk Nielsen has noted that clients should begin to send HTTP/1.1 in their requests. 
HTTP/1.1 servers would respond in kind. 
HTTP/1.0 servers (with two known exceptions) generally respond to HTTP/1.1 requests with a response of HTTP/1.0. 
We could also [hack] recommend as a convention that servers include the protocol version that the server understands as a comment in the Server: header. 
My opinion notwithstanding, I offer wording for the two cases for section 6.1, to follow the Status-Line syntax: Case 1 (return HTTP/1.0 to HTTP/1.0 request): The protocol version in the response MUST be the lesser of HTTP/1.1 and the protocol version in the request. 
The headers in the response MUST be consistent with the protocol version in the response. 
Case 2 (return HTTP/1.1 to HTTP/1.0 request): The protocol version in the response MUST be the greater of HTTP/1.1 and the protocol version in the request. 
The headers in the response MUST be consistent with the protocol version in the request. 
We need to agree on one case or the other and (I believe) to choose words to add to the draft. 
Dave Kristol There are multiple possible interpretations of "The headers in the response MUST be consistent with the protocol version in the (response|request)". 
Interpretation A: the headers in the response must be _defined_ in the protocol version in the (response|request), or Interpretation B: the headers in the response must _not be inconsistent_ with the protocol version in the (response|request). 
The way in which the major/minor version scheme works is involved with this. 
It's always supposed to be possible for a 1.n client to receive 1.m responses from a 1.m server and behave reasonably according to the capabilities of version min(1.n,1.m). 
If m =n, the headers will describe how a version 1.m client should behave, and the 1.n version should be able to do that. 
If m n, the response should still have a reasonable interpretation in 1.n. 
If this can't work, the major/minor version system isn't going to work. 
If we believe interpretation A above, then a HTTP 1.0 proxy anywhere between a HTTP 1.1 client and a HTTP 1.1 server would prevent the server from ever being able to pass any 1.1-only headers through the proxy to the client in either case (1) or (2). 
Furthermore this would require proxies to remove 1.1 headers when responding to 1.0 clients. 
So, this is pretty bad. 
If we believe interpretation A above, then, since 1.1 is supposed to be backward compatible with 1.0, if headers defined in 1.1 are left uninterpreted (and this is the crux of the major/minor version scheme), then it is always OK to return a normal 1.1 response to a 1.0 request. 
This seems to suggest it makes sense to return a 1.1 version number as well. 
--Shel I meant "B" here. 
--Shel In the discussion so far the proponents of "send HTTP/1.1 in response to an HTTP/1.0 request" emphasize the desirability of advertising the server's capabilities. 
But that shouldn't be necessary. 
If a client understands HTTP/1.1, it should send an HTTP/1.1 request (as Henrik first noted). 
An HTTP/1.0 server (with two known exceptions) will respond with HTTP/1.0. 
If a client sends an HTTP/1.0 request, then sending an HTTP/1.1 response advertises something that's apparently of no use to that client. 
I agree with Dave Morris that we're trying to overload the meaning of the protocol version in the status line. 
If it's truly desirable to advertise capability (and I'm not convinced), then I think the version of the response and the capability version should be separated. 
The extra information would only be necessary when the two versions differ. 
Dave Kristol 
