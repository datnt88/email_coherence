Hi all, 
I've produced a preliminary version of a cgi script that acts as a framework for a test suite you give it and produces output in EARL. 
My jigedit account seems to have disappeared, so I posted it up temporarily at http://hkn.eecs.berkeley.edu/~nadiah/tester/ 
I'll move it when I can upload it somewhere more official. 
This is just a really rough draft for now, but I'd appreciate any help or 
ideas people had. 
In particular, I'm not entirely confident about the EARL it produces. 
I am interested in the idea of an EARL database that was discussed here. 
Originally the idea for this script was to try to store test results using Annotea, but before settling on that for sure, I think it makes sense to collaborate with other authors working on creating EARL reports. 
Nadia 
This looks highly topical. 
For those who are hacking EARL client software (Jim? 
Sean?) it looks like an interesting live test case to combine Nadia's human-assessment EARL with Page Valet's automated stuff, for instance. 
But to do so, I think it might be useful for your script to offer the option of the xmlrdf output served raw as text/xml. 
We all have that problem! 
I think it might be very useful for you to join in the #er live conferences with this (Wendy??) Nick Kew Site Valet - the mark of Quality on the Web. 
First off, the script is wonderful. 
The concept is good, and everything runs smoothly. 
Here are some general comments. 
* In the EARL output, you seem to have got something a bit switched:- the rdf:resource URI-ref needs to go where the rdf:about attribute is, and vice versa. 
In fact, the hack of just adding the name to the end of a test subject is... somewhat horrific, and was just a "make-do" kinda thing in the ATR output. 
In fact, this breaks the EARL, because two resources with different date properties will have the same URI-ref. 
What you could do is something like the following:- WebContent rdf:about="http://hkn.eecs.berkeley.edu/~nadiah/tester/ns#http%3A//www 
.w3.org/%20name%202002-02-13" it's not pretty, but it's fairly robust. 
Simply take URI+" "+name+" "+date, and URI quote it. 
Alternatively, you could just use short generated IDs, and keep track of them in a local database or something. 
* The predicates are wrong. 
In fact, EARL 0.95 only defines earl:passes, and earl:fails. 
If you want to use "NotTested" etc., you'll have to compose them in the following way:- 
(don't forget to change [earl] to the EARL 0.95 namespace as appropriate!). 
This is a bug in the ATR output too. 
In fact, we'll probably be re-jigging this to some extent for EARL 1.0. 
* Perhaps you can use RDF for the test cases. 
Something like the following syntax (in Notation3 [1]) would be cool:- @prefix : http://hkn.eecs.berkeley.edu/~nadiah/tester/ns# . 
http://www.w3.org/Style/CSS/Test/CSS1/current/test15.htm :id "1.5" . 
http://www.w3.org/Style/CSS/Test/CSS1/current/test16.htm :id "1.6" . 
http://www.w3.org/Style/CSS/Test/CSS1/current/test17.htm :id "1.7" . 
* http://hkn.eecs.berkeley.edu/~nadiah/tester/css.txt#1.1 has a dubious fragment, although it doesn't concern me too much. 
* [pedantic-mode] The form uses GET, but the frames hide that, which is a shame. 
I don't think that's "fixable". 
Acutally, the form at the end uses POST, whereas a long GET may well be acceptable, given that the field names aren't all that long. 
If not, perhaps you could save the results temporarily to the server (like the W3C's RDF Validator does for the visual output), and give them a short ID. 
* Please make the source code for the client public if you can, and attach suitable licensing conditions 
MUTAT is a cool name for the tool, BTW, although it feels as if it needs an "N" added to it :-) 
[1] http://www.w3.org/2000/10/swap/Primer Kindest Regards, Sean B. Palmer @prefix : http://purl.org/net/swn# . 
:Sean :homepage http://purl.org/net/sbp/ . 
Since we're all lazy and learn by example like most normal people, attached is a "Learning EARL by Example" thingy, with a couple of canonical examples to get people going. 
For EARL 1.0, I'd like to build on this, and include a few more examples. 
People have been asking me to do this for quite some time now. 
Kindest Regards, Sean B. Palmer @prefix : http://purl.org/net/swn# . 
:Sean :homepage http://purl.org/net/sbp/ . 
If I want to assert a handful of things at once can't I use bags to do it? 
(I temporarily don't have my mouse, so copy/paste is too hard, but I figure at 
least Sean will have an answer and can construct an example. 
Otherwise I will make one in the next couple of days... cheers Charles Location: 21 Mitchell street FOOTSCRAY Vic 3011, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) 
(Thanks all for helpful and constructive comments ;-) I am working a little with Nadia - she is based at W3C in France so live conferences are currently after midnight which doesn't seem ideal (I am not joining them in part for same reasons, although I don't think I am as important a contributor). 
The eternal problem of global collaboration... 
cheers Chaals I think it might be very useful for you to join in the #er live conferences with this (Wendy??) 
I guess it depends upon how you'd construct such a thing, but I think in general, no:- When using a list, be aware that it is exhaustive For example, if you say that you have a brother called Jon, and a brother called Paul, people cannot test whether you have an extra brother or not. 
If, on the other hand, you make a list (cf. 
lists in DAML) out of your brothers, then that list is exhaustive: people can infer that if a person is not in that list, then it is not one of your brothers. 
q.v. 
Dan Connolly's discussion of this on #rdfig. 
]]] - http://infomesh.net/2001/08/swtips/ 
Using a bag is more work (generates more triples) that just using the properties as normal, and should only be used when you want to make an 
exhaustive list, or you need to refer to a set of something. 
Since in 
the general case we don't want to do either, it's probably a good idea to avoid bags. 
OTOH, perhaps you had something else in mind, or I'm missing the point? 
This question (bags vs. properties) comes up quite a lot on the RDF lists. 
Kindest Regards, Sean B. Palmer @prefix : http://purl.org/net/swn# . 
:Sean :homepage http://purl.org/net/sbp/ . 
Ah, then she's the person Wendy already mentioned. 
I was misled by the berkeley.edu 
URL! 
Erm.. Sean, Jim and myself are in the UK, Terje's in Norway ... It's an ideal time for those of us in Europe :-) But other times remain a possibility, and have even been discussed. 
Nick Kew Site Valet - the mark of Quality on the Web. 
"Nick Kew": 
raw xml/rdf would be nice, however more important is probably EARL 1.0, otherwise I'll have to convert it myself, which would just eat time that would be better served on the actual client and as EARL 1.0 will have to come along soon, I'll wait. 
Jim. 
Hmm... I've changed it to produce that for now, but I'm not sure I understand what this new and improved URI is supposed to represent. 
Does this mean that I have to make my own namespace so that this can be translated into something meaningful later? 
Is this supposed to be able to retrieve the results? 
(Sorry, I'm still new to this whole earl/rdf thing, so my questions will tend to be kind of basic.) 
Oops. :) I basically copied my output from ATR, as you guessed. 
You should make "Learning EARL by Example" public, it's quite helpful. 
That's kind of cool. 
I'm going for easy to produce and easy to parse here. 
I'll play around maybe. 
Would it be worthwhile to produce EARL in n3 too? 
Another place where I wasn't sure of the purpose of the resource. 
I'm not sure what's supposed to be there. 
Actually the script uses POST by default, but it accepts either. 
The one call with GET for the sub-frame is an exception because it was the only way I could think of to pass on state information when I couldn't force the form to submit itself. 
(I'm new to cgi scripting too, is there a better way to do this?) I wanted to avoid having to save any information to the server. 
What's suitable? 
Hmm... Network? 
Nullifier? 
Node? 
:) Thanks for all your help with the EARL. 
I'll work on fixing things up more. 
Nadia 
I could deal with staying up 'till midnight... the only problem is that I 
don't have net access at home, and I don't really like the thought of walking to the office in the dark. 
:/ 
Nadia 
"Nadia Heninger (by way of Wendy A Chisholm wendy@w3.org 
)" 
I 
Is 6pm GMT (7pm France) a reasonable compromise? 
That has me in the office aswell (which I prefer.) and isn't too early for Wendy. 
~5am for Sydney isn't so good though. 
Jim. 
Oops. :) I basically copied my output from ATR, as you guessed. 
You should make "Learning EARL by Example" public, it's quite helpful. 
Yep... 
That's kind of cool. 
I'm going for easy to produce and easy to parse here. 
I'll play around maybe. 
Would it be worthwhile to produce EARL in n3 too? 
You don't need to - there are already conversion tools available, and for now RDF/XML is the "canonical" format. 
What's suitable? 
W3C Software license: http://www.w3.org/Consortium/Legal/copyright-software Cheers chaals 
Who do we have in Sydney? 
(I think there is someone in Japan, where it would be 3am (2am in summer time - Japan doesn't have summer time). 
I am mostly in Europe - and when I am in Australia I am already working through a couple of nights. 
cheers Chaals "Nadia Heninger (by way of Wendy A Chisholm wendy@w3.org 
)" 
I 
Is 6pm GMT (7pm France) a reasonable compromise? 
That has me in the office aswell (which I prefer.) and isn't too early for Wendy. 
~5am for Sydney isn't so good though. 
Jim. 
Location: 21 Mitchell street FOOTSCRAY Vic 3011, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) 
