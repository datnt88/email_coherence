Yes, many versioning systems have "status" properties on versions, and the "status" property should be mutable, i.e. should be writable without creating a new version. 
snip Thus, versioning needs a general way to allow creation of custom properties which are mutable, AND custom properties which are immutable. 
The server would of course reject requests for mutable properties if it does not support mutability, but we need a standard way for clients to ask for this. 
I saw no reply to that yet so I will give my $0.02. 
I think a mutable status property is essential if I want to do some document management. 
To be more flexible I also would want to to have at least arbitrary mutable properties to add to a version. 
Or can I mimic that by adding multiple labels to a version ? 
E.g. doc#1 status_accepted, author_edgar doc#2 status_working, author_lisa (sometimes authors of documents change) Cheers, Edgar edgar@edgarschwarz.de 
http://www.edgarschwarz.de * DOSenfreie Zone. 
Running Native Oberon. 
* Make it as simple as possible, but not simpler. 
Albert Einstein Labels won't solve the problem, for us and I suspect also for you, because you can't have more than one version in a version history have the same label. 
So although you could mark one version with the label "author_edgar", you could only do that to one version. 
I think by the very example you chose you want to be need to have custom mutable properties. 
lisa From: ietf-dav-versioning-request@w3.org [mailto:ietf-dav-versioning-request@w3.org]On 
Behalf Of Edgar@EdgarSchwarz.de Sent: Saturday, February 03, 2001 2:21 PM Subject: Re (2): Labels and Status Yes, many versioning systems have "status" properties on versions, and the "status" property should be mutable, i.e. should be writable without creating a new version. 
Thus, versioning needs a general way to allow creation of custom properties which are mutable, AND custom properties which are immutable. 
The server would of course reject requests for mutable properties if it does not support mutability, but we need a standard way for clients to ask for this. 
Adding new properties with no semantics is a slippery slope that I am reluctant to travel any further than absolutely necessary. 
Currently, we just have two: "comment" and "creator-displayname". 
"Creator-displayname" is relatively well understood, and "comment" is for anything else with no semantics. 
So until we define some interoperable semantics for "status", I believe this is much better left to a separate document describing "interesting properties with no interoperable semantics". 
Cheers, Geoff From: "Lisa Dusseault" lisa@xythos.com 
Labels won't solve the problem, for us and I suspect also for you, because you can't have more than one version in a version history have the same label. 
So although you could mark one version with the label "author_edgar", you could only do that to one version. 
I think by the very example you chose you want to be need to have custom mutable properties. 
From: ietf-dav-versioning-request@w3.org 
Yes, many versioning systems have "status" properties on versions, and the "status" property should be mutable, i.e. should be writable without creating a new version. 
Thus, versioning needs a general way to allow creation of custom properties which are mutable, AND custom properties which are immutable. 
The server would of course reject requests for mutable properties if it does not support mutability, but we need a standard way for clients to ask for this. 
