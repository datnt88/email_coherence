Just a brief reminder that we're in the final days of a working group last call for comments period on the WebDAV Ordered Collections protocol, draft-ietf-webdav-ordering-protocol-07. 
From the abstract of the -07 specification This specification extends the WebDAV Distributed Authoring Protocol to support server-side ordering of collection members. 
Of particular interest are orderings that are not based on property values, and so cannot be achieved using a search protocol's ordering option and cannot be maintained automatically by the server. 
Protocol elements are defined to let clients specify the position in the ordering of each collection member, as well as the semantics governing the ordering. 
This last call for comments period ends Sunday, April 27, 2003, at midnight, US Pacific time. 
The specification can be accessed at: Text (this is the normative version) xt HTML: html XML: xml Based on comments received so far, there will likely be another draft produced, but there will not be another WG last call period. 
I am currently anticipating that the -08 specification will be sent immediately to the IESG for approval. 
As a result, if you are planning on reviewing this specification, please do so immediately. 
- Jim Thans Jim, the current edits are this URL: html There's currently one unresolved issue for which I am looking for feedback: html#rfc.issue.6.1-when-are-members-added 
In case that there's no additional feedback, the plan is to close it as "no change". 
Regards, Julian May I ask about practical example or cases about WebDAV Ordered Collections protocol. 
It is not clear to me why we define new protocol when we have the search protocol's ordering option. 
In other words, which aspects of ordering can not be covered by the search protocol's ordering option. 
Thanks in advance, Bita See: http://greenbytes.de/tech/webdav/draft-ietf-webdav-ordering-protocol-latest 
.html#rfc.section.2.p.2 Thanks Julian. 
But can't we use the properties instead. 
For example in case of having a book, just define a property called page, or if there is no proper property, just create a proper one for them. 
I read the documentation, it is saying "The ordering protocol defined here focuses on support for such human-maintained orderings." 
What does it mean by human-maintained ordering? 
Sorry if it is very basic question. 
Bita. 
Hi, some more thoughts: Properties are attached to resources. 
Ordering is a property of the collection that contains internal member names identifying resources. 
For instance, you might have several collections containing bindings to the same set of resources, but with different orderings. 
There's no way to simulate this with DASL (which -- by the way -- is not nearly done...) and returning ordered results. 
Julian From: w3c-dist-auth-request@w3.org [mailto:w3c-dist-auth-request@w3.org]On 
Behalf Of B. Shadgar Sent: Wednesday, April 23, 2003 5:44 PM Subject: Re: Reminder: WG Last Call on Ordered Collections http://greenbytes.de/tech/webdav/draft-ietf-webdav-ordering-proto 
col-latest Thanks Julian. 
But can't we use the properties instead. 
For example in case of having a book, just define a property called page, or if there is no proper property, just create a proper one for them. 
I read the documentation, it is saying "The ordering protocol defined here focuses on support for such human-maintained orderings." 
What does it mean by human-maintained ordering? 
Sorry if it is very basic question. 
Bita. 
Ok, what if we define a live property called resource-name which is representing the name of a resource? 
Bita. 
From: w3c-dist-auth-request@w3.org [mailto:w3c-dist-auth-request@w3.org]On 
Behalf Of B. Shadgar Sent: Wednesday, April 23, 2003 7:02 PM Subject: Re: Reminder: WG Last Call on Ordered Collections We can't, because the name isn't a property of the resource. 
It's a property of the binding *to* the resource (of which there can be many), and which belongs to the state of the parent collection. 
BTW: how would that help? 
Julian From: w3c-dist-auth-request@w3.org [mailto:w3c-dist-auth-request@w3.org]On 
Behalf Of B. Shadgar Sent: Wednesday, April 23, 2003 7:02 PM Subject: Re: Reminder: WG Last Call on Ordered Collections Well, I was thinking that maybe the best use case of the Ordering protocol was regarded to the versioning of resources. 
In this case, I though if every time that a revision is created, a live property containing the name of resource was attached to the resource, maybe we didn't need to the new Ordered protocol. 
Does it make sense? 
Bita. 
Now you got me confused :-) What's the relation of (1) resource names and (2) versioning to ordering collection members? 
Julian Dear Julian Sorry. 
I may be wrong, it is just some thought. 
1) the resource names to ordering collection: By my undrestanding, what is suggested in the ordering collection, is a way to change the order of resources and put them the at the beginning or end of the list, after or before a given resource. 
Also this is true that in the Real numbers you can always find a number less or a number greater than a given number. 
Consider, you have a live property called resource-name which is made by the name of resource followed by a Real number. 
Now every time you would like to have a new order, system can change the resource- name based on your order (by changing the Real part of resource-names) . 
Then by using the order option on the resource-name in the Search protocol we can have the desired order. 
2) Versioning to ordering collection: The tree in the section 8 of the orderd-collections-protocol reminds me of the situation in the Versioning. 
This reminding and some other thoughts (maybe silly) caused to say so. 
I hope I didn't make you more confused. 
If so, I apologize again. 
Regards, Bita. 
From: w3c-dist-auth-request@w3.org [mailto:w3c-dist-auth-request@w3.org]On 
Behalf Of B. Shadgar Sent: Thursday, April 24, 2003 12:00 PM Subject: Re: Reminder: WG Last Call on Ordered Collections I understand that you're saying that using a combination of dead properties and DASL queries, similar results could be obtained. 
This is true. 
However, modelling collection ordering as property of the containing collection has the following advantages: - no need to modify resources - no need to come up with unique property names per containing collection - no dependendy on an unfinished spec - existing clients can take immediate advantage by just not sorting a PROPFIND result Hope this helps in understanding the motivation, Julian OK, now that the WG last call period has ended, let's decide how to proceed. 
There was one open issue, for which there was one vote for change (Lisa), and one vote for no change (Geoff). 
As acting editor I lean to no-change. 
If this is ok for everybody, I'll submit the draft located at html as version 08. Julian "No change" isn't acceptable when the comment is that something is not specified. 
My last issue was "if a destination is not being overwritten, then shouldn't the MOVE (the rename) preserve ordering?" 
The spec can say "When a resource is moved within a collection and the destination did not previously exist (the 'rename' case), its relative ordering MUST be preserved." 
Or the spec could say SHOULD or MAY. 
However, staying silent on an issue like this allows some implementors to assume MUST and others to assume MAY. 
That said, if a sentence like this is added to the draft we do not need to go through WG last call again for this issue. 
Lisa est. 
html as version 08. Julian Lisa, if the spec is silent on the issue simply means that it's undefined. 
So an implementor that assumes this mean "MUST" simply is wrong. 
The point being, we (Geoff and myself) feel that the spec shouldn't require any specific server behaviour, and thus not defining it at all seems to be absolutely reasonable. 
Julian Why should the spec be silent when people have reasonable questions about whether an issue works one way or another? 
If no specific behavior is required, you must still say so. 
Otherwise readers *will* assume. 
Lisa otocol-lat I'm not sure I understand the objection the Geoff raises (i.e., I don't see what the potential problems might be). 
IMO, the principle of least astonishment applies here. 
If a resource has a given name (final path segment) in a collection, and then is given a new name (final path segment), a user would expect that resource to keep its current position, unless the ordering explicitly depends on the value of the final path segment. 
So, I'm with Lisa, I think some additional language here would be good (MUST preserve position for MOVEs that only change final path segment except when the order semantics explicitly depend on the URL or final path segment). 
- Jim The "principle of regularity" states that if a moved resource is moved to the end of the ordering in some cases, it is more regular for it to be moved to the end of the ordering in all cases, and not make the behavior dependent on whether the destination collection is the same as the source collection. 
For folks that expect regularity, it will be "less astonishing" for the behavior to be regular, and not special-cased in the way you suggest. 
Note this just explains my rationale. 
I personally don't have a strong preference either way. 
Cheers, Geoff I'm not sure I understand the objection the Geoff raises (i.e., I don't see what the potential problems might be). 
IMO, the principle of least astonishment applies here. 
If a resource has a given name (final path segment) in a collection, and then is given a new name (final path segment), a user would expect that resource to keep its current position, unless the ordering explicitly depends on the value of the final path segment. 
So, I'm with Lisa, I think some additional language here would be good (MUST preserve position for MOVEs that only change final path segment except when the order semantics explicitly depend on the URL or final path segment). 
- Jim Yes. 
To summarize the possible variations: 1) specify that a MOVE inside a collection does not add a new member - in this case a "rename" operation won't change ordering, but will be completely inconsistent with the cross-collection MOVE (where a new member *is* added and thus the Position header semantics apply) 2) specify that a MOVE inside a collection removes the old and adds a new member - consistency with cross-collection MOVE operation, but ordering will be lost when done by a client that isn't aware of ordering semantics 3) do not mandate a specific behaviour (the current wording) -- in which case we'd still need to decide whether spec needs to be more specific about this being server-defined behaviour. 
I think in doubt we should consider simplicity of the spec as well, therefore leave things as they are and possibly make that more explicit. 
Julian Lisa, I disagree. 
It's simply impractical to list all the things a spec doesn't specify. 
If it's unspecified, readers MUST NOT assume. 
That being said, if the WG thinks that there's a real risk that this particular part may be misinterpreted, we surely can try to clarify (in case we decide that we want this to stay server-defined). 
Julian We actually have two logical operations hiding under the name "MOVE". 
(a) One is a rename within a collection. 
(b) The other is a move (possibly also with a rename at the same time) to another collection. 
I don't think people would expect the same ordering behavior for (a) and (b), since they view them as different logical operations. 
- Jim From: w3c-dist-auth-request@w3.org [mailto:w3c-dist-auth-request@w3.org]On 
Behalf Of Jim Whitehead Sent: Friday, May 02, 2003 10:30 PM Subject: RE: Reminder: WG Last Call on Ordered Collections to Well, actually I *do* assume that MOVE behaves the same regardless the source collection (and I assume so is Geoff). 
To summarize: principles of "least surprise" or "regularity" do not seem to help us here -- they can be used to argue for both positions. 
As this is supposed to become a "proposed" standard only, we may want to delay this decision in order to gather more implementation experience (as far as I know currently there's only one single implementation). 
Therefore, my proposal is to leave this specific point undefined. 
We'd then still need to decide whether the spec should explicitly point out that the behaviour is server-dependant. 
Feedback appreciated. 
Regards, Julian Therefore, my proposal is to leave this specific point undefined. 
We'd then still need to decide whether the spec should explicitly point out that the behaviour is server-dependant. 
There doesn't appear to be consensus on this issue, hence we should leave it out of the spec. 
That said, given that we had discussion on this issue, it makes sense to try and capture some of that discussion in the specification, so that implementors aren't operating in a total vacuum on this issue. 
Minimally, the spec. 
should note that this behavior is intentionally undefined. 
- Jim From: w3c-dist-auth-request@w3.org [mailto:w3c-dist-auth-request@w3.org]On 
Behalf Of Jim Whitehead Sent: Monday, May 05, 2003 6:56 PM Subject: RE: Reminder: WG Last Call on Ordered Collections Therefore, my proposal is to leave this specific point undefined. 
We'd then still need to decide whether the spec should explicitly point out that the behaviour is server-dependant. 
it try OK, can anybody suggest a short paragraph summarizing the situation? 
Regards, Julian OK, here's the text I added to resolve this issue: "Note to implementors: this specification does not mandate a specific implementation of MOVE operations within the same parent collection. 
Therefore, servers may either implement this as a simple rename operation (preserving the collection member's position), or as a sequence of "remove" and "add" (causing the semantics of "adding a new member" to apply). 
Future revisions of this specification may specify this behaviour more precisely based on future implementation experience." 
http://greenbytes.de/tech/webdav/draft-ietf-webdav-ordering-protocol-latest 
.html 
Jim, could you please issue the "immediate call for rough consensus"? 
Julian From: w3c-dist-auth-request@w3.org [mailto:w3c-dist-auth-request@w3.org]On 
Behalf Of Jim Whitehead Sent: Monday, May 05, 2003 6:56 PM Subject: RE: Reminder: WG Last Call on Ordered Collections Therefore, my proposal is to leave this specific point undefined. 
We'd then still need to decide whether the spec should explicitly point out that the behaviour is server-dependant. 
