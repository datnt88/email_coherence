How very odd. 
This message didn't go through the first time, although a brief followup did. 
Let's try again, shall we ... Howard Why are the AST's emitted by the online grammar checkers at the XML Query website different from those produced by walking the formal BNF's manually? 
The former omit a lot of the intermediate productions. 
How come? 
For example using the XPath 2.0 grammar checker at 1 the parser widget emits: |XPath2 | XPath | Expr | ExprSingle | InstanceofExpr | TreatExpr | CastableExpr | CastExpr | UnaryExpr | PathExpr | StepExpr | FilterStep | IntegerLiteral 1 | Predicates - why is this here ?? Parsing the same expression using the XPath 2.0 EBNF (2may03) however should produce the following: XPath Expr ExprSingle OrExpr - so what happened to this? andExpr - and this? 
instanceOfExpr treatExpr castableExpr castExpr comparisonExpr - and this rangeExpr - and this additiveExpr - and this multiplicativeExpr - and this unaryExpr - and this unionExpr intersectExceptExpr - and this valueExpr - and this pathExpr relativePathExpr - and this stepExpr filterStep primaryExpr - and this literalExpr - and this numericExpr - and this integerExpr As well, I get 404's on the two links to the BNF's. 
Best, Howard Query manually? 
When we make the JavaCC/JJTree parser we spec certain nodes as "void" in certain contexts, meaning, they don't have real meaning in the AST, so don't construct them. 
I would like to void more nodes, actually. 
It's really only a means of keeping the size of the tree down. 
-scott Right. 
I actually throw away everything myself except the leaves, which makes it extremely easy to see whether you've actually built the structure you think you have, given a particular query. 
In the extreme case I believe it's the difference between an AST and a parse tree (tho I never remember which is which). 
I just wasn't sure why some of your intermediates were kept and others not. 
Howard Query manually? 
When we make the JavaCC/JJTree parser we spec certain nodes as "void" in certain contexts, meaning, they don't have real meaning in the AST, so don't construct them. 
I would like to void more nodes, actually. 
It's really only a means of keeping the size of the tree down. 
-scott 
