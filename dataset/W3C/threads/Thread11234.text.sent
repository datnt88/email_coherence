In Barcelona I raised the question if it is always possible to define a DTD for Well Formed XML Documents to Tim Bray. 
We couldn?t 
find a quick answer, so Tim asked me toI raise the question here again. 
The problem seems to me, that WF Documents can have an unlimited variety of tree structure. 
The application must be able to handle this. 
The question is in other words: Is it always possible to "upgrade" a WF document to a valid document. 
Yes, it is always possible to define a DTD using the contentspec 'ANY'. 
But this gives no validity information at all. 
The omission of "&amp;" connector makes it harder to define a DTD for arbitrary contents (no I do not want to rediscuss this!!). 
It is impossible to recognize, if a WF document was authored with DTD support, and which DTD it follows. 
The major problem is how to check, that the WF document uses uniform content models. 
To solve this problem, we could define annother class ("well structured") of xml documents. 
Proposal: A document is called "well structured", if there is a DTD and the RMD ist set to 'NONE' or 'INTERNAL'. 
The internal subset must not contain element declarations. 
The DTD must not contain defaulted or fixed attributes (which is the prerequisite for RMD='NONE'). 
This proposal does not add more functionality. 
But id conceptualizes authoring with DTD assistance and ease of processing without DTD. 
Regards/Mit freundlichen Gruessen P.O. Box 30 02 40 D-70442 Stuttgart Germany Regards/Mit freundlichen Gruessen P.O. Box 30 02 40 D-70442 Stuttgart Germany Regards/Mit freundlichen Gruessen P.O. Box 30 02 40 D-70442 Stuttgart Germany On Tue, 20 May 1997 15:08:54 -0400 (EDT) Bernhard Weichel said: You started by asking the question "is there always a DTD?" The answer is yes, as you've just demonstrated. 
And by the only definition of validity that I know, it *does* produce validity information. 
The document matches the DTD; the document is valid. 
Q.E.D. 
Now you seem to be wanting to restrict the question to 'good' or 'real' DTDs. 
I know that Tim leans that way, too. 
You're chasing a chimera. 
There are at least two implementations of grammar generators which will produce something resembling a DTD from an arbitrary well-formed document: the well-known Fred, at OCLC, and a program in Lisp written for a thesis in Oslo (? or was it Bergen?) by S. Solstrand a few years back. 
Her work deserves to be better known, but that would probably require an English translation. 
Whether these programs produce 'real', or 'good' DTDs in the sense that I believe you are subliminally using these terms, I cannot tell you, since I doubt seriously that a meaningful definition can be given that allows 'real' DTDs to be distinguished reliably (formally, mechanically) from DTDs in which every element has a content model of ANY. -C. M. Sperberg-McQueen Deriving a "good" DTD from an instance is exactly the same problem as deriving a DTD from a non-SGML source: i.e., classical SGML document analysis. 
Document analysis is a creative task that could only be replaced by a program that engaged one or humans in a dialog about the document type in question. 
It would probably be possible to capture the basic heuristics used by a some representative set of analysists and thereby create an automated process that would ask useful questions, but there is no way to eliminate the humans from the process except in the most trivial of cases. 
It's also the case that doing document analysis, while a creative act, is, for most cases, not a particularly difficult one, such that there's not a great deal of benefit in going to the trouble of automating it. 
Cheers, E. 
