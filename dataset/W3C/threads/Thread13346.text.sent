There are a lot of applets on the web that could be made more accessible. 
For example, scrolling tickers on the web, where text goes scrolling by. 
You can sometimes click on items to take you to an appropriate place. 
Speaking as a sighted user, I really dislike these and hardly ever bother reading them. 
For blind users they can get even worse... impossible to read... may even monopolize attention of screenreader. 
A typical ticker is an applet with params like param name=msg0 value="Editor sought for Faculty Herald *** \\http://www.temple.edu/news/FHeditor.html" 
Rather than do a custom parser for this particular variety of a ticker, how about an algorithm that simply 1. Lists all names and params of applet 2. any values which "look like" urls, or any portions of applets that "look like" urls, would be converted to links What does "look like" mean? 
In this case, it's easy... anything that starts with http, and/or ends with .html. 
For links that go to directories, so there's no syntactical clue, may not be possible. 
Another example is the ticker at http:www.att.com. 
It has params like between wireless and wireline" data, IP services" Now in this case the params for a particular item are all grouped together but that doesn't have to be the case. 
The key is a naming convention where tag names get repeated, except for the last character, which is a number. 
I see this convention a lot. 
So the next rule is: 3. Look for this pattern: groups of names which are all the same except for last character which is a number. 
read parameters in that order. 
A simpler version of this is to simply sort according to the terminating number, being sure that e.g. 10 cames *after* 1 Other rules 4. If a value looks like a color and colors are same for all, ignore it 5. If value is different for each, so it may be significant, translate to english, e.g. CC0000 is red These sorts of rules could I think be added to tools like the ALT text tools, since the parsing and use is in the same spirit. 
Of course, another approach to these applets is to write them with accessible java. 
But tools would still be needed till all screenreaders or standalong browsers could handle correctly, and all web page authors used accessibility hooks. 
Len Leonard R. Kasday, Ph.D. Universal Design Engineer, Institute on Disabilities/UAP, and Adjunct Professor, Electrical Engineering Temple University Ritter Hall Annex, Room 423, Philadelphia, PA 19122 kasday@acm.org 
(215} 204-2247 (voice) (800) 750-7428 (TTY) snip The things you mention shouldn't be too difficult to implement in the access gateway but I have rather a lot of work on my hands at the moment. 
I'm not sure if your experience of applet parameters is as broad as there is (the general case scenario would be to analyse the Java itself and thus solve the halting problem) and I'm not sure if the benefit gained by making these parameters accessible would justify the effort put in. 
Every applet I've ever met is not worth the bandwidth it takes up and I just zap 'em. 
And I tend to give a low priority to this kind of thing because it seems so relatively unimportant. 
Regards -- Silas S Brown, St John's College Cambridge UK http://epona.ucam.org/~ssb22/ 
"Never be anxious about the next day, for the next day will have its own anxieties" - Matthew 6:34 "I try to take one day at a time, but lately several days have attacked me at once" - Paul Denegri Hi, But even for applets other than the scrolling ticker, I suggest that for many applets, it will be useful to list the names and values of the params, at least params that are text or url's. 
This is because applets used by non-programmers will be cannned effects populated with a list of easy to enter params, like names and colors, not hexidecimal equivalents of a set of bits. 
I can't find the applet at Temple University but please try the AT&amp;T site with the gateway now and see if it's any help. 
(Please use the www.accu.org 
gateway as the others might not have updated themselves yet and the one on my machine has altifier; you probably only want to test one thing at a time.) Here is the code I put in, in case you're interested. 
(Of course there is other stuff, like the extra option on the form, the extra bit in the help text and the initialisation of processParams in the query decoder, but you get the idea.) if(noApplets &amp;&amp; processParams &amp;&amp; !stricmp(theTag.getName(),"PARAM")) { const char* v=theTag.getAttribute("VALUE"); 
if(v) { if(!strnicmp(v,"http://",7)) { HTMLTag tag2("A"); tag2.addAttribute("HREF",v); processTag(tag2,htmlLineInput); theEnvironment- h_fputs(v); processTag("/A",htmlLineInput); theEnvironment- h_puts(" BR "); } else if(strchr(v,' ')) { // It's probably text theEnvironment- h_fputs(v); theEnvironment- h_puts(" BR "); Regards -- Silas S Brown, St John's College Cambridge UK http://epona.ucam.org/~ssb22/ 
"I know of no way of judging the future but by the past" - 18th century American statesman Patrick Henry Neat! Yes, that rendered the scrolling ticker at http://www.att.com accessible. 
For this particular applet one could apply some ad hoc rules to make it more compact. 
Right now it's rendered as AT&amp;T WorldNet Service growing faster than the industry average [http://www.att.com/press/item/0,1193,343,00.html] [http://www.att.com/press/item/0,1193,343,00.html] 
In this special case, you could make the text "AT&amp;T Worldnet..." a link with the URL on the second line, and discard the third line. 
However, this means we're guessing the semantics and gets away from the simple algorithm of just listing the applet params. 
It would take some more experiments to find out whether guessing semantics helps or hurts. 
As for why you didn't see a ticker at http://www.temple.edu 
That's a version that contains frames and a scrolling ticker. 
The web access gateway however goes to the noframes version, which doesn't have a ticker. 
So I guess at this point it doesn't handle frames? 
Len But even for applets other than the scrolling ticker, I suggest that for many applets, it will be useful to list the names and values of the params, at least params that are text or url's. 
This is because applets used by non-programmers will be cannned effects populated with a list of easy to enter params, like names and colors, not hexidecimal equivalents of a set of bits. 
Leonard R. Kasday, Ph.D. Universal Design Engineer, Institute on Disabilities/UAP, and Adjunct Professor, Electrical Engineering Temple University Ritter Hall Annex, Room 423, Philadelphia, PA 19122 kasday@acm.org 
(215} 204-2247 (voice) (800) 750-7428 (TTY) It does. 
The default behaviour is to linearise all the frames, but you can also choose to get it to leave them untouched. 
The problem was that www.temple.edu is actually now a no frames site, and I hadn't thought of following the link to the frames version. 
Anyway, unfortunately the gateway didn't work because the URLs were not as separate parameters but embedded in the value with two backslashes. 
I'm not sure whether to try and parse this kind of thing or not; it seems a little special-case. 
If it's any help I could attempt to write some code that recognises a URL in plain text when it sees one (like mailer programs do), but this still wouldn't get rid of the backslashes. 
(Only I can't do anything now because I'm a bit loaded down.) You're right there's not that much I can do about the duplicates on AT&amp;T I'm afraid. 
I can look for duplicate URLs no problem, but it's possible that in some circumstances they will actually be wanted and it seems too risky. 
Regards -- Silas S Brown, St John's College Cambridge UK http://epona.ucam.org/~ssb22/ 
"Never be anxious about the next day, for the next day will have its own anxieties" - Matthew 6:34 "I try to take one day at a time, but lately several days have attacked me at once" - Paul Denegri Actually, www.temple.edu is a frames site. 
Here's the result of GETing the page using a telnet incantation $telnet www.temple.edu 
80  temp GET / HTTP/1.0 (terminate with extra carr return) Here's temp: 1 Trying 155.247.166.60... 2 Connected to www.ocis.temple.edu. 
3 Escape character is '^]'. 
4 HTTP/1.1 200 OK 5 Server: Netscape-Enterprise/3.5.1C 6 Date: Wed, 17 Feb 1999 13:58:55 GMT 7 Content-type: text/html 8 Last-modified: Tue, 25 Aug 1998 15:30:35 GMT 9 Content-length: 1699 10 Accept-ranges: bytes 11 Connection: close 12 13 HTML 14 HEAD 15 16 TITLE Temple University /TITLE 17 18 !-- 
Date: Tuesday, Monday, December 22, 1997 -- 19 20 /HEAD 21 22 23 frameset cols="45,*" border=0 As you can see, the page has frames and, furthermore, the header doesn't redirect the browser to a new location (which I thought may have been the problem). 
So I don't know why your software is thinking its a no-frames site. 
BTW, the page has a snytax error, viz. 
two /frameset tags. 
Could that be the problem I wonder? 
Len Leonard R. Kasday, Ph.D. Universal Design Engineer, Institute on Disabilities/UAP, and Adjunct Professor, Electrical Engineering Temple University Ritter Hall Annex, Room 423, Philadelphia, PA 19122 kasday@acm.org 
(215} 204-2247 (voice) (800) 750-7428 (TTY) Actually it did work. 
When I went to and input and did not check the "disable all ..." It showed the url's in the java applet as separate links, just as it should. 
This was viewing it in netscape navigator 4.06. 
Although that doesn't seem to be any magic in netscape: when I look at the source there are indeed A ... href="http:// etc. 
Maybe you made this improvement after you wrote this email. 
Anyway, looks fine to me. 
BTW, the A... 's contain onMouseOver="window.status='etc... What are they for? 
Len Leonard R. Kasday, Ph.D. Universal Design Engineer, Institute on Disabilities/UAP, and Adjunct Professor, Electrical Engineering Temple University Ritter Hall Annex, Room 423, Philadelphia, PA 19122 kasday@acm.org 
(215} 204-2247 (voice) (800) 750-7428 (TTY) Here's the result of GETing the page using a telnet incantation Was this telnet attempt from within Temple University itself? 
It seems to be responding differently depending on where the request is coming from, or something. 
I did exactly the same thing and here is what happened: telnet www.temple.edu 
80 Trying 155.247.166.60... Connected to www.ocis.temple.edu. 
Escape character is '^]'. 
GET / HTTP/1.0 HTTP/1.1 302 Moved Temporarily Server: Netscape-Enterprise/3.5.1C Date: Wed, 17 Feb 1999 15:15:42 GMT Location: http://www.temple.edu/temple/ 
Regards -- Silas S Brown, St John's College Cambridge UK http://epona.ucam.org/~ssb22/ 
"Better is the end afterward of a matter than its beginning" - Ecclesiastes 7:8 On www.att.com yes, but not on the Temple site I'm afraid. 
www.att.com has the URLs in separate parameters, whereas Temple embeds them in the same parameters as the text. 
Normally when a sighted user moves the mouse over a link, the status window displays the URL that the link points to. 
If that link has been redirected through the gateway, the URL will be awfully long (including all the options etc) and would not fit in the status window. 
The onMouseOver stuff makes it look like it's not redirected, except I put the word "Access" in just to make sure there's no confusion. 
It turns out that most of the people using the gateway around here are fully sighted Japanese (and a few Chinese) who want to look at those pages without needing the fonts (the gateway can substitute a load of gif files and handle the encoding detection automatically). 
And then there are one or two sighties who use it just because they like their paragraphs indented rather than a line left between them. 
Also, I must admit, I've used the status window before. 
I do have partial sight and I don't always want to work quite like totally blind people do; this is the advantage of having something that is configurable. 
Regards -- Silas S Brown, St John's College Cambridge UK http://epona.ucam.org/~ssb22/ 
"He that is slow to anger is better than a mighty man, and he that is controlling his spirit than the one capturing a city" - Proverbs 16:32 AH HA! 
You are right! 
I was getting it from inside Temple. 
You were seeing something different than me cause you are getting the 302 redirect. 
So this seems to fall outside what WAG would want to handle. 
I'm going to find out why Temple is doing this BTW. 
So Here's the result of GETing the page using a telnet incantation Leonard R. Kasday, Ph.D. Universal Design Engineer, Institute on Disabilities/UAP, and Adjunct Professor, Electrical Engineering Temple University Ritter Hall Annex, Room 423, Philadelphia, PA 19122 kasday@acm.org 
(215} 204-2247 (voice) (800) 750-7428 (TTY) 
