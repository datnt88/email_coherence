<s> Chris,  </s>
<s> Specifically, I find the idea that we can "design a simple core protocol to address these problems" is something of a tall order.  </s>
<s> You may be right.  </s>
<s> But what if we can?  </s>
<s> Just because it might be hard does that mean we shouldn't try?  </s>
<s> I wouldn't say we shouldn't try "just because...". (I might argue that given a choice between useful goals, I'd pick one more likely to succeed.)  </s>
<s> I'll note one ad-hoc attempt at such a "core protocol" was published as draft-earhart-ap-spec-01.txt (January 1998).  </s>
<s> Scanning through that, and re-reading your original proposal message, has helped me to focus some issues.  </s>
<s> I don't think our views are miles apart here.  </s>
<s> A passage from "draft-earhart-ap-spec-01.txt" particularly struck me: It is recognized that not all application level protocols will fit into this model; TELNET is a good example of a protocol that does not belong in this framework.  </s>
<s> Nevertheless, it is believed that this is of sufficient utility to enough protocols to be worth advancing as an IETF standard.  </s>
<s> For me, this begs the question: what are the characteristics of these "enough protocols" for which such a framework is maybe "of sufficient utility"?  </s>
<s> You have already enunciated part of the answer I was seeking: "based on the connection-based stateful client-server structure ..." What are the key components of "draft-earhart-ap-spec-01.txt"?  </s>
<s> I perceive: (1) a "session state" model dealing with initiation, authentication, termination and application-specific states.  </s>
<s> (2) a framework for declaring server capabilities (3) a request/response framework, with tagging to allow overlapped operations.  </s>
<s> (4) a framework for unsolicited status updates (5) some syntax elements for construction of requests and responses, including some formats for simple and structured data (6) some core capabilities, request verbs, response codes In my view, this could be seen as a small number of separate work items: (a) a small core protocol document could cover (2)-(5).  </s>
<s> (b) A separate document could cover the basic initiation and authentication framework, associated server states, request verbs, response codes, etc.  </s>
<s> (c) A guidelines document could describe how to build application protocols using (a) and (b), together with other considerations that should be addressed by a protocol specification.  </s>
<s> (I think this could usefully draw upon your -protocol-design- document.)  </s>
<s> Some additional random thoughts I have: - It would help if there were clear mechanisms for transferring MIME objects with both requests and responses.  </s>
<s> On my brief scan, it's not clear how to do this with the -ap-spec- framework.  </s>
<s> (I don't mean to necessarily adapt the protocol for MIME specifically, just make it clear how MIME (and maybe other arbitrary objects) are transferred within the overall framework.) - If each application protocol based on the framework were identified by its own capability, any server would automatically be completely self-identifying in that respect (see also section 6 of -ap-spec-).  </s>
<s> - Should the request framework have any explicit provision for using URIs to identfy objects?  </s>
<s> - I'd personally like to see a development of the RFC 1893 status code framework for more widespread use (providing language-neutral status indicators).  </s>
<s> - I do think that there are some issues of interaction beytween server state and overlapped requests that must be carefully considered (or flagged for application designers to carefully consider).  </s>
<s> E.g. what happens if a LOGOUT is presented while some other command is being processed?  </s>
<s> To summarize: In practice, I don't think a core-protocol plus application-specification would be a complete application protocol definition.  </s>
<s> References to other components (e.g. MIME, TLS, SASL, RFC1893, S/MIME, etc.) would, I think, be the norm.  </s>
<s> This is the respect in which I saw protocol components being important; I now perceive that you did not mean to exclude this, just not take these other protocol elements into scope.  </s>
<s> I would still like to see some separation of concepts in the core components, as indicated above, but not fragmentation.  </s>
<s> In preparation for undertaking such a design, I do think it would be helpful to enumerate some commonly-used current application protocols and note their strengths and weaknesses in practical deployment.  </s>
<s> I also think that work from other groups like the HTTP NG effort should be examined for suitability before embarking on yet another protocol design effort.  </s>
<s> I hope you find this constructive, #g Graham Klyne (GK@ACM.ORG)  </s>
<s> While I applaud the general intent, I echo other concerns that the goal is too ambitious.  </s>
<s> Specifically, I find the idea that we can "design a simple core protocol to address these problems" is something of a tall order.  </s>
<s> What I do think may be achievable is to identify a range of problems, and then make recommendations about solutions to these.  </s>
<s> I think that the term "core protocol" is misleading in many ways.  </s>
<s> We really don't want a complete protocol in and of itself.  </s>
<s> Seems to me that you could organize it into two distinct classes of thing that would be described: 1.  </s>
<s> A general set of design guidelines for application protocols.  </s>
<s> This would include things like binary vs. text commands and payload, encoding schemes, specification syntaxes, etc. 2. A set of protocol components that you can assemble into a specific protocol.  </s>
<s> This would include many of the things that Chris had in his message like authentication, ACL's, capabilities/extensions, etc.  </s>
<s> Not unlike a set of protocol subroutines or object classes.  </s>
<s> The list of accepted components can be quite small to begin with.  </s>
<s> Cheers. Steve Hole Execmail Inc.  </s>
<s> In one sense, I like the idea.  </s>
<s> Personally, I'd have no trouble hunting through RFCs for good components to collect together and write up in a new protocol.  </s>
<s> But I don't mind designing protocols directly on top of TCP, either.  </s>
<s> We really need a one-stop-shopping "core protocol" so one can define a new protocol by saying "take the core protocol and AUTH command from RFC XXXX then add the following commands and run on port P". Otherwise people will just say "add these 20 methods to HTTP and you've got whiz-bang protocol" because that would be so much easier than collecting together components and subtle design choice options from several RFCs into a coherent protocol.  </s>
<s> - Chris  </s>
