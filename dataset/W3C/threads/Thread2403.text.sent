This memo was discussed at previous working group meetings. 
The issue that WebDAV and RSVP have assigned status codes for HTTP and others want to has arisen again. 
Unless there are any objections, we will propose that this draft be moved forward to Proposed Standard. 
Larry Larry Masinter: I object. 
The draft defines a 3-digit status code space. 
There is a significant risk that a 3-digit status code space will be too small to cater for all future activities by IETF groups and individuals, which would leave IANA in the difficult and unpopular position of having to manage the allocation of a scarce resource. 
The draft should allow for status codes of more than 3 digits, and should allow IANA to allocate large blocks of status codes (say blocks like 456000 - 456999) to individuals. 
Failing that, it should at least give sound reasons why a restriction to 3 digit codes is absolutely necessary. 
Koen. 
Whether at least existing HTTP implementations can possibly use more than three digits depends strongly on implementation details: a) If the implementation takes the code, and then performs a MOD 100 operation, to get a subcode for the code type, then it makes sense to allow for more than three digit status codes. 
b) If existing implementations just take the first decimal digit, and then switch off of the remaining digits, more than 3 digit status codes are feasible. 
Without some data on whether implementations (particularly proxies) do a) or b), any discussion of more than three digit codes is pretty silly. 
I suspect that a) predominates, but having never implemented a proxy or server, or for that matter, client library, I can't say. 
So implementers, how is the jungle out there??? 
Your editor, - Jim Gettys Jim Gettys: True, but the draft discusses status codes for `HTTP and HTTP-Derived Protocols', and I suppose that for at least some HTTP-Derived protocols, compatibility with the status code parsers of plain http clients will not be an issue. 
And if you really want to send a 5 digit code like 45205 to a http client without prior negotiation, you could always invent some wrapping scheme with responses like HTTP/1.1 299 Extended status code Status: 45205 Epibration complete Content-type: text/html Koen. 
Having a document to vet and register proposed status codes is a good idea -- one that we have discussed in the past. 
Reserving sets of status codes for use by other protocols is a bad idea. 
HTTP status codes need to be thought-out with the rigor of an RFC. 
The draft is insufficient for helping IANA set up a registry. 
Better examples of that are the charset and media type registries. 
HTTP/1.x status codes are three digits. 
Responses are examined for three digits. 
Any more than three digits and the response will be treated as HTTP/0.9. 
When a protocol using HTTP needs a new status code, it can talk about it in the abstract (e.g., 4aa) until a sufficient justification can be put in text and registered for that status. 
There is no need to pre-register codes that might be needed. 
Fewer than 10% of the proposals for new status codes have been accepted, usually because the authors didn't bother to check for an existing status code that already serves their purpose, or simply wanted their own "special" code "just in case", or the proposal faded into dust long before implementation. 
What other protocols not using HTTP want to do with their own status codes is not relevant. 
I suggest they use more than three digits. 
Likewise, it would make sense for HTTP/2+ to use more than three digits (or at least a token with wider range). 
....Roy I basically agree with Roy on this one; don't add more digits to the status-code number. 
One thing that has always bugged me is that an HTTP response carries exactly one status code, and we often have to work hard to figure out which one that should be. 
There are times when it would be better to have a way to communicate multiple dimensions of status information. 
That's why we added the Warning header. 
Maybe we should be encouraging protocols layered over HTTP (such as WEBDAV) to think in terms of adding new headers, rather than new status codes? 
I.e., HTTP/1.1 200 OK DAV-Status: DAV/1.3 3141592 Pie is ready This seems to be a better way of dealing with layering. 
-Jeff I believe that there is not (and will not be) consensus for draft-schulzrinne to move forward in the HTTP working group. 
a) We recommend that new status codes go through standards track b) We recommend that other protocols that wish to layer ON TOP OF HTTP do so by using some other header, in conjunction with existing HTTP headers and warnings c) We recommend that other protocols that are really separate but are not HTTP use other than 3-digit status codes. 
Do these match what everyone's talking about? 
Larry 
