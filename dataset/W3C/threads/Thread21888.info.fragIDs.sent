I'm back from my vacation and would like to do a quick check on the items list posted earlier and listed below. 
I think we are ready to move quite fast toward publishing the DOM TS if we allow for the following: 1. 
Some period to sanity check and edit existing transforms and build files. 
2. A general discussion as to whether ANT will be used as the primary tool for builds. 
3. A general discussion as to whether people wanting to download the files themselves should be able to do this to both build the DOM TS as well as write their own harness around it. 
4. Release of NIST tests, sanity check, editing, being done. 
5. Production of documentation, being done. 
I think all other issues that have been raised have been solved. 
Please advise if this is not the case. 
Kind regards, /Dimitris 
I presume that most people, like myself, will have some weeks off this month, so it seems to be a good idea to get a picture of the current status. 
Below you'll find a list of action items with status indicators. 
Please remind me if I have forgotten anything. 
(W3C) CVS rights to DOM TS Group. 
Have all who should received information? 
(Dimitris) I have the update on the process document [done, published at (Dimitris/All) also I'm looking over both the schema and XSL to generate it to sanity check and document further. 
In addition, I want to start putting material on the DOM TS page at W3C, so please have one final go at Curt's and Mary's submitted material before I do so. 
[Unfortunately my timeframe has been a bit limited due to finishing off before the summer. 
I should be able to send some comments soon, however] [dd] Let's set aside some time to do this now as Curt has long awaited comments. 
I'll do this during today and tomorrow. 
(Dimitris/Mary) From the DOM WG meeting, we have a wish for a simple harness to generate straightforward results of at least the ECMA tests. 
Mary, could we look at your older solution? 
[Mary? 
Could I have your input on this?] [dd] There has been comments that we should look into a solution built from scratch. 
Has anyone looked at this? (Mary) Given that we do indeed finalize this fairly soon, how long will it take us to translate the existing tests? 
Mary? 
[Being done, do we have a date on this?] [dd] It would be really good if we could have an indication of when the tests will be ready for sanity checking in order to be released. 
(Dimitris/Fred) We have Fred who's volounteered to write the documentation together with me. 
I look forward to start doing this once we've finalized the schema. 
[Should we coordinate work on a tutorial, Fred?] [dd] I'll publish the DOM TS FAQ and start work on the tutorial as well as the architectural/technical equivalent to the Process Document (which will be a W3C document) (Dimitris/Curt) We need to look into the resolution/status options for the submitted tests, eg. by adding a pending option while a test is being investigated by the DOM WG. Also we should decide on whether we submit through a mailig list or SF. [Have we dropped the idea to use SourceForge for _issue tracking_? 
If not, I should include this to the domconftest. 
It would also simplify packaging, building only with stable tests] [dd] I've added a 'status' option to the domconftest project with 'Valid test', 'Investigated by DOM WG' and 'pending' as possible options. 
(Philippe) to create a www-dom-ts-submissions@w3.org mailing list. 
[done] (Curt/Mary/Dimitris) Rewrite styelsheets for code generation (Java and ECMA primarily, others welcome) (NIST for the Java one, ECMA open) [Java published, has anyone started work on the ECMA one?] (Curt, Dimitris?) Work on the details for test suite packaging [do we have more input that what has been on the list already?] 
[dd] Done as far as I can see, I have nothing to add to the discussion from the previous weeks, anyone else? 
(Mary/Dimitris) Produce a test matrix [Pending on my comments on HTML] [dd] I take it that you finalized it, Mary? 
Sorry for not taking part in this. 
(Mary) Produce a list of semantic requirements (Mary, is connected to the test matrix) [ready by now?] Kind regards, /Dimitris 
files. 
I don't expect the Java transform to be perfect, however I think that when we start to walk through the NIST contributed tests, we will quickly identify latent issues. 
I have worked a little on a ECMAScript transform but haven't written enough supporting code to run the few tests that I have generated. 
Haven't done anything on Python. 
I thought it was the most appropriate tool. 
What alternatives would you like to suggest? 
The W3C CVS has anonymous read-access so unless we intentionally want to prevent people from accessing the source, they are technically capable of doing it. 
Since the most significant audience for the test source and harnesses are parser authors, I don't think that it is necessary to provide an easier way to get at the source. 
The standoff over using the W3C Software License was explicitly to allow legitimate deriviative works. 
I only made my contributions after I thought this issue was resolved. 
Reversing that decision and making the tests or harness non-public would be detrimental to the effectiveness of the suite and would do seriously bad things to my attitude. 
I understand NIST's desire not to publish anything that isn't almost perfect. 
But it is impossible to determine any coverage issues and discourages anyone else from trying to contribute tests until the NIST tests are committed to the CVS (which will hopefully happen shortly). 
I'm sure someone posted a link already, but I must have missed it. 
Where should I go for source code for this? 
Is it in Java or some language that's better supported on Linux? 
Thanks! 
-Fred Fred L. Drake, Jr. fdrake at acm.org PythonLabs at Zope Corporation 
