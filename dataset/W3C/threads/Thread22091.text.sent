Date: Fri, 22 Feb 2002 12:11:44 +0100 www-dom-ts@w3.org 
From: Dimitris Dimitriadis dimitris@ontologicon.com Message-Id: F4BBA0C2-2784-11D6-880D-000393556882@ontologicon.com Subject: Re: Concerns regarding the W3 Document Object Model (DOM) Conform ance Test Suites Most of these issues are sure to be brought up at the upcoming DOM WG F2F meeting next week in Cannes. 
In them meantime, as I'm travelling (first back home, then to Cannes) please provide the list with issues so that I can take them up with the WG. comments inlined In addition, several of the test documents use an external DTD and fall under the classification as standalone="no" documents since they use default attribute values, etc. See "Extensible Markup Language (XML) 1.0 (Second Edition) Section 2.9. 
Section 5.2 "Using XML Processes" states: In bullet two: quote For example, a non-validating processor may not normalize [p.29] attribute values, include [p.40] the replacement text of internal entities, or supply default attribute values [p.28], where doing so depends on having read declarations in external or parameter entities. 
/quote In the final paragraph of this section: quote Applications which require facilities such as the use of default attributes or internal entities which are declared in external entities should use validating parsers. 
/quote Requiring the use of a validating Parser in the DOM TS is inappropriate since this is not required in the DOM Specifications themselves. 
The test suite does not require the use of validating parsers. 
Any test that is only applicable to validating parsers can be marked so that it omitted when run with a non-validating parser (or a parser that supports validation but with it disabled). 
There are many tests that depend on the reading of DTD's for default attribute values. 
The common interpretation has been that providing default attribute values is not optional even when the parser is not validating and many implementations pass these tests when not validating. 
If the DOM WG states that that behavior is optional, then the tests that depended on that optional behavior can be marked as conditional. 
[dd] This is one of the issues that are sure to be brought up for clarification next week. 
I am concerned about the following DOM2 core tests which appear to require that the implementation use a validating parser since the tests assume that the reading of external DTDs are supported: getAttributeNS01.html 
getElementByID01.html 
hasAttribute02.html 
hasAttributeNS04.html 
namespaceURI01.html 
removeAttributeNS02.html In my opinion these tests should be made optional and marked as such, since they effectively require a validating parser as described above. 
Even if some implementations have hacked default attribute values without a validating parser, that is no reason to require such hacks of other implementations. 
I tried searching the www-dom-ts archives regarding the issue of requiring a validating parser and/or default attribute values from external DTDs, and this message (that I am replying to) appeared to be the latest on the subject. 
Was the issue brought up during the 2002 DOM WG Meeting in Cannes as [dd] indicates, and if so, what was the resolution? 
Or has this been discussed in a more recent thread? 
Thanks, Tantek Tantek ?elik 
tantek@cs.stanford.edu 
Tasman Development Lead, Microsoft Corporation tantekc@microsoft.com 
Representative to W3C CSS and HTML working groups I logged bug http://www.w3.org/Bugs/Public/show_bug.cgi?id=238 in response to your message. 
The resolution was communicated in L1 Core tests were marked as only appropriate for validating parsers. 
Since the resolution came as part of the release cycle for the DOM L1 test suite, it is very likely that the corresponding fixes were not done for the L2 Core tests. 
My response to the WG resolution was mention any L2 tests. 
That thread started a lengthy discussion, but I don't believe it changed anything. 
I would suggest a similar approach to that undertaken with the L1 tests. 
Find a processor that passes all the tests as currently written (probably Xerces-J), (temporarily) remove the default attribute values from the DTD's and mark the tests that fail are requiring validation. 
mark the tests that fail as requiring validation. 
In this case there will be no test that attribute defaulting/normalisation works at all; it is my understanding that a non-validating parser should still respect attribute declarations given in the internal subset. 
Why not simply copy the significant !ATTLIST s from the DTD into the internal subset of staff[NS].xml? 
This is how I persuaded my non-validating implementation to pass L1/L2 Core. 
Andrew Clover mark the tests that fail as requiring validation. 
I'd consider that a substantial enough change to a test that it should be introduced as a new test instead of a tweak to an existing test, especially since any change to staff.xml is really a change to almost all tests. 
