Greetings. 
The IPsec WG mailing list now has a discussion about the 
usefulness and feasibility of an application-layer API to IPsec. 
This 
would allow an application to see if it is running over IPsec and, if 
so, what kind of authentication was used (possibly to allow 
authorization in the application). 
The discussion just started; applications folks might want to join in. 
You can see the archive at http://www.vpnc.org/ietf-ipsec/mail-archive/ . 
Information on subscribing to the mailing list can be found at http://www.vpnc.org/ietf-ipsec/ . 
--Paul Hoffman, Director --Internet Mail Consortium 
...and part from having you joining that discussion, I am as AD interested to know if you are interested in something like that? 
paf 
I was tempted to delete the last word. 
ptrace(2) comes to mind. 
Seriously, I love API work, but we do very little of it (v6, ldap, and what 
else?). 
The proposal is ipsec-specific, the problem is more general, and we've not had a go at the more general problem in a decade (host requirements), having left that in the POSIX, XPG and Redmond sets of hands. 
What would interoperate? 
What two independent implementations would do what when independently discovering that each is "running over foo ", on the same, or distinct, and possibly dissimilar and not necessarily interconnected hosts? 
Eric (author, XPG/1, XPG/4.2, and sundry other inconsequential bits of nonsense) 
I basically think that IPsec is nearly useless without an application-layer API, but the API needs to not only make applications aware of whether 
a security association has been established (along with the credentials so that the application can evaluate them for itself) but also allow 
the application to control the credentials that are used when establishing SAs. 
Keith 
Creating secure WANs is a pretty large market... 
Right 
That's assuming that the API allows SA creation. 
I think that is a 
separate API from "am I already covered", and one tha will be much harder to design. 
--Paul Hoffman, Director --Internet Mail Consortium 
granted. 
perhaps I should have said "nearly useless to applications". 
(of course, just because something has a large market doesn't necessarily mean it's useful) 
granted that it will be much harder to design, but the idea that the end hosts can decide how to set up an SA suitable to authenticate to applications, without the applications being involved, strikes me as extremely dubious. 
which is why I've never felt like IPsec was very valuable without an application-layer API. 
Keith 
And one possible use of this is API is for EXTERNAL SASL mechanism, implemented on top of IPSec. 
Alexey 
This makes a lot of sense. 
Is anyone here in the Apps Area interesting in really persuing it? 
If not, I don't expect it to move forwards. 
There are only two or three people in the IPsec area who expressed any interest in doing the real work (Bill Sommerfeld and Steve Bellovin). 
--Paul Hoffman, Director --Internet Mail Consortium 
The main problem with application use of IPSec is that it crosses the application/OS boundary. 
Crossing such boundaries is tricky -- it places additional constraints on vendors, release schedules, and so on. 
Remember, applications already have TLS/SSL. 
And while TLS/SSL has many disadvantages in terms of performance, applicability to UDP, and so on, it has one truly overwhelming advantage: It is entirely within the application's control. 
Application developers spend a lot of their time working around OS differences, bugs, and other issues, and are underwhelmed by the prospect of additional issues in this area. 
Unless IPSec has a really good story to tell appliccations about the advantages that will accrue from its use as well as some indication that it will actually deploy in a fashion that's usable by applications, I despair of getting applications people fired up about it. 
Ned 
If the good story exists, I suspect it is in the ability to use the same authentication credentials be verifiable by the endpoints as well as the network. 
i.e. the same IPsec credentials could be used at multiple points in the path from end to end. 
ideally, one set of credentials would suffice for the entire path, even though it crossed multiple administrative realms. 
my admittedly weak understanding of this indicates that it would require making cross-realm authentication (and cross-realm trust) scalable. 
which sounds more like a research problem to me than an engineering exercise. 
but I'd love to hear otherwise. 
Keith 
I'm new to the IPSEC world, but 'm looking for a generic IPSEC API. 
Is there such a thing? 
If not, is this a good topic for ietf working group? 
Thanks! 
