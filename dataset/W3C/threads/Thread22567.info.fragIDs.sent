Given that the bindings _are_ freely available, though not freely modifiable, I don't see that this "discriminates against" open source. 
It's 
equivalent to the fact that said source is written in a particular programming language, which folks must adhere to in order to productively share code; it's part of the standard environment that the open source developers are buying into in order to cooperate effectively. 
And it doesn't even get in the way of producing derivitive APIs... as long as you derive them properly, by subclassing or by having objects implement multiple interfaces, rather than by trying to change the standardized DOM API directly. 
You might want to talk to the folks at Apache and ask them how they're handling it. 
I suspect that they are either (a) telling folks to obtain these interfaces separately before compiling, or (b) modifying their open 
source agreement to explain that some of what they ship is open source/modifiable, and some is exposed source/not-modifiable, and it's the hacker's responsibilty to read each file's header and understand which is which. 
"Open source" doesn't have to be an all-or-nothing affair. 
There are multiple open-source agreements running around; the OSD is only one instance thereof. 
If the one you're using is really preventing you from 
doing something reasonable, it's time to consider adjusting it. 
Joe Kesselman / IBM Research 
However, modified versions of the DOM bindings may be created provided that: the W3C copyright notices are not removed; a comment is added that the modified binding does not conform to any W3C standard; in the case of the Java binding, the package names are changed to be no longer in the org.w3c package. 
Interesting proposal. 
Note that the same result can usually be accomplished (in Java, at least) by declaring a new set of interfaces, in the new package, which inherit from and override/extend the standard DOM API. 
That avoids needing to 
copy/alter the existing W3C bindings, and makes the relationship between your subclass and the standard DOM explicit. 
This approach might not work in all languages. 
But it seems to offer a way out of the current collision while we wait for the lawyers to ponder the Meaning Of Open. 
Joe Kesselman / IBM Research 
"When I use a term", said Humpty Dumpty grandly, "it means what I intend it to mean, neither more nor less." Specifically, when I say "open source" I mean "compliant with the OSI Open Source Definition. 
For legal reasons, the term cannot be trademarked, but "open source" surely does not mean "you can read the code" no matter what certain journalists think. 
Apache is written in C/C++, for which there is no official DOM binding. 
The OSD is not an open-source (license) agreement, but a statement about what a license has to provide in order to be open source. 
John Cowanhttp://www.reutershealth.comjcowan@reutershealth.com Schlingt dreifach einen Kreis vom dies! 
/ Schliess eurer Aug vor heiliger Schau Den er genoss vom Honig-Tau / Und trank die Milch vom Paradies. 
-- Coleridge (tr. 
Politzer) 
Unfortunately not. 
You cannot load a subinterface without loading its superinterface(s), so they become part of the source of the program.\ 
John Cowanhttp://www.reutershealth.comjcowan@reutershealth.com Schlingt dreifach einen Kreis vom dies! 
/ Schliess eurer Aug vor heiliger Schau Den er genoss vom Honig-Tau / Und trank die Milch vom Paradies. 
-- Coleridge (tr. 
Politzer) 
However, modified versions of the DOM bindings may be created provided that: the W3C copyright notices are not removed; a comment is added that the modified binding does not conform to any W3C standard; in the case of the Java binding, the package names are changed to be no longer in the org.w3c package. 
... and conformant with the OSD, I think ... though I missed the original letter. 
Alternative proposal: type in the "org.w3c.dom" interfaces by hand, don't use the sources W3C provides. 
In effect that's what 
is done for conforming to POSIX, ANSI-C, and ANSI-C++ standards (so far as I know). 
That's only "the same result" at a technical level, when the interface is intended to be compatible ... things like "improved" APIs (lighter weight, perhaps server oriented, removing perceived misfeatures) are precluded. 
- Dave 
Doesn't work. 
By hand or by computer, you are creating a derivative work, which is forbidden by the license. 
You think you can create 
David's Own Version of some novel because you are willing to type in the original by hand and mutate that? 
Not likely. 
John Cowanhttp://www.reutershealth.comjcowan@reutershealth.com Schlingt dreifach einen Kreis vom dies! 
/ Schliess eurer Aug vor heiliger Schau Den er genoss vom Honig-Tau / Und trank die Milch vom Paradies. 
-- Coleridge (tr. 
Politzer) 
That seems extreme, but neither of us is a lawyer and sometimes licences have had major bugs. 
I think that your interpretation would preclude implementations in C, C++, Python, and other languages. 
After all, since the spec defines interfaces, all implementations must be derivative. 
Yet only the Java binding actually includes code for the interfaces. 
- Dave 
