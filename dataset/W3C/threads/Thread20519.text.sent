Thank you so much for providing us with the Amaya. 
Can the programme replace e.g. the specific Danish letters with the equivalent entities like &amp;aelig;, &amp;oslash;, and &amp;aring;? 
Johs. 
Lind, Spurvev?nget 41, DK 6710 Esbjerg V. We plan in the next release to let people choose the output encoding (us-ascii, iso-8859-1, UTF-8 when the document is saved. 
If the encoding is us-ascii, Danish letters will be exported as entities. 
Somewat related to the question: is it possible with some kind of backspace entity to force accents on letters which are else not represented as accented in iso-latin1? 
(I don't find any backspace entity in the HTML4.1 reference). 
What I hint at is a 'c' with an accent aigu which I need for a song title with Czech lyrics. 
Alternatively is it possible to locally force another iso-latin character set enabling that kind of characters and have the thus coded character accordingly displayed by a browser? 
I would prefer tricks like that rather than introducing unicode. 
Regards Christian Mondrup, Computer Programmer Scandiatransplant, Skejby Hospital, University Hospital of Aarhus Brendstrupgaardsvej, DK 8200 Aarhus N, Denmark [DJW:] In theory, you can use UTF-8 (-16 etc) or numeric character entities to introduce the Unicode characters for non-spacing accents (or the actual accented characters). 
I'd be surprised to find a browser that supports this, although it might be worth trying IE 5.5 or IE 6 using the full Unicode font from Office 2000. 
In almost all cases, using the Unicode accented characters is going to be a better approach than using non-spacing accents. 
--------------------------- DISCLAIMER --------------------------------- Any views expressed in this message are those of the individual sender, except where the sender specifically states them to be the views of BTS. 
Apologies for sending this in UTF-8, but it's the best way to show it. 
Unicode has two methods of representing composite characters like: precomposed characters and combining diacriticals. 
The two methods would be used as follows for the character in question: c?? (U+0063 + U+0301; represented as entities as &amp;#x0063;&amp;#x0301;) (U+0107; represented as an entity as &amp;#x0107;) (Note that these are HEXADECIMAL values!) The former is that defined in Normalization Form D; the latter, in Normalization Form C (the preferred form for web documents according the draft of the W3C Character Model I last read). 
In Windows ME, Mozilla 2001052708, IE5.5, and Netscape 4.77 [!] all can manage both forms in UTF-8 (what I tested), though the combination is poorly spaced in the Moz/Net browsers (not surprising). 
In Mozilla and IE (but not Netscape 4.x), entities do work. 
I have managed to get both to work before in Linux with Mozilla (later than M17) with a font that included the correct combining diacriticals characters, though such a font is not currently available; and it might work in Konqueror as well. 
I would prefer tricks like that rather than introducing unicode. 
The suggestion that rather than supporting Unicode-based technologies Amaya should kludge together its own method of supporting only those character combinations that are requested by users is I would think counter to the spirit of standards support. 
Patrick Rourke ptrourke@methymna.com 
