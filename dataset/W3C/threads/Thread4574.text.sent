I am passing this on from one of my users, who pointed out that Saxon's behavior differs from the spec. 
I believe that Saxon is correct and the spec is wrong. 
The referenced statement in the spec is: "For xs:float and xs:double operands, floating point division is performed as specified in [IEEE 754-1985] and INF or -INF is returned if the divisor is zero." 
But I believe that according to IEEE 754, dividing zero by zero gives NaN. 
It would be better not to make normative statements that attempt to precis IEEE 754: it would be much safer if such things were said in notes, so that it is clear the IEEE definition is the normative one. 
Michael Kay [mailto:saxon-help-admin@lists.sourceforge.net] 
On Behalf Of Erik Bruchez Consider this example: This operates a floating-point division. 
With Saxon 7.8, this returns NaN, but the spec does specify that INF and -INF are returned in the case of a division by zero: Is this a bug in Saxon, a bug or imprecision in the spec, or is this implicitly covered by [IEEE 754-1985]? 
-Erik I believe IEEE 754 lets you return NaN or +/- INF. 
See quote below. 
"7.2 Division by Zero. 
If the divisor is zero and the dividend is a finite nonzero number, then the division by zero exception shall be signaled. 
The result, when no trap occurs, shall be a correctly signed INF (the spec has an infinity sign). 
(6.3)" All the best, Ashok [mailto:public-qt-comments-request@w3.org] 
On Behalf Of Michael Kay I am passing this on from one of my users, who pointed out that Saxon's behavior differs from the spec. 
I believe that Saxon is correct and the spec is wrong. 
The referenced statement in the spec is: "For xs:float and xs:double operands, floating point division is performed as specified in [IEEE 754-1985] and INF or -INF is returned if the divisor is zero." 
But I believe that according to IEEE 754, dividing zero by zero gives NaN. 
It would be better not to make normative statements that attempt to precis IEEE 754: it would be much safer if such things were said in notes, so that it is clear the IEEE definition is the normative one. 
Michael Kay -----Original Message----- [mailto:saxon-help-admin@lists.sourceforge.net] 
On Behalf Of Erik Bruchez Consider this example: This operates a floating-point division. 
With Saxon 7.8, this returns NaN, but the spec does specify that INF and -INF are returned in the case of a division by zero: Is this a bug in Saxon, a bug or imprecision in the spec, or is this implicitly covered by [IEEE 754-1985]? 
-Erik I believe IEEE 754 lets you return NaN or +/- INF. 
See quote below. 
"7.2 Division by Zero. 
If the divisor is zero and the dividend is a finite nonzero number, then the division by zero exception shall be signaled. 
The result, when no trap occurs, shall be a correctly signed INF (the spec has an infinity sign). 
(6.3)" Sorry, but how does this quote relate to the question of what result you get when you divide zero by zero? 
Mike Mike: The spec does not say what to do for 0/0. 
That was why I sent the quote. 
Our libraries return NaN in this situation. 
If the dividend is non zero, they return +/- INF. 
I agree that we need to clarify the behavior for 0/0 in the F&amp;O. 
All the best, Ashok From: public-qt-comments-request@w3.org [mailto:public-qt-comments-request@w3.org] 
On Behalf Of Michael Kay Subject: RE: [F+O] Division by zero question I believe IEEE 754 lets you return NaN or +/- INF. 
See quote below. 
"7.2 Division by Zero. 
If the divisor is zero and the dividend is a finite nonzero number, then the division by zero exception shall be signaled. 
The result, when no trap occurs, shall be a correctly signed INF (the spec has an infinity sign). 
(6.3)" Sorry, but how does this quote relate to the question of what result you get when you divide zero by zero? 
Mike 
