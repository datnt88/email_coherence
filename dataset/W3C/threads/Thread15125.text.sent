One area where it is helpful to illustrate, and where it is technically trivially easy in many cases is tables of numeric data. 
Programs to transform these into graphic representations have been available as mass-market software at least since 1990. 
I would suggest that one criteria is that all tables of numeric data are accompanied by a graphic representation. 
At the level of techniques, there is information I have read when I studied this stuff explaining different kinds of graphing techniques, and some results of testing the different ones for usability. 
If anyone has current knowledge and experience some references would be helpful. 
Charles McCN Location: 21 Mitchell street FOOTSCRAY Vic 3011, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) This has been a rather long thread, so I apologize for missing the beginning. 
But what level of conformance is this aspect being considered? 
I can see - on the development side - that this will be one that will be impractical in many cases. 
If an application is designed to dynamically generate a table of data, retrofitting that application to create a graphic on-the-fly would be so costly as to be prohibitive. 
Chris O'Kennon Commonwealth of Virginia Webmaster/ VIPNet Portal Architect www.myvirginia.org 
"When people are free to do as they please, they usually imitate each other." 
One area where it is helpful to illustrate, and where it is technically trivially easy in many cases is tables of numeric data. 
Programs to transform these into graphic representations have been available as mass-market software at least since 1990. 
I would suggest that one criteria is that all tables of numeric data are accompanied by a graphic representation. 
At the level of techniques, there is information I have read when I studied this stuff explaining different kinds of graphing techniques, and some results of testing the different ones for usability. 
If anyone has current knowledge and experience some references would be helpful. 
Charles McCN 134 136 78 22 Location: 21 Mitchell street FOOTSCRAY Vic 3011, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) One way to approach this for retrofitting is to find a way of making it happen on a proxy. 
This is very low cost if pages are generated and then stored (or cached by the server) although there is a potential performance hit that would mean a new design should build in the functionality. 
The paper presented by Max Froumentin and Vincent Hardy shows how to use XSLT to turn some XML data into an SVG histogram: for the following data format: which is simplistic but not terribly so, and an easy pattern to generate from almost any content management system, the following XSLT xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0" will produce a set of columns in an image the right size to contain them. 
The image produced for the sample above is at curious. 
The sizing here is based on linear scales, - logarithmic scales involve a little more work. 
And adding labelling of the table to make it more directly accessible is also a couple of lines of extra work. 
This is explained in the paper - and if you get fascinated there is an explanation of how to do the same for a textual representation of a chess game (the sort of thing you find in Newspapers near the sports and comics section) to have a nice animated view of the game being played. 
This can all be done by passing the page through a proxy after it has been generated, as a last resort that isn't really horrendously hard. 
Or it can be built in to the design to make it much easier. 
Cheers Charles McCN Location: 21 Mitchell street FOOTSCRAY Vic 3011, Australia (or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France) 
