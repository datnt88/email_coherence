The reference to launching and controlling a computer program within a browser from a "first distributed hypermedia document" appears quite frequently within all 10 claims of the patent. 
I'm inferring from other posts and articles that a possible workaround to the Eolas patent is to ensure that OBJECT tags only appear within the "second" distribution of hypermedia content files. 
If this is correct, then couldn't IIS and Apache servers be updated with a new "Isolate OBJECTs from Pages" security setting that instructs server-side filters to dynamically replace all OBJECT tags with nested FRAMEs, or use the "CNN approach" to dynamically rendering SCRIPT tags in place of OBJECTS that reference secondarily distributed javascript files for dynamically rendering hypermedia content? 
-Mike Mike Leach Cubic Compass Software Enterprise Portal Solutions mailto:mike@cubiccompass.com mike@cubiccompass.com 
mailto:mike@cubiccompass.com http://www.cubiccompass.com 503.520.0845 
Office 503.358.6547 
Mobile Thank you Mike, Your observation about the "second" distributed hypermedia file puts things into perspective for me. 
I kept reading this, but wasn't "seeing" it because my legal-eze is not very polished. 
You idea about the Web Server fix is interesting, but I think this may only apply affectively to static files, like *.html Application files that write dynamic content (e.g., ASP, ASP.NET, PHP, ColdFusion, Witango, etc...) would be another issue. 
I personally would not want to see my Server interfering with my dynamic output. 
From a Designer/Programmer point of view, replacing OBJECT with some dynamic IFRAME mechanism is the probably the excellent perspective for implementing a work-around. 
Thank you again. 
Cheers.... Scott Cadillac, XML-Extranet - http://xmlx.ca 403-281-6090 - scott@xmlx.ca Well-formed Development Extranet solutions using C# .NET, 
Witango, MSIE and XML [mailto:public-web-plugins-request@w3.org] 
On Behalf Of Mike The reference to launching and controlling a computer program within a browser from a "first distributed hypermedia document" appears quite frequently within all 10 claims of the patent. 
I'm inferring from other posts and articles that a possible workaround to the Eolas patent is to ensure that OBJECT tags only appear within the "second" distribution of hypermedia content files. 
If this is correct, then couldn't IIS and Apache servers be updated with a new "Isolate OBJECTs from Pages" security setting that instructs server-side filters to dynamically replace all OBJECT tags with nested FRAMEs, or use the "CNN approach" to dynamically rendering SCRIPT tags in place of OBJECTS that reference secondarily distributed javascript files for dynamically rendering hypermedia content? 
-Mike Mike Leach Cubic Compass Software Enterprise Portal Solutions mike@cubiccompass.com 
503.520.0845 
Office 503.358.6547 
Mobile quote: True, doing this on the server side could be an elegant fix for simple flash objects in existing pages, but it won't do any good if the original page had any kind of Flash - JavaScript interaction. 
I can think of several instances where we had JavaScript talk to Flash or vice versa and these interactions would break in such a scenario. 
The only option that I have heard of from the original MS presentation in San Francisco that would not break the DOM in some way is to prompt the user before Flash is being executed. 
If all it takes is a user prompt to avoid a patent conflict, the object would still exist as usual in the page for JavaScript to talk to. 
But this is of course all guesswork without more data. 
It would be very nice if we could get any more information about these mysterious "options" that MS presented to Macromedia et al. 
Is anybody from the W3C listening in on this mailing list or are we here just stumbling around in the fog? 
Thomas Thomas Sturm Senior User Interface Developer Modem Media 111 Sutter Street San Francisco, CA 94104 415-733-8429 Uhmmm, no, JavaScript and Flash could still talk fine, just like using JavaScript with frames, iframes, etc. 
You just need to reference the things a bit different. 
Like putting something together with Sharepoint Portal Server. 
:o) quote: From a Designer/Programmer point of view, replacing OBJECT with some dynamic IFRAME mechanism is the probably the excellent perspective for implementing a work-around. 
True, doing this on the server side could be an elegant fix for simple flash objects in existing pages, but it won't do any good if the original page had any kind of Flash - JavaScript interaction. 
I can think of several instances where we had JavaScript talk to Flash or vice versa and these interactions would break in such a scenario. 
Oh - I'm sure we can change our old scripts to deal with iframes - I was just hoping that whatever will be the solution for this mess won't force us to re-visit all our client's sites to rip out some long-forgotten scripts... Personally I felt rather insulted by how lightly it has been talked about "changing the plug-in mechanism", pretty much disregarding what will be involved organizationally and technically on the web development side. 
It's not like we'll just wave our magic HTML wand and everything starts working again. 
Due to the fact that there may be JavaScript-Flash interaction in many of these pages (among other things like Information Architecture and Design considerations), we may have to do individual fixes for each instance of Flash in a client's site, or may even be forced to consider a complete redesign of sections of sites - which will have to be explained to clients... 
I'm sure you are all looking forward to that aspect of the problem... :-) Will _any_ of the solutions offered by Microsoft leave the DOM intact so that current scripts will just continue to work? 
I thought the user-prompt method described by Microsoft would maybe do that. 
Or are we just doomed to perform the Big Web Retrofit Of 2004? 
Thomas This is really a pedantic interpretation of the patent, but if a "second" hypermedia document is required as a workaround, perhaps a new HTTP request header could be used so that compliant browsers would instruct servers to reformat responses containing OBJECT tags into a secondary document. 
Accept: text/html; isolateobjects=1 -Mike Cubic Compass Software (BTW- Ideally, I'd prefer a settlement between MSFT and Eolas to avoid such a workaround altogether. 
My proposals are in no way meant discredit Eolas' patent or deny their right to a "David and Goliath" battle for licensing their alleged IP.) As I understand it, the problem (for Microsoft at least) is that the *browser* infringes the patent so it has to have the capability to process an OBJECT tag removed or modified so it doesn't work the same way. 
As such, even if every server in the world was modified as suggested, the browser as it stands would still be liable to a $1.47 per browser licence fee (because it has the capability). 
I would lose no sleep over Microsoft but, in principle, the same applies to all other browsers. 
So, if all browsers have to be changed anyway, there is no point in ALSO changing servers. 
Neil. 
