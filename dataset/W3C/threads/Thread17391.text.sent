I'm working on a site redesign/rebuild for the AIGA Austin chapter and I was thinking about what symbol would be best for breadcrumb dividers: visually, semantically, and for a logical aural experience. 
(AIGA is a graphic design professional organization, but I still want the site to be accessible to the blind.) Typically, you see breadcrumb navigation such as: Home  About  Contact us Though using the 'greater than' symbol is not my favorite choice, it does have adequate semantic meaning and visual style. 
Anyway, here are some other trials. 
Let me know your thoughts. 
Semantically, using one of these would be nice. 
??? (contains a member) ??? (superset of) Visually, I'm leaning toward one of these. 
??? (ellipsis) ?? (right angle quote) ??? (single right angle quote) ??? (right arrow) ??? (right double arrow) Here's the full test list. 
Does anyone have comments/preferences regarding the accessibility, semantics, aesthetics, and practicality of these? 
My screen reader tests don't speak any of the symbols. 
Is that a user setting or are those characters not valid as accessible dividers? 
Thanks for your time, James Craig James, I usually like the double angle quote, however I think the single right angle quote looks great. 
My one gripe though with breadcrumbs, make sure the final "crumb" is the actual page the user is at, and make it so that its not a clickable link. 
So many designers make everything a link, and that's just confusing :) Mike Rundle You are limiting yourself to recent desktop graphical browsers. 
Other browsers won't have fonts that cover these. 
Lynx may approximate with characters it has. 
For PDAs you will be at the mercy of the HTML gateway service. 
This is no longer entirely accurate. 
Many PDAs today come with, or can be installed with, UAs that go directly to the source. 
New PDA/Phone combos like the Sony-Ericsson P900 can run Opera. 
- Tina Holmboe Greytower Technologies tina@greytower.net 
http://www.greytower.net/ 
[+46] 0708 557 905 And how does that constitute "limiting"? 
Where is your evidence that the great preponderance of people with relevant disabilities are *not* using "recent desktop graphical browsers"? 
Where, furthermore, is your evidence that people with relevant disabilities who are not using "recent desktop graphical browsers" will be in any way inconvenienced or have their accessibility impaired by the use of a correct pi character as a separator in a breadcrumb trail? 
Or do you just not like Web sites that take care to craft correct, aesthetically-pleasing typography? 
Other browsers won't have fonts that cover these. 
Prove it. 
Lynx may approximate with characters it has. 
And it does a beautiful job, as ever. 
Testing possible divisions for breadcrumb navigation. 
Trebuchet MS 187 (right angle quote): 8230 (ellipsis): 8250 (single right angle quote): 8594 (right arrow): - 8658 (right double arrow): = 8712 (element of): 8715 (contains a member): 8834 (subset of): !(C 8835 (superset of): )C 8869 (up tack): -T 9674 (lozenge): LZ Typically for this esteemed List, whenever somebody comes along with a standards-compliant method of making a site look nice, *even at the level of pi characters*, immediately some backward ninny gets on his hobby horse and warns that one person in Mongolia might not have the same experience. 
Joe Clark | joeclark@joeclark.org 
| http://joeclark.org/access/ 
Author, _Building Accessible Websites_ | http://joeclark.org/book/ 
Expect criticism if you top-post Basically from observing what non-disabled people in a relatively affluent country do. 
It actually surprised me how recent a browser you need to avoid this problem. 
I checked the browsers on my office system. 
This is next machine in line on the replacement cycle, but whilst not replacing as often as financial institutions, we do replace more frequently than some public service organisations. 
The last time I checked, my office was in South London, not Outer Mongolia. 
The OS is NT 4 workstation, which is past end of life for Microsft (but Microsoft has had to revise up lifetimes for current products because the end of life it used for NT 4 doesn't reflect when people stop using it in practice). 
(NT 4 Server is still supported.) 
I think I've done a browser update on this. 
I've certainly added all service packs and hot fixes except for the attempt to push IE 6 onto me as a critical update. 
The primary browser is IE 5.5, which is still receiving hot fixes. 
I have also updated at least some of the standard fonts. 
Other developers are likely to have IE 6, but operations people, depending on when their systems were updated, are likely to be on the original browser from that time. 
The test was to send the superset character as both &amp;#x and &amp;# forms. 
Superset as it was one of the semantically valid characters assuming that the detail was on the right (many suggest detail on left is better, for left to right reading order). 
IE 5.5 failed the test. 
It displayed two missing glyph box The other browsers I checked (these are from when I was involved with code that generated HTML, and are mainly considered "don't care" by the marketing people) were: NS 4.75 failed - two question marks. 
WebTVViewer 2.0 failed - uninterpreted entity for &amp;#x and question mark for the decimal one Mozilla 0.9.3 (the Netscape 6 I have is older) displayed both correctly. 
Amaya V5.0 worked (this is quite old). 
Lynx 2.8.1rel1 made an attempt although the charecter wasn't particularly recognizable. 
Note that, as well as the mainstream browser failing: - it is actually all the obscure browsers that got things right, even though they were quite old; - the target market for Web TV is unlikely to upgrade for something like ten years (my home TV is about 17 years old) and is likely to include the elderly, who are more likely to be disabled. 
NT 4 is Unicode aware. 
I haven't tried these in the Windows 98 partition at home; Windows 98 is not Unicode aware although is still supported by Microsoft; that might mean that IE 5.5 tries to compensate more. 
The Symbol font was not Unicode encoded and the superset character is not in the updated core fonts, so the browsers that worked, could only have been doing so by using a hack which meant it had specific knowledge of Symbol (there were some residual Star Office fonts, so just maybe these were properly encoded and found). 
Explicitly hinting to IE that it should use Symbol didn't work. 
I'm assuming you are not proposing the misrepresentation of a character below U+0100 and a specific font selection! 
This is the test code: &amp;#8835; &amp;#8835; 
