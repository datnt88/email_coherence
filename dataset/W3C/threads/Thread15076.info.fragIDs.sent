NEW CHECKPOINT PROPOSAL Based upon our discussions at the meeting yesterday Checkpoint 4.S.1 If you are serving content in different forms to different users to comply with the guidelines, then at least one version must meet all the 
guidelines (with which compliance is asserted) and that form must be complete and up to date: Success Criteria 1) that version provides accessible forms of all the content that is 
provided in the default presentation 2) that version can be obtained from visiting the same URI 3) that version is always up to date (same content) as default 4) that version can be easily selected by users using technologies 
that area accessible under these guidelines (e.g. you don't have to operate an inaccessible technology in order to request the accessible 
form of the content) NOTE: The reason that one version must be used to meet all the guidelines instead of using different versions to meet different guidelines is to allow access by people having multiple disabilities -- and because authors may not understand which combinations of guidelines 
must be used together to provide access. 
Gregg 
Hi, Looking at this from the point of the web page developer, it is not clear 
that the effort that would be involved with producing a version that meets all the guidelines would actually address the needs of people with 
multiple disabilities. 
Given that web page developers have finite resources. 
is this really the best way for them to use their resources? 
In a way, this goes back to what is the purpose of the guidelines. 
Is it 
for everyone to use the same web pages or is it for people to have access 
to the information and functionality provided on web pages? 
Scott 
Clearly - it is to be accessible. 
But if no version works across disabilities then how do we make sure that one of your disabilities isn't handled with one version, and one is handled by another. 
So you can't use either. 
I don't like having to require that one version be for all either. 
But I don't see another solution. 
Can you think of a solution that will guarantee that a persons multiple disabilities won't be split across different versions? 
Gregg 
Gregg C Vanderheiden Ph.D. 
From: w3c-wai-gl-request@w3.org 
[mailto:w3c-wai-gl-request@w3.org] 
On 
Behalf 
clear 
with 
resources. 
it 
access 
the 
that is 
technologies 
accessible 
guidelines 
I agree that renderings should all have a level of conformance, but different level 3 conformance, is often done by different versions, which has advantages of being able to optimize renderings for conflicting user groups all the best, Lisa 
Hi, My first assumption is that no version will handle ALL disabilities because if a person has multiple disabilities, some of the person's disabilities may have conflicting needs. 
This semester Berkeley's computer science is offering a course on assistive technology. 
In various discussions I've had with the students 
who are coming more from the technology side rather than the disability side of the issues, I'e been re-thinking accessibility issues. 
If a person is visually impaired and doesn't use screen magnification, the output they receive is basically words which are presented by speech or braille. 
If a format is being suggested to cover a range of disabilities, it might make sense for the primary focus to be words. 
This can avoid a number of problems. 
One is that there would probably be greater accuracy of what the web page developer is trying to communicate. 
Rather than trying to guess at what words the assistive technology will be choosing to convey what it thinks the web page developer is communicating, the web page developer just provides the words for the assistive technology to present. 
If assistive technology could automatically and accurately choose appropriate words, this approach wouldn't be very useful. 
However, if the web page developer has to expend effort to write HTML to meet certain standards in order for assistive technology to understand what is being meant, the web page developer might as do the word selection himself/herself. 
This approach reduces the amount of effort that a web page developer 
needs to put into such related tasks as determining if the HTML being written is in conformance. 
The web page developer could skip such things as lay-out tables, scripts, etc, and create a very basic web page. 
One advantage could be that if the web page developer creates a basic web page, it could be used by people with various disabilities and also people who have access to only very basic browser functionality. 
In this way, there is more benefit for the web page developer to develop this type of page. 
This type of page could be called a "generic browser web page" which wouldn't have any reference to disability for people who are sensitive to that issue. 
For people who are concerned about versions of a web page being kept in sync, that really is more a question of using the right technology. 
For example, there is technology out there where one file can be used to generate different versions of a web page. 
Scott 
** Summary: This is in the context of server-side polymorphism and the attempts to come up with a checkpoint for it. 
It's not a single checkpoint, it's a rollup issue. 
But I don't think that measuring a site's accessibility _only_ by the accessibility of its broadest form is the highest and best rating practice that we can recommend. 
Some people with severe disabilities will not be able to use a vanilla form, just as some people with multiple disabilities may not be able to use any of a range of targeted forms. 
Now, source form is not usable without above-usual effort in the client. 
However, on application of above-usual effort in the client (to comprehend the semantic backups for a source form and present it in an optimized presentation), the result will be more usable for the targeted person with a disability, and this level of adaptive intervention will likely be _necessary_ for _some_ people with severe disabilities. 
A polymorphic service should incorporate access to source form as well as vanilla form. 
However, we should also be looking for ways to get content providers credit for the less-than-universal access benefits of pre-tailored forms as well. 
Because for every tailored form there is a person with a disability who will find that form more usable than the vanilla form, and a friend of theirs with a severe functional impairment who will find they can't use the site with out that adaptation. 
** more All people with multiple and severe disabilities are at serious risk of being left out, and our approach to serving them has to take into account "try harder" approaches, as I see it. 
This is why a "source option" seems attractive. 
In the XSL review we [PF, on behalf of the WAI] got language put in the specification requiring source option for any service which serves final form. 
For people with severe disabilities, personally adapted forms would seem to be sometimes necessary. 
The shortest path to a personally optimized presentation passes through the most semantic, most 'early' source form of the service or information that the service offeror can readily or reasonably afford access to. 
I think of this as the "may I speak with your supervisor" customer right from retailing. 
It's just like the review of the invoice in your bill. 
You have a right to ask "please explain how you figured that out?" 
This is what my Computational Science colleaques who are doing physics by computer want. 
They want someone else's conclusions, but they always want to be able to adjust their view to trace back through the data reduction to the origial sources and reconstruct new conclusions after joining new data to the basis for drawing conclusions. 
This is the basic query that I am trying to get infiltrated into the way everyone does Web business through the pressure from science applications on Web Services offered in the Grid computing community and from there the Web. 
If the backoffice interface is all in Web Services and the WSDL provides access to a sufficiently semantic model, then at the client option the derivation of final form can be re-constructed in the client from as much depth into the process as is required to derive a satisfactory result. 
The above is as I see it the master plan. 
Behind any canned form there should be an explanatory schema which explains the world that is being viewed through the document form, and a recipe or view-definition script (e.g. XSLT) that extracts the presentation in the existing documentary form from the information graph on which it is based. 
This is the dream. 
There's many a slip 'twixt the cup and the lip, of course. 
One of the key gotchas is that schemas, like CSS styling practices, can contain garbage just as easily as they can contain the semantic model needed to synthesize an optimized adapted presentation of a service. 
Here delivery of information content is included in "a service." 
Most server side options are targeted to a range of thin clients. 
We of the accessibility camp have to stand up for the thick client option, where the User Agent is prepared to try harder, as for example emacSpeak and Home Page Reader. 
Any computer running assistive technology is in effect a de_facto thick client, a local cluster of services that are composed to deliver the goods. 
Al . 
To preserve accessibility, designers of Web systems should not develop architectures that require (or use) the transmission of documents containing formatting objects and properties unless either the transmitter knows that the client can accept formatting objects and properties or the transmitted document contains a reference to the source document(s) used in the construction of the document with the formatting objects and properties. 
Hi, I agree with Al that accessibility of a web site should not be measured only by the accessibility of its broadest form. 
This is why I've been thinking of web page accessibility more like: "A set of versions of a web page can be considered accessible to a person with a disability if both of these conditions are true: a. each version in the set has the exact same information and equivalent interaction with the information as that of any other version in the set b. the set contains a version of the web page such that the person can understand the content on the page and be able to interact with that information with the goal of being as effective and efficient as a person without a disability when using the web page." 
Client-side transformation can have draw-backs. 
For example, how does the web page developer trust that the results of the transformation is what the web page developer is actually trying to convey? 
How does the disabled person know that the transformation was accurately specified and appropriate for the information the web page designer is trying to convey? 
Another concern is how many users have noth the technological drive and ability to specify and test transformations. 
My concern is that many would just bail out. 
I don't believe that a vanilla form is the universal answer, but is a very important tool in attacking accessibility issues. 
One draw-back to the vanilla form is that its use of text could cause problems for people with dyslexia. 
This goes back to the issue of handling the needs of some people which will conflict with the needs of other people. 
Scott PS It's interesting that Al has suggested a need for the ability to examine transformations. 
I'm just finishing up a configuring/transformation system and have a feature where a long of the configuring/transformation can optionally be included at the end of a generated web page. 
