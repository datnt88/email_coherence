I can't post an annotation on the w3c server with the script annpost.rb 
: I have this error : /usr/lib/ruby/1.6/net/protocol.rb:221:in 
`error!': 401 Unauthorized (Net::ProtoFatalError) from /usr/lib/ruby/1.6/net/http.rb:708:in 
`value' from /usr/lib/ruby/1.6/net/http.rb:402:in 
`post' from annopost.rb:104 
I need help, thank you. 
That means that you didn't specify a valid username/passwd. 
Read http error codes. 
Should you want to use a 'newer' client to post/get/query/update/delete, you can fetch ours at http://www.queinnec.org/essi/annotea.tar.bz2 
It is a Java client (well, there's a whole Annotea/EARL backend using HP's Jena as parser). 
We did this as part of our 'internship' at the W3C in Sophia-Antipolis. 
Charles asked me to post on the list an overview of our work, so here it is: We're currently working on a project that consists in building a "persistence layer" (big words, huh?) into WAIDr (pronounced WAI-Doctor, see . 
This layer is very basic and relies on Annotea. 
Basically we generate EARL reports with WAIDr's output and then post them to an Annotea server. 
We can then retrieve them and stop bothering the user (the person who's validating the web content) by always asking him the same questions over and over again. 
For example, we need to validate the longdesc part of an image (checking that it matches the actual image, that it is relevant). 
We cannot do this in an automatized way... 
We need some user input. 
So instead of revalidating the same stuff zillions of times, we store it into an Annotea server and then for some next sessions, we'll know that if some part hasn't changed, then there's no need to revalidate it. 
We have developped four different packages. 
An EARL package that creates EARL reports, an HTTP package that posts/queries a server supporting the Annotea protocol, an Annotea package for parsing the replies and an XPointer package to create/resolve XPointers on a valid XHTML page. 
Do not expect the packages to do everything you've dreamt of (especially the XPointer one, which is a kinda dirty hack). 
The most up-to-date archive can be found at it, feel free to. 
The license is the W3C Software License. 
There may be a bug in the way the ruby script encodes the authorisation string - I have used it successfully but the last couple of tries something hasn't worked in the authorisation (I have also had server side problems, and not enough time to chase down the bugs yet :( I'll need to check if anything changed in ruby or if any ruby gurus knw what's wrong with my script. 
cheers Chaals 
