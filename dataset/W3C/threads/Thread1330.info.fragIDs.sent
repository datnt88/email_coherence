Yaron has reviewed the core versioning parts of the protocol and had the following set of comments. 
His current work responsibilities did not provide enough time for him to produce an email review, but as he was a co-author of RFC-2518, I particularly wanted his feedback, so I called him to get his comments, and agreed to post them to the mailing list. 
Note that this will be my interpretation of Yaron's points, so if I misunderstood or misrepresent them, Yaron will try to follow-up himself. 
OK, enough prologue ... on with the show. 
In Act I, we have the points that I agree with and that I believe will be non-controversial. 
I propose that I just make these suggested change unless someone disagrees. 
In Act II (a separate message), I'll enumerate the changes that either I agree with or don't care, but which I think might be controversial. 
If you only have time to review Act I or Act II, Act II is probably more interesting. 
In the final Act (another separate message), I'll enumerate the changes that I do not agree with, but which Yaron would like to propose. 
It's not clear yet whether there is anything in Act III ... I haven't thought through all of Yaron's suggestions. 
------- Act I -------------- (I.1) Get rid of DAV:must-support attribute, and instead define tokens for use in an If header. 
(I.2) Add an intermediate node above any list of property names in a report request or response, so that the report can be extended with additional XML markup. 
(I.3) Add an "unknown" value for checkin-date. 
(I.4) Require that the 403/409 response body token appear as the top level element "unless explicitly negotiated otherwise", so that clients get predictable behavior, but later specs can allow clients to request other behavior. 
(I.5) Need to define the precondition for when cannot place a resource at this place. 
(one per resource type). 
(I.6) Have an example show additional elements in request body being ignored by the request. 
(I.7) Add a response body to VERSION-CONTROL, so that can indicate whether it is a no-op or not. 
DAV:already-under-control/ (I.8) Whenever a statement of the form "the xxx specified in the yyy element" refers to an element in the request body, it should explicitly say "the xxx specified in the yyy element in the request body". 
(I.9) Indicate which live properties are controlled by a lock. 
Here is the response from the working group to Yaron's comments. 
These changes appear in the current (10-11) working draft. 
------- Act I -------------- (I.1) Get rid of DAV:must-support attribute, and instead define tokens for use in an If header. 
Done. 
(I.2) Add an intermediate node above any list of property names in a report request or response, so that the report can be extended with additional XML markup. 
Done. 
(I think I caught them all). 
(I.3) Add an "unknown" value for checkin-date. 
The working group felt a "null" value was appropriate for this, rather than defining an "unknown" value. 
(I.4) Require that the 403/409 response body token appear as the top level element "unless explicitly negotiated otherwise", so that clients get predictable behavior, but later specs can allow clients to request other behavior. 
Done. 
(I.5) Need to define the precondition for when cannot place a resource at this place. 
(one per resource type). 
Done. 
(I.6) Have an example show additional elements in request body being ignored by the request. 
This will be reflected in the "scenarios" document, since this is just one of many interesting examples that are worth describing. 
(I.7) Add a response body to VERSION-CONTROL, so that can indicate whether it is a no-op or not. 
DAV:already-under-control/ Done. 
(I.8) Whenever a statement of the form "the xxx specified in the yyy element" refers to an element in the request body, it should explicitly say "the xxx specified in the yyy element in the request body". 
Done wherever there was a chance of ambiguity. 
(I.9) Indicate which live properties are controlled by a lock. 
Done (in particular, every versioning live property is controlled by a write lock). 
Cheers, Geoff 
See tim tags below. 
"Geoffrey M. Clemm" geoffrey.clemm@rational.com on 2000-12-21 03:23:21 PM Please respond to "Geoffrey M. Clemm" geoffrey.clemm@rational.com 
Subject: Re: comments on deltav-10.5 from Yaron Goland, Act One Here is the response from the working group to Yaron's comments. 
These changes appear in the current (10-11) working draft. 
------- Act I -------------- (I.1) Get rid of DAV:must-support attribute, and instead define tokens for use in an If header. 
Done. 
Shame. 
I'll have to see this, but either you have LOTS of tokens or have chosen which are 'ignoreable'. 
For the record I was in favour of keeping the attribute. 
/tim (I.2) Add an intermediate node above any list of property names in a report request or response, so that the report can be extended with additional XML markup. 
Done. 
(I think I caught them all). 
(I.3) Add an "unknown" value for checkin-date. 
The working group felt a "null" value was appropriate for this, rather than defining an "unknown" value. 
Again, for the record, I am in favour of servers not defining this property if they cannot provide a reasonable value for it. 
(I don't know what the "null" vallue will be?) (I.4) Require that the 403/409 response body token appear as the top level element "unless explicitly negotiated otherwise", so that clients get predictable behavior, but later specs can allow clients to request other behavior. 
Done. 
What does 'explicitly negotiated otherwise' mean? 
If it means that particular clients and servers can have an out of (protocol) band conversation to do something else, then of course this is true; for any number of things. 
I'm not sure what this statement adds. 
(I.5) Need to define the precondition for when cannot place a resource at this place. 
(one per resource type). 
Done. 
(I.6) Have an example show additional elements in request body being ignored by the request. 
This will be reflected in the "scenarios" document, since this is just one of many interesting examples that are worth describing. 
(I.7) Add a response body to VERSION-CONTROL, so that can indicate whether it is a no-op or not. 
DAV:already-under-control/ Done. 
(I.8) Whenever a statement of the form "the xxx specified in the yyy element" refers to an element in the request body, it should explicitly say "the xxx specified in the yyy element in the request body". 
Done wherever there was a chance of ambiguity. 
(I.9) Indicate which live properties are controlled by a lock. 
Done (in particular, every versioning live property is controlled by a write lock). 
Cheers, Geoff 
From: Tim_Ellison@uk.ibm.com (I.1) Get rid of DAV:must-support attribute, and instead define tokens for use in an If header. 
Done. 
Shame. 
I'll have to see this, but either you have LOTS of tokens or have chosen which are 'ignoreable'. 
For the record I was in favour of keeping the attribute. 
I agree that this functionality has advantages, but since it was not critical for versioning, we decided to leave it to be defined by some other group that really needs it. 
(I.3) Add an "unknown" value for checkin-date. 
The working group felt a "null" value was appropriate for this, rather than defining an "unknown" value. 
Again, for the record, I am in favour of servers not defining this property if they cannot provide a reasonable value for it. 
(I don't know what the "null" vallue will be?) That's what I meant ... I should have said "omit the property", not a "null value". 
(I.4) Require that the 403/409 response body token appear as the top level element "unless explicitly negotiated otherwise", so that clients get predictable behavior, but later specs can allow clients to request other behavior. 
Done. 
What does 'explicitly negotiated otherwise' mean? 
If it means that particular clients and servers can have an out of (protocol) band conversation to do something else, then of course this is true; for any number of things. 
I'm not sure what this statement adds. 
If you just say "MUST be the top level element", then this is violated by any later spec that wants to allow the client to ask for it to be elsewhere (e.g. use a header to ask that it be nested in some other XML). 
So for extensibility, you need to open up this constraint in this fashion. 
(II.4) Require version-name to be XML, for internationalization. Removed the restrictin that it be a string, but did not require it to be XML. 
So what's a guy to do? 
If it is not necessarily XML it must be handled as a String -- which means all of those 's and &amp;'s must be escaped. 
Of course if a different client retrieves the comment and the XML is un-escaped on the way out, it won't be internationalized to the client's taste. 
I guess that the objection to it's being XML is that the comment is typically accessible by other (non-NLS'd) tools that would only expect a String. 
Yes, this was just a case of "editor fatigue". 
I'll change this to say that XML is required. 
(II.5) Move all DAV:supported-xxx properties to the OPTIONS response. 
Move all DAV:xxx-collection-set properties to the OPTIONS response. 
Done. 
Do we need DAV:supported-live-properties? 
Servers are required to protect the names of all live properties (whether they support them or not), so PROPPATCH will fail if the property is unsupported. 
Servers should not define a live property that it does not support, and PROPFIND would return 404 Not Found. 
Since the protocol does not distinguish between dead and live properties, a server has no way of knowing whether the PROPPATCH was to a dead property or to a live property that it doesn't know about. 
Cheers, Geoff 
