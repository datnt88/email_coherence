I believe there is an issue with cancellable events. 
The problem here is that event listeners might be written such that they are sensitive to whether the event it responds to was cancelled or not. 
It would be nice to be able to assume that I can write an event listener with the certainty that: 1. if my event listener gets executed, then the default action of the associated event gets executed. 
2. if my event listener gets executed, then it can perform tasks that are consistent with other event listeners on the same event target or later event targets. 
At the moment my event listener can be executed while a sibling calls preventDefault(); + stopPropagation(); I would much prefer that events where dispatched in two phases. 
Phase 0 - all events are cancellable Phase 1 - no events are cancellable That is, a cancellable event would only be dispatched in phase 0 and a non-cancellable event would only be dispached on phase 1. 
All phase 0 dispatches are performed before any phase 1 dispatches. 
If the any events are cancelled in phase 0, then the phase 1 dispatched is not performed. 
So when a event listener cancels an event in phase 0, my event listener waiting on phase 1 can safely assume it won't get called. 
Thanks -John 
No requirement for two-phase events was submitted for the DOM events system. 
At this point, I really think it's too late to smuggle it into Level 2. 
We can consider it for future levels of the DOM. 
We'd need to come up with serious use cases and requirements, and we'd need to find headcount to work on it. 
(My instincts suggest that an application could implement its own two-phase system on top of our primitive events... but I haven't worked that out in detail, so I may be mistaken.) 
Joe Kesselman / IBM Research 
Cancellable mutation events comes to mind. 
For DOM structures which responds to changes in itself - perhaps by modifying itself further - there is a very strong need for consistency and constraint in the way event listeners are invoked and they way they are allowed to behave. 
Otherwise, all hell will break loose. 
Cancellable mutation events aren't DOM 2 - so two phase events may or may not yet be an issue. 
I haven't thought much about them beyond this situation, but I'm sure there would be uses elsewhere. 
It certainly would be a future issue if not an issue now. 
I haven't been able to do this on the standard DOM 2 API, but that doesn't mean it can't. 
I would be very interested if anyone has a clue on how it can be done. 
-John 
