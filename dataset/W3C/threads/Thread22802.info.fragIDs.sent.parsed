(S1 (S (NP (PRP I)) (VP (VP (AUX am) (S (VP (VBG using) (NP (DT the) (NN DOM)) (PP (IN via) (NP (DT a) (NNP Java) (NNP Server) (NNP Page)))))) (CC and) (VP (AUX need) (S (VP (TO to) (VP (VB render) (NP (PRP$ my) (NN output))))))) (. .)))
(S1 (S (S (NP (PRP I)) (ADVP (RB currently)) (VP (AUX have) (NP (DT the) (JJ following) (NN code)))) (: :) (FRAG (NP (NP (NN %) (NN try)) (PRN (-LRB- -LCB-) (S (NP (NNP DocumentBuilderFactory) (NN dbf)) (VP (SYM =) (NP (NNP DocumentBuilderFactory.newInstance) (-LRB- -LRB-)))) (-RRB- -RRB-))) (: ;) (NP (NNP DocumentBuilder) (CD db)) (X (SYM =)) (NP (NN dbf.newDocumentBuilder)))))
(S1 (S (PRN (-LRB- -LRB-) (FRAG (-RRB- -RRB-) (: ;) (NP (NNP Document) (NNP doc)) (X (SYM =)) (VP (VBN db.newDocument) (-LRB- -LRB-))) (-RRB- -RRB-)) (: ;) (NP (NN Element) (NN root)) (VP (SYM =) (NP (NN doc.createElement)))))
(S1 (FRAG (PRN (-LRB- -LRB-) (NP (`` ``) (NN mytest) ('' '')) (-RRB- -RRB-)) (: ;) (NP (NP (JJ doc.appendChild) (-LRB- -LRB-) (NN root) (-RRB- -RRB-)) (: ;) (NP (JJ root.appendChild) (PRN (-LRB- -LRB-) (NP (NP (NN doc.createElement)) (PRN (-LRB- -LRB-) (NP (`` ``) (NN header) ('' '')) (-RRB- -RRB-))) (-RRB- -RRB-))) (: ;) (JJ root.appendChild) (PRN (-LRB- -LRB-) (JJ doc.createTextNode) (-LRB- -LRB-) (`` ``) (SQ (VP (VB \n) (SBAR (S (NP (DT some) (NNS data)) (VP (AUX is) (VP (VBN text\n) (FRAG ('' '') (-RRB- -RRB-) (-RRB- -RRB-) (: ;) (NP (NP (JJ root.appendChild) (PRN (-LRB- -LRB-) (S (NP (NP (NN doc.createElement)) (PRN (-LRB- -LRB-) (NP (`` ``) (NN footer) ('' '')) (-RRB- -RRB-) (-RRB- -RRB-) (: ;) (-RRB- -RCB-))) (VP (VB catch) (PRN (-LRB- -LRB-) (NN Exception) (NN e) (-RRB- -RRB-)) (-LRB- -LCB-))) (-RRB- -RCB-)) (NN %)) (SBAR (S (VP (MD Can) (VP (NN someone) (VB tell) (NP (PRP me)) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB get) (NP (DT the) (NN document)) (S (VP (TO to) (VP (VB write) (NP (PRP itself)) (PRT (RP out))))))))))))))))))))))) (. ?)))
(S1 (SQ (CC Or) (AUX do) (NP (PRP I)) (VP (AUX have) (S (VP (TO to) (VP (VB go) (PP (IN through) (NP (NP (DT the) (JJ whole) (NN tree)) (NP (PRP myself)))))))) (. ?)))
(S1 (S (S (NP (DT The) (ADJP (VB load) (CC and) (VB save)) (NN module)) (VP (VP (AUX is) (NP (NP (NN part)) (PP (IN of) (NP (NN DOM) (NN Level) (CD 3))))) (CC and) (VP (AUX is) (RB not) (PP (IN in) (NP (NN DOM) (NN Level))) (VP (VBN 2.) (PP (IN For) (NP (DT the) (NN moment))))))) (, ,) (NP (DT the) (NNS implementations)) (VP (AUX have) (NP (NP (PRP$ their) (JJ own) (NN API)) (PP (IN for) (NP (DT the) (NN serialization))))) (. .)))
(S1 (S (VP (VB Check) (NP (PRP$ their) (NN documentation))) (. .)))
(S1 (NP (NNP Philippe)))
(S1 (S (NP (NNP Hi) (NNP Mark)) (, ,) (PP (IN In) (NP (DT a) (JJ non-portable) (NN way))) (NP (PRP you)) (VP (MD can) (VP (VP (VB cast) (NP (DT the) (NN Document)) (PP (TO to) (NP (NNP XmlDocument)))) (CC and) (VP (VB use) (S (NP (DT the) (NN non-portable)) (VP (VB write) (NP (NNS methods))))))) (. .)))
(S1 (S (NP (DT This)) (VP (VBZ assumes) (SBAR (S (NP (PRP you)) (VP (AUX are) (VP (VBG using) (NP (NN xml-tr2)) (PP (IN as) (NP (PRP$ your) (JJ underlying) (NN DOM)))))))) (. .)))
(S1 (NP (NNP eric) (: :) (: -) (-RRB- -RRB-)))
(S1 (S (CC Or) (NP (PRP you)) (VP (MD can) (VP (VB use) (NP (NP (NNP Xerces) (POS ')) (NN XMLSerializer)) (S (VP (TO to) (VP (VB write) (S (VP (TO to) (VP (VB file))))))))) (. .)))
(S1 (NP (NP (NP (NNP Wendi) (NNP Sisson) (NNPS Systems) (NN Programmer) (NNP International) (NNP Trade) (NNP Development) (NNP FedEx) (NNP Services)) (PRN (-LRB- -LRB-) (NP (CD 901)) (-RRB- -RRB-))) (NP (CD 263-6695))))
