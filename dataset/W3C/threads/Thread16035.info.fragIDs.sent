Priority 1.1 states "Provide a text equivalent for every non-text element . 
. . 
This includes . 
. . 
spacers . 
. . 
." 
A while back I was involved in a heated discussion on this list regarding providing alt text for such things as spacer images. 
I had put up a site and the spacer images had ALT="spacer". 
I got an earful (eyeful?) from some members of this list about that. 
The general consensus seemed to be, if the alt text doesn't contribute to the accessibility of the page, use alt="" or alt=" ". 
Although I was skeptical at first, after trying it both ways, I decided that alt="" was a worthwhile option and began to use it. 
But Priority 1.1 doesn't mention this, and seems to rule against it. 
Can anyone clarify this for me? 
Is it permissible to use alt="" (judiciously, of course) and still meet Priority 1.1? 
Also, the example suggests using alt text for form inputs. 
If I've already used labels and associated them with their inputs properly, and/or I'm using explanatory placeholder text, the alt text seems like overkill (how many times does the user of pwWebspeak need to hear the name of the input?). 
Does Priority 1.1 require the use of alt text on form inputs? 
Thanks, Charles F. Munat 
As I recall, this point is clarified in the techniques document, which is linked to checkpoint 1.1 of the guidelines. 
More precisely, the use of the ALT attribute in connection with images used as spacers is covered in section 5.6.1 of the techniques document under a discussion of layout, where it is also emphasised that style sheets should be used instead. 
"As I recall, this point is clarified in the techniques document, which is linked to checkpoint 1.1 of the guidelines." 
Thanks. 
I missed the explanation the first time because one must traverse three links to get to it. 
I finally found it in the Techniques document #5.6.1: 
If content developers cannot use style sheets and must use invisible or transparent images (e.g., with IMG) to lay out images on the page, they should specify alt="" for them. 
I understand that this use is deprecated, but considering how many developers use this technique, it's too bad it's not more clearly noted. 
Charles F. Munat 
