<s> I just tried replacing the root element with: a) another element b) a fragment containing one element c) a fragment containing two elements  </s>
<s> What I expected was that (a) and (b) would succeed and (c) would fail.  </s>
<s> (Remember that when you replace a node with a fragment, the children of the fragment and not the fragment itself are used.) None of the five DOM implementations I tried got the results I expected.  </s>
<s> Any opinions as to which (if any) is right and why?  </s>
<s> -- Ron Bourret RESULTS: Data Channel: (a) DOMException: A node is used in a different document than the one that created it.  </s>
<s> (b) DOMException: A node is used in a different document than the one that created it.  </s>
<s> (b) DOMException: A node is used in a different document than the one that created it.  </s>
<s> Docuverse: (a) root element replaced (b) DOMException (no message) (c) DOMException (no message) IBM: (a) root element replaced (b) root element replaced (c) root element replaced Oracle: (a) root element replaced (b) DOMException: Node of this type cannot be added (c) DOMException: Node of this type cannot be added Sun: (a) root element replaced (b) DOMException: This node isn't allowed there (c) DOMException: This node isn't allowed there  </s>
<s> The PyDOM code seems to pass this test; the test program below produces the output: amarok /tmp python t.py Adding element Adding 1-element fragment Adding 2-element fragment Traceback (innermost last): File "t.py", line 27, in ?  </s>
<s> doc.replaceChild( frag2, doc.documentElement) File "/usr/local/lib/python1.5/site-packages/xml/dom/core.py", line 1314, in replaceChild raise HierarchyRequestException, \ xml.dom.core.HierarchyRequestException: replaceChild() would result in more than one root document element The Document class overrides the basic Node implementation of replaceChild(), and counts the number of unique Elements in both the children of the Document element and the list of nodes that will be inserted; this number must be equal to 1 or 0. If the total is OK, the original Node.replaceChild() can be called.  </s>
<s> (Similar logic works for insertBefore().) Here's what the code looks like: def replaceChild(self, newChild, oldChild): """Replaces the child node oldChild with newChild in the list of children, and returns the oldChild node.  </s>
<s> If the newChild is already in the tree, it is first removed."""  </s>
<s> # Check that this operation wouldn't result in the Document node # having more than one children that are Element nodes.  </s>
<s> # This is as in insertBefore, with one change; if the old node being # replaced is an element, it shouldn't be counted.  </s>
<s> if newChild._node.type  </s>
<s> == DOCUMENT_FRAGMENT_NODE: nodelist = newChild._node.children  </s>
<s> else: nodelist = [newChild._node]  </s>
<s> d = {} # Dictionary for counting for c in nodelist: if c.type == ELEMENT_NODE: d[ id(c) ] = None for c in self._node.children:  </s>
<s> if c.type == ELEMENT_NODE: d[ id(c) ] = None # For a correct count, we should not count the oldChild node, in case # it's an Element.  </s>
<s> ocn = oldChild._node  </s>
<s> if ocn.type == ELEMENT_NODE and d.has_key( id(ocn) ): del d[ id(ocn) ] if len(d)  1: raise HierarchyRequestException, \ "replaceChild() would result in more than one root document element" # Call original version of replaceChild() Node.replaceChild(self, newChild, oldChild) A.M. Kuchlinghttp://starship.python.net/crew/amk/  </s>
<s> This of course is nothing like the comic book Enigma.  </s>
<s> This is real life, or as real as your life gets, anyway.  </s>
<s> -- Violence, in ENIGMA #5: "Lizards and Ghosts" # Test program for adding DocFragments to the root element from xml.dom import core doc = core.createDocument()  </s>
<s> # Make single element, 1-element fragment, 2-element fragment elem = doc.createElement("root")  </s>
<s> frag1 = doc.createDocumentFragment()  </s>
<s> frag1.appendChild(  </s>
<s> doc.createElement("elem1") ) frag2 = doc.createDocumentFragment()  </s>
<s> frag2.appendChild(  </s>
<s> doc.createElement("elem1") ) frag2.appendChild( doc.createElement("elem2") ) print 'Adding element' doc.appendChild( elem ) # Should succeed print doc.toxml() # Replace the root element with the 1-element fragment print '\nAdding 1-element fragment' doc.replaceChild( frag1, doc.documentElement) print doc.toxml() # Replace the root element with the 2-element fragment print '\nAdding 2-element fragment' doc.replaceChild( frag2, doc.documentElement) print doc.toxml()  </s>
<s> Ron, 4DOM passes these test cases.  </s>
<s> Not matter how a node's children are modified we always check to make sure it does not break any of the rules.  </s>
<s> Ex. "A document can have only one element", "A document cannot have text children", "A processing Instruction cannot have element children", etc.  </s>
<s> It treats appending, inserting, and replaceing with a DF as a series of operations.  </s>
<s> Each one is validated as above.  </s>
<s> Here is the output from my test script.  </s>
<s> I can send you the script if you would like.  </s>
<s> [molson@arthur test_dom]$ python ron.py Original Document Case 1, replace with element Case 2, replace with df (one child) Case 3, replace with df (two children) Traceback (innermost last): File "ron.py", line 40, in ?  </s>
<s> doc.replaceChild(df,thirdRoot); File "/usr/local/lib/python/DOM/Document.py", line 208, in replaceChild return NodeIMP.replaceChild(self,newChild,oldChild); File "/usr/local/lib/python/DOM/Node.py", line 155, in replaceChild self.replaceDocumentFragment(newChild, oldChild) File "/usr/local/lib/python/DOM/Node.py", line 253, in replaceDocumentFragment self.appendDocumentFragment(frag);  </s>
<s> File "/usr/local/lib/python/DOM/Node.py", line 232, in appendDocumentFragment self.appendChild(head)  </s>
<s> File "/usr/local/lib/python/DOM/Document.py", line 188, in appendChild raise DOM.DOMIF.DOMException(HIERARCHY_REQUEST_ERR);  </s>
<s> DOM.DOMIF.DOMException:  </s>
<s> DOM.DOMIF.DOMException  </s>
<s> instance at 811a928 Mike  </s>
<s> Mike Olson Member Consultant FourThought LLC "No program is interesting in itself to a programmer.  </s>
<s> It's only interesting as long as there are new challenges and new ideas coming up."  </s>
<s> --- Linus Torvalds  </s>
