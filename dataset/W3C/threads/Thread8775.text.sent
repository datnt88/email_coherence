We're now at PR; Don and I are sending the new ietf-draft in and hopefully we'll be able to get approval to publish it as a Draft Standard in the same time frame as the W3C Advisory Committee Review and Director decision. 
My only concern is that I've introduced little editorial errors into the document so this is our last chance to catch them before we're done! 
smile/ Status of this document This document is a Proposed Recommendations (PR) of the W3C. 
The IETF/W3C XML Signature Working Group(W3C Activity Statement) believes this specification addresses all issues raised during Candidate Recommendation and its specification is sufficient for the creation of independent interopable implementations (see the Interoperability Report). 
W3C Advisory Committee Members are invited to send formal review comments to the W3C Team until 17 September 2001 at xml-dsig-review@w3.org.The public is invited to send comments to the editors and the public mailing list w3c-ietf-xmldsig@w3.org (archive ). 
After the review the Director will announce the document's disposition. 
This announcement should not be expected sooner than 14 days after the end of the review. 
Advancement (or even the announcement) will not occur until the Director is confident of its advancement to Draft Standard in the IETF. 
Patent disclosures relevant to this specification may be found on the Working Group's patent disclosure page, in conformance with W3C policy, and the IETF Page of Intellectual Property Rights Notices, in conformance with IETF policy. 
Publication as a Proposed Recommendation does not imply endorsement by the W3C membership. 
This is still a draft document and may be updated, replaced or obsoleted by other documents at any time. 
It is inappropriate to cite a W3C Proposed Recommendations as other than a "work in progress." 
A list of current W3C Recommendations and other technical documents can be found at Hi Joseph, Two comments: 4.4.4 
The X509Data Element (dname encoding) I'd possibly suggest that instead of "compliant with RFC2253", we use the text "compliant with the subset of RFC2253 described below" or somesuch, because RFC2253 allows encodings that are not permitted by the text that we have. 
Is it intended that space be considered an ASCII control character; if not, I'd suggest the text "\00-\1f inclusive". 
In this case, leading and trailing ' ' should be escaped. 
If we want to allow leading and trailing whitespace to be trimmed from dname text nodes then we also need to state that a "\ " occuring at the end of a dname must be replaced by "\20". 
6.6.6 (always fortuitous to see) Schema Validation You have some text relating to XSLT at the end of the first paragraph. 
Merlin r/reagle@w3.org/2001.08.20/15:28:36 Baltimore Technologies plc will not be liable for direct, special, indirect or consequential damages arising from alteration of the contents of this message by a third party or as a result of any virus being passed on. 
In addition, certain Marketing collateral may be added from time to time to promote Baltimore Technologies products, services, Global e-Security or appearance at trade shows and conferences. 
This footnote confirms that this email message has been swept by Baltimore MIMEsweeper for Content Security threats, including computer viruses. 
Merlin, To avoid all these distinctions I included the space character in the specified range of ASCII control characters ("\00-\20"). 
I would prefer to keep it as it is. 
Liebe Gruesse/Regards, DI Gregor Karlinger Phone +43 316 873 5541 Institute for Applied Information Processing and Communications Austria Hi Gregor, I'm very strongly opposed to this. 
One of our goals is human readability; Jim\20Smith Research\20&amp;\20Development is far from as readable as it should be. 
If we don't want human readability, we should base 64 encode the DER-encoded ASN.1 dname. 
Realistically, it is a _trivial_ special case; all the rest is RFC 2253. 
Ignoring UTF-8 encoding, the current wording is: RFC 2253 - replace "\ " with "\20" - replace 0x00-0x20 with "\xx" My suggested wording is: RFC 2253 - replace 0x00-0x1f with "\xx" - replacing trailing "\ " with "\20" That's not much of a change. 
Merlin r/gregor.karlinger@iaik.at/2001.08.28/13:31:23 Baltimore Technologies plc will not be liable for direct, special, indirect or consequential damages arising from alteration of the contents of this message by a third party or as a result of any virus being passed on. 
In addition, certain Marketing collateral may be added from time to time to promote Baltimore Technologies products, services, Global e-Security or appearance at trade shows and conferences. 
This footnote confirms that this email message has been swept by Baltimore MIMEsweeper for Content Security threats, including computer viruses. 
Ah, right, should say "schema child". 
Fixed. 
Dear DSig WG, [note to the i18n IG: the XML DSig mailing list is public] I have been actioned (see e.g. by the I18N WG to have a look at part of your last call comments to the Character Model, identified on our part as Issues 94 and 95. 
These are not yet the formal dispositions from the I18N WG, but they will become formal dispositions automatically if these issues are not reopened by another i18n WG member. 
If you disagree with the dispositions below, please say so at your earliest convenience, so that we can try to find a better solution or can register your disagreement. 
For http://www.w3.org/International/Group/charmod-lc/#LCI-94, 3.6.1 
Character Encoding Identification Because of the layered Web architecture (e.g. formats used over protocols), there may be multiple and at times conflicting information about character encoding. 
Specifications MUST define conflict-resolution mechanisms (e.g. priorities) for these cases, and implementers and content developers MUST follow them carefully. 
This requirement can be relevant to dsig that there is a type attribute (of type URI) that could identify the encoding of an identified resource being signed. 
However, the signature text speaks of dsig types, not MIME types though MIME types when represented as a URI could be included: 4.3.3 
The Reference Element . 
The Type attribute facilitates the processing of referenced data. 
For example, while this specification makes no requirements over external data, an application may wish to signal that the referent is a Manifest. 
If someone did use this to describe the MIME type, the dsig spec does not address how to resolve conflicting information and leaves it to the application. 
It is not clear to us whether you want us to change the relevant text in the Character Model, and if yes, how, or whether you are asking us whether we think the Character Model applies to the DSig spec in this case or not, or something else. 
[This is a problem that applies to some others of your comments, too, and that has confused our WG quite a bit.] Anyway, having had a look at the latest version of the spec (PR Aug 20), I have first been a bit confused by the fact that there is more about the 'Type' attribute in the example section 2.2 (http://www.w3.org/TR/xmldsig-core/#sec-o-SignatureProperty) than in http://www.w3.org/TR/xmldsig-core/#sec-Reference, but I think I have understood what you mean by a DSig type. 
Given this, I think the scenario you describe (a mime type that may include a 'charset' parameter) is in theory possible. 
But as far as the 'Type' attribute is an open field for use by applications, it is impossible to forsee and forbid (or define priorities for) any potentially dangerous values. 
In particluar, as the spec says "Note that Type is advisory and no action based on it or checking of its correctness is required by core behavior.", 
it would be the responsibility of any specific application of DSig that used the Type attribute in a specific way to make sure it does not conflict with the Character Model. 
As such, the response of the I18N WG is that we accept your comment (in the sense that you have brought up an issue worth to consider), but that no actual action is needed on either side. 
Now to the next issue, our LCI-95 at 3.6.2 
Private Use Code Points The recommendation that private-use code points be allowed but prohibition against any mechanism to facilitate private agreements concerning these code points in any protocol seems bizarre. 
Why not leave it up to protocol designers to determine if they will include a mechanism for private extensions or negotiation of privately defined options? 
We have to disagree with you on this point. 
I will try to explain why. 
While some mechanisms for extensibility, and options, and private agreements can be part of most well-designed specifications, it is important that these mechanisms are themselves well-defined. 
However, there are many problems with using the private-use area, and these problems get more and more severe in the context of the WWW with its worldwide interaction. 
One main problem is the interaction with general XML processing tools. 
These tools would not know how to correctly conserve (or modify) the additional information in the protocol, and so the protocol and the codepoints could easily get out of sync. 
You may think that this is not much different from other kind of markup, but typing/cutting/pasting characters is something that will work for everything except the private use zone. 
A related problem is that we try to create an architecture where e.g. various XML namespaces can be combined in innovative ways. 
In a document with two different private use area extensions, this will lead to all kinds of problems and inconsistencies. 
If the interpretation of private use characters depends on the namespace of the element they are contained in, this breaks the fundamental assumption of formats such as HTML and XML that each entity has only one character encoding. 
It also brings us back into ISO 2022-like hodgepodges, except that there is much more of a layer violation between markup and character codes with 2022 character escapes. 
Another issue is that it might look easy to misuse the private use area for all kinds of pseudo-clever tagging and compression schemes. 
In addition, there is the danger that some assignments in the private use zone lead to pressure to include these codes in Unicode. 
The W3C is not the place to create new encoded characters, this is much better left to the expert organizations in this field. 
In some sense, the private use area is very similar to the x- convention for languages, charsets,... in the IETF. 
It is there for experimental use, but not for use as part of a specification. 
I hope this explains why we prohibit private-use agreement mechanisms for specifications that want to conform to the character model, and why we therefore reject your comment. 
Regards, Martin. 
One of my other problems with this new language is that it invalidates our interop samples and a bunch of extant signatures. 
Leaving spaces as spaces except at the end of a dname would solve this problem. 
Merlin r/gregor.karlinger@iaik.at/2001.08.28/13:31:23 Baltimore Technologies plc will not be liable for direct, special, indirect or consequential damages arising from alteration of the contents of this message by a third party or as a result of any virus being passed on. 
In addition, certain Marketing collateral may be added from time to time to promote Baltimore Technologies products, services, Global e-Security or appearance at trade shows and conferences. 
This footnote confirms that this email message has been swept by Baltimore MIMEsweeper for Content Security threats, including computer viruses. 
r/reagle@w3.org/2001.08.28/16:41:55 Speaking of which, is a single schema child sufficient? 
If we are to support explicit schema in any form, then we really need to support several; a document may involve multiple namespaces with a corresponding multiplicity of schemata. 
Or does schema support this in some manner? 
Merlin Baltimore Technologies plc will not be liable for direct, special, indirect or consequential damages arising from alteration of the contents of this message by a third party or as a result of any virus being passed on. 
In addition, certain Marketing collateral may be added from time to time to promote Baltimore Technologies products, services, Global e-Security or appearance at trade shows and conferences. 
This footnote confirms that this email message has been swept by Baltimore MIMEsweeper for Content Security threats, including computer viruses. 
That's what that sentence is *supposed* to answer [1]. 
If you want to do multiple validations, use multiple transforms. 
If the schema have complex relationships between them, build your relationship with includes imports and the like. 
[1] ... the ordered application of multiple schema validations may require multiple Transforms.... No special provision is made for the identification of a remote stylesheet at a given URI because it can be communicated via an xsd:include or xsd:import within the schema child of the Transform. 
Hi Joseph, r/reagle@w3.org/2001.08.30/12:03:07 
I understand this. 
However, use of import/include requires me to reference an external schema which may not be available. 
Using multiple transforms is not equivalent to explicitly including all the relevant schemata in a single transform. 
I cannot search for other validation transforms that include a required schema, however I can search through multiple children that may provide it. 
It basically seems to me that support for a single schema child goes only half way. 
I am probably wrong, but the two meaningful options seem, to me, either not to support any explicit schema child, or to support multiple children. 
Very Irish of me, I know. 
Merlin Baltimore Technologies plc will not be liable for direct, special, indirect or consequential damages arising from alteration of the contents of this message by a third party or as a result of any virus being passed on. 
In addition, certain Marketing collateral may be added from time to time to promote Baltimore Technologies products, services, Global e-Security or appearance at trade shows and conferences. 
This footnote confirms that this email message has been swept by Baltimore MIMEsweeper for Content Security threats, including computer viruses. 
Can you give me the specific scenario not addressable by what is presently specified? 
I know it can be awkward (if one schema imports other schema that exists in seperate files) but I think they be can be referenced via URIs and I wasn't keen to spend lots of time on another schema dependency that could get fairly complex. 
r/reagle@w3.org/2001.08.30/13:13:40 xsd:import can probably be used to do the job with schemaLocation='#xxx' identifying a schema elsewhere in the signature document. 
The schema spec states that this "will resolve to a serialization of a schema document", but that's probably fine; we can resolve it to whatever we want. 
So, I'm find with the current text. 
Merlin Baltimore Technologies plc will not be liable for direct, special, indirect or consequential damages arising from alteration of the contents of this message by a third party or as a result of any virus being passed on. 
In addition, certain Marketing collateral may be added from time to time to promote Baltimore Technologies products, services, Global e-Security or appearance at trade shows and conferences. 
This footnote confirms that this email message has been swept by Baltimore MIMEsweeper for Content Security threats, including computer viruses. 
Thank you for your response. 
We were not asking for a change. 
I was just stating some our choices in the context of your own so as to make explicit any hidden assumptions/conflicts. 
I agree with your response, but as I think this was Don's comment I will defer to him further discussion. 
Merlin proposed: Merlin has suggested that the white space not be escaped when encoded in a DNAME, and provides some tweaks to effect that change. 
Gregor responded that those tweaks were the reasons he escaped it in the first place. 
Merlin argued that the tweaks aren't that much trouble, they make the encoded text more human readable, and conforms to earlier examples -- which I think were the basis of the earlier conformance tests? 
Consequently, I'd argue we should adopt the "\00-\1f inclusive" text unless I misunderstand the course of the argument or others want to argue against it. 
