I can think of at least one important case where a simple optimization might work nicely: when the server *knows* that there is exactly 
The question here would be whether the server *knows* that there will be no variants in the future. 
I accept that it could and often does but it may not. 
But even in that case, it's unacceptable to serve up anything without checking the content negotiation algorithm. 
You can't send back text/html to someone who sends "Accept: text/html;q=0.0". 
The current draft 1.1 does not seem to support this position. 
By my my reading it is correct to send whatever the server has if it have only one choice. 
There is no special significance to q=0.0 that I could find. 
Just really undesired by the requestor. 
Dave Morris 
checking the content negotiation algorithm. 
You can't send back text/html to someone who sends "Accept: text/html;q=0.0". 
Well, I get this position from page 73, "If no variants remain with a value of Q greater than 0 the server should respond with a 406 None Acceptable." Additionally to support my interpretation there are references to empty Accept-Charset and Accept-Encoding headers allowing user agents to refuse resources (no mention of a multiple-variant requirement), so there is some implication that those headers must be looked at even for non-varying resources. 
But given that Content Negotiation is labeled an optional feature, that some of the statements int the spec could be interepreted the way you did, and that some people may not feel negotiation applies to non-varying resources, I realize the intention of the spec might not be as I had perceived. 
If that's true, I think it should be made more explicit one way or the other. 
Dan DuBois, Software Animal http://www.spyglass.com/~ddubois/ 
I absolutely do not speak for Spyglass. 
Yes. 
I'm not sure if this is the right way, but there clearly must be a way to pre-reject certain content forms. 
*/*;q=0 would I guess means don't send anything I haven't listed explictly. 
But since this is optional, the client must be prepared to receive junk anyway. 
Assuming this is the interpretation or clarification, Jeff's original comment basically still holds as the proxy would know that the origin had only one choice and it wasn't acceptable. 
Dave Morris 
