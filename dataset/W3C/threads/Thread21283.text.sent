After weeks of puzzling this problem, I've finally decided that "classes" are to be considered harmful in markup. 
Why? 
The simple reason is that they attach additional behaviours to markup [1], and extend them in ways which should be done using (things like) substitution groups and xsi:type denotations. 
Consider: classes are (in XHTML) practically universal attributes. 
They can apply to almost any element of worth. 
However, most of these elements already have functions. 
What does it mean to attach a class to an element that already has a function? 
Let's allow QNames in classes, and see what happens:- What's going on there? 
So surely classes only apply to elements that don't have behaviours already attached to them, i.e. abstract elements. 
But in that case, one should simply derive new element types from the abstract elements. 
I conclude that classes are simply hacks in languages which don't have proper extensibility mechanisms, and hence should be wiped out. 
No more classes! 
[1] An express violation of "2.7 Don't overload the semantics of individual elements" in XML GL, Kindest Regards, Sean B. Palmer @prefix : http://webns.net/roughterms/ . 
:Sean :hasHomepage http://purl.org/net/sbp/ . 
Classes are sometimes harmful. 
Not always. 
Let's try not to make too sweeping of generalities here; as an example, it would be very hard to use CSS with XHTML if the general belief is that "classes are harmful." 
Which means you'd get a lot of reflex negative reaction from any experienced web developer who has found the use of class in (X)HTML to be essential to producing any reasonable presentation. 
Class is highly useful (and non-harmful) in XHTML, and you simply can't build a complex XHTML+CSS user interface without it. 
I think it's the wrong message to send if we make blanket statements like this, even if it's in the context of guidelines for building XML languages. 
--Kynn Kynn Bartlett mailto:kynn@hwg.org 
Board Member, HTML Writers Guild http://www.hwg.org/ 
AWARE Center Director http://www.awarecenter.org/ 
This is a flaw in (the current version of) XHTML. 
Because it does not allow easy extensibility via namespaces, developers are forced to use the class attribute to get a poor approximation. 
I think that semantics and accessibility would be better served if XHTML did things a different way. 
[ "Aaron Swartz" ; mailto:me@aaronsw.com ; http://www.aaronsw.com/ 
] This is a flaw in (the current version of) XHTML. 
Because it does not allow easy extensibility via namespaces, developers are forced to use the class attribute to get a poor approximation. 
I think that semantics and accessibility would be better served if XHTML did things a different way. 
If you're thinking that designers wouldn't just create blue tags or color attributes, then you're hopelessly naive and/or deluded, friends. 
Classes in XHTML aren't inherently wrong or "harmful", but of course you can construct abuses of them, just like you can construct abuses of XML. --Kynn Kynn Bartlett mailto:kynn@hwg.org 
President, HTML Writers Guild http://www.hwg.org/ 
AWARE Center Director http://www.awarecenter.org/ 
Kynn is raising the "in the meanwhile" point which is the area in which people doing *real* stuff operate. 
Since not only does XHTML *not* do things in this different way, it is unlikely to do so in any reasonable length of time. 
Their deadlines do not permit waiting the requisite several years before any of the stuff we propose will be even published, let alone realized in practice. 
CSS is years old and still barely in effect by the browsers and almost not at all by authors. 
Section 508 is over 15 years old and is just now reaching any level of awareness. 
The ten commandments are thousands of years... Love. 
ACCESSIBILITY IS RIGHT - NOT PRIVILEGE I think that semantics and accessibility would be better served if XHTML did things a different way. 
Apologies - I thought that you folks were creating a set of recommendations for an ideal format, and I did not want Sean's point to be tossed out simply because XHTML didn't follow it. 
Definitely, XHTML authors should use class. 
The authors of XHTML shouldn't. 
Kynn comments: No argument here. 
But you can at least give people the chance. 
Not too many folks use LONGDESC, but I'm very glad it's there. 
"Aaron Swartz" | The Semantic Web http://www.aaronsw.com/ 
| i'm working to make it happen Apologies - I thought that you folks were creating a set of recommendations for an ideal format, and I did not want Sean's point to be tossed out simply because XHTML didn't follow it. 
Well, I think we need to avoid deciding that something like "class" is always going to be wrong. 
I don't think it's a completely wrong approach, albeit not necessarily "ideal." 
(I also think it's dangerous to assume that we, right now, with limited knowledge and experience with real-world XML formats, will be able to absolutely design the requirements for an "ideal" language. 
Hubris needs to be avoided and advice needs to be given -- thus I say the recommendations define a "better" format, not the "ideal" format.) Definitely, XHTML authors should use class. 
The authors of XHTML shouldn't. 
Well, this gets tricky with extensible XHTML (which is the whole point after all) -- if I'm going to do div class="foo" should I instead create a foo tag as part of an XHTML module? 
Is that necessarily a better approach? 
XHTML authors may theoretically be extenders of their spec, although I don't think it's a normal situation for them. 
Using "class" allows them to "extend" in a half- assed way, while using modularization or the like allows them to do formal extension, but formal extension may be as big of a problem, or worse. 
(Which is why I am shying away from the suggestions raised here that the "right" way is to introduce more attributes or elements, using namespaces, instead of using class.) 
As for what the authors of XHTML should do, well, maybe we should ask what their plans for "class" are. 
I don't think "class" is at all "harmful" enough that we, as the PF group, should be mandating that they get rid of it entirely. 
(But of course if they're already planning to dump it, hey, that's up to them.) --Kynn Kynn Bartlett mailto:kynn@hwg.org 
President, HTML Writers Guild http://www.hwg.org/ 
AWARE Center Director http://www.awarecenter.org/ 
Yes, and perhaps I should have been more clear. 
My point was that @class as implemented makes it incredibly easy for one to violate XML GL 2.7, i.e. "don't overload element semantics". 
If the content is an NMTOKEN, they also have the added disadvantage that they don't have global referrability. 
When you add that decentralization, possibly in the form of a QName, you can easily see why @class is a hack. 
But because it's a hack, it provides a good interim solution to languages such as XHTML 1.0, which don't have extension mechansisms, per se. 
But I know that. 
And you know that I know that. 
What I'm asking for is not some religious classes are evil, stay away from classes" thing as a law for all developers to follow, but simply a guideline that asks people to be careful in choosing extensibility mechanisms, that they make them as accessible as possible, allowing people to properly define the semantics of the extensions that they're creating. 
NMTOKENs in classes DO NOT let you do that, unless you use some convoluted XPath expression, which no one in their right mind is going to design for. 
QNames help, but then they underline the overloading of semantics problem. 
So I think that @class can and *should* be considered "harmful", but I accept your caveat that they provide an interim solution. 
Kindest Regards, Sean B. Palmer @prefix : http://webns.net/roughterms/ . 
:Sean :hasHomepage http://purl.org/net/sbp/ . 
