Hello Everyone, I'm not an expert on URI's but, I am an author on the LSID specification and would like to clarify some issues. 
1) URI's are a nightmare in the lifesciences. 
Particularly when used to encode semantic information about a particular entity that exists on the web. 
For example (from the DAS 1.0 specification): '/wormbase/das/elegans/features?segment=CHROMOSOME_I:1000,2000' 
This leads the programmer and biologist to certain conclusions about query semantics ie. what this URI encodes and (perhaps) what the programmer meant when using a certain encoding scheme. 
People infer meaning from a URI and learn this semantic very quickly. 
Some would argue that this is a good thing however, once the biologist trains themselves on this type of system, the developers of these systems are forever locked into this scheme of identification. 
This will forever become the identifier for this entity. 
In the case noted above, this is particularly cumbersome: If a researcher has started to annotate this region of the chromosome with metadata and the underlying data changes As with any scientific data, there must be a way to reasonably reproduce the evidence that lead to a particular result or hypothesis. 
By encoding things with URI's we do not guard against the fact that the underlying data may change. 
This leads me to a question about "persistent" URI's and URL's (PURLS's): How do you ensure that two URI's are pointing at the same object (bytes)? 
If we can collectively answer this question we can encode an LSID any way we please as long as we keep in mind that this information must persist as long as a journal or other well vetted scientific medium. 
2) (sorry to be repetitive) Scientists typically perform research on the web as a supplemental exercise. 
By this, I mean that most researchers use data gathered from the web to enhance their knowledge about a certain gene, protein, transcript, chemical etc. 
This data is not typically referenced in a journal article etc. If we want to allow for the incorporation and dissemination of scientific information and knowledge across the internet as a common means of communication we need to ensure two things: a) Persistence b) Provenance Science requires that an experiment be reproducible by other researchers and that the discoverer/institution get credit for the discovery made or technique used to make the discovery. 
We must pay particular attention to this as we craft the LSID specification. 
3) Browsers, HTTP semantics of query, RESTful interfaces, etc. are secondary to how data is used in the industry. 
Having a resolver to get at a particular piece of information should not be a huge barrier to the LSID specification's adoption. 
Case in point, IBM's implementation of LSID utilizes a COM plugin to allow users to perform LSID queries from a web browser. 
ie. lsid:// authority : namespace : identifier : version I hope this helps. 
I'll be posting specific examples of LSID in RDF in the next few weeks which I hope will help clarify this issue further. 
Best, -B Brian Gilman President Panther Informatics Inc. 9 Acadia Park #2 Somerville, MA 02143 Phone 617-335-8276 E-Mail: gilmanb@pantherinformatics.com gilmanb@jforge.net 
AIM: gilmanb1 01000010 01101001 01101111 01001001 01101110 01100110 01101111 01110010 01101101 01100001 01110100 01101001 01100011 01101001 01100001 01101110 Confidentiality Notice This transmission and the documents contained herein are confidential and privileged. 
The transmission and the documents are intended only for the individuals or entities named above. 
If you are not the intended recipient, any disclosure, copying, distribution or use of this transmission is prohibited. 
If you received this transmission in error, please contact us immediately so that we may arrange for its return. 
| I am not sure how to answer this ultimate question. 
Perhaps I need to | understand more about HTTP URIs in order to give comparison with the URN | used in LSID spec. 
To be honest I have tried to find more and I gave up | after reading very nice article about HTTP URIs by Tim Berners-Lee | (http://www.w3.org/DesignIssues/HTTP-URI.html) that gave me feeling that I | am out of the league :-( I am by no means an expert on this either :) How URIs are used in the web architecture and the semantic web architecture are contentious issues to say the least. 
Given the importance of standardisation for the life sciences e.g. MAGE, I am simply trying to understand how identifier schemes such as LSID fit into the current thinking about the semantic web and URIs. 
|I think the question is mainly why reinvent a wheel that already exixts. 
Precisely. 
|Using persistent HTTP URIs is a good goal because it is standard and there |exists a lot of HTTP based applications e.g. browsers that understand HTTP |URIs and can provide information of the resource on the Web without |anything extra. 
This is the exactly the context in which I was trying to raise the issue of using LSIDs in RDF. 
Technically speaking there is nothing wrong with the current LSID specification IMO. 
However if I want to allow other users to dereference LSIDs that my authority mints, it requires me to maintain an LSID resolver. 
Clients must also have the necessary libraries to dereference the LSID. 
Having this infrastructure in place adds a practical burden to using LSIDs which would go away if LSIDs were to be specified in terms of HTTP URIs. 
Which, if we assume persistence is an organisational issue, then HTTP URIs are just as good as URNs. 
While the RDF spec says nothing about URIs being dereferenced to provide representations, my practical expectation is that they should i.e. it makes that resource more useful if I can get either a representation of that resource or metadata about that resource. 
The LSID does specify interfaces for retrieving metadata about a LSID which is a good thing. 
However I'll leave the "how to get metadata about a resource" question for later... 
This leads of course to the thorny issue of whether HTTP URIs are names or locations or both. 
My simple view on this is that a HTTP URI is a name in the same sense that the LSIDs are names, however it *may* also be dereferenced to provide a representation of the resource that it is naming (using the existing web infrastructure). 
|When somebody defines a URN they can usually as well reserve a HTTP URI |e.g. http://www.lsid.org/ and define URIs under it e.g. |http://www.lsid.org/path.../enzyme1. 
This maybe one possible solution, however the LSID spec says nothing about this. 
|Why we are now ALSO discussing of using UUID URNs is because we have |problems with local file: type URIs (file: URIs e.g. file//marja/myfile123) |and we want to make them unambiguous when a user cannot do HTTP URIs maybe |because a user does not own a http:// domain name where to publish it or |for some other reason. 
I can see this as an issue for individuals creating local stores of annotated bookmarks. 
In the case of the life sciences it would be easier to control as any authority using HTTP URI based LSIDs would need to have a http:// domain name to participate. 
|After publishing we mostly want to use the HTTP URIs to be able to benefit |from the common Web standards. 
But it is also possible for some application |to benefit from the URN bit of the information when so wished. 
Maybe there is a best of both worlds approach ? 
_greg Greg Tyrelle |used to encode semantic information about a particular entity that |exists on the web. 
For example (from the DAS 1.0 specification): |about query semantics ie. what this URI encodes and (perhaps) what the |programmer meant when using a certain encoding scheme. 
People infer |meaning from a URI and learn this semantic very quickly. 
Some would |argue that this is a good thing however, once the biologist trains |themselves on this type of system, the developers of these systems are |forever locked into this scheme of identification. 
This will forever |become the identifier for this entity. 
In the case noted above, this is |particularly cumbersome: If a researcher has started to annotate this |region of the chromosome with metadata and the underlying data changes Both LSIDs and URLs are URIs, in which case they are intended to be opaque identifiers. 
You are not meant to infer anything about the resource from the URI ? 
I believe this is a case of using URIs incorrectly [1], not that HTTP URIs are broken. 
|As with any scientific data, there must be a way to reasonably |reproduce the evidence that lead to a particular result or hypothesis. 
My main issue is the use of LSID to identify biological objects or concepts in RDF (the example is borrowed from one of Eric Neumann's previous emails to the list): :A9311 a :Annotation ; dc:creator "Jonathan Smythe" ; affx:hypothesizes { :Gene5 a affx:Gene ; affx:hasVariant [ affx:representedBy :gi9887088; affx:process "GO:0006306"; affx:associatedWith "omim:209920" If my "agent" is to add this hypothesis to it's KB, I might instruct it to find more information about the processes involved (assuming I don't already have this knowledge). 
If the GO terms and GIs were HTTP URIs I can dereference them to (hopefully) retrieve some useful information about those resources. 
However with LSID I must have the necessary infrastructure in place (resolvers, clients etc.). 
I have ignored the issue of retrieving the "object" vs. a description of the "object" in this case. 
But either way I have a better chance with HTTP. 
True the LSID spec defines mechanisms for getting descriptions of LSIDs via web services etc. 
I should investigate the implementations... |By encoding things with URI's we do not guard against the fact that the |underlying data may change. 
Why do we need to guard against the underlying data changing ? 
|(PURLS's): How do you ensure that two URI's are pointing at the same |object (bytes)? 
If we can collectively answer this question we can |encode an LSID any way we please as long as we keep in mind that this |information must persist as long as a journal or other well vetted |scientific medium. 
You will not be able to "technically" insure two URIs are not pointing at the same object using LSID or HTTP URIs IMO. 
Also if LSIDs are going to be use to identify "concepts", what is to say that two authorities will have LSIDs for the concept p53 ? 
This is especially important considering their use in RDF to identify "resources". 
Encoding LSID as a HTTP URIs seems to be a way forward. 
Maybe some kind of mapping: URN:LSID:example.com:12345:1 |research on the web as a supplemental exercise. 
By this, I mean that |most researchers use data gathered from the web to enhance their |knowledge about a certain gene, protein, transcript, chemical etc. 
This |data is not typically referenced in a journal article etc. If we want |to allow for the incorporation and dissemination of scientific |information and knowledge across the internet as a common means of |communication we need to ensure two things: |researchers and that the discoverer/institution get credit for the |discovery made or technique used to make the discovery. 
We must pay |particular attention to this as we craft the LSID specification. 
I agree that scientists typically "Perform research on the web" as a supplement to "real experiments". 
This is edging towards "systems biology" i.e. how to best utilise our existing knowledge to better target our experimental approaches (my understanding of it). 
That being said LSID URNs are not part of the web, they don't use web infrastructure. 
I maintain that persistence is an organisational issue and not necessarily technical. 
There is both a social and trust component of persistence e.g. 
I trust that the NCBI will maintain persistent URIs for their records (maybe not :)) or a LSID authority for that matter. 
|are secondary to how data is used in the industry. 
Having a resolver to |get at a particular piece of information should not be a huge barrier |to the LSID specification's adoption. 
Case in point, IBM's |implementation of LSID utilizes a COM plugin to allow users to perform |LSID queries from a web browser. 
ie. |lsid:// authority : namespace : identifier : version I'm not sure what to make of this, points two and three seem to contradict each other. 
Scientists performing "research on the web" use browsers, HTTP, and RESTful interfaces. 
However the web (Browsers, HTTP, REST) are "secondary to how data is used in industry" ? 
Again, a life sciences identifier scheme that is not part of the web is less useful to me. 
But maybe to industry perhaps ? 
My intention here is not to be harshly critical of the LSID spec or the points you have made. 
I am very sympathetic to the view that persistent identifiers be widely adopted in the life sciences. 
I am just trying to figure out best practice use for LSIDs in RDF etc. |RDF in the next few weeks which I hope will help clarify this issue |further. 
Some examples and further discussion on identifiers (LSID) for life sciences as they pertain to the semantic web would be great. 
_greg [1] http://www.w3.org/Provider/Style/URI _greg Greg Tyrelle Greg | Greg | '/wormbase/das/elegans/features?segment=CHROMOSOME_I:1000,2000' Greg | Greg | Greg | This leads the programmer and biologist to certain conclusions Greg |about query semantics Greg Both LSIDs and URLs are URIs, in which case they are intended Greg to be opaque identifiers. 
You are not meant to infer anything Greg about the resource from the URI ? 
I believe this is a case of Greg using URIs incorrectly [1], not that HTTP URIs are broken. 
It's applying extra semantics to the URL which it is not supposed to have. 
This is not that URI's are being used incorrectly, it's just that as specified they do not do all that they need to. 
Greg If my "agent" is to add this hypothesis to it's KB, I might Greg instruct it to find more information about the processes Greg involved (assuming I don't already have this knowledge). 
If Greg the GO terms and GIs were HTTP URIs I can dereference them to Greg (hopefully) retrieve some useful information about those Greg resources. 
However with LSID I must have the necessary Greg infrastructure in place (resolvers, clients etc.). 
You need infrastructure to resolve a HTTP URI as well. 
The question is whether the extra infrastructure you need for a LSID is worth the effort. 
Greg I have ignored the issue of retrieving the "object" vs. a Greg description of the "object" in this case. 
I think LSID's address this well. 
Greg |By encoding things with URI's we do not guard against the Greg fact that the |underlying data may change. 
Greg Why do we need to guard against the underlying data changing ? 
This is one of the main issues in the use of identifiers in bioinformatics. 
They identify two things: a specific data set, such as a sequence; and the biological entity. 
The former is less stable than the latter. 
A lot of databases have identifiers, which do not change (very frequently) and accessions (which change when the data is updated). 
If you can't cope with versions then you have to keep every past version of the database around or URL's will become out of date. 
Or you apply some new semantics. 
This has happened on the web. 
"http://news.bbc.co.uk" does not identify a specific document, but the current version of a specific document. 
It changes every hour or so. 
Greg | This leads me to a question about "persistent" URI's and Greg URL's |(PURLS's): How do you ensure that two URI's are Greg pointing at the same |object (bytes)? 
If we can collectively Greg answer this question we can |encode an LSID any way we Greg please as long as we keep in mind that this |information Greg must persist as long as a journal or other well vetted Greg |scientific medium. 
Greg You will not be able to "technically" insure two URIs are not Greg pointing at the same object using LSID or HTTP URIs IMO. 
Also Greg if LSIDs are going to be use to identify "concepts", what is Greg to say that two authorities will have LSIDs for the concept Greg p53 ? 
This is especially important considering their use in Greg RDF to identify "resources". 
Greg Encoding LSID as a HTTP URIs seems to be a way forward. 
Maybe Greg some kind of mapping: Greg URN:LSID:example.com:12345:1 Greg http://example.com.lsid.org/12345/1 
But surely, this URL wouldn't be expected to resolve? 
Phil GT Again, a life sciences identifier scheme that is not part of the web GT is less useful to me. 
But maybe to industry perhaps ? 
I don't see it like that at all. 
To be really useful LSID's need to become part of the web too. 
I have reached the point where I see no difference as a user. 
We quite happily place LSID's in anchor links right into HTML ( A SRC="lsidres:urn:lsid:pdb.org:pdb:1AFT" Check out this protein! 
/A ) - once you install the LSID resolution protocol handler for IE you can "surf the data web" quite happily as a human - the main difference is that your software can too. 
See http://lsid.limnology.wisc.edu/ for an example of where Dan Smith implemented this and picture of an application running in IE that uses the stack. 
Using the client side protocol stack is not any different to using "GET" or some other such utility you would use to download something via HTTP. 
It is good to be able to click on a link and know that the underlying data stack can be safely left to find you a copy of the object you seek, from potentially multiple sources/over multiple protocols. 
Additionally, having a formal method for the accessing of meta-data allows for more sophisticated interaction with the provider of the data, for example for programmatic negotiation of format/semantic type or perhaps the automated discovery of the latest version of an object, given an earlier version (or any other related LSID) as a starting point. 
GT If my "agent" is to add this hypothesis to it's KB, I might instruct GT it to find more information about the processes involved (assuming I GT don't already have this knowledge). 
If the GO terms and GIs were HTTP GT URIs I can dereference them to (hopefully) retrieve some useful GT information about those resources. 
However with LSID I must have the GT necessary infrastructure in place (resolvers, clients etc.). 
We do exactly this in some of the systems we are currently building. 
Various authorities might well build up a lists of definitions for formats, semantic types etc and provide LSID's for them (e.g. urn:lsid:i3c.org:predicates:storedAs 
or urn:lsid:i3c.org:formats:pdb)that are shared widely - this greatly enhances interoperabilty btw. 
Dereferencing on one of these results in a web page which might list (in human readable) exactly what is meant by a concept, a specification of the format, or a list of links to software that can be used for processing that information. 
Additionally this information might be stored as meta-data for that LSID, allowing automated programmatic access to the same/additional data. 
GT You will not be able to "technically" insure two URIs are not pointing GT at the same object using LSID or HTTP URIs IMO. 
Also if LSIDs are GT going to be use to identify "concepts", what is to say that two GT authorities will have LSIDs for the concept p53 ? 
This is especially GT important considering their use in RDF to identify "resources". 
The object may be in multiple places, but the LSID can be the same. 
If the name is the same, it is the same object - it does not matter where the various copies are stored. 
Of course it is better if two authorities use the _same_ LSID for p53 but if they do not, someone else may do it for them by creating a triple that says something like urn:lsid:pdb.org:pdb:p53 
lsid:i3c.org:predicates:sameAs 
lsid:anotherauth.com:proteins:p53 
As you can see, third parties may quite happily use another authorities lsid to say something of their own about the data stored by our original two authorities for concept p53. 
Kindest regards, Sean Sean Martin IBM Corp. GT Encoding LSID as a HTTP URIs seems to be a way forward. 
Maybe some GT kind of mapping: GT GT URN:LSID:example.com:12345:1 GT GT http://example.com.lsid.org/12345/1 
Actually underneath the covers at a current LSID authority this is what most often happens. 
The LSID resolver spec. 
and software stacks were designed exactly to allow those providing data make this mapping... it allows for other protocols as well as HTTP (file://, ftp:// or SOAP etc) as well as for specifying multiple sources for the data (and meta-data). 
The difference though is that the data provider controls the mapping, not a convention applied by someone using the LSID locally. 
This means the data provider can remake the map any time they like and nobody gets broken. 
Kindest regards, Sean Sean Martin IBM Corp Greg Tyrelle greg@tyrelle.net 
Sent by: public-semweb-lifesci-request@w3.org 04/22/2004 02:07 AM To Brian Gilman gilmanb@jforge.net 
cc public-semweb-lifesci@w3.org Subject Re: URLs/LSID/RDF etc. |used to encode semantic information about a particular entity that |exists on the web. 
For example (from the DAS 1.0 specification): |about query semantics ie. what this URI encodes and (perhaps) what the |programmer meant when using a certain encoding scheme. 
People infer |meaning from a URI and learn this semantic very quickly. 
Some would |argue that this is a good thing however, once the biologist trains |themselves on this type of system, the developers of these systems are |forever locked into this scheme of identification. 
This will forever |become the identifier for this entity. 
In the case noted above, this is |particularly cumbersome: If a researcher has started to annotate this |region of the chromosome with metadata and the underlying data changes Both LSIDs and URLs are URIs, in which case they are intended to be opaque identifiers. 
You are not meant to infer anything about the resource from the URI ? 
I believe this is a case of using URIs incorrectly [1], not that HTTP URIs are broken. 
|As with any scientific data, there must be a way to reasonably |reproduce the evidence that lead to a particular result or hypothesis. 
My main issue is the use of LSID to identify biological objects or concepts in RDF (the example is borrowed from one of Eric Neumann's previous emails to the list): :A9311 a :Annotation ; dc:creator "Jonathan Smythe" ; affx:hypothesizes { :Gene5 a affx:Gene ; affx:hasVariant [ affx:representedBy :gi9887088; affx:process "GO:0006306"; affx:associatedWith "omim:209920" If my "agent" is to add this hypothesis to it's KB, I might instruct it to find more information about the processes involved (assuming I don't already have this knowledge). 
If the GO terms and GIs were HTTP URIs I can dereference them to (hopefully) retrieve some useful information about those resources. 
However with LSID I must have the necessary infrastructure in place (resolvers, clients etc.). 
I have ignored the issue of retrieving the "object" vs. a description of the "object" in this case. 
But either way I have a better chance with HTTP. 
True the LSID spec defines mechanisms for getting descriptions of LSIDs via web services etc. 
I should investigate the implementations... |By encoding things with URI's we do not guard against the fact that the |underlying data may change. 
Why do we need to guard against the underlying data changing ? 
|(PURLS's): How do you ensure that two URI's are pointing at the same |object (bytes)? 
If we can collectively answer this question we can |encode an LSID any way we please as long as we keep in mind that this |information must persist as long as a journal or other well vetted |scientific medium. 
You will not be able to "technically" insure two URIs are not pointing at the same object using LSID or HTTP URIs IMO. 
Also if LSIDs are going to be use to identify "concepts", what is to say that two authorities will have LSIDs for the concept p53 ? 
This is especially important considering their use in RDF to identify "resources". 
Encoding LSID as a HTTP URIs seems to be a way forward. 
Maybe some kind of mapping: URN:LSID:example.com:12345:1 |research on the web as a supplemental exercise. 
By this, I mean that |most researchers use data gathered from the web to enhance their |knowledge about a certain gene, protein, transcript, chemical etc. 
This |data is not typically referenced in a journal article etc. If we want |to allow for the incorporation and dissemination of scientific |information and knowledge across the internet as a common means of |communication we need to ensure two things: |researchers and that the discoverer/institution get credit for the |discovery made or technique used to make the discovery. 
We must pay |particular attention to this as we craft the LSID specification. 
I agree that scientists typically "Perform research on the web" as a supplement to "real experiments". 
This is edging towards "systems biology" i.e. how to best utilise our existing knowledge to better target our experimental approaches (my understanding of it). 
That being said LSID URNs are not part of the web, they don't use web infrastructure. 
I maintain that persistence is an organisational issue and not necessarily technical. 
There is both a social and trust component of persistence e.g. 
I trust that the NCBI will maintain persistent URIs for their records (maybe not :)) or a LSID authority for that matter. 
|are secondary to how data is used in the industry. 
Having a resolver to |get at a particular piece of information should not be a huge barrier |to the LSID specification's adoption. 
Case in point, IBM's |implementation of LSID utilizes a COM plugin to allow users to perform |LSID queries from a web browser. 
ie. |lsid:// authority : namespace : identifier : version I'm not sure what to make of this, points two and three seem to contradict each other. 
Scientists performing "research on the web" use browsers, HTTP, and RESTful interfaces. 
However the web (Browsers, HTTP, REST) are "secondary to how data is used in industry" ? 
Again, a life sciences identifier scheme that is not part of the web is less useful to me. 
But maybe to industry perhaps ? 
My intention here is not to be harshly critical of the LSID spec or the points you have made. 
I am very sympathetic to the view that persistent identifiers be widely adopted in the life sciences. 
I am just trying to figure out best practice use for LSIDs in RDF etc. |RDF in the next few weeks which I hope will help clarify this issue |further. 
Some examples and further discussion on identifiers (LSID) for life sciences as they pertain to the semantic web would be great. 
_greg [1] http://www.w3.org/Provider/Style/URI _greg Greg Tyrelle 
