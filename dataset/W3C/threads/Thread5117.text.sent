1. MKE 6.0 has a much improved interface to the TAP KB. 
Using MKE, and comparing the results to the online Perl browser, I have identified some new GetData bugs/features. 
2. Take a minute to browse the MKE - TAP session: I have retrieved various properties of Michael Jordan, Resource, Property. 
Here's a summary of the bugs/features. 
3. "Resource" info. 
must sometimes be retrieved using "Node". 
Likewise, "Property" must be called "PropertyType". 
For now, I have programmed this translation into the shell script 4. subject has ?; # GetData subject domain yes does not return all of the properties. 
Note that Michael Jordan has four properties, and none are returned by GetData. 
Most properties (with values) can be retrieved by name. 
$. has type = Athlete; # $. isu Athlete; $. has title = "Michael Jordan"; $. has plays = SportBasketBall; $. has playsForTeam = SportsTeamWashingtonWizards; 5. subject has title = ?; 
# GetData subject title no always fails. 
Dick McCullough knowledge := man do identify od existent done; knowledge haspart proposition list; I'm embarrassed. 
The first directory name is missing in both URLs. 
The correct URLs are Dick McCullough knowledge := man do identify od existent done; knowledge haspart proposition list; 1. MKE 6.0 has a much improved interface to the TAP KB. 
Using MKE, and comparing the results to the online Perl browser, I have identified some new GetData bugs/features. 
2. Take a minute to browse the MKE - TAP session: I have retrieved various properties of Michael Jordan, Resource, Property. 
Here's a summary of the bugs/features. 
3. "Resource" info. 
must sometimes be retrieved using "Node". 
Likewise, "Property" must be called "PropertyType". 
For now, I have programmed this translation into the shell script 4. subject has ?; # GetData subject domain yes does not return all of the properties. 
Note that Michael Jordan has four properties, and none are returned by GetData. 
Most properties (with values) can be retrieved by name. 
$. has type = Athlete; # $. isu Athlete; $. has title = "Michael Jordan"; $. has plays = SportBasketBall; $. has playsForTeam = SportsTeamWashingtonWizards; 5. subject has title = ?; 
# GetData subject title no always fails. 
Dick McCullough knowledge := man do identify od existent done; knowledge haspart proposition list; Very cool. 
Can you try this against my development server at and see if these problems have been fixed? 
The server on panic uses a newer data set and I think I fixed all these irritating issues. 
Can you show me the query that you're using to ask for the properties, so I can try to reproduce it? 
You may need to use "label" or "rdfs:label" here, we've been standardizing toward the rdfs version of "what's this called" and not the Dublin Core version. 
See my answers below. 
Dick McCullough knowledge := man do identify od existent done; knowledge haspart proposition list; Adrian" Thinkonaut@aol.com ; "Latimer, Richard S." rslatimer@comcast.net ; "KR-language" KR-language@YahooGroups.com newer Yes, I will try your new system &amp; let you know. 
GetData shell script is called as GetData subject property inverse prefix suffix Actual Java program is shown in http://rhm.cdepot.net/bin/GetData. 
Note that I am using your SuperClass and SubClass search flags. 
In each case, the subject is "AthleteJordan,_Michael". 
For retrieving all the properties, property is "domain" and inverse is "yes". 
For retrieving the individual properties, the properties are "type", "title", "plays", "playsForTeam" and inverse is "no". 
GetData is called by http://rhm.cdepot.net/bin/mkrGetData, whose arguments are an MKR question minus the terminating semicolon. 
I will try some variations on these names. 
You want to use "arcs" to find properties that an object has, and "arcs, inverse=yes" for properties that point to an object. 
Domain only applies to classes, which may be counterintuitive. 
Can you try that and let me know how it goes? 
See below Dick McCullough knowledge := man do identify od existent done; knowledge haspart proposition list; KR-language@YahooGroups.com ; "Latimer, Richard S." rslatimer@comcast.net ; "Apollo, Adrian" Thinkonaut@aol.com ; "Bray, Tim" snip standardizing "label" works on current system. 
$ ke ke$ Resource has title = ?; 
# INFO: count = 0 ke$ Resource has label = ?; 
Resource has label = Root of the taxonomy # INFO: count = 1 ke$ Resource has rdf:label = ?; 
# INFO: count = 0 ke$ Resource has rdfs:label = ?; 
# INFO: count = 0 ke$ Resource has description = ?; 
Resource has description = Root of the taxonomy # INFO: count = 1 ke$ set . 
= "AthleteJordan,_Michael"; ke$ $. has label = ?; 
AthleteJordan,_Michael has label = Michael Jordan # INFO: count = 1 ke$ $. has rdf:label = ?; 
# INFO: count = 0 ke$ $. has rdfs:label = ?; 
# INFO: count = 0 ke$ exit 2. I'm just about to try http://panic.stanford.edu/data. 
Should have some results for you soon. 
