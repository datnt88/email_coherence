Hi, 
Changing the value of a default attribute (Attr.specified 
= false) will change it to a specified attribute, as does cloning and importing. 
However, although the specification does have something to say on the subject of changing the prefix of a default attribute, it isn't clear wether or not the specified flag should be set to 'true' by the implementation. 
I infer that the specified flag should stay false; but I'd like to hear a confirmation about this. 
Martijn Pieters 
Software Engineer mailto:mj@digicool.com 
Digital Creations http://www.digicool.com/ 
Creators of Zope http://www.zope.org/ 
Good point; I think we completely missed that. 
My reading is that this depends on whether the default came from a DTD or a namespace-aware schema language. 
If it came from a DTD, the default is bound to the specific QName. 
Therefore, changing the prefix should be roughly equivalent to removing the existing attribute and instantiating a new one with the new name... and there should be two results. 
The first is that this Attr object should now be considered Specified. 
The other is that the default should be reasserted under the original QName. 
If it came from a namespace-aware source (which, please note, we are still in the process of defining), the prefix is irrelevant to the document structure (it's just a serialization hint) and changing it does not need to have any effect on whether it's considered the default. 
However, it's fair to say that changing the prefix implies that you intend a specific serialization, so I think it's reasonable to say that explicitly setting the prefix does make the Attr become Specified. 
Note, however, that here the specified Attr overlays the default rather than appearing alongside it, since it really is the same conceptual value as far as the schema is concerned. 
This is personal opinon, subject to confirmation or rejection by the rest of the DOM committee. 
Joe Kesselman / IBM Research 
This is interesting. 
I would assume that once the default Attr is in the tree, it has received a namespaceURI. 
Changing the prefix will not change said namespaceURI. 
In other words, the Attr is no longer bound by its qualified name, but by it's namespaceURI and localname. 
If this wasn't the case, the reasserted default Attr Node would receive the same namespaceURI, thus representing the same attribute. 
This would result in an Element Node with inconsistent contents; you don't know which Attr would be returned on a attributes.getNamedItemNS() or getAttributeNS() call, for instance. 
Okay, I created an issue in our issue tracker on this, until an official statement has been made on the issue. 
Martijn Pieters 
Software Engineer mailto:mj@digicool.com 
Digital Creations http://www.digicool.com/ 
Creators of Zope http://www.zope.org/ 
Has there been any progress on this issue? 
It has been 3 weeks since this was brought up. 
Martijn Pieters 
Software Engineer mailto:mj@digicool.com 
Digital Creations http://www.digicool.com/ 
Creators of Zope http://www.zope.org/ 
Yes but we're still catching up the resolutions from our meeting partly because I wasn't available. 
Be patient a little more. 
Thank you, Philippe 
