(TOP (S (NP (DT The) (NNP DOM2) (NNP Traversal) (NN spec)) (VP (VBZ defines) (ADVP (RB very) (RB well)) (SBAR (WHNP (WP what)) (S (VP (MD should) (VP (VB happen) (SBAR (IN if) (S (NP (NP (DT the) (NN currentNode)) (PP (IN of) (NP (DT a) (NN nodeIterator) (CC or) (NN treeWalker)))) (VP (AUX is) (VP (VBN moved) (UCP (PP (IN in) (NP (DT a) (NN document))) (CC or) (ADVP (IN out) (PP (IN from) (NP (PRP it)))))))))))))) (. .)) )
(TOP (SBARQ (RB However) (WHNP (WP what)) (SQ (VP (MD should) (VP (VB happen) (SBAR (IN if) (S (NP (DT the) (NN root) (NN node)) (VP (AUX is) (VP (VBN moved) (PP (IN in) (NP (DT the) (NN tree)))))))))) (. ?)) )
(TOP (S (NP (DT The) (NN problem)) (VP (VBZ applies) (PP (IN for) (NP (NP (DT the) (NN root) (NN node)) (PP (IN of) (NP (DT both) (NN nodeIterator) (CC and) (NN treeWalker)))))) (. .)) )
(TOP (S (PP (IN For) (NP (DT a) (NN nodeIterator))) (NP (DT the) (NN root) (NN node)) (VP (AUX is) (ADVP (RB always)) (NP (NP (DT an) (NN ancestor)) (PP (IN of) (NP (DT the) (JJ current) (NN node)))) (SBAR (IN so) (S (NP (PDT both) (DT the) (NN root) (NN node) (CC and) (NN currentNode)) (VP (MD could) (VP (AUX be) (VP (VBN left) (S (ADJP (JJ unaffected))))))))) (. .)) )
(TOP (S (ADVP (RB However)) (NP (DT this)) (VP (VBZ requires) (NP (NP (JJ special) (NN handling)) (PP (IN of) (NP (NN currentNode)))) (SBAR (IN since) (S (NP (DT this)) (VP (AUX is) (RB not) (SBAR (WHADVP (WRB how)) (S (NP (PRP it)) (VP (AUX is) (ADVP (RB normally)) (VP (VBN handled) (SBAR (WHADVP (WRB when)) (S (NP (PRP it)) (VP (AUX 's) (VP (VBN moved) (PRT (RP out)) (PP (IN from) (NP (DT the) (NN tree))))))))))))))) (. .)) )
(TOP (S (NP (ADJP (RB Otherwise) (JJ similar)) (NN logic)) (VP (MD could) (VP (AUX be) (VP (VBN applied) (PP (TO to) (NP (DT the) (NN root) (NN node))) (SBAR (IN as) (S (VP (AUX is) (VP (VBN applied) (PP (TO to) (NP (DT the) (NN currentNode)))))))))) (. .)) )
(TOP (S (S (PP (IN For) (NP (DT the) (NN treeWalker))) (NP (DT the) (JJ current) (NN node)) (VP (AUX is) (RB not) (ADVP (RB neccecairly)) (NP (NP (DT a) (NN decendant)) (PP (IN of) (NP (DT the) (NN rootnode)))))) (, ,) (CC but) (S (NP (PRP it)) (VP (VBZ seems) (S (VP (TO to) (VP (VB follow) (NP (NP (DT the) (NN spirit)) (PP (IN of) (NP (DT that) (NNP interface)))) (SBAR (IN if) (S (NP (NN rootnode)) (VP (AUX is) (ADJP (JJ unchanged)) (SBAR (RB even) (IN if) (S (VP (VBN moved) (PP (IN in) (NP (DT the) (NN tree)))))))))))))) (. .)) )
(TOP (S (NP (DT Any) (NN way)) (DT this) (VP (VBZ needs) (S (VP (TO to) (VP (AUX be) (VP (VBN defined)))))) (. .)) )
(TOP (NP (NNP /) (NNP Jonas) (NNP Sicking)) )
(TOP (FRAG (CC Or) (NP (NP (DT the) (NN root) (POS 's)) (NN ancestor)) (. .)) )
(TOP (S (NP (NP (DT The) (NN answer)) (PP (IN in) (NP (DT either) (NN case)))) (VP (AUX is) (ADVP (RB basically)) (`` ``) (NP (NN nothing) (VBZ happens))) (. .) ('' '')) )
(TOP (S (NP (NNP NodeIterator)) (VP (VBZ operates) (PP (RB only) (IN within) (, ,) (CC and) (ADVP (RB upon)) (, ,) (NP (NP (DT the) (NN root) (NN node) (POS 's)) (NN subtree)))) (. .)) )
(TOP (S (S (VP (VBG Moving) (NP (DT the) (NN root)))) (VP (VP (AUX has) (NP (NP (DT no) (NN effect)) (PP (IN on) (NP (NP (DT the) (NN structure)) (PP (IN of) (NP (DT the) (NN subtree))))))) (, ,) (CC and) (VP (ADVP (RB hence)) (AUX has) (NP (NP (DT no) (NN effect)) (PP (IN upon) (NP (NN iteration)))))) (. .)) )
(TOP (S (NP (NNP TreeWalker)) (VP (VBZ operates) (PP (IN as) (NP (JJ pure-current-node) (NNS semantics)))) (. .)) )
(TOP (S (NP (DT The) (NN root)) (VP (VBZ acts) (PP (IN as) (NP (NP (DT a) (NN fence)) (VP (VBG preventing) (NP (PRP us)) (PP (IN from) (S (VP (VBG traversing) (PP (IN out) (PP (IN of) (NP (PRP it))))))))))) (. .)) )
(TOP (S (-LRB- -LRB-) (ADVP (RB Actually)) (, ,) (NP (PRP it)) (VP (AUX 's) (PP (ADVP (RBR more)) (IN like) (NP (DT a) (JJ one-way) (NN gate)))) (: ;) (SBAR (IN if) (S (NP (PRP you)) (VP (VBP setCurrentNode) (S (VP (TO to) (VP (VB someplace) (PP (IN outside) (NP (NP (DT the) (NN root)) (SBAR (S (NP (PRP you)) (VP (MD could))))))))))))) )
(TOP (S (NP (NNP traverse)) (VP (VP (VBP back) (PP (IN into) (NP (DT the) (NN root)))) (CC but) (VP (MD can) (RB n't) (VP (NNP traverse) (PRT (RP out)) (NP (NNS again.)) (-RRB- -RRB-) (ADVP (RB Again)))) (, ,) (S (VP (VBG moving) (SBAR (S (NP (DT the) (NN root)) (VP (AUX has) (NP (NP (RB absolutely) (DT no) (NN effect)) (SBAR (IN if) (S (NP (NN currentNode)) (VP (AUX is) (PP (IN within) (NP (NP (DT the) (NN root) (POS 's)) (NN subtree))))))) (PRN (-LRB- -LRB-) (SBAR (IN since) (S (NP (DT the) (NN subtree)) (VP (VBZ moves) (PP (IN with) (NP (DT the) (NN root)))))) (-RRB- -RRB-)))))))) (. .)) )
(TOP (S (SBAR (IN If) (S (NP (PRP you)) (VP (AUX 've) (ADVP (RB previously)) (VP (VBN created) (NP (DT the) (JJ odd) (JJ outside-the-root) (NN condition)))))) (, ,) (S (VP (VBG moving) (NP (DT the) (NN root)) (ADVP (RB just)))) (VP (VBZ changes) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (VB recapture)) (VP (MD will) (VP (VB occur)))))) (. .)) )
(TOP (S (S (NP (DT This)) (VP (VBD seemed) (ADJP (RB fairly) (JJ obvious) (PP (TO to) (NP (DT the) (NNP Traversal) (NN team)))))) (, ,) (CC so) (S (NP (PRP we)) (VP (AUX did) (RB n't) (VP (VB state) (NP (PRP it)) (ADVP (RB explicitly))))) (. .)) )
(TOP (SQ (AUX Does) (NP (PRP it)) (ADVP (RB really)) (VP (AUX need) (S (VP (TO to) (VP (AUX be) (VP (VBN nailed) (PRT (RP down))))))) (. ?)) )
(TOP (NP (person (NNP Joe) (NNP Kesselman)) (NNP /) (organization (NNP IBM) (NNP Research))) )
(TOP (X (MD could)) )
(TOP (S (PP (IN For) (NP (NP (DT the) (NN treeWalker)) (SBAR (S (NP (PRP I)) (VP (VBP agree) (SBAR (S (NP (PRP it)) (VP (AUX 's) (ADJP (RB rather) (JJ obvious)))))))))) (, ,) (ADVP (RB however)) (PP (IN for) (NP (DT the) (NN nodeIterator))) (NP (PRP I)) (VP (MD would) (VP (VB say) (SBAR (IN that) (S (NP (PRP it)) (VP (MD would) (RB n't) (VP (VB hurt) (PP (IN with) (NP (DT some) (NN nailing))))))))) (. .)) )
(TOP (S (NP (DT The) (NN reason)) (VP (AUX is) (SBAR (IN that) (NN implementation-wise) (S (NP (DT this)) (VP (VBZ introduces) (NP (CD two) (JJ different) (NNS behaviours)) (PP (IN for) (PP (IN for) (NP (DT the) (NN reference) (NN node)))) (SBAR (WHADVP (WRB when)) (S (NP (DT an) (NN ancesor)) (VP (AUX is) (VP (VBN moved) (PRT (RP out)) (PP (IN from) (NP (DT the) (NN tree))) (: :) (NP (CD 1)))))))))) (. .)) )
(TOP (S (SBAR (IN If) (S (NP (DT the) (VBN removed) (NN node)) (VP (AUX is) (PP (IN between) (NP (NP (DT the) (NN reference) (NN node)) (CC and) (NP (DT the) (NN rootnode))))))) (NP (DT the) (NN reference) (NN node)) (VP (AUX is) (VP (VBN moved) (PRT (RP up)) (PP (IN in) (NP (DT the) (NN tree))))) (. .)) )
(TOP (S (SBAR (RB 2.) (IN If) (S (NP (DT the) (VBN removed) (NN node)) (VP (AUX is) (NP (NP (NN root) (NN node)) (CC or) (NP (NP (DT an) (NN ancestor)) (PP (TO to) (NP (PRP it)))))))) (NP (DT the) (JJ referenced) (NN node)) (VP (AUX is) (ADJP (JJ unaffected))) (. .)) )
(TOP (S (CC But) (NP (NN section) (CD 1.1.1.2)) (VP (VBZ says) (`` ``) (S (SBAR (IN If) (S (NP (DT the) (NN reference) (NN node)) (VP (AUX is) (VP (VBN removed) (PP (IN from) (NP (NP (DT the) (NN list)) (VP (AUXG being) (VP (VBN iterated) (PRT (RP over)))))))))) (, ,) (NP (DT a) (JJ different) (NN node)) (VP (AUX is) (VP (VBN selected) (PP (IN as) (NP (NP (DT the) (NN reference) (NN node) ('' '')) (SBAR (WHNP (WDT which)) (S (VP (AUX is) (RB n't) (ADJP (RB entierly) (JJ correct))))))))))) (. .)) )
(TOP (NP (NNP /) (NNP Jonas) (NNP Sicking)) )
