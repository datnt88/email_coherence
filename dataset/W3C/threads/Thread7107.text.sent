Apple's iCal [1] allows you to publish calendars (using the iCal format) to Web servers and later retrieve them, using WebDAV*. 
However, they use a non-HTTP URI scheme to denote a calendar - 'webcal'. 
Is this new, and if so, can pressure be put upon the Apple W3C folks? 
This is not a small abuse; I fear 'gif' and 'html' URI schemes will be close behind if we're not careful. 
* They claim it requires WebDAV, but I was able to successfully publish my calendar to a server that only supports PUT (as any REAL Web server should). 
I don't have data yet as to whether they excercise anything else in DAV... Mark Nottingham I didn't see the link? 
As far as I know, Apple supports iCalendar RFC 2445, which is also supported in MS Outlook and undoubtedly many other clients.. format) use a This close publish my else OOps... I believe it does support iCalendar, judging from its publication format. 
I know that Outlook/Exchange utilizes iCalendar, but AFAIK they use a proprietary protocol to publish calendars and integrate with e-mail (please correct me where I'm wrong), whereby iCal is using HTTP/WebDAV and (unfortunately) URI schemes (instead of media types), respectively. 
As a result, I don't think they'll interoperate in many cases (i.e., I can't use iCal instead of Outlook to keep up with my corporate calendar solution). 
I didn't see the link? 
As far as I know, Apple supports iCalendar RFC 2445, which is also supported in MS Outlook and undoubtedly many other clients.. format) use a This close publish my else For examples of the scheme's use, see: (links with text "subscribe") format. 
and Very strange. 
After replacing webcal: by http:, i can GET a vCalender entity. 
So what the hell is this URI scheme supposed to do what http: doesn't? 
I think they're using the scheme for dispatch, because they can't rely on the media type being properly set, and/or they're lazy. 
This probably stems from the media type in a PUT being ignored; I'm not a WebDAV expert, but my testing with mod_put on Apache indicates that the media type of the PUT isn't used as metadata in subsequent GETs. 
It seems pretty clear cut in 2616 (section 9.6): [[[ The PUT method requests that the enclosed entity be stored under the supplied Request-URI.]]] 
Note that it's "entity," not just "entity-body." 
[[[ The recipient of the entity MUST NOT ignore any Content-* (e.g. Content-Range) headers that it does not understand or implement and MUST return a 501 (Not Implemented) response in such cases.]]] 
[[[ Unless otherwise specified for a particular entity-header, the entity-headers in the PUT request SHOULD be applied to the resource created or modified by the PUT.]]] Anyone know of WebDAV (or plain PUT) implementations that correctly implement this? 
I suspect it isn't widely implemented, because most Web servers use filename extension rather than separate, per-resource metadata to determine media type. 
a HTTP/WebDAV As a can't RFC other they folks? 
server anything I'd consider this a shortcoming of moddav -- it surely could persist the content type that was sent. 
"Our" (actually SAP's) WebDAV server does that, just like the content language when specified in the PUT request. 
Of course inventing a new URI scheme just to workaround a specific shortcoming somewhere else is an extremely bad idea. 
The SAP Enterprise Portal WebDAV connector does this. 
If you're interested in trying it, email me and I'll send you a test account on our server. 
Julian [ this is on-topic for uri@w3.org only in as much as it affects technical decisions re: minting new schemes vs. using media types for dispatch ] A bit more info; After doing some header traces (Thanks, Aaron!), it appears that iCal PUTs the data as 'application/octet-stream', so they're not even trying. 
They also don't take advantage of persistent connections, but that's a just a nit, relatively. 
On the server side, it appears that neither Apache mod_put or mod_dav will properly return the Content-Type sent in a PUT. 
This is probably part of the reason that Apple decided to use a URI scheme for dispatch. 
I'm not surprised that this is the case with mod_put (and it appears that it isn't a huge effort to get it to do so, via mod_cern_meta; there's also a bug in mod_put in that it needs to issue 201 Created when appropriate). 
I am somewhat surprised that mod_dav doesn't do the right thing. 
