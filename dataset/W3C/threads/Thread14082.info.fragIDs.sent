in my previous message I proposed 
for spacer images, use alt=" ". 
I just realized I had a bug in the &amp;nbsp; examples. 
Therefore, I am considering updating my proposal. 
The HTML 4 spec doesn't say much about &amp;nbsp; from what i can find. 
Other 
than it is a "non-breaking space." 
[1] I don't see any suggestions for 
usage. 
I'm looking to see if character entities used as values of attributes are discussed anywhere... 
--wendy [1] http://www.w3.org/TR/REC-html40/sgml/entities.html 
What it _does_ say, though, makes it clear that nbsp does not count as "white space", and is therefore not subject to the rules that pertain to white space. 
[It may be noted in passing that this is a change from what had been proposed in the never-completed HTML3.0 draft, where, aside from its non-breaking property, the no-break space was stated to be otherwise "white" space.] 
Clearly, the specification cannot go into detail about the visual rendering (indeed, it explicitly states that it does not prescribe the rendering of any kind of space, apart from what it says about "white space"): how could it, if it intends to address rendering also into non-visual formats? 
Attribute value strings are entirely open to the use of any of the three valid representations of a character in HTML: the named character entity, the numerical character reference per its Unicode value, or the raw coded character per the advertised "charset" value. 
While it's true that some early browsers got this wrong, this now does not seem to be a problem in practice. 
I don't see any real problem with the no-break space in this regard. 
Surely the practical situation is something like this scenario. 
If two words are separated by an image (say, some kind of logo), that the author considers would best be rendered by an inter-word space in the absence of an image display, then ALT="&amp;nbsp;" (or ALT="&amp;#160;") now seems to be the best compromise. 
I used to put ALT=" ", and got the desired results, but this now seems to be in doubt on theoretical grounds because of the clause about removing leading or trailing _white_ space. 
I'm sorry, this was a lot of verbiage about a single character - whose display, beyond occupying space, is not visible! 
best regards 
I think it would be much better to propose to use stylesheets for spacing control with some decent examples, 
rather than to bother on the "correct" deprecated/obsolete method to use. 
It may be pointed out that when using images for spacing, one is restricted to pixel units that are unrelated to the font size, and there is no way to 
predict how the space will look like when images are turned off (some browsers even insert 
a rather large and ugly image instead of the "invisible" space) 
Stylesheets do it better. 
1. It was already pointed out that nbsp is not white space in the parsing sense. 
In particular, the way white space is handled in attribute values is irrelevant for nbsp. 
2. Non breaking space means in the typesetting industry a space in which a line break should not occur. 
E.g., Nir&amp;nbsp;Dagan will result in rendering "Nir Dagan" on one line, rather than "Nir" at the end of one line and "Dagan" at the begining of the next. 
In other words Nir&amp;nbsp;Dagan is treated as one word when rendered in a medium that has lines. 
Non-breaking space is not used to control spacing in any typesetting enviroment that I know of, and HTML, although not a typesetting enviroment, doesn't change that. 
Non breaking space is a "presentation hint" concerning the occurance of a line break. 
That's all. 
As far as character entities, they may be used in attribute values defined as CDATA. 
On the other hand they cannot be used as content of an element whose content is CDATA (such as SCRIPT or STYLE). 
This is, I think, mentioned somewhere in the spec. 
(Sorry for not giving reference) Also, using non-breaking space and using character reference are two unrelated issues. 
In ISO-8859-1 for example non-breaking space can be encoded with the 160-th octet. 
In addition, any character can be encoded with a character reference in any encoding. 
There is no significant difference between non-breaking space and the small Latin letter "a" in this respect. 
Nir. 
Nir Dagan Assistant Professor of Economics Brown University Providence, RI USA 
I agree entirely with Nir's position: it is better to advise authors to use more appropriate techniques, particularly CSS, than to waste time debating the merits of various text equivalents for so-called "spacer images". 
Since this issue originally arose as a query from the ER working group, our answer should suggest that all uses of null and blank ALT attribute values (alt="" alt=" " and alt="&amp;nbsp;" etc.) should be flagged as errors, with ALT="" being a more serious error than either of the others. 
The HTML specification does not determine how user agents will or should render ALT=" ". 
It may be interpreted as a single-character attribute value, comprising a space, or either leading or trailing white-space, to be ignored during HTML processing, preceded or followed by the empty string. 
As Nir has pointed out, the rendering of so-called "spacer images" is subject to variation across distinct visual media and among different user agents. 
The rendering of the text equivalent in these cases is equally undetermined, as the present controversy has shown. 
In the end, authors who wish to misuse HTML in an attempt to achieve formatting effects run the risk of having their documents rendered in unexpected ways by different user agents and/or in different media. 
Such practices should be avoided. 
I'm sorry, I may have been thinking along different lines here. 
Let's put aside the issue of achieving precise control of spacing, for which HTML is entirely unsuitable anyway - with or without a stylesheet, and concentrate on the issue of the presence of absence of a space when an image is not being rendered. 
This has real significance for the _content_, not just the presentation. 
(Image size can be suggested in em units via CSS, but I don't want to pursue that line of discussion here as it doesn't seem to be pertinent to accessibility.) 
No dispute about that! 
But while we are dismissing the idea of achieving precise control of the space occupied by an image, which is indeed a presentational detail that cannot be guaranteed, I don't want to miss the issue of whether a space is presented or not. 
Without intending to cause offence, I'm reminded of an old HTML joke about the sentence that could be read as "God is now here" or "God is nowhere", depending on the interpretation of a particular tag. 
all the best 
