One of the questions we face is how to get feedback regarding what transform tools might do, in advance of having the transform tools. 
One way would be to simply write, by hand, what the output of the transform tool would look like. 
I did this for a hypothetical transform tool that someone might use to better access tables. 
As described in the UA guildelines users need to travel by row or column, and need information about the current cell. 
The demo is at It shows what the output of a transform tool might be. 
Note that I simply created the output by hand: there's no actual filter here. 
Basically, it has two linearized versions of the table, one in column order, and one in row order. 
You start off in row order. 
Each cell in is a link. 
Activating the link announces the row and column headings and gives you the option of continuing in row order or column order, resuming your travels from the cell where you just were. 
The menu also lets you start over. 
The demo works best with Lynx. 
It could be extended to give other features. 
The point I'm trying to make here, aside from the possibility that the demo shows a useful tool, is that we can simulate the outputs of tools. 
We could then get get feedback from users in various ways... either via requests to email lists, or by working with people in a lab. 
Please tell me what you think. 
We can pursue this in the forthcoming teleconference. 
Len Leonard R. Kasday Institute on Disabilities/UAP at Temple University, Philadelphia PA 
I've also been working and thinking about table linearizer filter that would provide a batch service (by opposition to something done in the UA environment), and you went a step further in providing a solution for the "no interaction" issue (i.e. not being able to navigate the table cell by cell and changing orientation as it goes). 
My ideas (exposed at http://www.w3.org/WAI/ER/WG/tablin.txt) are to offer a default setup and then ways to override that at the level of each *TABLE* in a document, not at the level of the cell, as you propose to doing it. 
We will need user input as to which one is really useful (e.g. they might be too many extra step in your solution, maybe not, maybe it can be worked out in a simpler way) 
In any case, I think both can be implemented in the same tool, i.e. in addition to "orientation" and "repetition", one could add "navigation" as a parameter of a TABLE linearizer. 
I think we must distinguish batch transforms of a whole document, which are then processed by UA navigation methods, from interactive applications which support thing like table navigation. 
It is very hard to evaluate the latter from static mockups. 
An active prototype is pretty much required. 
The essense of navigation is the closed-loop process alternating read and move steps. 
Al to follow up on what Leonard R. Kasday said: 
Absolutely! 
I'm also concerned about the number of steps. 
E.g. if you're 
going across a row, you can't simple hit a key to go down the column. 
You have to press return to get to menu, tab to get to column navigation, and then return again to get back to the table, then tab to continue. 
return tab return tab (we could lose that extra tab by moving you to next cell by default). 
On the other hand, it does give the functionality, maybe there isn't that much need to change direction, and maybe a skilled user might get used to that so it becomes automatic. 
Also, there's the possibilities of using a keyboard macro package... tho that starts to get klugy. 
And maybe there's a simpler paradigm... 
We definitely need actual users and actual tables. 
Len Leonard R. Kasday Institute on Disabilities/UAP at Temple University, Philadelphia PA 
Ah, but even though it is just a static web page, it does offer full navigation, left/right and up/down, by making the cell entries links to menus that switch you to another table on the page. 
Len Leonard R. Kasday Institute on Disabilities/UAP at Temple University, Philadelphia PA 
Ah, but it's not a static mockup. 
Even though it is just a single web page, it does offer full navigation, left/right and up/down, by making the cell entries links to menus that switch you to another version of table on the page. 
The cost of this technique, as Daniel implied and as I elaborated on in my last email, is that it takes more keystrokes than what could be built into a user agent. 
Len Leonard R. Kasday Institute on Disabilities/UAP at Temple University, Philadelphia PA 
Daniels notes at show the large number of choices we may want to offer users. 
Perhaps we can reduce the number of keystrokes by having the links call up a cgi-generated screen which has a couple of buttons to just choose direction, and then past that a more elaborate setup. 
Access keys would help also. 
Len Leonard R. Kasday Institute on Disabilities/UAP at Temple University, Philadelphia PA 
