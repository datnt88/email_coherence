Do i need to implement exclusively other interfcaes except interfcae HTMLDocument of HTML DOM, if i parse all the HTML tags and use DOM Core APIs to createElement for each encounterd tag in HTML document. 
I can set all the attributes for any tags to that particular node, even in this case all the attributes will be associted with particular tags, if pattributes are three for that tag. 
I do not understand why to create new interfaces for those HTML elements which i can create usind Core DOM APIs? 
Can you suggest me the significance of HTML DOM other than exposing HTMl elements objects to script writers. 
Regards Jamshed Ahsan Get Your Free Email At, http://www.rediffmail.com 
For fabulous shopping deals visit: http://www.rediff.co.in/shopping/index.html 
Yes, if you want to claim compliance with the HTML DOM spec. 
No, if all you want is compliance with the core DOM... but in that case you probably shouldn't implement HTMLDocument either, since that's likely to confuse your users. 
The main reason for HTMLDocument is that it _does_ produce all the specialized subclasses of Element. 
As you suggested, the HTML interfaces aren't much more than a convenience layer. 
(DOM Level 1 requres that you completely implement either the HTML interfaces or the Extended (XML) interfaces. 
We're considering backing off that and allowing folks to claim compliance with only the core.) Joe Kesselman / IBM Research 
My idea to implement exclusively HTML Document interface is because it has few methods associated which are required by the script writers, like write, etc. 
If i do not implement this interfcae then i would not be able to complete support DOM0 level scripts. 
Since rest of the interfcaes like HTMLLinkElement, etc. are not make meaning to me if i create an element in DOM tree for Linkelement and set all the attributes of this node as per the given HTML document, so anyway i am going to have an object for Link element with all possible attributes associted to it. 
Do u still think if i use this approac i can not support backward script which are DOM0 compliant only? 
Yes, if you want to claim compliance with the HTML DOM spec. 
No, if all you want is compliance with the core DOM... but in that case you probably shouldn't implement HTMLDocument either, since that's likely to confuse your users. 
The main reason for HTMLDocument is that it _does_ produce all the specialized subclasses of Element. 
As you suggested, the HTML interfaces aren't much more than a convenience layer. 
(DOM Level 1 requres that you completely implement either the HTML interfaces or the Extended (XML) interfaces. 
We're considering backing off that and allowing folks to claim compliance with only the core.) Joe Kesselman / IBM Research Get Your Free Email At, http://www.rediffmail.com 
For fabulous shopping deals visit: http://www.rediff.co.in/shopping/index.html 
Personal opinion: If you implement org.w3c.dom.HTMLDocument, you really should implement the factory methods properly, which means implementing all the other DOM classes -- otherwise I think you're misleading the user. 
Of course you do have the option of implementing only some of the additional methods and only claiming to be a normal org.w3c.dom.Document "with additions"; that might be a good compromise. 
"Complete DOM0 support" is not well defined, since different browsers had different DHTML features. 
There seems to have been some interest recently 
in coming up with such a definition; the video industry's TVWEB project has something they're calling DOMT which attempts to describe that space, for 
example, and we've talked to them a bit about that as a sanity-check. 
Certainly DOM Level 1 was intended to be compatable with previous practice, but depending on how you define DOM0 you may need the HTML DOM and/or some way of supporting events (ours or roll-your-own) and/or other features that the W3C DOM hasn't yet addressed. 
Joe Kesselman / IBM Research 
The above should read "the Society of Motion Pictures and Television Engineers' (SMPTE) DDE (Declarative Data Essence) project has something they're calling DOM-T ..." Regards, Glenn Adams 
blush Very sorry; I should indeed have remembered to credit SMPTE, cite DDE, and include the dash in DOM-T. 
That's what I get for looking at my notes rather than the document itself. 
/blush Joe Kesselman / IBM Research 
