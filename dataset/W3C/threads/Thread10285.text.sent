Here is something related I have found: While the I18N WG unfortunately didn't find the bandwith for a serious review of the various RDF last call documents, the XML Schema WG pointed out very clearly that markup was an important component for many natural language 'utterances' (and pointed to the I18N WG for more expertise). 
If anything, this makes it more unclear to me why the RDF Core WG decided to remove language information from XML literals. 
Regards, Martin. 
xmlsch-06 Strings for natural-language data Your comment: 2.4. 
Strings for natural-language data (substantive) In http://www.w3.org/TR/rdf-concepts/#section-Datatypes: 
A plain literal is a string combined with an optional language identifier. 
This should be used for plain text in a natural language. 
As recommended in the RDF formal semantics [RDF-SEMANTICS], these plain literals are self-denoting. 
We do not believe that simple strings are likely to be adequate for the representation of arbitrary natural-language text. 
Even in English, natural-language utterances (such as this document) may need some degree of inline markup for clarity and adequate presentation; in natural-language utterances requiring bidirectional display or ruby, the best authorities (including the W3C I18n Working Group) recommend the use of markup within the natural-language utterance. 
We thus suggest that you may wish to moderate this recommendation that natural-language material be represented by literals. 
This is not an area in which we claim particular technical expertise; we merely call it to your attention in the hopes that doing so may be useful to you. 
RESOLVED: to accept xmlsch-06, with revised wording as noted A plain literal is a string combined with an optional language identifier. 
This may be used for plain text in a natural language. 
As recommended in the RDF formal semantics [RDF-SEMANTICS], these plain literals are self-denoting. 
after other changes the text now reads: Martin, Several members of the WG have tried to make the following point clear to you, yet you seem to keep missing it, insofar as your posts suggest, at least to me. 
The RDF Core WG has not "removed language information from XML literals", as if we don't care about the ability to associate language with XML encoded content, but rather have made a very necessary clarification of the boundary between an encapsulating markup language and any encapsulated markup language. 
An XML literal within an RDF/XML serialization is NOT the same as e.g. a MathML fragment within an XHTML instance. 
And this is the crux of the problem, and the point of tension. 
XML markup languages are free to express their own semantics, including what information embodied in a given infoset is relevant to the application for which the markup language was designed. 
The XML specs specify what information is available, and specifies how that information is available in a consistent fashion, but they do not mandate what information must be used by a given application. 
What we have done is no different than some XML model defining a FIXED attribute value for xml:lang as '' for a particular element type which is, by design, intended to be an encapsulation of data that has no direct interpretation in terms of the markup language used to encapsulate it. 
The fact that this cannot be done explicitly for RDF/XML in a DTD or XML Schema, since the RDF serialization model is more of a set of architectural forms than an explicit schema, is beside the point. 
What the present treatment does is essentially to define a fixed attribute value xml:lang='' for every property element having an attribute+value rdf:parseType="Literal". 
If I have an XML DTD for a data serialization model that includes the definition Then that would be a sound engineering decision and one that, quite frankly, is entirely outside the scope of I18N since it concerns a data markup model and not a textual markkup model (even if it might happen to encapsulate textual, natural language content). 
RDF/XML is a data serialization model. 
Period. 
Enf of story. 
It is not a textual content markup model. 
XML fragments embedded in RDF/XML are encapsulated in that data serialization model, and as such, the semantics of XML that apply to XML fragments in textual markup models do not apply to XML fragments encapsulated in a data markup model. 
You claim you understand the G-view, but you appear to believe that RDF/XML is *wrong* for taking that view. 
If you do in fact understand the G-view, then you would accept that contextual properties such as xml:lang should not apply to literals and that no only are the decisions made to date by the WG valid per the G-view but that there exist bugs in the legacy-inherited treatment of plain literals that conflict with that view. 
It seems your real criticism to the RDF Core WG is that it has overstepped its charter by taking the G-view over the X-view. 
Well, fair enough, though I (and I'm sure most if not of the rest of the WG) would not consider that particular decision open for debate. 
And in fact, we need not even go there, since either of the two latest proposals essentially facilitate the use of RDF according to either the X or G view, and it is clear in the graph which view has been taken, since plain literals and typed literals are distinct. 
Reconcilliation between the semantics (including tests of equivalence) of plain literals and that of typed literals is left as a later exercise for those who are concerned with such things. 
Either proposal allows folks who have no clue whatsoever about data encapsulation issues relating to XML serialization models to go along merrily doing the wrong thing, just as they did with M&amp;S, but those of us who do know what we're doing, will do the right thing with typed literals, and try our best to deal with any scruffy graphs containing old-style M&amp;S literals. 
Maybe that's the best way forward. 
Patrick Hello Patrick, Could you then please explain to me where the language information goes if the XML literal is something like "Hello strong World /strong !" ? 
Where in the graph (the G-view) is it, or, where in the graph would I put it? 
Well, there are clearly similarities, and there are clearly differences. 
RDF can indeed do that, within the boundaries of M&amp;S and the needs of I18N and others. 
Yes. 
But in particular in I18N, as I already explained, we want to have as much consistency as possible in the machinery, because we have more than enough issues from the user side where things are just not consistent at all, but dominated by human culture and customs. 
If you want to do that in any of your actual RDF/XML data, your are free to do it. 
However, this does not mean that you have to force everybody else to do it. 
RDF as such is definitely better explained as a data model than as textual markup. 
That's exactly why M&amp;S included parseType="Literal". 
It wasn't put in there for data-like XML blobs, because that was what RDF was designed for, and the creators of RDF/XML in M&amp;S tried hard to make it easy for many different kinds of XML to be interpreted as RDF (e.g. by adding default parseType="Resource" attributes,...). 
What is now called XML literals was put in there for textual stuff. 
The example in M&amp;S and the people who remember when it was done (including me) can confirm that. 
So how do you explain that xml:lang applies to plain literals? 
If you want to take the G-view, then either it is appropriate for plain literals and xml literals to have language information, or it is not appropriate for either of them. 
This can be discussed rather independent of RDF/XML. 
Can you give an example of what you call 'scruffy graph containing old-style M&amp;S literals'? 
Regards, Martin. 
Sorry, I misunderstood, and thereby misstated. 
Yes, the WG did remove the semantic relation between a rdf:XMLLiteral typed literal and an enclosing language scope. 
The motivation for that was that the special treatment of rdf:XMLLiteral was causing havoc of various sorts in the MT, and having no lang tag was not viewed as a serious technical loss, since XML provides the means to express that language information in the literal itself (accepting the special challenges of mixed content). 
Patrick 
