(S1 (S (ADVP (RB Ok.)) (NP (PRP I)) (VP (VBP get) (NP (DT the) (VBN desired) (NN result)) (SBAR (IN if) (S (NP (PRP I)) (VP (VBP use) (NP (DT the) (NN command)) (PP (IN on) (NP (NP (DT all) (JJ local) (NNS files)) (: :) (NP (CD cwm) (JJ --closure=poEr) (NNS myDingo.n3))))))))))
(S1 (S (S (VP (VB --think))) (CC But) (S (NP (PRP I)) (ADVP (RB still)) (VP (VBP get) (NP (DT the) (NN error) (NN list)) (SBAR (IN below) (IN if) (S (NP (PRP I)) (VP (VBP use) (NP (NP (DT the) (JJ first) (NN command)) (PP (IN in) (NP (PRP$ your) (NN example)))) (: :) (S (VP (VBG cwm) (NP (JJ --closure=por) (NNS myDingo.n3)))))))))))
(S1 (S (S (INTJ (UH --think)) (INTJ (DT That) (AUX is)) (, ,) (NP (PRP I)) (VP (VBP get) (NP (DT the) (NN error)) (SBAR (IN if) (S (NP (PRP I)) (VP (VBP use) (NP (NP (NN closure) (NNS flags) (POS ')) (NN por) ('' '))))))) (, ,) (CC but) (S (NP (PRP it)) (VP (VBZ works) (SBAR (WHADVP (WRB when)) (S (NP (PRP I)) (VP (VBP use) (NP (NP (NN closure) (NNS flags) (POS ')) (NN poEr) ('' '))))))) (. .)))
(S1 (S (VP (VBZ Whats) (NP (DT the) (NN difference))) (. ?)))
(S1 (S ('' ') (NP (NNP E)) ('' ') (VP (AUX does) (RB not) (VP (VB appear) (PP (IN in) (NP (NP (DT the) (NN list)) (PP (IN of) (NP (NP (NN closure) (NNS flags)) (PP (IN in) (NP (NN help))))))))) (. .)))
(S1 (NP (NP (NP (NNS Thanks)) (, ,) (NP (NNP John) (NNP Black) (NNP C))) (: :) (NP (NP (JJ \Temp\cwm) (NN python)) (NP (JJ /python23/lib/site-packages/cwm/cwm.py) (JJ --closure=por) (NNS myDingo.n3)))))
(S1 (NP (JJ --think) (NN --filter=anyDogs.n3)))
(S1 (NP (NP (QP (# #) (JJ Processed) (IN by) (NN Id))) (: :) (NP (NP (NN cwm.py)) (, ,) (NP (NP (QP (CD v) (CD 1.143.2.1)) (QP (CD 2003/09/12) (CD 14:56:21)) (JJ timbl) (FW Exp) (PRN (NP (NP (# #) (VBG using) (JJ base) (NN file)) (: :) (PP (VBG /Temp/cwm/myDingo.n3) (NP (NP (NNP Traceback)) (PRN (-LRB- -LRB-) (NP (RBS most) (JJ recent) (NN call)) (ADJP (JJ last)) (-RRB- -RRB-)))) (: :)) (VP (VB File) (ADJP (`` ``) (JJ /python23/lib/site-packages/cwm/cwm.py) ('' ''))) (, ,)) (NN line)) (NP (CD 652)) (, ,) (ADVP (IN in)))) (. ?)))
(S1 (FRAG (NP (NNP doCommand)) (S (-LRB- -LRB-) (-RRB- -RRB-) (VP (VBP File) (ADJP (`` ``) (JJ /python23/lib/site-packages/cwm/cwm.py) ('' '')))) (, ,) (NP (NN line) (CD 380)) (, ,) (PP (IN in) (NP (JJ doCommand) (NN p.load))) (PRN (-LRB- -LRB-) (FW _inputURI) (-RRB- -RRB-)) (VP (VB File) (`` ``) (NP (NNP C))) (: :) (NP (JJ \python23\lib\site-packages\cwm\notation3.py) ('' '') (PRN (, ,) (NP (NN line) (CD 209)) (, ,) (PP (IN in) (NP (NN load) (NN return) (NNS self.loadBuf))) (PRN (-LRB- -LRB-) (NP (NP (NN stream.read)) (-LRB- -LRB-)) (-RRB- -RRB-)) (-RRB- -RRB-)))))
(S1 (NP (# #) (CD self._formula)))
(S1 (S (VP (VB File) (NP (`` ``) (NP (X (SYM C)) (: :) (NP (JJ \python23\lib\site-packages\cwm\notation3.py))) ('' '') (, ,) (NP (NN line) (CD 217)) (, ,) (PP (IN in) (NP (NP (JJ loadBuf) (NN self.feed)) (PRN (-LRB- -LRB-) (NP (CD buf)) (-RRB- -RRB-))))))))
(S1 (X (NN File) (`` ``) (X (SYM C) (: :) (ADJP (JJ \python23\lib\site-packages\cwm\notation3.py)) ('' '')) (, ,) (X (NP (NP (NN line) (CD 235)) (, ,) (PP (IN in) (NP (NN feed)))) (NP (PRP i)) (SYM =)) (NP (NP (NN self.directiveOrStatement)) (PRN (-LRB- -LRB-) (NP (CD str)) (, ,) (NP (NNP j)) (-RRB- -RRB-)))))
(S1 (S (NP (NN File) (`` ``) (FRAG (X (SYM C)) (: :) (NP (NN \python23\lib\site-packages\cwm\notation3.py))) ('' '') (PRN (, ,) (NP (NN line) (CD 248)) (, ,)) (PP (IN in) (NP (JJ directiveOrStatement) (NNP j)))) (VP (SYM =) (NP (NP (NN self.statement)) (PRN (-LRB- -LRB-) (INTJ (UH str)) (, ,))))))
(S1 (S (NP (PRP i)) (-RRB- -RRB-) (VP (VBP File) (`` ``) (FRAG (X (SYM C)) (: :) (ADJP (JJ \python23\lib\site-packages\cwm\notation3.py) ('' '')) (, ,) (NP (NN line) (CD 341)) (, ,) (PP (IN in) (NP (NN statement))) (X (NNP j) (SYM =)) (NP (NP (NN self.property_list)) (PRN (-LRB- -LRB-) (INTJ (UH str)) (, ,)))))))
(S1 (S (NP (PRP i)) (PRN (, ,) (NP (JJ r-LSB-0) (NN -RSB-)) (-RRB- -RRB-)) (VP (VBP File) (NP (`` ``) (NP (NP (NNP C)) (: :) (NP (NP (JJ \python23\lib\site-packages\cwm\notation3.py) ('' '') (PRN (, ,) (NP (NN line) (CD 594)) (, ,) (PP (IN in) (NP (NP (NN property_list) (NN self.makeStatement)) (PRN (-LRB- -LRB-) (-LRB- -LRB-) (NP (NN self._context) (, ,) (NN sym) (, ,) (CD subj) (, ,) (CD obj)) (-RRB- -RRB-)))) (-RRB- -RRB-)) (NN File)) (`` ``) (NP (NNP C))) (: :) (JJ \python23\lib\site-packages\cwm\notation3.py)) ('' '') (, ,) (NP (NN line) (CD 331)) (, ,) (PP (IN in) (NP (JJ makeStatement) (NN self._sink.makeStatement)))) (-LRB- -LRB-) (ADJP (JJ quadruple))) (, ,)))
(S1 (NP (NNP why=self._reason2) (-RRB- -RRB-)))
(S1 (S (VP (VB File) (FRAG (X (`` ``) (SYM C)) (: :) (ADJP (JJ \python23\lib\site-packages\cwm\llyn.py) ('' '')) (, ,) (NP (NN line) (CD 1452)) (, ,) (PP (IN in) (NP (JJ makeStatement) (NN self.storeQuad) (PRN (-LRB- -LRB-) (NP (NNP q)) (, ,) (FRAG (WHADVP (WRB why))) (-RRB- -RRB-)) (NN File))) (`` ``) (X (SYM C)) (: :) (ADJP (JJ \python23\lib\site-packages\cwm\llyn.py) ('' '')) (, ,) (NP (NN line) (CD 1481)) (, ,) (PP (IN in) (NP (NP (JJ storeQuad) (NN return) (NNS context.add)) (PRN (-LRB- -LRB-) (FW subj=subj) (, ,))))))))
(S1 (NP (NP (NP (NP (NP (JJ pred=pred) (PRN (, ,) (ADVP (RB obj=obj)) (, ,) (NP (NN why=why)) (-RRB- -RRB-)) (NN File)) (`` ``) (ADJP (NP (NP (NP (NNP C)) (: :) (ADJP (JJ \python23\lib\site-packages\cwm\llyn.py) ('' '')) (, ,) (NP (NN line) (CD 479)) (, ,)) (PP (IN in) (NP (VB add) (NN self.checkClosure))) (PRN (-LRB- -LRB-) (NP (NNP subj)) (, ,) (S (S (VP (VBN pred))) (, ,) (NP (NNS obj)) (-RRB- -RRB-) (VP (VBP File) (SBAR (S (`` ``) (X (X (SYM C)) (: :) (ADJP (JJ \python23\lib\site-packages\cwm\llyn.py)) ('' '')) (PRN (, ,) (NP (NN line) (CD 617)) (, ,) (PP (IN in) (NP (JJ checkClosure) (NN x.dereference))) (-LRB- -LRB-) (NP (NP (`` ``) (NNP m) ('' '') (NNP +)) (NN self._closureMode)) (, ,) (NP (NN self)) (-RRB- -RRB-)) (VP (VBP File) (`` ``) (NP (NNP C))))))) (: :))) (JJ \python23\lib\site-packages\cwm\term.py)) ('' '')) (, ,) (NP (NN line) (CD 212)) (, ,)) (PP (IN in) (NP (NN dereference))) (PP (IN if) (`` ``) (NP (NNP E)) ('' '')) (PP (RB not) (IN in) (NP (NN mode)))) (: :) (NP (SYM F)) (X (X (SYM =)) (NP (NP (NN self.store.load)) (PRN (-LRB- -LRB-) (NN inputURI) (-RRB- -RRB-))))))
(S1 (S (VP (VB File) (NP (`` ``) (NP (NP (NNP C)) (: :) (ADJP (JJ \python23\lib\site-packages\cwm\llyn.py) ('' '') (PRN (, ,) (NP (NP (NN line) (CD 1263)) (, ,) (PP (IN in) (NP (NP (NN load)) (VP (VBN p.feed) (PRN (-LRB- -LRB-) (VB buffer) (-RRB- -RRB-)) (VP (VB File) (`` ``) (NP (NNP C)))))) (: :) (JJ \python23\lib\site-packages\cwm\sax2rdf.py) ('' '')) (, ,) (NP (NN line) (CD 584)) (, ,) (PP (IN in) (NP (NP (NN feed)) (VP (VBN self._p.feed) (S (-LRB- -LRB-) (NP (NNS data)) (-RRB- -RRB-) (VP (VB File) (`` ``) (NP (NNP C))))))) (: :)) (JJ \Python23\Lib\site-packages\_xmlplus\sax\expatreader.py))) ('' '') (, ,) (NP (NN line) (CD 220)) (, ,)) (PP (IN in) (NP (NP (NN feed) (NN self._err_handler.fatalError)) (PRN (-LRB- -LRB-) (NP (CD exc)) (-RRB- -RRB-)))))))
(S1 (X (NN File) (`` ``) (X (SYM C) (: :) (ADJP (JJ \Python23\Lib\site-packages\_xmlplus\sax\handler.py)) ('' '')) (, ,) (NP (NN line) (CD 38)) (, ,) (PP (IN in) (NP (JJ fatalError) (NN raise) (NN exception) (NN xml.sax._exceptions.SAXParseException))) (: :)))
(S1 (NP (NP (NN unknown)) (: :) (NP (CD 133:21)) (: :) (NP (RB not) (JJ well-formed) (PRN (-LRB- -LRB-) (ADJP (JJ invalid) (JJ token)) (-RRB- -RRB-)))))
(S1 (FRAG (PP (IN From) (NP (: :) (NNP Sandro) (NNP Hawke) (NN -LSB-mailto))) (: :) (NP (NN sandro)) (X (SYM @)) (NP (NN w3.org) (NN -RSB-))))
(S1 (FRAG (VP (VBN Sent)) (: :) (NP (NP (NP (NNP Wednesday)) (, ,) (NP (NNP October) (CD 08)) (, ,) (ADJP (NP (QP (CD 2003) (CD 1:33)) (NNS PM)) (JJ Subject))) (: :) (NP (NNP Re)) (: :) (NP (NP (DT A) (NN bit)) (PP (IN of) (S (VP (VBG running) (NP (NP (NN code)) (PP (IN for) (`` ``) (NP (NP (NNP Tim) (POS 's)) (NNP View)) ('' ''))) (ADVP (JJ Sorry)) (, ,) (S (NP (PRP I)) (VP (VBN simplified) (NP (DT the) (NNS inputs)) (PP (ADVP (RB slightly)) (IN for) (NP (DT the) (NN e-mail)))))))))) (. .)))
(S1 (S (NP (PRP I)) (VP (MD should) (VP (AUX have) (VP (AUX been) (ADJP (JJR clearer) (PP (IN about) (NP (DT that))))))) (. .)))
(S1 (S (S (NP (DT The) (JJ real) (NNS files)) (VP (AUX are) (PP (IN in)))) (CC and) (S (NP (PRP I)) (VP (VBP see) (SBAR (IN that) (S (NP (PRP myDingo.n3)) (VP (AUX has) (NP (NP (DT a) (JJ temporary) (NN patch)) (`` ``) (PP (IN For) (S (VP (VBG working) (PP (IN on) (NP (DT the) (NN plane)))))) ('' '') (PRN (-LRB- -LRB-) (VP (VBN ie) (PP (IN without) (NP (DT the) (JJ web) (JJ handy)))) (-RRB- -RRB-)))))))) (. .)))
(S1 (S (ADVP (RB So) (RB yes)) (, ,) (NP (PRP I)) (VP (VBD left) (PRT (RP out)) (NP (DT the) (ADJP ('' '') (: :) ('' '') (JJ prefix)) (NN declaration))) (. .)))
(S1 (NP (NP (SYM C)) (: :) (NP (NN \Temp) (NN python) (NN /python23/lib/site-packages/cwm/cwm.py))))
(S1 (NP (JJ --closure=por) (NNS myDingo.n)))
(S1 (NP (NP (CD 3) (NN --think) (# #) (ADJP (JJ Processed) (PP (IN by) (NP (NN Id))))) (: :) (NP (JJ cwm.py) (, ,) (ADJP (QP ($ v) (CD 1.143.2.1) (CD 2003/09/12))) (ADJP (CD 14:56:21) (NN timbl)) (NNP Exp) (# #) (VBG using) (NN base) (NN file)) (: :) (NP (NN /Temp/myDingo.n3))))
(S1 (FRAG (NP (NP (NN Traceback)) (PRN (-LRB- -LRB-) (ADJP (NP (ADJP (RBS most) (JJ recent)) (NN call)) (JJ last)) (-RRB- -RRB-))) (: :) (S (VP (VB File) (ADJP (`` ``) (JJ /python23/lib/site-packages/cwm/cwm.py) ('' '')))) (, ,) (NP (NN line) (CD 652)) (, ,) (PP (IN in)) (. ?)))
(S1 (S (NP (NNP doCommand)) (-LRB- -LRB-) (-RRB- -RRB-) (VP (VB File) (NP (NP (`` ``) (JJ /python23/lib/site-packages/cwm/cwm.py) ('' '')) (, ,) (NP (NN line) (CD 380)) (, ,)))))
(S1 (PP (IN in) (NP (NN doCommand))))
(S1 (NP (NP (NNP p.load)) (PRN (-LRB- -LRB-) (NP (NNP _inputURI)) (-RRB- -RRB-)) (VP (VB File) (`` ``) (FRAG (X (SYM C)) (: :) (JJ \python23\lib\site-packages\cwm\notation3.py) ('' ''))) (, ,)))
(S1 (NP (NNP line) (CD 209) (, ,) (PP (IN in) (NP (NN load)))))
(S1 (NP (NP (NN return) (NNS self.loadBuf)) (PRN (-LRB- -LRB-) (NN stream.read) (-LRB- -LRB-) (-RRB- -RRB-) (-RRB- -RRB-))))
(S1 (NP (# #) (CD self._formula)))
(S1 (X (NN File) (`` ``) (X (SYM C) (: :) (ADJP (JJ \python23\lib\site-packages\cwm\notation3.py)) ('' '')) (, ,)))
(S1 (NP (NNP line) (CD 217) (, ,) (PP (IN in) (NP (CD loadBuf)))))
(S1 (NP (NP (JJ self.feed) (PRN (-LRB- -LRB-) (NP (CD buf)) (-RRB- -RRB-)) (NN File)) (X (`` ``) (X (SYM C) (: :) (ADJP (JJ \python23\lib\site-packages\cwm\notation3.py)) ('' '')) (, ,))))
(S1 (NP (NNP line) (CD 235) (, ,) (PP (IN in) (NP (NN feed)))))
(S1 (S (NP (PRP i)) (VP (SYM =) (NP (NP (JJ self.directiveOrStatement)) (PRN (-LRB- -LRB-) (NP (NNP str)) (, ,) (NP (NNP j)) (-RRB- -RRB-))))))
(S1 (X (NN File) (`` ``) (X (SYM C) (: :) (ADJP (JJ \python23\lib\site-packages\cwm\notation3.py)) ('' '')) (, ,)))
(S1 (NP (NNP line) (CD 248) (, ,) (PP (IN in) (NP (NNS directi)))))
(S1 (S (NP (NNP veOrStatement) (NNP j)) (VP (SYM =) (NP (NP (NN self.statement)) (PRN (-LRB- -LRB-) (INTJ (UH str)) (, ,))))))
(S1 (S (NP (PRP i)) (-RRB- -RRB-) (VP (VBP File) (`` ``) (FRAG (X (SYM C)) (: :) (JJ \python23\lib\site-packages\cwm\notation3.py) ('' '')) (, ,))))
(S1 (NP (NNP line) (CD 341) (, ,) (PP (IN in) (NP (NN stateme)))))
(S1 (S (ADVP (RB nt)) (NP (NNP j)) (VP (SYM =) (NP (NP (JJS self.property_list)) (PRN (-LRB- -LRB-) (FW str) (, ,))))))
(S1 (S (NP (PRP i)) (, ,) (NP (JJ r-LSB-0) (NNS -RSB-)) (-RRB- -RRB-) (VP (VBP File) (`` ``) (FRAG (X (SYM C)) (: :) (JJ \python23\lib\site-packages\cwm\notation3.py) ('' '')) (, ,))))
(S1 (NP (NNP line) (CD 594) (, ,) (PP (IN in) (NP (NN propert)))))
(S1 (NP (NP (JJ y_list) (NN self.makeStatement) (PRN (-LRB- -LRB-) (PRN (-LRB- -LRB-) (NP (NN self._context) (, ,) (NN sym) (, ,) (CD subj) (, ,) (CD obj)) (-RRB- -RRB-)) (-RRB- -RRB-)) (NN File) (`` ``) (NNP C)) (: :) (ADJP (JJ \python23\lib\site-packages\cwm\notation3.py) ('' '')) (, ,)))
(S1 (NP (NNP line) (CD 331) (, ,) (PP (IN in) (NP (NN makeSta)))))
(S1 (NP (NP (JJ tement) (NN self._sink.makeStatement)) (PRN (-LRB- -LRB-) (FW quadruple) (, ,))))
(S1 (NP (NNP why=self._reason2) (-RRB- -RRB-)))
(S1 (S (VP (VB File) (FRAG (X (`` ``) (SYM C)) (: :) (JJ \python23\lib\site-packages\cwm\llyn.py) ('' '') (, ,) (NP (NN line))))))
(S1 (NP (NP (CD 1452)) (, ,) (PP (IN in) (NP (NN makeStateme)))))
(S1 (FRAG (NP (ADJP (RB nt) (JJ self.storeQuad)) (PRN (-LRB- -LRB-) (NP (NNP q)) (, ,) (FRAG (WHADVP (WRB why))) (-RRB- -RRB-)) (NN File)) (X (`` ``) (SYM C)) (: :) (ADJP (JJ \python23\lib\site-packages\cwm\llyn.py) ('' '')) (, ,) (NP (NN line))))
(S1 (NP (NP (CD 1481)) (, ,) (PP (IN in) (NP (NN storeQuad)))))
(S1 (NP (NP (NN return) (NNS context.add)) (PRN (-LRB- -LRB-) (FW subj=subj) (, ,))))
(S1 (S (S (NP (NP (JJ pred=pred)) (PRN (, ,) (ADVP (RB obj=obj)) (, ,) (NP (NN why=why)) (-RRB- -RRB-))) (VP (VBP File) (`` ``) (NP (NNP C)))) (: :) (FRAG (ADJP (JJ \python23\lib\site-packages\cwm\llyn.py) ('' '')) (, ,) (NP (NN line) (CD 479)) (, ,) (SBAR (IN in) (S (VP (VB add) (NP (JJ self.checkClosure) (PRN (-LRB- -LRB-) (NP (NP (NNS subj)) (, ,) (VP (VBN pred))) (, ,) (NP (CD obj)) (-RRB- -RRB-)) (NN File))))) (X (`` ``) (SYM C)) (: :) (ADJP (JJ \python23\lib\site-packages\cwm\llyn.py) ('' '')) (, ,) (NP (NN line)))))
(S1 (NP (NP (CD 617)) (, ,) (PP (IN in) (NP (NN checkClosure)))))
(S1 (S (NP (NP (NN x.dereference)) (PRN (-LRB- -LRB-) (NP (`` ``) (NNP m) ('' '') (NN +) (NN self._closureMode) (, ,) (NN self)) (-RRB- -RRB-))) (VP (VBP File) (`` ``) (FRAG (X (SYM C)) (: :) (ADJP (JJ \python23\lib\site-packages\cwm\term.py) ('' '')) (, ,) (NP (NN line))))))
(S1 (NP (NP (CD 212)) (, ,) (PP (IN in) (NP (NN dereference)))))
(S1 (S (SBAR (IN if) (S (`` ``) (NP (NN E)) ('' '') (PP (RB not) (IN in) (NP (NN mode))))) (: :) (NP (NN F)) (VP (SYM =) (NP (NP (NN self.store.load)) (PRN (-LRB- -LRB-) (NN inputURI) (-RRB- -RRB-))))))
(S1 (S (VP (VB File) (FRAG (X (`` ``) (SYM C)) (: :) (JJ \python23\lib\site-packages\cwm\llyn.py) ('' '') (, ,) (NP (NN line))))))
(S1 (NP (NP (CD 1263)) (, ,) (PP (IN in) (NP (NN load)))))
(S1 (NP (NP (JJ p.feed) (PRN (-LRB- -LRB-) (NN buffer) (-RRB- -RRB-)) (NN File)) (X (`` ``) (X (SYM C) (: :) (ADJP (JJ \python23\lib\site-packages\cwm\sax2rdf.py)) ('' '')) (, ,) (NP (NN line)))))
(S1 (NP (NP (CD 584)) (, ,) (PP (IN in) (NP (NN feed)))))
(S1 (NP (JJ self._p.feed) (PRN (-LRB- -LRB-) (NN data) (-RRB- -RRB-)) (NN File)))
(S1 (FRAG (X (`` ``) (SYM C)) (: :) (NP (NP (JJ \Python23\Lib\site-packages\_xmlplus\sax\expatreader.py) ('' '')) (, ,) (NP (NN line) (CD 216)) (, ,))))
(S1 (S (PP (IN in) (NP (NN feed))) (VP (VBP self._parser.Parse) (NP (-LRB- -LRB-) (NP (NNS data)) (, ,)))))
(S1 (S (NP (NNP isFinal)) (-RRB- -RRB-) (VP (VB File))))
(S1 (FRAG (X (`` ``) (SYM C)) (: :) (NP (NP (JJ \Python23\Lib\site-packages\_xmlplus\sax\expatreader.py) ('' '')) (, ,) (NP (NN line) (CD 395)) (, ,))))
(S1 (S (PP (IN in) (NP (NN external_entity_ref))) (VP (VB self._source.getSystemId) (-LRB- -LRB-) (-RRB- -RRB-))))
(S1 (SQ (CC or) (VP (VB File))))
(S1 (FRAG (`` ``) (X (SYM C)) (: :) (NP (JJ \Python23\Lib\site-packages\_xmlplus\sax\saxutils.py) ('' '')) (, ,) (NP (NN line) (CD 515)) (, ,) (PP (IN in))))
(S1 (S (NP (NNP prepare_input_source) (NNP f)) (VP (SYM =) (NP (NP (NNS urllib2.urlopen)) (PRN (-LRB- -LRB-) (JJ source.getSystemId) (-LRB- -LRB-) (-RRB- -RRB-) (-RRB- -RRB-))))))
(S1 (S (VP (VB File) (FRAG (X (`` ``) (SYM c)) (: :) (NP (NN \python23\lib\urllib2.py) ('' '')) (, ,) (NP (NN line) (CD 136)) (, ,) (PP (IN in) (NP (NP (JJ urlopen) (NN return) (NNS _opener.open)) (PRN (-LRB- -LRB-) (NN url) (, ,))))))))
(S1 (S (NP (NNS data)) (-RRB- -RRB-) (VP (VBP File) (`` ``) (FRAG (X (SYM c)) (: :) (NP (NN \python23\lib\urllib2.py) ('' '')) (, ,) (NP (NN line) (CD 331)) (, ,) (PP (IN in) (NP (JJ open) (NNS type_))) (X (SYM =)) (VP (VB req.get_type) (-LRB- -LRB-)) (-RRB- -RRB-)))))
(S1 (S (VP (VB File) (FRAG (X (`` ``) (SYM c)) (: :) (ADJP (JJ \python23\lib\urllib2.py) ('' '')) (, ,) (NP (NN line) (CD 233)) (, ,) (PP (IN in) (NP (NP (JJ get_type) (NN raise) (NN ValueError)) (, ,) (`` ``) (NP (JJ unknown) (NN url) (NN type)))) (: :) (NP (NN %) (NNP s) ('' '') (NN %)) (ADJP (JJ self.__original))))))
(S1 (NP (NP (NN ValueError)) (: :) (NP (JJ unknown) (NN url) (NN type)) (: :) (NP (NN XMLSchema.dtd))))
(S1 (S (ADVP (RB Hm.)) (NP (PRP I)) (VP (AUX do) (RB n't) (VP (VB know))) (. .)))
(S1 (NP (NP (NNP Tim) (. ?)) (PRN (-LRB- -LRB-) (S (NP (PRP I)) (VP (AUX 've) (VP (VBN included) (NP (PRP him)) (PP (IN on) (NP (DT the) (NNS recipients)))))) (-RRB- -RRB-)) (: --) (NP (NN sandro))))
(S1 (FRAG (PRN (-LRB- -LRB-) (NP (NNP Tim) (. ?)) (-RRB- -RRB-)) (SBAR (S (NP (PRP I)) (VP (VBD thought) (SBAR (S (NP (DT the) (NN E)) (VP (AUX was) (NP (NP (DT the) (JJ same)) (PP (IN as) (PP (IN for) (NP (NN --mode))))))))))) (: :) (S (VP (TO to) (RB not) (VP (VB report) (NP (NN failure-to-retrieve)) (PP (IN as) (NP (DT an) (NN error)))))) (. .)))
(S1 (S (ADVP (RB So)) (NP (PRP I)) (VP (VBD dropped) (NP (PRP it)) (PP (IN from) (NP (PRP$ my) (NN example)))) (. .)))
(S1 (S (CC But) (ADVP (RB maybe)) (NP (PRP I)) (VP (AUX was) (ADJP (JJ wrong))) (. .)))
(S1 (NP (: :) (JJ -/) (: --) (NN sandro)))
(S1 (FRAG (INTJ (UH Yes)) (, ,) (NP (NP (JJ sorry) (NNP forte) (NN lack)) (PP (IN of) (NP (NN --help)))) (, ,) (X (SYM E)) (VP (VBZ means) (NP (NP (VB ignore) (NNS errors)) (PP (IN on) (NP (NN retreive/parse))))) (. .)))
