A question has come up on comments. 
Is " ex/ " in the lexical space rdf:XMLLiteral. 
I believe not, it must be " ex /ex ", but wanted to check. 
The text in concepts is: The lexical space is the set of all strings which: * are well-balanced, self-contained XML data [XML]; * correspond to exclusive Canonical XML (with comments, with empty InclusiveNamespaces PrefixList ) [XML-XC14N]; The corresponds to will need clarification. 
Brian [This message rambles a bit... for my final suggestion, skip to ****] I agree, and suggest: The lexical space is the set of all Unicode strings which: * are well-balanced, self-contained XML data [XML]; * when encoded using UTF-8 yield exclusive Canonical XML (with comments, with empty InclusiveNamespaces PrefixList ) [XML-XC14N]; It occurs to me that the source of confusion may be: The lexical-to-value mapping maps a string to the corresponding exclusive Canonical XML (with comments, with empty InclusiveNamespaces PrefixList ). 
when, now that the canonicalization is handled by the parser, all we really need to say is: The lexical-to-value mapping is UTF-8 encoding of the lexical form (yielding an octet sequence) It which case, the lexical space description might be: The lexical space is the set of all Unicode strings which are mapped by the lexical-to-value mapping to exclusive canonical XML (with comments, with empty InclusiveNamespaces PrefixList ) [XML-XC14N]; But hang on, we already have: The value space is the set of all exclusive Canonical XML (with comments, with empty InclusiveNamespaces PrefixList ), which when embedded within an arbitrary XML start tag and an end tag form a document conforming to XML Namespaces [XML-NS]. 
So even that is redundant. 
Maybe: The lexical space is the set of Unicode strings which are mapped by UTF-8 encoding to valid XMNL literal values (see below) Putting it all together, and polishing a little, my suggestion is: The lexical space is the set of Unicode strings which are mapped by UTF-8 encoding to valid XML literal values (see below) The lexical-to-value mapping is UTF-8 encoding (yielding an octet sequence, where octets are distinct from characters) The value space is the set of all exclusive Canonical XML (with comments, with empty InclusiveNamespaces PrefixList ), which when embedded within an arbitrary XML start tag and an end tag form a document conforming to XML Namespaces [XML-NS]. 
#g Graham Klyne GK@NineByNine.net Nine by Nine The value space is the set of all exclusive Canonical XML (with comments, with empty InclusiveNamespaces PrefixList ), which when embedded within an arbitrary XML start tag and an end tag form a document conforming to XML Namespaces [XML-NS]. 
The canonical xml is a sequence of octets. 
Since and xml document is a sequence of characters, you can't stick a sequence of octets between a start tag and an end tag and get an XML document. 
Brian Er, oh yes. 
That's existing text: I just copied it from: so I suppose that will need changing as well. 
Tries... The value space is the set of all exclusive Canonical XML (with comments, with empty InclusiveNamespaces PrefixList), which when the character sequence they represent is embedded within an arbitrary XML start tag and an end tag form a document conforming to XML Namespaces [XML-NS]. 
(This use of octet sequence from C14N gets uglier and uglier... oh well.) #g Graham Klyne GK@NineByNine.net Nine by Nine Regarding XML literals, I have one request to make to the WG, in its deliberations on this topic. 
Speaking as the semantics editor, I really do not give a damn what XML literal values are defined to actually BE. 
What I do care about, a lot, is this: whatever they are defined to be, that the lexical-to-value mapping from the legal lexical forms is precisely and unambiguously 1:1. 
We have already canonicalized the lexical forms about as strongly as the combined forces of XML and RDF are able to canonicalize them; the operational point of doing this is so that an RDF engine can compare equality of literal values by comparing identity of lexical form, and we don't have to have special inference rules which substitute different but co-referring XML forms one for another in all possible ways. 
If we lose this 1:1 nature of the mapping, then we might as well not have bothered to have a canonicalized lexical form. 
SO please don't do anything that runs a risk of losing that property. 
I do not know if having lexical-to-value be UTF-8 encoding does so or not. 
I would rather not have to know, to be honest. 
Pat IHMC(850)434 8903 or (650)494 3973 home 40 South Alcaniz St.(850)202 4416 office FL 32501(850)291 0667 cell phayes@ihmc.us 
http://www.ihmc.us/users/phayes 
Pat - I believe I fully agree with you on that 1:1 thing In a similar sense, one could maybe argue that 2 "^^xsd:int is not having an illegal lexical value but a non-canonical lexical value ;-) Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/ 
pat hayes Sent by: cc: w3c-rdfcore-wg@w3.org 
w3c-rdfcore-wg-req Subject: Re: xml literal lex space question uest@w3.org 
2003-08-01 06:53 PM Regarding XML literals, I have one request to make to the WG, in its deliberations on this topic. 
Speaking as the semantics editor, I really do not give a damn what XML literal values are defined to actually BE. 
What I do care about, a lot, is this: whatever they are defined to be, that the lexical-to-value mapping from the legal lexical forms is precisely and unambiguously 1:1. 
We have already canonicalized the lexical forms about as strongly as the combined forces of XML and RDF are able to canonicalize them; the operational point of doing this is so that an RDF engine can compare equality of literal values by comparing identity of lexical form, and we don't have to have special inference rules which substitute different but co-referring XML forms one for another in all possible ways. 
If we lose this 1:1 nature of the mapping, then we might as well not have bothered to have a canonicalized lexical form. 
SO please don't do anything that runs a risk of losing that property. 
I do not know if having lexical-to-value be UTF-8 encoding does so or not. 
I would rather not have to know, to be honest. 
Pat IHMC (850)434 8903 or (650)494 3973 home 40 South Alcaniz St. (850)202 4416 office FL 32501 (850)291 0667 cell phayes@ihmc.us 
http://www.ihmc.us/users/phayes 
I note that this lexical space thread will need restarting once we have decided the value space :( Jeremy ction-XMLLiteral 
