2.1.1 Shouldn't this cite RDF as a metadata standard? 
2.6.6. 
Example Either I don't understand the XML Namespace processing instruction, or the example is wrong. 
It seems to me that the Link, src, and dst elements need a D: prefix. 
(Or does XML have a lexical scope for providing a "default" namespace, so that Link within D:Prop is taken to be D:Link? 
If so, this should be explicitly documented, because it's an obscure feature. 
Likewise for the example in 2.8.3.6 
Also, either I don't understand the description of Link, or there's a bug here. 
The values for Link are 1*Src and 1*Dst, it does not say that random other elements (in this case F:ProjFiles) are allowed. 
2.8.4 PUT I don't understand the language here. 
I can't see from what's written here why a PUT could not work for a property. 
A GET returns text/xml specifying the name and value. 
So if I did a PUT that contained a name and value, what would the problem be? 
Seems like PUT would be very convenient, so why outlaw it? 
I'm sure there's a good reason, but I can't guess it from the spec. 
2.8.5.4 PropFindResult The purpose mentions a SEARCH request, it should be PROPFIND Also the example uses the PROPFIND element not PropFIndResult. 
3.10.6.1 In the example is the HREF for the Namespace PI *really* supposed to be Shttp:? 
If there's a reason to need to use SHTTP here, what is it? 
Otherwise it's just a confusing distraction. 
Minor notational inconsistency. 
At different places in the document listing reply codes, the descriptive strings are written in three different ways: * in parenthesis (e.g. 3.10.5) 
(possibly followed by a hyphen) * in string quotes (e.g. 5.2.7) * with no delimiter other than a hyphen This is really trivial I know but it makes the document just ever so slightly harder to follow. 
Finally, is case significant in XML? 
I hope not, because some elements are used as if was not, for example "Level". 
Even if case is not significant, the document should be written as if it were. 
(And, as I mentioned in a previous letter, we should use one consistent choice for writing elements whose names are compounds, e.g. MultiResponse.) Best regards 650-812-4301 2.1.1 
A paragraph is being prepared on the subject. 
2.6.6 
My current understanding is that the XML namespace element supports scoped values. 
If this is indeed the case then it should be documented in the XML spec and we need take no action. 
if it is not true then we need to change our examples. 
2.8.3.6. 
Again, perhaps this is a failure to understand XML on the part of the authors but we were under the impression that the entire purpose of XML's self describing nature is that it is possible to add in random new tags without confusing older clients. 
The point of the example is to say show how value added servers can add more information to a link without breaking older clients. 
2.8.4. 
This section is scheduled to be removed along with the proploc attribute. 
2.8.5.4. 
I'll fix this. 
3.10.6.1 The Shttp you see is a printing error and is not in the original word draft. 
We have adopted a new mechanism for printing the draft that should prevent these problems. 
Response Codes - Yes, this is a known issue and will be fixed in the next version. 
XML Case Sensitivity - Until fairly recently case was not sensitive in XML. 
However a recent decision by the XML group has changed that. 
As such the next draft will use lower case labels for everything. 
Jim, you have a good eye. 
Both the scoping with namespaces and case sensitivity have been hot issues around here. 
Independent analysis which identifies the same issues the authors are worrying about is a good sign we are worrying about the right things. 
Many thanks, Yaron I'd just like to follow up on one point. 
I'd claim that the examples should not use this feature. 
You can't assume that DAV readers will be XML experts. 
DAV may be their first exposure to XML, and they will be applying "common sense" when reading the spec. 
This XML feature is not totally obvious on first glance, therefore it adds complexity to the reading of the examples, and it only saves two characters per use, which is not worth the confusion in users. 
Given that one can already abbreviate the URI prefixes to a single letter, I would hope that anyone writing XML would write fully qualified names, and not rely on XML namespace scoping to make thier tags unambiguous. 
best regards Jim 650-812-4301 You're right. 
I will change it. 
Yaron Just a confirmation of David Durand's point. 
The namespace proposal that we will be releasing for review this week does not support scoped values. 
You will need to explicitly use the namespace qualifier on each element from that namespace. 
The other option is to experiment with application specific conventions about scoping. 
I would strongly suggest that you do not experiment with something like the WEBDAV spec because it is likely that the scoping rules will be reexamined by the XML WG in a latter version. 
Regards, Dave Hollander Co-author "Name Spaces in XML" XML-WG From: Jim Davis jdavis@parc.xerox.com 
I'd just like to follow up on one point. 
I'd claim that the examples should not use this feature. 
You can't assume that DAV readers will be XML experts. 
DAV may be their first exposure to XML, and they will be applying "common sense" when reading the spec. 
This XML feature is not totally obvious on first glance, therefore it adds complexity to the reading of the examples, and it only saves two characters per use, which is not worth the confusion in users. 
This feature is also _not_ likely to be in XML. 
Final language has not been approved on namespaces, but discussion has already led top general agreement that only _+fully_ qualified names will have meaning in the 1.0 version of XML. 
It is not clear what, if any, defaulting rules are needed or possible to integrate with the rest of XML, and so the minimization feature of scoping is not currently slated for inclusion. 
The misunderstanding is very understandable, the original namespace proposal included minimization, and the version on the web may still do so, but that proposal was just one imput among many hundreds of emails, and its unmodified form is not still under consideration. 
Given that one can already abbreviate the URI prefixes to a single letter, I would hope that anyone writing XML would write fully qualified names, and not rely on XML namespace scoping to make thier tags unambiguous. 
This will probably be the only standard practice for some time, although we hope that people will be experimenting with scoped solutions (and their interaction with DTDs) in order to provide input to the XML process. 
-- David David Durand dgd@cs.bu.edu| david@dynamicDiagrams.com 
Boston University Computer Science | Dynamic Diagrams MAPA: mapping for the WWW Wait, I already agreed! 
=) Yaron 
