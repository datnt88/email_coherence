----- Original Message ----- Hi all, I am currently designing a web site and wanted to know whether any VIP-L members have experienced difficulties accessing sites that use drop down boxes for secondary navigation. 
I understand that accessibility may be a problem if the site uses JavaScrip to deliver these links and/or if the drop down box is not properly marked up with name/title tags etc. 
What are your thoughts? 
Are there any other problems from a user perspective that I should know about - ie is this method likely to be confusing? 
I have been surfing the net and came across an interesting site using this feature. 
If you want to have a look the address is: welcome link on the home page to view the drop down box with a list of links to other key pages - found in the bottom left hand corner of the screen). 
I am also interested to know if you have any comments about online forms. 
The forms I have designed to date use tables for layout and a submit button - I have included field names and a tab index to make it easier to navigate - is this sufficient? 
A sample form can be found at: All feedback welcome - e-bility's home page can be found at Many thanks. 
Sandra. 
e-bility.com 
Semi Finalist, Australian Internet Awards 2000 E-mail: S.Vassallo@e-bility.com 
Web Site: www.e-bility.com 15 Bulga Close Hornsby Heights NSW 2077 Australia ** vip-l is sponsored by Blind Citizens Australia and administered by Tim Noonan True drop downs cannot be done in pure HTML. 
You can provide fallbacks easily, but very few people do. 
What you must do is write a conventional link to the menu and make sure that the site is navigable without pulldowns, then add an onclick action that returns false. 
E.g. a onclick="Popit('menu'); return false;" href="straigthforward link"... 
This wasn't what I thought it was. 
It's not a popup but a selection box that forwards on detecting an onchange event. 
They have done a much better job of a non-script fallback for this than I've seen done before - it works cleanly without script support. 
I have reservations, though, about this sort of technique. 
I think one should use links for navigations, so that people don't have to guess what to do (text only, there was no obvious label on this control). 
About the only advantage they have is that you can get everything on one screen. 
Most people copying the idiom will fail to realise that a fallback is needed and many will not have access to CGI to enable them to provide that fallback. 
You cannot use this as the only form of navigation if you want to be indexed by search engines, as they will not attempt to fill in forms. 
In passing, I noted that the site's multi-language support is broken. 
One should always use HTTP to specify character setsl if at all possible, and any character set specified in the HTTP takes precedence over any in the text (the text may have been transliterated by the server). 
Their Lotus server is explicitly specifying ISO 8859/1, so, for example, any conforming browser will ignore the BIG5 in the body of the Chinese (I can't read it, but it seemed a good test case). 
General abuse of character sets may mean that people in BIG5 countries use browsers that assume or are configured to always use BIG5 and ignore all sources of character sets, but Lynx definitely obeys the standard, in its default configuration, and so will recent IEs when configured for automatic detection. 
From an accessibility (wide definition point of view) the language labels should have been in the language in question (there are some issues with font and encoding for non-CJK languages, when taking real browsers into account) and the site ought to have done contents negotiation (like Google does++) to automatically serve a home page in the user's preferred language. 
It seemed to read sensibly text only, however, it is seriously abusing blockquote elements for some presumed presentational effect they have on whatever browser was used. 
The only legitmate structural markups in this context would have been using TH instead of TD (theoretically this allows a speech browser to associate the name with the data cell, but I suspect that none of the table accessibility features in the HTML spec have been implemented - you should read them though) and LABEL, to eplicitly associate the lable with the control. 
++ At least for English, French, German and Spanish. 
Re: drop-down boxes for navigation. 
It's great for those with a mouse, but if you're using a GUI browser with keyboard control, the onChange event triggers before you can arrow further down the list, effectively trapping you on the first selection. 
That could be solved by just having a submit input, as most (all?) forms should... check out (please be gentle, it's still very much a work-in-progress, with no server support) the home page of the site I'm designing for Michigan State University's RCPD (Resource Center for Persons with Disabilities) at http://www.msu.edu/~rcpd . 
As for forms, I agree it's difficult to get the sort of visual formatting one expects without tables. 
I'm wrestling with this question myself. 
Is it worth the time to put in fieldset s when they don't seem to have any browser support other than excessively ugly rendering (in IE, for example) effects? 
Sigh... Except for very simple forms, CSS just doesn't cut it here. 
My guilt-relieving rationalization came when I noted that the WCAG doesn't *absolutely prohibit* tables for layout, so if you're going to use them in a way that makes your content more accessible to sizable portions of the population (I think we would all agree that scanning a nicely formatted form with use of color, lines, and grid layout is cognitively easier for most people than an unformatted, one-dimensional layout) then I would say, go for it. 
David Holstius holstius@msu.edu 
