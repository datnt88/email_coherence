I have posted a new draft of the HTML/XHTML techniques for WCAG 2.0. 
It has various minor modifications, though nothing in the way of new techniques. 
Much of the change is based on the addition of some example code, some introductions, descriptions, explanations of affected groups, minor changes to the wcag-tech DTD, and the XSLT to transform the document. 
I hope to use this version for discussion at the breakout sessions on Saturday morning. 
I'd like to go over some of the issues, and hopefully start parceling out work items to build it out and add new techniques. 
The XML document on which it's based: m I am impressed. 
Here are my comments on Forms. 
Comment 1. 
Under forms, rules, the document states the "graphical form submit button created with INPUT, type="image" creates a type of server-side image map." 
However, in the "Technique for specific controls", it states to us the "alt" tag. 
This was a big issue on a design project a couple of years back. 
Suggest we reword any possible ambiguity or interpretation. 
Issue: I think stated this way it confuses the reader on what is or is not accesptable. 
Solution: Propose changing the wording to add a link to the technique in the rules or even stating if imput="image" is used, then an alt tag must also be use int he form control, see technique Comment 2. I think we should handle this in a manner similar to use case scenarios. 
Solution: Besides offering my opinion after several people have worked extremely hard on this, the approach may be more of a cosmetic or style issue. 
I will be providing an example here in a bit, please be patient. 
Regards, rob Comment 3. Timeout as it applies to session or state management. 
This would apply to log on, forms to collect or submit data, for example contribution or purchase, and moving back and forth between a site. 
Issue: Are we going to mention this here? 
I think we should. 
Solution: Propose text to address this. 
Comment 4. Is there a recommended list of access keys to use for functions? 
Issue: If we don't mention this, it will be unclear on how to implement. 
Solution: Provide a list of access keys or references for products and what they use. 
Please note, this is not my area and defer to people with more expertise. 
Comment 5. Under forms and tables, I do not think we go far enought in providing examples on how to properly implement form controls. 
Issue: There needs to be use case scenarios deribing all the possible form controls (input, textarea, select, option box for radio and check as well as combo, and submit). 
Neither Section 508 nor W3C goes far enough to greatly reduce user interpretation. 
Solution: There are two solutions: (1) Provide examples using all form controls in a table with two columns for layout. 
(2) Provide example using all form controls without a table. 
These are the two most common usages that I see in competitive research. 
Comment 5. Under forms and tables, I do not think we go far enough in providing examples on how to properly implement form controls. 
Issue: There needs to be use case scenarios describing all the possible form controls (input, textarea, select, option box for radio and check as well as combo, and submit). 
Neither Section 508 nor W3C goes far enough to greatly reduce user interpretation. 
Solution: There are two solutions: (1) Provide examples using all form controls in a table with two columns for layout. 
(2) Provide example using all form controls without a table. 
These are the two most common usages that I see in competitive research. 
Comment 6. Code used an example does not provide a visual cognitive stimuli for some people nor does it help the person just beginning to develop web pages, regardless of their level of exerptise Issue: The document needs to be more user friendly. 
Solution: When an example is provided in HTML, also show what it looks like on the same page or provide a link to another document. 
Comment 7. Linearizing Table. 
Issue: This is a volatile subject as you have users that may use browsers that may not support all the functionality. 
The guidelines and techniques should not be all encompassing, rather they may want to show the issues and circumstances. 
While it is recommended to use the CSS positioning, this is not at all widely supported and I consider this to be a future implementation. 
However, using tables for layout are widely used with CSS. 
The content under linearizing tables also mentions there is a risk of word wrapping. 
I have a HUGE CAUTION for this as it seems we are contradicting ourselves in the direction. 
People using this are going to say what? 
Are we saying table cells should be readable when linearized, then I can do that. 
But to say a table cell has issues with linearization and this ison older tools, I am not sure what we are driving to do? 
Please note, we recognize that this is not a perfect world in that browsers and tools cost money and people may have older versions. 
But we need to layout the options to the developer, not direct the acceptance. 
Testing conformance is critical here as this becomes a test case. 
Solution: Consider combining the two sections, Linearizing Table and Tables for layout into one category called Tables and Methods for layout, Tables used for Presentation or something? 
Then you could discuss the pros and cons of each. 
However, I do not think we should tell people how to do this. 
Provide the how and let the user decide what works best for their audience. 
I do nto think offering to provide a text alternative page here is an option. 
Unless you are running a database generated site, this is too costly, cumbersome and will not be implemented by the mass. 
I also think this needs to be reflected in WCAG Version 2. Additional Comment: The next question is how do you turn this into a testable item for the compliance tools? 
We also need to consider what is implementable and how the mass developer population is driving the market. 
Right now tables are used for layout with CSS. 
Positioning is not being widely used as this is a future implementation. 
MM If HTML 4.01 is the baseline for this document, I think the solution should be to use the "button" element, which would allow authors to add HTML including images to button faces, rather than using "input type=image". 
I'm not sure how all user agents support button, however. 
(There is a section in the techniques XML to add implementation details from one UA to another, though.) Alternately, I think we should require that the site be usable when "input type=image" is sent with x and y coordinates of 0, which is what IE and Netscape send when an image input is activated by keyboard. 
Since almost all instances of image inputs that I've ever seen ignore the coordinates, this would be a minor concession to be made only by those who are using the x and y values. 
RN MM I think where this goes, in HTML or server-side techniques, is a gray area. 
My vote would be in server-side techniques, since HTML itself has no sense of state, as it's all provided by HTTP or server magic. 
RN MM This is already part of the plan. 
The code will be transformed into HTML where applicable (no point doing it for the "title" element, for example), and the XML document also provides for screen shots of how the document appears in various browsers, and hopefully sound files of output from screen readers and the like. 
m Food for thought. 
Been thinking about the button created by input=image. 
This is widely used and don't think it can be avoided as it is also widely noted in many books. 
If you think the coordinates do not need to be posted, then may I suggest keep them off, however, u can always put a note that some browsers may require this. 
Behalf Of Matt May ----- Original Message ----- form MM If HTML 4.01 is the baseline for this document, I think the solution should be to use the "button" element, which would allow authors to add HTML including images to button faces, rather than using "input type=image". 
I'm not sure how all user agents support button, however. 
(There is a section in the techniques XML to add implementation details from one UA to another, though.) Alternately, I think we should require that the site be usable when "input type=image" is sent with x and y coordinates of 0, which is what IE and Netscape send when an image input is activated by keyboard. 
Since almost all instances of image inputs that I've ever seen ignore the coordinates, this would be a minor concession to be made only by those who are using the x and y values. 
RN This MM I think where this goes, in HTML or server-side techniques, is a gray area. 
My vote would be in server-side techniques, since HTML itself has no sense of state, as it's all provided by HTTP or server magic. 
RN looks MM This is already part of the plan. 
The code will be transformed into HTML where applicable (no point doing it for the "title" element, for example), and the XML document also provides for screen shots of how the document appears in various browsers, and hopefully sound files of output from screen readers and the like. 
m MM Well, to go over the function of the image input, there are two ways in which it's used: 1) As a replacement for input type="submit", to show custom submit button images. 
For this application, the input communicates no info of its own to the server (and in most cases, the data produced by the input is discarded), so the technique of creating text equivalents should be sufficient. 
This is the part that is already in the techniques. 
2) The case you're talking about, where the user clicks on the input, and the server processes the x and y coordinates. 
(An input image named "sample" actually sends form values of "sample.x" and "sample.y", with the values corresponding to the point the image was clicked.) If this is the case, then the image is being used as both a submit button and a server-side imagemap, and should instead satisfy the requirements relevant to server-side imagemaps. 
I think the techniques could be expanded with another example to demonstrate this distinction. 
m 
