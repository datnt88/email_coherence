*Rough* ideas for how EARL might look w/out reification. 
I've taken very little care to be faithful to exact earl spec, just wanted to try out some ideas... dan rdf:RDF xmlns="http://www.w3.org/WAI/ER/EARL/danbri-hatchetjob#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" 
This is clever stuff, DanBri. 
I think that you've basically changed the model from:- [ :subject :x; :predicate :y; :object :z ] to:- [ :subject :x; :rest [ predicate :y; :object :z ] ] which is neat because when you have multiple reified statements with the same subject, you get less serialization sugar on the output. 
Also, since you've changed the name of the properties so that they're not "rdf:subject" etc. any more, it looks like no reification is going on at all, which can only be a good thing :-) In summary, I like it. 
Perhaps you'd like to send a pointer to the rest of the group? 
Kindest Regards, Sean B. Palmer @prefix : http://purl.org/net/swn# . 
:Sean :homepage http://purl.org/net/sbp/ . 
I think I'm missing something. 
I thought x was a document, y was a test and z was a result. 
Now that triple makes sense to me as a unit, but a (test, result) pair doesn't really.... what's it mean? 
Aaron Swartz [http://www.aaronsw.com] 
4FAC4838B7D8D13FA6D92EDB4145521E79F0DF4B 
