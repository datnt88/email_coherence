There seems to be a hole in the coverage of OWL. 
More specifically, given classes 'A', 'B', and 'C', a property 'has', and the "reality" that A has B and optionally has C, and that B is distinct from C, it does not seem possible to model this situation in OWL. 
Some considerations: Renaming 'has' to 'has-an-A' and 'has-a-B' appears to be a non-starter. 
The property has already been named in the "reality" that is being modelled. 
Perhaps I am translating from an E-R model, or from UML. 
Where is the information about this gratuitous renaming going to go? 
Perhaps I don't own the namespace of the property. 
If the example seems contrived, look at the WSA, where there appear to be cases just like this. 
(See e.g.: The best that I can do seems to be this: Ontology( Class(A restriction(has someValuesFrom (B)) restriction(has someValuesFrom (C))) Class(B) 
Class(C) ObjectProperty(has domain(A) range(unionOf(B C))) which contradicts the fact that having C is optional. 
Jeff 
Jeff, by *not* mentioning A has someValuesFrom C at all is effectively saying that A optionally has C. The semantics is that everything is possible (i.e. it is optional that A has C, B could be equivalent to A, or to C... A could be a subclass of C etc etc ). 
Just like if you don't say B is distinct from C, then the semantics is that B could be intersecting with C. To say what you want, I believe the following is enough: Ontology( Class(A restriction(has someValuesFrom (B)) Class(B not (C) Class(C) ObjectProperty(has domain(A) range(unionOf(B C)) Cheers, Gary Network Inference (Holdings) Ltd. 
rviceModel.png) The best that I can do seems to be this: Ontology( Class(A restriction(has someValuesFrom (B)) restriction(has someValuesFrom (C))) Class(B) Class(C) ObjectProperty(has domain(A) range(unionOf(B C))) which contradicts the fact that having C is optional. 
Jeff 
Hi Jeff, (this is probably the wrong ML for a reply but I'll give it a try..) why don't you just remove the "someValuesFrom C" from your ontology. 
then "has" can relate individuals of type A to either individuals of type B or type C. keeping "someValuesFrom B" ensures that A has at least one B. if C is optional, the range definition is sufficient. 
did I understand your question? 
or did you mean that it's not possible to attach cardinalities to value constraints (e.g. 
A 3x has B)? DAML+OIL has this type of qualified constraints, IIRC, but I'm not sure. 
If they are not available in OWL now, then this is probably not a hole in the spec but has been well thought-through by the webont wg... hope that helps.. benjamin 
Ok, the hole is getting smaller (or the owl is getting bigger, depending on your perspective). 
The suggestion to reason about the optional 'A has C' from the range definition is a good one. 
But this only works well when the domain of the property is just A. If the domain is also a union of classes (e.g. in the WSA case already mentioned) then a lot of other unintended inferences pop out. 
Could I use something like maxCardinality = 0 to rule the unintended inferences out? 
More specifically, given classes 'A', 'B', 'C', 'D', and 'E', a property 'has', and the "reality" that A has B and optionally has C, and that B is distinct from C, and that D has E, how do I say that A doesn't have E, and that C doesn't have B or C? Jeff 
Ok, the hole is getting smaller (or the owl is getting bigger, depending on your perspective). 
The suggestion to reason about the optional 'A has C' from the range definition is a good one. 
But this only works well when the domain of the property is just A. If the domain is also a union of classes (e.g. in the WSA case already mentioned) then a lot of other unintended inferences pop out. 
Could I use something like maxCardinality = 0 to rule the unintended inferences out? 
More specifically, given classes 'A', 'B', 'C', 'D', and 'E', a property 'has', and the "reality" that A has B and optionally has C, and that B is distinct from C, and that D has E, how do I say that A doesn't have E, and that C doesn't have B or C? Jeff Jeff- this really doesn't belong here - this mailing list was intended for explicit discussion of the OWL documents, not for general discussion of use of OWL. 
The mailing list www-rdf-logic@w3.org was designated as the right place for this sort of discussion - and is also read by a lot more people. 
May I suggest you take this discussion there - you're more likely to get the answers you need on that list. 
thanks Jim Hendler WOWG chair Professor James Hendler http://www.cs.umd.edu/users/hendler 
Director, Semantic Web and Agent Technologies 301-405-2696 Univ of Maryland, College Park, MD 20742 240-277-3388 (Cell) 
