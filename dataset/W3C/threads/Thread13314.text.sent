This document describes techniques to be used by tools (browser, proxy, converter) taking HTML as input (incomplete or othersize inaccessible, IMG with no ALT, FRAME with no TITLE, etc) and trying to come up with textual alternatives for all sort of visuals lacking their native description. 
I would like the ER IG to review and discuss it before I start sharing it with other groups in or outside W3C, like the WAP forum, who is going to work on similar technique for wireless/mobile access to the Web. 
Sorry, I meant to send this to the list. 
dc Comments interspersed IN CAPS dc: simple image * ALT of IMG * TITLE of IMG * NAME of IMG * Filename part of url * ImageComments * Size heuristic * Pixel Pattern heuristic * Pixel OCR * IMAGE LOCATION (ie masthead usually centered at top) * REDUNDANCY OF IMAGE (both intrapage and interpage) image used as link * ALT of IMG * TITLE of IMG * TITLE of A * NAME of IMG * NAME of A (IS THIS The SAME AS NAME OF LINK?) * Filename part of url * GET TITLE of url * ImageComments * Size heuristic * Pixel Pattern heuristic * Pixel OCR client side imagemap MAP AREA HREF=url ... * ALT of AREA * TITLE of AREA * NAME of AREA * GET TITLE of url * Filename part of url * Pixel OCR of shape/coord frameset * TITLE of FRAME * NAME of FRAME * GET TITLE of URL link text * TITLE of A * NAME of A * Context sentence * GET TITLE of url input field image INPUT SRC=url no ALT * TITLE of INPUT * NAME of INPUT * TYPE (if not image) * if TYPE=image, see server side imagemap next server side imagemap * Loop.GET. 
TITLE -----Original Message----- Behalf Of Daniel Dardailler This document describes techniques to be used by tools (browser, proxy, converter) taking HTML as input (incomplete or othersize inaccessible, IMG with no ALT, FRAME with no TITLE, etc) and trying to come up with textual alternatives for all sort of visuals lacking their native description. 
I would like the ER IG to review and discuss it before I start sharing it with other groups in or outside W3C, like the WAP forum, who is going to work on similar technique for wireless/mobile access to the Web. 
Thanks Dave I'm not sure I caught all your comments, since I also used CAPS myself for most element/attrib names... Please tell me. 
Can you give a little more detail on what you mean here ? 
Do you mean maintain some sort of technique cache, so that if some text version was extracted at some point for an element, there's no need to redo it for the same thing later on ? 
Good point, but it's not a technique, but an implementation optimization. 
yes, A is the link, note that LINK is a different HTML element. 
Yes, you ggt them all (ie, I did not say that much, and things fit in multiple categories) You introduced the idea of heuristics.(I thjink). 
I mean, as a last resort, use logic like: 1. if an image is small and is repeated on multiple consecutive lines, it probably is a bullet graphic 2. If there is a graphic in the first couple of lines that is centered, there is a good chance it is a masthead 3. Etc What I'm trying to do here is probaly impossible. 
I'm trying to apply a common syntax for web page struucture. 
No, this is more like an extension of my previous point, across multiple pages. 
For example, if an image is repeated in the same relative location on multtiple pages, it probably is a logo. 
Hope this helps. 
David Clark CAST, Inc. 
I don't consider that impossible (considering that we walked on the moon :-) This might be harder because of the state information that must be maintained. 
Another technique for image map AREA tags that don't have ALT text would be to search for a text link with the same URL, and use that text link as ALT text for the AREA tag. 
In fact, optionally, the tool would then delete the text link at the bottom since it is then redundant. 
This would help folks who like image maps because it allows them to conveniently skip the menu items that browsers like Lynx and pwwebspeak create from the ALT tags. 
Len Leonard R. Kasday Institute on Disabilities/UAP at Temple University, Philadelphia PA I updated /WAI/ER/text-equiv with comments received. 
At some point, I'd like to declare ER IG consensus on the techniques presented there, so that I can thing about implementing them. 
1. 
One more technique: hash code repetition. 
Keep a record of all distinct image signatures you ever saw. 
Collect text equivalents from other pages that use the same image and provide text. 
This should handle bullets and popular clip art. 
2. If you start implementing these, what do we do with them? 
Is there an outline of an experiment plan? 
Al OK, I added it in the page. 
This is part of the Transform side of ER :-) (Evaluation &amp; Repair &amp; Transform) No kidding, I see Transform as being part of Repair: it's repair on behalf of the user, not the webmaster. 
I'd like to end up with a modular toolkit for Transform tools: one module for serializing Table (something coming up soon in this area), one for extracting textual equivalent, maybe one for reorganizing page for better flow (navigation bar moved at the end, etc), etc. 
The goal is both to produce Transform tools that can be used by real users (by hosting them w3.org or other servers) and to show User Agent guidelines people and UA companies what is doable and what is less doable. 
