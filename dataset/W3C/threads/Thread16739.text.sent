Hi all, A regular screen reader user of our web site has said to us that the use of a side bar navigation system on sites is a pet hate for him. 
His problem is that his reader has to plough through all the side bar information before getting to the content on the page. 
We are in the process of re-developing our site and I'd be very interested in comments on this issue. 
Regards Bernard Silva Office of the Federal Privacy Commissioner www.privacy.go.au 
This is why the various web accessibility guideline documents require sensible linearised reading orders for tables. 
If browsers had correctly and consistently implemented style sheet positioning from the start, one should have put the menu at the end of the document and used positioning to move it to the normal position. 
There are some tricks that I believe you can use with tables; basically put a dummy row into the start of the first column and have the main content start on the very first row, but rowspan it across the dummy row. 
The dummy row might be used for a logo (treated as part of the main heading in text only/ speech. 
Providing an "extra" link that lets people using screen readers skip over the navigation is the current solution to this problem. 
Marti of is -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1 There are a few things you can do to deal with this. 
One is to have a table structure as such (I apologise for the ASCII art, but can't think of a better way to describe this: +----+Main | |Content| |Menu| | That is you have a small blank cell, then a cell to the right with rowspan=2, then a cell on the next row with the menu. 
The effect of this is that you have a left-aligned menu, but it appears later in the source code, and therefore later to many screen readers. 
On the plus side it also makes the main content earlier in the page, and therefore gets a higher relevancy rating in many search engines. 
However a disadvantage is that because it's all one table it will render slower on most graphical browsers than if you had a floating left table for the menu. 
Another strategy is to have a right-hand side menu, and then use CSS to position it to the left. 
If you are careful with the table layout then non-css graphical browsers will have a workable menu, but on the right hand side. 
Yet another strategy is to simply have the menu on the right hand side. 
There are a lot of advantages to this; the main content downloads first, the natural (in Latin languages) reading order matches the most like use-scenario (that is someone will want to read the content and then select from the menu, which will match the natural reading order of Latin languages, in going left to right), and finally the menu items are those items most likely to be selected by a mouse, while the main content links are those items most likely to be selected from the keyboard - having a right hand menu means that the main content will automatically be earlier in the tab order, and the menu will be near to the scroll bar on left-to-right systems, which is an ergonomic advantage. 
The down side is that people are used to left-hand menus, so you may have a usability-from-convention issue. 
-----BEGIN PGP SIGNATURE----- Version: PGPfreeware 6.5.1 Int. for non-commercial use iQA/AwUBOp99ctlYbmO7kSNQEQLC6QCfQBiG4RyNa902yX/7BbgPBEQPdyUAoMnU mBx6xn/USFsw053CIXKJ71Uo =9LWc -----END PGP SIGNATURE----- Hi Bernard Just put the side navigation on the right and the content (which gets read first) in the left box For example: cheers Mark Dale I would personally favor using CSS to transform/reposition a navbar located at the bottom of a page. 
But, apart from issues of CSS-P support, is it a general rule that a screen reader will read content in its order in the HTML source vs. its visually rendered order (when they are two different things due to CSS repositioning)?? (in-house demo, working on fixing it up for NS etc.). 
Example: http://www.holstius.com/span_tags.html 
David 
