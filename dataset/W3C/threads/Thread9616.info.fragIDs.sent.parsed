(S1 (NP (NP (NN rdfms-seq-representation)) (: :) (S (NP (NP (DT The) (JJ ordinal) (NN property) (NN representation)) (PP (IN of) (NP (NNS containers)))) (VP (AUX does) (RB not) (VP (VB support) (NP (NP (JJ recursive) (NN processing)) (PP (IN of) (NP (NP (NNS containers)) (PP (IN in) (NP (NP (NNS languages)) (PP (JJ such) (IN as) (NP (NNP Prolog))))))))))) (. .)))
(S1 (NP (NNP Hmmm) (. .)))
(S1 (S (NP (NN Anyone)) (VP (VBD got) (NP (NP (DT a) (NN proposal)) (PP (IN for) (S (VP (VBG fixing) (NP (DT this))))))) (. ?)))
(S1 (S (NP (NNP YAWN)) (, ,) (VP (VB hire) (NP (DT a) (NNP Prolog) (NN programmar))) (. .)))
(S1 (S (NP (NNP e.g.)) (VP (VB suppose) (SBAR (S (NP (PRP we)) (VP (AUX have) (NP (NP (DT a) (JJ predicate) (JJ triple)) (PRN (-LRB- -LRB-) (ADJP (JJ Subject)) (, ,) (NP (NNP Property)) (, ,) (NP (NN Object)) (-RRB- -RRB-))))))) (. .)))
(S1 (S (S (VP (VBG defining) (NP (PRP$ our) (NNP RDF) (NN database)))) (VP (VB implement) (NP (NP (NP (DT a) (JJ predicate) (NN rdf_n)) (PRN (-LRB- -LRB-) (NP (NNP Property)) (, ,) (NP (NNP N)) (-RRB- -RRB-)) (SBAR (WHNP (WDT that)) (S (VP (VBZ succeeds) (SBAR (WHADVP (WRB whenever)) (S (S (NP (NNP N)) (VP (AUX is) (NP (DT a) (JJ positive) (NN integer)))) (CC and) (S (NP (NNP Property)) (VP (AUX is) (`` ``) (NP (NNP rdf)))))))))) (: :) (NP (NP (NNP _) ('' '') (NNP N)) (ADJP (RB appropriately) (VBN expressed))))) (. .)))
(S1 (S (ADVP (RB Then)) (NP (NP (DT a) (NN bag)) (PP (IN for) (NP (NN example)))) (VP (MD would) (VP (AUX be) (NP (: :) (NP (NP (NN rdfBag)) (PRN (-LRB- -LRB-) (NP (NNP URI)) (, ,) (NP (NNS Contents)) (-RRB- -RRB-)) (: :)) (: -) (NP (NP (NN bagof)) (PRN (-LRB- -LRB-) (NP (NP (NN Object)) (, ,) (NP (NN -LSB-N)) (, ,) (NP (NP (NNP Property) (JJ -RSB-) (NNS ^)) (PRN (-LRB- -LRB-) (JJ triple) (-LRB- -LRB-) (NP (NAC (NNP URI) (, ,) (NNP Property) (, ,)) (NN Object)) (-RRB- -RRB-))) (, ,) (NP (JJ rdf_n) (PRN (-LRB- -LRB-) (NP (NNP Property)) (, ,) (NP (NNP N)) (-RRB- -RRB-) (-RRB- -RRB-) (, ,)) (NNS Contents))) (-RRB- -RRB-)))))) (. .)))
(S1 (S (PP (IN For) (NP (NP (DT a) (NN sequence) (NN rdfSeq)) (PRN (-LRB- -LRB-) (NP (NNP URI)) (, ,) (NP (NNS Contents)) (-RRB- -RRB-)))) (: :) (: -) (NP (NP (NN bagof)) (PRN (-LRB- -LRB-) (NP (NP (NNP N) (NNP *) (NN Object)) (, ,) (NP (NP (JJ -LSB-Property) (JJ -RSB-) (NNS ^)) (PRN (-LRB- -LRB-) (JJ triple) (-LRB- -LRB-) (NP (NAC (NNP URI) (, ,) (NNP Property) (, ,)) (NN Object)) (-RRB- -RRB-))) (, ,) (NP (JJ rdf_n) (PRN (-LRB- -LRB-) (NP (NNP Property)) (, ,) (NP (NNP N)) (-RRB- -RRB-) (-RRB- -RRB-) (, ,)) (NNP UnsortedContents))) (-RRB- -RRB-)) (, ,) (NP (NN sort)) (PRN (-LRB- -LRB-) (NP (NNP UnsortedContents)) (, ,) (NP (NNP SortedContents)) (-RRB- -RRB-)) (, ,) (NP (NN %) (NN line)) (IN below)) (VP (VP (MD will) (VP (VB work))) (CC but) (VP (AUX is) (RB not) (ADJP (JJ efficient)))) (. .)))
(S1 (NP (NP (NN bagof)) (PRN (-LRB- -LRB-) (NP (NP (NN Object)) (, ,) (NP (NP (JJ -LSB-N) (JJ -RSB-) (NN ^member)) (PRN (-LRB- -LRB-) (NP (NP (NNP N) (NNP *) (NN Object)) (, ,) (NP (NNP SortedContents))) (-RRB- -RRB-))) (, ,) (NP (NNS Contents))) (-RRB- -RRB-)) (. .)))
(S1 (SBAR (IN If) (S (NP (PRP you)) (VP (MD can) (RB n't) (VP (VB hack) (NP (DT this) (JJ then) (NN program)) (PP (IN in) (NP (NNP VB.) (NNP Jeremy))))))))
(S1 (NP (NP (NN rdfms-seq-representation)) (: :) (S (NP (NP (DT The) (JJ ordinal) (NN property) (NN representation)) (PP (IN of) (NP (NNS containers)))) (VP (AUX does) (RB not) (VP (VB support) (NP (NP (JJ recursive) (NN processing)) (PP (IN of) (NP (NP (NNS containers)) (PP (IN in) (NP (NP (NNS languages)) (PP (JJ such) (IN as) (NP (NNP Prolog))))))))))) (. .)))
(S1 (NP (NNP Hmmm) (. .)))
(S1 (S (NP (NN Anyone)) (VP (VBD got) (NP (NP (DT a) (NN proposal)) (PP (IN for) (S (VP (VBG fixing) (NP (DT this))))))) (. ?)))
(S1 (S (S (NP (PRP I)) (VP (VBD raised) (NP (DT this) (NN issue)))) (, ,) (CC and) (S (NP (PRP I)) (VP (AUX did) (RB n't) (VP (VB say) (NP (NN anything)) (PP (IN about) (NP (NN prolog))) (SBAR (WHADVP (WRB when)) (S (NP (PRP I)) (VP (VBD raised) (NP (PRP it)))))))) (. .)))
(S1 (S (NP (PRP I)) (VP (MD can) (RB n't) (VP (VB read) (NP (NN prolog)) (ADVP (RB well) (RB enough) (S (VP (TO to) (VP (VB tell) (NP (IN if))))))))))
(S1 (S (S (NP (DT the) (NN code)) (ADVP (RB below)) (VP (VBZ works))) (: ;) (S (SBAR (IN if) (S (NP (PRP it)) (VP (VBZ works)))) (, ,) (NP (PRP it)) (VP (VBZ relies) (PP (IN on) (NP (NP (NP (NN prolog) (POS 's)) (JJ closed-world) (NN reasoning)) (, ,) (SBAR (WHNP (WDT which)) (S (NP (PRP I)) (VP (VBP find) (S (ADJP (JJ unacceptable)))))))))) (. .)))
(S1 (S (NP (DT The) (NN issue)) (VP (AUX is) (: :) (SBARQ (WHADVP (WRB how)) (SQ (AUX do) (NP (PRP I)) (VP (VBP conclude) (SBAR (IN that) (S (NP (NN something)) (VP (AUX is) (ADVP (RB *)) (RB not) (VP (VBN *) (PP (IN in) (NP (DT a) (NN sequence))))))))))) (. ?)))
(S1 (SBARQ (RB e.g.) (WHADVP (WRB how)) (SQ (AUX do) (NP (PRP I)) (VP (VB write) (NP (DT an) (JJ empty) (NN sequence)))) (. ?)))
(S1 (SBARQ (WHNP (WP what)) (SQ (AUX does) (NP (PRP it)) (VP (VBP look) (PP (IN like)) (PP (IN in) (NP (NNS n-triples))))) (. ?)))
(S1 (S (S (NP (PRP I)) (VP (MD could) (VP (VB write)))) (CC but) (S (NP (DT that)) (VP (MD will) (VP (VB end) (PRT (RP up)) (PP (IN in) (NP (NP (NNS n-triples)) (PP (IN as) (NP (NP (NNS _)) (: :) (NP (NP (NN something) (NNP rdf)) (: :) (NP (NN type) (NNP rdf)) (: :) (NP (NNP Seq)))))))))) (. .)))
(S1 (S (CC but) (NP (PRP it)) (VP (MD will) (RB n't) (VP (VB say) (SBAR (IN that) (S (NP (NNP _)) (: :) (NP (NN something)) (VP (AUX has) (NP (DT no) (NNS members))))))) (. .)))
(S1 (S (PP (IN Without) (NP (DT the) (NN ability) (S (VP (TO to) (VP (VB tell) (SBAR (WHADVP (WRB where)) (S (NP (NP (DT the) (NN end)) (PP (IN of) (NP (DT a) (NN sequence)))) (VP (AUX is))))))))) (, ,) (NP (PRP they)) (VP (AUX 're) (PP (IN of) (NP (JJ little) (NN use))) (PP (IN in) (NP (NP (DT the) (NNS applications)) (SBAR (S (NP (PRP I)) (VP (VBP build))))))) (. .)))
(S1 (S (NP (PRP I)) (VP (VBP tend) (S (VP (TO to) (VP (VB use) (NP (NP (NP (NNP DAML+OIL) (POS 's)) (NN first/rest)) (, ,) (PP (VBG including) (NP (NP (DT a) (JJ special) (NN parseType=)) (`` ``) (NX (NP (NN ont)) (: :) (NP (NN collection))) ('' '')))))))) (. .)))
(S1 (SBARQ (WHNP (WP what)) (SQ (AUX does) (NP (DT that) (NN code)) (VP (AUX do) (SBAR (WHADVP (WRB when)) (S (NP (EX there)) (VP (AUX are) (VP (VBG rdf_n) (S (VP (AUX does) (RB n't) (VP (VB succeed) (ADVP (IN at) (DT all))))))))))) (. ?)))
(S1 (SQ (AUX Does) (NP (PRP it)) (VP (VB conclude) (PP (IN by) (NP (NNP NAF))) (SBAR (IN that) (S (NP (NNS Contents)) (VP (AUX is) (ADJP (JJ empty)))))) (. ?)))
(S1 (S (NP (NP (NNP Dan) (NNP Connolly)) (, ,) (NP (NNP W3C) (NN http))) (: :) (VP (VBZ //www.w3.org/People/Connolly/))))
(S1 (S (S (NP (PRP I)) (VP (AUX was) (NP (NP (NN sort)) (PP (IN of) (S (VP (VBG hacking) (NP (DT this)) (PRT (RP up)) (PP (IN with) (NP (NNP RDF) (CC and) (NNS prolog))))))))) (, ,) (CC and) (S (NP (PRP I)) (VP (VBD discovered) (SBAR (IN that) (S (NP (PRP I)) (VP (MD could) (RB n't) (ADVP (RB inductively)) (VP (VB define) (NP (NP (NN sort)) (-LRB- -LRB-) (-RRB- -RRB-)) (PP (IN over) (NP (NNP RDF) (NNS sequences))) (SBAR (IN because) (S (NP (EX there)) (VP (AUX 's) (NP (DT no) (JJ empty) (NN list)) (PP (IN in) (NP (NNP RDF)))))))))))) (. .)))
(S1 (S (NP (EX There)) (VP (AUX 's) (NP (DT no) (JJ end) (NN marker))) (. .)))
(S1 (S (NP (PRP I)) (VP (VBP agree) (SBAR (S (NP (PRP I)) (VP (AUX did) (NP (NP (DT a) (JJ lousy) (NN job)) (PP (IN of) (S (VP (VBG characterizing) (NP (DT this)))))) (ADVP (RB accurately)))))) (. .)))
(S1 (NP (NNP Brian)))
