Review of Last Modified: 07/25/03 15:34:11 400691 bytes I reviewed the hilighted changes and did an HTML diff to check things. 
Summary: it's good, publish(*) Dave (*)When the XML literal stuff get's decided Detailed list 1 Introduction P3 better maybe: ... a Person identified by the URI http://www.w3.org/People/EM/contact#me last paragraph (new since LC) bullet list or bulleted list? 
2. Making Statements About Resources [paragraphs between figure 3 and 4)] Paragraph "Using common ..." "The RDF model only recognizes full URIrefs; it does not take cognizance of particular ways of organizing or forming them." - sounds a bit high-powered :) How about something like "The RDF model only recognizes full URIrefs; it does not use look inside URIrefs or use any knowledge of the structure of them." 
[paragraphs after figure 4] OK 2.3 Structured Property Values and Blank Nodes [paragraphs at end] Maybe make the triple columns in those examples line up? 
2.4 Typed Literals [paragraphs after figure 7] Paragraph "An RDF typed literal is formed by pairing a plain literal with a URIref" No it doesn't. 
Since an RDF plain literal has a language component which is (no longer) used here. 
It just uses a string with a URIref. 
[paragraphs after figure 9] Paragraph "Unlike typical..." OK Paragraph "RDF datatype concepts..." &amp; bullets OK Paragraph "Not all..." OK Paragraph "Since the value..." Not sure I like the [["first among equals" status in RDF.]] quote. 
Who said that? 
Has it any cultural problems? 
Paragraph "In general..." OK Last Paragraph of 2.4 Do "proper" and "intended interpretation" have some special meaning? 
There is a definition in RDF Semantics about this which might be useful, where "bad" datatypes are not RDF literals, under a particular datatype entailment such as XSD-datatype-entailment. 
I'm not sure how to easily translate that into simpler terms! 
Maybe intended interpretation does work. 
Your choice. 
3.1 Basic Principles Paragraph "(Note that..." OK [after Example 2] Paragraphs "Line 2..." to "Lines 4-6..." OK [after Example 7] Paragraph "In the rest of..." OK Paragraph "Example 7 illustrates"... "For readability" On entities - in this case only entities defined in the document, i.e. in the "internal DTD subset" are likely to work. 
You can use RDF/XML with a DTD and probably could do things like declare entities there (or default attributes on elements etc. - trickier since there is no DTD for RDF/XML) but we really should encourage that. 
Anyway, that's just information or advice. 
Which might belong here. 
3.2 Abbreviating and Organizing RDF URIrefs Paragraph "These examples" OK [Paragraphs after example 13] OK Incidently Typed Nodes in the graph, known as Typed Node Elements in the syntax. 
4. Other RDF Capabilities OK 4.1 s/is/represents/ OK [paragraphs before and after example 16] Paragraph "Also, Example 14 and Example 15 ..." OK Paragraph "As noted" you mention well-formed here, but the caption on example 16 uses "ill-formed". 
4.2 RDF Collections [paragraphs after example 16] Seems ok updated for the implicit rdf:type rdf:List although it may not be clear that this is RDFS entailment and not RDF. [RDF-SCHEMA] isn't linked to the reference. 
Paragraph "RDF/XML provides..." &amp; example OK Paragraph "As noted in..." There are lots of "quoted" phrases here, stands out. 
Maybe you could rephrase longhand or just remove those quotes. 
4.3 RDF Reification Figure 17 It's a correct picture, however I guess you are stuck trying to show that the same URI is used for a (green oval) as a resource object as well as labeling an arrow for the predicate of the reified statement. 
Paragraph "The subject of these reification triples is a URIref formed by concatenating the value of the rdf:ID attribute with the base URI of the document (given in the xml:base declaration); that is, the triples have the same subject exproducts:triple12345 as in the previous examples." 
Not correct. 
It uses base URI + "#" + value of the rdf:ID attribute. 
4.4 More on Structured Values: rdf:value Paragraph "Example 21 illustrates..." OK [but I personally wouldn't recommend people use this style] 4.5 XML Literals [I assume this section is still in a bit of flux] The example22 ntriples misses out the leading and trailing whitespace as well as the escapes for "en" (- \"en\") and the escapes for newlines - \n in N-Triples. 
It should be: ex:book12345 dc:title "\n span \n The em br / /em Element Considered Harmful.\n /span \n "^^rdf:XMLLiteral . 
Paragraph "The value " and lots more canonicalization, such as empty elements foo/ - foo /foo Paragraph "This example" There's another alternative, which is to use a non-XML typed literal; ie a special datatype where the lexical form is separately defined. 
5. Defining RDF Vocabularies: RDF Schema OK 5.1 Describing Classes Paragraph "The meaning of this rdfs:subClassOf ..." I see the use of an "RDF processor" and "RDF schema software" The latter you define, but not the former. 
If you could avoid both that would be good. 
Example 22 should have an xml:base, since it has rdf:IDs [example 23 does]. 
Later after example23 you mention use of xml:base so I expect you should change the rdf:IDs in example 22 to be full URIs. 
Example 24 - ! 
Yes, it's correct but I'm sure people will get burnt with this kind of thing. 
Maybe you could explain the benefit (is there only one? 
:) of rdf:ID - checking for duplicates in 1 document so that people can see when it makes sense to use it. 
5.2 Describing Properties OK 5.3 Interpreting RDF Schema Declarations Paragraph "Another result" OK 5.4 Other Schema Information Paragraph "As with" OK 5.5 Richer Schema Languages bullet change OK 6.1 Dublin Core Metadata Initiative Paragraph "Computer languages and file formats ..." OK 6.2 PRISM changes OK 6.3 XPackage Example 37 includes this inside the rdf: That is not RDF/XML, unless they meant this to be In particular doc.html is not a URIref. 
Ditto for example 38. 
If however, these are not RDF/XML, this does not apply. 
6.6 Gene Ontology Consortium This syntax is bizarre, what is it doing in an RDF primer? 
Please label Example 42 clearly with "not RDF/XML" in the caption or give it style that shows it's not something people should try as real RDF/XML. 
7.1 RDF Semantics OK Appendix A: More on Uniform Resource Identifiers (URIs) Please label the state of this and other appendices in or near the titld - this one is informative, but for the definitive use of URIs, see RFC2396. 
Paragraph "Carrying this point..." OK Appendix B: More on the Extensible Markup Language (XML) Ditto, "see XML 1.0 (Second edition)" for definitive info. 
Paragraph "Finally, XML provides ... Well, it is finally here, but XML provides lots of stuff and if you include all the XML things that we do (XML, Namespaces, Infoset, Base, Canonicalization, [schema]) then it's just a small intro, which is the case. 
spelling "Entitites" I'd again avoid recommending or mentioning use of external DTDs. 
Since RDF/XML uses the infoset that does not require validation, use of external DTDs is possible but unlikely. 
Example 46 is an internal DTD subset You might take the blank lines out before and after !DOCTYPE - some parsers are sensitive to that. 
Just replying to the problematic bits (and asking for comments from the WG, not just replying to Dave): snip Brian said it (he did it! 
he did it!). 
It was in the LC version and no one complained. 
If it's inappropriate to say it this way, we need to find some other words to explain why we talk explicitly about the XML Schema datatypes (in Primer, Concepts, Semantics, ...) and no others. 
But I think "first among equals" captures it pretty well. 
My choice is to leave it alone! 
I'm basically following the model of the OWL specs here (DOCTYPE and all). 
"ill-formed" was intended to be equivalent to "not-well-formed". 
Do you think the latter is better? 
Yeah, but I don't see how this distinction can be made very well here. 
yes! 
If you could suggest some alternatives, that would be even better. 
DanC wants to talk only about "languages", which is fine in principle, and I appreciate that we are not "defining a processing model" (as this is generally put). 
The problem is that we don't really have distinct languages in the sense lots of people think of languages being distinct. 
Given an RDF schema, this is *both* RDF and RDFS. 
The difference between the "languages" is whether particular conclusions can be drawn from particular pieces of reserved vocabulary or not. 
Pat describes this in terms of different kinds of entailments, but that doesn't seem appropriate in the Primer, and saying "conclusions can be drawn", being passive voice, elides the issue of who or what does the conclusion-drawing. 
I think characterizing this difference in the Primer as one between different kinds of software (or software written to understand different stuff) is reasonably clear, and it's not clear to me what the problem is in saying that way in a non-normative document (e.g., what inappropriate entailments are introduced?). 
But I'll be happy to entertain alternative ways of saying the same thing. 
Why? rdf:IDs work relative to the document don't they? 
What kind of thing? 
If you mean not using an xml:base, the text says they ought to use one. 
How important is this; like, how many sentences is it worth? 
:-) I'll have to look at the xpackage spec itself to check this out. 
To illustrate a use of RDF in the field. 
The text says so, but OK. 
I'm not sure I understand. 
The whole Primer is informative, so obviously the Appendices are. 
I can emphasize that the defining spec is RFC2396 in the text. 
If this is also what you meant for URIs, that's fine. 
Could you translate this? 
:-) I don't think I explicitly mention external DTDs, but maybe it's implicit from the syntax. 
I'll see if I can tighten this up. 
Do you think it's equally readable having done that (I'm more worried about human readers than XML parsers!)? --Frank Frank Manola The MITRE Corporation 202 Burlington Road, MS A345 Bedford, MA 01730-1420 On Wed, 30 Jul 2003 15:42:50 -0400 I'm not replying to all of these either. 
You decide. 
The point is that this isn't a DTD - but an internal DTD subset (that's the term), and the only thing I'd encourage using it for is these entities. 
Presenting full DTD power with RDF/XML is something I'd discourage. 
I said you only defined one. 
If you want to introduce an RDF processor term, you'll need to say what such a thing does (taking RDF/XML and making graphs, manipulating them, storing them, doing RDF-entailment on the graphs, ...) I've no real better suggestions. 
Yes but that document in example 22 has no URI given. 
Hence no base URI, so you cannot know the URIrefs that the rdf:IDs make. 
Either change them to rdf:about="absolute-URI" or make the document URI known - it's unlikely you really want the document URI of the example 22 to be the namespace URI less the '#': http://example.org/schemas/vehicles 
I found another example with rdf:ID in examples with no URIs - example 9 (not so important, you don' t give the triples). 
My advice is that using rdf:ID without xml:base (prefered) or stating the document URI is problematic. 
How about: rdf:ID is useful to abbreviate URIrefs but also provides an additional useful check that the value of the rdf:ID attribute is unique against the current base URI (usually document URI). 
This helps pick up repeating rdf:ID values such as when defining properties and classes in RDF schemas. 
Yes, the point is that it's clear you aren't defining URIs but giving an overview of some parts. 
Yes, you don't need to worry about informative in the section titles. 
Yes. 
The sentence implies that's all of XML, but it's not. 
It's probably enough that people care about for the RDF primer. 
I'm just pointing out there is more to say if people are interested. 
My point is that I've seen that white space before the root element cause some XML programs to crash or behave oddly. 
Dave On Thu, 31 Jul 2003 10:15:49 -0400 This is good (but we might want to say this in Section 3, where rdf:ID is first introduced, rather than here (?). 
In addition, this raises an additional question: it's fairly clear how this works if the id values are being checked within the scope of a particular document, but if you use rdf:ID in combination with a base URI defined with xml:base, how do you really do a uniqueness check, since there's no guarantee that all the rdf:ID values in question are in the same document? 
The rdf:ID values are checked against hte current in-scope base URI. 
That is either the innermost xml:base value or the document URI. 
i.e. the pair (rdf:ID value, in-scope base URI) must be unique. 
Dave Again replying to just the problematic bits: Well, I can certainly say generally what we expect of an RDF processor here. 
It's true that we might define "RDF processor" in terms of all the things you mention (and a complete definition would certainly need to cover things like those). 
However, it seems like overkill for making the distinction between the vocabularies the software understands that is the core of all this. 
BTW, this issue initially comes up in Section 2.4 on typed literals, where we have to point out that RDF doesn't define specific datatypes (except, for my sins, XMLLiteral!), and hence software has to be written to "understand" specific datatypes, i.e., a vocabulary that extends RDF with additional terms, and which does additional things based on knowledge of the "meaning" of those terms. 
Software not written to understand those datatypes may correctly process the RDF, but not be able to do datatype-specific processing. 
The same situation exists here, but now it's the RDFS vocabulary that is the extension in question. 
If the phraseology used in Section 2.4 is OK, perhaps we could use something similar here. 
This is good (but we might want to say this in Section 3, where rdf:ID is first introduced, rather than here (?). 
In addition, this raises an additional question: it's fairly clear how this works if the id values are being checked within the scope of a particular document, but if you use rdf:ID in combination with a base URI defined with xml:base, how do you really do a uniqueness check, since there's no guarantee that all the rdf:ID values in question are in the same document? 
Got it. 
OK. --Frank Frank Manola The MITRE Corporation 202 Burlington Road, MS A345 Bedford, MA 01730-1420 On Thu, 31 Jul 2003 11:22:40 -0400 The RDF/XML document. 
That is all the scope we have. 
Dave Dave-- I understand that it's the pair (rdf:ID value, in-scope base URI) that must be unique. 
The question is, within what scope must it be unique? 
That is, a uniqueness check involves checking all the values (the above pairs in this case) within some scope to see that there aren't duplicates. 
What is that scope? 
--Frank Frank Manola The MITRE Corporation 202 Burlington Road, MS A345 Bedford, MA 01730-1420 Dave (and for everyone's information)-- Regarding your comments below on the XPackage examples: I reviewed the XPackage examples again (I *thought* I'd validated them, and it turns out I had). 
The complete example 37 (with all the namespaces declared) is: xpackage:description xmlns:xpackage="http://xpackage.org/namespaces/2003/xpackage#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:dc="http://purl.org/dc/elements/1.1/" 
xmlns:mime="http://xpackage.org/namespaces/2003/mime#" xmlns:x="http://xpackage.org/namespaces/2003/xml#" xmlns:xlink="http://www.w3.org/1999/xlink" rdf:Description rdf:about="urn:example:xhtmldocument-stylesheet"/ rdf:Description rdf:about="urn:example:xhtmldocument-image"/ This validates in the W3C RDF validator. 
In the generated triples, the xpackage:location property has a blank node as its object, and the blank node in turn has a http://www.w3.org/1999/xlinkhref property whose value is the literal "doc.html". 
Example 38 works the same way. 
Does this not square with your understanding of what's supposed to happen? 
Anyway, I'm going to substitute the above for what's in the Primer now; it's a pain to have to add all the namespaces every time I validate the examples. 
--Frank snip Frank Manola The MITRE Corporation 202 Burlington Road, MS A345 Bedford, MA 01730-1420 On Fri, 01 Aug 2003 19:16:56 -0400 It does. 
What you describe in the first sentence is what I explained in my comment. 
The point is, the xlink:href is not special, and RDF/XML has no special processing for it's value - which looks like a URI. 
It might be misleading if people read it that way. 
makes 2 triples - which I think is only clear if you recognised that abbreviation, or tried it out, such as by using a validator: _:a xpackage:location _:b . 
_:b xlink:href "doc.html" . 
(I'm sad to see this abbreviation used, I would have liked to have killed it) Dave Well, maybe we have a terminology problem then, because when you said "That is not RDF/XML", I thought you meant it wasn't syntactically legal, and wouldn't validate. 
It seems to me that that if syntax is not legal RDF/XML, a correctly-operating RDF/XML parser should say so. 
Generating non-intuitive results from legal RDF/XML syntax is a separate issue (people have expressed amazement as what parseType="Collection" does, for example!) Frank Manola The MITRE Corporation 202 Burlington Road, MS A345 Bedford, MA 01730-1420 
