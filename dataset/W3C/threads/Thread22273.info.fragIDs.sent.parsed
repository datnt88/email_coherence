(S1 (S (S (VP (VBG Implementing) (NP (NP (DT a) (JJ specific) (NN expression) (NN language)) (ADJP (JJ binding))))) (VP (MD should) (VP (AUX be) (ADJP (JJ optional)) (, ,) (PP (IN with) (NP (NP (QP (IN at) (JJS least) (CD 1))) (PP (IN of) (NP (DT the) (JJ available) (NN expression) (NNS languages))))))) (. .)))
(S1 (S (VP (VB compare) (NP (PRP it)) (PP (TO to) (NP (NP (NN DOM)) (SBAR (WHNP (WDT which)) (S (VP (MD might) (VP (VB offer) (NP (NNP XSL)) (PP (IN besides) (NP (NNP CSS)))))))))) (. .)))
(S1 (S (NP (PRP I)) (VP (VBP believe) (SBAR (X (S (NP (NNP CSS)) (VP (AUX is) (NP (JJ optional) (NN ..))) (. .)) (FW i.e.)) (S (NP (DT the) (NN core) (NN DOM)) (ADVP (RB only)) (VP (VBZ consists) (PP (IN of) (S (ADVP (RB basically)) (VP (VBG DOM1)))))))) (. .)))
(S1 (SQ (MD Can) (NP (NP (NN someone)) (PP (IN on) (NP (DT the) (NNP DOM) (NNS WG)))) (VP (VB confirm) (NP (DT this))) (. ?)))
(S1 (S (NP (PRP I)) (VP (AUX do) (RB n't) (VP (VB think) (SBAR (S (NP (DT a) (NNP DOM) (NN implementor)) (VP (MD should) (VP (AUX be) (VP (VBN required) (S (VP (TO to) (VP (VB implement) (NP (DT any) (NN expression) (NN language)))))))))))) (. .)))
(S1 (S (-LRB- -LRB-) (S (CC or) (NP (PRP I)) (VP (MD might) (VP (AUX be) (VP (VBG misunderstanding) (SBAR (WHNP (WP what)) (S (NP (PRP you)) (VP (AUX are) (VP (VBG saying))))))))) (: ...) (-RRB- -RRB-)))
(S1 (S (NP (NNS Thats)) (RB not) (SBAR (WHNP (WP what)) (S (NP (PRP I)) (VP (VBD meant)))) (, ,) (NP (PRP I)) (VP (VBD meant) (SBAR (IN that) (S (NP (PRP we)) (VP (MD should) (VP (VB use) (NP (DT the) (JJ same) (NN mechanisme)) (SBAR (IN as) (S (NP (NN dom)) (VP (AUX does) (SBAR (WHADVP (WRB where)) (S (NP (PRP you)) (VP (AUX have) (NP (DT a) (NNP DOM) (NN compliance) (NN implementation)) (SBAR (IN if) (S (NP (PRP you)) (VP (VB implement) (NP (NP (DT the) (JJ core) (NN +) (CD 1)) (PP (IN of) (NP (DT the) (VBN extended) (NNS interfaces)))))))))))))))))) (. .)))
(S1 (S (SBAR (IN If) (S (NP (PRP you)) (VP (VBD split) (ADVP (RB up) (NP (CD PAX))) (PP (IN in) (NP (DT a) (JJ PAX) (NN core) (CC and) (NN expression) (NN specific)))))) (VP (VBZ interfaces) (SBAR (S (NP (PRP you)) (VP (MD can) (VP (VB use))))))))
(S1 (NP (NP (DT the) (JJ same) (NN mechanisme)) (SBAR (WHADVP (WRB where)) (S (NP (DT an) (NN implementation)) (VP (MD can) (VP (AUX be) (NP (JJ DOM-PAX) (NN compliant)) (SBAR (IN if) (S (NP (PRP it)) (VP (AUX has))))))))))
(S1 (S (VP (VBN implemented) (PP (IN f.i.) (NP (NP (DT the) (NN pax-core)) (CC and) (NP (DT the) (JJ pax-xpath) (NNS interfaces))))) (. .)))
(S1 (FRAG (-LRB- -LRB-) (CC or) (ADJP (JJ pax-core)) (CC and)))
(S1 (FRAG (NP (NN pax-inquirer) (NNS patterns)) (. .) (. .) (-RRB- -RRB-) (. .)))
(S1 (S (NP (DT the) (`` ``) (VB create) ('' '') (NN function)) (VP (MD should) (VP (AUX be) (: :) (NP (NP (JJ public) (JJ abstract) (NN Expression)) (VP (VB create) (PRN (-LRB- -LRB-) (NP (NNP String) (NN expression)) (, ,) (NP (NNP PrefixResolver) (NN prefixResolver)) (-RRB- -RRB-)) (VBZ throws) (NP (NNP ParseException)))))) (: ;)))
(S1 (NP (JJ ok)))
(S1 (S (NP (JJ ExpressionFactory) (NN efactory)) (VP (SYM =) (NP (NP (NNP ExpressionFactory.newInstance)) (PRN (-LRB- -LRB-) (`` ``) (NP (NNP Xpath)) ('' '') (-RRB- -RRB-)))) (: ;)))
(S1 (S (NP (NN Expression) (NNS expr)) (VP (SYM =) (VP (VB efactory.create) (PRN (-LRB- -LRB-) (`` ``) (NP (NN foo/baz-LSB-yada) (NNS -RSB-)) ('' '') (, ,))))))
(S1 (S (LST (NN myPrefixResolver) (-RRB- -RRB-)) (: ;) (NP (JJ XObject) (NN val1)) (VP (SYM =) (NP (NP (NN expr.evaluate)) (PRN (-LRB- -LRB-) (INTJ (UH node1)) (, ,))))))
(S1 (S (LST (JJ myXEnvironment) (-RRB- -RRB-)) (: ;) (NP (JJ XObject) (NN val2)) (VP (SYM =) (NP (NP (NN expr.evaluate)) (PRN (-LRB- -LRB-) (INTJ (UH node2)) (, ,))))))
(S1 (S (VP (VB myXEnvironment) (-RRB- -RRB-)) (: ;)))
(S1 (S (NP (NN Setup)) (VP (AUX is) (ADJP (JJ good)))))
(S1 (S (VP (VB compare) (S (NP (PRP it)) (VP (TO to) (PRN (: :) (FRAG (X (FW XPathExpression) (FW aExpression) (SYM =)) (NP (NN PAXFactory.createXPathExpression))) (-LRB- -LRB-) (-RRB- -RRB-))))) (: ;)))
(S1 (S (S (CC or) (NP (NNP InquirerExpression) (NN aExpression)) (VP (SYM =) (NP (NNP PAXFactory.createInquirerExpression)))) (-LRB- -LRB-) (-RRB- -RRB-) (: ;)))
(S1 (S (S (NP (PRP It)) (VP (VBZ sounds) (ADJP (RBR more) (JJ DOMmish)) (PP (IN in) (NP (NP (PRP$ my) (NN point)) (PP (IN of) (NP (NN view))))))) (, ,) (CC and) (S (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (PRP it)) (VP (AUX 's) (ADJP (JJR easier)) (S (VP (TO to) (VP (VB make) (NP (PRP it))))))))))))
(S1 (NP (NP (NN language)) (ADJP (JJ independent)) (. .)))
(S1 (NP (NP (JJ Additional) (NNS features)) (: :) (NP (NP (DT A) (JJ separate) (NN Expression.parseExpression)) (-LRB- -LRB-) (-RRB- -RRB-))))
(S1 (S (NP (NNP DOMException) (NNP PARSE_EXCEPTION)) (VP (MD might) (VP (AUX be) (ADJP (JJ usefull)))) (. .)))
(S1 (S (VP (VBN Given) (NP (VB create)) (PRN (-LRB- -LRB-) (NP (NNP String) (NN expression)) (, ,) (NP (NNP PrefixResolver) (NN prefixResolver)) (-RRB- -RRB-)) (, ,) (SQ (AUX do) (NP (PRP you)) (ADVP (RB really)) (VP (VB think) (ADVP (RB so))) (. ?)))))
(S1 (S (S (NP (PRP I)) (ADVP (RB still)) (VP (VBP think) (ADVP (RB so)))) (CC but) (S (NP (PRP you)) (VP (MD might) (VP (VB call) (S (NP (PRP it)) (NP (NP (NN something)) (PP (IN like) (`` ``) (NP (NNP ValidateExpression)) ('' ''))))))) (. .)))
(S1 (S (NP (DT The) (NN purpose)) (VP (AUX was) (RB not) (S (VP (VP (TO to) (VP (VB precompile) (NP (NN stuff)) (ADVP (RB separately)))) (CC but) (VP (TO to) (VP (VB validate) (NP (DT the) (NN expression)) (ADVP (RB separately)) (PP (IN without) (S (VP (VBG executing) (NP (PRP it)))))))))) (. .)))
(S1 (S (SBARQ (SQ (AUX Do) (NP (PRP you)) (VP (VB think) (NP (JJR more) (NNS needs)) (S (VP (TO to) (VP (AUX be) (VP (VBN put) (PP (IN on) (NP (DT the) (NNP Inquirer) (NNP interface))) (, ,) (PP (IN like) (NP (NP (JJ boolean) (NN getBool)) (PRN (-LRB- -LRB-) (NP (NNP String) (NN queryString)) (-RRB- -RRB-)) (: ;) (NP (NP (JJ boolean) (NN getMatch)) (PRN (-LRB- -LRB-) (NP (NNP String) (NN queryString)) (-RRB- -RRB-))) (: ;)))))))) (. ?)) (. ?)) (NP (PRP It)) (VP (AUX 's) (VP (VBN supposed) (S (VP (TO to) (VP (AUX be) (ADJP (JJ minimal)) (ADVP (RB though))))) (, ,) (FRAG (ADVP (RB so) (RB maybe) (RB not))))) (. .)))
(S1 (NP (NNP Dunno) (. .)))
(S1 (S (S (NP (PRP You)) (VP (AUX 're) (VP (VBG asking) (NP (PRP me))))) (: ;) (: -) (-RRB- -RRB-) (, ,) (S (NP (PRP I)) (VP (AUX 'm) (RB not) (NP (DT a) (JJ minimalist) (NN supporter)))) (CC but) (S (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (DT that) (NN easyness)) (VP (AUX is) (ADJP (JJ important))))))) (. .)))
(S1 (NP (NP (JJS Best) (VBZ regards)) (, ,) (NP (NNP Jeroen))))
(S1 (S (VP (MD can) (VP (VB use)))))
(S1 (S (NP (PRP it)) (VP (AUX has))))
(S1 (NP (NNP and)))
(S1 (S (INTJ (UH Hmm) (. .) (. .)) (INTJ (UH OK)) (, ,) (NP (PRP I)) (VP (VBP think)) (. .)))
(S1 (SBARQ (WHNP (WP What)) (SQ (MD would) (VP (AUX be) (PP (IN in) (NP (NN PAX-core))))) (. ?)))
(S1 (FRAG (ADJP (JJ Sorry)) (SBAR (IN if) (S (NP (PRP I)) (VP (AUX 'm) (VP (AUXG being) (ADJP (JJ dense)))))) (. .)))
(S1 (S (NP (PRP I)) (VP (AUX 'm) (RB not) (ADJP (JJ familiar) (PP (IN with) (NP (NP (DT the) (NNS details)) (PP (IN of) (NP (DT the) (NNP DOM) (NN complience) (NN stuff) (NN ..))))))) (. .)))
(S1 (S (NP (PRP I)) (VP (VBP guess) (SBAR (S (NP (PRP I)) (VP (MD should) (VP (AUX do) (NP (DT some) (VBG studying))))))) (. .)))
(S1 (S (PP (TO To) (NP (PRP me))) (, ,) (NP (EX there)) (VP (AUX is) (ADJP (RB only) (JJ core) (CC and) (JJ optional))) (. .)))
(S1 (S (NP (JJ ExpressionFactory) (NN efactory)) (VP (SYM =) (NP (NP (NNP ExpressionFactory.newInstance)) (PRN (-LRB- -LRB-) (`` ``) (NP (NNP Xpath)) ('' '') (-RRB- -RRB-)))) (: ;)))
(S1 (S (PP (IN In) (NP (NNS yours))) (, ,) (NP (PRP you)) (VP (AUX have) (S (VP (TO to) (VP (AUX have) (NP (NP (NN exposure)) (PP (TO to) (NP (NP (DT a) (JJ specific) (NNP interface)) (PP (IN for) (NP (NNP XPathExpression)))))))))) (. .)))
(S1 (S (PP (IN In) (NP (NN mine))) (, ,) (S (NP (DT the) (NNP interface)) (VP (AUX is) (VP (VBN obtained) (PP (IN at) (NP (NN runtime))) (, ,) (PP (VBN based) (PP (IN on) (NP (DT a) (NN property) (NN registration) (NN mechanism))))))) (, ,) (CC and) (S (NP (DT the) (NNP interface)) (VP (AUX is) (ADJP (JJ abstract)))) (. .)))
(S1 (S (VP (VB make) (NP (PRP it)))))
(S1 (FRAG (ADJP (RB Not) (JJ sure)) (SBAR (WHNP (WP what)) (S (NP (JJR more) (NN DOMmish)) (VP (VBZ means)))) (. .)))
(S1 (SBARQ (WHADVP (WRB Why)) (SQ (AUX is) (NP (PRP it)) (ADJP (RBR more) (NN language) (JJ independent))) (. ?)))
(S1 (X (AUX Do)))
(S1 (S (NP (PRP you)) (VP (VBP mean) (, ,) (S (NP (FW Java) (FW vs.) (NN COM) (NN language)) (ADJP (JJ independent)))) (. ?)))
(S1 (FRAG (WRB Why) (. ?)))
(S1 (NP (`` ``) (NN ValidateExpression) ('' '') (. .)))
(S1 (SQ (MD Can) (NP (PRP you)) (VP (VB give) (NP (DT a) (NN use) (NN case))) (. ?)))
(S1 (NP (NNP -scott)))
(S1 (S (SBAR (IN If) (S (NP (PRP you)) (VP (VBP set) (NP (PRP it)) (PRT (RP up)) (PP (IN like) (NP (NP (NNS dom2)) (PP (IN than) (NP (DT an) (NN implementation)))))))) (VP (AUX is) (NP (JJ DOM-PAX) (NN compliant)) (SBAR (IN if) (S (NP (PRP it)) (VP (VBZ implements) (NP (NP (DT the) (JJ PAX-CORE) (NNP interface)) (CC and) (NP (QP (IN at) (JJS least) (CD one)) (JJ PAX-Expression) (FW module) (NNP interface))))))) (. .)))
(S1 (S (NP (JJ Variable) (, ,) (JJ Variable) (NNS lists)) (VP (MD can) (VP (VP (AUX be) (VP (VBN shared) (PP (IN among) (NP (NP (NN Expression) (NNS modules)) (PRN (-LRB- -LRB-) (NP (JJ f.i.) (NN xpath)) (-RRB- -RRB-)))))) (CC and) (VP (MD should) (ADVP (RB therefore)) (VP (AUX be) (PP (IN in) (NP (DT the) (JJ PAX-core) (NNP interface))))))) (: ;) (. .)))
(S1 (S (NP (JJ ExpressionFactory) (NN efactory)) (VP (SYM =) (NP (NP (NNP ExpressionFactory.newInstance)) (PRN (-LRB- -LRB-) (`` ``) (NP (NNP Xpath)) ('' '') (-RRB- -RRB-)))) (: ;)))
(S1 (S (S (NP (DT That)) (VP (AUX 's) (NP (DT the) (NN difference)))) (, ,) (NP (DT the) (JJ same) (NN thing)) (VP (AUX is) (VP (AUX done) (PP (IN in) (NP (NP (NNP DOM) (NN level) (NNS 2.)) (SBAR (S (NP (PRP You)) (VP (AUX do) (RB n't) (VP (AUX have) (NP (NP (DT a) (NN createNode)) (PRN (-LRB- -LRB-) (NP (`` ``) (NN Element) ('' '')) (-RRB- -RRB-)) (, ,) (NP (NN createNode)) (PRN (-LRB- -LRB-) (NP (`` ``) (NNP Attr) ('' '')) (-RRB- -RRB-))) (PP (IN in) (NP (NP (NN DOM)) (SBAR (S (NP (PRP it)) (VP (AUX is) (VP (AUX done) (PP (IN through) (NP (JJ createElement) (, ,) (JJ createAttr) (NNS ..))))))))))))))))) (. .)))
(S1 (S (NP (DT This)) (VP (VBZ enables) (S (NP (PRP you)) (VP (TO to) (VP (VB vary) (S (NP (NP (DT the) (NN variablelist)) (PP (IN of) (NP (DT a) (JJ specific) (NN expression) (NN language)))) (VP (VB create))))))) (. .)))
(S1 (FRAG (NP (JJ DOMmish) (NNS ..)) (. .) (VP (VB ehhh) (S (NP (PRP I)) (VP (VBD meant) (SBAR (S (NP (PRP it)) (VP (`` ``) (VBZ feels) ('' '') (PP (IN like) (NP (NNP DOM))))))) (. .)) (PRN (-LRB- -LRB-) (S (S (VP (AUX do) (RB n't) (VP (VB ask) (NP (PRP me)) (PP (IN for) (NP (NP (DT a) (NN definition)) (SBAR (IN of) (`` ``) (S (VP (VBZ feels) (PP (IN like) (NP (NNP DOM))))) ('' ''))))))) (: ;) (: -) (-RRB- -RRB-)) (-RRB- -RRB-)))))
(S1 (S (S (NP (DT That)) (VP (AUX 's) (SBAR (WHNP (WP what)) (S (NP (PRP I)) (VP (VBD meant)))))) (CC but) (S (NP (PRP I)) (VP (VBP agree) (SBAR (S (NP (PRP it)) (VP (AUX is) (RB n't) (NP (DT a) (JJ strong) (NN point)) (, ,) (SBAR (WHNP (WP what)) (S (NP (PRP I)) (VP (AUX had) (PP (IN in) (NP (NN mind))) (VP (AUX was) (NP (DT that)) (PP (IN in) (NP (NP (JJ certain) (NN programming) (NNS languages)) (SBAR (S (NP (PRP you)) (VP (AUX 're) (RB not) (ADJP (JJ able) (S (VP (TO to) (VP (VB create) (NP (NP (DT an) (NN instance)) (VP (VBN based) (PP (IN on) (NP (DT a) (NN string))))))))))))))) (CC but) (VP (ADVP (RB there)) (AUX are) (NP (JJ simple) (NNS workarounds))))))))))) (. .)))
(S1 (S (PP (IN In) (NP (NN company) (DT A))) (, ,) (NP (NP (NN employee)) (ADJP (`` ``) (JJ clever) ('' ''))) (VP (AUX is) (VP (VBG creating) (NP (NP (DT an) (NN expression)) (PP (IN for) (NP (NN employee) (`` ``) (NN dummer) ('' ''))) (SBAR (WHNP (WDT which)) (S (NP (PRP he)) (VP (VBZ validates) (PP (IN before) (S (VP (VBG shipping) (NP (PRP it)) (PP (TO to) (NP (`` ``) (NN dummer) ('' '')))))))))))) (. .)))
(S1 (S (`` ``) (NP (NNP dummer)) ('' '') (VP (VBZ executes) (NP (DT the) (NN expression))) (. .)))
(S1 (S (VP (VB Compare) (NP (PRP it)) (S (VP (TO to) (VP (VB compile) (NP (NP (NN time) (NNS errors)) (CC and) (NP (NP (JJ runtime) (NNS errors)) (PP (IN in) (NP (DT a) (VBG programming) (NN environment))))))))) (. .)))
(S1 (NP (NP (JJS Best) (VBZ regards)) (, ,) (NP (NNP Jeroen))))
