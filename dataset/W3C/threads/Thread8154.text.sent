A new draft is now out on quota. 
I've addressed a number of comments, mostly from Jim. 
Note that as a result of this review the property names have changed. 
Please review, it's not long. 
Lisa Of Internet-Drafts@ietf.org A New Internet-Draft is available from the on-line Internet-Drafts directories. 
Title: Quota and Size Properties for DAV Collections Author(s): L. Dusseault, C. Warner Filename: draft-dusseault-dav-quota-01.txt 
Pages: 7 WebDAV servers are frequently deployed with collection quota (size) limitations. 
This Internet-Draft discusses the two properties and minor behaviors needed for clients to interoperate with quota implementations on WebDAV repositories. 
A URL for this Internet-Draft is: To remove yourself from the IETF Announcement list, send a message to ietf-announce-request with the word unsubscribe in the body of the message. 
Internet-Drafts are also available by anonymous FTP. 
Login with the username "anonymous" and a password of your e-mail address. 
After logging in, type "cd internet-drafts" and then "get draft-dusseault-dav-quota-01.txt". 
A list of Internet-Drafts directories can be found in or ftp://ftp.ietf.org/ietf/1shadow-sites.txt Internet-Drafts can also be obtained by e-mail. 
Send a message to: mailserv@ietf.org. 
In the body type: "FILE /internet-drafts/draft-dusseault-dav-quota-01.txt". 
NOTE:The mail server at ietf.org can return the document in MIME-encoded form by using the "mpack" utility. 
To use this feature, insert the command "ENCODING mime" before the "FILE" command. 
To decode the response(s), you will need "munpack" or a MIME-compliant mail reader. 
Different MIME-compliant mail readers exhibit different behavior, especially when dealing with "multipart" MIME messages (i.e. documents which have been split up into multiple messages), so check your local documentation on how to manipulate these messages. 
Below is the data which will enable a MIME compliant mail reader implementation to automatically retrieve the ASCII version of the Internet-Draft. 
A client that wants to know how much storage is actually available in a collection has to PROPFIND each parent up to "/" looking for the minimum (quota-bytes - space-used-bytes) value. 
That number should be a live property, since any server enforcing quotas must be able to produce it fairly efficiently. 
It's natural to want to handle this through quotactl(2) on Unix, but the draft says {DAV:}space-used-bytes "MUST include child collections and all resources inside those child collections" without regard for who created them. 
Is the intent that all users MUST (or SHOULD) see identical {DAV:}quota-bytes and {DAV:}space-used-bytes values, or may an admin reveal quotas they've assigned to particular users? 
Should a client be able to atomically reserve some of a collection's storage so expensive requests don't have to race with others to claim the last bytes? 
It could be a header like Expect: 100-continue, reserve; content-length="999999" in a large PUT for example, or a live property on a collection allowing a reservation for several smaller resources or properties. 
On style, HTTP seems to use "octets" rather than "bytes" everywhere other than range requests. 
(BTW, what's the correct charset for the draft? 
0xF4 and 0xF6 octets appear in place of a few quotation marks.) The new draft of quota is out, but I never responded directly to these comments (sorry). 
That's true, but even knowing that the client can't necessary assure their request will succeed. 
I suspect that if the client just PROPFINDs the current collection and subtracts space-used-bytes from quota-bytes, the client will get an answer that works just as well 99% of the time. 
If implementation experience suggests otherwise, I'd support this live property as well. 
It didn't say that it is without regard for who created them. 
The server is free to count any resource as 0 bytes against space-used for all kinds of reasons (e.g. the resource is a binding). 
The sentence was intended to ensure that quota was understood to be recursive by clients and servers. 
Do you have better wording? 
In theory this would work already. 
However I suspect servers implementation of the Expect header is poor in reality. 
Lisa Since user-based quota systems are common in existing repositories, I'm not sure what you are suggesting we wait for. 
Also, I agree with the suggestion that we not use the term "bytes" in the property names. 
Cheers, Geoff That's a fine idea, but there's nothing necessarily tying the current-user-quota stuff into the directory quota draft. 
I generally prefer to write drafts only once implementation is well understood -- one's assumptions tend to have been confirmed or destroyed by then. 
Is it reasonable to wait until somebody wants to implement user-quota to standardize it? 
lisa -----Original Message----- Possibly we should have two pairs of standard properties: DAV:quota DAV:quota-used DAV:current-user-quota DAV:current-user-quota-used (analogous to the way the ACL draft as current-user privileges) Cheers, Geoff -----Original Message----- Brian, From: Brian Korver [mailto:briank@xythos.com] 
Sent: Wednesday, October 23, 2002 8:56 PM Subject: Re: FW: I-D ACTION:draft-dusseault-dav-quota-01.txt be In BSD anyhow, quotas are applied to users and/or groups.? 
That said, "collection quotas" (if we can even call them that) are generally enforced by mounting appropriately-sized partitions.? Just FYI. 
Interesting. 
So if we take groups into account, we'll need a more flexible reporting mechanism, right? 
Julian All I'm suggesting we wait for is somebody who's willing to do the work to think through user-based quotas, and has the motivation because they want to implement it, and finally because a client/server pair need to interoperate with user-based quota information. 
(Note: when I did early thinking about quota, we assumed we wanted user-based quota. 
That assumption was destroyed when we really thought about different usage scenarios) For the suggestion not to use 'bytes': I'm ok with 'octets' (is there a difference important enough to make the change? 
) but I reject the suggestion that it should be an unmeasured unit. 
It's useless to know that the quota is 33 frobnitzes and 18 frobnitzes have been used up if you want to have some hint if you can upload a 1.5 Mb file. 
Lisa Since user-based quota systems are common in existing repositories, I'm not sure what you are suggesting we wait for. 
Also, I agree with the suggestion that we not use the term "bytes" in the property names. 
Cheers, Geoff -----Original Message----- That's a fine idea, but there's nothing necessarily tying the current-user-quota stuff into the directory quota draft.? I generally prefer to write drafts only once implementation is well understood -- one's assumptions tend to have been confirmed or destroyed by then.? 
Is it reasonable to wait until somebody wants to implement user-quota to standardize it? 
lisa -----Original Message----- Possibly we should have two pairs of standard properties: DAV:quota DAV:quota-used DAV:current-user-quota DAV:current-user-quota-used (analogous to the way the ACL draft as current-user privileges) Cheers, Geoff -----Original Message----- Brian, From: Brian Korver [mailto:briank@xythos.com] 
Sent: Wednesday, October 23, 2002 8:56 PM Subject: Re: FW: I-D ACTION:draft-dusseault-dav-quota-01.txt be In BSD anyhow, quotas are applied to users and/or groups.? 
That said, "collection quotas" (if we can even call them that) are generally enforced by mounting appropriately-sized partitions.? Just FYI. 
Interesting. 
So if we take groups into account, we'll need a more flexible reporting mechanism, right? 
Julian Hello, I feel pretty strongly that the units should be defined as bytes. 
This is a widely accepted standard unit of measure when talking about disk space used/available. 
If the unit is left undefined, the vast majority of servers would use some denomination of bytes as their unit of measure anyway, whether that be individual bytes, Kb, Mb, etc. Allowing this flexibility doesn't buy us much, just more unit conversions. 
Furthermore, writing a generic client to support multiple units (on different server implementations) would rapidly become an exercise in finding out what unit the server was using. 
This would, in turn, require either another round trip or, more likely, the introduction of a new header value, thus unnecessarily raising the complexity of the world... Elias 
