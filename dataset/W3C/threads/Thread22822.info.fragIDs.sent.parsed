(S1 (SQ (MD Should) (NP (DT an) (NNP INVALID_MODIFICATION_ERR)) (VP (AUX be) (VP (VBN added) (PP (TO to) (NP (NP (DT the) (NN list)) (PP (IN of) (NP (JJ possible)))))))))
(S1 (NP (NP (NNS exceptions)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (AUX be) (VP (VBN generated) (S (VP (VBG using) (NP (NP (DT the) (NN setCssText) (-LRB- -LRB-) (-RRB- -RRB-) (NN method)) (, ,) (PP (IN for) (NP (NP (DT the) (NN case)) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (NN user)) (VP (VBZ attempts) (S (VP (TO to) (VP (VB change) (NP (DT the) (NN value) (NN type)) (PP (IN from))))))))))))))))))))
(S1 (FRAG (NP (NP (NN CSS_PRIMITIVE_VALUE)) (, ,) (NP (NN CSS_CUSTOM)) (, ,) (CC or) (NP (NP (NN CSS_VALUE_LIST)) (PP (TO to) (NP (DT a) (JJ different) (NN type))))) (PP (IN via))))
(S1 (FRAG (NP (DT the) (NN setCssText)) (-LRB- -LRB-) (-RRB- -RRB-) (NP (NN method)) (. ?)))
(S1 (S (-LRB- -LRB-) (NP (NP (NNS e.g.)) (PP (IN from) (NP (NN type)))) (VP (VB CSS_PRIMITIVE_VALUE) (S (VP (TO to) (VP (VB CSS_VALUE_LIST))))) (-RRB- -RRB-) (. .)))
(S1 (NP (NNP Blaine) (NNP Brodie)))
(S1 (FRAG (NP (NN CSSValue.setCssText)) (-LRB- -LRB-) (-RRB- -RRB-) (VP (VBZ raises) (NP (DT a) (NNP SYNTAX_ERR)) (PP (IN in) (NP (DT that) (NN case)))) (: :) (NP (NNP SYNTAX_ERR)) (: :) (S (VP (VBD Raised) (SBAR (IN if) (S (NP (DT the) (VBN specified) (JJ CSS) (NN string) (NN value)) (VP (VP (AUX has) (NP (DT a) (JJ syntax) (NN error))) (PRN (-LRB- -LRB-) (S (VP (VBG according) (PP (TO to) (NP (DT the) (VBN attached) (NN property))))) (-RRB- -RRB-)) (CC or) (VP (AUX is) (ADJP (JJ unparsable)))))))) (. .)))
(S1 (S (NP (NNP CSSValue)) (VP (AUX are) (VP (VBN typed) (PRN (-LRB- -LRB-) (PP (VBG according) (PP (TO to) (NP (DT the) (JJ underlying) (NN property)))) (-RRB- -RRB-)))) (. .)))
(S1 (S (CC But) (NP (PRP it)) (VP (VBZ means) (ADVP (RB also)) (SBAR (IN that) (S (NP (PRP we)) (VP (AUX are) (ADJP (JJ inconsistent) (PP (IN with) (NP (NN CSSRule.cssText)))))))) (. .)))
(S1 (S (NP (PRP It)) (VP (VBZ raises) (NP (DT an) (NNP INVALID_MODIFICATION_ERR)) (SBAR (IN if) (S (NP (PRP you)) (VP (VBP try) (S (VP (TO to) (VP (VB change) (NP (DT the) (JJ underlying) (NN type)) (PP (IN on) (NP (DT a) (JJ CSS) (NN rule)))))))))) (. .)))
(S1 (FRAG (WHNP (WP What)) (PP (IN about) (S (VP (VP (VBG removing) (NP (DT the) (NNP INVALID_MODIFICATION_ERR))) (CC and) (VP (VBG changing) (NP (NP (DT the) (NN CSSRule.cssText)) (PP (IN from) (NP (: :) (NP (NNP SYNTAX_ERR)) (: :) (S (VP (VBN Raised) (SBAR (IN if) (S (NP (DT the) (VBN specified) (JJ CSS) (NN string) (NN value)) (VP (VP (AUX has) (NP (DT a) (JJ syntax) (NN error))) (CC and) (VP (AUX is) (ADJP (JJ unparsable))))))))))))))) (. .)))
(S1 (S (NP (X (TO to)) (: :) (NP (NNP SYNTAX_ERR)) (: :)) (VP (VBD Raised) (SBAR (IN if) (S (NP (DT the) (VBN specified) (JJ CSS) (NN string) (NN value)) (VP (VP (AUX has) (NP (DT a) (JJ syntax) (NN error))) (PRN (-LRB- -LRB-) (S (VP (VBG according) (PP (TO to) (NP (DT the) (JJ underlying) (NN rule))))) (-RRB- -RRB-)) (CC or) (VP (AUX is) (ADJP (JJ unparsable))))))) (. .)))
(S1 (S (NP (PRP It)) (VP (MD would) (VP (VB mean) (SBAR (IN that) (S (NP (PRP we)) (VP (MD can) (VP (VB remove) (NP (DT this) (NN exception)) (PP (IN from) (NP (DT the) (NN DOMException) (NN exception))))))))) (. .)))
(S1 (NP (NNP Philippe)))
(S1 (INTJ (UH Hello) (NNP Philippe) (, ,)))
(S1 (S (INTJ (UH Ok)) (, ,) (NP (PRP I)) (VP (MD 'd) (VP (VB like) (S (VP (TO to) (VP (VB confirm) (NP (NP (PRP$ my) (NN understanding)) (PP (IN of) (SBAR (WHNP (WP what)) (S (NP (PRP you)) (VP (AUX are) (VP (VBG saying) (PP (IN with) (NP (DT a))))))))))))))))
(S1 (NP (JJ concrete) (NN example) (. .)))
(S1 (S (PP (IN In) (NP (DT the) (JJ current) (JJ SVG) (NN spec))) (NP (EX there)) (VP (VBZ exists) (NP (NP (DT a) (JJ CSS) (NN property)) (VP (VBN called) (S (VP (POS ') (ADJP (JJ stroke-dasharray)) ('' ') (PRN (-LRB- -LRB-) (S (NP (PRP I)) (VP (AUX 'm) (VP (VBG quoting) (NP (NNS SVG)) (SBAR (IN because) (S (NP (DT this)) (VP (AUX is) (NP (NP (DT the) (ADJP (RB only) (JJ concrete)) (NN example)) (SBAR (S (NP (PRP I)) (VP (MD can) (VP (VB find))))))))))) (. .)) (-RRB- -RRB-))))))) (. .)))
(S1 (S (NP (NP (DT The) (NN representation)) (PP (IN for) (NP (DT this) (NN property)))) (VP (AUX is) (NP (NP (DT either) (`` ``) (NN ident) (CC or) (NN list)) (PP (IN of))))))
(S1 (FRAG (NNS lengths) ('' '') (. .)))
(S1 (S (NP (NP (DT The) (NN syntax)) (PP (IN for) (NP (DT this) (NN property)))) (VP (AUX is) (: ') (NP (NP (NN none)) (VP (VBG |) (NP (JJ dasharray) (NN |) (NP (VBP inherit) (POS ')))))) (. .)))
(S1 (S (VP (VB Assume) (S (NP (PRP I)) (VP (VB obtain) (NP (DT this) (JJ CSS) (NN value)) (PP (IN from) (NP (NP (DT the) (NN getPropertyCssValue)) (PRN (-LRB- -LRB-) (FRAG (-RRB- -RRB-) (NP (NN method) (NN ..)) (. .) (NP (NN value)) (X (SYM =)) (NP (NP (NN style.getPropertyCssValue)) (PRN (-LRB- -LRB-) (INTJ (`` ``) (UH stroke-dasharray) ('' '')) (-RRB- -RRB-)))))))))) (: ;)))
(S1 (S (VP (VB value.getCssText) (-LRB- -LRB-) (-RRB- -RRB-)) (: ;)))
(S1 (NP (NNS //returns) (`` ``) (NN none) ('' '') (PRN (FW value.getValueType) (-LRB- -LRB-) (-RRB- -RRB-)) (: ;)))
(S1 (S (S (NP (NNPS //returns) (NNP CSS_PRIMITIVE_VALUE) (NNP CSSPrimitiveValue) (NN pValue)) (VP (SYM =) (NP (NP (-LRB- -LRB-) (NNP CSSPrimitiveValue) (-RRB- -RRB-) (NN value)) (: ;) (NP (NN pValue.getPrimitiveType))))) (-LRB- -LRB-) (-RRB- -RRB-) (: ;)))
(S1 (S (NP (NP (JJ //returns) (JJ CSS_IDENT) (NN pValue.setCssText)) (PRN (-LRB- -LRB-) (`` ``) (NP (QP (CD 5) (CD 3)) (QP (CD 2) (CD 5)) (QP (CD 3) (CD 2))) ('' '') (-RRB- -RRB-))) (: ;) (VP (VBZ //Throws) (NP (NNP SYNTAX_ERR) (NN exception)))))
(S1 (S (IN If) (NP (DT the) (JJ above)) (VP (AUX is) (VP (VBN considered) (S (VP (TO to) (VP (AUX be) (NP (NP (JJ correct) (NN behavior)) (ADVP (RB then)) (SBAR (WHNP (WDT that)) (S (VP (AUX is) (ADJP (JJ fine) (PP (IN with) (NP (PRP me))))))))))))) (. .)))
(S1 (S (NP (NNP Eventhough)) (, ,) (PP (IN as) (NP (DT a) (NN user))) (NP (PRP I)) (VP (MD would) (RB n't) (VP (VB expect) (S (NP (NP (DT this) (NN type)) (PP (IN of) (NP (NN error)))) (VP (TO to) (VP (AUX be) (VP (VBN thrown) (SBAR (IN since) (S (`` ``) (NP (QP (CD 5) (CD 3)) (QP (CD 2) (CD 5)) (QP (CD 3) (CD 2))) ('' '') (VP (AUX is) (ADVP (RB still)) (ADVP (RB syntactically)) (ADJP (JJ correct)) (PP (IN for) (NP (DT the) ('' ') (JJ stroke-dasharray) ('' ') (NN property) (NN type)))))))))))) (. .)))
(S1 (S (S (ADVP (RB However)) (, ,) (SBAR (IN if) (S (S (NP (DT the) (JJ above) (NN behavior)) (VP (AUX is) (RB not) (ADJP (JJ correct)))) (CC and) (S (NP (DT a) (NNP SYNTAX_ERR) (NN exception)) (VP (AUX is) (RB not) (VP (VBN thrown) (PRN (-LRB- -LRB-) (S (NP (RB ie) (DT the) (NN value) (NN type)) (VP (AUX is) (VP (VBN changed)))) (-RRB- -RRB-))))))) (, ,) (ADVP (RB then)) (VP (MD can) (S (NP (PRP you)) (VP (VB please) (VP (VB tell) (NP (NP (NP (PRP me)) (SBAR (WHNP (WDT which)) (S (PP (IN of) (NP (DT the) (JJ following) (NN behavior))) (VP (MD would) (VP (AUX be) (VP (VBN considered) (NP (JJ correct) (NN ..))))) (. .)))) (NN pValue.getCssText))))))) (-LRB- -LRB-) (-RRB- -RRB-) (: ;)))
(S1 (S (VP (VBZ //returns) (`` ``) (NP (QP (CD 5) (CD 3)) (QP (CD 4) (CD 5)) (QP (CD 3) (CD 2))) ('' '') (PRN (FW pValue.getValueType) (-LRB- -LRB-) (-RRB- -RRB-))) (: ;)))
(S1 (NP (NP (NNP //returns) (NNP CSS_VALUE_LIST)) (PRN (FW pValue.getPrimitiveType) (-LRB- -LRB-) (-RRB- -RRB-)) (: ;)))
(S1 (NP (NNP //returns) (NNP CSS_UNKNOWN)))
(S1 (S (NP (JJ ----OR---) (JJ pValue) (NNS ==)) (VP (VBP null) (NP (NP (JJ //returns) (JJ true) (NNS Thanks)) (, ,) (NP (NNP Blaine))))))
(S1 (S (S (INTJ (UH No)) (, ,) (NP (PRP it)) (VP (AUX does) (RB n't) (VP (VB return) (NP (DT a) (NNP SYNTAX_ERR)) (ADVP (RB since)) (, ,) (PP (VBG according) (PP (TO to) (NP (DT the) (VBN attached) (NN property))))))) (, ,) (NP (DT the) (NN syntax)) (VP (AUX is) (ADJP (JJ correct))) (. .)))
(S1 (S (NP (NP (DT The) (NN result)) (PP (IN of) (NP (FW pValue.getPrimitiveType)))) (VP (AUX is) (ADJP (JJ undefined)) (SBAR (IN since) (S (NP (PRP it)) (VP (AUX is) (ADVP (RB no) (RB longer))))))))
(S1 (NP (DT a) (JJ primivite) (NN value) (. .)))
(S1 (S (PP (IN From) (NP (NP (DT a) (NNP Java) (NN programmer) (NN point)) (PP (IN of) (NP (NN view))))) (, ,) (NP (PRP it)) (VP (MD could) (VP (VB throw) (NP (NP (DT a) (NN java.lang.IllegalStateException)) (PRN (-LRB- -LRB-) (PP (IN for) (NP (NN example))) (-RRB- -RRB-))))) (. .)))
(S1 (S (PP (IN In) (NP (NNP ECMAScript))) (, ,) (NP (PRP you)) (VP (MD might) (VP (VB get) (NP (DT an) (JJ unknown) (NN property) (NN error)))) (. .)))
(S1 (S (PP (IN In) (NP (DT any) (NN case))) (, ,) (NP (DT this)) (VP (AUX is) (PP (IN outside) (NP (NP (DT the) (NN scope)) (PP (IN of) (NP (DT the) (NN specification)))))) (. .)))
(S1 (NP (NNP Philippe)))
(S1 (FRAG (INTJ (UH Hello) (UH Phillippe)) (, ,) (S (VP (TO To) (VP (ADVP (RB further)) (VB clarify) (NP (NP (PRP$ my) (NN understanding)) (PP (IN of) (SBAR (WHADVP (WRB how)) (S (NP (NNP CSSPrimitiveValue)) (VP (AUX is) (NP (NP (DT the) (JJ following) (NN behavior)) (VP (VBN considered) (S (VP (TO to) (VP (AUX be) (NP (JJ correct) (NN behavior))))))))))))))) (. ?)))
(S1 (S (VP (VBG Continuing) (PP (IN from) (NP (PRP$ my) (JJ previous) (NN example)))) (. .)))
(S1 (S (VP (VB pValue.getCssText) (-LRB- -LRB-) (-RRB- -RRB-)) (: ;)))
(S1 (S (S (NP (NNS //returns)) (`` ``) (NP (QP (CD 5) (CD 3)) (NP (CD 4)) (QP (CD 3) (CD 2))) ('' '') (FW pValue.getValueType)) (-LRB- -LRB-) (-RRB- -RRB-) (: ;)))
(S1 (NP (NP (JJ //returns) (JJ CSS_VALUE_LIST) (NN pValue.setCssText)) (PRN (-LRB- -LRB-) (`` ``) (NP (NN none)) ('' '') (-RRB- -RRB-)) (: ;)))
(S1 (S (S (NP (NN //now) (NN pValue)) (VP (AUX is) (ADVP (RB back) (PP (TO to) (NP (DT a) (JJ primitive) (NN type) (NN pValue.getPrimitiveType)))))) (-LRB- -LRB-) (-RRB- -RRB-) (: ;)))
(S1 (S (NP (JJ //no) (NN state) (NN exception)) (VP (AUX is) (VP (VBN thrown) (PP (IN since) (NP (NP (JJ pValue) (NNS //has)) (VP (AUX been) (VP (VBN reverted) (PP (TO to) (NP (DT a) (JJ primitive) (NN type))))))))) (. .)))
(S1 (S (NP (NNP //returns) (NNP CSS_STRING)) (SBAR (IN If) (S (NP (NP (DT this) (NN type)) (PP (IN of) (NP (JJ reversion) (NN capablity)))) (VP (AUX is) (VP (VBN considered) (NP (JJ correct) (NN behavior)) (PP (IN for) (NP (NNS CSSValues))))))) (, ,) (VP (AUX is) (SBAR (S (NP (PRP it)) (ADVP (RB also)) (VP (VBD considered) (S (VP (TO to) (VP (AUX be) (NP (JJ correct) (NN behavior)) (SBAR (WHADVP (WRB when)) (S (VP (VBG using) (NP (NP (JJR higher) (NN level) (NNS interfaces)) (PP (JJ such) (IN as) (NP (NN CSSStyleDeclaration)))))))))))))) (. .)))
(S1 (SQ (PP (IN For) (NP (NN example))) (AUX is) (NP (DT the) (NN following)) (ADJP (JJ possible)) (. ?)))
(S1 (S (VP (VB Assume) (S (NP (PRP I)) (VP (AUX have) (NP (NP (DT a) (JJ CSSStyleDeclaration) (VBN named) ('' ') (NN style) (POS ')) (NN style.setCssText)) (PRN (-LRB- -LRB-) (`` ``) (ADJP (JJ color)))))) (: :)))
(S1 (NP (NP (NP (NNS rgb)) (PRN (-LRB- -LRB-) (NP (NP (CD 0)) (, ,) (NP (CD 0)) (, ,) (NP (CD 0))) (-RRB- -RRB-))) (: ;) (NP (NP (NP (NN font-size)) (PRN (: :) (NP (NN 1.2em)) ('' '') (-RRB- -RRB-))) (: ;) (NP (NN CSSValue) (NN value)) (X (SYM =)) (NP (NN style.getPropertyCssValue)) (PRN (-LRB- -LRB-) (NP (`` ``) (NN color) ('' '')) (-RRB- -RRB-)) (: ;))))
(S1 (NP (NP (NNPS style.setCssText)) (PRN (-LRB- -LRB-) (`` ``) (ADJP (JJ margin))) (: :)))
(S1 (NP (NP (NNP 0.5em) ('' '') (-RRB- -RRB-)) (PRN (: ;) (S (NP (NN //)) (VP (VBZ throws) (NP (NP (DT some) (NN sort)) (PP (IN of) (NP (NP (NN state) (NN exception)) (NP (CD ==) (NN value.getValueType))))))) (-LRB- -LRB-) (-RRB- -RRB-)) (: ;)))
(S1 (S (VP (VB //note) (NP (NP (DT the) (NN color) (CC and) (NN font-size) (NN switch) (NN style.setCssText)) (PRN (-LRB- -LRB-) (`` ``) (ADJP (JJ font-size)) (: :))))))
(S1 (NP (NP (NNP 1.2em)) (PRN (: ;) (NP (NP (NN color)) (: :) (NP (NP (NNS rgb)) (PRN (-LRB- -LRB-) (NP (NP (CD 0)) (, ,) (NP (CD 0)) (, ,) (NP (CD 0))) (-RRB- -RRB-) ('' '') (-RRB- -RRB-))) (: ;) (NP (NN value.getValueType))) (-LRB- -LRB-) (-RRB- -RRB-)) (: ;)))
(S1 (S (NP (NNP //returns) (NNP CSS_PRIMITIVE_VALUE)) (VP (VBD //where) (SBAR (S (NP (DT the) (JJ primitive)) (VP (AUX has) (NP (NP (NN type)) (ADJP (JJ CSS_RGBCOLOR) (JJ Correct))))))) (. ?)))
(S1 (NP (NP (NNS Thanks)) (PP (IN for) (NP (DT the) (NN clarification))) (. .)))
(S1 (NP (NNP Blaine)))
