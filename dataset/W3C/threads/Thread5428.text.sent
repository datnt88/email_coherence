From the Java perspective, the HotJava browser would be an working example of this since the same JVM that displayed the document also executes any applets embedded in the document. 
It might be possible to create a .net assembly that plays back Flash movies instead of using a plug-in that is downloaded and executed directly. 
This is splitting hairs since I believe that most plug-ins are essentially libraries that are dynamically loaded into memory and started by calling a specific function exported by the plug-in. 
In turn, the plug-in code is allowed to draw and receive events from a limited region in the parent document. 
~Scott What if this wasn't the case? 
If the "plug-in" does not receive direct messages from the browser, is it still affected by the patent? 
Please also see my other posts titled: .) Which patent sub-sections can stand alone? 
.) Business Model vs. Software Patent Reza From: Richard M. Smith rms@computerbytesman.com mailto:rms@computerbytesman.com?Subject=Re:%20What%20a%20prior%20art%20product%20must%20do&amp;In-Reply-To=%3C016601c36f32$bde75c10$550ffea9@rms%3E&amp;References=%3C016601c36f32$bde75c10$550ffea9@rms%3E Date: Sat, 30 Aug 2003 16:10:21 -0400 mailto:public-web-plugins@w3.org?Subject=Re:%20What%20a%20prior%20art%20product%20must%20do&amp;In-Reply-To=%3C016601c36f32$bde75c10$550ffea9@rms%3E&amp;References=%3C016601c36f32$bde75c10$550ffea9@rms%3E Message-ID: 016601c36f32$bde75c10$550ffea9@rms Hi, Looking over just claim #1 of the '906 patent, here's my reading what a product must do as a minimum to be prior art for the '906 patent: 1. 
There must be a browser application that runs on a client computer. 
2. The browser must display documents which are supplied over a network from a server computer. 
3. The browser must accept a command in a document to display an embedded file which is also supplied by a server. 
4. An external program residing on the client computer is automatically loaded and executed to display the embedded file within a designated area of the browser window. 
5. The browser must allow a user to interact with the external application which is displaying the external. 
I believe mosaic-0.9 (released in March 1993) did all 5 of those things. 
It used "helper" applications to display images, movies, etc. 
The user could interact with some helpers such as "mpeg_play". 
Glenn Don't helper applications display content in their own windows? 
Richard From: Richard M. Smith rms@computerbytesman.com mailto:rms@computerbytesman.com?Subject=Re:%20What%20a%20prior%20art%20product%20must%20do&amp;In-Reply-To=%3C016601c36f32$bde75c10$550 ffea9@rms%3E&amp;References=%3C016601c36f32$bde75c10$550ffea9@rms%3E Date: Sat, 30 Aug 2003 16:10:21 -0400 mailto:public-web-plugins@w3.org?Subject=Re:%20What%20a%20prior%20art%20product%20must%20do&amp;In-Reply-To=%3C016601c36f32$bde75c10$55 0ffea9@rms%3E&amp;References=%3C016601c36f32$bde75c10$550ffea9@rms%3E Message-ID: 016601c36f32$bde75c10$550ffea9@rms Hi, Looking over just claim #1 of the '906 patent, here's my reading what a product must do as a minimum to be prior art for the '906 patent: 1. 
There must be a browser application that runs on a client computer. 
2. The browser must display documents which are supplied over a network from a server computer. 
3. The browser must accept a command in a document to display an embedded file which is also supplied by a server. 
4. An external program residing on the client computer is automatically loaded and executed to display the embedded file within a designated area of the browser window. 
5. The browser must allow a user to interact with the external application which is displaying the external. 
I believe mosaic-0.9 (released in March 1993) did all 5 of those things. 
It used "helper" applications to display images, movies, etc. 
The user could interact with some helpers such as "mpeg_play". 
Glenn Perhaps, but if the user is running mosaic in full-screen mode as I always did, it uses the same "display area". 
Glenn Doesn't meet claim 4: 4. An external program residing on the client computer is automatically loaded and executed to display the embedded file within a designated area of the browser window. 
_DESIGNATED_ area. 
The helper apps opened their windows 'anywhere' they felt like it (or that the window manager 'felt' like it). 
Benjamin Franz Gauss's law is always true, but it is not always useful. 
-- David J. Griffiths, "Introduction to Electrodynamics" Looking over just claim #1 of the '906 patent, here's my reading what a product must do as a minimum to be prior art for the '906 patent: Why look for prior art? 
All that needs to be shown is that the claims were already obivious and publically known. 
Anyone remember the old HTML mailing list in the early 90's? 
That's where eoloas got all the material for writing the patent. 
When Marc added img to Mosaic most thought that wasn't enough and wanted embed and other tags. 
Marc said he didn't have enough time to add embed then. 
So this shows where the ideas came from and that they were all obivious and openly discussed by those who worked with early HTML and browsers. 
Jim Really good point -- has anyone got archives of all that ? 
- Jason I've gotton 3 emails over my sept 25 post titled: Modern Browsers May NOT Infringe Eola After All. 
Here is the gist of my argument..... Quote from 906 claim: Table II, below, shows an example of an HTML tag format used by the present invention to embed a link to an application program within a hypermedia document. 
TABLE II EMBED TYPE = "type" HREF = "href" WIDTH = width HEIGHT = height End quote. 
Notice the use of *TYPE* there. 
In order for Eolas claim to function it must include "content type" along with the tag values in order for it to work. 
I argued modern day browsers don't rely on this to link an application with an external app. 
My arguments is that use of the embed tag alone is harmless because it is not by itself copyrightable or patentable. 
The patent does not claim invention of the word embed . 
And because modern use of the embed tags do not require *TYPE* to function they may well sufficently steer clear of the 906 approach. 
Furthermore, the linking of an application by it's content identifier may well already be covered by windows itself and Eolas infringing windows! 
After all, it's the OS that really does the magic and not Eolas. 
Jim A jury has already ruled against Microsoft in this case. 
If the '906 patent was obvious from the patent law standpoint, my assumption is that Microsoft tried to make this point in court and lost. 
Richard Looking over just claim #1 of the '906 patent, here's my reading what a product must do as a minimum to be prior art for the '906 patent: Why look for prior art? 
All that needs to be shown is that the claims were already obivious and publically known. 
Anyone remember the old HTML mailing list in the early 90's? 
That's where eoloas got all the material for writing the patent. 
When Marc added img to Mosaic most thought that wasn't enough and wanted embed and other tags. 
Marc said he didn't have enough time to add embed then. 
So this shows where the ideas came from and that they were all obivious and openly discussed by those who worked with early HTML and browsers. 
Jim Richard, you are assuming M$ defense team got everything right. 
Not always the case with the best of lawyers. 
Never assume civil cases ends with the jury. 
It's most rare in civil litigation when a case is decided by a jury. 
Most always a case is finally decided by judges, not the jury g M$ appears to have only offered prior art with the Viola Browser, which the judge prevented because he wasn't convinced it was "public" knowledge. 
In the judges judgement, the Viola browser was deliberately kept secret from the world, and thus, Eolas would have had no prior knowledge of it (if I follow the judges thinking correctly here.) 
This may well give M$ grounds for a new trial. 
Jim patent was obvious from the patent law standpoint, my yes Perhaps. 
But patent filing, expertise and law are now clearly badly out of sync with culture, technology and common sense. 
Just because something is currently the law, does not make it right, or even appropriate. 
Even if Microsoft tried an 'obvious' defense - it may have been incomplete, and more importantly may still be relevant. 
We *all* need to better understand how public technologies can be polluted and hijacked by individual or corporate manipulation. 
The web/Internet is now an essential global public resource and needs intelligent protection. 
As important in its own way as light, clean water, or fresh air.. 
And, as with many environmental issues, outdated or inept laws are now often compounded by ignorance and self-serving business practices which cause long-term social damage and obstruction to progress. 
- Jason Here is the ruling on the Viola Browser in the MS Eolas case. 
Text is converted from PDF format, so there can be some word spacing. 
UNITED STATES DISTRICT COURT NORTHERN DISTRICT OF ILLINOIS EASTERN DIVISION EOLAS TECHNOLOGIES, INC. and THE REGENTS OF THE UNIVERSITY OF CALIFORNIA, Plaintiffs, v. MICROSOFT CORPORATION, Defendant. 
No. 99 C 626 Judge James B. Zagel RULING ON THE DEFENSE OF INEQUITABLE CONDUCT A Preface on the Law Inequitable conduct is an applicant's breach of his duty to prosecute a patent application with candor, good faith, and honesty. 
Li Second Family Life L.P. v. Toshiba Corp., 231 F.3d 1373, 1378 (Fed. 
Cir. 
2000). 
All patent applicants owe this duty to the Patent and Trademark Office ("PTO"), and it exists throughout the entire prosecution of the patent. 
See 37 C.F.R. ? 
1.56(a); Semiconductor Energy Lab. v. Samsung Elec., 204 F.3d 1368, 1373 (Fed. 
Cir. 
2000); Fox Indus., Inc. v. Structural Preservation Systems, Inc., 922 F.2d 801, 803 (Fed. 
Cir. 1990). 
Inequitable conduct "includes affirmative misrepresentations of a material fact, failure to disclose material information, or submission of false material information, coupled with an intent to deceive." 
Baxter Int'l, Inc. v. McGaw, Inc., 149 F.3d 1321, 1327 (Fed. 
Cir. 
1998). 
With respect to inequitable conduct based on failure to disclose information to the PTO, there is a three step analysis in which the court must determine: (1) whether the withheld information or misrepresentation meets a threshold level of materiality; (2) whether a threshold level of intent has been shown by the evidence; and (3) if these thresholds are satisfied, "whether the equities warrant the conclusion that inequitable conduct occurred." 
Semiconductor Energy, 204 F.3d at 1373. 
Both materiality and intent must be found, and the more severe one is found to be, the less severe the other has to be. 
See Monon Corp. v. Stoughton Trailers, Inc., 239 F.3d 1253, 1261 (Fed. 
Cir. 
2001); Critikon, Inc. v . 
Becton Dickinson Vascular Access, Inc., 120 F.3d 1253, 1257 (Fed. 
Cir. 
1997). 
Also, because a "mere showing that art or information having some degree of materiality was not disclosed," is insufficient to establish inequitable conduct, it is the intent to act inequitably that must be shown. 
Thus, for a failure to disclose to constitute inequitable conduct, there must be "clear and convincing proof of: (1) prior art or information that is material; (2) knowledge chargeable to the applicant of that prior art or information and of its materiality; and (3) failure of the applicant to disclose the art or information resulting from an intent to mislead the PTO." FMC Corp. v. Manitowoc Co, Inc., 835 F.2d 1411, 1415 (Fed. 
Cir. 
1987). 
FINDINGS OF FACT I. The Inventors' Knowledge of Viola Michael Doyle knew in November of 1993 that something which was denominated as "Viola" existed. 
In two separate accounts of what he knew, he first said that ORA said that someone was trying to get something to work with program objects embedded in documents and transported over the World Wide Web, but it was not yet ready to show. 
A second acco unt was that he did not remember ORA using the word "Viola" but did remember mentioning something about a book browser or some kind of software they were working on that related "to form submission on Web pages." 
On May 20, 1994, Michael Doyle received an e-mail from David Raggett which said: The EMBED tag was dropped after the WWW workshop in Boston, late last July. 
It was felt by most brow ser writers that further study was needed on how best to implement object level embedding in Web bro wsers. 
This feature is still on most peoples' agenda though. 
You might want to look at Viola which I seem to remember takes advantage of the tk tool kit to provide a level of embedding. 
You can find a pointer to Viola off the CERN WWW project page. 
Doyle stated he understood this to mean that Raggett was referring to the "TK WWW" browser rath er than Viola becau se the "TK WWW" was the only brow ser that used the TK to ol kit. 
By May 20, 1994, another inventor, David Martin, had known of Viola because he corresponded with Pei Wei, the developer of V iola, and was discu ssing with Pei Wei a trade, to wit, an "updated Viola WWW executable" in return for a guest compu ter account. 
By August 31, 1994, Michael Doyle issued a press release to the VRML e-mail list about what would become of the `906 patent. 
It said: Researchers at the U. of California have created software for embedding interactive program objects within hypermedia documents. 
Previously, object linking and embedding (OLE) has been employed on single machines or local area networks using MS Windows -TM-. 
T his UC software is the first instance where program objects have been embedded in documents over an open an d distributed hyperm edia environment such as the World W ide Web on the Internet. 
A key feature of the inve stigation was the em bedding of prog ram objects ove r the World Wide Web. 
Pei Wei responded to the press release at 6:54 p.m. on August 31, 1994: This is very interesting_ But, I don't think this is the first case of program objec ts embedded in docs and transported over the WWW Viola has had this capabilities for months and months now. 
Been meaning to propose so mething for VRML ever since the Geneva W3 conf_ But anyway, any body interested in learning m ore about how violaWW W does this embedded objects thing can get a paper on it from: ftp://ora.com/pub/www/viola/violaIntro.ps.gz Michael Doyle received Pei Wei's response on A ugust 31, 1994, he went to the Internet address given by Pei Wei, found a paper describing the Viola browser, downlo aded the paper o nto his computer, and read it-the Viola Paper. 
At 9:06 p.m . 
on August 3 1, 1994, Do yle responded to Wei by e-mail with this qu estion: "How many months and months? 
W e demonstrated our technology in 1993." 
About two hours later, at 11:13 p.m., Doyle sent a further e-mail to the VRML distribution list, commenting on Wei's pa per about Viola: As Pei's pap er on Viola states, that pa ckage did not sup port what it calls `embeddable program objects' until 1994. 
As our WWW server shows (http: visembryo.ucsf.edu/), 
we demonstrated a fully functional volume visualization application embedded within a WWW document in 1 993. 
Furthermore, Viola merely implements an internal scripting language that allows one to code "mini application" scripts that are transferred to the local client, and then interpreted and run locally on the client machine. 
As Pei correctly notes in his paper, this is similar to the use of EMACS ' internal programming capabilities. 
What we have accomplished is much different. 
Just as the Microsoft Windows OLE function allows any OLE-compliant application to be embedded, in its native form, within, for example, a MS Word for Windows document, we can embed ANY interactive application IN ITS NATIVE FORM within a WWW document. 
At 11:16 p.m. on August 31, 1994, Wei responded to Doyle's "how many months and months" query. 
Definitely by May 8, 1993 we had demonstrated that plotting demo (the very one shown in the viola paper) to visitors fro m a certain computer manufacturer_ This demo was memorable because someone and I at ORA had lost sleep the night before the meeting, in order to cook up that particular plotting dem o:) We had to show something cool. 
That demo wasn't very hard to do because by that time the basic capability was already in place for viola WWW to fetch viola objects over HTTP (or whatever) and plug them into documents. 
Of course, our wire-frame plotting demo isn't anywhere as com prehensive as you rs. 
But, the point w as that there was a w ay to embed programmable &amp; interactive objects into HTML documents. 
After receiving this e-mail, Doyle looked at Wei's Viola paper a second time to study the "wire-frame plotting demo" (showing an airplane image) that Wei referred to in the e-mail. 
Doyle then sent Wei a further e-mail at 11:36 p.m.: Out of curiosity, did you publicly demonstrate this or publish any results before 1994? 
I remember talking to people from ORA at the first SIG-WEB meeting in November of 1993 and they said that no such features were yet publicly demonstrable in Viola. 
I seem to remember that they hinted at the time that someone was trying to get something to work, but it wasn't ready to show yet. 
Wei responded to Doyle's e-mail shortly after midnight on August 31, 1994, explaining that before 1994 he had "done lots of demos to many parties in private," and had demonstrated the Viola browser "on the side at InterOPS and on ce at SIG-WEB a few m onths ago. 
Nothing big." 
He also told Doyle that by Novem ber 1993, "those embeddable objects features w ere certainly in place" and "were being demonstrated to visitors." 
Wei also responded to Doyle's 11:13 p.m. commentary concerning the Viola browser, sending an e-mail to the VRML mailing list at 8:19 a.m. the following morning, September 1, 1994. 
In response to Doyle's claim that the Viola "package did not support what it calls `embeddable program objects' until 1994," Wei maintained that "Viola's model was *demonstrated* in 1993, *released* freely in 1994." 
The `906 patent application was filed on October 17, 1994, some six weeks after this round of e-mail exchanges. 
The `906 application discussed the Mosaic brow ser in passing, and included an Internet address (http://www.law.cornell.edu/) 
where information could be obtained about the Cello browser. 
Neither browser enabled the use of interactive program objects in Web pages. 
The `906 application made no mention of Pei Wei or the Viola browser. 
A second round of e-mail exchanges took place in 1995. 
On August 21, 1995, Eolas sent an e-mail press release to the www-talk e-mail list, announcing that it had "completed a licensing agreement with the University of California for the exclusive rights to a pending patent covering the use of embedded program objects, or `applets,' within World Wide Web documents." 
Doyle said that one of the reasons he sent ou t this press release was tha t he realized that if there was relevant prior art, "someone would likely tell us about it." 
Doyle understood that any material prior art that came to his attention because of the issuance of the press release would have to be disclosed to the Examiner. 
Wei responded to the press release with an August 21, 1995 e-mail stating: And for the record, I just want to point out that the technology which enabled Web documents to contain fully-interactive "inline" program ob jects was existing in ViolaWWW and was "released" to the public, and in full source code form, even back in 1993_ A ctual conceptualization and existence occurred before '93. 
Doyle rep lied later that d ay: We've had this discussion before (last September, remem ber?) You admitted then that you did NOT release or publish anything like this before the Eolas demonstration. 
Wei replied: Please carefully re-read my letter to you_ I said Viola was demonstrated in smaller settings, but before your demo. 
The applets stuff was demo'ed to whom ever wanted to see it and had visited our office at O'Reilly &amp; Associates (where I worked at the time). 
Wei then quoted his earlier e-mail, where he told Doyle that "by May 8, 1993 we had demonstrated that plotting demo (th e very one show n in the Viola Pap er) to visitors from a cer tain computer manufacturer." 
He continued: That date (May 93), at least, predates your demo if I'm not mistaken. 
Then around August 93 it w as shown to a b unch of attendees at the first W eb conference in Cambridge. 
So, it was shown , just not with lots of publicity and noise. 
If you're talking about interactive apps *specifically* on the web, ie applets in-lined into HTML docum ents etc., and with bi-directional communications, then look at ViolaWWW as it existed around late '92 early '93. 
In 1998, while the `906 patent application was still pending in the PTO, Doyle decided to do further research regarding the Viola browser. 
In the course of his research, Doyle found a presentation describing the Viola browser which Wei had delivered at Stanford University-the Stanford Slides. 
The presentation described how "program objects can be embedded into documents" and supplied two illustrations showing interactive images (of a chessboard and the wire frame airplane) displayed inside the browser window. 
Doyle testified that, in 1998, he noticed the fact that the presentation showed the airplane image as appearing inside the browser window. 
Doyle created a file to hold all the information he found in 1998 about the Viola browser, and he labeled his file "Viola stuff." 
The "Viola Stuff" file included descriptions of two "beta" releases of the Viola br owser, a versio n 3.0 release in Feb ruary 1994, and a version 3.1 release in March 1994. 
There w ere public announcements in both cases of Internet addresses where "source and binary" code for the Viola browser could be found. 
He also found extensive links for various purported "demos" of the Viola brow ser's capabilities. 
Doyle never had possession of the Viola code dated May 12, 1993 (earlier May code) or the Viola code dated May 27, 1993 (later May Code) nor any executable binary code asserted as prior art nor had he possession of any Viola source code or executable binary code dated from either 1993 or 1994. 
Neither the earlier nor the later May codes were capable of executing the asserted prior art plotting demonstration in a system having at least one client work station and one network server coupled to said network environment, wherein said network environment is a distributed hypermedia environment. 
Doyle never had possession of any Viola reference, paper or other publication of any sort dated in 1993 that described the functionality of Viola nor was he given any details of any May 1993 demonstration of Viola software, including: who was present, what was actually demonstrated, the actual software, the functionality of the software demonstrated or how that functionality was achieved. 
Doyle was never given any written documentation or other corroborating evidence of any May 7, 1993, demonstration of Viola software. 
The Viola source code was hard to obtain. 
Wei did not want public access to his 1993 source code and he made it "nearly impossible" for the public to get it. 
Microsoft argue s that Doyle knew more than he w as saying at trial. 
They challenge his statement that he thought Raggett was referring to the TK toolkit. 
They reasoned that he had learned about Viola at the SIG-WEB conference and thus he would have know n this was wrong. 
They also contend that he could have and, inferentially, did get Viola source code. 
What was proved convincingly (and is undenied) is that Doyle knew of "Viola," but there is no proof that he knew how it purported to do what it was said to do or that it worked at all. 
He was in the position of one who knows the name of a computer file and is unable to access more than a small, insignificant portion of its contents and then only on intermittent occasions. 
I do not believe it is likely, let alone convincing, that Doyle would have, or should have, put together the fairly vague conversation's he had at SIG-WEB with an e-mail from Raggett to arrive at a conclusion that Viola was not the TK WWW browser-particularly since the meeting occurred six months prior to receipt of the e-mail. 
(Office actions rejected his application based on the U.S.C. Mercury Project, Mosaic/Khoyi and Mosaic/Koppolu.) To this I add the difficulty of getting the Viola source code. 
Microsoft did not find it easy to track it down at a later time. 
I noted on the record that there is Viola material today which I found on web history sites, but it is difficult to know when it was posted there, whether it works, and whether it is the 1993 source code. 
My observation was not pursued by any party, so I disregard it. 
In any event, I believe Doyle when he said he did not have the source code. 
Recognizing that this might be the case, Microsoft argues that what Doyle did know about Viola was enough to trigger his obligation to bring it to the attention of the Examiner during the prosecution of the `906 patent. 
The argument is addressed below. 
II. 
The Date of Invention The `906 invention was reduced to practice no later than January 27, 1994. 
It was presented on that date at a conference "Medicine Meets Virtual Reality II." 
The Materiality of What He Knew To the examiner, Doyle consistently maintained that his invention was the first instance where interactive ap plications were embedded in Web pages. 
It was this assertion that was used to distinguish prior art cited by the examiner. 
The key as he said was that the `906 patent made it. 
Were it to be prior art, I would have to decide the question of whether SIG-WEB preceded the other two dates that Doyle has offered-a reduction to practice on November 13, 1993. 
"possible to embed fully interactive external applications in Web pages thereby turning the browser into a platform for the development of entirely new kinds of application." 
III. 
The date of invention excludes the Viola Paper (dated August 16, 1994) and the Stanford Slides (dated September 20-21, 1994) from the ambit of prior art. 
Also excluded are the portions of the Viola Stuff dated after the date of invention. 
And all the Wei e-mails come after January of 1994. 
The only item left in prior art is what Doyle was told at SIG-WEB and this is clearly not prior art.2 
The Viola Paper is not prior art in any event. 
The clearest indication of Viola's capacity to deal with embedding objects is said to be in the 1994 Viola paper which also refers to the use of a tag. 
Interactivity is not described in the paper, the embedding process is not described nor is the embed text format. 
The use of type information by the browser to identify and locate an executable application or how such an application could be automatically invoked is also not revealed. 
The depicted applications (a chess board and an airplane) are not shown in the browser window. 
The likely reading of the Viola Paper is that Viola WWW uses helper applications which were included in the Examiner's analysis. 
The Stanford Slides come closer since the plane and chess board appear to be in the browser window, although from the slides one cannot tell whether the screen shots were moved into the depicted browser window since the plane seems to be in the same Unix window as in the Viola Paper. 
The chess board was not demonstrated as operational at Stanford. 
The Viola Stuff includes references to a beta 3.0 and 3.1 release of Viola WWW, but operational details are not set forth, and no source code was found when Doyle looked for it. 
3 I note in passing that even if it had been done, it has not been shown that the Exam iner could have found evidence of Viola's functionality that existed prior to the date of invention. 
There is no indication that he should have been able to find it. 
Other references are to generic statements of how one might achieve some of the goals of `906, but none of it has any meaningful detail. 
Wei's e-mails are simply claims that he invented `906 first, but there is no detail of what he did, how he did it, or to whom he demonstrated it. 
No witness has offered an opinion that any of the items in question are prior art. 
Microsoft argues that if Doyle had disclosed what he knew about the Viola browser, the Examiner might have considered that `906 was obvious. 
He might have combined the interactive program object feature of the Viola browser with the Mosiac browser. 
Doyle concedes, as he must, that "the prior art taught that good ideas in one browser could be used in a different browser." 
Microsoft makes something of this concession. 
I leave aside that the word " idea" does not fit well in the discussions of patentability. 
I assume Doyle meant "feature" or "functionality" in one browser could be used in another browser. 
Yet what remains is that Doyle would have disclosed nothing more than Wei's assertion that he achieved something. 
An inventor need not tell the Examiner about every assertion that the invention was made by another. 
Some inventors might have disclosed what Wei had said and sent the Examiner off to hunt on his or her own for source code or some other evidence of invention rather than a claim of invention, but the law does not require this to be done.3 See Manitowoc, 835 F.2d at 1415 (stating that a "mere showing that art or information having some degree of materiality was not disclosed" is insufficient to establish inequitable conduct). 
4 At trial I found there was insufficient evidence to per mit the jury to consider in validity defenses based upon Viola. 
I excluded evidence of the early May code for procedural reasons. 
I have considered both codes in this ruling only to the extent they bear on the inventors' duty of candor before the PTO-a different issue because the Exam iner is supposed to be told of things 12 End of Note There was Viola source code. 
At one time the operation of the earlier May code was shown to two Sun Microsystem engineers. 
The source code itself was not shown to the engineers, and that code was changed within a week or two into the later May code. 
There was no formal confidentiality agreement with respect to the demonstration, but circumstances demonstrate that it was private. 
The audience was limited to two persons. 
The Viola project was, in the eyes of its inventor, a work in progress. 
I infer that neither Wei nor the engineers regarded the Viola project to be ready for or to have been part of a public disclosure. 
The later May source code was given to Sun engineers, but this too, Wei sought to keep from the public. 
Neither the early nor late May codes were enabled for use in a distributed hypermedia network environment. 
The later May code did not perform a certain functionality of the `906 patent. 
The Sun engineers could not make it work. 
The source code did not disclose to a person of ordinary skill in the art, in an obvious way, how it would have to be modified to make the deficient functionality (executing the plotting demonstration) work. 
Over time, Wei made further changes to the code and tried to keep the public from getting it. 
Neither source code taught the `906 invention. 
Had either done so, Doyle did not know it. 
which might affect the decision, not solely those which are thought likely to do so. 
The procedural bar to introducing the early May code which arose from rules applicable to adversary proceedings is not applicable to the PTO process. 
IV. 
The Inventor's Intent to Deceive Doyle was, from the beginning, acutely aware of, and hopeful about, the commercial value of his invention. 
He had, of course, a financial incentive to trim the truth in this court and, as well, during the patent prosecution. 
Microsoft has some degree of financial incentive to prevail in this court, but given the evidence presented here, the financial loss Microsoft would bear under a worst case scenario is large but easily bearable. 
The financial incentive to Doyle is far greater than it is to Microsoft. 
And Doyle knew throughout the prosecution process that it would be Microsoft that, above all others, would be his adversary in litigation. 
He sought to protect the value of the invention by committing Wei to an invention date (and did a pretty good job of it). 
His testimony that this reason for committing Wei to a date never crossed his mind is untrue. 
So too is the message of his assertion that all he provided in the prosecution process was "input" to patent counsel. 
If one views, say, the order of MacArthur to his Pacific Theater commanders as "input," then one could similarly say Doyle offered only "input." 
In this sense, Doyle's statement is literally true, but the meaning he intended to convey-that he was merely a resource to the patent attorney-is not true. 
Doyle was truthful, however, when he said that he did not believe that Viola showed an embedded program object running in the browser window. 
Doyle knew and believed only that Wei claimed to have invented the `906 invention, but nothing that Wei showed to or made available to Doyle backed up that claim. 
Doyle was in the same position as an inventor who receives a claim that someone else is the true inventor. 
The law does not require that every such claim needs to be disclosed to the Examiner. 
See Manitowoc, 835 F.2d at 1415 (stating that a finding of inequitable conduct based on a failure to disclose cannot be established by "a mere showing that art or information having some degree of materiality were not disclosed") and Halliburton Co. v. Schlumberger Tech., 925 F.2d 1435, 1442 (Fed. 
Cir. 
1991) ("materiality of an undisclosed reference does not presume an intent to deceive."). 
Wei was, to Doyle's eyes, a hostile rival who alleged he had done something but avoided, if not evaded, any reasonable attempt to corroborate his claims. 
Doyle could reasonably conclude, and did so conclude, that the Examiner would face the same difficulties that Doyle had in trying to corroborate Wei's assertion. 
Because no value would be added to the Examiner's consideration of the patent, disclosure was not mandated by law. 
This was in fact what Doyle believed. 
He had no intent to deceive. 
Ordinarily when a court credits the testimony of a witness, it simply says that the witness was credible or, at times, offers a paean to the candor and demeanor of the witness. 
I have done neither because I thought Doyle was not truthful in every aspect of his testimony. 
In this regard, I have mentioned the impression he sought to leave that he was an almost passive consultant in the prosecution of the application and his denial of patentability issues when he asked Pei Wei to give a date of invention. 
I was unpersuaded by his account of an EOLAS commercial endeavor which ended badly. 
Testimony that falls short of the truth is not necessarily deliberate falsehood. 
Doyle may have convinced himself of the truth of every thing he said. 
And, even basically honest persons rewrite history on matters they believe are not central to a dispute. 
I reach the conclusion that he had no intent to deceive the PTO since he wanted to act with candor before the PTO both because it was the law and because it was too dangerous not to do so. 
From the beginning, he knew that commercialization of his patent would require arduous effort against very large enterprises. 
He could not have believed, for a moment, that Wei's claim would fail to surface. 
Wei was not quiet about what he had done. 
And Wei had the e-mails too. 
Doyle would have known that he would, someday, have to face Wei. 
Had he intended to deceive, he would, in my judgment, have destroyed nearly all of the Viola Stuff file. 
In theory, he gains some advantage by conducting the dispute over Wei's claims after the `906 patent issued. 
The presumption of validity works against inequitable conduct and invalidity defenses and burdens of proof are shifted to the defense. 
But the importance of this is not as great as it appears. 
Before the Examiner, neither Wei nor Microsoft can advocate the position taken by the inventor. 
At trial, those who put forward Wei's claim can use subpoenas to get evidence to support it and offer expert testimony to validate it. 
In the end, even the resources of the defense could not make a passable case out of Wei's claim to have invented the `906 patent. 
So I do not believe that Doyle made a tactical decision to forego disclosure because of the advantages of defending his invention after patent issued. 
He made the decision because he believed that Wei was full of hot air and he had nothing concrete to display to an Examiner. 
So I credit his testimony that he had no intent to deceive the Examiner. 
In this case, the Wei claim, as known to Doyle, was of limited materiality at best, and he had no intent to deceive. 
End of Note CONCLUSIONS OF LAW 1. 
The Court has jurisdiction over the offered defense of inequitable conduct. 
2. The defendant has failed to prove that the inventors or assignees of the patent failed in their duty of candor in the patent prosecution before the United States PTO. 
ENTER: James B. Zagel United States District Judge DATE: 
