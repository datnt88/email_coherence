Regarding yesterday's teleconference, can people confirm the following: - we agree that we need to create an errata to change the definition of "prompt" in the "Glossary of Terms and Definitions" section of the Guidelines. 
There are inconsistencies in the definition itself. 
We have not decided what the change will be although Phil has proposed that we change the word "requires" to "requests" in the sentence "A prompt requires author response." 
- we agree that we need to make the meaning of the guideline clear and explicit in the techniques but we do not have a compelling reason to change the wording of the guideline itself. 
- we agree that prompts should be on an author configurable schedule, that they should be consistent with the look and feel of the application and that the author can actively choose to cancel the prompt. 
The issues we need to address are: 1. - does "prompt the author" mean that the software initiates a request for information at some point in the authoring process that the author is compelled to respond to or cancel or does software comply with the guideline if the request is present and visible but need not be responded to and could be avoided when certain authoring strategies are used (Phil's loophole)? 
2. Should the author be able to turn off all prompts in a single step? 
We need to clearly distinguish what the additional requirements are in 3.1 beyond the requirements in guidelines 4 and 5 relative to equivalent alternative information. 
Jutta I agree. 
I tend to agree with Phil, although I think the whole "pop-up in your face" discussion may have been too black and white. 
For instance, a developer could get around the problem of explicit prompting by adding a short alert (icon and explanatory text) to a pre-existing save or publish dialog. 
In this scenario, the author is already being interrupted with a request for information ("enter file name", "confirm write over", confirm publish to web", etc.) and an accessibility warning could be added without necessitating extra mouse clicks. 
Not for a universal (all future pages) setting. 
Cheers, Jan Jan Richards jan.richards@utoronto.ca 
Access Software Designer Adaptive Technology Resource Centre University of Toronto (416) 946-7060 Prompt issues "vote": I abstain. 
Love. 
ACCESSIBILITY IS RIGHT - NOT PRIVILEGE some stuff I also agree with. 
JR JT I tend to agree with Phil, although I think the whole "pop-up in your face" discussion may have been too black and white. 
For instance, a developer could get around the problem of explicit prompting by adding a short alert (icon and explanatory text) to a pre-existing save or publish dialog. 
In this scenario, the author is already being interrupted with a request for information ("enter file name", "confirm write over", confirm publish to web", etc.) and an accessibility warning could be added without necessitating extra mouse clicks. 
CMN I had a look back over the minutes and drafts for August/september last year. 
It seems we had agreed that a prompt could be part of another prompt. 
We also agreed that the wording of the checkpoint would be prompt, not alert/inform (as per 4.1) and that a prompt required some kind of response. 
JR JT Not for a universal (all future pages) setting. 
On stardate 26 Apr 2000, Jutta Treviranus sent a subspace communication stating: Agreed. 
Agreed. 
Agreed. 
I prefer the second definition, allowing the prompt to be ignored if someone is just laying out a rough outline, or in the case of a word processor, not even intending to publish on the web. 
Yes. 
I think one button or menu choice that says "Accessibility features on" or something like that is more likely to be used than something that requires checking several boxes to turn off, and on. 
I'll have to get back to you on that one. 
"Someone's got to take the responsibility if the job's going to get done!! Do you think that's easy?!?" Gregory Peck - The Guns Of Navarone. 
interrupted with a request for information ("enter file name", "confirm write over", confirm publish to web", etc.) and an accessibility warning could be added without necessitating extra mouse clicks." 
PJ: I have never seen additional warning added to the "save" prompt. 
For example, I don't recall seeing any warnings/prompts for misspelled words, missing tags, or invalid markup type things when I save the document I'm editing. 
I have seen the option for checking valid markup, spelling, etc., but I as the user still choose to be warned. 
Saved only prompted me for what was necessary - the file name - and if it prompted me for more I feel it would be problematic due to ease of understanding. 
Generally prompts are harder to use when they have multiple purposes. 
As I said in the last call, if the tool has some known "loop-hole" then there should be some indication, status message, warning light, or something that alerts the author of accessibility errors, but doesn't unnaturally prompt the author inconsistent with the user interface design of the tool. 
CMN: I had a look back over the minutes and drafts for August/September last year. 
It seems we had agreed that a prompt could be part of another prompt. 
We also agreed that the wording of the checkpoint would be prompt, not alert/inform (as per 4.1) and that a prompt required some kind of response. 
PJ: That's how I remember it also. 
The issue is whether a tool is compliant if it has "loop holes". 
I think it can be because of the others words in the guideline 3 such as: "Support the creation..." not force or ensure or guarantee "without constraining the creativity of the author." 
"authoring tool developers should attempt to facilitate and automate the mechanics..." "at appropriate times ..." "tool can assist" "tool can reinforce" PJ: I do NOT like that wording - of being able to turn off all prompting in a single step, but I do like the idea of having an accessibility menu option that can be selected and used or not. 
If the user wants to "turn off" accessibility prompting then the integration probably wasn't done correctly. 
Having a button to turn off bad integration/design is not a good technique. 
Regards, Phill Jenkins Inline... Heather Swayne Program Manager Microsoft Accessibility and Disabilities Group DICTATED WITH DRAGON NATURALLYSPEAKING PROFESSIONAL (VERSION 4.0)-and as I learned through usability tests, any errors made in this document were made by the software -- NOT ME! Regarding yesterday's teleconference, can people confirm the following: - we agree that we need to create an errata to change the definition of "prompt" in the "Glossary of Terms and Definitions" section of the Guidelines. 
There are inconsistencies in the definition itself. 
We have not decided what the change will be although Phil has proposed that we change the word "requires" to "requests" in the sentence "A prompt requires author response." 
[hls] -- agree - we agree that we need to make the meaning of the guideline clear and explicit in the techniques but we do not have a compelling reason to change the wording of the guideline itself. 
[hls] -- agree - we agree that prompts should be on an author configurable schedule, that they should be consistent with the look and feel of the application and that the author can actively choose to cancel the prompt. 
The issues we need to address are: 1. - does "prompt the author" mean that the software initiates a request for information at some point in the authoring process that the author is compelled to respond to or cancel or does software comply with the guideline if the request is present and visible but need not be responded to and could be avoided when certain authoring strategies are used (Phil's loophole)? 
[hls] - I of course agree with the latter, products would comply if they effectly notify the user that Alt+text is needed. 
2. Should the author be able to turn off all prompts in a single step? 
[hls] - I don't see how you could prevent this. 
We need to clearly distinguish what the additional requirements are in 3.1 beyond the requirements in guidelines 4 and 5 relative to equivalent alternative information. 
Jutta Might this attached image qualify as (part of) prompting? 
Alt=A screenshot of the homesite "Save As" dialog with a small yellow exclamation mark icon added to the Save button. 
The icon references a warning just below that reads "This file contains elements that are missing required alternative content. 
Jan Jan Richards jan.richards@utoronto.ca 
Access Software Designer Adaptive Technology Resource Centre University of Toronto (416) 946-7060 According to the definition of prompt ("requires author response") this bitmap does not comply, it is informing the user of an error as opposed to prompting them to input information. 
Heather Swayne Program Manager Microsoft Accessibility and Disabilities Group DICTATED WITH DRAGON NATURALLYSPEAKING PROFESSIONAL (VERSION 4.0)-and as I learned through usability tests, any errors made in this document were made by the software -- NOT ME! Might this attached image qualify as (part of) prompting? 
Alt=A screenshot of the homesite "Save As" dialog with a small yellow exclamation mark icon added to the Save button. 
The icon references a warning just below that reads "This file contains elements that are missing required alternative content. 
Jan Jan Richards jan.richards@utoronto.ca 
Access Software Designer Adaptive Technology Resource Centre University of Toronto (416) 946-7060 heather commented upon jan's screen shot: quote According to the definition of prompt ("requires author response") this bitmap does not comply, it is informing the user of an error as opposed to prompting them to input information. 
unquote but if the user was offered a configuration setting that allowed the tool to prevent him or her from saving until the errors were fixed, provided a "Fix Now" mechanism, or simply displayed the warning, it _WOULD_ pass (provided, of course, that -- in the last instance -- when the file was opened again for editing, the user was prompted to fix the invalid and inaccessible markup, with the options: "Remind Me Later" or "Fix Now" (which could invoke a repair wizard); if the tool offers HTTP PUT, then i would argue that it absolutely MUST explicitly warn the author that he or she is about to put inaccessible/invalid source on the web, and provide him or her with a "Fix It First" option... the tool should still allow the author to ignore the warning and put the inaccessible slash invalid content on the web, but you, as the developer, would have forced the author to make a decision and perform an explicit over-ride action in order for him or her to put inaccessible content on the web, so like Pilate, you could then wash your hands of that particular author's conscious decision to disregard the prompt, and justly claim conformance... yes, this is a final line of defense strategy, and it sort of smacks of Willie Wonka's "no... don't... come back..." warnings to the children who wandered off from the tour of his chocolate factory, but fact remains that there are instances where a user MUST be prompted, and this is one of them... heather, as william and i argued today (and have been arguing for the past year) the issue is really one of configurability -- if the user has a choice (warn me, prompt me, physically assault me), then the checkpoint is satisfied -- as long as one of the range of choices is a prompt that requires user reaction... as for "out-of-the-box" prompts and alerts, the user could choose/set the level of prompting during the installation routine, provided that -- if the user chooses "No Prompts or Alerts", he or she is presented with a "Readme" type dialog box/application window, before the installation process ends, in which (a) the benefits of checking for accessibility, (b) the means of checking for accessibility available through the tool, and (c) how to turn them on, off, and configure them are explained _in full_ to the user... i would also argue that in order to comply, you would have to provide a warning and a "more information" button when the user who has turned off all accessibility checking issues the "Save" command, as well as a "Fix It Now" mechanism (which i would prefer to "see" on the dialog that pops up when the user who has disabled all of the accessibility checking/prompting/alerting features of the tool off, rather than as part of the "More Information" interface, but that is, i suppose an implementation decision... one of microsoft's strong suits is configurability -- Word, IE, and a host of other MS products allow for extensive configurability -- why not its authoring tools? 
gregory The optimist thinks that this is the best of all possible worlds; the pessimist knows it is. 
Gregory J. Rosmaita unagi69@concentric.net 
Webmaster &amp; Minister of Propaganda The Visually Impaired Computer Users' Group of the New York City Metropolitan Area (VICUG NYC) I'm not sure I agree, Heather. 
On April 19th, CMN wrote the following: "I would prefer us to use the more common definition of prompt, that it requires author response, with the proviso that a prompt can have multiple parts, for example the different pieces of stuff required for an image, or can cover a multitude of things, for example "there are accesibility errors in this document - save anyway?"" 
This example would inform the user without requiring anything more than pressing Cancel to proceed. 
I think that a warning in the Save dialog (i.e. my example bitmap) might accomplish the same thing as CMN's example because the user has the choice of whether to press Save or Cancel on the basis of this new information. 
Jan JR: Jan Richards jan.richards@utoronto.ca 
Access Software Designer Adaptive Technology Resource Centre University of Toronto (416) 946-7060 Proposed revised definition: Prompt, as used in these guidelines, means something which requires author response (for example a warning box which must be dismissed, an interactive dialoigue or wizard). 
Note 1: A required prompt (as in checkpoint 3.1) may be included as part of a larger dialogue or wizard process. 
In that case it must be clear that it is an important field, but need not be 'required' (i.e. it is not necessary that the user enter content or select null content to continue the authoring process) In addition I propose an erratum for 3.1: add Note: Prompting may be done at any time in the authoring process. 
For example it may occur once for each missing alternative, or as a single prompt at publish or close or save reminding the author that there are object(s) that require alternative content to be added. 
Charles Do You Yahoo!? Send instant messages &amp; get email alerts with Yahoo! 
Messenger. 
On stardate 3 May 2000, Charles McCathieNevile sent a subspace communication stating: With the inclusion of the note above, I think this is a workable solution, at least in regards to programs that do more than web authoring, like Word, Wordperfect, Excel, etc. 
As the new guy here, I was wondering something. 
Was it ever discussed in the group about using different guidelines based on what type of program was being used? 
For instance, I would feel that a dedicated web authoring tool (HTML or XML editor) should have stronger accessibility features than a "general purpose" word processor et al that merely has a "save as HTML" feature. 
Any one who is serious about the web sites the create or maintain will almost certainly be using a dedicated web design program rather than a GP program. 
And those are the people most likely to use accessibility options if presented them in an alert or prompt that would come up when a image or whatever is used. 
Someone using a GP program isn't going to want to have to deal with such interruption when when typing a letter or such with pictures in it. 
For them, a prompt when saving as HTML, or the blue squiggly line we keep talking about, would suffice I feel. 
If this was discussed before, and rejected, I was wondering, why? 
Member: HWG Governing Board &amp; Assistant Secretary I don't recall explicit discussion framed in those terms, although similar issues come up from time to time (for example the idea of a priority 0 - make tools that make it possible to create accessible websites - such as notepad, emacs, etc). 
I would argue that it is not appropriate, on the basis that it doesn't really matter to the end user what product is used (and the accessibility of all products potentialy matters to users), to provide a similar level of "approval" for tools that did not achieve a similar level of accessibility. 
Cheers Charles [snip] As the new guy here, I was wondering something. 
Was it ever discussed in the group about using different guidelines based on what type of program was being used? 
For instance, I would feel that a dedicated web authoring tool (HTML or XML editor) should have stronger accessibility features than a "general purpose" word processor et al that merely has a "save as HTML" feature. 
Any one who is serious about the web sites the create or maintain will almost certainly be using a dedicated web design program rather than a GP program. 
And those are the people most likely to use accessibility options if presented them in an alert or prompt that would come up when a image or whatever is used. 
Someone using a GP program isn't going to want to have to deal with such interruption when when typing a letter or such with pictures in it. 
For them, a prompt when saving as HTML, or the blue squiggly line we keep talking about, would suffice I feel. 
If this was discussed before, and rejected, I was wondering, why? 
Sorry everyone, I know I should have set regrets but 1) my time sense seems completely off (my jet lag is always terrible when going west-to-east) and 2) more importantly, I'm struggling here to get all computers/networks/etc. set up, connected, and so on. 
I'll be back to normal next week. 
Just trying to catch up with part of my email... I'll definitely meet everyone (who's there) at the face-to-face here in Amsterdam; I'll be there both Thusrday and Friday. 
I'll do my utmost to read evrything I need to before then. 
Cheers, Marjolein Katsma HomeSite Help - http://hshelp.com/ Bookstore for Webmasters - http://hshelp.com/bookstore/bookstore.html 
