(TOP (S (S (VP (AUXG Having) (VP (VBZ attributes) (SBAR (WHNP (WDT that)) (S (VP (VBP allow) (S (NP (PRP you)) (VP (TO to) (ADVP (RB readily)) (VP (VB determine) (SBAR (IN if) (S (NP (DT the) (NN type)) (VP (AUX is) (NP (JJ complex) (NNP vs) (NN simple)))))))))))) (CC or) (VP (VBD named) (NP (NNP vs) (JJ anonymous))))) (VP (MD would) (VP (VB seem) (S (VP (TO to) (VP (AUX be) (ADJP (JJ helpful))))))) (. .)) )
(TOP (S (S (NP (JJ Such)) (VP (ADVP (RB as) (: :) (RB readonly)) (VBP attribute) (NP (JJ boolean) (NN isSimple)))) (: ;) (S (ADVP (RB readonly)) (VP (VBP attribute) (NP (NP (JJ boolean) (NN isAnonymous)) (PRN (: ;) (-LRB- -LRB-) (VP (MD may) (VP (AUX be) (ADJP (JJ redundant) (PP (IN with) (NP (JJ typeName) (JJ ==) (NN null)))))) (-RRB- -RRB-)))))) )
(TOP (S (NP (NNP XML) (NNP Schema) (NNP Datatypes)) (VP (AUX has) (NP (NP (NNS equivalents)) (PP (IN for) (NP (NP (DT the) (organization (CD DTD)) (NN attribute) (NNS types)) (SBAR (WHNP (WDT which)) (S (VP (MD could) (VP (AUX be) (VP (VBN used) (PP (RB instead) (IN of) (NP (NP (NN null)) (CC and) (NP (NN attribute) (NN type) (NN property))))))))))))) (. .)) )
(TOP (S (NP (DT The) (JJ current) (NN definition)) (VP (MD would) (RB not) (VP (VB provide) (NP (NP (DT an) (JJ easy) (NN way)) (SBAR (S (VP (TO to) (VP (VB distinguish) (PP (IN between))))))))) (: :)) )
(TOP (NP (NNP and)) )
(TOP (S (S (NP (DT An) (JJ anonymous) (NN type)) (VP (MD could) (VP (AUX be) (VP (VBN nested) (NP (JJ many) (NNS levels)) (PRT (RP down)) (PP (IN in) (NP (DT the) (NN content) (NN model))))))) (, ,) (NP (DT a) (JJ containingElements) (NNP NameList) (NN attribute)) (VP (MD could) (VP (AUX be) (VP (VBN used) (S (VP (TO to) (VP (VB enumerate) (NP (DT the) (NN element) (NNS names)))))))) (. .)) )
(TOP (PP (IN For) (NP (DT the) (NN schema)) (: :)) )
(TOP (NP (NP (DT The) (NNP TypeInfo)) (VP (VBN associated) (PP (IN with) (S (NP (NP (DT the) (NN world) (NN element)) (PP (IN in) (NP (UH hello)))) (VP (VBG xmlns=) (NP (`` ``) (JJ http) (: :) (NNS //www.example.com/typeinfo) ('' ''))))))) )
(TOP (S (NP (JJ world/) (NN /hello)) (VP (MD Would) (VP (AUX have) (NP (NP (JJ typeName) (JJ ==) (NN null)) (, ,) (NP (JJ typeNamespace) (JJ ==) (NN null)) (, ,) (NP (NP (JJ isSimple) (NNS ==)) (ADVP (JJ true))) (, ,) (NP (NN containingElements.getNamespace)) (PRN (-LRB- -LRB-) (NP (CD 0)) (-RRB- -RRB-)))))) )
(TOP (NP (CD ==) (`` ``) (JJ http) (: :) (NNS //www.example.com/typeinfo) ('' '') (, ,)) )
(TOP (NP (NP (NNP containingElements.getName)) (PRN (-LRB- -LRB-) (NP (CD 0)) (-RRB- -RRB-))) )
(TOP (NP (NP (JJ ==) (`` ``) (INTJ (UH hello)) ('' '') (NN containingElements.getNamespace)) (PRN (-LRB- -LRB-) (NP (CD 1)) (-RRB- -RRB-))) )
(TOP (NP (NP (JJ ==) (NN null)) (PRN (-LRB- -LRB-) (SBAR (IN if) (S (NP (NN elementFormDefault)) (VP (SYM =) (ADJP (JJ false))))) (-RRB- -RRB-)) (CC or) (`` ``) (NP (NP (NNS http)) (: :) (NP (CD //www)) (: ...)) ('' '') (NP (NP (JJ containingElements.getName)) (PRN (-LRB- -LRB-) (NP (CD 1)) (-RRB- -RRB-)))) )
(TOP (NP (JJ ==) (NN world)) )
(TOP (S (NP (DT This) (NN request)) (VP (VBZ goes) (PP (IN into) (NP (NP (DT the) (NN debate)) (PP (IN of) (SBAR (WHNP (WHNP (WRB how) (JJ much)) (PP (IN of) (NP (DT the) (NNP PSVI)))) (S (NP (NNP API)) (VP (MD should) (VP (AUX be) (VP (VBN included) (PP (IN on) (NP (DT this) (NNP interface)))))))))))) (. .)) )
(TOP (S (NP (PRP We)) (VP (VBP judge) (S (NP (DT this) (NN one)) (VP (TO to) (VP (AUX be) (NP (NP (DT a) (JJ real) (NNP PSVI) (NN addition)) (PP (IN than) (NP (NP (DT a) (NN type)) (NP (JJ generic) (CD one))))))))) (. .)) )
(TOP (S (S (NP (DT An) (NN application)) (VP (MD can) (ADVP (RB always)) (VP (VB know) (S (NP (DT the) (NN schema)) (VP (VB apply) (PP (TO to) (NP (DT the) (NN document))) (PP (IN by) (S (VP (VBG checking) (NP (NP (DT the) (JJ schema-type) (NN parameter)) (PP (IN of) (NP (DT the) (NN configuration) (NN object)))))))))))) (, ,) (CC so) (S (NP (EX there)) (VP (AUX is) (NP (NP (DT a) (NN way)) (SBAR (S (VP (TO to) (VP (VB distinguish) (NP (PRP them))))))))) (. .)) )
(TOP (NP (NNP Philippe)) )
(TOP (FRAG (WHADVP (WRB Why)) (RB not) (VP (VBG looking) (PP (IN at) (NP (NP (DT the) (NNS ancestors)) (PP (IN of) (NP (NP (DT the) (NN node)) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (NNP TypeInfo)) (VP (AUX is) (VP (VBN attached)))))))))) (. ?)) )
(TOP (S (NP (ADJP (JJ typeName) (CC and) (JJ typeNamespace)) (NN cannot)) (VP (AUX be) (NP (DT both) (NN null)) (SBAR (IN if) (S (NP (EX there)) (VP (AUX is) (NP (DT a) (NN declaration)))))) (. .)) )
(TOP (S (PP (IN In) (NP (PRP$ your) (NN case))) (, ,) (NP (PRP it)) (VP (MD will) (VP (VBN exposed) (NP (NP (DT the) (DT the) (UCP (NN namespace) (CC and) (JJ local)) (NN name)) (PP (IN of) (NP (DT the) (JJ corresponding) (JJ anonymous) (NN type) (NN name)))) (, ,) (PP (IN with) (S (NP (JJ anonymous) (NN type) (NN name)) (VP (AUXG being) (NP (NP (DT an) (JJ implementation-defined) (, ,) (ADJP (RB globally) (JJ unique)) (JJ qualified) (NN name)) (VP (VBN provided) (PP (IN by) (NP (DT the) (NN processor))) (PP (IN for) (NP (NP (DT every) (JJ anonymous) (NN type)) (VP (VBN declared) (PP (IN in) (NP (DT a) (NN schema))))))))))))) (. .)) )
(TOP (NP (NNP Philippe)) )
