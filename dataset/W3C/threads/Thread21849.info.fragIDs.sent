From the current state of affairs, the web is based on URIs. 
From what I see, this is unlikely to change and I'm cool with this, expecially because URIs that are general enough to indicate anything, even concepts that are not "locatable". 
What do you mean by, "not locatable"? 
There are things, like abstract concepts, which may not be objects you find on the web, but they are things which one describe. 
Then, please, tell me: if these concepts are not locatable, why are we supposed to use the HTTP protocol to indicate them? 
I know, I know: in order to keep them unique using the domain name facilities... but ask yourself why in hell a namespace URI such as 
The XSLT namespace is in fact An engineer who comes across a document which uses that namespace can look it up, and get information leading him or her to the XSTL specification. 
This is useful. 
So while a namespace seems like an abstract concept, to actually refer to it by the name of something which can be looked up is variable. 
In the semantic web, information can be used not only be a person, but by a machine. 
So while the concept 
of "two-digit US state code" may be a an abstract property, in fact one can find the list of them and the correlation with various other properties. 
This is powerful. 
is not uri://w3.org/xslt/1.0 
where: 1) there is no misleading since the protocol clearly indicate its "unlocatable" status 
You presumably mean that no one should ever look up what the owner of the name said about it. 
You need the "urn:" prefix not "uri:". 
But betware that many urn: subschemes are actually less useful because they are waiting for some sort of lookup mechanism, and to the extent they have such a mechanism, they become just clumsier versions of http: 
2) the domain-based uniqueness is maintained, no, improved, given that virtualhosts are not considered meaningful (there is no location taking place, just unique identification) 
The difference is an attitude of mind, and a mode of use. 
Think of what you would like from your "uri:" space above, and use http: space like that. 
Use them like names not like locations. 
They are not locations. 
3) version numbers are used instead of years. 
this makes them much easier to remember (you remember the version of the namespace you want to associate your content with, not the year that version was published [unless the year *is* the version, like in win95/98/2000/2003, but it's not the case here]) 
That is a question of web site management. 
The advantage of years is that in 100 years time, when someone wants to reuse they string "xslt", they will not have a problem. 
Please, tell me why this hasn't been since day one, because I'm going crazy on this. 
Think of them as names. 
Stefano. 
Ok, I found it :) by a little human googeling around. 
But I doubt that a machine could have found it, based on the information returned from that URI. :( It's just so very dissappointing that even the W3C has not seen fit to provide a standard path from a namespace URI to a normative specification document - if for no other purpose than just to show them to humans. 
Seth Russell 
(sorry this email was delayed while I was traveling - in heap of windows) 
Googeling? 
If I click on the namespace URI, I get a page saying """This is an XML namespace defined in the XSL Transformations (XSLT) Version 1.0 specification. 
with a link to the spec itself. 
For a *human* user, that's pretty direct, isn't it? 
We are trying! 
It is slow when an area spans very different user communities. 
