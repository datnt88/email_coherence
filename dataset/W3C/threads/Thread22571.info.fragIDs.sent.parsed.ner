(TOP (S (NP (PRP I)) (VP (AUX am) (ADVP (NN kind) (IN of)) (VP (VBN lost) (ADVP (RB here)))) (. .)) )
(TOP (S (NP (PRP$ my) (NN code)) (VP (AUX is) (NP (DT the) (NN following))) (. .)) )
(TOP (S (S (NP (PRP I)) (VP (AUX have) (NP (NP (DT a) (JJ -LSB-test) (JJ -RSB-) (NN org.apache.xerces.dom.DOMExceptionImpl)) (: :) (NP (NP (CD DOM006) (NN Hierarchy) (NN request) (NN error)) (NP (JJ -LSB-test) (JJ -RSB-) (NNS org.apache.xerces.dom.DOMExceptionImpl)))))) (: :) (S (NP (CD DOM006) (NN Hierarchy)) (VP (VB request) (NP (NP (NN error)) (PP (IN on) (NP (NP (DT the) (JJ appendChild) (NN call)) (PP (IN in) (NP (NN insertFragment) (NN method)))))))) (. .)) )
(TOP (S (SBAR (IN If) (S (NP (PRP I)) (VP (VB remove) (NP (DT this) (CD two) (NNS lines))))) (NP (PRP It)) (VP (VBZ works) (ADJP (RB really) (JJ fine))) (. .)) )
(TOP (SQ (MD Can) (NP (NN anyone)) (VP (VB help) (INTJ (UH please))) (. .)) )
(TOP (S (NP (JJ main) (NNP DocumentImpl) (NN docum)) (VP (SYM =) (NP (JJ new) (NNP DocumentImpl)) (PRN (-LRB- -LRB-) (FRAG (-RRB- -RRB-) (: ;) (X (NP (NP (NP (JJ DocumentFragment) (NN docC=requeteCollecte.cpgnCreation)) (PRN (-LRB- -LRB-) (NP (NN array) (, ,) (NN dateModif) (, ,) (NN docum)) (-RRB- -RRB-))) (: ;) (NP (NP (NNS //)) (SBAR (S (NP (PRP I)) (VP (VBP create) (NP (NP (DT the) (NN fragment)) (PP (IN with) (NP (DT this) (NN method)))))))) (: :) (NP (NNP DocumentFragment) (NNP doc))) (SYM =)) (NP (NN docum.createDocumentFragment))) (-LRB- -LRB-) (-RRB- -RRB-))) (: ;)) )
(TOP (S (NP (NNP Document) (NNP doc)) (VP (SYM =) (NP (NP (NN requeteCollecte.insertFragment)) (PRN (-LRB- -LRB-) (INTJ (UH docC) (, ,) (NN docum)) (-RRB- -RRB-)))) (: ;)) )
(TOP (S (NP (JJ public) (NNP Document) (NN insertFragment)) (PRN (-LRB- -LRB-) (NP (NP (NNP DocumentFragment) (NN fragment)) (, ,) (NP (NNP Document) (NNP doc))) (-RRB- -RRB-)) (SBAR (IN if) (PRN (-LRB- -LRB-) (NP (NNP doc) (. !) (NN =null)) (-RRB- -RRB-))) (NP (NN Element) (NN element)) (VP (SYM =) (NP (NP (NN doc.createElement)) (PRN (-LRB- -LRB-) (NP (`` ``) (NN creation) ('' '')) (-RRB- -RRB-)))) (: ;)) )
(TOP (S (S (ADVP (RB doc.appendChild)) (PRN (-LRB- -LRB-) (NN element) (-RRB- -RRB-)) (: ;) (NP (NNP NodeList) (NN list)) (VP (SYM =) (NP (NNS fragment.getChildNodes)))) (-LRB- -LRB-) (-RRB- -RRB-) (: ;)) )
(TOP (S (SBAR (IN if) (S (VP (PRN (-LRB- -LRB-) (NP (NN list) (. !)) (NP (NN =null)) (-RRB- -RRB-)) (PP (IN for) (NP (-LRB- -LRB-) (JJ int) (NN i=0))) (PRN (: ;) (S (NP (PRP i)) (ADJP (JJ list.getLength))) (-LRB- -LRB-) (-RRB- -RRB-))))) (: ;) (NP (NNS i++)) (-RRB- -RRB-)) )
(TOP (NP (NP (NNP doc.appendChild)) (PRN (-LRB- -LRB-) (NP (NP (NNP list.item)) (PRN (-LRB- -LRB-) (NP (NNP i)) (-RRB- -RRB-))) (-RRB- -RRB-)) (: ;)) )
(TOP (S (S (NP (NN NamedNodeMap) (NN att)) (VP (SYM =) (NP (NNS fragment.getAttributes)))) (-LRB- -LRB-) (-RRB- -RRB-) (: ;)) )
(TOP (FRAG (IN if) (PRN (-LRB- -LRB-) (ADJP (JJ att) (. !) (JJ =null)) (-RRB- -RRB-)) (PP (IN for) (NP (PRN (-LRB- -LRB-) (NP (NP (JJ int) (NNS j=0)) (PRN (: ;) (ADJP (ADJP (NNP j) (JJ att.getLength)) (-LRB- -LRB-)) (-RRB- -RRB-))) (: ;) (NP (CD j++)) (-RRB- -RRB-)) (JJ doc.appendChild))) (PRN (-LRB- -LRB-) (NP (NP (NN att.item)) (PRN (-LRB- -LRB-) (NP (NNP j)) (-RRB- -RRB-))) (-RRB- -RRB-)) (: ;) (VP (VB return) (NP (NNP doc))) (: ;) (NP (NNP Armelle) (NNP Clech))) )
(TOP (S (ADVP (RB Armelle)) (, ,) (NP (DT A) (NN Document)) (VP (MD can) (VP (AUX have) (NP (NP (QP (RB only) (CD ONE)) (NN child)) (PP (IN of) (NP (NN type) (NN ELEMENT_NODE))) (PRN (-LRB- -LRB-) (S (NP (DT this)) (VP (AUX is) (NP (DT the) (`` ``) (NN document) (NN element) ('' '')))) (-RRB- -RRB-))))) (. .)) )
(TOP (S (S (VP (VB see) (NP (organization (FW DOM)) (FW spec)))) (: :) (S (SBAR (IN If) (S (NP (PRP you)) (VP (VBP replace) (NP (NP (NN doc.appendChild)) (PRN (-LRB- -LRB-) (NP (CD ....)) (-RRB- -RRB-)) (PP (IN by) (NP (NN element.appendChild))))))) (LST (-LRB- -LRB-) (: ...) (-RRB- -RRB-)) (PP (IN in) (NP (NN insertFragment))) (NP (DT this)) (VP (MD should) (VP (VB solve) (NP (PRP$ your) (NN problem)) (SBAR (RB even) (IN if) (S (NP (PRP I)) (VP (AUX 'm) (ADJP (RB not) (JJ sure) (SBAR (S (NP (PRP it)) (VP (MD will) (VP (VB give) (NP (NP (DT the) (NN result)) (SBAR (S (NP (PRP you)) (VP (AUX are) (VP (VBG expecting) (NP (NN ..)))))))))))))))))) (. .)) )
(TOP (NP (NNP Christophe)) )
(TOP (S (NP (DT This) (NN mailing) (NN list)) (VP (AUX is) (VP (VBN meant) (S (VP (TO to) (VP (VB discuss) (NP (NP (NNS aspects)) (PP (IN of) (NP (DT the) (organization (NNP DOM)) (NNP *) (NN specification) (NN *))))))))) (. .)) )
(TOP (S (NP (NP (NNS Questions)) (PP (IN about) (NP (JJ specific) (NNS implementations)))) (VP (MD should) (VP (AUX be) (VP (VBN sent) (ADVP (RB elsewhere))))) (. .)) )
(TOP (S (PP (IN For) (NP (NNP Xerces-J))) (NP (DT the) (JJ right) (NN list)) (VP (AUX is) (ADJP (JJ xerces-j-dev))) (. .)) )
(TOP (S (VP (VB See) (NP (NP (NNP Arnaud) (NNP Le) (NNPS Hors)) (: -) (NP (NP (organization (NNP IBM)) (NNP Cupertino)) (, ,) (NP (organization (NNP XML) (NNP Technology) (NNP Group))))))) )
