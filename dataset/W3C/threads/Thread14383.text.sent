The purpose of this strawman proposal is not to present a full solution but rather to provide a possible option with the intent to generate discussion and bring out new concepts which may not have been explored yet. 
This is presented in the hopes that it will provoke thought in new directions. 
Straw Man Compliance Model for WCAG 2.0: 1. Checkpoints do not have priorities. 
All checkpoints ARE REQUIRED. 
There is no such thing as an optional checkpoint (although there may be inapplicable checkpoints). 
2. Each technique identifies one or more technologies to which it applies. 
The technologies are: Any - Applies to all Design - Applies to any application in which the user will interface with the content in a manner specified by the content or markup author (and not by the user agent designer) Generated - Server-side programs which generate content, either in a batch or on the fly CSS - Cascading Style Sheets level 1 or 2 CSS1 - Cascading Style Sheets level 1 CSS2 - Cascading Style Sheets level 2 Java - Java applets and applications HTML - HTML 4.01, 4.0, 3.2, or 2.0 HTML4 - HTML 4.01 or 4.0 SMIL - Synchronized Multimedia Integration Language SVG - Scalable Vector Graphics XHTML - XHTML 1.0 or 1.1 XHTML1 - XHTML 1.0 XHTML1.1 - XHTML 1.1 (Modularized XHTML) XML - Any XML-compliant language XSLT - Extensible Stylesheet Language Transformations XSL-FO - Extensible Stylesheet Language Formatting Objects The lists above are -not- exhaustive. 
3. 
Each technique has a compliance statement which indicates how the technique satisfies the requirements of the checkpoint. 
Each compliance statement is specific to one or more technologies. 
Compliance is stated as follows: A. Minimal compliance Applying this single technique is sufficient to remove the most serious of accessibility barriers and can be considered minimal satisfaction of the checkpoint. 
(Note: Not all checkpoints will have minimal compliance techniques for all technologies.) B. Partial compliance Applying this technique in addition to any for minimal compliance will remove serious accessibility barriers; however, applying a single such technique alone does not constitute full compliance with the checkpoint. 
(Note: Not all checkpoints will have partial compliance techniques for all technologies.) C. Full compliance Applying this technique in addition to any for minimal compliance will remove nearly all accessibility barriers. 
(Note: Not all checkpoints will have full compliance techniques for all technologies.) 
One or more partial compliance techniques, when combined with minimal compliance techniques, may constitute full compliance with the checkpoint; these are noted in the compliance statements for the specific techniques. 
4. It is currently not defined how one is able to comply with a checkpoint if it is inapplicable, or if there are no defined techniques for a given technology. 
This is a matter for discussion at the face-to-face meeting and the mailing list. 
Examples: In the examples below I have taken the first checkpoint for each of the six guidelines in the 28 September 2000 working draft of WCAG 2.0, and added techniques. 
These are not complete and are meant merely to illustrate how this proposal would work -- not to suggest that these should be the final techniques for each checkpoint. 
Guideline 1: Design content that can be presented visually, auditorily, or tactually, according to the needs and preferences of the user. 
1.1 Ensure, by providing text equivalents to auditory and graphical presentations as necessary, that every component of a document, web page, or multimedia presentation can be rendered as text in a standard character set. 
Techniques: 1.1.1 (Any) Create a version of the content which does not use auditory and graphical presentation. 
COMPLIANCE: This technique minimally satisfies Checkpoint 1.1. 
1.1.2 (HTML, XHTML): Use the alt attribute on the img tag to specify textual equivalents for images. 
COMPLIANCE: This technique partially satisfies Checkpoint 1.1. 
1.1.3 (HTML4, XHTML): Use the longdesc attribute on the img tag to specify long descriptions of complex images. 
COMPLIANCE: This technique partially satisfies Checkpoint 1.1. 
When used with Technique 1.1.2, this fully satisfies Checkpoint 1.1 for images. 
Guideline 2: Separate content and structure from presentation and explicitly define significant structural or semantic distinctions in markup or in a data model. 
2.1 Use markup languages properly and in accordance with specification. 
Techniques: 2.1.1 (HTML4): Use valid HTML 4.01, or 4.0 according to specification. 
COMPLIANCE: This technique minimally satisfies Checkpoint 2.1. 
2.1.2 (XHTML1): Use valid XHTML 1.0 according to specification. 
COMPLIANCE: This technique minimally satisfies Checkpoint 2.1. 
2.1.3 (CSS): Use valid CSS level 1 or CSS level 2 according to specification. 
COMPLIANCE: This technique minimally satisfies Checkpoint 2.1. 
2.1.4 (HTML, XHTML) Use structural markup (such as BLOCKQUOTE) only for structural purposes, not to affect presentation. 
COMPLIANCE: This technique partially satisfies Checkpoint 2.1. 
2.1.5 (HTML, XHTML) Use presentational markup (such as FONT) only for presentational purposes, and not to indicate semantic meaning. 
(See also Checkpoints 2.3 and 2.4.) COMPLIANCE: This technique partially satisfies Checkpoint 2.1. 
When used with Technique 2.1.4 and 2.1.1 or 2.1.2, this techinque fully satisfies Checkpoint 2.1. 
Guideline 3: Design for ease of comprehension 3.1 Use a consistent style of presentation that will facilitate comprehension of the content. 
Techniques: 3.1.1 
(Design): Use a consistent look and feel for each page, retaining similar design elements across the site. 
COMPLIANCE: This technique minimally satisfies Checkpoint 3.1. 
3.1.2 
(Generated): Create consistent templates for navigation and display which are used across the site to create the user interface. 
COMPLIANCE: This technique partially satisfies Checkpoint 3.1. 
When used with Technique 3.1.1, 
this fully satisfies Checkpoint 3.1. 
3.1.3 
(CSS, XSLT): Create common stylesheets which are applied to site content to effect a consistent presentation style. 
COMPLIANCE: This technique partially satisfies Checkpoint 3.1. 
When used with Technique 3.1.1, 
this fully satisfies Checkpoint 3.1. 
Guideline 4: Design for ease of browsing and navigation 4.1 Provide clear and consistent navigation mechanisms throughout a document, application or site. 
Techniques: 4.1.1 (Design): Use a consistent navigation method applicable across the entire document, application, or site, which allows access to all content on the site. 
COMPLIANCE: This technique minimally satisfies Checkpoint 4.1. 
4.1.2 (Design): Logically organize links in a navigation bar which is used across the site or application. 
COMPLIANCE: This technique partially satisfies Checkpoint 4.1. 
4.1.3 (Design): Create a table of contents or site overview which introduces the content of the site. 
COMPLIANCE: This technique partially satisfies Checkpoint 4.1. 
4.1.4 (Design): Create a hierarchal site map which allows direct access to any section of the site or application. 
COMPLIANCE: This technique partially satisfies Checkpoint 4.1. 
4.1.5 (Design): Create an alphabetic index by subject or keyword which allows direct access to any content. 
COMPLIANCE: This technique partially satisfies Checkpoint 4.1. 
4.1.6 (Design): Create anchors within long pages (3 or more headings) which allow direct access to content. 
COMPLIANCE: This technique partially satisfies Checkpoint 4.1. 
When used with Techniques 4.1.1, 4.1.2, 4.1.3, 
4.1.4, and 4.1.5, this fully satisfies Checkpoint 4.1. 
Guideline 5: Design user interfaces for device independence 5.1 Associate an explicit label with each user interface control Techniques: 5.1.1 (HTML, XHTML): Place the label for each form element on the same line as the control, BEFORE the form for (list), and AFTER the form for (list). 
COMPLIANCE: This technique minimally satisfies Checkpoint 5.1. 
5.1.2 (HTML, XHTML): Identify form control labels with the label and legend elements. 
COMPLIANCE: This technique partially satisfies Checkpoint 5.1. 
5.1.3 (HTML, XHTML): Group form controls using the (whatever) elements. 
COMPLIANCE: This technique partially satisfies Checkpoint 5.1. 
When used with Techniques 5.1.1 and 5.1.2, this fully satisfies Checkpoint 5.1. 
Guideline 6: Design content to be compatible with the features and capabilities of user agents, including those that only support older technologies or standards. 
6.1 Make sure that web sites which take advantage of newer technologies continue to be usable when such technologies are turned off or not supported. 
Techniques: 6.1.1 (Any): Avoid using technologies which were not widely supported by major browsers released three or more years ago. 
COMPLIANCE: This technique minimally satisfies Checkpoint 6.1. 
6.1.2 (XHTML): Create XHTML pages according to the HTML compatibility rules described in the XHTML specification. 
COMPLIANCE: This technique partially satisfies Checkpoint 6.1. 
When used with Technique 6.1.1, this fully satisfies Checkpoint 6.1. 
Kynn Bartlett kynn@idyllmtn.com 
Add JavaScript/ECMAScript, HTTP, CGI ? 
As I head for Bristol I'll try to ponder some of this. 
I think it's well worth dealing with. 
The part that caught my eye most was: "1.1.3 (HTML4, XHTML): Use the longdesc attribute on the img tag to specify long descriptions of complex images" The integration of the techniques with the changes in the underlying technology hasn't been addressed specifically enough IMO. 
Why bother someone's pretty little head about when/how to use CSS if they're merely going to be severely frustrated by results when they try to use it inappropriately? 
Etc. 
Love. 
ACCESSIBILITY IS RIGHT - NOT PRIVILEGE Kynn this is really interesting There are a lot of things i really like about it. 
Clarity, definition etc. the three issues that come to mind in reading it are 1) because you have omitted priorities, there are some things that are nice but not critical that would block compliance. 
This should not be. it may turn out that a site can't do one of them. 
Then you are blocked from complying 2) You provide a clear definition of compliance (e.g. x+y+z=compliance) but I don't always agree that you would NEED to do all of them - or that you could not achieve the same result another way. 
3) Some of these are relative. 
Having all pages look and work the same is NOT good design if taken too far. 
It is important that pages look differently so that people don't get confused. 
Also, pages that have different functions or for different audiences (on the same site) should be organized differently and behave differently. 
This is interesting though and should generate some good discussion - and maybe we can figure out how to pull the ideas out and avoid the problems. 
This gets to feel (after awhile) like a Gordian knot. 
G Behalf Of Kynn Bartlett The purpose of this strawman proposal is not to present a full solution but rather to provide a possible option with the intent to generate discussion and bring out new concepts which may not have been explored yet. 
This is presented in the hopes that it will provoke thought in new directions. 
Straw Man Compliance Model for WCAG 2.0: 1. Checkpoints do not have priorities. 
All checkpoints ARE REQUIRED. 
There is no such thing as an optional checkpoint (although there may be inapplicable checkpoints). 
2. Each technique identifies one or more technologies to which it applies. 
The technologies are: Any - Applies to all Design - Applies to any application in which the user will interface with the content in a manner specified by the content or markup author (and not by the user agent designer) Generated - Server-side programs which generate content, either in a batch or on the fly CSS - Cascading Style Sheets level 1 or 2 CSS1 - Cascading Style Sheets level 1 CSS2 - Cascading Style Sheets level 2 Java - Java applets and applications HTML - HTML 4.01, 4.0, 3.2, or 2.0 HTML4 - HTML 4.01 or 4.0 SMIL - Synchronized Multimedia Integration Language SVG - Scalable Vector Graphics XHTML - XHTML 1.0 or 1.1 XHTML1 - XHTML 1.0 XHTML1.1 - XHTML 1.1 (Modularized XHTML) XML - Any XML-compliant language XSLT - Extensible Stylesheet Language Transformations XSL-FO - Extensible Stylesheet Language Formatting Objects The lists above are -not- exhaustive. 
3. 
Each technique has a compliance statement which indicates how the technique satisfies the requirements of the checkpoint. 
Each compliance statement is specific to one or more technologies. 
Compliance is stated as follows: A. Minimal compliance Applying this single technique is sufficient to remove the most serious of accessibility barriers and can be considered minimal satisfaction of the checkpoint. 
(Note: Not all checkpoints will have minimal compliance techniques for all technologies.) B. Partial compliance Applying this technique in addition to any for minimal compliance will remove serious accessibility barriers; however, applying a single such technique alone does not constitute full compliance with the checkpoint. 
(Note: Not all checkpoints will have partial compliance techniques for all technologies.) C. Full compliance Applying this technique in addition to any for minimal compliance will remove nearly all accessibility barriers. 
(Note: Not all checkpoints will have full compliance techniques for all technologies.) 
One or more partial compliance techniques, when combined with minimal compliance techniques, may constitute full compliance with the checkpoint; these are noted in the compliance statements for the specific techniques. 
4. It is currently not defined how one is able to comply with a checkpoint if it is inapplicable, or if there are no defined techniques for a given technology. 
This is a matter for discussion at the face-to-face meeting and the mailing list. 
Examples: In the examples below I have taken the first checkpoint for each of the six guidelines in the 28 September 2000 working draft of WCAG 2.0, and added techniques. 
These are not complete and are meant merely to illustrate how this proposal would work -- not to suggest that these should be the final techniques for each checkpoint. 
Guideline 1: Design content that can be presented visually, auditorily, or tactually, according to the needs and preferences of the user. 
1.1 Ensure, by providing text equivalents to auditory and graphical presentations as necessary, that every component of a document, web page, or multimedia presentation can be rendered as text in a standard character set. 
Techniques: 1.1.1 (Any) Create a version of the content which does not use auditory and graphical presentation. 
COMPLIANCE: This technique minimally satisfies Checkpoint 1.1. 
1.1.2 (HTML, XHTML): Use the alt attribute on the img tag to specify textual equivalents for images. 
COMPLIANCE: This technique partially satisfies Checkpoint 1.1. 
1.1.3 (HTML4, XHTML): Use the longdesc attribute on the img tag to specify long descriptions of complex images. 
COMPLIANCE: This technique partially satisfies Checkpoint 1.1. 
When used with Technique 1.1.2, this fully satisfies Checkpoint 1.1 for images. 
Guideline 2: Separate content and structure from presentation and explicitly define significant structural or semantic distinctions in markup or in a data model. 
2.1 Use markup languages properly and in accordance with specification. 
Techniques: 2.1.1 (HTML4): Use valid HTML 4.01, or 4.0 according to specification. 
COMPLIANCE: This technique minimally satisfies Checkpoint 2.1. 
2.1.2 (XHTML1): Use valid XHTML 1.0 according to specification. 
COMPLIANCE: This technique minimally satisfies Checkpoint 2.1. 
2.1.3 (CSS): Use valid CSS level 1 or CSS level 2 according to specification. 
COMPLIANCE: This technique minimally satisfies Checkpoint 2.1. 
2.1.4 (HTML, XHTML) Use structural markup (such as BLOCKQUOTE) only for structural purposes, not to affect presentation. 
COMPLIANCE: This technique partially satisfies Checkpoint 2.1. 
2.1.5 (HTML, XHTML) Use presentational markup (such as FONT) only for presentational purposes, and not to indicate semantic meaning. 
(See also Checkpoints 2.3 and 2.4.) COMPLIANCE: This technique partially satisfies Checkpoint 2.1. 
When used with Technique 2.1.4 and 2.1.1 or 2.1.2, this techinque fully satisfies Checkpoint 2.1. 
Guideline 3: Design for ease of comprehension 3.1 Use a consistent style of presentation that will facilitate comprehension of the content. 
Techniques: 3.1.1 
(Design): Use a consistent look and feel for each page, retaining similar design elements across the site. 
COMPLIANCE: This technique minimally satisfies Checkpoint 3.1. 
3.1.2 
(Generated): Create consistent templates for navigation and display which are used across the site to create the user interface. 
COMPLIANCE: This technique partially satisfies Checkpoint 3.1. 
When used with Technique 3.1.1, 
this fully satisfies Checkpoint 3.1. 
3.1.3 
(CSS, XSLT): Create common stylesheets which are applied to site content to effect a consistent presentation style. 
COMPLIANCE: This technique partially satisfies Checkpoint 3.1. 
When used with Technique 3.1.1, 
this fully satisfies Checkpoint 3.1. 
Guideline 4: Design for ease of browsing and navigation 4.1 Provide clear and consistent navigation mechanisms throughout a document, application or site. 
Techniques: 4.1.1 (Design): Use a consistent navigation method applicable across the entire document, application, or site, which allows access to all content on the site. 
COMPLIANCE: This technique minimally satisfies Checkpoint 4.1. 
4.1.2 (Design): Logically organize links in a navigation bar which is used across the site or application. 
COMPLIANCE: This technique partially satisfies Checkpoint 4.1. 
4.1.3 (Design): Create a table of contents or site overview which introduces the content of the site. 
COMPLIANCE: This technique partially satisfies Checkpoint 4.1. 
4.1.4 (Design): Create a hierarchal site map which allows direct access to any section of the site or application. 
COMPLIANCE: This technique partially satisfies Checkpoint 4.1. 
4.1.5 (Design): Create an alphabetic index by subject or keyword which allows direct access to any content. 
COMPLIANCE: This technique partially satisfies Checkpoint 4.1. 
4.1.6 (Design): Create anchors within long pages (3 or more headings) which allow direct access to content. 
COMPLIANCE: This technique partially satisfies Checkpoint 4.1. 
When used with Techniques 4.1.1, 4.1.2, 4.1.3, 
4.1.4, and 4.1.5, this fully satisfies Checkpoint 4.1. 
Guideline 5: Design user interfaces for device independence 5.1 Associate an explicit label with each user interface control Techniques: 5.1.1 (HTML, XHTML): Place the label for each form element on the same line as the control, BEFORE the form for (list), and AFTER the form for (list). 
COMPLIANCE: This technique minimally satisfies Checkpoint 5.1. 
5.1.2 (HTML, XHTML): Identify form control labels with the label and legend elements. 
COMPLIANCE: This technique partially satisfies Checkpoint 5.1. 
5.1.3 (HTML, XHTML): Group form controls using the (whatever) elements. 
COMPLIANCE: This technique partially satisfies Checkpoint 5.1. 
When used with Techniques 5.1.1 and 5.1.2, this fully satisfies Checkpoint 5.1. 
Guideline 6: Design content to be compatible with the features and capabilities of user agents, including those that only support older technologies or standards. 
6.1 Make sure that web sites which take advantage of newer technologies continue to be usable when such technologies are turned off or not supported. 
Techniques: 6.1.1 (Any): Avoid using technologies which were not widely supported by major browsers released three or more years ago. 
COMPLIANCE: This technique minimally satisfies Checkpoint 6.1. 
6.1.2 (XHTML): Create XHTML pages according to the HTML compatibility rules described in the XHTML specification. 
COMPLIANCE: This technique partially satisfies Checkpoint 6.1. 
When used with Technique 6.1.1, this fully satisfies Checkpoint 6.1. 
Kynn Bartlett kynn@idyllmtn.com 
Gregg, can you give examples of these? 
I believe that if we are getting into "would be nice..." territory then we are in danger of hurting the credibility of our guidelines. 
My approach instead is to suggest that we make sure our guidelines and checkpoints really _are_ appropriate general rules, and if there are reasonable "short circuits" we can present those as minimal compliance options. 
For example, I illustrate this in proposed checkpoint 1.1.1 (Any), which says, in effect, if you don't have graphical or auditory content, you don't have to worry about this checkpoint. 
(Note that it does not automatically absolve you of other checkpoint responsibilities, though!) In order for this to work, each guideline must have at least one checkpoint which can give minimal satisfaction. 
To identify this as a bad idea, you would need to locate one or more checkpoints which cannot be "short circuited" or for which there is no appropriate "minimal compliance" technique which can be written. 
(And, of course, there is also the possibility that our existing checkpoints may not, in fact, be valid checkpoints under this system.) Can you point to any checkpoint which meets this criteria and supports your case that some "nice to do" checkpoints would block implementation? 
(This is not meant to say that I think Gregg is wrong -- this is part of the process of "testing" the strawman proposal. 
As the originator I have an obligation to offer at least a nominal defense of anything presented which hasn't been disproved yet, just for devil's advocacy's sake!) Agreed. 
This is obviously a fault with the current approach; defining how exactly "partial solutions" work. 
However, I feel that we _will_ have to address this because: (1) Web designers and policy makers want to know, "What is the minimum that we need to do?" (2) Web designers and policy makers want to know, "When am I done? 
When have I done all that I reasonably need to do?" (3) Web designers and policy makers want to know from -us- what is important; a weakness of the current techniques document is that when a variety of options are given, they are left up to...nobody...to decide. 
(Asking the average reader of the guidelines to decide is highly inappropriate, as they are reading it _because_ they are not experts, in most cases.) 
Those are very important design considerations that we need to include in our next version of WCAG/Techniques. 
As we have decided upon technology-specific techniques as "children" of individual checkpoints, it will fall to _us_ to determine which techniques allow for checking of a checkpoint. 
Remember, everyone: "Checkpoints must be checkable." 
Relative checkpoints and techniques are possible but need _very careful wording_ in order to be checkable. 
I agree. 
Someone hand me a sword. 
Kynn Bartlett kynn@idyllmtn.com http://kynn.com/ 
Director of Accessibility, Edapta http://www.edapta.com/ 
Chief Technologist, Idyll Mountain Internet http://www.idyllmtn.com/ 
AWARE Center Director http://www.awarecenter.org/ 
Accessibility Roundtable Web Broadcast http://kynn.com/+on24 
What's on my bookshelf? 
http://kynn.com/books/ 
