Dear Colleagues, The introduction is a bit short. 
In particular, no mention is made of the different operating modes that this protocol is designed to support. 
That makes it a bit difficult for someone who has not sat in on several committee meetings to understand why the protocol is "so complicated". 
Can a new paragraph after the second paragraph in the introduction as follows be added? 
The extensions to WebDAV described here are designed to support three different client/server interaction scenarios: versioning unaware clients, server managed workspaces, and client managed workspace. 
In core versioning a compliant server provides a single access point for each resource. 
In essence, this is a default server side workspace. 
A server may allow versioning unaware clients to modify resources in this workspace though normal WebDAV requests. 
This allows sequential modification of resources. 
In order to support parallel modification of resources, there needs to be a method to create new workspaces. 
To possibilities are supported: server side workspaces via the workspace option and client side workspace through the client-workspace resource option. 
Sincerely, James J. Hunt J?rgen Reuter Hmm, this feels like you are leading the reader down a certain path -- I suggest this is better covered in a scenarios doc. 
Regards, Tim "James J. Hunt" jjh@allerton.de on 2001-02-02 06:11:50 AM Please respond to jjh@ira.uka.de 
Subject: Introduction Dear Colleagues, The introduction is a bit short. 
In particular, no mention is made of the different operating modes that this protocol is designed to support. 
That makes it a bit difficult for someone who has not sat in on several committee meetings to understand why the protocol is "so complicated". 
Can a new paragraph after the second paragraph in the introduction as follows be added? 
The extensions to WebDAV described here are designed to support three different client/server interaction scenarios: versioning unaware clients, server managed workspaces, and client managed workspace. 
In core versioning a compliant server provides a single access point for each resource. 
In essence, this is a default server side workspace. 
A server may allow versioning unaware clients to modify resources in this workspace though normal WebDAV requests. 
This allows sequential modification of resources. 
In order to support parallel modification of resources, there needs to be a method to create new workspaces. 
To possibilities are supported: server side workspaces via the workspace option and client side workspace through the client-workspace resource option. 
Sincerely, James J. Hunt J?rgen Reuter I agree with Tim that this is more appropriate for the scenarios document, and I strongly enourage James to sign on as a co-author of the scenarios document, and flesh out these scenarios in that document! 
Cheers, Geoff From: Tim_Ellison@uk.ibm.com 
Hmm, this feels like you are leading the reader down a certain path -- I suggest this is better covered in a scenarios doc. 
"James J. Hunt" jjh@allerton.de on 2001-02-02 06:11:50 AM The introduction is a bit short. 
In particular, no mention is made of the different operating modes that this protocol is designed to support. 
That makes it a bit difficult for someone who has not sat in on several committee meetings to understand why the protocol is "so complicated". 
Can a new paragraph after the second paragraph in the introduction as follows be added? 
The extensions to WebDAV described here are designed to support three different client/server interaction scenarios: versioning unaware clients, server managed workspaces, and client managed workspace. 
In core versioning a compliant server provides a single access point for each resource. 
In essence, this is a default server side workspace. 
A server may allow versioning unaware clients to modify resources in this workspace though normal WebDAV requests. 
This allows sequential modification of resources. 
In order to support parallel modification of resources, there needs to be a method to create new workspaces. 
To possibilities are supported: server side workspaces via the workspace option and client side workspace through the client-workspace resource option. 
Sincerely, James J. Hunt J=FCrgen Reuter 
