(S1 (S (NP (EX There)) (VP (VBZ seems) (S (VP (TO to) (VP (AUX be) (NP (NP (DT a) (NN bit)) (PP (IN of) (NP (NP (NN confusion)) (PP (IN about) (NP (NNP TreeWalker)))))))))) (. .)))
(S1 (S (S (VP (VB Let) (S (NP (PRP me)) (VP (VB weigh) (PRT (RP in)) (PP (IN with) (NP (DT a) (JJ few) (NNS observations))))))) (: :) (S (NP (DT Neither) (NNP TreeWalker) (CC nor) (NNP NodeIterator)) (VP (AUX are) (ADVP (RB ever)) (VP (VBD invalidated) (, ,) (PP (IN in) (NP (DT the) (JJ current) (NN design)))))) (. .)))
(S1 (S (NP (NNP TreeWalker)) (VP (AUX is) (VP (VBN intended) (S (VP (TO to) (VP (AUX have) (NP (`` ``) (JJ pure) (JJ current) (NN node) ('' '') (NNS semantics))))))) (. .)))
(S1 (S (INTJ (DT That) (AUX is)) (, ,) (NP (DT a) (NNP TreeWalker)) (ADVP (RB really)) (VP (AUX does) (VP (AUX have) (NP (DT a) (JJ particular) (JJ current) (NN node)) (PP (IN as) (NP (NP (NN part)) (PP (IN of) (NP (PRP$ its) (NN state))))))) (. .)))
(S1 (S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN node)) (VP (AUX is) (VP (VBN moved))))) (, ,) (NP (DT the) (NNP TreeWalker)) (VP (AUX is) (VP (VBN relocated) (PP (IN with) (NP (PRP it))))) (. .)))
(S1 (S (NP (DT That)) (VP (AUX 's) (ADJP (JJ true)) (SBAR (RB even) (IN if) (S (NP (NP (DT the) (NN node) (POS 's)) (JJ new) (NN location)) (VP (AUX is) (PP (IN outside) (NP (NP (DT the) (NNS bounds)) (PP (IN of) (NP (NP (DT the) (NNP TreeWalker) (POS 's)) (JJ original) (NN root) (NN node))))))))) (. .)))
(S1 (S (S (NP (DT The) (NNP TreeWalker)) (VP (AUX has) (NP (NP (DT no) (NN memory)) (PP (IN of) (NP (JJ past) (NNP navigation)))))) (: ;) (S (NP (DT each) (NN step)) (VP (AUX is) (VP (VBN taken) (PP (IN in) (NP (NP (NNS terms)) (PP (IN of) (NP (NP (DT the) (JJ current) (NN state)) (PP (IN of) (NP (DT the) (NN tree)))))))))) (. .)))
(S1 (S (SBAR (IN If) (S (NP (PRP you)) (VP (VBP move) (NP (DT the) (JJ current) (NN node)) (PP (IN into) (NP (DT a) (JJ new) (NN parent)))))) (, ,) (ADVP (RB then)) (NP (NP (DT the) (JJ next) (JJ getParent) (NN call)) (PP (TO to) (NP (DT the) (NN tree) (NNP walker)))) (VP (MD will) (VP (VB return) (NP (PRP$ its) (JJ new) (NN parent)) (, ,) (SBAR (IN _not_) (S (NP (DT the) (NN parent)) (NP (DT the) (NN node)) (VP (AUX had) (SBAR (WHADVP (WRB when)) (S (NP (PRP you)) (VP (VBD walked) (PP (IN into) (NP (PRP it))))))))))) (. .)))
(S1 (S (-LRB- -LRB-) (SBAR (IN Unless) (, ,) (PP (IN of) (NP (NN course)))) (, ,) (NP (DT the) (JJ new) (NN parent)) (VP (AUX is) (VP (VBN rejected) (PP (IN by) (NP (NP (DT the) (NN filter)) (CC or) (NP (NP (DT the) (NN whatToShow) (NNS flags)) (, ,) (SBAR (WHPP (IN in) (WHNP (WDT which) (NN case))) (S (NP (DT the) (NNP TreeWalker)) (VP (MD will) (VP (VB seek) (ADVP (RB upward)) (SBAR (IN until) (S (S (NP (PRP it)) (VP (VBZ finds) (NP (NP (DT an) (NN ancestor)) (SBAR (WHNP (WDT which)) (S (VP (VP (AUX is) (RB not) (VP (VBN filtered) (PRT (RP out)))) (CC and) (ADVP (RB so)) (VP (MD can) (VP (AUX be) (VP (VBN returned) (PP (IN as) (NP (DT the) (JJ virtual) (NN parent)))))))))))) (, ,) (CC or) (S (NP (PRP it)) (VP (VBZ hits) (NP (NP (DT the) (NN root) (NN and/or)) (SBAR (S (NP (DT the) (NNP Document) (NN node) (CC and) (NNS returns)) (VP (VBP null) (S (VP (TO to) (VP (VB indicate) (SBAR (IN that) (S (NP (DT no) (NN parent)) (VP (AUX was) (VP (VBN found))))))))))))))))))))))))) (. .) (-RRB- -RRB-)))
(S1 (S (ADVP (RB Hence)) (NP (NNP TreeWalker)) (VP (MD should) (RB n't) (VP (AUX have) (S (VP (TO to) (VP (VB track) (NP (NP (NNS modifications)) (PP (TO to) (NP (DT the) (NNP DOM)))) (, ,) (PP (IN in) (NP (JJS most) (NNS implementations)))))))) (. .)))
(S1 (S (ADVP (ADVP (RB As) (RB long)) (SBAR (IN as) (S (NP (PRP it)) (VP (VBZ knows) (NP (PRP$ its) (JJ current) (NN node)))))) (, ,) (NP (PRP it)) (VP (MD should) (VP (AUX be) (ADJP (JJ able) (S (VP (TO to))))))))
(S1 (S (VP (VB calculate) (NP (NP (NN everything) (RB else)) (PP (IN from) (NP (DT that))))) (. .)))
(S1 (S (NP (DT The) (NNP NodeIterator) (NNS _does_)) (VP (AUX have) (S (VP (TO to) (VP (VB stay) (ADJP (JJ aware) (PP (IN of) (NP (NP (NNS alterations)) (, ,) (RB primarily) (NP (NP (DT those)) (SBAR (WHNP (WDT which)) (S (VP (VBP involve) (S (VP (VBG removing) (NP (DT the) (JJ last-reported) (NN node)) (PP (IN from) (NP (NP (DT the) (NN subtree)) (PP (IN of) (NP (NP (DT the) (NNP Iterator) (POS 's)) (NN root) (NN node)))))))))))))))))) (. .)))
(S1 (S (NP (PRP We)) (VP (VBD kept) (NP (DT that) (NN requirement)) (PP (IN as) (ADJP (JJ lightweight))) (SBAR (IN as) (S (NP (PRP we)) (VP (MD could) (, ,) (NP (NN consonant)) (PP (IN with) (S (VP (VBG providing) (NP (DT a) (JJ reasonable) (`` ``) (JJ robust) (NN iterator) ('' '') (NN behavior))))) (PRN (-LRB- -LRB-) (SBAR (IN as) (S (VP (VBN defined) (PP (IN in) (NP (NP (NN Gamma)) (CC et) (NP (NNP al))))))) (-RRB- -RRB-)))))) (. .)))
(S1 (S (NP (PRP It)) (VP (MD should) (VP (AUX be) (ADJP (ADJP (RB no) (JJR harder)) (, ,) (CC and) (ADJP (RB hopefully) (JJR easier))) (, ,) (S (VP (TO to) (VP (VB implement) (NP (NP (NP (NNP NodeIterator) (POS 's)) (NNS updates)) (PP (IN in) (NP (NP (NN response)) (PP (TO to) (NP (NN document) (NNS changes))))) (SBAR (IN than) (S (NP (DT the) (JJ similar) (NN notification)) (VP (VBD used) (S (VP (TO to) (VP (VB implement) (`` ``) (NP (NN liveness)) ('' '') (PP (IN in) (NP (NNP NodeLists))))))))))))))) (. .)))
(S1 (NP (NNP Joe) (NNP Kesselman) (NNP /) (NNP IBM) (NNP Research)))
(S1 (X (TO to)))
(S1 (SBARQ (WHNP (WP What)) (SQ (AUX is) (NP (NP (DT the) (JJ correct) (NN behavior)) (SBAR (WHADVP (WRB when)) (S (NP (DT the) (JJ current) (NN node)) (VP (AUX is) (VP (VBN deleted))))))) (. ?)))
(S1 (NP (NP (NNS Thanks)) (, ,) (NP (NNP Tim) (NNP Bryant))))
(S1 (NP (NP (NNP Bryant)) (, ,) (NP (NNP Tim) (NN scripsit)) (: :)))
(S1 (S (NP (NNS Nodes)) (VP (MD can) (RB n't) (VP (AUX be) (VP (VP (ADVP (RB *)) (VBN deleted) (ADVP (RB *)) (PP (IN in) (NP (DT the) (JJ technical) (NN DOM) (NN sense)))) (, ,) (VP (ADVP (RB only)) (VBN removed) (PP (PP (IN from) (NP (DT the) (NN document) (NN tree))) (, ,) (CC either) (ADVP (RB singly)))) (CC or) (VP (PP (IN as) (NP (NP (DT a) (NN result)) (PP (IN of) (S (VP (VBG removing) (NP (DT some) (NN ancestor))))))))))) (. .)))
(S1 (S (PP (IN In) (NP (DT either) (NN case))) (, ,) (NP (NNP TreeWalker)) (ADVP (RB just)) (VP (VBZ walks) (NP (DT the) (NN fragment)) (, ,) (S (VP (VP (ADVP (RB either)) (VBG finding) (S (NP (PRP itself)) (ADJP (JJ unable) (S (VP (TO to) (VP (VB move))))))) (, ,) (CC or) (VP (RB else) (ADJP (JJ able) (S (VP (VP (TO to) (VP (VB move))) (CC but) (VP (RB not) (TO to) (VP (VB reach) (NP (DT the) (NNP Document) (NN node))))))))))) (. .)))
(S1 (S (NP (NNP John) (NNP Cowan) (NNP cowan)) (VP (SYM @) (NP (NN ccil.org)))))
(S1 (S (NP (PRP I)) (VP (AUX am) (NP (NP (DT a) (NN member)) (PP (IN of) (NP (DT a) (NN civilization))))) (. .)))
(S1 (NP (JJ --David) (NNP Brin)))
(S1 (S (NP (DT The) (NNP TreeWalker)) (VP (VBZ follows) (NP (PRP$ its) (JJ current) (NN node))) (. .)))
(S1 (S (S (VP (VBG Asking) (PP (IN for) (NP (DT the) (NN parent))))) (VP (VBZ returns) (NP (PRP$ its) (NN parent)) (PRN (-LRB- -LRB-) (CC or) (NX (JJ other) (NN ancestor)) (, ,)) (SBAR (IN if) (S (NP (DT the) (NN parent)) (VP (AUX is) (VP (VBN filtered) (PRT (RP out)) (PRN (, ,) (CC or) (VP (VBP null) (SBAR (IN if) (S (NP (NN none)) (VP (MD can) (VP (AUX be) (VP (VBN found))))))) (-RRB- -RRB-)) (PP (IN at) (NP (NP (DT the) (NN time)) (SBAR (S (NP (PRP you)) (VP (VBP ask) (NP (DT the) (NN question)))))))))))) (. .)))
(S1 (S (S (NP (NP (PRP$ Our) (NN shorthand) (NN term)) (PP (IN for) (NP (DT this)))) (VP (AUX is) (`` ``) (NP (JJ pure) (JJ current-node) (NNS semantics)) ('' ''))) (: --) (S (NP (DT all) (NNS operations)) (VP (AUX are) (VP (VBN performed) (PP (IN in) (NP (NP (NNS terms)) (PP (IN of) (NP (NP (DT the) (JJ current) (NN state)) (PP (IN of) (NP (DT the) (JJ current) (NN node)))))))))) (, ,) (CC and) (S (NP (DT the) (JJ current) (NN node)) (VP (AUX does) (RB n't) (VP (VB change) (SBAR (IN until) (S (NP (PRP you)) (VP (VB take) (NP (NP (DT an) (NN action)) (SBAR (WHNP (WDT that)) (S (VP (VBZ causes) (S (NP (DT the) (NNP TreeWalker)) (VP (TO to) (VP (VB select) (NP (DT another) (JJ current) (NN node))))))))))))))) (. .)))
(S1 (S (NP (PRP It)) (VP (VP (AUX 's) (ADVP (RB almost)) (PP (IN like) (S (VP (AUXG having) (NP (DT a) (NN reference)) (ADVP (RB directly)) (PP (TO to) (NP (DT that) (NN node))))))) (, ,) (CC but) (PP (IN with) (NP (NP (DT the) (NNP TreeWalker) (POS 's)) (NNP navigation) (NNS methods)))) (. .)))
(S1 (S (-LRB- -LRB-) (NP (NNP John)) (ADVP (RB already)) (VP (VP (VBD said) (NP (DT this))) (, ,) (CC but) (: :) (S (NP (EX There)) (VP (AUX 's) (NP (DT no) (JJ such) (NN thing)) (PP (IN as) (`` ``) (NP (NN deletion)) ('' '')) (PP (IN in) (NP (DT the) (NNP DOM)))))) (. .)))
(S1 (S (NP (DT A) (NN node)) (VP (VP (MD can) (VP (AUX be) (VP (VBN removed) (PP (IN from) (NP (PRP$ its) (NN context)))))) (, ,) (CC but) (VP (VBZ continues) (S (VP (TO to) (VP (VB exist) (SBAR (S (S (NP (JJ until/unless) (JJ implementation-specific) (NNS actions)) (VP (AUX are) (VP (VBN taken) (S (VP (TO to) (VP (VB destroy) (NP (PRP it)) (ADVP (RB ..))))))) (. .)) (CC and) (S (NP (DT those) (NNS actions)) (VP (AUX are) (ADVP (RB ouside)) (NP (NP (DT the) (NN DOM) (POS 's)) (NN scope))))))))))) (. .)))
(S1 (S (VP (VB Use) (NP (NP (DT the) (NN term) (`` ``) (NN removal) ('' '')) (SBAR (S (VP (TO to) (VP (VB avoid) (NP (NN confusion)))))))) (. .)))
(S1 (S (INTJ (UH Yes)) (, ,) (NP (NP (JJ early) (NNS drafts)) (PP (IN of) (NP (DT the) (NNP Traversal) (NN chapter)))) (VP (VBN made) (NP (DT the) (JJ same) (NN mistake))) (. !) (-RRB- -RRB-) (NP (NNP Joe) (NNP Kesselman) (NNP /) (NNP IBM) (NNP Research))))
