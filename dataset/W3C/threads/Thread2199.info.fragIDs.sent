All the instances that suit the Accept info the client has sent? 
Does that leave us with nothing between asking for one instance (N2R) and all (N2Rs), or is there some way to quality the request so that one receives no more than, say, 13 instances? 
(Happy Halloween!) 
I will add some words to the effect that the resolver MAY restrict the resources returned to those that match the Accept: header. 
This is inconsistent with the latest HTTP 1.1 draft section 14.1, "Accept": If an Accept header field is present, and if the server cannot send a response which is acceptable according to the combined Accept field value, then the server SHOULD send a 406 (not acceptable) response. 
IMHO, HTTP URN resolvers should follow HTTP 1.1 on use of "Accept:". 
Mark Leighton Fisher Thomson Consumer Electronics fisherm@indy.tce.com 
Indianapolis, IN 
Thus spoke Fisher Mark (at least at 12:34 PM 11/4/96 EST) 
I will add some words to the effect that the resolver MAY restrict the resources returned to those that match the Accept: header. 
OK, I will add words to the effect that the resolver SHOULD restrict the resources returned to those in the Accept: header. 
Advanced Computing Lab voice: +1 505 665 0597 Los Alamos National Laboratory http://www.acl.lanl.gov/~rdaniel/ 
Los Alamos, NM, USA 87545 obscure_term: "hyponym" 
Now that we have your attention, can we come up with an HTTP 1.1 extension method to do resolution rather than the magic directory hack? 
[The magic directory hack is Experimental RFC 2169] I think that would be the right thing to do. 
I'd be happy to see the magic directory stuff go away, although for backward compatibility with old HTTP servers there doesn't seem to be much of an alternative. 
Michael Mealling and I have done some more work on a resolution services draft. 
It will define services such as I2C (Given a URI, return a description of the resource identified by the URI. 
The Accept: header should be honored to allow the client some ability to tell the resolver what sort of description is desired. 
This is pretty much the LINK method, if memory serves. 
There may be some interaction with the work of the WEB-DAV group as well.) I2R (Given a URI, return the resource. 
This would, one assumes, be implemented in HTTP as GET.) I2L (Given a URI, return a URL for it.) I2N (Given a URI, return a URN for it. 
(This comes from a working group that distinguishes between URNs and URLs. 
Not everyone in the world does so. 
This point seems likely to get some discussion :-) ) There are some other methods I can't recall off the top of my head, I'll check with Michael on the current state of the draft. 
Anyway, doing it with proper methods seems achievable. 
More later... Ron Daniel Jr. voice:+1 505 665 0597 Los Alamos National Lab http://www.acl.lanl.gov/~rdaniel 
Los Alamos, NM, USA, 87545 
