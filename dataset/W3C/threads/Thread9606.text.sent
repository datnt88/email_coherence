I'm quite confident PRISM (and dublin core and most other apps) will do just fine only using S-B. 
Hmmm, does that mean that our user community is saying: o S-B on its own is sufficient o keep it simple, only give us one way to do things Brian I'm quite confident PRISM (and dublin core and most other apps) will do just fine only using S-B. 
Regarding the last point, yes this is certainly a common theme that I'm hearing... keep it simple and only give us one way to do things (or more accurate perhaps, the more ways one can do things, the more ways things can go wrong). 
eric miller http://www.w3.org/people/em/ semantic web activity lead mailto:em@w3.org 
I'm quite confident PRISM (and dublin core and most other apps) will do just fine only using S-B. 
Well, I've been arguing the KISS principle from the start, and while I'm still all for it, S-B alone doesn't do the job. 
Fine that it alone serves the needs of some folks. 
They can just use the global idiom and forget the rest. 
But some of us need the rest. 
Patrick I'm a little concerned that the specific idioms may have taken on the status of proposals. 
In my mind, the idioms were ways of _testing_ the various datatyping proposals, with some claim that they (or something like them) were actually being used. 
Ultimately, the proposals are along the lines of "a literal denotes ..." or "a statement or collection of statements using literals means ...", expressed in terms of a formal semantics. 
The available idioms flow from that. 
(And in the process of assembling the proposals we may or may not find the role of properties like rdf:value -- I think that's secondary to this particular debate.) #g I'm quite confident PRISM (and dublin core and most other apps) will do just fine only using S-B. 
Graham Klyne MIMEsweeper Group Strategic Research http://www.mimesweeper.com 
I fully agree that idioms should not drive the model, and that we should first agree on the model and then choose the best idioms that work with that model. 
Perhaps at first, though ultimately, we need to choose specific idioms, and those idioms have to be an integral part of the final solution, in order to achieve consistency of expression and interoperability between applications (consistency of interpretation). 
We cannot end up with a scenario of "use whatever idiom suits your fancy". 
There should be two and only two "official" idioms -- one for local and one for global datatyping. 
And while users always remain free to express their knowledge in whatever idiom they like, those idioms will be proprietary and not part of the expectations that all users will share for the effective global interchange of knowledge. 
So, while we should not let the tail wag the dog and allow the idioms to force the model, likewise we should not underestimate the importance and need of minimally few consistent idioms to express datatyping knowledge in terms of that model. 
That is why I structured the TDL proposal to first define the TDL pairing model, and let the idioms constitute a layer above the model. 
Cheers, Patrick Here I disagree. 
I think we need to specify the appropriate semantics of any valid RDF expression. 
(It might be appropriate for the primer to indicate what idioms can then be used to achieve common goals.) No, please, no. 
There should be no proprietary idioms. 
Any RDF whose intended interpretation is in accordance with the formal semantics should be exchangeable between RDF processors, and the level of mutual understanding dependent only on whether there is sufficient common understanding of externally defined vocabulary. 
It should never be possible to entail incorrect conclusions, whatever idiom is used. 
The role of idioms is to help authors use the language. 
Idioms, per se, have no part in determining the meaning of the language used. 
That *would* be the tail wagging the dog. 
#g Graham Klyne MIMEsweeper Group Strategic Research http://www.mimesweeper.com 
