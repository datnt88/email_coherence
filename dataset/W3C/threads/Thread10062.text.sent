I've just been through the schema document. 
There are important technical bits missing. 
Since the point of this WD was to get all the technical bits in there, as is, it does not meet its goals. 
Dan, is there anything we can do to get this ready in time. 
Brian rdfs:Resource rdf:type rdfs:Class . 
rdfs:Literal rdf:type rdfs:Class . 
rdfs:Datatype rdf:type rdfs:Class . 
rdfs:XMLLiteral rdf:type rdfs:Class . 
rdfs:Class rdf:type rdfs:Class . 
rdf:Property rdf:type rdfs:Class . 
rdf:Seq rdf:type rdfs:Class . 
rdf:Bag rdf:type rdfs:Class . 
rdf:Alt rdf:type rdfs:Class . 
rdf:Statement rdf:type rdfs:Class . 
rdf:nil rdf:type rdf:List . 
rdf:type rdf:type rdf:Property . 
rdf:type rdfs:domain rdfs:Resource . 
rdf:type rdfs:range rdfs:Class . 
rdfs:domain rdf:type rdf:Property . 
rdfs:domain rdfs:domain rdf:Property . 
rdfs:domain rdfs:range rdfs:Class . 
rdfs:range rdf:type rdf:Property . 
rdfs:range rdfs:domain rdf:Property . 
rdfs:range rdfs:range rdfs:Class . 
rdfs:subPropertyOf rdf:type rdf:Property . 
rdfs:subPropertyOf rdfs:domain rdf:Property . 
rdfs:subPropertyOf rdfs:range rdf:Property . 
The following is found in the review copy of the Semantics. 
It captures answers to many of the critical issues, if Dan can work those answers in, in the time frame. 
rdfs:subClassOf rdf:type rdf:Property . 
rdfs:subClassOf rdfs:domain rdfs:Class . 
rdfs:subClassOf rdfs:range rdfs:Class . 
rdf:subject rdf:type rdf:Property . 
rdf:subject rdfs:domain rdf:Statement . 
rdf:predicate rdf:type rdf:Property . 
rdf:predicate rdfs:domain rdf:Statement . 
rdf:object rdf:type rdf:Property . 
rdf:object rdfs:domain rdf:Statement . 
rdf:first rdf:type rdf:Property . 
rdf:first rdfs:domain rdf:List . 
rdf:rest rdf:type rdf:Property . 
rdf:rest rdfs:domain rdf:List . 
rdf:rest rdfs:range rdf:List . 
rdf:ContainerMembershipProperty rdfs:subClassOf rdfs:Property . 
rdfs:XMLLiteral rdfs:subClassOf rdfs:Literal . 
rdfs:Datatype rdfs:subClassOf rdfs:Literal . 
rdfs:Literal rdfs:subClassOf rdf:Resource . 
Jeremy Going thru the critical comments (1) yes, I believe Guha agreed to have his name on this (am seeking explicit confirmation) (2) After the table in the 'RDF Schema Overview' section, you ask: rdf:List? 
I'm not quites ure what you are doing here. 
Picking out the vocabulary from the older specs beforing adding in the new? 
Is that valuable?rdfs:Datatype ...I should have been clearer in my message on friday. 
That table is machine-generated from the RDFS namespace document. 
I asked for WG help in getting the text for the RDF/XML version correct first; I'll then rebuild the table. 
Regarding ordering, yes I just added in rdfs:Datatype in the prose after Property, and the new List stuff after the existing (and Recommended) container machinery. 
Unless someone is going to write a compare-and-contrast as to which is best used when, I'm happy with this. 
Are we depracating the old containers? 
I didn't think so. 
(3) 'rdf:_1, etc rdf:first, rdf:next, rdf:nil' see previous; when the definitions are done i'll rebuild the table. 
rdf:_1 ... is an interesting case. 
These are _not_ mentioned in the rdf/xml schema but I guess should be mentioned here. 
Also 'nil' is neither a class nor property, so doesn't fit in either table. 
I suggest adding a separate paragraph for the latter, and adding rdf:_1 by hand. 
(4) [[ They are not self denoting. 
The class rdfs:Literal respresents the class of literal values such as strings and integers. 
You are correct. 
I caught this on paper but missed the edit. 
Will change. 
(5) "s/predicate/object/" Good catch. 
Will fix. 
Your other purple and green comments share a lot with my paper-based editorial notes which I didn't get to this week. 
I think the critical comments are fixable by monday; can't commit to getting to the other stuff. 
You've mostly flagged up broken things rather than missing stuff as 'critical', yet below you talk about missing things. 
Is it mostly the (script-generated) summary table? 
Dan Some first-cut fixes to http://www.w3.org/2001/sw/RDFCore/Schema/200211/ $Id: Overview.html,v 
1.13 2002/11/09 14:55:38 danbri Exp $ I've added: In addition to these classes and properties, RDF also uses properties called rdf:_1, rdf:_2, rdf:_3... etc., each of which is both a sub-property of rdfs:member and a member of the class rdfs:ContainerMembershipProperty. 
There is also a resource called rdf:nil that is a member of the class rdf:List. 
Refinements welcome. 
Fixed. 
Fixed. 
Cool Ok. Fair enough - the other stuff is below. 
I think I've been too hasty with the thumbs down. 
Whew :) A brief note here to say its not yet complete, maybe I think it could go with the table not being updated. 
Woohoo Not needed for Monday. 
Yes. 
I hadn't twigged that the other bits were below. 
My apologies. 
This is in better shape than I thought. 
I'm back online for a few hours. 
How can I help. 
I had trouble with CVS this morning, but it seems ok now. 
Brian I want to make sure the RDF/XML content is accurate. 
Since this also appears in Appendix B, more work is needed and we may as well regen the table. 
But getting the RDF/XML right is the main thing, since I will also be updating the live RDFS namespace and I don't really want to get that wrong. 
Re help, getting the references to our other specs in shape would be good. 
After that, getting the rdfs:label and rdfs:comment for each of the new things is the next step. 
There is candidate text in the prose I added to RDFS (in the bit after the big table) but probably needs tweaking a little. 
Help with that (ie. 
drafting chunks of rdf/xml to add) would be much appreciated. 
cheers, dan in I think it is crucial to update that table as part of my review I attached my understanding... Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/ 
rdfs-namespace.n3) 
I included some in the comments I sent earlier. 
You may not have got to them. 
I was thinking in terms of RDF/XML not comments, but no matter. 
rdf:List label: List comment: An RDF list. 
rdf:first label: first comment: The first item in an RDF list. 
rdf:rest label: rest comment: The rest of an RDF list. 
rdf:nil label: nil comment: The end of an RDF list. 
rdfs:Datatype label: Datatype comment: The class of datatypes. 
Is that what you wanted? 
Brian Suggested rewordings: IHMC(850)434 8903 home 40 South Alcaniz St.(850)202 4416 office FL 32501 (850)291 0667 cell phayes@ai.uwf.edu http://www.coginst.uwf.edu/~phayes s.pam@ai.uwf.edu for spam This is entirely talking about 'lists', but we call them 'collections'. 
We ought to get the terminology straight. 
Lists is the traditional term and universally used, so why did we invent parseType=collection?? Pat IHMC(850)434 8903 home 40 South Alcaniz St.(850)202 4416 office FL 32501 (850)291 0667 cell phayes@ai.uwf.edu http://www.coginst.uwf.edu/~phayes s.pam@ai.uwf.edu for spam Suggested rewording: Sorry that is rather long, but there's a lot to explain here. 
Pat IHMC(850)434 8903 home 40 South Alcaniz St.(850)202 4416 office FL 32501 (850)291 0667 cell phayes@ai.uwf.edu http://www.coginst.uwf.edu/~phayes s.pam@ai.uwf.edu for spam Because DAML did ?-) 
I don't object to using the traditional term if that's a procedurally viable option. 
#g Graham Klyne pat hayes said: DAML+OIL invented it with the name "daml:collection" Dave I've seen a couple of comments to the effect that we use "Collection" because DAML did. 
Keep in mind that isn't the whole story. 
What DAML did (and what we thought we were doing) was define a construct that at the (RDF/XML) syntax level was a "collection", and in particular was supposed to be a "closed collection". 
We subsequently decided (I think) that it couldn't really accomplish the "closed" part (at least not at the RDF level), but that we needed to leave it in RDF so that RDF parsers would at least generate the proper underlying data structure (the List) for DAML/OWL to use. 
The List is just the RDF graph structure that gets generated to represent the collection. 
We didn't explicitly add "Collection" in order to directly represent lists (if we'd wanted to directly represent lists, we'd presumably have called it "List"). 
At least, that's the story *I* remember. 
--Frank pat hayes said: OK, I won't mention it again. 
DAML seems to have spread s**t all over the planet. 
I guess I have to bear part of the blame. 
Pat IHMC(850)434 8903 home 40 South Alcaniz St.(850)202 4416 office FL 32501 (850)291 0667 cell phayes@ai.uwf.edu http://www.coginst.uwf.edu/~phayes s.pam@ai.uwf.edu for spam This is entirely talking about 'lists', but we call them 'collections'. 
We ought to get the terminology straight. 
Lists is the traditional term and universally used, so why did we invent parseType=collection?? 
We didn't. 
Daml did. 
Does the form of words I suggested before not work. 
They are collections represented by a list structure. 
Brian pat hayes said: Pat-- I thought the whole point of this effort was to spread stuff all over the planet. 
You have to start somewhere, and s**t (a) at least constitutes an existence proof of sorts doesn't it? 
(b) is spread all over the planet anyway (not uniformly, of course) BTW, is there universal agreement on this vocabulary? 
I've also seen "poo"... 
I think George Carlin should be involved here. 
--Frank Frank Manola The MITRE Corporation 202 Burlington Road, MS A345 Bedford, MA 01730-1420 Hmmm. 
TO me, 'collection' sounds awfully like an unordered thingie, and lists are definitely ordered. 
BUt this is DAMLs fault, so lets just forget about trying to clean it up, and just say they are lists. 
Sorry I brought it up. 
Pat IHMC(850)434 8903 home 40 South Alcaniz St.(850)202 4416 office FL 32501 (850)291 0667 cell phayes@ai.uwf.edu http://www.coginst.uwf.edu/~phayes s.pam@ai.uwf.edu for spam 
