I would like to summarise briefly in this forum the media type issue which 
I raised on the IG list yesterday. 
The problem, essentially, is that if media type values are truncated prior to being matched against the media type of the output device, then so soon as parameterized values are introduced, the truncation which is mandated by the current HTML 4.0 draft will result in different media types being treated as identical. 
For example: 
media="screen enlarged" and media="print enlarged" 
become: 
media="screen" and media="print" respectively. 
Furthermore, since "screen" is the default media type, a style sheet without an explicit media type value would be applied as part of the cascade, even if the default style sheet was of type media="screen enlarged" I do not regard this as a desirable result from the standpoint of accessibility. 
to follow up on what Jason White said: 
I am copying w3c-css-wg on this as I think we need to be clear both with HTML and with CSS2 on what happens, here. 
The way I read the spec there is only the appearance of a problem, not an actual problem. 
In my reading of the October 24 draft for HTML 4 it does say that HTML user agents must be capable of doing the parsing that strips trailing qualifiers to isolate the base type and that they may ignore media type entries which do not match a predefined base type. 
I do not believe that the present specification language requires a browser to ignore media subtypes or parameters, or that it requires a browser even to ignore off-the-wall media types such 
as if the HDML people don't want to subtype "tty" but instead start releasing stylesheets calling for a "hhd" medium, the HTML spec as written will let a browser process that style if it wishes. 
Dave? 
Chris? 
Am I reading this right? 
As I read it, the whole point of the "future versions of HTML may define... parametric" explanation is to say that browsers designed to this spec have to be compatible with media type indications that contain subtype or parameter qualifiers. 
This spec doesn't require them to honor such qualifiers in any way. 
But it doesn't stop them, either. 
CSS2 or the Browser Guidelines could ask for specific functions relating to media type qualifiers and it would be entirely consistent with this specification language. 
-- Al Gilman 
Yes. In other words, currently we only define media which are single words, but browsers are hereby warned not to fall over if they come across something more complicated. 
This is in an attempt to avoid repeating the mess that happended with charsets in MIME (eg, since the parser wasn't expecting parameters). 
correct. 
yes 
yes. Chris Lilley, W3C [ http://www.w3.org/ ] Graphics and Fonts Guy The World Wide Web Consortium chris@w3.org 
2004 Rt des Lucioles / BP 93 
I interpreted the language of the specification differently. 
I understood the statement that user agents must be able to parse the MEDIA attribute in the manner described, coupled with the assertion that parameterized values may be defined in a future version of HTML, as imposing a requirement on user agents that conform to HTML 4.0 to follow the parsing rules set forth in the specification. 
This would include the truncation of each entry in the comma separated list of media types. 
It is clear from what Al and Chris has said that such an interpretation does not reflect the intention that underlies these provisions. 
I think that the language of the specification needs to be clarified so as to make it clear that a user agent which accepts parameterized media types will nevertheless continue to be compliant with HTML 4.0 and that extensions to existing types, as well as new types, may be defined by the W3C style languages, or by a separate specification dealing with media types. 
I hope these remarks serve to elucidate the nature of my concern and the interpretation that has given rise to it. 
The main point is to allow media types to be extended, and new types to be defined, without requiring the HTML specification itself to be changed in any way. 
I would suggest that the spec should provide approximately as follows: "The World Wide Web Consortium may define additional media types in the future, and may also extend the media types listed above to include qualifying parameters. 
All user agents must separate the value of the MEDIA attribute into a list of one or more entries, each such entry being separated from its successor by a comma (Unicode decimal 44). 
User agents which do not support extensions to the list of media types defined in this specification should truncate each entry at the first character which is not a letter, a digit or a hyphen, and then make a case insensitive match with the names of the predefined media types (screen, print, aural, projection, braille). 
Unrecognised media types should be ignored." 
I am not a skilled drafter of specification language, so this suggestion is not as concise and accurate as it should be, but perhaps it could be used as a starting point. 
The motivation for the current rules is to avoid causing old browsers problems when new media types are introduced or elaborated with parameters. 
The idea is called "Future Proofing". 
The truncation procedure is a fallback when the user agent doesn't understand the parameters. 
Is that a problem? 
You would need to ensure the "screen enlarged" style sheet comes after such default screen style sheets, e.g. to make sure the font-sizes and white space settings come out right. 
By placing the "screen enlarged" style sheet before the "screen" default, new browsers that recognize the former would be happy while older browsers would show the regular screen style sheet. 
The rules in the latter would then override the rules in the former. 
Isn't this the right thing to do? 
Regards, -- Dave Raggett dsr@w3.org 
http://www.w3.org/People/Raggett World Wide Web Consortium (on assignment from HP Labs) 
to follow up on what Dave Raggett said: 
IMHO the right thing to do in the old browsers is for them to detect that they have an unresolved conflict between two "screen" styles [can't tell "screen" from "screen enlarged"] and pop up to ask the user which the user wants. 
At this point the full text of the media indication ["screen" vs. "screen enlarged"] is copied into the select list in the popup dialog. 
The user can make the right decision based on the natural-language interpretation of the formally-undefined text. 
Of course, we are talking old browsers that do whatever they do. 
Do they ever stop to ask? 
If they don't we need "User Guidelines" that teach tricks like how to get to the stylesheet-suppression functions in "preferences." 
Since these are browser-specific, we need to fold that Help/Learn capability in under the Browser Guidelines. 
-- Al 
