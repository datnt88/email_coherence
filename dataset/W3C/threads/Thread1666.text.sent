My personal notes (not official minutes) from the IETF meeting in Oslo, July 1999, can be found at Jacob Palme jpalme@dsv.su.se (Stockholm University and KTH) for more info see URL: http://www.dsv.su.se/~jpalme Jacob, Could you please change the link to the DESIRE site from the (old) SURFnet site to the current site at http://www.desire.org/? 
Thanks, Ton. 
This list might be interested in draft-iab-secmech-01.txt. 
It describes the applicability of various IETF security mechanisms to various situations, including applications. 
Steve Bellovin says he hasn't gotten much comment on it and wants to go to last call soon, so you should review it soon and let him know if you have any changes or desired additions. 
--Paul Hoffman, Director --Internet Mail Consortium The document, like many other security documents, tells too much about what will not work, too little on what will work. 
It seems as if security experts are better at telling you that something is dangerous or might not be secure, than telling you how to get security. 
I would prefer to get more practical advice with recommendations on how to get the security you want. 
This may be a reason why security techniques have so much trouble getting accepted and used. 
I was interested to note the warnings against MD5, since MD5 is so popular. 
But why not tell us what we should use instead of MD5, instead of just saying that MD5 has security risks. 
There was no mention of the export restriction problem with encryption tools. 
Is this not a major problem? 
How can you resolve it? 
Jacob Palme jpalme@dsv.su.se (Stockholm University and KTH) for more info see URL: http://www.dsv.su.se/~jpalme Hmm -- I thought that it was doing that; its whole purpose was to provide a list of techniques that could be used in specific niches. 
I'll reread it from that perspective. 
instead of just saying that MD5 has security risks. 
Will fix. 
The IETF decided long ago that this was (mostly) a US problem, and that we wouldn't let our standards be crippled to accomodate it. 
Hello Jacob and Steve, The document, like many other security documents, tells too much about what will not work, too little on what will work. 
It seems as if security experts are better at telling you that something is dangerous or might not be secure, than telling you how to get security. 
I would prefer to get more practical advice with recommendations on how to get the security you want. 
This may be a reason why security techniques have so much trouble getting accepted and used. 
IMHO there are 4 reasons why security techniques are not widely used. 
More or less in order of importance 1) Mostly much too complicated and time consuming for the average user to set up and use. 
2) Confusion caused by competing standards S/MIME vs PGP. 3) Confusion caused by US gov interference. 
4) Confusion caused by licencing and patent issues. 
Not much can be done about about 2 &amp; 3 but maybe some comments on 1 and information (patented/not patented) on 4 could be usefully included in the document ?? Geoff Marshall I think this is a fair comment, that may also reflect the very nature of security. 
I am reminded of a little game that is very prevalent on a certain desktop operating system: Minesweeper. 
(The goal is to uncover a number of hidden mines by stomping on all the squares that do NOT contain mines: to stomp on a mine is sudden death.) Making systems secure seems a similar kind of activity: experts can tell us where mines are known to exist, but it is both imperative and very difficult to deduce where mines certainly do not exist. 
#g Graham Klyne (GK@ACM.ORG) 
I think this is a fair comment, that may also reflect the very nature of security. 
I am reminded of a little game that is very prevalent on a certain desktop operating system: Minesweeper. 
(The goal is to uncover a number of hidden mines by stomping on all the squares that do NOT contain mines: to stomp on a mine is sudden death.) Making systems secure seems a similar kind of activity: experts can tell us where mines are known to exist, but it is both imperative and very difficult to deduce where mines certainly do not exist. 
#g (Thanks to Paul, for starting this ver important thread.) 
The current draft is wonderfully concise and readable. 
For the non-expert, it is an excellent way to learn both about the current range of standard (and non-recommended) techniques and some issues about their uses. 
I think it needs more, not different, text. 
Nice list of possibilities. 
They do not all have the same import. 
I think that the complexity of "valid" security mechanisms (by which I mean mechanisms that have real-world effectiveness, for the level/quality of security promised) is very hard to design. 
That is a technical limitation, within the technical community. 
It is best demonstrated by the constant ping-pong IETF process of having applications folk try to design a mechanism and having security experts shoot it down. 
Possible guidance for Bellovin's paper: Add a section 7, with recommendations for entire security "systems" to be used for particular scenarios. 
Yes, this is requesting the cookbook approach that the document specifically warns against, but I have long felt that we have no choice. 
Show some very common application environments and recommend a specific SET (no pun intended) of tools, based on the protections needed. 
(Start with application or connection type, move to protection type, then list techniques recommended.) Frankly I view this as a human factors problem. 
We need to make it easier to use these technologies. 
Use by protocol designers, as well as use by sysadmins and end-users. 
In other words, I think that the REAL barrier to security use is variations on Geoff's #1. #2-4 affect quality of use and effectiveness, but I do not believe they are the real "market" barrier. 
For now, it is very difficult for non-experts to design protocol services that the security experts approve. 
The cookbook should attack (pun intended) that problem directly. 
However, it is also very difficult to install and run a security service. 
The choices made for the document should reflect easier/harder operations. 
And end-users trying to set up their security environment, such as for PGP or S/MIME, are usually hit with far, far too much complexity. 
(It does not help that the security module is often an add-on, rather than built-in.) 
We can't do anything about end-user complexity, other than try to raise the issue for developers, unless there are specific implementation suggestions we can offer than will make things simpler. 
d/ 675 Spruce Drive http://www.brandenburg.com 
Sunnyvale, CA 94086 USA mailto:dcrocker@brandenburg.com 
I think the cookbook is an excellent suggestion. 
And as I also believe that for messaging it's time to dump both PGP and S/MIME in favour of something much simpler to implement, maybe the cookbook could outline an alternative. 
Geoff (Thanks to Paul, for starting this ver important thread.) 
The current draft is wonderfully concise and readable. 
For the non-expert, it is an excellent way to learn both about the current range of standard (and non-recommended) techniques and some issues about their uses. 
I think it needs more, not different, text. 
Nice list of possibilities. 
They do not all have the same import. 
I think that the complexity of "valid" security mechanisms (by which I mean mechanisms that have real-world effectiveness, for the level/quality of security promised) is very hard to design. 
That is a technical limitation, within the technical community. 
It is best demonstrated by the constant ping-pong IETF process of having applications folk try to design a mechanism and having security experts shoot it down. 
Possible guidance for Bellovin's paper: Add a section 7, with recommendations for entire security "systems" to be used for particular scenarios. 
Yes, this is requesting the cookbook approach that the document specifically warns against, but I have long felt that we have no choice. 
Show some very common application environments and recommend a specific SET (no pun intended) of tools, based on the protections needed. 
(Start with application or connection type, move to protection type, then list techniques recommended.) Frankly I view this as a human factors problem. 
We need to make it easier to use these technologies. 
Use by protocol designers, as well as use by sysadmins and end-users. 
In other words, I think that the REAL barrier to security use is variations on Geoff's #1. #2-4 affect quality of use and effectiveness, but I do not believe they are the real "market" barrier. 
For now, it is very difficult for non-experts to design protocol services that the security experts approve. 
The cookbook should attack (pun intended) that problem directly. 
However, it is also very difficult to install and run a security service. 
The choices made for the document should reflect easier/harder operations. 
And end-users trying to set up their security environment, such as for PGP or S/MIME, are usually hit with far, far too much complexity. 
(It does not help that the security module is often an add-on, rather than built-in.) 
We can't do anything about end-user complexity, other than try to raise the issue for developers, unless there are specific implementation suggestions we can offer than will make things simpler. 
d/ 675 Spruce Drive http://www.brandenburg.com 
Sunnyvale, CA 94086 USA mailto:dcrocker@brandenburg.com oh, god, please don't tackle that issue in this document. 
(On the other hand, if there is a serious technical constituency that could put forward a subsetting of one of them, to reduce the entry cost, that would be delightful to see discussed independently.) d/ 675 Spruce Drive http://www.brandenburg.com 
Sunnyvale, CA 94086 USA mailto:dcrocker@brandenburg.com 
I am responding to this in what I hope will be seen as a constructive spirit. 
There seems to be a general feeling that this draft contains good information, but more is desirable. 
I try to suggest some areas that I, as a non-security-expert, might benefit from additional guidance. 
I should add that my comments are made from a perspective of application protocol design, so I may miss many issues that are relevant to lower layer protocol design. 
Security Mechanisms for the Internet draft-iab-secmech-00.txt 3. Introduction Finally, security mechanisms are not magic pixie dust that can be sprinkled over completed protocols. 
It is rare that security can be bolted on later. 
Good designs--that is, secure, clean, and efficient designs--occur when the security mechanisms are crafted along with the protocol. 
This idea of "designed-in" security is oft-repeated, and I don't think anyone seriously disagrees (I don't!). 
But when I think about it, I'm not really clear what it means to "design in", other than to design the security mechanisms at the same time as the protocol (which is effectively what you say) -- is there more? 
For example, in dealing with messaging-related protocols it is easy to say that some form of object security should be applied to the message content, and cite RFC 1847, S/MIME, OpenPGP, etc. 
To me, this feels like "bolt-on" security but it's not clear to me what more can and should be done. 
Can more guidance be offered? 
4. Decision Factors 4.1. 
Threat Model I think that a checklist of possible threats might be helpful for non-security-experts: it might give us something around which to structure a "security considerations" section in a protocol goals document. 
Looking through your draft (and adding a few I think of), I can see: - theft of static information - theft if information in transit (eavesdropping) - traffic analysis - service spoofing - theft of infrastructure use - disruption of infrastructure - corruption of data - spoofing of identity - denial of service - insider vs outsider attacks - social engineering The value of a target to an attacker may depend on where it is located. 
A network monitoring station that is physically on a backbone cable is a major target, since it could easily be turned into an eavesdropping station. 
The same machine, if located on a stub net and used for word processing, would be at little risk. 
This paragraph suggests a difference between a threat and a vulnerability that is exploited to realize that threat. 
In this case, the network monitoring protocols may have vulnerabilities that can be explpoited to cause theft/disruption of infrastructure elements. 
Thus, the above list should probably be two: threats and vulnerabilities. 
Some kind of structured approach to guide a non-expert may be helpful. 
I can imagine a matrix of threat, exploited vulnerability, value-to-attacket, value-to-victim, cross-referenced to the kind of protocol for which this needs to be considered. 
I imagine a kind of living document that can be updated as the threat/vulnerability/usage models become better understood. 
(I'm not trying to suggest a "cookbook" here --that's too much like pixie-dust-- but a distillation of security knowledge that can hep designers determine if they have considered the things that a security expert would naturally consider.) 4.2. 
Granularity of Protection I think granularity has two impacts: the domain from which certain kinds of attack can be launched, and the range of resources that are vulnerable to an attack -- would these benefit from being separated more clearly? 
4.3. 
Implementation Layer Security mechanisms can be located at any layer. 
In general, putting a mechanism at a lower layer protects a wider variety of higher-layer protocols. 
The usual tradeoff is reach; lower-layer protocols terminate sooner. 
This is a very interesing characterization, but I am not sure how it helps a struggling protocol designer. 
I seems to me that we have little choice: either the mechanisms must already exist, or the scope for additional mechanism is very constrained. 
5. Standard Security Mechanisms 5.1. 
Plaintext Passowrds Another weakness arises because of common implementation techniques. 
It is considered good form [MT79] for the host to store a one-way hash of the users' passwords, rather than their plaintext form. 
However, that may preclude migrating to stronger authentication mechanisms, such as HMAC-based challenge/response. 
........................^^^^ add forward reference? 
A thought: I think it's perceived wisdom that it's better to have a fine granularity of password protection (one per user, possibly per user/application). 
But doesn't this increase the number of passwords in use, hence the chances of a successful guessing attack? 
I guess however you cut it, passwords are not great. 
5.7. 
DNSSEC DNSSEC [RFC2065] digitally signs DNS records. 
It is an essential tool for protecting against cache contamination attacks; these in turn can be used to defeat name-based authentication and to redirect traffic to or past an attacker. 
The latter makes DNSSEC an essential component of some other security mechanisms, notably IPSEC. 
Would it be helpful to clarify the importance of DNSSEC when designing other protocols? 
5.10. 
Firewalls and Topology As guidance for protocol designers, I think it would help to say that protocols should not be designed to sneak or piggyback their way through firewalls. 
Rather, a firewall administrator should be able to exercise clear and uncluttered control over which services are allowed through, and which are not. 
And a final thought: some people have noted that human factors are a big factor in the non-deployment and failure of security mechanisms. 
Would it be helpful to add a section that discusses human factors, and the kind of designs that: (a) make deployment more likely to be achieved, and (b) reduce the chance of security being compromised or subverted by the human users. 
Tall order, n'est ce pas? 
#g Graham Klyne (GK@ACM.ORG) 
It is not a US-only problem. 
There is an international agreement, which most of the developed countries have signed, and in which they promise to restrict export of encryption. 
Different countries do, I believe, interpret this agreement more or less rigorously. 
I think the agreement has the name Wassenaar Agreement on Export Controls for Conventional Arms and Dual-use Goods and Technologies, see I know that in Sweden, a number of companies have had problems with not being allowed to export encryption. 
France has earlier been very strict on this, but I have heard that they are changing their minds. 
Jacob Palme jpalme@dsv.su.se (Stockholm University and KTH) for more info see URL: http://www.dsv.su.se/~jpalme 
A document that gives security guidelines for IETF protocols should explain this policy and its impact. 
Larry Jacob, But whatever the legal/political situation, the IETF can only work on technology specifications. 
Brian Brian E Carpenter (IAB Chair) Program Director, Internet Standards &amp; Technology, IBM Internet Div On assignment for IBM at http://www.iCAIR.org 
Not while I'm in the liability line of fire, thank you. 
Brian E Carpenter (IAB Chair) Program Director, Internet Standards &amp; Technology, IBM Internet Div On assignment for IBM at http://www.iCAIR.org 
Permit me to presumptuously re-word Larry's suggestion: A particular set of security technology and operations constraints are believed by the expert security technical community to carry a particular set of exposures and might also carry a set of mis-perceived comforts. 
It would be entirely reasonable for the IETF/IAB to produce a paper stating those constraints, exposures and mis-comforts. 
Done objectively, the fact that the constraints might perfectly align with a particular group's security policies seems unlikely to create legal exposures (though, yes, I would expect the legal mis-comforts to continue.) d/ 675 Spruce Drive http://www.brandenburg.com 
Sunnyvale, CA 94086 USA mailto:dcrocker@brandenburg.com 
Dave, What is missing in RFC 1984 in this respect? 
Brian A set of thorough cross-references to RFC 1984 would be a fine way of satisfying this particular goal. 
I don't agree. 
In effect, 1984 makes a set of cases about general issues. 
It's entirely generic. 
I think that something which analyses current detail would be appropriate. 
Ironically, this should probably be published as a BCP, noting a particular set of details and their particular limitations. 
For example, noting that the details in the current limitation permit highly reliable breakability with (what is it now?) 72 hours, or somesuch. 
Just a thought. 
d/ 675 Spruce Drive http://www.brandenburg.com 
Sunnyvale, CA 94086 USA mailto:dcrocker@brandenburg.com 
I fully agree with Dave. 
The question of "what about export rules" come up so often in various security debates that it really should be dealt with in the secmech document. 
Two or three paragraphs explaining why the IETF rules were adopted, what has transpired since RFC 1984 that have shown the rules to be good ones, and advice to implementors who are faced with legal issues implementing the mechanisms described in secmech would go a long way to getting security actually implemented correctly. 
We're not trying to change the laws here, simply to explain why we are not paying attention to some transient local laws when we design protocols with security. 
--Paul Hoffman, Director --Internet Mail Consortium We might develop solutions which are both technially sound and acceptable to the export control people. 
For example, we might use different algorithms for encryption of content, than for the encryption used in identification and authorization services. 
The export control people may be willing to allow longer key length for identification and authorization than for content encryption. 
Jacob Palme jpalme@dsv.su.se (Stockholm University and KTH) for more info see URL: http://www.dsv.su.se/~jpalme what makes you think that this approach is technically sound? 
...or they might not. 
The security folks have gotten used to relying on one part of a government saying "you can do that" but then having another part say "you can't do that". 
And, remember, we'd have to get buy-in from *all* governments, or at least all the ones we thought were significant. 
I think trying to keep the security folks in all governments happy is a classic rathole. 
--Paul Hoffman, Director --Internet Mail Consortium In any case, why is it more acceptable for someone to read my mail than to forge it? 
The IETF plenary debate on this topic in Danvers gave pretty unambiguous input that we should do what's right from a security viewpoint, not what suits governments. 
Brian 
