13.5 - SHORTTAG SHORTTAG YES is required to allow attribute values to be entered without literals (and without attribute name and value indicators) but XML should forbid the other options SHORTTAG currently permits. 
(In the next version of SGML these two roles of SHORTTAG will be clearly distinguished.) 
The big problem here is the TEI, which makes heavy use of the minimized attribute formulation. 
But supporting SHORTTAG flies in the face of our design goal of being able to do useful processing of XML docs without having the DTD. 
The things that are TEI-encoded are already in SGML and thus probably aren't crying out for XML - I suspect that following the advent of XML, there will be a pretty neat &amp; tidy XML-compliant TEI subset (right, Michael and Lou?). 
I think all forms of SHORTTAG complicate parsing, don't add enough, and should be dropped in XML. 
HTML extends SHORTTAG attribute processing to beyond that of SGML (by saying that unknown attribute names and associated values are ignored) for good reasons. 
Attribute entry is one of the areas where users are most prone to make typing errors (e.g. mistyped attribute names) or try to take short cuts (such as leaving out the literal quotes or just entering a token value). 
Martin Bryan, The SGML Centre, Churchdown, Glos. 
GL3 2PU, UK The big problem here is the TEI, which makes heavy use of the minimized attribute formulation. 
But supporting SHORTTAG flies in the face of our design goal of being able to do useful processing of XML docs without having the DTD. 
The things that are TEI-encoded are already in SGML and thus probably aren't crying out for XML - I suspect that following the advent of XML, there will be a pretty neat &amp; tidy XML-compliant TEI subset (right, Michael and Lou?). 
I think all forms of SHORTTAG complicate parsing, don't add enough, and should be dropped in XML. 
Well, I mostly agree -- but I think the grammar should allow unquoted tokens for values (which, as Martin pointed out, is technically part of SHORTTAG in SGML). 
Also, if we do end up providing some kind of partial DTD for dealing with EMPTY and such, we could easily enough support attribute defaulting, which is the other part of SHORTTAG I think is useful on pragmatic (though not theoretical) grounds. 
All the rest of SHORTTAG can be lost: NET,  , / , P Q , etc. 
Though of course " / " can be done without a DTD, and is not too hard to explain, so I'd say it's the least objectionable of the remaining gadgets. 
S That does not seem to me a good reason (other than leaving out quotes, which is not an extension beyond SGML SHORTTAG). 
If attributes are typo-prone, that seems a very good reason to *report the error*. 
A friendly application also has good reason not to crash or terminate after reporting that error, but that seems to me rather a different thing than ignoring the error; an issue of error recovery rather than of syntactic correctness. 
