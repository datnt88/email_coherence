(TOP (NP (SBAR (S (NP (PRP I)) (VP (AUX 've) (VP (VBN posted) (NP (NP (DT an) (NN XSLT) (VB transform) (CC and) (NP (DT a) (VBN generated) (NNP XML) (NNP Schema))) (PP (IN from) (NP (DT the) (JJ DOM) (QP (CD 1) (CD xml)) (NNS sources)))) (PP (IN at) (NP (CD http))))))) (: :) (NN //home.houston.rr.com/curta/domtest/genschema.zip)) )
(TOP (S (NP (PRP It)) (VP (AUX is) (UCP (ADJP (RB really) (JJ fresh)) (CC and) (VP (ADVP (RB only) (RB superficially)) (VBN checked)))) (. .)) )
(TOP (S (NP (PRP I)) (VP (VBD executed) (NP (DT the) (VB transform)) (PP (IN with) (NP (NNP SAXON) (CD 6.2.2)))) (. .)) )
(TOP (S (NP (PRP It)) (VP (MD should) (VP (AUX be) (ADJP (RB pretty) (JJ easy)) (S (VP (TO to) (VP (VP (VB generate) (NP (NP (NP (DT both) (NNP XML) (NNP Schema) (CC and) (NNP DTD) (POS 's)) (PP (IN from) (NP (DT the) (organization (NNP DOM)) (NNS specs)))) (organization (NNP XML)) (NNS sources))) (CC and) (VP (ADVP (RB so)) (VB eliminate) (NP (DT the) (NN need) (SBAR (IN for) (S (NP (NNP XML) (NNP Schema)) (VP (TO to) (VP (VB DTD) (NP (NN conversion))))))))))))) (. .)) )
(TOP (S (ADVP (RB However)) (, ,) (NP (PRP I)) (VP (VBD started) (PP (IN with) (NP (organization (NNP XML)) (NNP Schema))) (ADVP (RB first)) (, ,) (ADVP (RB as) (RB always))) (. .)) )
(TOP (S (NP (DT The) (VB transform)) (VP (AUX is) (RB n't) (ADJP (JJ smart) (RB enough) (S (ADVP (RB yet)) (VP (TO to) (VP (VB handle) (NP (NP (DT an) (JJ read-write) (NN property) (NN name)) (SBAR (WHNP (WDT that)) (S (VP (AUX has) (NP (NP (JJ different) (NNS types)) (PP (IN in) (NP (NP (JJ different) (NNS uses) (CC or) (NNS methods)) (PP (IN with) (NP (NP (JJ different) (NN calling) (NNS signatures)) (PP (IN in) (NP (JJ different) (NNS uses))))))))))))))))) (. .)) )
(TOP (S (S (NP (PRP I)) (VP (AUX 've) (RB not) (VP (VBN tried) (NP (NP (DT the) (VB transform)) (PP (IN against) (NP (DT the) (JJ level) (CD 2) (NNS sources))))))) (, ,) (CC but) (S (NP (PRP I)) (VP (AUX did) (VP (VB take) (NP (NP (DT a) (JJ quick) (NN look)) (PP (IN at) (NP (PRP them))))))) (. .)) )
(TOP (S (NP (EX There)) (VP (AUX were) (NP (NP (DT a) (NN couple)) (PP (IN of) (NP (NP (NNS issues)) (, ,) (ADVP (RB first)) (NP (NP (DT the) (NN directory) (NNS entries)) (PP (IN in) (NP (DT the) (NN xml-sources.zip))))))))) )
(TOP (S (NP (NN file) (VBN contained) ('' '') (NN ..) ('' '')) (, ,) (PP (IN for) (NP (NN example))) (, ,) (NP (CD one) (NN file)) (VP (AUX was) (VP (VBN named) (S (`` ``) (NP (FW ..) (FW \) (FW ..) (FW \) (FW ..) (NN \pubtext\xmlspec-v21-dom.dtd) ('' ''))))) (. .)) )
(TOP (S (NP (DT This)) (VP (VBZ requires) (S (NP (PRP you)) (VP (TO to) (VP (VB unpack) (PP (TO to) (NP (DT a) (NN directory))) (NP (QP (IN at) (JJS least) (CD 3)) (NNS levels)) (ADVP (RB deep)))))) (. .)) )
(TOP (S (NP (PRP It)) (VP (MD would) (ADVP (RB also)) (VP (AUX be) (ADJP (JJ helpful) (S (VP (TO to) (VP (VB know) (SBAR (WHNP (WP what) (NNS parameters)) (S (VP (MD can) (VP (VB accept) (NP (DT a) (JJ null) (NN string) (CC or) (NN node)))))))))))) (. .)) )
(TOP (S (NP (PRP I)) (VP (AUX 'm) (RB not) (ADJP (JJ sure) (SBAR (IN that) (S (NP (PRP I)) (VP (VBP understand) (NP (PRP$ your) (NN shorthand))))))) (. .)) )
(TOP (FRAG (ADJP (RB So) (JJ point) (PP (IN by) (NP (NN point)))) (: :)) )
(TOP (S (NP (NNP *) (NNP Use)) (VP (VBZ IDL) (SBAR (IN for) (S (NP (NN attribute)) (VP (VBZ /) (NP (NN method) (NNS names))))))) )
(TOP (SQ (AUX Do) (NP (PRP you)) (VP (VB think) (SBAR (S (NP (DT the) (JJ recent) (NNS schemas)) (VP (AUX do) (RB not) (VP (VB use) (NP (NNP IDL)) (PP (IN for) (NP (NN attribute) (NN method) (NNS names)))))))) (. ?)) )
(TOP (S (S (NP (NNP *)) (VP (VB Specify) (NP (NP (NN var) (POS 's)) (, ,) (NP (NNS parameters)) (, ,) (CC and) (NP (NNS returnTypes))) (PP (VBG according) (PP (TO to) (NP (DT the) (NN spec)))))) (: :) (S (NP (NP (NNP Spec) (RB always)) (: --) (VP (VBN required) (PP (IN in) (NP (DT the) (FW schema) (FW Spec))) (ADVP (RB sometimes))) (: --) (ADJP (JJ optional) (PP (IN in) (NP (NP (DT the) (FW schema) (FW Spec)) (ADVP (RB never))))) (: --)) (VP (MD should) (RB not) (VP (VB appear) (PP (IN in) (NP (DT the) (NN schema))))))) )
(TOP (S (NP (NNP returnType) (POS 's)) (VP (AUX do) (RB not) (VP (AUX need) (S (VP (TO to) (VP (AUX be) (PP (IN in) (NP (DT the) (NNS tests))) (SBAR (IN since) (S (NP (PRP they)) (VP (AUX are) (VP (VBN fixed) (PP (IN by) (NP (DT the) (organization (NNP DOM)) (NNS spec)))))))))))) (. .)) )
(TOP (S (NP (PRP I)) (VP (VBP believe) (SBAR (IN that) (S (NP (NP (NN anything)) (SBAR (WHNP (WDT that)) (S (VP (AUX is) (VP (VBN fixed) (PP (IN by) (NP (DT the) (organization (NNP DOM)) (NN spec)))))))) (VP (MD should) (RB not) (VP (AUX be) (VP (VP (VBN replicated) (PP (IN in) (NP (DT the) (NN instance) (NN document)))) (CC or) (VP (VBN implied) (S (VP (TO to) (VP (AUX be) (PP (IN in) (NP (DT the) (NN instance) (NN document)))))) (PP (IN by) (NP (NP (VBN fixed) (CC or) (JJ defaulted) (NNS attributes)) (PP (IN in) (NP (DT the) (NNP DTD)))))))))))) (. .)) )
(TOP (S (NP (DT Any) (NN code) (NN generation)) (VP (MD can) (VP (VB get) (NP (DT the) (VBN needed) (NN information)) (PP (CC either) (PP (IN from) (NP (DT the) (organization (FW DOM)) (FW spec))) (CC or) (PP (IN from) (NP (NP (NNS annotations)) (PP (IN in) (NP (DT the) (NN schema)))))))) (. .)) )
(TOP (S (NP (PRP I)) (VP (MD would) (VP (VB require) (NP (NP (DT a) (JJ var) (NN attribute)) (PP (IN for) (NP (NP (DT any) (JJ read-only) (NN accessor)) (CC or) (NP (DT any) (JJ non-void) (NN function))))))) (. .)) )
(TOP (S (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (PRP it)) (VP (AUX is) (ADJP (RB highly) (JJ unlikely)) (SBAR (IN that) (S (NP (PRP you)) (VP (MD would) (VP (VB want) (S (VP (TO to) (VP (VP (VB invoke) (NP (DT a) (NN function))) (CC or) (VP (VB access) (NP (DT a) (NN property)))))) (SBAR (WHADVP (WRB where)) (S (NP (PRP it)) (VP (MD would) (RB not) (VP (AUX be) (ADJP (JJ beneficial) (S (VP (TO to) (VP (VP (VB make) (NP (DT an) (NN assertion)) (PP (IN on) (NP (DT the) (NN return) (NN value)))) (CC or) (VP (VB use) (NP (PRP it)) (PP (IN in) (NP (DT a) (JJ later) (NN call)))))))))))))))))))) (. .)) )
(TOP (S (SBAR (IN If) (S (NP (EX there)) (VP (AUX is) (NP (DT a) (NN method) (CC or) (NN property)) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (NN return) (NN value)) (VP (AUX is) (ADJP (JJ meaningless)))))))) (, ,) (ADVP (RB then)) (NP (NP (DT the) (NN overhead)) (PP (IN of) (S (VP (VBG declaring) (NP (NP (DT a) (NN variable)) (SBAR (S (VP (TO to) (VP (VB hold) (NP (PRP it))))))))))) (VP (AUX is) (ADJP (JJ trivial))) (. .)) )
(TOP (S (S (VP (VBG Making) (S (NP (PRP it)) (ADJP (JJ optional))) (SBAR (WHADVP (WRB when)) (S (NP (PRP it)) (VP (AUX is) (VP (VBN used) (NP (NP (percentage (CD 99) (NN %))) (PP (IN of) (NP (DT the) (NN type)))))))))) (VP (AUX is) (ADJP (RBR more) (JJ likely) (S (VP (TO to) (VP (VB cause) (NP (NNS errors))))))) (. .)) )
(TOP (S (S (NP (JJ Read-write) (NNS properties)) (VP (AUX have) (NP (DT both) (NN var) (CC and) (NN value) (JJ optional)))) (, ,) (S (S (ADVP (RB however)) (VP (VBG omitting) (NP (DT both)) (PRT (RP out)))) (VP (AUX is) (NP (DT a) (DT no) (NN operation)))) (. .)) )
(TOP (S (NP (PRP I)) (VP (AUX 've) (VP (AUX had) (NP (NP (DT a) (NN change)) (PP (IN of) (NP (NN heart)))) (PP (IN on) (NP (NNS parameters))))) (. .)) )
(TOP (S (PP (IN In) (NP (PRP$ my) (JJ manual) (NN schema))) (, ,) (NP (NP (NNS parameters)) (SBAR (WHNP (WDT that)) (S (VP (MD could) (VP (AUX be) (ADVP (RB null))))))) (VP (AUX were) (ADJP (JJ optional))) (. .)) )
(TOP (S (ADVP (RB However)) (S (NP (DT that) (NN information)) (VP (AUX is) (RB not) (PP (IN in) (NP (NP (DT the) (JJ xml) (NN source)) (PP (IN for) (NP (DT the) (organization (NN DOM)) (NN spec))))))) (CC and) (S (NP (PRP I)) (VP (AUX do) (RB n't) (VP (VB think) (SBAR (S (NP (PRP we)) (VP (VBP want) (S (VP (TO to) (VP (VB introduce) (NP (DT any) (JJ supplimentary) (NN information))))))))))) (. .)) )
(TOP (SBARQ (RB So) (SBAR (IN if) (S (NP (DT the) (NN parameter)) (VP (AUX is) (VP (VBN required))))) (, ,) (WHADVP (WRB how)) (SQ (AUX do) (NP (PRP you)) (VP (VB specify) (SBAR (IN that) (S (NP (PRP it)) (VP (AUX is) (ADJP (JJ null))))))) (. .)) )
(TOP (S (NP (CD One) (NN option)) (VP (MD would) (VP (AUX be) (S (VP (TO to) (VP (VB make) (VP (VB allow) (`` ``) (ADVP (RB null)) ('' '') (PP (IN as) (NP (NP (DT a) (JJ special) (NN value)) (PP (IN in) (NP (DT the) (NN argument))))))))))) (. .)) )
(TOP (S (ADVP (RB Unfortunately)) (, ,) (NP (DT that)) (VP (MD could) (VP (ADVP (RB seriously)) (VB complicate) (NP (NP (DT the) (NN code) (NN generation)) (PP (IN for) (NP (NNP C++)))))) (. .)) )
(TOP (S (S (NP (PRP It)) (VP (AUX is) (ADJP (NP (DT a) (JJ little)) (RBR more) (JJ awkward)) (PP (IN in) (NP (DT the) (NN test))))) (, ,) (CC but) (S (NP (PRP it)) (VP (MD could) (ADVP (RB greatly)) (VP (VB simplify) (NP (DT the) (NNP C++) (NN code) (NN generation)) (, ,) (SBAR (IN if) (S (NP (JJ null) (NNS parameters)) (VP (AUX are) (VP (VBN passed) (PP (IN by) (S (VP (VBG passing) (PP (IN in) (NP (NP (ADJP (VBN declared) (CC but) (VBN uninitialized)) (NNS variables)) (, ,) (PP (JJ such) (IN as) (S (: :) (NP (PRP I)) (VP (MD would) (VP (ADVP (RB explicitly)) (VB declare) (NP (DT all) (NNS variables)))))))))))))))))) (. .)) )
(TOP (S (PP (IN For) (NP (NP (NNS languages)) (SBAR (WHADVP (WRB where)) (S (NP (PRP$ their)) (VP (AUX is) (NP (DT no) (JJ common) (NN ancestor) (NN class))))))) (, ,) (ADVP (RB then)) (NP (PRP it)) (VP (MD would) (VP (AUX be) (ADJP (ADJP (JJ critical)) (CC and) (ADJP (RB potentially) (JJ complicated))) (S (VP (TO to) (VP (VB infer) (NP (DT the) (JJ appropriate) (NN type))))))) (. .)) )
(TOP (S (NP (PRP It)) (VP (AUX is) (ADJP (JJR safer)) (S (VP (TO to) (VP (VP (VB code) (NP (NP (DT the) (NNS tests)) (PP (IN with) (NP (JJ explicit) (NN declaration)))) (ADVP (RB now))) (CC and) (VP (VB find) (PRT (RP out)) (ADVP (RB later)) (SBAR (IN that) (S (NP (PRP it)) (VP (AUX was) (ADJP (JJ unnecessary) (SBAR (IN than) (S (VP (TO to) (VP (VB depend) (PP (IN on) (NP (DT the) (NN ability) (S (VP (TO to) (VP (VP (VB infer) (NP (NNS types)) (PP (IN from) (NP (NN context)))) (CC and) (VP (VB find) (PRT (RP out)) (ADVP (RB later)) (SBAR (IN that) (S (NP (PRP it)) (VP (AUX was) (ADJP (JJ difficult) (SBAR (S (VP (TO to) (VP (AUX do)))))))))))))))))))))))))))) (. .)) )
(TOP (FRAG (NP (NNP *) (NNP Interface) (NN name)) (: --) (S (VP (MD should) (VP (VP (AUX be) (ADJP (JJ inferable)) (PP (IN from) (ADVP (RB somewhere))) (, ,) (CC or) (VP (VBN defined) (PP (IN as) (NP (NP (DT an) (NN attribute)) (PP (IN on) (NP (DT the) (NN method) (NN name))))))) (: -) (VP (VBD defaulted) (PP (IN as) (NP (DT an) (NN attribute))) (PP (IN in) (NP (NP (NNS cases)) (SBAR (WHADVP (WRB where)) (S (NP (PRP it)) (VP (AUX is) (ADJP (JJ unambiguous)))))))) (: -) (NP (NP (CD one)) (PP (IN of) (NP (NP (DT a) (NN list)) (SBAR (IN if) (S (NP (PRP it)) (VP (AUX is) (ADJP (JJ available)) (PP (IN in) (NP (QP (JJR more) (IN than) (CD one)) (NN place)))))))))))) (. .)) )
(TOP (S (NP (DT The) (NNP interface) (NN attribute)) (VP (AUX has) (S (VP (TO to) (VP (AUX be) (ADVP (RB there)) (SBAR (WHADVP (WRB when)) (S (NP (DT the) (JJ same) (NN method) (CC or) (NN property)) (VP (AUX is) (VP (VBN introduced) (PP (IN in) (NP (NP (JJ multiple) (NNS interfaces)) (PRN (-LRB- -LRB-) (NP (NP (NNP ProcessingInstruction.data) (CC and) (NNP CharacterData.data)) (PP (IN for) (NP (NN example)))) (-RRB- -RRB-)))))))))))) (. .)) )
(TOP (S (SBAR (IN If) (S (RB not) (VP (VBN required)))) (, ,) (ADVP (RB then)) (NP (PRP we)) (VP (AUX need) (S (VP (TO to) (VP (VB choose) (SBAR (IN whether) (S (NP (DT the) (NNP interface) (NN attribute)) (VP (AUX is) (: :) (PRN (DT a) (-RRB- -RRB-) (ADJP (RB not) (JJ present) (PP (IN in) (NP (DT the) (NN DTD) (CC or) (NN schema) (NN b)))) (-RRB- -RRB-)) (NP (NP (DT an) (JJ optional) (NN attribute)) (SBAR (WHNP (WP$ whose) (JJ only) (JJ acceptible) (NN value)) (S (VP (AUX is) (NP (NP (DT the) (NNP interface)) (SBAR (WHNP (WDT that)) (S (VP (VBD defined) (NP (DT the) (NN method))))))))))))))))) (. .)) )
(TOP (S (LST (LS c) (-RRB- -RRB-)) (NP (DT an) (JJ optional)) (VP (VBP attribute) (SBAR (WHNP (WP$ whose) (JJ acceptible) (NNS values)) (S (VP (AUX are) (NP (NP (DT the) (VBG defining) (NNP interface)) (CC and) (NP (DT any) (VBN derived) (NNS interfaces))))))) (. .)) )
(TOP (SINV (VP (VBG Specifying) (NP (DT a) (VBN derived) (NNP interface))) (VP (VBZ adds)) (NP (DT an) (JJ implicit) (JJ instanceOf) (NN assertion)) (. .)) )
(TOP (S (NP (PRP I)) (VP (VBP think) (SBAR (IN that) (S (S (VP (VBG using) (NP (DT an) (JJ explcit) (JJ instanceOf) (NN assertion)))) (VP (AUX is) (ADJP (ADJP (RBR more) (JJ appropriate)) (PP (IN than) (S (VP (VBG implying) (NP (NN one)) (PP (IN by) (S (VP (VBG specifying) (NP (DT a) (VBN derived) (NN type))))))))))))) (. .)) )
(TOP (S (S (INTJ (DT That) (AUX is)) (, ,) (NP (PRP I)) (VP (MD would) (VP (VB prefer)))) (: :) (S (S (VP (TO to) (VP (NN Option) (NP (NNP b))))) (VP (MD would) (VP (VB allow) (S (NP (NNS tests)) (VP (TO to) (VP (VP (VB anticipate) (NP (DT an) (NN method))) (CC or) (VP (VB attribute) (S (VP (AUXG being) (VP (ADVP (NN multiple)) (VBN defined))))))))))) (. .)) )
(TOP (NP (NP (CD *) (NNS Exceptions)) (: --) (S (VP (VP (VB correspond) (PP (VBG according) (PP (TO to) (NP (DT the) (NN spec)))) (: --) (ADVP (RB ie))) (, ,) (RB only) (VP (AUX be) (ADJP (JJ able) (S (VP (TO to) (VP (VB specify) (NP (NP (DT the) (JJ particular) (NNS exceptions)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (AUX be) (VP (VBN thrown) (PP (IN on) (NP (DT a) (VBN given) (NN attribute) (CC or) (NN method)))))))))))))))) (. .)) )
(TOP (S (NP (DT any) (NNS others)) (VP (VBD ..)) (. .)) )
(TOP (S (PP (IN In) (NP (PRP$ my) (JJ recent) (NNS schemas))) (, ,) (NP (NP (NN assertDOMException) (NNS code=)) (`` ``) (NX (NNP INDEX_SIZE_ERR)) ('' '')) (VP (MD can) (VP (AUX be) (VP (VBN used) (S (VP (TO to) (VP (VB assert) (SBAR (IN that) (S (NP (DT the) (VBN enclosed) (NN statement)) (VP (MD should) (VP (VB throw) (NP (DT a) (organization (JJ DOM) (NN Exception))) (PP (IN with) (NP (NN code=INDEX_SIZE_ERR))))))))))))) (. .)) )
(TOP (S (NP (NP (JJ Only) (NNS statements)) (SBAR (WHNP (WDT that)) (S (VP (AUX have) (VP (AUX been) (VP (VBN declared) (S (VP (TO to) (VP (VB throw) (NP (NN DOMException))))))))))) (VP (MD can) (VP (VB appear) (PP (IN within) (NP (NN assertDOMException))) (SBAR (WHADVP (WRB however)) (S (NP (EX there)) (VP (AUX is) (NP (NP (NN nothing)) (SBAR (WHNP (IN that)) (S (VP (NNS constraints) (NP (DT the) (NN code)) (S (VP (TO to) (VP (AUX be) (NP (NP (DT an) (JJ appropriate) (NN value)) (PP (IN for) (NP (DT the) (NN method)))))))))))))))) (. .)) )
(TOP (S (NP (PRP I)) (VP (AUX had) (ADVP (RB originally)) (VP (AUX had) (NP (NP (DT an) (JJ expectException=) ('' '') ('' '') (NN attribute)) (PP (IN on) (NP (DT the) (NN statement))) (SBAR (WHNP (WDT which)) (S (VP (MD could) (VP (VB constrain) (NP (DT the) (NN code) (NNS values)) (PP (TO to) (NP (DT the) (VBN declared) (NN list)))))))))) (. .)) )
(TOP (S (ADVP (RB However)) (NP (DT that)) (VP (AUX had) (NP (NP (DT the) (NNS disadvantages)) (PP (IN of) (S (VP (CC either) (VP (VBG requiring) (S (NP (DT all) (NNS invocations)) (VP (TO to) (VP (AUX have) (NP (NN ID)) (SBAR (RB so) (IN that) (S (NP (DT the) (NN exception) (NNS assertions)) (VP (MD could) (VP (AUX be) (VP (VBN identified)))))))))) (CC or) (VP (VBG risking) (SBAR (IN that) (S (NP (NN exception) (NNS assertions)) (VP (MD would) (RB not) (VP (AUX have) (NP (DT an) (NN ID)))))))))))) (. .)) )
(TOP (S (ADVP (RB Also)) (, ,) (NP (PRP it)) (VP (MD would) (VP (VB require) (S (VP (VBG mixing) (NP (DT the))))))) )
(TOP (S (NP (NP (NN production)) (PP (IN of) (NP (NP (DT the) (NN try)) (PRN (-LRB- -LCB-) (NP (-RRB- -RCB-) (NN /catch) (-LRB- -LCB-)) (-RRB- -RCB-))))) (VP (VBP /fail) (NP (NN production)) (PP (IN in) (NP (NP (DT a) (NN lot)) (PP (IN of) (NP (NNS places)))))) (. .)) )
(TOP (S (S (SBAR (IN If) (S (NP (PRP it)) (VP (AUX is) (ADJP (JJ compelling) (S (VP (TO to) (VP (VB make) (ADJP (JJ sure) (SBAR (IN that) (S (NP (DT the) (NNS codes)) (VP (AUX are) (PP (IN in) (NP (NN synch)))))))))))))) (, ,) (ADVP (RB then)) (NP (PRP I)) (VP (MD would) (VP (VB introduce) (NP (NP (JJ specific) (NNS assertions)) (PP (IN for) (NP (DT each) (NN code))))))) (, ,) (FW i.e.)) )
(TOP (S (CC but) (NP (DT that)) (VP (VBZ seems) (ADVP (RB overkill)) (PP (TO to) (NP (PRP me)))) (. .)) )
(TOP (S (S (NP (JJ -LSB-mb) (NNS -RSB-)) (NP (PRP I)) (VP (VBP agree) (SBAR (IN that) (S (NP (DT this)) (VP (VBZ overcomplicates) (NP (DT the) (NN transformation))))))) (: --) (S (NP (PRP it)) (VP (VBZ seems) (SBAR (IN as) (IN though) (S (NP (PRP it)) (VP (MD would) (VP (AUX be) (ADJP (JJR easier)) (S (VP (TO to) (VP (VB put) (NP (PRP them)) (ADVP (RB in))))))))))) (. .)) )
(TOP (S (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (PRP it)) (VP (AUX is) (ADJP (ADJP (JJR easier)) (SBAR (IN for) (S (NP (DT the) (VB transform)) (VP (TO to) (VP (VB go) (PP (TO to) (NP (CD one) (NN resource))) (PP (IN for) (NP (NP (PRP$ its) (NN definition)) (PP (IN of) (NP (DT the) (organization (NN DOM)) (SBAR (IN than) (S (VP (TO to) (VP (VB try) (S (VP (TO to) (VP (VB reconcile) (NP (NP (NP (DT some) (NN information)) (PP (IN from) (NP (DT the) (NN instance)))) (CC and) (NP (DT some))) (PP (IN from) (NP (DT a) (organization (JJ DOM)) (NN definition) (CC or) (JJ derivative))))))))))))))))))))))) (. .)) )
(TOP (S (ADVP (RB However)) (, ,) (NP (PRP we)) (VP (MD will) (RB n't) (VP (VB resolve) (NP (DT that)) (SBAR (IN until) (S (NP (PRP we)) (VP (VBP see) (NP (DT each) (NNS others) (NNS attempts)) (PP (IN at) (NP (VBZ transforms)))))))) (. .)) )
(TOP (S (SBAR (IN If) (S (NP (PRP I)) (VP (AUX 'm) (ADJP (JJ wrong))))) (S (NP (PRP we)) (VP (MD can) (VP (VB add) (NP (DT the) (NNS returnValues)) (PP (TO to) (NP (DT the) (NN DTD) (POS 's))) (PP (IN at) (NP (DT that) (NN time)))))) (CC and) (S (NP (PRP it)) (VP (MD would) (RB not) (VP (VB disrupt) (NP (NP (DT the) (NNS tests)) (SBAR (WHNP (WDT that)) (S (VP (AUX have) (VP (AUX been) (VP (VBN authored)))))))))) (. .)) )
(TOP (S (S (NP (NP (JJ -LSB-mb) (JJ -RSB-) (NNS methods)) (PP (JJ such) (IN as) (NP (NP (NN importNode)) (, ,) (INTJ (VB cloneNode) (, ,) (VB normalize)) (, ,) (FW etc)))) (VP (VBP make) (NP (NP (NNS changes)) (PP (TO to) (NP (DT the) (NN dom) (NN tree)))))) (CC and) (S (NP (PRP you)) (ADVP (RB already)) (VP (AUX have) (DT a) (VP (VB handle) (PP (TO to) (NP (PRP it))) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (AUX be) (VP (VBN used) (ADVP (RB later)))))))))) (. .)) )
(TOP (S (S (VP (VBG Introducing) (NP (NP (DT a) (NN var)) (SBAR (WHADVP (WRB where)) (S (NP (CD one)) (VP (AUX is) (ADJP (JJ meaningless)))))))) (VP (AUX is) (ADJP (JJ confusing) (PP (TO to) (NP (DT the) (NN test) (NN writer))))) (. .)) )
(TOP (S (NP (PRP I)) (VP (AUX do) (RB n't) (VP (VB follow) (NP (NP (PRP$ your) (NN point)) (VP (VBG regarding) (S (VP (VBG assiging) (NP (NP (DT a) (NN call)) (SBAR (S (VP (TO to) (VP (VB var) (SBAR (WHADVP (WRB when)) (S (NP (NN nothing)) (VP (AUX is) (VP (VBN returned)))))))))))))))) (. .)) )
(TOP (S (S (NP (NN Something)) (VP (AUX is) (VP (VBN returned) (PP (IN from) (NP (NN importNode) (CC and) (NN cloneNode)))))) (CC and) (S (NP (EX there)) (VP (AUX are) (NP (NNS statements) (SBAR (IN that) (S (NP (PRP you)) (VP (MD could) (VP (VB make) (PP (IN about) (NP (DT the) (NN return) (NN value)))))))))) (. .)) )
(TOP (S (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (NP (DT the) (NN user) (NN experience)) (PP (IN in) (NP (DT a) (NX (NX (NN DTD)) (CC or) (NX (JJ schema) (JJ aware) (NN editor)))))) (VP (MD would) (VP (AUX be) (ADJP (JJR better)) (SBAR (IN if) (S (NP (NN var)) (VP (AUX was) (VP (VBN required) (PP (IN for) (NP (NP (NNS methods)) (SBAR (WHNP (WDT that)) (S (VP (VBD returned) (NP (DT a) (NN value)))))))))))))))) (. .)) )
(TOP (S (ADVP (RB However)) (, ,) (ADVP (RB maybe)) (NP (DT that)) (VP (AUX is) (NP (NP (NN something)) (SBAR (S (NP (PRP we)) (VP (MD could) (VP (NN experiment) (PP (IN with)) (PP (IN during) (NP (NN test) (NN authoring))))))))) (. .)) )
(TOP (S (NP (NP (JJ Next) (NN time)) (SBAR (S (NP (PRP I)) (VP (VBP generate) (NP (DT the) (NN schema)))))) (, ,) (NP (PRP I)) (VP (MD 'll) (VP (VB make) (S (NP (PRP it)) (ADJP (JJ optional))))) (. .)) )
(TOP (S (NP (JJ -LSB-mb) (NNS -RSB-)) (VP (MD Could) (S (NP (PRP you)) (VP (VB explain) (SBAR (WHNP (WP what)) (S (NP (NP (DT the) (NN assertInstance)) (PP (IN of))) (VP (MD would) (VP (AUX do) (PP (IN after) (NP (NN transformation)))))))))) (. ?)) )
(TOP (S (PP (IN In) (NP (NNP Java))) (NP (PRP it)) (VP (MD would) (VP (AUX be) (NP (NP (NP (NN something)) (PP (IN like) (: :) (PP (IN if) (-LRB- -LRB-)) (. !)) (PRN (-LRB- -LRB-) (NP (JJ node) (JJ instanceof) (NN Comment)) (-RRB- -RRB-)) (-RRB- -RRB-) (PRN (-LRB- -LCB-) (VP (VB fail) (-LRB- -LRB-)) (-RRB- -RRB-)) (: ;) (PP (IN In) (NP (NP (NN ECMAScript)) (SBAR (S (NP (DT the) (VB transform)) (VP (MD might) (VP (VB convert) (NP (PRP it)) (PP (TO to)))))))) (: :)) (IN if) (NP (-LRB- -LRB-) (NN node.nodeType)))))) )
(TOP (FRAG (. !) (X (SYM =)) (VP (VB COMMENT_NODE) (-RRB- -RRB-) (PRN (-LRB- -LCB-) (VB fail) (-LRB- -LRB-) (-RRB- -RRB-))) (: ;)) )
(TOP (S (NP (NNP -LSB-mb)) (VP (VBD -RSB-) (NP (NNP Overkill))) (. ?)) )
(TOP (SQ (AUX Have) (NP (PRP you)) (VP (VBN seen) (NP (NP (DT the) (NN size)) (PP (IN of) (NP (DT the) (NN schema)))) (ADVP (RB recently))) (. ?)) )
(TOP (SBARQ (WHADVP (WRB Why)) (SQ (MD would) (NP (PRP we)) (VP (VP (VB tighten) (PRT (RP up)) (NP (NNS constraints)) (ADVP (RB everywhere) (RB else))) (CC and) (RB not) (VP (VB follow) (PRT (RP through)) (ADVP (RB here)) (PRN (: --) (S (NP (PRP it)) (VP (VBZ seems) (SBAR (IN that) (S (NP (PRP we)) (VP (AUX are) (ADVP (NP (percentage (CD 90) (NN %))) (RB there)) (ADVP (RB already))))))) (: --)) (SBAR (WHADVP (WRB why)) (S (RB not) (VP (VBP finish) (NP (DT the) (date (JJ last) (CD 10)) (NN %)))))))) (. ?)) )
(TOP (S (INTJ (UH Okay)) (, ,) (ADVP (RB so)) (VP (VB generate) (NP (NP (DT an) (VB assert) (NN element)) (PP (IN for) (NP (NP (DT every) (NN exception) (NN code)) (SBAR (WHNP (WP$ whose) (JJ only) (JJ valid) (NN content)) (S (VP (AUX are) (NP (NP (DT those) (NNS methods) (CC or) (NNS properties)) (SBAR (WHNP (WDT that)) (S (VP (VBP throw) (NP (DT that) (JJ specific) (NN code))))))))))))) (. .)) )
(TOP (S (NP (person (NNP Curt))) (, ,) (NP (PRP I)) (VP (JJ second) (NP (NNP Dimitris)) (, ,) (SBAR (IN in) (IN that) (S (NP (PRP I)) (VP (MD 'd) (VP (AUX be) (ADJP (RB perfectly) (JJ willing) (S (VP (TO to) (VP (VB help) (PP (IN in) (S (VP (VP (ADVP (RB either)) (VBG generating) (NP (DT the) (NN schema))) (, ,) (CC or) (VP (VBG supplementing) (NP (PRP it)) (PP (IN after) (NP (NP (DT the) (NN fact)) (: --) (S (ADVP (RB just)) (VP (VB let) (S (NP (PRP me)) (VP (VB know) (SBAR (WHADVP (WRB where)) (S (NP (PRP you)) (VP (AUX need) (NP (NN help)))))))))))))))))))))))) (. .)) )
(TOP (S (S (NP (JJ -LSB-mb) (NNS -RSB-)) (NP (PRP I)) (VP (VBP agree) (SBAR (IN that) (S (NP (DT this)) (VP (VBZ overcomplicates) (NP (DT the) (NN transformation))))))) (: --) (S (NP (PRP it)) (VP (VBZ seems) (SBAR (IN as) (IN though) (S (NP (PRP it)) (VP (MD would) (VP (AUX be) (ADJP (JJR easier)) (S (VP (TO to) (VP (VB put) (NP (PRP them)) (ADVP (RB in))))))))))) (. .)) )
(TOP (S (NP (NN -LSB-mb) (NNS -RSB-)) (VP (VB Please) (PRT (RP forward)) (NP (NP (NNS details)) (PP (IN on) (SBAR (WHADVP (WRB how)) (S (NP (DT this)) (VP (MD would) (VP (VB happen)))))))) (. .)) )
(TOP (S (NP (PRP I)) (VP (AUX am) (VP (VBG reading) (NP (PRP it)) (SBAR (IN as) (S (NP (NP (DT the) (NN transformation)) (SBAR (WHNP (WDT that)) (S (VP (VBZ generates) (NP (DT the) (NN code)))))) (VP (MD would) (VP (AUX have) (S (VP (TO to) (VP (VP (VB read) (NP (PDT both) (DT the) (NN instance)) (NP (NP (NN test) (NNS definitions)) (CC and) (NP (DT the) (organization (FW DOM)) (FW spec)))) (, ,) (VP (VB look) (PRT (RP up)) (PP (IN for) (NP (DT each) (NN method))) (SBAR (WHNP (WP what)) (S (NP (DT the) (NN returnType)) (VP (MD should) (VP (AUX be)))))) (, ,) (CC and) (RB then) (VP (VB generate) (NP (DT the) (NN code)))))))))))) (. .)) )
(TOP (S (PP (IN On) (NP (DT the) (JJ other) (NN hand))) (, ,) (SBAR (IN if) (S (NP (PRP we)) (VP (VB specify) (NP (PRP them)) (PP (IN in) (NP (DT the) (NN schema) (NN def)))))) (, ,) (NP (PRP they)) (VP (MD will) (VP (AUX be) (ADJP (ADJP (JJ visible) (PP (IN in) (NP (DT the) (NN instance)))) (, ,) (CC and) (ADJP (JJ accessible) (PP (TO to) (NP (DT the) (NN transformation))))) (PP (ADVP (RB directly)) (IN without) (S (VP (AUXG having) (S (VP (TO to) (VP (VB go) (ADVP (RB elsewhere)))))))))) (. .)) )
(TOP (S (VP (NN NOTE) (: :) (S (NP (PRP I)) (VP (AUX do) (RB n't) (VP (VB want) (S (VP (TO to) (VP (VB proceed) (PP (IN with) (NP (QP (JJR more) (IN than) (CD one)) (NN transformation)))))))))) (. .)) )
(TOP (S (PP (VBG According) (PP (TO to) (NP (DT the) (NNS minutes)))) (, ,) (NP (NNP NIST)) (VP (AUX has) (NP (NP (NN responsibility)) (PP (IN for) (NP (DT the) (NNP Java) (NN transformation))))) (. .)) )
(TOP (S (SBAR (IN If) (S (NP (PRP you)) (VP (VBP plan) (PP (IN on) (S (VP (VBG writing) (NP (CD one)) (ADVP (RB as) (RB well)))))))) (, ,) (VP (VP (VB let) (S (NP (PRP 's)) (VP (VB discuss) (NP (PRP it))))) (, ,) (CC and) (VP (VB try) (S (VP (TO to) (VP (VB avoid) (S (VP (VBG creating) (NP (DT a) (NN mess)) (PP (IN with) (NP (DT the) (NN transformation)))))))))) (. .)) )
(TOP (S (NP (PRP I)) (VP (MD would) (VP (ADVP (RB much)) (VB prefer) (NP (DT the) (JJ divide-and-conquer) (NN method)) (PP (TO to) (NP (DT the) (NN everybody))) (VP (VP (VB try) (NP (NN everything))) (CC and) (VP (VB try) (S (VP (TO to) (VP (VB reconcile) (NP (NNS things)) (PP (IN in) (NP (DT the) (NN end)))))))))) (. .)) )
(TOP (S (S (NP (JJ -LSB-mb) (NNS -RSB-)) (ADJP (person (JJ Sorry)))) (, ,) (NP (DT that)) (VP (AUX 's) (SBAR (WHNP (WP what)) (S (NP (PRP I)) (VP (VBP get) (PP (IN for) (S (VP (VBG working) (PP (IN without) (NP (NP (DT a) (NN net)) (PRN (-LRB- -LRB-) (NP (DT the) (organization (NN DOM)) (NN spec)) (-RRB- -RRB-))))))))))) (. .)) )
(TOP (S (S (S (ADVP (RB Just)) (VP (VBG glancing) (PRT (RP through)))) (, ,) (NP (PRP I)) (VP (AUX 've) (VP (VBN picked) (PRT (RP up)) (NP (NP (DT the) (NN following)) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (NN spec)) (VP (VBZ says) (NP (DT No) (NN Return) (NN Value))))))))) (: :) (S (NP (NP (VB normalize)) (, ,) (ADJP (JJ appendData) (, ,) (JJ deleteData) (, ,) (JJ insertData) (, ,) (JJ replaceData) (, ,) (JJ setAttribute)) (, ,)) (VP (VBZ setAttributeNS))) (: --) (S (NP (PRP I)) (VP (AUX 'm) (ADJP (JJ sure) (SBAR (S (NP (EX there)) (VP (AUX are) (NP (NNS others)))))))) (. .)) )
(TOP (S (S (NP (PRP I)) (ADVP (RB just)) (ADVP (RB quickly)) (VP (VBD looked) (PP (IN at) (NP (DT the) (JJ Return) (NNP Value) (NN section))))) (, ,) (CC so) (S (SBAR (IN if) (S (NP (PRP I)) (VP (AUX 've) (VP (VBN overlooked) (NP (NN something)))))) (, ,) (VP (VB forgive) (NP (PRP me)))) (. .)) )
(TOP (S (NP (PRP I)) (VP (MD 'll) (VP (VB look) (ADVP (NP (DT a) (RB little)) (RBR closer)) (PP (IN in) (NP (DT the) (time (NN morning)))))) (. .)) )
(TOP (S (NP (PRP I)) (VP (VBP agree))) )
(TOP (S (NP (DT that) (NN var)) (VP (MD should) (VP (AUX be) (VP (VBN required) (PP (IN for) (NP (NP (NNS methods)) (SBAR (WHNP (WDT that)) (S (VP (VBP return) (NP (NNS values)))))))))) (. .)) )
(TOP (S (NP (PRP$ My) (NN point)) (VP (AUX is) (SBAR (IN that) (S (AUX is) (VP (MD should) (RB not) (VP (VB exist) (PP (IN for) (NP (NP (NNS methods)) (SBAR (WHNP (WDT that)) (S (VP (AUX do) (RB not) (VP (VB return) (NP (NNS values))))))))))))) (. .)) )
(TOP (S (NP (NNP Ditto)) (PP (IN for) (NP (NP (DT any) (JJ other) (NN part)) (PP (IN of) (NP (DT a) (organization (NN DOM)))))) (VP (VB construct) (PRN (: --) (S (ADVP (RB only)) (VP (VB define) (NP (NNS attributes)) (PP (IN on) (NP (DT these) (NNS methods))) (SBAR (IN if) (S (NP (PRP they)) (ADVP (RB actually)) (VP (AUX are) (ADVP (RB there)) (PP (IN in) (NP (DT the) (NN spec)))))))) (: --)) (SBAR (IN if) (S (RB not) (, ,) (VP (AUX do) (RB n't) (VP (VB define) (NP (PRP them))))))) (. .)) )
(TOP (S (S (SBAR (IN If) (S (NP (PRP they)) (VP (AUX are) (ADJP (JJ optional))))) (, ,) (NP (PRP we)) (VP (MD should) (VP (VB discuss) (SBAR (IN whether) (S (NP (PRP they)) (VP (MD should) (VP (AUX be) (ADJP (JJ optional)) (PP (IN in) (NP (NP (DT the) (NN schema)) (PRN (, ,) (CC or) (-LRB- -LRB-) (NP (JJ null) (NNP |) (NNP CDATA)) (-RRB- -RRB-))))))))))) (: --) (S (PP (IN in) (ADJP (JJ particular))) (, ,) (NP (PRP I)) (VP (AUX 'm) (VP (VBG thinking) (PP (IN of) (NP (NP (NNS parameters)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (CC either) (AUX be) (VP (VB null) (CC or) (VBN supplied))))))))))) (. .)) )
(TOP (S (NP (JJ -LSB-mb) (NNS -RSB-)) (VP (MD Could) (S (NP (PRP you)) (VP (VB explain) (SBAR (WHNP (WP what)) (S (NP (NP (DT the) (NN assertInstance)) (PP (IN of))) (VP (MD would) (VP (AUX do) (PP (IN after) (NP (NN transformation)))))))))) (. ?)) )
(TOP (S (NP (NNP -LSB-mb)) (VP (VBZ -RSB-) (SBAR (S (NP (PRP I)) (VP (MD 'll) (VP (AUX have) (S (VP (TO to) (VP (VB look) (PP (IN at) (NP (JJ particular) (NNS tests))) (S (VP (TO to) (VP (VB see) (SBAR (SBAR (WHNP (WP what)) (PRN (, ,) (PP (IN if) (NP (NN anything))) (, ,)) (S (VP (MD would) (VP (VB come) (PP (IN after) (NP (DT this) (NN statement))))))) (CC and) (SBAR (WHNP (WP what)) (S (NP (DT the) (NN impact)) (VP (MD would) (VP (AUX be))))))))))))))))) (. .)) )
(TOP (NP (NN --Mary)) )
(TOP (S (NP (NNP -LSB-mb)) (VP (VBD -RSB-) (NP (NNP Overkill))) (. ?)) )
(TOP (SQ (AUX Have) (NP (PRP you)) (VP (VBN seen) (NP (NP (DT the) (NN size)) (PP (IN of) (NP (DT the) (NN schema)))) (ADVP (RB recently))) (. ?)) )
(TOP (SBARQ (WHADVP (WRB Why)) (SQ (MD would) (NP (PRP we)) (VP (VP (VB tighten) (PRT (RP up)) (NP (NNS constraints)) (ADVP (RB everywhere) (RB else))) (CC and) (RB not) (VP (VB follow) (PRT (RP through)) (ADVP (RB here)) (PRN (: --) (S (NP (PRP it)) (VP (VBZ seems) (SBAR (IN that) (S (NP (PRP we)) (VP (AUX are) (ADVP (NP (percentage (CD 90) (NN %))) (RB there)) (ADVP (RB already))))))) (: --)) (SBAR (WHADVP (WRB why)) (S (RB not) (VP (VBP finish) (NP (DT the) (date (JJ last) (CD 10)) (NN %)))))))) (. ?)) )
(TOP (S (NP (DT Those)) (VP (MD should) (RB not) (VP (AUX have) (NP (DT a) (`` ``) (JJ var) ('' '') (NN attribute)) (, ,) (SBAR (IN if) (S (NP (PRP they)) (VP (AUX do) (SBAR (WHNP (WDT that)) (S (VP (AUX is) (NP (DT a) (NN production) (NN error)))))))))) (. .)) )
(TOP (S (PP (IN In) (NP (DT the) (JJ handwritten) (NN schema))) (, ,) (NP (PRP I)) (VP (AUX had) (VP (ADVP (RB mistakenly)) (VBN used) (NP (NP (DT the) (`` ``) (JJ DOMFunction) ('' '') (NN type)) (SBAR (WHADVP (WRB when)) (S (NP (PRP I)) (VP (MD should) (VP (AUX have) (VP (VBN used) (NP (DT the) (`` ``) (JJ DOMSubroutine) ('' '') (NN type)))))))))) (. .)) )
(TOP (S (NP (PRP I)) (VP (VBP believe) (SBAR (S (NP (PRP I)) (VP (VP (AUX had) (VP (VBN corrected) (NP (DT that)) (PP (IN with) (NP (DT the) (JJ last) (JJ handwritten) (NN schema))))) (CC and) (VP (VBD wrote) (NP (DT a) (NNP mea) (NNP culpa))))))) (. .)) )
(TOP (S (PP (IN In) (NP (DT the) (VBN generated) (NN schema))) (, ,) (NP (PRP I)) (VP (MD may) (RB not) (VP (AUX have) (VP (VP (VBN made) (NP (DT the) (JJ appropriate) (NN check))) (CC and) (VP (VBN reintroduced) (NP (DT the) (NN problem)))))) (. .)) )
(TOP (S (NP (PRP I)) (VP (AUX 'm) (VP (VBG going) (S (VP (TO to) (VP (AUX be) (VP (VBG travelling) (PP (IN over) (NP (DT the) (NN weekend))) (, ,) (SBAR (IN so) (S (NP (time (NN tonight))) (VP (MD will) (VP (AUX be) (NP (NP (DT the) (JJ last)) (SBAR (S (NP (PRP I)) (VP (MD can) (VP (VB work) (PP (IN on) (NP (DT this))) (PP (IN until) (NP (date (JJ next) (NN week))))))))))))))))))) (. .)) )
(TOP (S (NP (PRP I)) (VP (MD 'll) (VP (VB try) (S (VP (TO to) (VP (VP (VB clean) (PRT (RP up)) (ADVP (ADVP (RB as) (RB much)) (SBAR (IN as) (S (NP (PRP I)) (VP (MD can)))))) (CC and) (VP (VB hand) (NP (PRP it)) (PRT (RP over)))))))) (. .)) )
(TOP (S (NP (NNP -LSB-mb)) (VP (VBZ -RSB-) (SBAR (S (NP (PRP I)) (VP (MD 'll) (VP (AUX have) (S (VP (TO to) (VP (VB look) (PP (IN at) (NP (JJ particular) (NNS tests))) (S (VP (TO to) (VP (VB see) (SBAR (SBAR (WHNP (WP what)) (PRN (, ,) (PP (IN if) (NP (NN anything))) (, ,)) (S (VP (MD would) (VP (VB come) (PP (IN after) (NP (DT this) (NN statement))))))) (CC and) (SBAR (WHNP (WP what)) (S (NP (DT the) (NN impact)) (VP (MD would) (VP (AUX be))))))))))))))))) (. .)) )
(TOP (S (NP (NP (DT The) (NN reason)) (SBAR (WHNP (WDT that)) (S (NP (EX there)) (VP (AUX is) (NP (NP (DT an) (NN assertInstanceOf/)) (CC and) (NP (DT no) (JJ explicit) (NN casting))))))) (VP (AUX is) (SBAR (IN that) (S (NP (PRP you)) (VP (MD can) (RB n't) (VP (VB depend) (PP (IN on) (NP (NP (DT the) (NN language)) (PRN (-LRB- -LRB-) (VP (ADVP (RB specifically)) (VBN ECMAScript)) (-RRB- -RRB-)))) (S (VP (TO to) (VP (VB preserve) (NP (NN type-safety))))) (, ,) (ADVP (ADVP (RB so) (RB anytime)) (SBAR (IN that) (S (NP (PRP you)) (ADVP (RB really)) (VP (VBP want) (S (VP (TO to) (VP (VB assert) (SBAR (IN that) (S (NP (NP (DT a) (JJ particular) (NN variable) (AUX is)) (PP (IN of) (NP (DT a) (JJ specific) (NN type)))) (VP (AUX is) (S (VP (TO to) (VP (VP (VB use) (NP (DT an) (NN assertInstanceOf/))) (CC or) (VP (VB use) (NP (NP (NP (DT a) (NN method)) (CC or) (NP (NN property))) (SBAR (WHNP (WDT that)) (S (VP (AUX is) (VP (VBN introduced) (PP (IN by) (NP (DT that) (NN type))))))))))))))))))))))))))) (. .)) )
(TOP (S (SBAR (IN Since) (S (NP (NNP ECMAScript)) (VP (AUX has) (NP (NP (DT no) (NN concept)) (PP (IN of) (NP (NN casting))))))) (, ,) (NP (PRP I)) (VP (VBD thought) (SBAR (S (NP (PRP it)) (VP (AUX was) (ADJP (JJR easier)) (SBAR (IN if) (S (NP (DT the) (NNP Java) (NN code) (NN generator)) (ADVP (RB just)) (VP (VBD produced) (NP (DT the) (JJ appropriate) (NN cast) (NNS operators))))))))) (. .)) )
(TOP (S (NP (PRP It)) (VP (MD would) (VP (VB get) (VP (VBN produced) (PP (TO to) (NP (: :) (NP (NP (NNP Node) (NN attr)) (: ;) (NP (NNP String) (NN attrName)) (: ;) (NP (NP (NP (NP (JJ attrName) (SYM =)) (-LRB- -LRB-) (NP (PRN (-LRB- -LRB-) (NP (NNP Attr)) (-RRB- -RRB-)) (NN attr)) (-RRB- -RRB-)) (NN .getName)) (-LRB- -LRB-) (-RRB- -RRB-)) (: ;) (CC or) (NP (JJ var) (NN attr)) (: ;) (NP (JJ var) (NN attrName)) (: ;) (NP (NN attrName))) (X (X (SYM =)) (NP (NN attr.name)))))))) (: ;)) )
