I have been doing a survey of clock accuracy (http://vancouver-webpages.com/time/) and have found that, while the majority of Web server clocks (as derived from the http Date header) are very accurate, a few are way off. 
I then wondered what the effect was of running an http accelerator (Squid in httpd_accel mode, for instance) and tried it. 
It seems that the Server header is unmodified, but that the Date header remains set at whatever the origin server said until someone does an unconditional GET (shift-reload in Netscape) (or presumeably until the original page is modified...). 
I can't tell (as far as I know) if this is actually the reason for seeing clock errors. 
I wondered if this was the way that httpd accelerators were intended to work. 
Andrew Daviel Vancouver Webpages &amp; TRIUMF 
I've seen this issue arise in a different aspect of Squid. 
Perhaps it should be part of the Apache documentation to instruct that the Webmaster install a Network Time Protocol client before ore installing pages on the web server. 
My problem was that the remote server was about five to ten minutes off, hence the modification date of a file was off. 
So, when an if-modified-since request was sent from my Squid server, whose clock is synchronized with the world time standard, the file would show up as not modified until enough minutes had passed to make up for the clock error. 
-Mike Pelletier. 
Proxies (squid) should not use its own time for the response when doing a conditional get request; it should use the time in the Last-Modified (or if that is not there, then Date) header from the original response. 
This avoids the clock syncronization problem because the origin server is always using timestamps from its own clock. 
