== Task A user wants to find the email address for a person whose name is "John Smith". 
The user has an address book in RDF that contains all the information needed. 
The address book uses the FOAF vocabulary [1]. 
== Importance of DAWG A query is more efficient in terms of application programmer time than writing custom code to a lower level interface. 
The resulting execution can be more efficient because an application might choose a simple way of doing it where as a toolkit can invest in optimization. 
If the query is issued to a remote data source then a way of serialising one or more operations requests is needed. 
A query language is one way of providing this. 
Applications that use the DAWG rec. 
can be switched from a local address book to an interface to an LDAP server (say) with no change to the application other than pointing it to a different source. 
Information sources that use the DAWG rec. 
can be accessed by a wider set of applications with no extra work. 
== Other The query has two parts - locate the resource and extract some information from that resource. 
The presentation of the results is the mailbox email address. 
As people may have several mailboxes, there can be multiple results even if the conceptual task is to find one. 
The resource for the person could be a bnode or a labelled resource. 
An example query: SELECT ?mbox 
WHERE (?x foaf:name "John Smith") (?x foaf:mbox ?mbox) 
USING foaf FOR http://xmlns.com/foaf/0.1/ 
[1] http://xmlns.com/foaf/0.1/ 
FOAF namespace document This looks fine to me. 
Since it got some support last week, I'm inclined to regard silence at this point as agreement from most members of the WG. Anybody who doesn't like this will please let us know, preferably before I send out the agenda on Wednesday for Thursday's teleconference. 
One or two more like this and it will be time to build an outline of the document and start to flesh it out, yes? 
Hmm... one shortcoming I can see is that it doesn't explictly identify a requirement. 
Hmm... another imperfection is: we already have LDAP; ideally our use cases should show why the existing technologies are not enough. 
Perhaps a query like "find the email address of the person in picture23.jpg 
" would be more compelling? 
Dan Connolly, W3C http://www.w3.org/People/Connolly/ see you at the WWW2004 in NY 17-22 May? 
For those who have not seen this earlier (or taken the time to actually look at it ;-) I would like to draw the WG's attention to RDFQ http://sw.nokia.com/rdfq/RDFQ.html 
as a potential strawman for a DAWG query solution allowing the expression of queries and query results in RDF. 
Patrick Patrick Stickler Nokia, Finland patrick.stickler@nokia.com 
From: Dan Connolly Date: 23 March 2004 21:36 Agreed - it will be time to build an outline of a document. 
Adding requirement: no problem. 
I have been avoiding doing this, assuming that we will collect some use cases then extract requirements. 
This allows agreeing the UC and then discussing the requriments. 
But if this is seen as generally stable, extracting requirements is fine. 
LDAP: Assumes a planned deployment. 
And my address book is an RDF file, not a RDF-fronted LDAP server. 
Andy Regarding naming of use cases, for those I submitted, each one was given a short title, which I think would serve well as it's name, so just strike the 'PS-###:' prefix and refer to them by their titles. 
OK? Cheers, Patrick Patrick Stickler Nokia, Finland patrick.stickler@nokia.com 
I think it would be useful if we presume that the target of any particular query (or query exchange between client and server) is an RDF graph. 
How that RDF graph is realized should be irrelevant to our specifications. 
It could be an RDF/XML instance, a native RDF triples store, an RDF interface to a RDBMS or LDAP server, a student/slave chained to a workstation/terminal, whatever. 
While it will be the case that real-world scenarios will have to deal with how those RDF graphs are realized, that shouldn't IMO affect our requirements or resulting recommendation, and the less we talk about underlying machinery that should be below the line of opacity, the better (presuming we all agree where that line should be drawn, of course ;-) Patrick Patrick Stickler Nokia, Finland patrick.stickler@nokia.com 
From: Patrick Stickler mailto:patrick.stickler@nokia.com 
Date: 24 March 2004 11:31 Agreed - that was my point. 
I will make it clearer in a revised text - good to point out that it is not just a matter of results in RDF or someother aspect that makes in "RDF query". 
Andy 
