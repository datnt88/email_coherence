Disadvantages: 1) Typists must quote data. 
2) Many of today's SGML editing tools have difficulties with shortrefs. 
This last disadvantage could be mitigated if we provide two syntaxes for for 
pseudo-element tagging. 
An SGML-editor friendly one like this: and a a typist-friendly alias like this: As long as XML consumers are either XML or SGML compatible, they should have no problem with either syntax. 
Paul Prescod 
The latter syntax is certainly not typist friendly. 
What happens if you omit a quote? 
If you're going to do that, use @p{abcdefgh@em{ijklmopq}} instead -- can also be done with SGML. 
But I think this is all besides the point. 
If you allow mixed content, and say (SGML notwithstanding) that any amount of whitespace is equivalent to a single space, in all circumstances, you get something that can be handled with no DTD, with no need to distinguish element &amp; text contexts, and that is easy to explain. 
Although the "..." proposal is a very clever use of relatively obscure SGML, I don't fancy explaining it, and when you can include newlines in quoted `strings'', and why the emphasised text in the example is actually embedded in the text it surrounds, conceptually, even though the syntax makes this impossibly obscure. 
A language needs to be * consistent &amp; regular * easy to explain * clearly and unambiguously defined. 
It is a fact of history that SGML does not meet these goals, but any new system for which wide deployment is desired must do so. 
Change the whitespace rules. 
Accept the idea of a mechanical translation between HTML and XML, and between SGML and XML, and that if you go from a richer format to a weaker one you may lose information. 
Then you'll get something that can actually be used. 
If you have to accept all currently legal HTML syntax (as some have opined), or if you are encumbered by needless complexities that are in the more powerful language because of features not used in XML, you'll end up with something irregular and complex. 
Lee 
Just so. 
The fact that this group does not universally understand SGML's RS/RE rules and/or their application indicates that SGML fails on at least two of the three points above. 
XML should not follow SGML's lead here. 
Neither implementors nor authors can understand the rules. 
David Durand's "treating the entire SGML input as a single record" has immediate, minimalist appeal to me. 
Line breaks would be whitespace and would always be treated as such. 
There would be no need to describe RS/RE (pseudo) characters or their associated rules - there wouldn't be any. 
Measuring David's proposal against Lee's list show's that whitespace handling would be: * consistent &amp; regular, * easy to explain, and * clearly and unambiguously defined. 
What remains is sufficiency. 
Is this proposal sufficient to meet the needs of authors and implementors? 
If so than I believe we have an excellent solution to a rather nasty problem. 
Relax the conformace requirement and declare victory. 
Bill 
P "abcdefgh" EM "ijklmnopq" /EM /P 
Since it is SGML, you can check it with a validating parser. 
In this example, nsgmls will report an error immediately after any one of the quotes you omit. 
-Bill William D. Lindsey blindsey@bdmtech.com 
