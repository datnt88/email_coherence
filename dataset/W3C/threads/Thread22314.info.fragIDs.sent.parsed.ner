(TOP (S (NP (PRP I)) (ADVP (RB just)) (VP (VBD tried) (S (VP (VBG replacing) (NP (DT the) (NN root) (NN element)) (PP (IN with) (PRN (: :) (DT a) (-RRB- -RRB-) (NP (DT another) (NN element) (NN b)) (-RRB- -RRB-) (NP (NP (DT a) (NN fragment)) (VP (VBG containing) (NP (CD one) (NN element))) (X (SYM c))) (-RRB- -RRB-)) (NP (NP (DT a) (NN fragment)) (VP (VBG containing) (NP (CD two) (NNS elements))))))))) )
(TOP (S (SBAR (WHNP (WP What)) (S (NP (PRP I)) (VP (VBD expected)))) (VP (AUX was) (SBAR (DT that) (PRN (-LRB- -LRB-) (NP (DT a)) (-RRB- -RRB-)) (CC and) (S (S (-LRB- -LRB-) (NP (NNP b)) (-RRB- -RRB-) (VP (MD would) (VP (VB succeed)))) (CC and) (S (-LRB- -LRB-) (NP (NNP c)) (-RRB- -RRB-) (VP (MD would) (VP (VB fail))))))) (. .)) )
(TOP (S (NP (NP (PRN (-LRB- -LRB-) (S (VP (VB Remember) (SBAR (IN that) (S (SBAR (WHADVP (WRB when)) (S (NP (PRP you)) (VP (VBP replace) (NP (DT a) (NN node)) (PP (IN with) (NP (DT a) (NN fragment)))))) (, ,) (NP (NP (DT the) (NNS children)) (PP (IN of) (NP (NP (DT the) (NN fragment)) (CC and) (RB not) (NP (NP (DT the) (NN fragment)) (NP (PRP itself)))))) (VP (AUX are) (VP (VBN used.))))))) (-RRB- -RRB-)) (NN None)) (PP (IN of) (NP (NP (DT the) (CD five) (NN DOM) (NNS implementations)) (SBAR (S (NP (PRP I)) (VP (VBD tried))))))) (VP (VBD got) (NP (NP (DT the) (NNS results)) (SBAR (S (NP (PRP I)) (VP (VBD expected)))))) (. .)) )
(TOP (S (NP (NP (DT Any) (NNS opinions)) (PP (IN as) (PP (TO to) (NP (WDT which)))) (PRN (-LRB- -LRB-) (PP (IN if) (NP (DT any))) (-RRB- -RRB-))) (VP (AUX is) (UCP (ADJP (JJ right)) (CC and) (WHADVP (WRB why)))) (. ?)) )
(TOP (NP (NP (: --) (person (NNP Ron) (NNP Bourret) (NNS RESULTS))) (: :) (NP (NNP Data) (NNP Channel)) (: :) (NP (LST (-LRB- -LRB-) (DT a) (-RRB- -RRB-)) (NP (NN DOMException))) (: :) (S (NP (DT A) (NN node)) (VP (AUX is) (VP (VBN used) (PP (IN in) (NP (DT a) (JJ different) (NN document))) (PP (IN than) (NP (NP (DT the) (NN one)) (SBAR (WHNP (WDT that)) (S (VP (VBD created) (NP (PRP it)))))))))) (. .)) )
(TOP (NP (NP (PRN (-LRB- -LRB-) (NP (NNP b)) (-RRB- -RRB-)) (NNP DOMException)) (: :) (S (NP (DT A) (NN node)) (VP (AUX is) (VP (VBN used) (PP (IN in) (NP (NP (DT a) (JJ different) (NN document)) (PP (IN than) (NP (NP (DT the) (NN one)) (SBAR (WHNP (WDT that)) (S (VP (VBD created) (NP (PRP it)))))))))))) (. .)) )
(TOP (NP (NP (PRN (-LRB- -LRB-) (NP (NNP b)) (-RRB- -RRB-)) (NNP DOMException)) (: :) (S (NP (DT A) (NN node)) (VP (AUX is) (VP (VBN used) (PP (IN in) (NP (NP (DT a) (JJ different) (NN document)) (PP (IN than) (NP (NP (DT the) (NN one)) (SBAR (WHNP (WDT that)) (S (VP (VBD created) (NP (PRP it)))))))))))) (. .)) )
(TOP (FRAG (NP (NNP Docuverse)) (: :) (S (LST (-LRB- -LRB-) (DT a) (-RRB- -RRB-)) (VP (VBP root) (SBAR (S (NP (NN element)) (VP (VBD replaced) (NP (NP (PRN (-LRB- -LRB-) (NP (NNP b)) (-RRB- -RRB-)) (NN DOMException)) (PRN (-LRB- -LRB-) (NP (DT no) (NN message)) (-RRB- -RRB-)) (SBAR (S (-LRB- -LRB-) (LST (LS c) (-RRB- -RRB-)) (NP (NN DOMException) (PRN (-LRB- -LRB-) (NP (DT no) (NN message)) (-RRB- -RRB-)) (organization (NNP IBM))) (: :) (LST (-LRB- -LRB-) (DT a) (-RRB- -RRB-)) (VP (VBP root) (SBAR (S (NP (NN element)) (VP (VBD replaced) (SBAR (S (PRN (-LRB- -LRB-) (NP (NNP b)) (-RRB- -RRB-)) (VP (VBP root) (SBAR (S (NP (NN element)) (VP (VBD replaced) (SBAR (S (-LRB- -LRB-) (LST (LS c) (-RRB- -RRB-)) (VP (VBP root) (SBAR (S (NP (NN element)) (VP (VBD replaced) (SBAR (S (NP (NP (organization (NNP Oracle)) (PRN (: :) (S (LST (-LRB- -LRB-) (DT a) (-RRB- -RRB-)) (VP (VBP root) (SBAR (S (NP (NN element)) (VP (VBD replaced) (NP (PRN (-LRB- -LRB-) (NP (NNP b)) (-RRB- -RRB-)) (NN DOMException))))))) (: :)) (NNP Node)) (PP (IN of) (NP (DT this) (NN type) (NN cannot)))) (VP (AUX be) (VP (VBN added) (NP (-LRB- -LRB-) (NNP c) (-RRB- -RRB-) (NNP DOMException) (PRN (: :) (S (NP (NP (NNP Node)) (PP (IN of) (NP (DT this) (NN type) (NN cannot)))) (VP (AUX be) (VP (VBN added) (SBAR (S (NP (NP (NNP Sun)) (: :) (SBAR (S (LST (-LRB- -LRB-) (DT a) (-RRB- -RRB-)) (VP (VBP root) (SBAR (S (NP (NN element)) (VP (VBD replaced) (NP (NP (PRN (-LRB- -LRB-) (NP (NNP b)) (-RRB- -RRB-)) (NN DOMException)) (: :) (S (NP (DT This) (NN node)) (VP (AUX is) (VP (ADVP (RB n't)) (VBN allowed) (NP (NP (EX there) (PRN (-LRB- -LRB-) (NP (NNP c)) (-RRB- -RRB-))) (NN DOMException)))))))))))) (: :) (NP (DT This) (NN node))) (VP (AUX is) (RB n't) (VP (VBN allowed) (ADVP (RB there)))))))))))))))))))))))))))))))))))))))) )
(TOP (S (S (NP (DT The) (NNP PyDOM) (NN code)) (VP (VBZ seems) (S (VP (TO to) (VP (VB pass) (NP (DT this) (NN test))))))) (: ;) (S (NP (DT the) (NN test) (NN program)) (SBAR (IN below) (S (VP (VBZ produces) (NP (NP (DT the) (NN output)) (: :) (NP (NP (NN amarok) (NN /tmp) (NN python)) (PP (JJ t.py) (S (VP (VBG Adding) (SBAR (NN element) (S (VP (VBG Adding) (NP (NP (JJ 1-element) (NN fragment)) (VP (VBG Adding) (NP (NP (NP (JJ 2-element) (NN fragment) (NNP Traceback)) (PRN (-LRB- -LRB-) (ADJP (RB innermost) (JJ last)) (-RRB- -RRB-)) (: :) (S (VP (VB File) (ADJP (`` ``) (JJ t.py) ('' ''))))) (, ,) (NP (NN line) (CD 27)) (, ,)) (PP (IN in)))))))))))))))) (. ?)) )
(TOP (S (S (NP (NP (NNP doc.replaceChild)) (PRN (-LRB- -LRB-) (NP (CD frag2)) (, ,) (NP (NN doc.documentElement)) (-RRB- -RRB-))) (VP (VP (VBP File) (`` ``) (ADJP (JJ /usr/local/lib/python1.5/site-packages/xml/dom/core.py)) ('' '') (PRN (, ,) (S (S (NP (NN line) (date (CD 1314))) (, ,) (PP (IN in) (NP (JJ replaceChild) (NN raise) (NNP HierarchyRequestException))) (, ,) (NP (NP (CD \) (NN xml.dom.core.HierarchyRequestException)) (PRN (: :) (ADJP (ADJP (JJ replaceChild)) (-LRB- -LRB-)) (-RRB- -RRB-))) (VP (MD would) (VP (VB result) (PP (IN in) (NP (NP (QP (JJR more) (IN than) (CD one)) (NN root) (NN document) (NN element)) (SBAR (S (NP (DT The) (NNP Document) (NN class)) (VP (VBZ overrides) (NP (NP (DT the) (JJ basic) (NNP Node) (NN implementation)) (PP (IN of) (NP (NN replaceChild)))))))))))) (-LRB- -LRB-)) (-RRB- -RRB-))) (, ,) (CC and) (VP (VBZ counts) (NP (NP (DT the) (NN number)) (PP (IN of) (NP (JJ unique) (NNS Elements)))) (PP (IN in) (NP (NP (PDT both) (DT the) (NNS children)) (PP (IN of) (NP (NP (DT the) (NNP Document) (NN element)) (CC and) (NP (NP (DT the) (NN list)) (PP (IN of) (NP (NNS nodes))) (SBAR (WHNP (WDT that)) (S (VP (MD will) (VP (AUX be) (VP (VBN inserted)))))))))))))) (: ;) (S (S (NP (DT this) (NN number)) (VP (MD must) (VP (AUX be) (ADJP (JJ equal) (PP (TO to) (NP (CD 1) (CC or) (CD 0.)))) (SBAR (IN If) (S (NP (DT the) (NN total)) (VP (AUX is) (ADJP (JJ OK)))))))) (, ,) (NP (DT the) (JJ original) (NNP Node.replaceChild)) (-LRB- -LRB-) (-RRB- -RRB-) (VP (MD can) (VP (AUX be) (VP (VBN called))))) (. .)) )
(TOP (FRAG (PRN (-LRB- -LRB-) (S (NP (JJ Similar) (NN logic)) (VP (VBZ works) (PP (PP (IN for) (NP (NN insertBefore))) (-LRB- -LRB-)))) (-RRB- -RRB-) (. .) (-RRB- -RRB-)) (ADVP (RB Here)) (VP (AUX 's) (SBAR (WHNP (WP what)) (S (NP (DT the) (NN code)) (VP (VBZ looks) (PP (IN like)))))) (: :) (NP (JJ def) (NN replaceChild)) (PRN (-LRB- -LRB-) (NP (NN self)) (, ,) (NP (NN newChild)) (, ,) (NP (NN oldChild)) (-RRB- -RRB-)) (: :) (`` ``) (`` ``) (`` ``) (S (VP (VP (VBZ Replaces) (NP (DT the) (NN child) (NN node) (NN oldChild)) (PP (IN with) (NP (NP (NN newChild)) (PP (IN in) (NP (NP (DT the) (NN list)) (PP (IN of) (NP (NNS children)))))))) (, ,) (CC and) (VP (VBZ returns) (NP (DT the) (JJ oldChild) (NN node))))) (. .)) )
(TOP (S (SBAR (IN If) (S (NP (DT the) (NN newChild)) (VP (AUX is) (ADVP (RB already)) (PP (IN in) (NP (DT the) (NN tree)))))) (, ,) (NP (PRP it)) (VP (AUX is) (VP (ADVP (RB first)) (VBN removed))) (. .) ('' '') ('' '') ('' '')) )
(TOP (S (NP (NP (# #) (NN Check)) (SBAR (IN that) (S (NP (DT this) (NN operation)) (VP (MD would) (RB n't) (VP (VB result) (PP (IN in) (NP (DT the) (NN Document)))))))) (VP (VBD node) (NP (# #) (AUXG having)) (NP (NP (QP (JJR more) (IN than) (CD one)) (NNS children)) (SBAR (WHNP (WDT that)) (S (VP (AUX are) (NP (NN Element) (NNS nodes))))))) (. .)) )
(TOP (S (S (NP (# #) (DT This)) (VP (AUX is) (PP (IN as) (PP (IN in) (NP (NN insertBefore)))) (, ,) (PP (IN with) (NP (CD one) (NN change))))) (: ;) (S (SBAR (IN if) (S (NP (DT the) (JJ old) (NN node) (AUXG being) (ADJP (# #) (VBN replaced))) (VP (AUX is) (NP (DT an) (NN element))))) (, ,) (NP (PRP it)) (VP (MD should) (RB n't) (VP (AUX be) (VP (VBN counted))))) (. .)) )
(TOP (PP (IN if) (NP (NN newChild._node.type))) )
(TOP (NP (NP (CD ==) (NN DOCUMENT_FRAGMENT_NODE)) (: :) (NP (NN nodelist)) (X (SYM =) (VP (VBN newChild._node.children)))) )
(TOP (S (ADVP (RB else)) (: :) (NP (NN nodelist)) (VP (SYM =) (NP (JJ -LSB-newChild._node) (NN -RSB-)))) )
(TOP (S (NP (NP (NP (NNP d) (SYM =) (-LRB- -LCB-) (-RRB- -RCB-) (# #)) (NP (NNP Dictionary))) (PP (IN for) (NP (NP (VBG counting)) (PP (IN for) (NP (NNP c))) (PP (IN in) (NP (NN nodelist)))))) (: :) (SBAR (IN if) (S (NP (NN c.type) (NNS ==)) (VP (VBP ELEMENT_NODE)))) (: :) (NP (JJ d-LSB-) (NN id) (PRN (-LRB- -LRB-) (NP (NNP c)) (-RRB- -RRB-)) (NN -RSB-)) (VP (SYM =) (NP (NP (NN None)) (PP (IN for) (NP (NNP c)))) (PP (IN in) (NP (CD self._node.children)))) (: :)) )
(TOP (S (SBAR (IN if) (S (S (NP (NN c.type) (NNS ==)) (VP (VBP ELEMENT_NODE))) (: :) (S (NP (JJ d-LSB-) (NN id) (PRN (-LRB- -LRB-) (NNP c) (-RRB- -RRB-)) (NN -RSB-)) (VP (SYM =) (NP (NP (NN None) (# #)) (IN For) (NP (DT a) (JJ correct) (NN count))))))) (, ,) (NP (PRP we)) (VP (MD should) (RB not) (VP (VB count) (NP (NP (DT the) (JJ oldChild) (NN node)) (, ,) (PP (IN in) (NP (NN case) (# #)))) (NP (PRP it)) (SBAR (S (VP (AUX 's) (NP (DT an) (NN Element))))))) (. .)) )
(TOP (S (NP (NNP ocn)) (VP (SYM =) (NP (NN oldChild._node)))) )
(TOP (FRAG (SBAR (IN if) (S (NP (NN ocn.type)) (VP (VBZ ==) (NP (NP (NP (NP (NN ELEMENT_NODE) (CC and) (NN d.has_key)) (PRN (-LRB- -LRB-) (NP (NP (NN id)) (PRN (-LRB- -LRB-) (CD ocn) (-RRB- -RRB-))) (-RRB- -RRB-))) (: :) (NP (NP (DT del) (JJ d-LSB-) (NN id)) (PRN (-LRB- -LRB-) (INTJ (UH ocn)) (-RRB- -RRB-)))) (JJ -RSB-) (IN if) (NP (NP (NNP len)) (PRN (-LRB- -LRB-) (NP (NNP d)) (-RRB- -RRB-)))) (NP (CD 1))))) (: :) (VP (VB raise) (S (NP (NNP HierarchyRequestException) (, ,) (NNP \)) (`` ``) (ADJP (JJ replaceChild) (SBAR (S (-LRB- -LRB-) (-RRB- -RRB-) (VP (MD would) (VP (VB result) (PP (IN in) (NP (NP (QP (JJR more) (IN than) (CD one)) (NN root) (NN document) (NN element) ('' '') (ADJP (# #) (NNP Call) (JJ original)) (NN version)) (PP (IN of) (NP (JJ replaceChild) (PRN (-LRB- -LRB-) (NP (-RRB- -RRB-) (NNP Node.replaceChild)) (-LRB- -LRB-) (NP (NN self)) (, ,) (NP (NN newChild)) (, ,) (NP (NN oldChild)) (-RRB- -RRB-)) (NN A.M.) (NNP Kuchlinghttp)))))))))))) (: :) (NP (NN //starship.python.net/crew/amk/))) )
(TOP (S (NP (NP (DT This)) (PP (IN of) (NP (NN course)))) (VP (AUX is) (NP (NP (NN nothing)) (PP (IN like) (NP (DT the) (JJ comic) (NN book) (NN Enigma))))) (. .)) )
(TOP (S (NP (DT This)) (VP (AUX is) (ADJP (ADJP (JJ real) (NN life)) (, ,) (CC or) (ADJP (ADJP (RB as) (JJ real)) (SBAR (IN as) (S (NP (PRP$ your) (NN life)) (VP (VBZ gets)))))) (, ,) (ADVP (RB anyway))) (. .)) )
(TOP (S (S (: --) (NP (NN Violence)) (, ,) (PP (IN in) (NP (NP (NN ENIGMA) (# #) (CD 5)) (: :) (`` ``) (NX (NX (NNPS Lizards)) (CC and) (NX (NNS Ghosts))) ('' ''))) (NP (NP (# #) (NN Test) (NN program)) (PP (IN for) (S (VP (VBG adding) (NP (NNS DocFragments)) (PP (TO to) (NP (DT the) (NN root) (NN element)))))) (PP (IN from) (NP (JJ xml.dom) (NN import) (NN core) (NNP doc)))) (VP (SYM =) (NP (NN core.createDocument)))) (-LRB- -LRB-) (-RRB- -RRB-)) )
(TOP (S (NP (NP (QP (# #) (VB Make)) (JJ single) (NN element)) (, ,) (NP (JJ 1-element) (NN fragment)) (, ,)) (NP (JJ 2-element) (NN fragment) (NN elem)) (VP (SYM =) (NP (NP (NN doc.createElement)) (PRN (-LRB- -LRB-) (`` ``) (NP (NN root)) ('' '') (-RRB- -RRB-))))) )
(TOP (S (NP (NNP frag1)) (VP (SYM =) (VP (VB doc.createDocumentFragment) (-LRB- -LRB-) (-RRB- -RRB-)))) )
(TOP (NP (NNP frag1.appendChild) (-LRB- -LRB-)) )
(TOP (S (S (NP (FW doc.createElement) (PRN (-LRB- -LRB-) (INTJ (`` ``) (UH elem1) ('' '')) (-RRB- -RRB-) (-RRB- -RRB-)) (NN frag2)) (VP (SYM =) (NP (NN doc.createDocumentFragment)))) (-LRB- -LRB-) (-RRB- -RRB-)) )
(TOP (NP (NNP frag2.appendChild) (-LRB- -LRB-)) )
(TOP (S (NP (NP (NP (NN doc.createElement)) (PRN (-LRB- -LRB-) (NP (`` ``) (FW elem1) ('' '')) (-RRB- -RRB-)) (-RRB- -RRB-)) (NP (NP (JJ frag2.appendChild) (PRN (-LRB- -LRB-) (NP (NP (JJ doc.createElement)) (PRN (-LRB- -LRB-) (NP (`` ``) (FW elem2) ('' '')) (-RRB- -RRB-))) (-RRB- -RRB-)) (NN print) (POS ') (VBG Adding) (NN element) (POS ')) (JJ doc.appendChild) (-LRB- -LRB-) (NN elem) (-RRB- -RRB-) (# #)) (organization (NNP Should))) (VP (VB succeed) (S (NP (NN print) (NNS doc.toxml)) (-LRB- -LRB-) (-RRB- -RRB-) (NP (NP (QP (# #) (VB Replace)) (DT the) (NN root) (NN element)) (PP (IN with) (S (NP (DT the) (JJ 1-element) (NN fragment) (NN print) (POS ')) (VP (VBG \nAdding) (NP (NP (NP (JJ 1-element) (NN fragment) (POS ')) (JJ doc.replaceChild) (PRN (-LRB- -LRB-) (FW frag1) (, ,) (ADJP (JJ doc.documentElement)) (-RRB- -RRB-)) (NN print) (NNS doc.toxml)) (PRN (-LRB- -LRB-) (NP (NP (-RRB- -RRB-) (QP (# #) (VB Replace)) (DT the) (NN root) (NN element)) (PP (IN with) (S (NP (DT the) (JJ 2-element) (NN fragment) (NN print) (POS ')) (VP (VBG \nAdding) (NP (NP (JJ 2-element) (NN fragment) (POS ')) (JJ doc.replaceChild) (PRN (-LRB- -LRB-) (FW frag2) (, ,) (ADJP (JJ doc.documentElement)) (-RRB- -RRB-)) (NN print) (NNS doc.toxml)) (-LRB- -LRB-))))) (-RRB- -RRB-)))))))))) )
(TOP (S (NP (person (NNP Ron)) (, ,) (person (NN 4DOM))) (VP (VBZ passes) (NP (DT these) (NN test) (NNS cases))) (. .)) )
(TOP (S (RB Not) (VP (VB matter) (SBAR (WHADVP (WRB how)) (S (NP (NP (DT a) (NN node) (POS 's)) (NNS children)) (VP (AUX are) (VP (VBN modified) (SBAR (S (NP (PRP we)) (ADVP (RB always)) (VP (VBP check) (S (VP (TO to) (VP (VB make) (ADJP (JJ sure) (SBAR (S (NP (PRP it)) (VP (AUX does) (RB not) (VP (VB break) (NP (NP (DT any)) (PP (IN of) (NP (DT the) (NNS rules)))))))))))))))))))) (. .)) )
(TOP (S (NP (NNP Ex.)) (`` ``) (NP (DT A) (NN document)) (VP (MD can) (VP (AUX have) (NP (RB only) (CD one) (NN element) ('' '') (PRN (, ,) (S (S (`` ``) (NP (DT A) (NN document) (NN cannot)) (VP (AUX have) (NP (NN text) (NNS children))) ('' '')) (, ,) (`` ``) (NP (DT A) (NN processing) (NN Instruction) (NN cannot)) (VP (AUX have) (NP (NN element) (NNS children))) ('' '')) (, ,)) (NN etc)))) (. .)) )
(TOP (S (NP (PRP It)) (VP (VBZ treats) (NP (NN appending)) (, ,) (S (VP (VP (VBG inserting)) (, ,) (CC and) (VP (VBG replaceing) (PP (IN with) (NP (DT a) (NN DF))) (PP (IN as) (NP (NP (DT a) (NN series)) (PP (IN of) (NP (NNS operations))))))))) (. .)) )
(TOP (S (NP (DT Each) (NN one)) (VP (AUX is) (VP (VBN validated) (ADVP (RB as) (RB above)))) (. .)) )
(TOP (SINV (ADVP (RB Here)) (VP (AUX is)) (NP (NP (DT the) (NN output)) (PP (IN from) (NP (PRP$ my) (NN test) (NN script)))) (. .)) )
(TOP (S (NP (PRP I)) (VP (MD can) (VP (VB send) (NP (PRP you)) (NP (DT the) (NN script)) (SBAR (IN if) (S (NP (PRP you)) (VP (MD would) (VP (VB like))))))) (. .)) )
(TOP (FRAG (NP (NN -LSB-molson)) (X (SYM @)) (NP (NNP arthur) (NN test_dom) (NN -RSB-)) (ADJP ($ $) (JJ python)) (ADJP (JJ ron.py) (NP (NNP Original) (NNP Document) (NNP Case) (CD 1))) (, ,) (VP (VP (VB replace) (PP (IN with) (NP (NN element))) (NP (NNP Case) (CD 2))) (, ,) (VP (VB replace) (PP (IN with) (NP (CD df))) (NP (PRN (-LRB- -LRB-) (NP (CD one) (NN child)) (-RRB- -RRB-)) (NNP Case) (CD 3))) (, ,) (VP (VB replace) (S (NP (NP (QP (IN with) (CD df)) (PRN (-LRB- -LRB-) (NP (CD two) (NNS children)) (-RRB- -RRB-)) (NNP Traceback)) (PRN (-LRB- -LRB-) (NN innermost) (JJ last) (-RRB- -RRB-)) (: :)) (VP (VB File) (ADJP (`` ``) (JJ ron.py) ('' ''))))) (, ,) (VP (VB line) (NP (CD 40))) (, ,) (ADVP (IN in))) (. ?)) )
(TOP (S (NP (NNP doc.replaceChild)) (PRN (-LRB- -LRB-) (NP (CD df)) (, ,) (NP (NN thirdRoot)) (-RRB- -RRB-)) (: ;) (VP (VB File) (FRAG (ADJP (`` ``) (JJ /usr/local/lib/python/DOM/Document.py) ('' '')) (, ,) (NP (NN line) (CD 208)) (, ,) (PP (IN in) (NP (NP (JJ replaceChild) (NN return)) (SBAR (S (NP (NNP NodeIMP.replaceChild)) (VP (PRN (-LRB- -LRB-) (NP (NN self)) (, ,) (ADJP (JJ newChild) (, ,) (JJ oldChild)) (-RRB- -RRB-) (: ;)) (VB File) (ADJP (`` ``) (JJ /usr/local/lib/python/DOM/Node.py) ('' ''))))))) (, ,) (NP (NN line) (CD 155)) (, ,) (PP (IN in) (NP (JJ replaceChild) (NN self.replaceDocumentFragment))) (PRN (-LRB- -LRB-) (ADJP (JJ newChild)) (, ,) (NP (JJ oldChild)) (-RRB- -RRB-)) (SBAR (S (VP (VB File) (ADJP (`` ``) (JJ /usr/local/lib/python/DOM/Node.py) ('' ''))))) (, ,) (NP (NN line) (CD 253)) (, ,) (PP (IN in) (NP (JJ replaceDocumentFragment) (NN self.appendDocumentFragment) (PRN (-LRB- -LRB-) (NN frag) (-RRB- -RRB-)) (: ;)))))) )
(TOP (S (VP (VB File) (NP (NP (`` ``) (JJ /usr/local/lib/python/DOM/Node.py) ('' '')) (, ,) (NP (NN line) (CD 232)) (, ,) (PP (IN in) (NP (JJ appendDocumentFragment) (NN self.appendChild) (PRN (-LRB- -LRB-) (NN head) (-RRB- -RRB-))))))) )
(TOP (S (VP (VB File) (NP (NP (`` ``) (JJ /usr/local/lib/python/DOM/Document.py) ('' '')) (, ,) (NP (NN line) (CD 188)) (, ,) (PP (IN in) (NP (NP (JJ appendChild) (NN raise) (NNP DOM.DOMIF.DOMException)) (PRN (-LRB- -LRB-) (NP (NNP HIERARCHY_REQUEST_ERR)) (-RRB- -RRB-)))))) (: ;)) )
(TOP (NP (NNP DOM.DOMIF.DOMException) (: :)) )
(TOP (NP (NNP DOM.DOMIF.DOMException)) )
(TOP (NP (NP (NN instance)) (PP (IN at) (S (VP (VBG 811a928) (NP (person (NNP Mike))))))) )
(TOP (S (NP (person (NNP Mike) (NNP Olson) (NN Member) (NN Consultant) (NNP FourThought))) (VP (VBD LLC) (`` ``) (S (NP (DT No) (NN program)) (VP (AUX is) (ADJP (JJ interesting) (PP (IN in) (NP (PRP itself))) (PP (TO to) (NP (DT a) (NN programmer))))))) (. .)) )
(TOP (S (NP (PRP It)) (VP (AUX 's) (ADJP (RB only) (JJ interesting)) (ADVP (ADVP (RB as) (RB long)) (SBAR (IN as) (S (NP (EX there)) (VP (AUX are) (NP (NP (NP (JJ new) (NNS challenges)) (CC and) (NP (JJ new) (NNS ideas))) (VP (VBG coming) (ADVP (RB up))))))))) (. .) ('' '')) )
(TOP (NP (person (NNP ---) (NNP Linus) (NNPS Torvalds))) )
