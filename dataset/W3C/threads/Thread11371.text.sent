After *endless* further discussion, and realization that co-existing with the web is hard, the ERB, on March 22, voted as follows: A locator is a string which may contain either or both a URL and a TEI extended pointer [Xptr]. 
The URL indicates a resource; if the Xptr appears, this means that the desired resource is a "sub-resource" of that indicated by the URL. 
The URL must appear first in the locator string. 
If the URL does not appear, the Xptr is to be applied to the current document. 
If an Xptr appears, it must be preceded by a Separator character. 
There are three possible separator characters: # - means that the user-agent is to fetch the resource described by the URL, and use the Xptr to extract the desired sub-resource. 
e.g.: http://www.xml.com/faq.xml#ID(a27) 
? 
- means that the user-agent is to transmit the URL and Xptr to the server, which is to use the Xptr to extract the desired sub-resource and transmit it to the user-agent. 
In this case, the Xptr must be preceded by the string "XML-PTR=" e.g.: http://www.xml.com/faq.xml?XML-PTR=ID(A27) - means that this locator only expresses the fact that the desired sub-resource is to be retrieved by applying the Xptr to the resource identified by the URL. 
No constraint is placed on the system as to how this should be accomplished. 
e.g.: http://www.xml.com/faq.xml|ID(A27) 
Notes: 1. '#' and '?' are standard Web practice; the appropriate RFC's make it clear that it would be very unwise for us to try to overload the existing behavior 2. The "XML-PTR=" on the '?' form is an effort to allow this to work smoothly with CGI gateways; while CGI is of diminishing importance, it's an awfully easy way to set up a test-bed, and other more efficient query protocols often hide behind CGI syntax anyhow 3. The choice of the '|' character for the role defined here is open to debate. 
We wanted something that, per RFC, is supposed to be escaped in URLs, so that its naked appearance is a signal that something special is happening; but that isn't going to wreak too much havoc. 
Possible alternatives are '^', '@', and ' '. 
Those who'd like to debate this point MUST READ THE RFC FIRST! 4. The 'special' case where the item in the Xptr position is just a a string (e.g. http://www.xml.com/faq.xml#A27 
or some such) is no longer a special case; we will define an interpretation of a single unmarked string as a TEI Xpointer; we are already going to have to mung the syntax of these anyhow in order to crush spaces... the sense of the ERB is that anything that Michael and Steve come up with, presumably in conclave with the TEI gang, will probably be OK by us. 
Cheers, Tim Bray tbray@textuality.com 
http://www.textuality.com/ 
+1-604-708-9592 It really boils down to whether you think the Xptr is addressing something or not. 
Yup. 
Obviously. 
Also, it's a query. 
I totally fail to see the utility, or even the existence, of a distinction between an address and a query. 
Given the URL tell me please, is that an address or a query? 
I have no problems with # and ?. I do not see how a query can name a sub-resource though, or how you can query a resource addressed using queries. 
I have no trouble with this at all. 
On the web, a resource is, by definition, something that can be addressed. 
So what a URL points at is a resource. 
By definition, what an Xptr points at is also a resource. 
Our innovation is to standardize (unlike the web) a rich query-or-address-call-it-what-you-will for XML docs which operates at a finer level of granularity than the URL. 
Thus it makes intuitive sense, and is logically clean, to call what the URL+Xptr gets you a sub-resource of the resource that the URL gets you. 
Using ";" is accepted practise, and provides the right semantics for XML (addressing) Based on my reading of the RFC's and my experience operating servers and using the web, I disagree with both halves of this sentence. 
Bill Smith has raised the issue of the RFC as a moving target, sigh... existing RFCs talk of but "this year's model" is quite different. 
However, no matter how you cut it, ";" flags a vaguely-specified "parameter" we want something with a highly-precise, and new-to-the-web, semantic. 
Smells like new syntax to me. 
Also, ';' is obviously a moving target, which is another reason to stay away from it. 
BTW, you Inso and Sun guys ought to raise a ruckus with TimBL and Roy Fielding, n'est-ce pas? 
-Tim [Tim Bray:] It really boils down to whether you think the Xptr is addressing something or not. 
@xmlToc is the name of a script that generates the XML TOC for the book named ADVOSUG. 
If the choice is between address and query, it's a query. 
Jon You *know* this is a script, the browser doesn't. 
To a browser, this is an address that returns a resource. 
Think of it like virtual memory. 
You have an address, and are not aware that the OS is playing games with it behind your back. 
[Gavin Nicol:] Then I'm not sure what "query" means any more. 
How does the stuff generated by @xmlToc differ in principle from something a database might generate in response to a SQL query? 
Is that an address, too? 
Jon 
