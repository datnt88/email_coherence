When writing and testing HTML, it's standard practice to test with 
multiple browsers and multiple versions of those browsers. 
It's also pretty standard to look at usage stats for those browsers - how many people are still using IE 4.0 or Netscape 4.7? 
Such statistics are often unreliable, but they're still worth considering, especially if pulled from your own server logs. 
What about screen readers? 
Is there any available information on usage of various screen readers, and specifically on version? 
Obviously statistics in this case would be difficult to compile, since you can't simply pull the information from server logs. 
But it would be valuable. 
As an example: for a particular upcoming project, tagged PDF files are being considered as the primary document format. 
When discussing the need, if any, for alternative versions, it would be helpful to know how many users of screen readers would be able to read a tagged PDF file, 
and how many are using software that can't handle that format. 
Please note: I'm not asking for opinions on the need for alternative 
versions - this is just an example of one situation in which having 
statistics would be valuable. 
Any pointers to any real numbers would be greatly appreciated. 
The American Foundation for the blind: has a paper you might find usefull. 
Although it does not provide stats on 
screen readers, it does deal with your tagged pdf issue. 
AS to pdf, stats are not as important as the knowledge as you say that it is 
best to provide a wai ready solution. 
If you are going to go to the trouble of making sure that a tagged pdf is tagged appropriately, it is no more difficult to provide the content that is much more widely accessible. 
Speaking to the screen reader issue more specifically, the comparison of 
user agents and screen readers has some problems, since part of the issue depends on what user agent and what version of the user agent is being used with what screen reader and version of that screen reader. 
Further, the wcag was written to take the needs of screen readers into account and those are just as valid today as they were in 1999. 
The focus has shifted some 
what, but Following the guidelines provides access for a much broader audience than does not following them and this includes a high percentage of 
screeen reader users. 
I'm sure you will find some stats on screen reader use out there, but those statistics will not take all the needs into acccount and will most likely be 
for a narrow market such as for instance, the us or one other country. 
The 
stats will also be out of date because some of this changes so rapidly. 
What compelling reason could there be to have stats of this type? 
I can think of some that have nothing to do with the web but none that do. 
When writing and testing HTML, it's standard practice to test with multiple browsers and multiple versions of those browsers. 
It's also pretty standard to look at usage stats for those browsers - how many people are still using IE 4.0 or Netscape 4.7? 
Such statistics are often unreliable, but they're still worth considering, especially if pulled from your own server logs. 
What about screen readers? 
Is there any available information on usage of various screen readers, and specifically on version? 
Obviously statistics in this case would be difficult to compile, since you can't simply pull the information from server logs. 
But it would be valuable. 
As an example: for a particular upcoming project, tagged PDF files are being considered as the primary document format. 
When discussing the need, if any, for alternative versions, it would be helpful to know how many users of screen readers would be able to read a tagged PDF file, and how many are using software that can't handle that format. 
Please note: I'm not asking for opinions on the need for alternative 
versions - this is just an example of one situation in which having 
statistics would be valuable. 
Any pointers to any real numbers would be greatly appreciated. 
I'd be interested to see information on screen reader market share. 
I'm 
consulting with a UK Internet bank presently, and we are testing in 
Window-Eyes 4.5, JAWS 5.0, JAWS 4.5 and IBM HomePage Reader 3.0. 
You get problems with the default settings in each configuration, and slightly 
different HTML code is required to make site features work well in each one. 
Often there are conflicts, where the code that works well in JAWS causes a 
rendering issue in Window-Eyes, or vice versa. 
While I don't believe in trying to design the accessible experience (because it's impossible :), where there are conflicts I tend to lean towards the JAWS 4.5 rendering if there are choices to be made, because I estimate that this is the largest user base. 
In six months time, that may not be the case, and this is why information about market share would be useful. 
It's a situation analogous to the old dilemmas facing web designers when we cared about NN4 versus IE4 rendering of pages. 
That was solved as the modern browsers began supporting the standards more consistently, so that the latest versions of IE, NN, Opera, Mozilla, and so on all render pages 95% consistently or better. 
Since the screen readers differ so much in their rendering of standard HTML constructs, there are necessary decisions to be made. 
If there were no conflicts, I wouldn't care so much about market share. 
Perhaps in a few years the manufacturers of screen readers will get their act together, but in the meantime the reality is that someone will always get a poorer experience, and web designers are back to juggling the numbers 
again to decide which way to jump for each design choice. 
Incidentally, I'm talking about screen readers here because they have rendering differences that affect the user experience in significant ways, and are highly affected by small differences in the coding of a page. 
Screen magnifiers typically are not, for example, so that's why I'm talking about screen readers in particular. 
Anyone else wrestled with screen reader rendering differences, and have any tips? 
Cheers Ian Anderson zStudio 
[rant follows - not directed at you, but at some of the ideas you're 
wrestling with] 
Screenreaders are by definition a tiny market share at most sites. 
If that is a reason not to care about them, then let's forget all 
about accessibility. 
I know that's not what you meant, but it's the same underlying argument. 
Browser-specific authoring is the Root Of All Evil on the Web. 
Seriously, that's a lot like authoring for "both browsers". 
By doing that you are contributing to 
* lock-out (of people with different equipment) 
* lock-in (of people with supported equipment, all of which is 
proprietary) Never limit your support to users of expensive equipment - you are penalising them the cost of it. 
Never limit your support to users of proprietary equipment - you are leaving them hostage to vendors. 
Above all, don't make hostages to Windows. 
Even if you discount the fact that it's grossly overpriced and requires new and expensive hardware every few years, you're forcing users to expose themselves to the World of Viruses. 
If there are legitimate reasons to present things differently, you should do so by empowering your users to choose, not by second-guessing their needs. 
The kind of user-options offered by mod_accessibility do this, and if you think its output can be tailored for optimal presentation with particular screenreaders, I'm listening. 
Nick Kew Nick's manifesto: http://www.htmlhelp.com/~nick/ 
Nick and all, 
Actually, what *I* was going for with my comment on screen reader stats was 
to place the emphasis on technology as a whole rather than screen readers 
specifically due to the variance in environments and configuration 
preferences. 
you cannot possibly second guess every one so rather than try 
to figure out who uses the most of this or that, it's best to take an 
approach that provides for the broadest access possible as you say in your 
message below. 
In other words, If you find that one screen reader is the 
most popular or gets the most dollars, coding for that will leave out a lot 
of people. 
[rant follows - not directed at you, but at some of the ideas you're wrestling with] 
Screenreaders are by definition a tiny market share at most sites. 
If that is a reason not to care about them, then let's forget all about accessibility. 
I know that's not what you meant, but it's the same underlying argument. 
one. 
Browser-specific authoring is the Root Of All Evil on the Web. 
Seriously, that's a lot like authoring for "both browsers". 
By doing that you are contributing to * lock-out (of people with different equipment) 
* lock-in (of people with supported equipment, all of which is 
proprietary) Never limit your support to users of expensive equipment - you are penalising them the cost of it. 
Never limit your support to users of proprietary equipment - you are leaving them hostage to vendors. 
Above all, don't make hostages to Windows. 
Even if you discount the fact that it's grossly overpriced and requires new and expensive hardware every few years, you're forcing users to expose themselves to the World of Viruses. 
If there are legitimate reasons to present things differently, you should do so by empowering your users to choose, not by second-guessing their needs. 
The kind of user-options offered by mod_accessibility do this, and if you think its output can be tailored for optimal presentation with particular screenreaders, I'm listening. 
Nick Kew Nick's manifesto: http://www.htmlhelp.com/~nick/ 
stats was 
readers 
than try 
an 
in your 
is the 
out a lot 
I don't disagree with you, in the main. 
I am sure we all agree that 
broadest possible access is our overriding goal. 
What the heck are we bothering with all this for, if that is not our core belief? 
What I am not clear on is the connection that is being made between 
optimising the user experience for one group of users with "leaving 
out" a lot of others. 
These are not the same thing. 
Here's an analogy. 
A film is broadcast in widescreen. 
Those people with older TV sets (me, for example) either get black bars top and bottom, or the left and right edges are cropped, or a mixture of both. 
Those users who spent money on a widescreen TV may see the film in its proper format. 
But if it's broadcast in a modified 4:3 version, it's the users with widescreen TVs who get cropping, or black bars, or a 
stretched picture. 
This time the widescreen tv users lose out, and the users of older TVs don't have an incentive to upgrade. 
Either way, everyone gets to see the film; some have a better experience than others. 
The analogy is not an exact comparison to JAWS versus Window-Eyes, for example, because only a few of the problems arise because Window-Eyes is broken. 
Most differences are quirks, and you can't use the analogy of upgrading like you can with browsers. 
Although WE bugs me frequently, I do acknowledge that it is a quality piece of software. 
However, I think the analogy illustrates my two main points: 
1. we are not excluding anyone. 
I am talking about relatively fine differences in user experience... tweaking; optimising. 
2. whatever you do in these cases, someone will lose out a little 
You seem to be saying we should optimize for no screen reader over 
another but I can't see, for example, how that helps me choose between 
two valid, alternative ways of coding a navigation bar, each of which 
creates issues for someone. 
I want perfect for everyone, but sometimes 
there is no perfect. 
Then, I have to choose, and market share is one 
factor I look at in making that choice. 
but we are not talking about JAWS or Window-Eyes but rather NON PROPRIETARY solutions and older solutions and for Macs' 
how do you handle screen readers such as EMACSpeak...??? or those that 
just read the plain text from the screen (many older systems) these require that the output be ONLY plain text. 
yes you are talking of excluding anyone not using the two expensive, propietary screen readers that are most marketed 
but should some lose all???? 
try using what I'm using at the moment, I'm running Red Hat Linux 9, with 
Minicom connection to the internet and using PINE as my e-mail reader. 
how about visting your sites using LYNX...which is my most common access 
for what it's worth I have broken the M$ habit and have been windoze free 
for almost 5 years in EVERY way....and don't plan on changing just to use 
the accessibility features that some are trying to force on us. 
and believe me I am far far from unique. 
Casscading Style Sheets!!!!!!! 
Bob CONFIGURE YOUR E-MAIL TO SEND TEXT ONLY, see http://expita.com/nomime.html 
"They that can give up essential liberty to obtain a little temporary safety deserve Neither liberty nor safety", Benjamin Franklin ASCII Ribbon Campaign accessBob NO HTML/PDF/RTF in e-mail accessys@smartnospam.net NO MSWord docs in e-mail Access Systems, engineers 
NO attachments in e-mail, *LINUX powered* access is a civil right THIS message and any attachments are CONFIDENTIAL and may be 
privileged. 
They are intended ONLY for the individual or entity named 
that 
Sorry if this sounds abrupt, but what on earth are you talking about? 
Web pages are HTML. 
I am talking about HTML. 
These ATs take HTML and produce output - what is the problem you are identifying? 
Unless you are claiming there are cases of ATs that require plain text in order to function; in that case the web is broken to them. 
I must be misunderstanding you rather severely, because I don't see the relevance of what you have said here to the discussion. 
See above. 
Who loses all? 
it's just HTML fer crying out loud. 
These 
obscure ATs will deal with it in their own way. 
I can't know all the 
behaviours; all I can do is code to standards, test in the most common configurations, and hope the other cases can handle standard stuff. 
I am not going to tweak for obscure cases; and other people seem to be saying not to tweak for anything. 
with 
reader. 
access I test in Lynx too. 
The sites work well. 
What is your point? 
free 
to use 
I don't give a monkey what you use. 
It's the web. 
Use what you want. 
I build sites with HTML and any device can access them to the best of its ability. 
between 
which 
sometimes 
one 
Did we slip in to some Zen koan mode here? 
Shall I spout random nouns at you in an effort to spontaneously induce enlightenment? 
But seriously, what has CSS got to do with issues arising from standard HTML structure. 
e.g. text inside link or outside link tag? 
Try again - you're obviously excited about something but I am not getting your point. 
sorry if there is some confusion, you are taking personal some very generic comments about coding to specific browsers. 
I agree with your comments that if coded to good clean html there should be no problems, now how many sites are out there coded that way...(besides yours) Bob 
CONFIGURE YOUR E-MAIL TO SEND TEXT ONLY, see http://expita.com/nomime.html 
"They that can give up essential liberty to obtain a little temporary safety deserve Neither liberty nor safety", Benjamin Franklin ASCII Ribbon Campaign accessBob NO HTML/PDF/RTF in e-mail accessys@smartnospam.net NO MSWord docs in e-mail Access Systems, engineers NO attachments in e-mail, *LINUX powered* access is a civil right THIS message and any attachments are CONFIDENTIAL and may be privileged. 
They are intended ONLY for the individual or entity named 
