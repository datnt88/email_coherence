I've been trying to understand how the working resource feature works with merging and forking, and I've got a few questions: 1. 
For merging &amp; client workspaces, should the DAV:checked-out-for-merge merge postcondition cover the case that the DAV:checkout element included a DAV:apply-to-version? In particular, should it say that a Location: header must be in the response, and that this header contains the URL of the working resource created by the checkout? 
2. A merge target is a version-controlled resource. 
Was it unnecessary to allow a merge target to be either a version-controlled resource or a checked-out resource (e.g. a working resource)? 
3. How does the working resource feature work for a forking server? 
For example, suppose that http://repo.webdav.org/wr/1 and created by requesting a checkout on a version controlled resource, the request. 
The DAV:checked-in property of the vcr is DAV:checked-out property of each of the working resources. 
Each working resource has it's DAV:auto-update property set to the vcr URL. 
Now suppose that the first working resource (http://repo.webdav.org/wr/1) is checked in, creating version http://repo.webdav.org/his/1/ver/V6, and that postcondition DAV:auto-update applies - the DAV:checked-in property of the vcr is now set to http://repo.webdav.org/his/1/ver/V6. 
Does this then mean that it is impossible to ever check in the second working resource, http://repo.webdav.org/wr/2, as it's DAV:checked-out property points to http://repo.webdav.org/his/1/ver/V5, and precondition DAV:no-overwrite-by-auto-update prevents the checkin? 
The DAV:auto-update property is protected, and so can't be changed by a client PROPPATCH. 
4. Looks like there's a typo in draft 16, section 9.4 - the CHECKIN 'forking' preconditions reference DAV:checkout-... conditions. 
Thanks, Alison Macmillan The statements and opinions expressed here are my own and do not necessarily represent those of Oracle Corporation. 
Sorry - please ignore this question. 
I guess the checked-out resource URL(s) are returned in the DAV:merged-set response element, (and it also covers the case of merging more than one merge version + target). 
The statements and opinions expressed here are my own and do not necessarily represent those of Oracle Corporation. 
Yes, it probably would be worth allowing the merge target to be a working resource. 
I'll put that on the "fixes to draft 17" list. 
You have two choices: - Do what you would do on a non-forking server, i.e. checkout the new version to get a new working resource, merge the contents of your old working resource into that new working resource, delete the old working resource, and then checkin the new working resource (and if someone else has checked in a new version since your checkout, repeat the process). 
- Use UPDATE to change the DAV:checked-in version of the VCR to be .../V5 and then checkin. 
Yes, that is fixed in draft 17. Cheers, Geoff Or, could you also just merge from the DAV:checked-in version of the VCR to the working resource, and then check in the working resource? 
(Now that a working resource can be a merge target). 
Thanks, Alison. 
The statements and opinions expressed here are my own and do not necessarily represent those of Oracle Corporation. 
From: Alison Macmillan [mailto:alison.macmillan@oracle.com] 
Or, could you also just merge from the DAV:checked-in version of the VCR to the working resource, and then check in the working resource? 
(Now that a working resource can be a merge target). 
Not by the current protocol, since the DAV:no-overwrite-by-auto-update postcondition states: If the DAV:auto-update property for the checked-out resource identifies a version-controlled resource, the DAV:checked-out property of the checked-out resource MUST identify the same version as the DAV:checked-in property of that version-controlled resource. 
We could relax that constraint to say: If the DAV:auto-update property for the checked-out resource identifies a version-controlled resource, at least one of the versions identified by the DAV:predecessor-set property of the checked-out resource MUST identify a version that is either the same as or a descendant of the version identified by the DAV:checked-in property of that version-controlled resource. 
If there are no objections, I'll place this on the "editorial fix" list for draft 17. Cheers, Geoff [to checkin a working resource whose DAV:checked-out version does not old VCR that a I object to this -- it is certainly not an editorial fix. 
The purpose of this postcondition is to prevent the auto-update overwriting changes made by other clients, by ensuring that the update is being applied to the same state of the resource that was checked-out. 
With this proposed rewrite data can be lost unwittingly. 
Regards, Tim [to checkin a working resource whose DAV:checked-out version does How are other client's changes overwritten? 
Doesn't the constraint on the value of DAV:predecessor-set indicate that the appropriate merge has happened? 
R'gds, Alison. 
The statements and opinions expressed here are my own and do not necessarily represent those of Oracle Corporation. 
I agree with Alison. 
If the DAV:checked-in version of the VCR is an ancestor of the checked-out resource, by definition the content of the VCR has been "included" in the content of the checked-out resource (that's the defined semantics of "ancestor"). 
This could happen because: - the UPDATE method was used to set the DAV:checked-in version to be a predecessor of the current DAV:checked-in version - the owner of the checked-out resource explicitly added the current DAV:checked-in version to the DAV:predecessor-set of the checked-out resource (assumedly, after merging the content of the DAV:checked-in version into the content of the checked-out resource). 
In either case, it should be legal for the checked-out resource to be checked in, which is what the revised postcondition allows. 
Cheers, Geoff [to checkin a working resource whose DAV:checked-out version does overwriting applied proposed How are other client's changes overwritten? 
Doesn't the constraint on the value of DAV:predecessor-set indicate that the appropriate merge has happened? 
R'gds, Alison. 
The statements and opinions expressed here are my own and do not necessarily represent those of Oracle Corporation. 
Ok, I agree -- I had to draw it out to convince myself g Regards, Tim 
