I just noticed an editorial (?) tweak (pointed out by pfps) to the semantics document that the semantic constraint that properties must be a subset of resources has been removed from the current editors draft. 
Pat, this is rather more than just an editorial tweak. 
1. M&amp;S states that properties are a subset of resources 2. Object oriented implementations of RDF typically have property objects that are subclass of resources - is that still an accurate design? 
3. I've seen no last call comment that justifies the change The claim in the change log that it does not affect entailments is false. 
Test case: 
sss ppp ooo . 
rdf entail ppp rdf:type rdf:Resource . 
I believe the answer should be yes, but in any case the answer is distinguishable in RDF. 
Brian 
This is only for simple interpretations. 
It does not make any difference to RDF or RDFS interpretations, since those interpretations are still required to conform to the subset condition by virtue of their semantic conditions; cf. section 3, 5th para (after the table of RDF semantic conditions): 
"The first condition could be regarded as defining IP to be the set of resources in the universe of the interpretation which have the value I(rdf:Property) of the property I(rdf:type). 
Such subsets of the universe will be central in interpretations of RDFS. 
Note that this condition requires IP to be a subset of IR." So all of the following is still true in RDF, and in all RDF semantic extensions. 
Yes. 
The only document in the entire RDF document suite which mentions 
simple entailment is the semantics doc, and all the lemmas in section 2 still hold. 
The answer is yes. 
No RDF entailments are affected by this change. 
If you really feel that this is a serious matter then I can go back and undo this, but I would rather not, as this makes it clearer that 
it is RDF itself which imposes this condition on IP (by virtue of the 'type Property' condition on properties) rather than the graph syntax in some mysterious way. 
There is no need for this condition to be 
imposed on simple interpretations, is the point - it is only needed for RDF itself - and removing it from there makes the RDF conditions less redundant and makes simple interpretations more like conventional first-order interpretations. 
This is really all a part of the general organizational clean-up made since last call where conditions that apply purely to the RDF vocabulary are all labelled as RDF conditions, for RDFS are labelled RDFS conditions, and so on, ie it distributes content into different 
parts of the document. 
I really do consider it a technicality within scope for an editorial change. 
Pat IHMC(850)434 8903 or (650)494 3973 home 40 South Alcaniz St.(850)202 4416 office FL 32501(850)291 0667 cell phayes@ihmc.us 
http://www.ihmc.us/users/phayes 
It seems that you're saying that (among other things) this difference isn't observable from tests, so it's editorial. 
Sounds about right to me. 
I'm glad to see the details; I was curious. 
Dan Connolly, W3C http://www.w3.org/People/Connolly/ 
Checking: Modified: 30 July 2003 11:31:01, rcsid: 1.25 if E is a triple s p o . 
then I(E) = true if s, p and o are in V, I(p) is in IP and I(s),I(o) is in IEXT(I(p)) otherwise I(E)= false. 
-- section 1.4 
So if sss ppp ooo is true then I(ppp) in IP. x is in IP if and only if x, I(rdf:Property) is in IEXT(I(rdf:type)) -- section 3 
Then from above, I(ppp),I(rdf:Property) is in IEXT(I(rdf:type)) 
Then I( ppp rdf:type rdf:Property ) is true, which is the desired entailment. 
#g Graham Klyne PGP: 0FAA 69FF C083 000B A2E9 A131 01B9 1C7A DBCA CB5E 
False. I(ppp rdf:type rdf:Resource) was the test case. 
Brian 
Rats! I knew that, really! 
Given the truth (from before) of: (1) I( ppp rdf:type rdf:Property ) 
and the axiomatic triple: (2) rdf:type rdfs:domain rdfs:Resource . 
-- http://www.w3.org/2001/sw/RDFCore/TR/WD-rdf-mt-20030117/#rdfs_interp 
and: (3) if E is a triple s p o . 
then I(E) = true if s, p and o are in V, I(p) is in IP and I(s),I(o) is in IEXT(I(p)) otherwise I(E)= false. 
-- http://www.w3.org/2001/sw/RDFCore/TR/WD-rdf-mt-20030117/#gddenot then: (4) I(rdf:type),I(rdfs:Resource) in IEXT(I(rdfs:domain)) from (2),(3) also: (5) If x,y is in IEXT(I(rdfs:domain)) and u,v is in IEXT(x) then u is in ICEXT(y) -- http://www.w3.org/2001/sw/RDFCore/TR/WD-rdf-mt-20030117/#rdfs_interp then: (6) I(ppp),I(rdf:Property) in IEXT(I(rdf:type)) from (1),(3) and: (7) I(ppp) in ICEXT(rdfs:Resource) from (4),(6) in (5) 
[x=I(rdf:type), y=I(rdfs:Resource), u=I(ppp), v=I(rdf:Property)] 
and given: (8) x is in ICEXT(y) if and only if x,y is in IEXT(I(rdf:type)) -- http://www.w3.org/2001/sw/RDFCore/TR/WD-rdf-mt-20030117/#rdfs_interp 
(9) I(ppp),I(rdfs:Resource) in IEXT(I(rdf:type)) from (7) in (8) so finally: I( ppp rdf:type rdfs:Resource ) is true from (8) in (3) 
QED (this time?) 
Or, more informally, I think that although IP and IR may be disjoint in RDF-interpretations, where there is no available vocabulary for this to be visible or otherwise in an RDF expression, the semantic conditions on RDFS interpretation require that IP be a subset of IR. 
#g Graham Klyne GK@NineByNine.net Nine by Nine 
This assertion comes as a considerable relief to me. 
I confess I did not read the text of that paragraph, I just looked at the math and it was not obvious to me that IP must be a subset of IR. 
I then checked the now complete (?) closure rules in 7.2 and couldn't see how to get the required entailment. 
The required entailment seems to require rule RDFS4a - thus its an RDFS entailment, not an RDF entailment. 
I know better than to argue mathematics with you, but maybe you could reassure me by spelling out what I'm missing. 
I don't want you to have to change anything. 
Please just talk me out of my concerns. 
Brian 
How do you get from there to I(ppp rdf:type rdf:Resource) is true? 
Brian 
No. This requires RDFS. 
The question was about RDF entailment. 
Pat states that my test entailment, which just uses RDF vocabulary, holds in RDF. 
I think you are now saying that it doesn't. 
Brian ps: sorry if you get some duplicate emails. 
Evolution giving me more hassle this morning. 
B 
Hi Pat, Sorry if you get this twice - having email trouble again. 
I am greatly relieved to hear that. 
I didn't read the para you quote. 
I just checked the maths of the semantic conditions and they didn't seem to require that properties are resources. 
I then checked the (now complete?) closure rules in 7.2 and couldn't see how the desired entailment could be attained from them either. 
I know better than to argue mathematics with you, but maybe you could point out what I'm missing? 
Could someone please spell it out for me, cos I can't see the derivation. 
I don't want any changes either, at this stage. 
I'd much prefer to be assured that I'm wrong. 
In RDF, properties are resources, and if the semantics ain't saying that, I do think that's a problem. 
Brian 
Er, how can you have an RDF-entailment of a result that contains RDFS vocabulary, unless that term is in an antecedent? 
[Checks original question...] sss ppp ooo . 
rdf entail ppp rdf:type rdf:Resource . 
Er, I missed this before, but what's rdf:Resource? 
RDF vocabulary rdf:type rdf:Property rdf:XMLLiteral rdf:nil rdf:List rdf:Statement rdf:subject rdf:predicate rdf:object rdf:first rdf:rest rdf:Seq rdf:Bag rdf:Alt rdf:_1 rdf:_2 ... rdf:value -- http://www.w3.org/2001/sw/RDFCore/TR/WD-rdf-mt-20030117/#InterpVocab RDFS vocabulary rdfs:domain rdfs:range rdfs:Resource rdfs:Literal rdfs:Datatype rdfs:Class rdfs:subClassOf rdfs:subPropertyOf rdfs:member rdfs:Container rdfs:ContainerMembershipProperty rdfs:comment rdfs:seeAlso rdfs:isDefinedBy rdfs:label -- http://www.w3.org/2001/sw/RDFCore/TR/WD-rdf-mt-20030117/#rdfs_interp #g Graham Klyne GK@NineByNine.net Nine by Nine 
My mistake - should be rdfs:Resource, and I take your point. 
I think this leads me to the conclusion that I'd have preferred rdfs:Resource to be part of the RDF vocabulary and the above entailment to hold in RDF. 
But it may well be too late to make that change. 
Brian 
Well, that's been something I've wondered about myself, but it be a change from the original spec without any compelling justification that I could see. 
I think so, since the proof I offered used other aspects of RDFS entailment (axiomatic triple, rdfs:domain and ICEXT conditions). 
If the entailment were true in RDF without the other RDFS semantic constraints, I would fear a new possibility of corner-case contradictions. 
#g Graham Klyne GK@NineByNine.net Nine by Nine 
Well, no, it can't in RDF, because "Resource" isn't in the RDF namespace, it is rdfs:Resource. 
If it had been rdf:Resource then rdfs 4a/b would have been rdf 4a/b. 
I hope that I got that one right. 
If not, let me know ASAP. 
Pat IHMC(850)434 8903 or (650)494 3973 home 40 South Alcaniz St.(850)202 4416 office FL 32501(850)291 0667 cell phayes@ihmc.us 
http://www.ihmc.us/users/phayes 
