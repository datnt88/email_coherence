Please send me your comments and I'll try to incorporate them... Abstract This document describes techniques for authoring accessible Scripts including Javascript. 
This is the first Working Draft associated with the latest Web Content Accessibility Guidelines 2.0 Working Draft. 
Status of this document This document is prepared by the Web Content Accessibility Guidelines Working Group (WCAG WG) to show how a Script Techniques for WCAG 2.0 with more easily testable script-specific checkpoints might read. 
This draft is not based on consensus of the WCAG Working Group nor has it gone through W3C process. 
there is more... 
It was constructed via checking through IG mail archives for items. 
jonathan chetwynd IT teacher (LDD) j.chetwynd@btinternet.com on the web" Author Benefits: I would add as a bullet: "--Browser detection facilitates use of CSS (a WCAG recommendation) despite less-than-perfect user agent implementations. 
--Allows replication of server-side functionality for authors without server access." 
Instead of using a "javascript:" psuedo-URL, set the link's onClick to the desired function, have the function return false and set the link's HREF to a fallback page to which the user will be sent if using a non-Javacript browser (or if the function does not work properly with the particular browser). 
Example: A HREF="BackupNav.html" onClick="navigationFunction( ); return false" Link to Navigation Menu /A Event Handlers This creates problems not only for people who are physically unable to use a mouse, but for screenreader users as well. 
The point of regard of the screenreader does not trigger the onMouseOver event handler. 
Thus menuing systems triggered by onMouseOver will not work with screenreaders. 
The alternative is to use a keyboard-triggered event handler to use the onFocus event handler. 
This is triggered when focus is transferred to an object by "tabbing" to it. 
AG:: look at Trace site http://trace.wisc.edu/ for an example. 
AG:: Getting people to understand this one pays for the whole book, right there. 
What is the browser implementation status of onActivate? 
