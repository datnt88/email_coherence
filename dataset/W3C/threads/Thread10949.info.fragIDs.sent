Sitting in the airport on the way home, it dawned on me that at least 20 
of you weren't in Boston and deserve a report on the first fruits of our machinations. 
I. Saturday During the OMUG (Omnimark Users' Group) meeting on Saturday, John McFadden, Omnimark supremo, expressed grave public doubts about XML. 
I wasn't there so I won't try to give you what he said at third-hand, but he certainly did make all the attendees curious to find out what it was all about. 
II. 
Sunday evening The WG and some hangers-on and friends and relations met Sunday night in a relaxed mood, basically to see each others' faces. 
Highlights were: 1. the availability of the standard; Jon Bosak brought 1200 copies, nicely printed up in a dark turquoise cover. 
(The conference had about 1000 attendees, and with vendors and camp followers, the total population was on the order of 1400). 
No draft XML specs were left over. 
Jon had also done up a 4-page, thorough, light-hearted, "XML Q &amp; A", which was also generally available. 
I'm sure Jon could post a copy here. 
2. lapel pins, red background with silver lettering saying " ?XML! ". 
There were only a hundred, and they're basically gone now, so a future collectors' item. 
3. discussion of the problems and advantages of strict 8879 conformance, and how we could work with ISO to minimize those problems. 
Charles Goldfarb and the rest of the WG8 people, who had already been in Boston for a week-long meeting, were in 100% onside and we are completely unified in our desire to have an XML that is clean, free of design blemishes, and fully conformant. 
Skipping forward, by weeks' end WG8, through Charles, had solicited the ERB to propose a draft technical corrigendum to see if we can put to bed some of the thornier issues in this area. 
While ISO is not (nor arguably should be) a fast-moving organization, the WG8 folks will do what they can do to make this happen. 
4. discussion about what we should discuss next. 
While no votes were taken, there seems to be a surprisingly-strong sentiment for plowing ahead with hyperlinks now and deferring the display-semantics issues for a bit. 
Reasons: CSS is awfully hard to fight at the moment, since both Netscape and Microsoft are working on it like mad, and potentially very vulnerable in a few months time if the design fails under pressure, as some of us suspect it will. 
Second, by stealing a few juicy tidbits from HyTime, we can probably, by the Web conference in April, probably show some hyperlink semantics that are way better than what a naked URL can do, and at the same time avoid getting diverted down the URI trail-of-tears. 
All in all a successful evening. 
A downside - at some point early in the week [Monday?] 
Gavin Nicol had his nice new Volvo totaled but I gather walked away from it. 
I never saw him again; if anyone can post reassuring us of Gavin's good health that would be welcome. 
III. Monday Charles, in his inventor's keynote, gave XML a nice plug. 
In the poster room (lots of good posters) Michael Sperberg-McQueen had done a nice big 3-panel XML poster; it was pretty well attended. 
I will retain the memory of Pam Gennusa standing there saying "No DTD? 
That makes me feel realy weird!" 
What with this, and the posters all over the place, and the pins in evidence, there was a bit of an XML buzz... a lot of people were nervous. 
IV. Tuesday The TAG Show Daily led off with a brief piece from yours truly announcing that XML would hit the streets and giving some URL's and so on. 
Our session ran from 11:15 to 12:45, on the "expert" track. 
It was standing room only, so I think that the luckless souls giving parallel sessions may have been pretty thinly attended. 
I led off addressing the question of "Why XML?" The highlight of my speech was when I frisbeed the XML spec off the stage and it twirled like a November leaf gently to earth, with nary a thud. 
Also I drew attention to Jon's nearly miraculous deftness and energy in making XML happen. 
Jon was next, explaining the process; the coreof his talk was an attempt to pre-answer the main question which was doubtless being asked but not openly: what bunch of W3C turkeys are qualified to subset SGML? 
Jon focused not on people, but on DocBook, WG8, the Open Text Index, the OED, SDL, HyTime (Eliot's the co-editor), the TEI, Author/Editor, HoTMetaL, Adept, Dynatext, Dynaweb, IBMIDDOC, groff, sgmls, nsgmls, jade, Grif, Mosaic. 
The idea was that people should feel free to disagree with us, but that cheap shots about experience or qualifications were out of order. 
The highlights of Jon's speech were spontaneous applause for getting the draft out in 11 weeks, and for James' bio. 
Then Michael ran through the technical differences between SGML and XML, leaning heavily on the great pains we'd gone to for compatibility. 
James discussed the XML issues for implementors, covering the cases of people with existing SGML implementations, and people doing XML from scratch; he got a big laugh by out that a really big gain in ease of implementation is that you don't have to come to an understanding of the ISO standard. 
I and Jon closed, discussing the implications of XML respectively for vendors and information providers. 
We were able to announce that SoftQuad and Arbortext were doing an interoperability demo using XML (forgiveably, version 0.003 of the spec I think), that AIS had announced that Balise would implement XML (and they support Unicode!), as would Stilo, who sell an SGML Editor. 
(parenthetical note: Jean Paoli and Bill Smith took the opportunity to wander gleefully about the show floor, pouncing on hapless and high-strung exhibitor marketing executives and demanding XML demos). 
After the speechmaking, we had a half-hour for questions, and they were both friendly and excellent. 
Francois Chahuneau (his agenda only slightly veiled) wanted a verification that SGML vendors would need to put in Unicode support. 
Eric Severson wanted to know about our relationship with WG8. 
Somebody (Pam Gennusa?) wanted to know about the dangers of living without a DTD. 
Ludo Van Vooren pointed out that well-formed XML might be *very* useful for those doing large scale SGML up-conversions; the problem is not spotting the data items, but making the de facto structures fit the DTD. 
So, just make 'em well-formed XML and leave the validation until the editorial process comes around (if ever). 
Murray Altheim had a good question, but I forget what it was. 
V. Wednesday The show daily was all XML, almost literally - there were a couple of squibs on other subjects, but not much. 
The coverage was overwhelmingly favorable. 
We had disposed of almost all the XML pins, and they were gracing many well-known chests, including Charles Goldfarb's. 
XML was showing up on a lot of slides in only-loosely-related presentations. 
AIS was doing a printed XML press release - nice work. 
VI. Thursday The show daily had an editorial from Brian Travis, previously on record as dubious about XML, saying that he would wear the pin with pride. 
Michael touched briefly on XML in his (wonderful, as always) closing address. 
But the real news was that the GCA announced that there would be a workshop in March on the subject of "Selling SGML using XML and the Web" - two days in San Diego - the first wholly nontechnical SGML conference anywhere, as far as I know. 
Details to follow we hope. 
That's about all. 
I'd say it went about as well as we could have hoped. 
Our next job is figuring out what to do to make sure that XML makes the right impression at the big Web conference at Santa Clara in April. 
One parenthetical note - about half a dozen people separately said they wished we'd put FPI's in. 
My standard answer was "James says it's too hard," but there is clearly a desire for this on the SGML side of the fence. 
Not only would it be hard, it would add substantially to the spec. 
I'd favor heel-dragging on this, but now would be a good time for pro-FPI manifestoes in the WG. 
Everyone on the WG should reach around and pat themselves on the back. 
- Tim 
[...] Murray Altheim had a good question, but I forget what it was. 
Stylesheets and linking of meta information. 
Assuming even a minimal SGML application (without tables, forms, hyperlinks, and other features folks in the HTML world have come to expect*), we still need to provide a method of attaching presentation information to our structured content. 
I was one, only because I see academic, corporate and government sites wishing to build lightweight applications around a common DTD. 
Without FPIs there is no simple way (other than the hack of embedding URLs into system ids) of providing the benefits of public text. 
Perhaps a subset of TR9401 rather than the whole shebang would do fine. 
Murray * Netscape's new XML browser, called the 'Netscape Geomancer', already supports XML frames, VRML, BGSOUND, and BLINK. 
It also supports a new flavor of XML they've developed called XML+. 
Go smoke somethingk and call me in de morning. 
Murray Altheim, Program Manager Spyglass, Inc., Cambridge, Massachusetts "Give a monkey the tools and he'll eventually build a typewriter." 
Tim 
Gavin is alive and well (if without his glasses!), and currently recouperating by driving around Spain after a successful week at the W3C Internationalization and Multilingualism conference in Seville, at which he gave valuable support to my presentation on XML, and to other aspects of the role of DSSSL in processing multilingual documents properly. 
You might like to consider, carefully, the fact that ISO 10646 support is not fully available from CSS1 when looking at stylesheet issues for XML. 
While Bert Bos has now been made aware of what is needed for CSS2 in this field there are still likely to be many issues of multilingual document production that are not supported by CSS2 but are supported by DSSSL. 
Martin Bryan, The SGML Centre, Churchdown, Glos. 
GL3 2PU, UK 
I heard James and I canot refute what he says. 
But I am one of the voices asking loudly for FPIs. 
I don't ask that anything be done with their little insides (semantically, syntactically, or anything else you 
can think of). 
I would be content if they could be viewed as one long silly-looking string that we use in a character for character match. 
I would not find that match hard to do. 
Therefore I'm assuming that 
it must be the catalog part that is difficult. 
Is it the SGML Open 
catalog that is the problem? 
That catalog was intended to be interchageable and complete (well...), not simple. 
Would a simplification of it help? 
And (for those of us whose dragon-book years are very long ago and far away) what is the difficult part? 
--Debbie Lapeyre 6010 Executive Blvd. 
Suite 608 E-mail: dlapeyre@mulberrytech.com 
Rockville, MD USA 20852 
I concur, with one extra request that shouldn't be difficult. 
When the 
"F"PI is presented to the application or entity manager, it should be 
compressed IAW 8879: "A minimum literal is interpreted by ignoring RS and replacing a sequence of one or more RE and/or SPACE characters with a single SPACE, except that such a sequence is ignored if it occurs at the start or end of the minimum literal." 
I believe this is the same algorithm used for COLLAPSE handling of mixed- content elements. 
(NB: This is my first attempt with a new mail handler. 
Pls forgive if I screw up the formatting or whatever. 
-D.P.) Dave Peterson SGMLWorks! 
davep@acm.org 
I'll also re-iterate that we could simply prepare to use the URN approach in defining XML. 
We would be making a conscious decision not to implement FPI resolution, but would also be enabling FPI use once the URN infrastructure is in place. 
This would let us get the advantages of FPIs while deferring to the internet standards bodies. 
Of course I wouldn't complain about just including FPIs -- we don't need to accept 
the catalog mechanism if it takes 5000 lines of code to implement. 
-- David I am not a number, I am an undefined character! 
[Tim Bray] 
Which is a long-winded way of saying that I just haven't seen any evidence in the field that FPI's have any *practical* utility other than serving as a rather lengthy and awkward lookup key in a catalog. 
I think the problem that FPI's purport to try to solve is in fact a real problem, and in fact as soon as there is working technology out there that demonstrably uses FPI's (or some other mechanism) to solve it, we should adopt the proper attitude of gratefulness and steal it. 
The kind of argument on the WG that would succeed in swinging me (and I suspect a lot of others) toward including FPI's would be a war story along the lines of "here's how we used FPI's to solve important problem X, 
1) Identifier Uniqueness An FPI is made up of an owner name and an object name. 
When owner names are unique, the uniqueness of object names is the responsibility of the owner in the owner's object name space. 
FPI's that begin "-//" are unregisterable and can _never_ be guaranteed to be unique. 
FPI's that begin "+//" or "ISO" are _obliged_ to have 
been assigned by a _recognized_ ISO authority: the ISO publication 
authority, the ISO registration authority, an ISO member body authority 
or an ISO identified organisation authority. 
I was very surprised to see that some people at SGML'96 were incorrectly using FPI's that were prefixed "+//" in direct contravention of this 
rule ... if you see "+//" without a recognized registration authority, 
do not assume that the identifier is guaranteed to be unique as it has 
been improperly formed. 
Two available registered owner name spaces that guarantee uniqueness are ISBN (recognized as an authorized organisation for a long time) and the ISO registration authority (available real soon now!). 
Microstar's 2 registered owner names begin: +//ISBN 1-55160 and (real soon now) +//ISO/IEC 9070/RA::A00004 In both cases we use additional owner-name components to further identify us and our project, customer, application, whatever. 
For example: +//ISBN 1-55160::MSL//DTD Presentation Slide Show//EN +//ISBN 1-55160::MSL::CUST-A//DTD Book Test//EN +//ISBN 1-55160::MSL::CUST-B//DTD Book Test//EN Each project can then manage their own object name space as they wish, knowing that whatever they choose they will not interfere with any other project's object name space, nor with any other company's use of public identifiers. 
I am guaranteed that no other organisation in the world will be legally authorized to use our owner-name, unless we give them part of our extended name space. 
BTW, we obtained our ISBN Publisher's Prefix by a simple application to our country's ISBN Registration Authority, the National Library of Canada (who were assigned sets of numbers by the International Standard Book Numbering Agency in Berlin). 
Contact your government for the name of the authority in your country. 
2) Identifier Persistence I'm not sure that this is the correct word, as it might be overloaded by now ... but the idea is that given the uniqueness guaranteed in (1), it is now up to the owner to ensure that the object's name lasts forever and is not made ambiguous by identifying something else with the same identifier. 
3) Identifier Management When we deliver a project to a customer, the _only_ change required to locate _all_ objects (we try to _never_ use SYSTEM identifiers _anywhere_) is to modify the catalog (and even that can be mitigated as noted below). 
None of our SGML instances change one iota, and can be marked read-only when delivered (this is so that the customer cannot accidentally change something else when attempting to change only SYSTEM identifiers if the SGML files contained SYSTEM identifiers). 
Also, how would the customer know where all of the SYSTEM identifiers were in a set of SGML instances? 
By delivering a system based _entirely_ on PUBLIC identifiers, all external identifiers can be summarized in catalogs. 
FPI's make an excellent management tool for the delivery of a suite of interconnected SGML files. 
4) Identifier Portability If, after delivery with our catalogs, the customer wishes to move the suite of SGML files elsewhere within their system, or change the source of any file of the system, only the catalogs need be changed. 
The customer need not know how many files share a common resource in order for all references to that resource to be changed. 
Think of how quickly aged, broken or incompatible HTTP links can be repaired if all links in a suite of files are FPI's, thus fixable with a single change to a catalog. 
and here's where you can go and look at the software that does it." 
Of course, the software function would have to be something that you could do in a lightweight, compact implementation. 
[Debbie Lapeyre] 
Sounds good enough for me, though there are some very nice aspects of the SGML Open catalog specification to make life easier. 
The SGML Open catalog convention of resolving relative file path named SYSTEM identifiers as being relative to the location of the SGML Open catalog provides further independence and can reduce the amount of "customisation" required when delivering, or moving, a suite of SGML files. 
Please add my voice (LOUDLY) to the clamour for supporting FPIs in XML. 
....... Ken Microstar Software Ltd. WATS: 1 800 267-9975 /\ /\ Aided 3775 Richmond Road Mail: gkholman@microstar.com 
\/ \/ Document Nepean Ontario Info: cade@microstar.com 
/\ /\ Engineering CANADA K2H-5B7 Web: http://www.microstar.com 
\/ \/ P.O. Box 266 Street: 1605 Mardick Court Kars, Ontario E-mail: gkholman@CanadaMail.com CANADA KOA-2E0 E-mail: ab945@freenet.carleton.ca 
-----BEGIN PGP PUBLIC KEY BLOCK----- Version: 2.6 mQCNAjHOimAAAAEEAK47HbDtZZB8hJBk+r9Zh7m7QxdFHTaz/m200QQ7J9XX4QYs h6hsuP6ZqBJXyLdmIVMEwR6Ry6oxjKMd6BRJ8OGScD89eIghgbrpMX+900NxM0x2 v3yWO9ki2gKRPrn4vlCXznnmcmsyke0G02T2LefXbgZHyVSqDSOLy8nwuN7dAAUR tClHLiBLZW4gSG9sbWFuIDxhYjk0NUBmcmVlbmV0LmNhcmxldG9uLmNhPg== =IN3T -----END PGP PUBLIC KEY BLOCK----- 
Yes! it's one of those simple ideas that makes a huge difference. 
Jo WebPage will be impressed when she sees a working entity resolution mechanism that supports indirection. 
Some of the SP extensions (CATALOG and DELEGATE) are particularly useful for managing multiple "interchange packages". 
And mine. 
/kmc 
A URL is all on the front end. 
An FPI is by definition NOT on the front end and guarantees indirection. 
Are we trying to forbid indirection and force front-endedness? 
Is that the objection? 
You can get client-side indirection in some areas with and this does not require further extension. 
Unfortunately, &amp; and % are not recognised in SGML system identifiers,... [they're system data, defined as character data, which in turn is defined as data character*, where data character is defined as SGML character, which in turn is defined as (why would anyone want to simplify SGML??) markup character | DATACHAR, where markup character is name character, function character or DELIMCHAR, where name character is name start character | Digit | LCMNMCHAR | UCNMCHAR, and a .... aaargh! 
But at any rate it turns out that entities aren't expanded in them. 
Therefore you can't use this technique for the DTD or for entity sets included in the DTD. 
None the less, you can do something just like an SGML open catalog in XML right now today: !DOCTYPE BOY [ %Catalog; %Latin1; ] BOY ..... /BOY Now put the real URL for Latin1, if you need to override it, in catalog.sgml, and you have the indirection that Murray Altheim mentioned. 
Panorama lets the local copy of the SGML OPEN CATALOG file override the copy on the remote server (assuming the documents are on a remote server), and the mechanism I have described does not address that. 
Power Users may have to wait for XML 2. Lee 
If I can find time over the weekend I will (with my Chairman hat off and my Sun Representative hat on) describe the application of FPIs that we are putting in place at Sun for managing links in Solaris documentation, and then you will see why I agree strongly with Ken Holman that FPIs are something that we should have in XML. 
For the moment, however, I would like to go slightly beyond Ken's position by quibbling with this statement from his excellent post on the subject: 
This may be true from the wording of the standards, but I maintain 
that it's not actually the case in practice. 
For example, we are 
adopting the convention for SunSoft documents that they are all assigned unique FPIs that begin "-//SUN::SUNSOFT//..." The standards may not guarantee you that such an identifier is unique, but Sun can guarantee you a couple of other things: 1. 
Our document check-in system will not allow two documents to be created with the same FPI, and 
2. If you start creating FPIs that begin "-//SUN::SUNSOFT" then you can count on spending the next few years of your life in court with our trademark lawyers. 
So in reality, even unregistered FPIs can function as unique and persistent names. 
Jon 
But PUBLIC identifiers put that redirection under the control of end-users. 
There are numerous techniques for doing redirection on the server side. 
And that is why they are critical to me. 
Not that there may be lookup but that there must be and on the client side. 
I can't agree that lookup should be on the client side. 
But perhaps that is exactly what we are trying to avoid. 
A URL is all on the front end. 
An FPI is by definition NOT on the front end and guarantees indirection. 
Are we trying to forbid indirection and force front-endedness? 
Is that the objection? 
Hopefully not. 
An interesting statement that was made at the W3C Internationalization and Multilingualism Symposium last week was that persistent URLs (PURLs) needed to be stored in a "library" that guaranteed long term access to the PURL. 
The idea is that the library would redirect the PURL to the current storage location for the relevant file. 
Consider what this means. 
A library can be looked at as a "set of catalogued references to objects stored in a set of local storage units". 
The catalogue provides both the indirection and the means of identifying where multiple copies of an object can be found. 
It also allows the same object to be identified in more than one way, e.g. by author name or by title. 
Consider if everyone wanting to create a reference to a paper on SGML decided, instead of referencing the file directly, to reference the entry for the paper in Robin Cover's bibliography. 
This would then point to the server(s) currently containing copies of this paper. 
If one wanted to create a link to anything about the subject you could do so by pointing to the public catalogue, whose URL would be much more persistant than any maintained at the individual sources. 
What does this tell us about SGML catalogs? 
Firstly it suggests they are 
currently stored in the wrong place. 
They are currently stored in the relocatable servers or in clients: I contend that they should be stored in an SGML Open Catalogue Library or some similar form of long-term digital library. 
Secondly it suggests that the FPIs used to identify the objects to be indirected do not need to be unique. 
There could be more than one way of identifying the same file using an FPI (e.g. an unregistered name when the file was first created, and a set of registered ones used for later references to the same file). 
It also implies that different catalogues in the same library can provide different ways of referencing the same object. 
P.S. Because of ownership, accidental name duplication is very easy to avoid. 
Both registered and unregistered (the 99% case) provide simple but very real duplication protection. 
(It is easy to screw up your own stuff but very hard to screw up someone elses if you follow the rules at all.) 
Funny, I now seemed to have covered Debbie's last point as well! 
You don't need ownership of 'your catalog', and you don't need to avoid name duplication in FPIs. 
What you actually want to do is to decouple the catalogue entry from its owner and encourage identifier duplication. 
What you need to do first, however, in encourage the use of indirection, which is the whole point of URNs, URCs, etc. 
They all need a directory/catalogue mechanism in some form of "library" to be able to work (as does the DNS service needed to resolve URLs). 
Martin Bryan Martin Bryan, The SGML Centre, Churchdown, Glos. 
GL3 2PU, UK 
On Wed, 27 Nov 1996 18:26:22 -0800, bosak@atlantic-83.Eng.Sun.COM (Jon Bosak) 
Sun undoubtedly has an ISBN publisher's prefix. 
Why not just prefix it to your 
FPIs and use the standard the way it is supposed to be used? 
Your present approach is reminiscent of a B western where the powerful rancher takes over a part of the unfenced common pasturage and threatens anyone who "trespasses" on it. 
Beware ... Roy Rogers is still alive and well (and living in Victorville, California). 
Charles F. Goldfarb * Information Management Consulting * +1(408)867-5553 13075 Paramount Drive * Saratoga CA 95070 * USA International Standards Editor * ISO 8879 SGML * ISO/IEC 10744 HyTime Prentice-Hall Series Editor * CFG Series on Open Information Management 
No, we don't. 
SunSoft Press has one, and so does JavaPress, but not Sun Microsystems Inc., or SunSoft or SMCC - our publications (the ones you receive when you buy a Sun workstation, or by special order) do not carry ISBN numbers. 
In what way does "-//SUN::SUNSOFT" deviate from the standard? 
I would think 
that a deviation from the standard would be to use "+//SUN::SUNSOFT". 
But let me put this another way. 
We really want to be able to start our 
FPIs with "+//SUN::SUNSOFT". 
How do we accomplish this? 
What authority 
is there today to register this? 
"Real soon now" doesn't quite cut it. 
Oh please. 
In what way is the string "SUN::SUNSOFT" common pasturage in the age of trademarks? 
Eduardo 
[Charles Goldfarb:] 
I have my own ideas about how the standard is supposed to be used. 
My point was that you can make your own publisher prefix without getting permission from, or paying an annual fee to, a naming authority. 
Any corporation or trademark owner can use their 
intellectual property rights to assert control over the use of their name in an FPI, not just companies the size of Sun. 
FPIs can in practice serve as unique identifiers in the absence of naming authorities. 
Jon 
[Eduardo Gutentag] 
It doesn't at all, and in fact, it shows consistent usage of owner-name components and proper use in SGML. 
The "real soon now" that I mentioned isn't in the context of being able to register arbitrary strings ... it is in the context of ISO/IEC having an authorized Registrar "real soon now". 
According to ISO/IEC 9070:1991, the Registration Authority assigns numbers that are used in the specific format of my example: "+//ISO/IEC 9070/RA::A00004", specifically, the "A00004" string for Microstar. 
ISO has already assigned ANSI as the Registration Authority. 
ANSI is in negotiation (it may have even been completed by now) with GCA for GCA to be the Registrar (this was announced at SGML'95). 
The GCA Registry is at to ANSI, and the list of organisations currently assigned numbers. 
(Owners of copies of ISO/IEC 9070:1991(E) will discover some minor discrepancies that are being addressed by ISO/IEC JTC 1/SC 18/WG 8.) So there is no _naming authority_ (9070 definition 3.9) that is "there today to register this" to make "SUN::SUNSOFT" a _registered owner prefix_ (9070 clause 5.2). 
The note with ISO 8879:1986 Production [82] states that "+//" is used with minimum data that "could be a citation of a national or industry standard, or some other unique identifier assigned in accordance with ISO 9070". 
The string "+//SUN::SUNSOFT" does not qualify, but then, my understanding is that notes are not necessarily normative. 
The note with 8879 production [83] states that "-//" is used with minimum data that "could be a (presumably unique) designation created by a trade organisation or other user community, or by an individual". 
The 9070 clause 5.3 says that unregistered owner names are prefixed "UNREGISTERED::" (correctly used by GCA for their temporary owner names and by James Clark in his DSSSL extensions used in James' Awesome DSSSL Engine). 
So, technically, even though "-//SUN::SUNSOFT" does not meet the precise criteria set out by 9070, it does meet the criteria in [83]'s note in 8879 "by an individual". 
So, my read is that "-//SUN::SUNSOFT" is quite acceptable for SGML use (and Jon's point about trademark is so obvious I apologize for my blanket statement before), but "+//SUN::SUNSOFT" is not. 
....... Ken Microstar Software Ltd. WATS: 1 800 267-9975 /\ /\ Aided 3775 Richmond Road Mail: gkholman@microstar.com 
\/ \/ Document Nepean Ontario Info: cade@microstar.com 
/\ /\ Engineering CANADA K2H-5B7 Web: http://www.microstar.com 
\/ \/ P.O. Box 266 Street: 1605 Mardick Court Kars, Ontario CANADA KOA-2E0 E-mail: gkholman@CanadaMail.com -----BEGIN PGP PUBLIC KEY BLOCK----- Version: 2.6 mQCNAjHOimAAAAEEAK47HbDtZZB8hJBk+r9Zh7m7QxdFHTaz/m200QQ7J9XX4QYs h6hsuP6ZqBJXyLdmIVMEwR6Ry6oxjKMd6BRJ8OGScD89eIghgbrpMX+900NxM0x2 v3yWO9ki2gKRPrn4vlCXznnmcmsyke0G02T2LefXbgZHyVSqDSOLy8nwuN7dAAUR tClHLiBLZW4gSG9sbWFuIDxhYjk0NUBmcmVlbmV0LmNhcmxldG9uLmNhPg== =IN3T -----END PGP PUBLIC KEY BLOCK----- 
Of course, when you discover that the European division of Sun Life's software division has been using SUN:SUNSOFT as an owner identifier for several years, you'll wish there had been a registry, and all the trademark lawyers in Washington couldn't win you that battle :-) 
This is why the ISBN is used. 
I'm not sure whether it will be a problem 
in practice that an ISBN isn't very obviously hierarchical, so that FPI name servers may each have to know about the entire namespace. 
Is there any further hierarchy than publisher, private-space? 
At any rate I agree with Charles here that you should not try and invent your own standard. 
Lee 
At the time 9070 was published, I checked with the U.S. ISBN agency and was told (in writing) that they would support our use of publisher prefixes for registered owner identifiers, and that there was no fee for the assignment of a prefix. 
You do not have to be a publisher to obtain one. 
Exactly! Using "-//SUN::SUNSOFT" as an unregistered, not guaranteed unique prefix is perfectly o.k. 
Where Sun departs from the standard is in trying to claim that it owns the prefix. 
Only registered owner prefixes can be owned. 
An ISBN publisher prefix is a two-level hierarchy, region and publisher. 
I think there are 10 regions (the first digit). 
And there is no need to. 
Even if GCA-assigned ISO 9070 prefixes are not yet available, ISBN prefixes are. 
Charles F. Goldfarb * Information Management Consulting * +1(408)867-5553 13075 Paramount Drive * Saratoga CA 95070 * USA International Standards Editor * ISO 8879 SGML * ISO/IEC 10744 HyTime Prentice-Hall Series Editor * CFG Series on Open Information Management 
[Lee Quin:] 
This is a question of internal coordination. 
We deal with much more difficult coordination problems than this one. 
I don't see anything magic about ISBNs that will prevent people from misusing them. 
I only see recourse after the fact. 
Jon 
[Charles Goldfarb:] 
That is interesting information. 
Is this a matter of public record, or do we just refer all complaints to you? 
Are you saying that we can't claim ownership of the string "SUN::SUNSOFT" in a context where someone other than Sun was using it in a way that is specifically designed to convey the authorship of documents? 
Excuse me, but I think that our legal department would disagree with you. 
I do not accept that I or anyone else needs to go to a naming authority for the right to name a document or to state my authorship of it. 
There is nothing new about this. 
I am suggesting that unregistered formal public identifiers provide a method by which publishers can (in practice) unambiguously identify texts in a way that allows widespread electronic distribution without typically resorting to a naming authority. 
Everyone agrees that in theory you have to be able to fall back to something like NAPTR if you want to guarantee resolution (though even NAPTR does not guarantee resolution in every case; I don't see how any system could do that). 
But there is a big difference between a scenario in which *all* location-independent resolution happens through a naming authority and one in which 99.99% of the resolutions can occur without reference to a naming authority and only a small residue need to fall back to NAPTR -- so small, in fact, that a publisher might choose to allow those references simply to fail. 
It is my claim that unregistered FPIs can enable the second scenario and thus allow publishing from the ground up rather than making all references go through a central registry to resolve every location-independent identifier. 
Jon 
