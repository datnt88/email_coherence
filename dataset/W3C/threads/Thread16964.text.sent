I've searched but can't find any information as to the accessibility of server side includes. 
Is it acceptable for accessibility purposes to use SSI to create a "text only" version of a website, so that the graphics and javascript are removed but the content of the site is exactly the same between the "text-only" and full versions of the site? 
Thank you in advance for any assistance in this matter. 
Kirsten Williams Web Designer University of Edinburgh Management School 7 Bristo Square Edinburgh EH8 9AL You won't find anything definitive. 
It's not not allowed. 
Pardon the double negative, but look at the latest "requirements for WCAG 2.0, specifically the consensus item S1. QUOTE S1 - Serving content in different forms to meet different user needs and preferences is an acceptable way to comply with the guidelines, as long as the different forms: * are complete (i.e., they provide equivalents for all the content), * can be obtained from visiting the same URI * are up to date, and * can be easily selected according to user preferences. 
Note: We will not make any assumptions in this Requirements document about the method that is used, whether it is content negotiation or a link. 
The issue of where and how the user sets their preferences is an item that has not been discussed. 
END QUOTE Reference: http://www.w3.org/TR/wcag2-req/ 
You can do this but you have to still take responsibility for the completeness of the result. 
It is recognized that it is a lot easier to keep text-only sites for example up to date and complete when using server-side page generation techniques. 
Tesco is an example where it seems to have been done reasonably successufully, from what I hear. 
Tesco Internet Superstore Login page (parallel site example) Al None in particular. 
Is it acceptable for accessibility purposes Yes. 
There are some problems with this solution, in particular it means the downloaded document doesn't have the same accessibility features outside of the context of the site, which may or may not be important, and there is the problem of determining which version to serve. 
It can be a useful technique when user-agents are very unlikely to have much bandwidth or screen size (e.g. mobile devices), but most of the time there isn't really any need for it. 
The consensus on this seems to be one of "Well, ok, but what's the point" and I must say I agree. 
Firstly, it wouldn't be all that easy to use plain SSI - you need some way of detecting whether or not the incoming request was from a source that wanted/needed/should be assumed to want/need the text only version. 
That suddenly make things alot more touchy. 
I posted an URL a while ago to an experiment we've done with something similar relating to CSS; I don't mind doing that again: Secondly, there is the question of whether this is at all worth the effort - would not extensive use of noscript and alt="..." constructs achieve the very same effect and at the same time avoid the entire issue of which browsers to actually serve this content to ? 
Basically, even if it is in the WAI, it is worth asking whether it is really any point in a separate, text-only, site when - given use of such things as alt="..." - browsers that handle text only do such a good job of picking out only the text by themselves. 
- If the UA can't handle Javascript, it won't request Javascript but make do with the noscript content. 
- If the UA can't handle images, it won't request images but make do with the alt="..." content ... for various non-technical values of 'cannot handle', naturally. 
- Tina Holmboe Greytower Technologies tina@greytower.net 
http://www.greytower.net/ 
[+46] 0708 557 905 
