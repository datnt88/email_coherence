This indicates that the navigation parts of a page are important to the page and therefore are a candidate for some special HTML treatment (a la that given to Tables and Lists). 
As I said at the meeting, I feel strongly that navigation bars are *style*, not content. 
What sort of navigation can *not* be derived from structured content with an appropriate style mechanism? 
I don't think CSS can do it, but thats not the point. 
versions, but 'dropping' HTML would not be acceptable to most people especially given the current, and growing, installed base. 
I read the sense of the meeting last week as agreeing that one good way forward was first to develop a set of XML libraries which re-expressed the HTML idioms, and from that re-building an HTML SGML DTD to replace 4.0. 
If this proposed WG does NOT deal with the XML questions, then what will it do? 
simply add some more tags like navigation to the already bloated set -- surely few people want that outcome? 
Anyway, forget XML, call it SGML. 
Its still important to break HTML into SGML pieces and understand now to join it together again in various ways, for all sorts of reasons. 
Sebastian 
Having WWW pages express cross document navigation in a consistent way would enhance accessibility to a great extent since the user would then know where to expect standard controls. 
what are standard navigation features? 
next/last/parent/home suggested document? 
isn't that meta data, belonging in its own tag set, which can be rendered with a style sheet? 
sebastian 
I believe the right thing to do would be to come up with a mini navigation module/DTD which could be pulled in just as say the forms or tables component. 
Ah, now you are talking. 
The critical thing is that this module be considered to be of the same importance (or not) as MathML or PGML. 
What I want is to break the mould which says 
navigation , img and a " are _core_, MathML is an _extension_." 
Sebastian 
Something which could be seen as missing from HTML is formal Navigation definition. 
Most web pages I visit have some sort of navigation 'toolbar' above, below, and/or to the side of every page. 
This indicates that the navigation parts of a page are important to the page and therefore are a candidate for some special HTML treatment 
(a la that given to Tables and Lists). 
One option would be a NAVIGATION tag for defining the general 'toolbar' links and some "You are here" indication. 
Such a tag could be formatted via CSS and even integrated by the Browser into its menu/toolbar system. 
David Richmond P.S. The previous mail about dropping HTML in favour of an XML based system is rather radical and inappropriate. 
HTML should be fully expressible in XML, and that should be an aim for future HTML/XML versions, but 'dropping' HTML would not be acceptable to most people especially given the current, and growing, installed base. 
Here's David Singer's proposal, discussed at the workshop. 
Doesn't the LINK element handle this behaviour already? 
It just happens not to be well implemented. 
Russell O'Connor roconnor@uwaterloo.ca 
``And truth irreversibly destroys the meaning of its own message'' -- Anindita Dutta, ``The Paradox of Truth, the Truth of Entropy'' 
I think your insight that every page uses some navigation and that therefore we may be better off having this as a core HTML primitive with its presentation specified via CSS is a very good idea. 
Having WWW pages express cross document navigation in a consistent way would enhance accessibility to a great extent since the user would then know where to expect standard controls. 
It's like walking into a room and knowing where the light switch is. 
Best Regards, --raman as representative of my employer, Adobe Systems Inc. 
Sebastian-- The reason I followed-up saying that having a set of navigation primitives might be a good idea is because not all navigation on the WWW is structure based --much as I would like it to be, and it is in my opinion give people the tools to do it properly rather than letting them continue to write I what I called "assembly language programs" in an earlier message. 
This said, I was not advocating the random addition of a bunch of tags-- I believe the right thing to do would be to come up with a mini navigation module/DTD which could be pulled in just as say the forms or tables component. 
For instance, many sites on the WWW today have toolbar buttons that take you to the root of the WWW site, the main page etc, and each one of them does it differently-- it would be useful to be always able to find the "go to top" "go to home" and "go to search" buttons without ever having to think about where to look first. 
Best Regards, --raman as representative of my employer, Adobe Systems Inc. 
And there is no reason why these navigation tags couldn't be added via an XSL script applied to purely structural markup. 
In other words, you define the navigation model as appropriate to the client capabilities and apply it to the authored content via a transformation. 
Regards, -- Dave Raggett dsr@w3.org 
http://www.w3.org/People/Raggett World Wide Web Consortium (on assignment from HP Labs) 
That's what the LINK element is/was intended for, but it hasn't materialized in the "major" browsers and is a little messy and inconsistent in Lynx and Mosaic. 
What's needed is not a special new element but the use an existing element by vendors/manufacturers and authors: A *standard* set of relationships should be *clearly* defined for LINK so that vendors and authors can make use of them. 
The standard would include minimum requirements for authos and agent implementors. 
In terms of navigation, I would prefer using a LINK reference to RDF or something else that maps a site. 
Document relationships are defined outside the document, which makes maintenance and organization easier. 
The content should be separated from the meta-content to a degree. 
Why? 
It's inconvenient to maintain navigation links in hundreds of documents. 
Rob 
