I wish to join the call tonight, only to raise what is still my number one issue: the perceived priority of guideline 1. Can this be added to the agenda ? 
I think putting the emphasis (the way it's done today: first thing on the list) on - Ensure that the Authoring Tool is Accessible to Authors with Disabilities is detrimental to Web Accessibility, overall. 
Say you're a developer of html editor within a software company. 
Either you care about accessibility of the UI, and you already have a set of guidelines to comply with (from Microsoft or IBM or Trace) or don't care (but still, you know that kind of guidelines exist, but you just don't care). 
Here comes this new set of W3C AU guideline. 
First thing you see by skimming thru it is that it's just another set of UI Accessibility guidelines. 
In both cases (you already care or you don't) your reaction is to ignore/postpone its use because you already have what you need (something or nothing), and/or it's something you not doing at this stage of development. 
Of course there will be people smart enought to understand the two aspects, when I see how people get confused by much simpler things when they first look at novel approaches, I'm _sure_ lots of people will *never* understand that these guidelines are also (and principally) about the generated markup, not just the UI: because this is a novel set of guidelines. 
To me this partly negates one of the group's goal which is that these guidelines get widely used and that Web content gets more accessible asap. 
The other thing is that I personally never used anything but emacs/a text editor to create Web pages, and this is perfectly accessible, so it's not like there isn't a viable solution out there. 
I would like the AU group to decide whether or not their priority is: first "deliver accessible content to the Web per WCAG", and then "make mainstream AU tools itself accessible", or the other way around. 
I wish to call a vote wrt this priority on the mailing list. 
I'm particularly interested in hearing from the participants in this group that are going to hand-out these guidelines to mainstream editor developers internally and ask them to comply. 
My proposal is: - move guideline number 1 to the end of the list - reorder the goals in "1.2 Checkpoint priorities" to be 1.The authoring tool generates accessible content by default 2.The authoring tool is user configurable 3.The authoring tool encourages the creation of accessible content 4.The authoring tool itself is accessible - edit the intro (I think this is a bug as is) to say "the creation of accessible Web content", not just "the creation of Web content" I support/agree with Daniel's proposal to with one addition. 
Remove Goal #2. "Making the tool "user configurable" is a TECHNIQUE for achieving the other goals 1, 3, and 4. It is also related to my issue already on the agenda about the "scope of configurability". 
I believe the priority is to "first deliver accessible content to the Web per WCAG, and then "make mainstream AU tools itself accessible" - for many reasons including Daniel's: Regards, Phill Jenkins I go along with Phill's modified version of Daniel's proposal. 
(the long answer: I do not agree that there is a difference in priority between the two questions, but I think that is almost immaterial. 
We have created a priority scheme, which means that ordering, while it will probably lead to differeing first impressions, is not relevant to the priority of meeting checkpoints. 
I prefer to have the current ordering, but I do not think the ordering change proposed will be a big problem, and I would therefore rather have the consensus, based on the fact that I don't anticipate any new issues arising in the discussion.) Charles McCN I support/agree with Daniel's proposal to with one addition. 
Remove Goal #2. "Making the tool "user configurable" is a TECHNIQUE for achieving the other goals 1, 3, and 4. It is also related to my issue already on the agenda about the "scope of configurability". 
I believe the priority is to "first deliver accessible content to the Web per WCAG, and then "make mainstream AU tools itself accessible" - for many reasons including Daniel's: Regards, Phill Jenkins --Charles McCathieNevile mailto:charles@w3.org 
W3C Web Accessibility Initiative http://www.w3.org/WAI MIT/LCS - 545 Technology sq., Cambridge MA, 02139, USA aloha, daniel! 
whilst i agree with your proposal vis a vis re-wording the intro to 1.2, to wit: quote - edit the intro (I think this is a bug as is) to say "the creation of accessible Web content", not just "the creation of Web content" unquote i am not convinced by your other arguments... the purpose of the AU GL is two-fold: 1. ensure that AU tools create accessible web content as per the WCAG *and* 2. ensure that the tool is accessible to authors with disabilities and i would strenuously oppose any diminution of the latter's importance... why? 
as i put it to the AU list on 24 march, in a post which invoked a perspicacious response by kelly ford, which i will also quote, -- begin first quote as a blind individual who has earned his daily bread for the past 3 years designing, constructing, and maintaining web sites _by hand_ (several of which have nothing to do with blindness or disabilities), i know that the days of the electronic scriptorium are numbered -- the specs which one must master and apply in order to create pages that are both accessible and aesthetically appealing are simply too complicated to allow a webmaster to create and maintain web content that conforms to the WCGL while working under a strict deadline... the generation of accessible content is but half of the equation -- if we do not ensure the accessibility of the authoring tool itself, we will not only have failed to fulfill our WG's mandate, but we will have weakened the entire Web Accessibility Initiative, by tacitly stating that providing the means for professionals and amateurs to create accessible web content is sufficient... if we do not address the question of what compromises "base functionality" vis a vis the authoring tool itself, we are, in effect,telling those--like myself--who are incapable of using a mouse or a monitor that we should rely on third parties to create accessible content_for_ us... this is cyber-ghetto-ization of the most condescending kind... unless the authoring tool is capable of exposing _all_ of the information it makes available to the quote mainstream unquote user to a user of adaptive technology, it cannot be considered an accessible tool,even if the output created by that tool is a paragon of universally accessible design... the appeal of the web for persons with disabilities is that it enables us to speak for ourselves--both amongst ourselves and with the world as a whole... if we fail to include such base functionalities as keyboard and other alternative input driven navigation in a structured view, we are setting the stage for separate and unequal access to the basic building blocks of cyberspace... which is why the analogy between accessible AU tools and curb cuts is so apt--of course, the intent behind curb cuts and entrance/exit ramps to public places was to enable those in wheel chairs unimpeded access to places which had hitherto been inaccessible, but the general population soon discovered that they make life easier for anyone pushing a stroller or baby carriage,not to mention wheeled luggage... but the parallel doesn't end there--when the legislation mandating curb cuts and ramps was promulgated, there was a loud hue and cry by business owners (large and small) and municipalities, decrying the quote unwarranted unquote expense and potential economic hardship that compliance with the law (or so they claimed) would bring... it was claimed that there was access to most places already--although what was characterized as access usually meant that an individual in a wheelchair could gain access to an inherently inaccessible building by having someone either drag their chair backwards up the stairs or down off and back up the curb... what was generally overlooked was that the entire point of curb cuts was to endow individuals with the ability to traverse public places _themselves_... so too with authoring tools--simply endowing a professional or amateur webmaster with the ability to create accessible web content is not enough--we must safeguard the inalienable right of all persons to create content for the web, and that means ensuring that the tools of the trade endow the quote disabled unquote user with the same range of options and features that are available to the quote mainstream unquote population... it also means ensuring alternative access methods are built into authoring tools, and, yes, that features such as the ability to navigate and edit in a structured view are include din the GLs... the argument that structured views don't matter because most of the content on today's web is unstructured [note: this was Chuck Opperman's argument at the previous teleconference] is as fallacious as arguing that curb cuts are a waste of municipal resources, simply because one has never actually seen a person in a wheelchair utilize them... the accessibility of authoring tools themselves is as crucial to the WAI's aims as is the production of accessible web content--it is not, nor should it be considered, an either or proposition... if we fail to equate the accessibility of an authoring tool with the accessibility of the content it creates, we will have failed to create a truly accessible environment in which the physical limitations of a web author are as immaterial as the physical limitations of a web surfer... -- end first quote to which kelly ford added: -- begin second quote I think that Gregory's points are 100 percent accurate. 
I would only add that access is critical because as the tools for web creation are developed, those of us with disabilities need to understand how they operate to speak intelligently about their use to create accessible web content. 
It does no good for me to advocate and educate about how to create an accessible web page if I don't understand or can't use the tools being used to create that page. 
-- end second quote gregory. 
He that lives on Hope, dies farting -- Benjamin Franklin, Poor Richard's Almanack, 1763 Gregory J. Rosmaita oedipus@hicom.net 
President, WebMaster, &amp; Minister of Propaganda, VICUG NYC http://www.hicom.net/~oedipus/vicug/ 
I propose to make the change to the 1.2 intro as suggested, unless there is dissent on the list. 
Charles McCN aloha, daniel! 
whilst i agree with your proposal vis a vis re-wording the intro to 1.2, to wit: quote - edit the intro (I think this is a bug as is) to say "the creation of accessible Web content", not just "the creation of Web content" unquote A proposal for guideline 1, the goals part of the priorities, and some other stuff. 
1. Tone down the language of the abstract, as per Judy's suggestion. 
2. Move Guideline 1 to the end. 
3. Leave accessible tool as the first of the goals which are currently listed in the section on priorities. 
I do not want to remove the message that an equal web experience means an equal ability to create web content as well as to "consume" what other people have created. 
I think William is correct that in the final analysis the order of the checkpoints is not relevant - whichever order we use is merely a device to improve the legibility of the document for readers who are not familiar with it. 
Charles McCN aloha, charles! 
i agree with you and william -- ultimately, the order in which the checkpoints are presented is irrelevant, despite my predilection for arguing from first principles... the main reason that i have held out on this issue so far is twofold: 1) my desire that the guidelines contained in the AUGL flow in a "natural" order: that is, from first principles to last... we are, after all, writing guidelines for a piece of software, so it makes sense -- at least to me -- that we would start by addressing what i have always understood to be the first principle of software design: "what programming conventions do i need to follow in order for my tool to work seamlessly when running on OS X, and what can i do to maximize my application's performance on OS X?", and into any such discussion, accessibility considerations MUST be introduced... the second reason for my obstinance on this issue is the knowledge -- based both on my own practical experience as an end user, and on the example set by the success of Swing, the Java Accessibility API, and the promulgation of Java Foundation Classes -- that retrofitted solutions (read: after-the-fact accessibility layovers) are inferior to having accessibility features and hooks considered and implemented at the authoring tool's inception... after all, the guidelines are designed to assist in the development of: 1. an application 2. which is itself accessible 3. which produces accessible content and 4. which promotes knowledge of, and sensitivity towards, accessibility issues, so it would seem only natural that the AUGL should start by addressing the application itself, and end by addressing the promotion of accessibility in the application's documentation and on-line help system... that being said, i am more than willing to wipe away the line i've drawn in the AU sandbox *provided* that your third suggestion quote 3. Leave accessible tool as the first of the goals which are currently listed in the section on priorities. 
unquote is adopted by the WG, for all of the reasons i've enumerated ad nauseam elsewhere, gregory. 
Just as the argument stated (eloquently?) by Gregory for starting at the beginning "...start by addressing what i have always understood to be the first principle of software design.." with making the authoring tool usable (I know we call it accessible, but...), the notion that this will somehow "turn off" a developer and cause her to skip reading the rest of the document still seems absurd to me. 
By the same token my fear that putting it at the end of the guidelines will tar it with the brush of "oh, and by the way some PWDs might want to use your tool" may be somewhat overstated; nevertheless, if the ordering of these things is really important (which I think is almost nonsense) I think we should be considering *ALL* of the guidelines' positions. 
Why should they be in the order they're in? 
Just as I think it's a waste of time to find the optimum order I think it's pure politics to change what is now #1 to become #7 - but, hey this is a political (democratic?) process and though I still vote for the current order, I make no stand that *ANY* order is unacceptable. 
Priorities are another matter. 
Love. 
ACCESSIBILITY IS RIGHT - NOT PRIVILEGE aloha, bill! 
i am in complete agreement with you on the placement of the-guideline-currently-known-as-guideline-one -- what bothers me the most about the push to move it to the back of the bus are the reasons being advanced as justification, which strike me more as a vote of no confidence in the AUGL than they do a convincing argument for changing the current order of the guidelines-- hmm, maybe i should have saved that line for the telecon -- it's uncharacteristically succinct... gregory He that lives on Hope, dies farting -- Benjamin Franklin, Poor Richard's Almanack, 1763 Gregory J. Rosmaita oedipus@hicom.net 
President, WebMaster, &amp; Minister of Propaganda, VICUG NYC http://www.hicom.net/~oedipus/vicug/ 
