I commented on the previous draft (a day or so before the release of the 
current draft) that deep-equal would be better in the user-defined appendix: The version in this draft appears to be unchanged, so the comments made there still apply. 
(deep-equal appears to be completely broken wrt to 
document nodes). 
In addition I have noticed some further problems with the given definition. 
1) The is-namespace-node() function should be in some non null 
(example.org) namespace so that this definition is legal in xslt as a user-defined function. 
2) the note The contents of comments and processing instructions are significant only if these nodes are used directly as arguments to the function, not if they appear as children of the nodes supplied as arguments. 
is strictly true (the content is insignificant) but it is rather misleading. 
The _content_ of comments are (bizarrely) not compared by the given definition unless they are items in the sequence being compared, but comments are not ignored: their _presence_ affects the equality. 
given 1 x ab /x 2 x !-- z -- ab /x 3 x a !-- z -- b /x 4 x ab !-- z -- /x 5 x a !-- zz -- b /x 1 == 2 == 4 3 == 5 as in 1,2,4 x has a single text node child with value ab but in 3 and 5 there are two text node children. 
This is a particularly arbitrary choice of equality definition. 
David 
This e-mail has been scanned for all viruses by Star Internet. 
The service is powered by MessageLabs. 
For more information on a proactive anti-virus service working around the clock, around the globe, visit: 
If a function definition is so difficult to specify correctly (for 3 
consequtive drafts) isn't it best to drop it from the document? 
Please, consider removing fn:deep-equal() from the spec (or maybe give it a final try?). 
Thank you, Dimitre Novatchev. 
Do you Yahoo!? Free Pop-Up Blocker - Get it now 
Thanks! We are going to give it another try! 
All the best, Ashok [mailto:public-qt-comments-request@w3.org] 
On Behalf Of Dimitre Novatchev 
the 
made 
If a function definition is so difficult to specify correctly (for 3 consequtive drafts) isn't it best to drop it from the document? 
Please, consider removing fn:deep-equal() from the spec (or maybe give it a final try?). 
Thank you, Dimitre Novatchev. 
Do you Yahoo!? Free Pop-Up Blocker - Get it now 
I think that the language would be better without this in the core, and 
users would benefit from being given a complete definition in the appendix that they could tune to their own needs, however in either case, I think that if you want to ignore comments the rule should be for elements, if it has no element children, compare the _string value_ 
this will get rid of the anomalous text node slitting due to comments and pis. 
David 
I agree with David on this. 
Move this function as an example into an appendix. 
Best regards Michael 
From: public-qt-comments-request@w3.org [mailto:public-qt-comments- request@w3.org] 
On Behalf Of David Carlisle Sent: Wednesday, December 03, 2003 4:40 PM Subject: RE: [F&amp;O] deep-equal 
and 
value_ 
Thanks for your observation about the fact that we aren't ignoring the existence of comments and PIs. 
Solving this isn't easy. 
If there are no element children, comparing the typed value makes sense. 
But mixed content is tricky. 
We could specify in prose that comments and PIs are (completely) ignored, but it's not so easy to specify in XPath code. 
(It could be done in XQuery or XSLT by constructing new trees with the comments and PIs removed, and then comparing the new trees). 
I also think we should ignore whitespace-only text nodes in element-only content. 
Michael Kay 
but it's not so easy to specify in XPath code. 
(It could be done in XQuery or XSLT by I don't think the specifcation has to be pure xpath, so long as you give an xslt and an xquery definition, it would be OK wouldn't it? 
David This e-mail has been scanned for all viruses by Star Internet. 
The service is powered by MessageLabs. 
For more information on a proactive anti-virus service working around the clock, around the globe, visit: 
