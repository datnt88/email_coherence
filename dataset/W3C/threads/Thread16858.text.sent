I know this is a really silly question, but I can't bring the answer to mind right now. 
How does one "hide" text in SVGs when the SVG is being converted into a textual representation? 
Jon Hanna PGP http://www.spin.ie/jon.asc 
PGP Fingerprint 707E 5E39 3BF5 533A D1DD 2083 8169 BFD7 F532 BD18 "...it has been truly said that hackers have even more words for equipment failures than Yiddish has for obnoxious people." - jargon.txt "Jon Hanna" jon@spin.ie 
wrote in message news:NDBBLCBLIMDOPKMOPHLHAECLEFAA.jon@spin.ie... mind How do you mean? and What technology are you using for the conversion? 
Do you have an example SVG document which describes the problem with the text you wish to "hide". 
Jim. 
Behalf Of Jim Ley Sent: 21 August 2002 09:58 Not yet. 
I'm hand-coding some stuff to get a better idea of how the whole thing works. 
My example document is a simple RDF Graph with N-Triples of the same RDF at the bottom of the image. 
My thinking is if the SVG was to be rendered as just text then the text in the graph would be both obsolete (since it duplicates the information in the N-Triples) and confusing even if the code was ordered in such a way as to avoid this. 
As such the solution would seem to be to not render the text from the graph in such a case, only the N-Triples. 
(N-Triples probably aren't the best format for voice rendering either, but if I could create an SVG which would only give that portion to the speaker then I'd have a start). 
I think the answer is in how you are generating your text version - if you are using CSS or XSLT then you can do it in many different ways. 
Alternatively, you could generate the nTriples from the text included already in your format, using an animation or something (I haven't thought through the details of this as an animation yet...) so that a text-stripping operation would only have one lot to start with. 
cheers Chaals SWAD-E http://www.w3.org/2001/sw/Europe ---------------- WAI http://www.w3.org/WAI W3C, 2004 Route des Lucioles, 06902 Sophia Antipolis Cedex, France The opposite approach, generating the graph from the nTriples, would both solve this problem, and also be half-way to the RDF2SVG XSLT that I'd love to try my hand at. 
