Dear Colleagues, On the teleconference last night I kind of agreed to kick the ball into play on drafting some security requirements. 
So here goes. 
It seems to me that the CDL can be declarative with regard to security. 
In other words it should support notation for flagging that certain security requirements have to be met at this point but can then rely on the 'stack' below the Choreography language layer to 'make it so'. 
It should be possible to flag that a certain policy applies from this point in the choreography until the choreography ends or another flag is encountered. 
Should be able to refer out to standard policy sets or state specific requirements explicitly. 
These should include ability to require: authentication of the partner and or the message content source that a secure audit log is made that a message is protected from change (integrity) that the contents of a message are hidden (confidentiality) that the sending of a message is non-repudiable that the receipt of a message is non-repudiable that the message or message exchange is protected against replay that the time of sending of a message is recorded that the time of receiving of a message is recorded that a time (/date) stamp is attached to a message when sent. 
I am sure I have missed various things, but I hope that will encourage others to add / correct / rephrase. 
Best Regards, Tony Tony Fletcher Technical Advisor Choreology Ltd. 68, Lombard Street, London EC3V 9L J UK Mobile: Web: http://www.choreology.com/ 
www.choreology.com 
Cohesions(tm) Business transaction management software for application coordination Work: tony.fletcher@choreology.com Home: amfletcher@iee.org 
Hi Tony, Assuming that our final CDL will be based on WSDL (which might be an incorrect assumption, given the fact that we currently have no stable spec), it's very likely that WSDL 2.0 will contain policy assertions including security-related ones. 
Would it still make sense, under that scenario, to replicate those security policies at the CDL level? 
Ugo Dear Colleagues, On the teleconference last night I kind of agreed to kick the ball into play on drafting some security requirements. 
So here goes. 
It seems to me that the CDL can be declarative with regard to security. 
In other words it should support notation for flagging that certain security requirements have to be met at this point but can then rely on the 'stack' below the Choreography language layer to 'make it so'. 
It should be possible to flag that a certain policy applies from this point in the choreography until the choreography ends or another flag is encountered. 
Should be able to refer out to standard policy sets or state specific requirements explicitly. 
These should include ability to require: authentication of the partner and or the message content source that a secure audit log is made that a message is protected from change (integrity) that the contents of a message are hidden (confidentiality) that the sending of a message is non-repudiable that the receipt of a message is non-repudiable that the message or message exchange is protected against replay that the time of sending of a message is recorded that the time of receiving of a message is recorded that a time (/date) stamp is attached to a message when sent. 
I am sure I have missed various things, but I hope that will encourage others to add / correct / rephrase. 
Best Regards, Tony Tony Fletcher Technical Advisor Choreology Ltd. 68, Lombard Street, London EC3V 9L J UK Mobile: Web: http://www.choreology.com/ 
www.choreology.com 
Cohesions(tm) Business transaction management software for application coordination Work: tony.fletcher@choreology.com Home: amfletcher@iee.org 
Dear Ugo, The idea is not to replicate. 
I was hoping I had made that clear at the beginning by saying that I saw the CDL as being declarative - saying that things should happen here or there, but not how they happen. 
I was suggesting that one could say that company policy xyz applies at this point or you could state that this particular message must be made confidential when sent (for instance). 
For this to actually happen when the message was sent of course the WSDL would have to support that form of security and something 'under' WSDL (the SOAP engines??) would have to apply - by encrypting in this case possibly. 
I hope the intent is clear now. 
Best Regards, Tony Tony Fletcher Technical Advisor Choreology Ltd. 68, Lombard Street, London EC3V 9L J UK Mobile: Web: http://www.choreology.com/ 
www.choreology.com 
Cohesions(tm) Business transaction management software for application coordination Work: tony.fletcher@choreology.com Home: amfletcher@iee.org 
Hi Tony, Assuming that our final CDL will be based on WSDL (which might be an incorrect assumption, given the fact that we currently have no stable spec), it's very likely that WSDL 2.0 will contain policy assertions including security-related ones. 
Would it still make sense, under that scenario, to replicate those security policies at the CDL level? 
Ugo -----Original Message----- [mailto:public-ws-chor-request@w3.org]On 
Behalf Of Fletcher, Tony Dear Colleagues, On the teleconference last night I kind of agreed to kick the ball into play on drafting some security requirements. 
So here goes. 
It seems to me that the CDL can be declarative with regard to security. 
In other words it should support notation for flagging that certain security requirements have to be met at this point but can then rely on the 'stack' below the Choreography language layer to 'make it so'. 
It should be possible to flag that a certain policy applies from this point in the choreography until the choreography ends or another flag is encountered. 
Should be able to refer out to standard policy sets or state specific requirements explicitly. 
These should include ability to require: authentication of the partner and or the message content source that a secure audit log is made that a message is protected from change (integrity) that the contents of a message are hidden (confidentiality) that the sending of a message is non-repudiable that the receipt of a message is non-repudiable that the message or message exchange is protected against replay that the time of sending of a message is recorded that the time of receiving of a message is recorded that a time (/date) stamp is attached to a message when sent. 
I am sure I have missed various things, but I hope that will encourage others to add / correct / rephrase. 
Best Regards, Tony Tony Fletcher Technical Advisor Choreology Ltd. 68, Lombard Street, London EC3V 9L J UK Mobile: Web: http://www.choreology.com/ 
www.choreology.com 
Cohesions(tm) Business transaction management software for application coordination Work: tony.fletcher@choreology.com Home: amfletcher@iee.org 
PS to previous reply: If the WSDL says that certain security is always applied then that will happen even if the Choreography description does not mention it. 
If the Choreography description contains conflicting requirements that the engine can not resolve then there will be an error. 
If the WSDL allows certain security as an option then whether it is actually applied or not can depend on the Choreography description. 
Also my previous message was actually only about the requirements not about how those requirements are met. 
It may well be that we agree that certain requirements on Choreography description abilities are met in other ways than CDL features. 
Best Regards, Tony Tony Fletcher Technical Advisor Choreology Ltd. 68, Lombard Street, London EC3V 9L J UK Mobile: Web: http://www.choreology.com/ 
www.choreology.com 
Cohesions(tm) Business transaction management software for application coordination Work: tony.fletcher@choreology.com Home: amfletcher@iee.org 
Hi Tony, Assuming that our final CDL will be based on WSDL (which might be an incorrect assumption, given the fact that we currently have no stable spec), it's very likely that WSDL 2.0 will contain policy assertions including security-related ones. 
Would it still make sense, under that scenario, to replicate those security policies at the CDL level? 
Ugo -----Original Message----- [mailto:public-ws-chor-request@w3.org]On 
Behalf Of Fletcher, Tony Dear Colleagues, On the teleconference last night I kind of agreed to kick the ball into play on drafting some security requirements. 
So here goes. 
It seems to me that the CDL can be declarative with regard to security. 
In other words it should support notation for flagging that certain security requirements have to be met at this point but can then rely on the 'stack' below the Choreography language layer to 'make it so'. 
It should be possible to flag that a certain policy applies from this point in the choreography until the choreography ends or another flag is encountered. 
Should be able to refer out to standard policy sets or state specific requirements explicitly. 
These should include ability to require: authentication of the partner and or the message content source that a secure audit log is made that a message is protected from change (integrity) that the contents of a message are hidden (confidentiality) that the sending of a message is non-repudiable that the receipt of a message is non-repudiable that the message or message exchange is protected against replay that the time of sending of a message is recorded that the time of receiving of a message is recorded that a time (/date) stamp is attached to a message when sent. 
I am sure I have missed various things, but I hope that will encourage others to add / correct / rephrase. 
Best Regards, Tony Tony Fletcher Technical Advisor Choreology Ltd. 68, Lombard Street, London EC3V 9L J UK Mobile: Web: http://www.choreology.com/ 
www.choreology.com 
Cohesions(tm) Business transaction management software for application coordination Work: tony.fletcher@choreology.com Home: amfletcher@iee.org 
Tony, The WSDL security policies I was referring to are also at the declarative level (in the WSDL abstract interface). 
It's only when a specific binding is defined that those abstract declarations are mapped to specific information (e.g. SOAP headers) on the wire. 
Ugo Dear Ugo, The idea is not to replicate. 
I was hoping I had made that clear at the beginning by saying that I saw the CDL as being declarative - saying that things should happen here or there, but not how they happen. 
I was suggesting that one could say that company policy xyz applies at this point or you could state that this particular message must be made confidential when sent (for instance). 
For this to actually happen when the message was sent of course the WSDL would have to support that form of security and something 'under' WSDL (the SOAP engines??) would have to apply - by encrypting in this case possibly. 
I hope the intent is clear now. 
Best Regards, Tony Tony Fletcher Technical Advisor Choreology Ltd. 68, Lombard Street, London EC3V 9L J UK Mobile: Web: http://www.choreology.com/ 
www.choreology.com 
Cohesions(tm) Business transaction management software for application coordination Work: tony.fletcher@choreology.com Home: amfletcher@iee.org 
-----Original Message----- Hi Tony, Assuming that our final CDL will be based on WSDL (which might be an incorrect assumption, given the fact that we currently have no stable spec), it's very likely that WSDL 2.0 will contain policy assertions including security-related ones. 
Would it still make sense, under that scenario, to replicate those security policies at the CDL level? 
Ugo -----Original Message----- Dear Colleagues, On the teleconference last night I kind of agreed to kick the ball into play on drafting some security requirements. 
So here goes. 
It seems to me that the CDL can be declarative with regard to security. 
In other words it should support notation for flagging that certain security requirements have to be met at this point but can then rely on the 'stack' below the Choreography language layer to 'make it so'. 
It should be possible to flag that a certain policy applies from this point in the choreography until the choreography ends or another flag is encountered. 
Should be able to refer out to standard policy sets or state specific requirements explicitly. 
These should include ability to require: authentication of the partner and or the message content source that a secure audit log is made that a message is protected from change (integrity) that the contents of a message are hidden (confidentiality) that the sending of a message is non-repudiable that the receipt of a message is non-repudiable that the message or message exchange is protected against replay that the time of sending of a message is recorded that the time of receiving of a message is recorded that a time (/date) stamp is attached to a message when sent. 
I am sure I have missed various things, but I hope that will encourage others to add / correct / rephrase. 
Best Regards, Tony Tony Fletcher Technical Advisor Choreology Ltd. 68, Lombard Street, London EC3V 9L J UK Mobile: Web: http://www.choreology.com/ 
www.choreology.com 
Cohesions(tm) Business transaction management software for application coordination Work: tony.fletcher@choreology.com Home: amfletcher@iee.org 
I think independent of WSDL version (i.e, start w/WSDL 1.1 and SOAP 1.1; and support WSDL 2.0 later when it is available), it should be possible to describe policy sets for a choreography using WS-Policy, WS-PolicyFramework, WS-PolicyAttachment, and WS-PolicyAssertion. 
However, the problem is that these family of specs are not yet vetted/approved by any standards body. 
There's been some discussion from W3C on this topic, see: If we can assume that WS-Policy* specs will evolve into an accepted standard then perhaps such work can take place sooner rather than later . 
Arriving at the right set of constraints and requirements for a set of choreography use cases seems important. 
I am not sure if WSDL 2.0 will contain security assertion features although that could be an interesting future work to be pursued by OASIS WSS TC. 
Finally, I don't see any explicit requirement/constraint on privacy; confidentiality is covered though. 
Zahid Ahmed Platform Architect eBay, Inc. w:408-376-7267 c:650-533-8860 Hi Tony, Assuming that our final CDL will be based on WSDL (which might be an incorrect assumption, given the fact that we currently have no stable spec), it's very likely that WSDL 2.0 will contain policy assertions including security-related ones. 
Would it still make sense, under that scenario, to replicate those security policies at the CDL level? 
Ugo -----Original Message----- Dear Colleagues, On the teleconference last night I kind of agreed to kick the ball into play on drafting some security requirements. 
So here goes. 
It seems to me that the CDL can be declarative with regard to security. 
In other words it should support notation for flagging that certain security requirements have to be met at this point but can then rely on the 'stack' below the Choreography language layer to 'make it so'. 
It should be possible to flag that a certain policy applies from this point in the choreography until the choreography ends or another flag is encountered. 
Should be able to refer out to standard policy sets or state specific requirements explicitly. 
These should include ability to require: authentication of the partner and or the message content source that a secure audit log is made that a message is protected from change (integrity) that the contents of a message are hidden (confidentiality) that the sending of a message is non-repudiable that the receipt of a message is non-repudiable that the message or message exchange is protected against replay that the time of sending of a message is recorded that the time of receiving of a message is recorded that a time (/date) stamp is attached to a message when sent. 
I am sure I have missed various things, but I hope that will encourage others to add / correct / rephrase. 
Best Regards, Tony OK I want to put a stake in the ground ;) The choroegraphy definition language we develop should NOT defiine ANY policy information - this includes security. 
There are two reasons for this: 1. 
Where do you stop. 
For example you might need policy information to cover security standards, digital certificates, reliable messaging protocol, the version of SOAP, the busines document format, etc to use - do we really want to think about how we describe ALL of these (as well as ones I've not thought of) in the CDL? 
Secondly how do we revamp the CDL we develop whenever any of the standards on which we are dependent change? 
2. You lose choreography reuse. 
If a Choreography definition includes policy information, then, whenever you need to change your policies, for example a different hashing algorithm in your digital signatures, you need publish a new choreography definition. 
This in turn will mean that you would probably have to reconsider your business process definition (or orchestration, or ... ) as, unless we are very clever, there would be no way to know that the only change in the choreography definition was a policy change and there was no change to the sequence or rules that define how messsages are exchanged and so the business process definition did not need to change. 
So what should we do about policy information and more specifically security. 
Firstly, I think the real issue is that the effect of applying a policy could actually affect how a choreography is performed. 
For example, from BurdettML you could have ... messageFamily="Order" Now if you then included security, then you might have additional states as in (note the bold) ... messageFamily="Order" InteractionEndStates fromState="OrderSent" toState="OrderReceived, OrderSecurityFailure"/ Note that in this the toState would be either OrderReceived or OrderSecurityFailure. 
You could then, in the Choreography definition, return a different message depending on whether or not there was a security failure. 
So the first thing I think we should consider is the allowance of additional states in a Choreography definition to allow the flow of the choreography to change depending on the outcome of applying policies such as security ... or reliable messaging ... although I don't think we should specify the precise policy information that would be used to determine whether or not a security failure, for example had occurred. 
Secondly, I think that, if we do want to include policy information then it really should be possible to put the policy information into a separate binding layer, so that the basic choreography - that defines the sequence and conditions in which messages are exchanged - can be reused. 
This would also mean that if we wanted to support new standards, new policies, etc then only the binding layer needs to change. 
Thoughts? 
David Tony, The WSDL security policies I was referring to are also at the declarative level (in the WSDL abstract interface). 
It's only when a specific binding is defined that those abstract declarations are mapped to specific information (e.g. SOAP headers) on the wire. 
Ugo -----Original Message----- Dear Ugo, The idea is not to replicate. 
I was hoping I had made that clear at the beginning by saying that I saw the CDL as being declarative - saying that things should happen here or there, but not how they happen. 
I was suggesting that one could say that company policy xyz applies at this point or you could state that this particular message must be made confidential when sent (for instance). 
For this to actually happen when the message was sent of course the WSDL would have to support that form of security and something 'under' WSDL (the SOAP engines??) would have to apply - by encrypting in this case possibly. 
I hope the intent is clear now. 
Best Regards, Tony Tony Fletcher Technical Advisor Choreology Ltd. 68, Lombard Street, London EC3V 9L J UK Mobile: Web: http://www.choreology.com/ 
www.choreology.com 
Cohesions(tm) Business transaction management software for application coordination Work: tony.fletcher@choreology.com Home: amfletcher@iee.org 
mailto:amfletcher@iee.org 
-----Original Message----- Hi Tony, Assuming that our final CDL will be based on WSDL (which might be an incorrect assumption, given the fact that we currently have no stable spec), it's very likely that WSDL 2.0 will contain policy assertions including security-related ones. 
Would it still make sense, under that scenario, to replicate those security policies at the CDL level? 
Ugo -----Original Message----- Behalf Of Fletcher, Tony Dear Colleagues, On the teleconference last night I kind of agreed to kick the ball into play on drafting some security requirements. 
So here goes. 
It seems to me that the CDL can be declarative with regard to security. 
In other words it should support notation for flagging that certain security requirements have to be met at this point but can then rely on the 'stack' below the Choreography language layer to 'make it so'. 
It should be possible to flag that a certain policy applies from this point in the choreography until the choreography ends or another flag is encountered. 
Should be able to refer out to standard policy sets or state specific requirements explicitly. 
These should include ability to require: authentication of the partner and or the message content source that a secure audit log is made that a message is protected from change (integrity) that the contents of a message are hidden (confidentiality) that the sending of a message is non-repudiable that the receipt of a message is non-repudiable that the message or message exchange is protected against replay that the time of sending of a message is recorded that the time of receiving of a message is recorded that a time (/date) stamp is attached to a message when sent. 
I am sure I have missed various things, but I hope that will encourage others to add / correct / rephrase. 
Best Regards, Tony Tony Fletcher Technical Advisor Choreology Ltd. 68, Lombard Street, London EC3V 9L J UK Mobile: Web: http://www.choreology.com/ 
www.choreology.com 
Cohesions(tm) Business transaction management software for application coordination Work: tony.fletcher@choreology.com Home: amfletcher@iee.org 
mailto:amfletcher@iee.org 
Dear David and Ugo and others, I have a number of comments that I would like to contribute then I will bow out and let others deicide how to take forward. 
Firstly we seemed to have dived straight into language implementation issues. 
May I encourage everyone to consider and discuss the merits of the requirements that I suggested first. 
Only if we agree the basic requirements is it really worth moving onto language implementation (and a project often starts of with grandiose requirements that can not all be met or completely met). 
So I would ask : do people agree with my list of proposed requirements or would you like to add, subtract or re-phrase??? 
To respond specifically to some of David and Ugo's points: 1. 
Where do you stop. 
We get to decide that! 
I suggested strongly that the way we might met the requirements for integrity, confidentiality, etc (and yes you could include reliable messaging as well) would be just to state the requirement at that point on the choreography description - the what but NOT the how. 
Thus changing hash algorithms, SOAP and so forth are well below the woodwork as far as we are concerned and do not enter the picture. 
I agree and stated in my initial contribution on this topic that we should not be concerned about how the declared security requirement is met. 
2. You lose choreography reuse. 
I agree with this point but that does not mean that we should not provide the ability to state security requirements in the language. 
It is always true that a choreography description that is made too specific may not be suitable for other purposes, so you are likely to run into this problem irrespective of security. 
What you should be able to do is craft a choreography description with out any security 'mark up'. 
This becomes your re-usable unit that you can re-use many times over with varying security mark up. 
Another point I have already made that I would re-iterate is that a choreography description will only state requirements on what I think is called discretionary security. 
Any mandatory security will be applied and enforced below - in the WSDL at the highest and often 'invisibly' to WSDL, etc in the actual communications stack. 
David's point about extra states is interesting. 
I do not think use of RM should give rise to any extra. 
The complexity is handle by the RM protocol machine and all the choreography layer need to deal with is message delivered successfully of message not delivered (for some reason) and this is the same as for ordinary messaging. 
(RM just increases the probability of success and the probability of failures being correctly signalled - all useful stuff.) 
When you request a security feature (or several) then, yes, there is the possibility of an extra type of failure (exception) which the choreography description designer may choose to handle separately from other failure types. 
But I think here we have crossed into usage matters and perhaps the need for guidelines, good practice guides and left behind language features. 
Best Regards, Tony Tony Fletcher Technical Advisor Choreology Ltd. 68, Lombard Street, London EC3V 9L J UK Mobile: Web: http://www.choreology.com/ 
www.choreology.com 
Cohesions(tm) Business transaction management software for application coordination Work: tony.fletcher@choreology.com Home: amfletcher@iee.org 
OK I want to put a stake in the ground ;) The choroegraphy definition language we develop should NOT defiine ANY policy information - this includes security. 
There are two reasons for this: 1. 
Where do you stop. 
For example you might need policy information to cover security standards, digital certificates, reliable messaging protocol, the version of SOAP, the busines document format, etc to use - do we really want to think about how we describe ALL of these (as well as ones I've not thought of) in the CDL? 
Secondly how do we revamp the CDL we develop whenever any of the standards on which we are dependent change? 
2. You lose choreography reuse. 
If a Choreography definition includes policy information, then, whenever you need to change your policies, for example a different hashing algorithm in your digital signatures, you need publish a new choreography definition. 
This in turn will mean that you would probably have to reconsider your business process definition (or orchestration, or ... ) as, unless we are very clever, there would be no way to know that the only change in the choreography definition was a policy change and there was no change to the sequence or rules that define how messsages are exchanged and so the business process definition did not need to change. 
So what should we do about policy information and more specifically security. 
Firstly, I think the real issue is that the effect of applying a policy could actually affect how a choreography is performed. 
For example, from BurdettML you could have ... messageFamily="Order" Now if you then included security, then you might have additional states as in (note the bold) ... messageFamily="Order" InteractionEndStates fromState="OrderSent" toState="OrderReceived, OrderSecurityFailure"/ Note that in this the toState would be either OrderReceived or OrderSecurityFailure. 
You could then, in the Choreography definition, return a different message depending on whether or not there was a security failure. 
So the first thing I think we should consider is the allowance of additional states in a Choreography definition to allow the flow of the choreography to change depending on the outcome of applying policies such as security ... or reliable messaging ... although I don't think we should specify the precise policy information that would be used to determine whether or not a security failure, for example had occurred. 
Secondly, I think that, if we do want to include policy information then it really should be possible to put the policy information into a separate binding layer, so that the basic choreography - that defines the sequence and conditions in which messages are exchanged - can be reused. 
This would also mean that if we wanted to support new standards, new policies, etc then only the binding layer needs to change. 
Thoughts? 
David -----Original Message----- Tony, The WSDL security policies I was referring to are also at the declarative level (in the WSDL abstract interface). 
It's only when a specific binding is defined that those abstract declarations are mapped to specific information (e.g. SOAP headers) on the wire. 
Ugo -----Original Message----- Dear Ugo, The idea is not to replicate. 
I was hoping I had made that clear at the beginning by saying that I saw the CDL as being declarative - saying that things should happen here or there, but not how they happen. 
I was suggesting that one could say that company policy xyz applies at this point or you could state that this particular message must be made confidential when sent (for instance). 
For this to actually happen when the message was sent of course the WSDL would have to support that form of security and something 'under' WSDL (the SOAP engines??) would have to apply - by encrypting in this case possibly. 
I hope the intent is clear now. 
Best Regards, Tony Tony Fletcher Technical Advisor Choreology Ltd. 68, Lombard Street, London EC3V 9L J UK Mobile: Web: http://www.choreology.com/ 
www.choreology.com 
Cohesions(tm) Business transaction management software for application coordination Work: tony.fletcher@choreology.com Home: amfletcher@iee.org 
-----Original Message----- Hi Tony, Assuming that our final CDL will be based on WSDL (which might be an incorrect assumption, given the fact that we currently have no stable spec), it's very likely that WSDL 2.0 will contain policy assertions including security-related ones. 
Would it still make sense, under that scenario, to replicate those security policies at the CDL level? 
Ugo -----Original Message----- [mailto:public-ws-chor-request@w3.org]On 
Behalf Of Fletcher, Tony Dear Colleagues, On the teleconference last night I kind of agreed to kick the ball into play on drafting some security requirements. 
So here goes. 
It seems to me that the CDL can be declarative with regard to security. 
In other words it should support notation for flagging that certain security requirements have to be met at this point but can then rely on the 'stack' below the Choreography language layer to 'make it so'. 
It should be possible to flag that a certain policy applies from this point in the choreography until the choreography ends or another flag is encountered. 
Should be able to refer out to standard policy sets or state specific requirements explicitly. 
These should include ability to require: authentication of the partner and or the message content source that a secure audit log is made that a message is protected from change (integrity) that the contents of a message are hidden (confidentiality) that the sending of a message is non-repudiable that the receipt of a message is non-repudiable that the message or message exchange is protected against replay that the time of sending of a message is recorded that the time of receiving of a message is recorded that a time (/date) stamp is attached to a message when sent. 
I am sure I have missed various things, but I hope that will encourage others to add / correct / rephrase. 
Best Regards, Tony Tony Fletcher Technical Advisor Choreology Ltd. 68, Lombard Street, London EC3V 9L J UK Mobile: Web: http://www.choreology.com/ 
www.choreology.com 
Cohesions(tm) Business transaction management software for application coordination Work: tony.fletcher@choreology.com Home: amfletcher@iee.org 
Hi Tony, I imagine that when you talk about "language implementation" you mean "detailed definition of language constructs". 
I understand your point about first clearly specifying language requirements. 
My point was about also keeping an eye on what is already supported out there in the same policy area. 
Since the policy discussions are still ongoing within the WSDL WG, I cannot guarantee that the type of abstract policies you are talking about will actually be fully supported in WSDL. 
All I am saying is that, IF WSDL support that type of abstract policy definitions, and IF the CDL relies on the existence of WSDL files, then it might not be necessary to duplicate the same information within the CDL itself but just rely on what WSDL already specifies. 
Ugo Dear David and Ugo and others, I have a number of comments that I would like to contribute then I will bow out and let others deicide how to take forward. 
Firstly we seemed to have dived straight into language implementation issues. 
May I encourage everyone to consider and discuss the merits of the requirements that I suggested first. 
Only if we agree the basic requirements is it really worth moving onto language implementation (and a project often starts of with grandiose requirements that can not all be met or completely met). 
So I would ask : do people agree with my list of proposed requirements or would you like to add, subtract or re-phrase??? 
To respond specifically to some of David and Ugo's points: 1. 
Where do you stop. 
We get to decide that! 
I suggested strongly that the way we might met the requirements for integrity, confidentiality, etc (and yes you could include reliable messaging as well) would be just to state the requirement at that point on the choreography description - the what but NOT the how. 
Thus changing hash algorithms, SOAP and so forth are well below the woodwork as far as we are concerned and do not enter the picture. 
I agree and stated in my initial contribution on this topic that we should not be concerned about how the declared security requirement is met. 
2. You lose choreography reuse. 
I agree with this point but that does not mean that we should not provide the ability to state security requirements in the language. 
It is always true that a choreography description that is made too specific may not be suitable for other purposes, so you are likely to run into this problem irrespective of security. 
What you should be able to do is craft a choreography description with out any security 'mark up'. 
This becomes your re-usable unit that you can re-use many times over with varying security mark up. 
Another point I have already made that I would re-iterate is that a choreography description will only state requirements on what I think is called discretionary security. 
Any mandatory security will be applied and enforced below - in the WSDL at the highest and often 'invisibly' to WSDL, etc in the actual communications stack. 
David's point about extra states is interesting. 
I do not think use of RM should give rise to any extra. 
The complexity is handle by the RM protocol machine and all the choreography layer need to deal with is message delivered successfully of message not delivered (for some reason) and this is the same as for ordinary messaging. 
(RM just increases the probability of success and the probability of failures being correctly signalled - all useful stuff.) 
When you request a security feature (or several) then, yes, there is the possibility of an extra type of failure (exception) which the choreography description designer may choose to handle separately from other failure types. 
But I think here we have crossed into usage matters and perhaps the need for guidelines, good practice guides and left behind language features. 
Best Regards, Tony Tony Fletcher Technical Advisor Choreology Ltd. 68, Lombard Street, London EC3V 9L J UK Mobile: Web: http://www.choreology.com/ 
www.choreology.com 
Cohesions(tm) Business transaction management software for application coordination Work: tony.fletcher@choreology.com Home: amfletcher@iee.org 
-----Original Message----- OK I want to put a stake in the ground ;) The choroegraphy definition language we develop should NOT defiine ANY policy information - this includes security. 
There are two reasons for this: 1. 
Where do you stop. 
For example you might need policy information to cover security standards, digital certificates, reliable messaging protocol, the version of SOAP, the busines document format, etc to use - do we really want to think about how we describe ALL of these (as well as ones I've not thought of) in the CDL? 
Secondly how do we revamp the CDL we develop whenever any of the standards on which we are dependent change? 
2. You lose choreography reuse. 
If a Choreography definition includes policy information, then, whenever you need to change your policies, for example a different hashing algorithm in your digital signatures, you need publish a new choreography definition. 
This in turn will mean that you would probably have to reconsider your business process definition (or orchestration, or ... ) as, unless we are very clever, there would be no way to know that the only change in the choreography definition was a policy change and there was no change to the sequence or rules that define how messsages are exchanged and so the business process definition did not need to change. 
So what should we do about policy information and more specifically security. 
Firstly, I think the real issue is that the effect of applying a policy could actually affect how a choreography is performed. 
For example, from BurdettML you could have ... Now if you then included security, then you might have additional states as in (note the bold) ... Note that in this the toState would be either OrderReceived or OrderSecurityFailure. 
You could then, in the Choreography definition, return a different message depending on whether or not there was a security failure. 
So the first thing I think we should consider is the allowance of additional states in a Choreography definition to allow the flow of the choreography to change depending on the outcome of applying policies such as security ... or reliable messaging ... although I don't think we should specify the precise policy information that would be used to determine whether or not a security failure, for example had occurred. 
Secondly, I think that, if we do want to include policy information then it really should be possible to put the policy information into a separate binding layer, so that the basic choreography - that defines the sequence and conditions in which messages are exchanged - can be reused. 
This would also mean that if we wanted to support new standards, new policies, etc then only the binding layer needs to change. 
Thoughts? 
David -----Original Message----- Tony, The WSDL security policies I was referring to are also at the declarative level (in the WSDL abstract interface). 
It's only when a specific binding is defined that those abstract declarations are mapped to specific information (e.g. SOAP headers) on the wire. 
Ugo -----Original Message----- Dear Ugo, The idea is not to replicate. 
I was hoping I had made that clear at the beginning by saying that I saw the CDL as being declarative - saying that things should happen here or there, but not how they happen. 
I was suggesting that one could say that company policy xyz applies at this point or you could state that this particular message must be made confidential when sent (for instance). 
For this to actually happen when the message was sent of course the WSDL would have to support that form of security and something 'under' WSDL (the SOAP engines??) would have to apply - by encrypting in this case possibly. 
I hope the intent is clear now. 
Best Regards, Tony Tony Fletcher Technical Advisor Choreology Ltd. 68, Lombard Street, London EC3V 9L J UK Mobile: Web: http://www.choreology.com/ 
www.choreology.com 
Cohesions(tm) Business transaction management software for application coordination Work: tony.fletcher@choreology.com Home: amfletcher@iee.org 
-----Original Message----- Hi Tony, Assuming that our final CDL will be based on WSDL (which might be an incorrect assumption, given the fact that we currently have no stable spec), it's very likely that WSDL 2.0 will contain policy assertions including security-related ones. 
Would it still make sense, under that scenario, to replicate those security policies at the CDL level? 
Ugo -----Original Message----- Dear Colleagues, On the teleconference last night I kind of agreed to kick the ball into play on drafting some security requirements. 
So here goes. 
It seems to me that the CDL can be declarative with regard to security. 
In other words it should support notation for flagging that certain security requirements have to be met at this point but can then rely on the 'stack' below the Choreography language layer to 'make it so'. 
It should be possible to flag that a certain policy applies from this point in the choreography until the choreography ends or another flag is encountered. 
Should be able to refer out to standard policy sets or state specific requirements explicitly. 
These should include ability to require: authentication of the partner and or the message content source that a secure audit log is made that a message is protected from change (integrity) that the contents of a message are hidden (confidentiality) that the sending of a message is non-repudiable that the receipt of a message is non-repudiable that the message or message exchange is protected against replay that the time of sending of a message is recorded that the time of receiving of a message is recorded that a time (/date) stamp is attached to a message when sent. 
I am sure I have missed various things, but I hope that will encourage others to add / correct / rephrase. 
Best Regards, Tony Tony Fletcher Technical Advisor Choreology Ltd. 68, Lombard Street, London EC3V 9L J UK Mobile: Web: http://www.choreology.com/ 
www.choreology.com 
Cohesions(tm) Business transaction management software for application coordination Work: tony.fletcher@choreology.com Home: amfletcher@iee.org 
Dear Ugo and other Choreographers, See below for comments embedded. 
Best Regards, Tony Tony Fletcher Technical Advisor Choreology Ltd. 68, Lombard Street, London EC3V 9L J UK Mobile: Web: http://www.choreology.com/ 
www.choreology.com 
Cohesions(tm) Business transaction management software for application coordination Work: tony.fletcher@choreology.com Home: amfletcher@iee.org 
Hi Tony, I imagine that when you talk about "language implementation" you mean "detailed definition of language constructs". 
I understand your point about first clearly specifying language requirements. 
My point was about also keeping an eye on what is already supported out there in the same policy area. 
Tony Agreed, I do realise that one needs to be realistic in specifying requirements and not 'require' things that you have no hope of delivering with out very good reason. 
However, in general, I believe that requirements should be considered on the merits and how to implement them or even if it is possible/ practical to implement especially in a V1 specification. 
/Tony Since the policy discussions are still ongoing within the WSDL WG, I cannot guarantee that the type of abstract policies you are talking about will actually be fully supported in WSDL. 
All I am saying is that, IF WSDL support that type of abstract policy definitions, and IF the CDL relies on the existence of WSDL files, then it might not be necessary to duplicate the same information within the CDL itself but just rely on what WSDL already specifies. 
Tony This may be the core of the discussion between us. 
I am saying as clearly as I can that you can not do it ALL in WSDL - by the nature of WSDL - and that is why we need a Choreography language on top of WSDL. 
What you can specify in the WSDL is the mandatory security features / policies. 
For instance that this Web Service always requires mutual authentication, or that confidentiality shall never be used with this web service. 
Such mandatory features should not appear in a choreography description. 
If a choreography description tries to override a mandatory feature then it should either be ignored (if its effect is to weaken security contrary to the mandatory policy), or generate a fault (if it is trying to demand something that is just not available). 
The WSDL should also be able to state that one or more security features are optional for the web service. 
So for instance it can do confidentiality but one does not have to use it on every instance of use of the web service. 
These are the cases where you can use the choreography description to state exactly which messages have to be sent confidentially and which do not. 
I hope this is clear. 
/Tony Ugo Tony, Ok, I understand the case where, as you say, WSDL might specify some security features as optional for individual messages, but I have a hard time imagining a use case where that would apply. 
If I expect some level of security for my Web service, why would I allow some messages not to comply with it? 
Ugo Dear Ugo and other Choreographers, See below for comments embedded. 
Best Regards, Tony Tony Fletcher Technical Advisor Choreology Ltd. 68, Lombard Street, London EC3V 9L J UK Mobile: Web: http://www.choreology.com/ 
www.choreology.com 
Cohesions(tm) Business transaction management software for application coordination Work: tony.fletcher@choreology.com Home: amfletcher@iee.org 
-----Original Message----- Hi Tony, I imagine that when you talk about "language implementation" you mean "detailed definition of language constructs". 
I understand your point about first clearly specifying language requirements. 
My point was about also keeping an eye on what is already supported out there in the same policy area. 
Since the policy discussions are still ongoing within the WSDL WG, I cannot guarantee that the type of abstract policies you are talking about will actually be fully supported in WSDL. 
All I am saying is that, IF WSDL support that type of abstract policy definitions, and IF the CDL relies on the existence of WSDL files, then it might not be necessary to duplicate the same information within the CDL itself but just rely on what WSDL already specifies. 
Tony This may be the core of the discussion between us. 
I am saying as clearly as I can that you can not do it ALL in WSDL - by the nature of WSDL - and that is why we need a Choreography language on top of WSDL. 
What you can specify in the WSDL is the mandatory security features / policies. 
For instance that this Web Service always requires mutual authentication, or that confidentiality shall never be used with this web service. 
Such mandatory features should not appear in a choreography description. 
If a choreography description tries to override a mandatory feature then it should either be ignored (if its effect is to weaken security contrary to the mandatory policy), or generate a fault (if it is trying to demand something that is just not available). 
The WSDL should also be able to state that one or more security features are optional for the web service. 
So for instance it can do confidentiality but one does not have to use it on every instance of use of the web service. 
These are the cases where you can use the choreography description to state exactly which messages have to be sent confidentially and which do not. 
I hope this is clear. 
/Tony Ugo Dear Ugo and others, Well I will postulate three cases: 1) security costs. 
This 'cost' can manifest itself in two ways (may be you can think of more?) a) performance - so if I have or am seeking relatively unimportant information but need lots fast I might want to do without the security feature b) money cost - if the security costs per use then again I might not want to incur the expense for unimportant information 2) the web service may be capable of a particular service, but some of the 'clients' (or peers) using the service may not. 
Contra wise the client might be capable but only some instances of the web service might be capable (again because of the development and running costs of having various security features). 
Generally speaking you need to be able to consider the value of the assets (/ information) that you are seeking to protect. 
If the value is considered low or the cost of a security breach is low then security may not be worth the expense. 
If it is valuable and / or the consequences of a breach are considerable (loss of reputation etc.) then it may well be worth applying - sometimes it can be a legal or regulatory necessity. 
So it can be a trade off - and the business experts and the security experts working together need to be able to make trade offs appropriate for their situation. 
Best Regards, Tony Tony Fletcher Technical Advisor Choreology Ltd. 68, Lombard Street, London EC3V 9L J UK Mobile: Web: http://www.choreology.com/ 
www.choreology.com 
Cohesions(tm) Business transaction management software for application coordination Work: tony.fletcher@choreology.com Home: amfletcher@iee.org 
Tony, Ok, I understand the case where, as you say, WSDL might specify some security features as optional for individual messages, but I have a hard time imagining a use case where that would apply. 
If I expect some level of security for my Web service, why would I allow some messages not to comply with it? 
Ugo -----Original Message----- Dear Ugo and other Choreographers, See below for comments embedded. 
Best Regards, Tony Tony Fletcher Technical Advisor Choreology Ltd. 68, Lombard Street, London EC3V 9L J UK Mobile: Web: http://www.choreology.com/ 
www.choreology.com 
Cohesions(tm) Business transaction management software for application coordination Work: tony.fletcher@choreology.com Home: amfletcher@iee.org 
-----Original Message----- Hi Tony, I imagine that when you talk about "language implementation" you mean "detailed definition of language constructs". 
I understand your point about first clearly specifying language requirements. 
My point was about also keeping an eye on what is already supported out there in the same policy area. 
Tony Agreed, I do realise that one needs to be realistic in specifying requirements and not 'require' things that you have no hope of delivering with out very good reason. 
However, in general, I believe that requirements should be considered on the merits and how to implement them or even if it is possible/ practical to implement especially in a V1 specification. 
/Tony Since the policy discussions are still ongoing within the WSDL WG, I cannot guarantee that the type of abstract policies you are talking about will actually be fully supported in WSDL. 
All I am saying is that, IF WSDL support that type of abstract policy definitions, and IF the CDL relies on the existence of WSDL files, then it might not be necessary to duplicate the same information within the CDL itself but just rely on what WSDL already specifies. 
Tony This may be the core of the discussion between us. 
I am saying as clearly as I can that you can not do it ALL in WSDL - by the nature of WSDL - and that is why we need a Choreography language on top of WSDL. 
What you can specify in the WSDL is the mandatory security features / policies. 
For instance that this Web Service always requires mutual authentication, or that confidentiality shall never be used with this web service. 
Such mandatory features should not appear in a choreography description. 
If a choreography description tries to override a mandatory feature then it should either be ignored (if its effect is to weaken security contrary to the mandatory policy), or generate a fault (if it is trying to demand something that is just not available). 
The WSDL should also be able to state that one or more security features are optional for the web service. 
So for instance it can do confidentiality but one does not have to use it on every instance of use of the web service. 
These are the cases where you can use the choreography description to state exactly which messages have to be sent confidentially and which do not. 
I hope this is clear. 
/Tony Ugo 
