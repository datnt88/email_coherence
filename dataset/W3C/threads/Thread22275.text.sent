Hi, I was wondering how side-effects should be implemented during error conditions. 
For example replaceChild removes newChild if it exists and replaces oldChild... But an error occurs if oldChild doesn't exist. 
Is newChild removed for the error case? 
And can you generalize so your answer would consistently apply for side-effects with other errors? 
Thank you. 
Don Hamson Bartlett Consulting LLC Don Hamson wrote, The spec is silent on this, but it's a fairly straightforward quality of implementation issue. 
Ideally if a method call on a given node exits via an exception throw, then that node (and anything else involved in the call) should be left in the state it was in prior to the call. 
Whilst desireable, this might be impossible or impractical in some implementations, in which case minimal exception safety requires that everything involved in the call be left in a consistent state. 
Cheers, Miles Miles Sabin Cromwell Media Internet Systems Architect 5/6 Glenthorne Mews msabin@cromwellmedia.co.uk England I think the past consensus has been that if an operation fails, the document should be left unchanged (which may mean either that it isn't changed, or that the change is made and then undone). 
Usually this isn't hard to do, if you're careful about the order in which operations are performed. 
I don't see an explicit promise that it'll work this way in the DOM spec, but I may not be looking carefully enough. 
Joe Kesselman / IBM Research Unless stated otherwise, all opinions are solely those of the author. 
