(TOP (S (NP (person (NNP Dave))) (PRN (: --) (S (NP (PRP I)) (VP (VBD noticed) (NP (DT the) (NN following)) (PP (IN on) (NP (PRP$ your) (`` ``) (NAC (NNPS Notes) (PP (IN on) (NP (NNP Pending) (NNP Work)))) ('' '') (NN web) (NN page))))) (: :)) (`` ``) (NP (NNP Omri) (NNP Traub)) (VP (MD would) (VP (VB like) (NP (DT an) (NN option) (S (VP (TO to) (VP (VB wrap) (NP (NP (DT the) (NNS contents)) (PP (IN of) (NP (NN style) (CC and) (NN script) (NNS elements)))) (PP (IN in) (NP (organization (JJ CDATA)) (JJ marked) (NNS sections))) (SBAR (WHADVP (WRB when)) (S (VP (VBG converting) (PP (TO to) (NP (NNP XHTML)))))))))))) (. .) ('' '')) )
(TOP (S (NP (PRP I)) (VP (AUX need) (NP (DT the) (JJ same) (NN support)) (SBAR (IN since) (S (NP (VBG validating) (NNP XML) (NNS parsers)) (VP (VBP reject) (NP (NP (NP (DT the) (ADJP (RB currently) (VBN produced)) (JJ Tidy) (NN output)) (SBAR (WHADVP (WRB when)) (S (NP (DT a) (NN script)) (VP (VBZ contains) (NP (NN &amp)))))) (: ;) (NP (NN &amp)) (: ;)) (PP (IN for) (NP (NN example))))))) (. .)) )
(TOP (S (NP (PRP I)) (VP (AUX do) (RB n't) (VP (AUX have) (NP (DT a) (NNP c) (NN compiler)))) (. .)) )
(TOP (S (ADVP (RB However)) (, ,) (S (NP (PRP I)) (VP (AUX 've) (VP (VBD changed) (NP (DT the) (NN java))))) (CC and) (S (NP (PRP it)) (VP (VBZ works) (PP (IN for) (NP (PRP me))))) (. .)) )
(TOP (S (NP (NP (DT The) (NNS changes)) (PP (IN in) (NP (DT the) (NNP c) (NN code)))) (VP (MD would) (VP (VB look) (PP (IN like) (NP (NP (DT this)) (: :) (PP (IN In) (NP (NNS pprint.c))) (, ,)))))) )
(TOP (S (NN function) (NN PPrintTree) (NN ,) (NN I) (NN 've) (NN changed) (NN the) (NN code) (NN from) (NN this) (NN :) (NN else) (NN if) (NN -LRB-) (NN node-) (NN tag) (NN ==) (NN tag_style) (NN ||) (NN node-) (NN tag) (NN ==) (NN tag_script) (NN -RRB-) (NN PCondFlushLine) (NN -LRB-) (NN fout) (NN ,) (NN indent) (NN -RRB-) (NN ;) (NN indent) (NN =) (NN 0) (NN ;) (NN PCondFlushLine) (NN -LRB-) (NN fout) (NN ,) (NN indent) (NN -RRB-) (NN ;) (NN PPrintTag) (NN -LRB-) (NN lexer) (NN ,) (NN fout) (NN ,) (NN mode) (NN ,) (NN indent) (NN ,) (NN node) (NN -RRB-) (NN ;) (NN PFlushLine) (NN -LRB-) (NN fout) (NN ,) (NN indent) (NN -RRB-) (NN ;) (NN for) (NN -LRB-) (NN content) (NN =) (NN node-) (NN content) (NN ;) (NN content) (NN !) (NN =) (NN null) (NN ;) (NN content) (NN =) (NN content-) (NN next) (NN -RRB-) (NN PPrintTree) (NN -LRB-) (NN fout) (NN ,) (NN -LRB-) (NN mode) (NN |) (NN PREFORMATTED) (NN |) (NN NOWRAP) (NN |CDATA) (NN -RRB-) (NN ,) (NN indent) (NN ,) (NN lexer) (NN ,) (NN content) (NN -RRB-) (NN ;) (NN PCondFlushLine) (NN -LRB-) (NN fout) (NN ,) (NN indent) (NN -RRB-) (NN ;) (NN PPrintEndTag) (NN -LRB-) (NN fout) (NN ,) (NN mode) (NN ,) (NN indent) (NN ,) (NN node) (NN -RRB-) (NN ;) (NN PFlushLine) (NN -LRB-) (NN fout) (NN ,) (NN indent) (NN -RRB-) (NN ;) (NN if) (NN -LRB-) (NN IndentContent) (NN ==) (NN no) (NN &amp) (NN ;) (NN &amp) (NN ;) (NN node-) (NN next) (NN !) (NN =) (NN null) (NN -RRB-) (NN PFlushLine) (NN -LRB-) (NN fout) (NN ,) (NN indent) (NN -RRB-) (NN ;) (NN to) (NN this) (NN :) (NN else) (NN if) (NN -LRB-) (NN node-) (NN tag) (NN ==) (NN tag_style) (NN ||) (NN node-) (NN tag) (NN ==) (NN tag_script) (NN -RRB-) (NN PCondFlushLine) (NN -LRB-) (NN fout) (NN ,) (NN indent) (NN -RRB-) (NN ;) (NN indent) (NN =) (NN 0) (NN ;) (NN /) (NN **) (NN *) (NN not) (NN sure) (NN why) (NN this) (NN is) (NN here) (NN is) (NN it) (NN is) (NN immediately) (NN preceeded) (NN by) (NN PCondFlushLine) (NN PCondFlushLine) (NN -LRB-) (NN fout) (NN ,) (NN indent) (NN -RRB-) (NN ;) (NN *****) (NN /) (NN PPrintTag) (NN -LRB-) (NN lexer) (NN ,) (NN fout) (NN ,) (NN mode) (NN ,) (NN indent) (NN ,) (NN node) (NN -RRB-) (NN ;) (NN PFlushLine) (NN -LRB-) (NN fout) (NN ,) (NN indent) (NN -RRB-) (NN ;) (NN /) (NN *) (NN *) (NN start) (NN newly) (NN inserted) (NN code) (NN **) (NN /) (NN if) (NN -LRB-) (NN xHTML) (NN -RRB-) (NN -LCB-) (NN savewraplen) (NN =) (NN wraplen) (NN ;) (NN wraplen) (NN =) (NN 0xFFFFFF) (NN ;) (NN /) (NN *) (NN disable) (NN wrapping) (NN *) (NN /) (NN AddC) (NN -LRB-) (NN ') (NN ') (NN ,) (NN linelen++) (NN -RRB-) (NN ;) (NN AddC) (NN -LRB-) (NN ') (NN !) (NN ') (NN ,) (NN linelen++) (NN -RRB-) (NN ;) (NN AddC) (NN -LRB-) (NN ') (NN -LSB-) (NN ') (NN ,) (NN linelen++) (NN -RRB-) (NN ;) (NN AddC) (NN -LRB-) (NN ') (NN C') (NN ,) (NN linelen++) (NN -RRB-) (NN ;) (NN AddC) (NN -LRB-) (NN ') (NN D') (NN ,) (NN linelen++) (NN -RRB-) (NN ;) (NN AddC) (NN -LRB-) (NN ') (NN A) (NN ') (NN ,) (NN linelen++) (NN -RRB-) (NN ;) (NN AddC) (NN -LRB-) (NN ') (NN T) (NN ') (NN ,) (NN linelen++) (NN -RRB-) (NN ;) (NN AddC) (NN -LRB-) (NN ') (NN A) (NN ') (NN ,) (NN linelen++) (NN -RRB-) (NN ;) (NN AddC) (NN -LRB-) (NN ') (NN -LSB-) (NN ') (NN ,) (NN linelen++) (NN -RRB-) (NN ;) (NN PCondFlushLine) (NN -LRB-) (NN fout) (NN ,) (NN indent) (NN -RRB-) (NN ;) (NN wraplen) (NN =) (NN savewraplen) (NN ;) (NN /) (NN *) (NN *) (NN end) (NN newly) (NN inserted) (NN code) (NN **) (NN /) (NN for) (NN -LRB-) (NN content) (NN =) (NN node-) (NN content) (NN ;) (NN content) (NN !) (NN =) (NN null) (NN ;) (NN content) (NN =) (NN content-) (NN next) (NN -RRB-) (NN PPrintTree) (NN -LRB-) (NN fout) (NN ,) (NN -LRB-) (NN mode) (NN |) (NN PREFORMATTED) (NN |) (NN NOWRAP) (NN |CDATA) (NN -RRB-) (NN ,) (NN indent) (NN ,) (NN lexer) (NN ,) (NN content) (NN -RRB-) (NN ;) (NN PCondFlushLine) (NN -LRB-) (NN fout) (NN ,) (NN indent) (NN -RRB-) (NN ;) (NN /) (NN *) (NN *) (NN start) (NN newly) (NN inserted) (NN code) (NN **) (NN /) (NN if) (NN -LRB-) (NN xHTML) (NN -RRB-) (NN -LCB-) (NN savewraplen) (NN =) (NN wraplen) (NN ;) (NN wraplen) (NN =) (NN 0xFFFFFF) (NN ;) (NN /) (NN *) (NN disable) (NN wrapping) (NN *) (NN /) (NN AddC) (NN -LRB-) (NN ') (NN -RSB-) (NN ') (NN ,) (NN linelen++) (NN -RRB-) (NN ;) (NN AddC) (NN -LRB-) (NN ') (NN -RSB-) (NN ') (NN ,) (NN linelen++) (NN -RRB-) (NN ;) (NN AddC) (NN -LRB-) (NN ') (NN ') (NN ,) (NN linelen++) (NN -RRB-) (NN ;) (NN PCondFlushLine) (NN -LRB-) (NN fout) (NN ,) (NN indent) (NN -RRB-) (NN ;) (NN wraplen) (NN =) (NN savewraplen) (NN ;) (NN /) (NN *) (NN *) (NN end) (NN newly) (NN inserted) (NN code) (NN **) (NN /) (NN PPrintEndTag) (NN -LRB-) (NN fout) (NN ,) (NN mode) (NN ,) (NN indent) (NN ,) (NN node) (NN -RRB-) (NN ;) (NN PFlushLine) (NN -LRB-) (NN fout) (NN ,) (NN indent) (NN -RRB-) (NN ;) (NN if) (NN -LRB-) (NN IndentContent) (NN ==) (NN no) (NN &amp) (NN ;) (NN &amp) (NN ;) (NN node-) (NN next) (NN !) (NN =) (NN null) (NN -RRB-) (NN PFlushLine) (NN -LRB-) (NN fout) (NN ,) (NN indent) (NN -RRB-) (NN ;) (NN Also) (NN ,) (NN I) (NN added) (NN uint) (NN savewraplen) (NN ;) (NN up) (NN at) (NN the) (NN top) (NN of) (NN the) (NN PPrintTree) (NN function) (NN ,) (NN after) (NN Node) (NN *) (NN content) (NN ,) (NN *) (NN last) (NN ;) (NN I) (NN 'm) (NN not) (NN sure) (NN if) (NN this) (NN is) (NN the) (NN best) (NN way) (NN to) (NN report) (NN suggested) (NN code) (NN changes) (NN to) (NN you) (NN but) (NN ,) (NN if) (NN there) (NN is) (NN some) (NN alternative) (NN procedure) (NN ,) (NN I) (NN apologize) (NN for) (NN cluttering) (NN up) (NN the) (NN mailing) (NN list) (NN and) (NN will) (NN resubmit) (NN .)) )
(TOP (NP (person (NNP Gary))) )
(TOP (S (S (VP (VBG Hi) (NP (person (NNP Gary))))) (, ,) (NP (PRP I)) (VP (AUX 'm) (VP (VBG using) (NP (NNP JTidy)) (S (VP (VP (TO to) (VP (VB convert) (NP (NNP HTML)) (PP (TO to) (NP (NNP XHTML))))) (CC and) (ADVP (RB also)) (VP (AUX need) (S (VP (TO to) (VP (VB wrap) (NP (NNS scripts)) (PP (IN in) (NP (NNP CDATA))))))))))) (. .)) )
(TOP (S (NP (PRP I)) (VP (AUX was) (VP (VBG wondering) (SBAR (IN if) (S (NP (PRP you)) (VP (MD could) (VP (VB post) (NP (NP (DT the) (NNS changes)) (SBAR (WHNP (WDT that)) (S (NP (PRP you)) (VP (VBD made) (PP (TO to) (NP (NP (DT the) (NNP Java) (NN version)) (PP (IN of) (NP (JJ Tidy))) (S (VP (TO to) (VP (VB accomplish) (NP (DT this))))))))))))))))) (. .)) )
(TOP (NP (NP (NNS Thanks)) (PP (IN in) (NP (NP (NN advance)) (, ,) (NP (NNP Tieu) (NNP Luu))))) )
(TOP (NP (NP (NN Tieu)) (: --) (S (NP (DT These)) (VP (AUX are) (ADVP (RB basically)) (NP (NP (DT the) (JJ same) (NNS changes)) (PP (IN as) (NP (DT the) (NNP c) (NN code)))))) (. .)) )
(TOP (S (ADVP (RB However)) (, ,) (SBAR (RB here) (S (NP (PRP it)) (VP (AUX is) (: :) (PP (IN In) (NP (NP (NN class) (NN PPrint)) (, ,) (NP (NN method) (NN printTree))))))) (, ,) (NP (DT the) (NNS changes)) (VP (VBP look) (PP (IN like) (NP (DT this)))) (: :) (SBAR (RB else) (IN if) (S (-LRB- -LRB-) (VP (VBP node.tag) (NP (JJ ==) (NNP TagTable.tagStyle)))))) )
(TOP (NP (JJ ||) (NN node.tag) (NN ==) (NNP TagTable.tagScript) (-RRB- -RRB-)) )
(TOP (S (PRN (-LRB- -LCB-) (NP (NNP condFlushLine)) (-LRB- -LRB-) (NP (NN fout)) (, ,) (NP (NN indent)) (-RRB- -RRB-)) (: ;) (NP (NN indent)) (VP (SYM =) (NP (NP (NP (CD 0)) (: ;) (NP (NP (NP (NP (CD //) (NN condFlushLine)) (PRN (-LRB- -LRB-) (NP (NN fout)) (, ,) (NP (NN indent)) (-RRB- -RRB-)) (: ;) (VP (NN LINE) (VP (VBN REMOVED) (PP (IN AS) (NP (NP (JJ REDUNDANT) (NN printTag)) (PRN (-LRB- -LRB-) (NP (NN lexer) (, ,) (NN fout) (, ,) (NN mode) (, ,) (NN indent)) (, ,) (NP (NN node)) (-RRB- -RRB-)))))) (: ;)) (NN flushLine)) (PRN (-LRB- -LRB-) (NP (NN fout)) (, ,) (NP (NN indent)) (-RRB- -RRB-))) (: ;) (NP (CD //) (NN Start))) (PP (IN of) (NP (VBN added) (NN code)))) (SBAR (IN if) (PRN (-LRB- -LRB-) (NP (CD this.configuration.xHTML)) (-RRB- -RRB-))))) )
(TOP (S (-LRB- -LCB-) (NP (NN int) (NNS savewraplen)) (VP (SYM =) (VP (VBN this.configuration.wraplen))) (: ;)) )
(TOP (S (NP (NNP /) (NNP *)) (VP (VBD disable) (S (VP (VBG wrapping) (NP (JJ *) (JJ /) (NNS this.configuration.wraplen)))))) )
(TOP (X (X (SYM =)) (NP (JJ 0xFFFFFF) (PRN (: ;) (NP (NP (CD /) (NNS *)) (NP (NP (NP (NP (DT a) (ADJP (RB very) (JJ large)) (NN number)) (NP (QP (CD *) (CD /)) (NNS addC))) (PRN (-LRB- -LRB-) ('' ') ('' ') (, ,) (CD linelen++) (-RRB- -RRB-))) (: ;) (NP (NP (NNS addC)) (PRN (-LRB- -LRB-) (FRAG (NP (POS ')) (. !) ('' ')) (, ,) (NP (NN linelen++)) (-RRB- -RRB-))) (: ;) (NP (NP (NNS addC)) (PRN (-LRB- -LRB-) ('' ') (NP (NN -LSB-) (POS ')) (, ,) (NP (CD linelen++)) (-RRB- -RRB-))) (: ;) (NP (NP (NNS addC)) (PRN (-LRB- -LRB-) ('' ') (NP (NNP C')) (, ,) (NP (CD linelen++)) (-RRB- -RRB-))) (: ;) (NP (NP (NNS addC)) (PRN (-LRB- -LRB-) ('' ') (NP (NNP D')) (, ,) (NP (CD linelen++)) (-RRB- -RRB-))) (: ;) (NP (NP (NNS addC)) (PRN (-LRB- -LRB-) ('' ') (NP (NNP A) (POS ')) (, ,) (NP (CD linelen++)) (-RRB- -RRB-))) (: ;) (NP (NP (NNS addC)) (PRN (-LRB- -LRB-) ('' ') (NP (NNP T) (POS ')) (, ,) (NP (CD linelen++)) (-RRB- -RRB-))) (: ;) (NP (NP (NNS addC)) (PRN (-LRB- -LRB-) ('' ') (NP (NNP A) (POS ')) (, ,) (NP (CD linelen++)) (-RRB- -RRB-))) (: ;) (NP (NP (NNS addC)) (PRN (-LRB- -LRB-) ('' ') (NP (NN -LSB-) (POS ')) (, ,) (NP (CD linelen++)) (-RRB- -RRB-))) (: ;) (NP (NP (NN condFlushLine)) (PRN (-LRB- -LRB-) (NP (NN fout) (, ,) (NN indent)) (-RRB- -RRB-))))) (: ;)) (NNS this.configuration.wraplen))) )
(TOP (X (X (SYM =)) (NP (NP (NNS savewraplen)) (: ;) (NP (NP (JJ //) (NNP End)) (PP (IN of) (NP (NP (VBN added) (NN code)) (PP (IN for) (FRAG (-LRB- -LRB-) (NP (NN content)) (X (SYM =)) (VP (VB node.content))))))) (: ;))) )
(TOP (FRAG (NP (NN content)) (. !) (X (SYM =)) (VP (VB null)) (: ;) (NP (NN content)) (X (SYM =)) (NP (NN content.next)) (-RRB- -RRB-)) )
(TOP (NP (NP (NP (NP (NP (NN printTree)) (PRN (-LRB- -LRB-) (NP (NP (NP (NN fout)) (PRN (, ,) (-LRB- -LRB-) (JJ short) (-RRB- -RRB-))) (PRN (-LRB- -LRB-) (NP (NP (NN mode) (NN |)) (VP (VBN PREFORMATTED) (NP (JJ |) (NN NOWRAP) (NN |CDATA)))) (-RRB- -RRB-)) (, ,) (NP (NN indent)) (, ,) (NP (NN lexer)) (, ,) (NP (NN content))) (-RRB- -RRB-))) (: ;) (NP (NP (NN condFlushLine)) (PRN (-LRB- -LRB-) (NP (NN fout) (, ,) (NN indent)) (-RRB- -RRB-))) (: ;) (NP (CD //) (NN Start))) (PP (IN of) (NP (VBN added) (NN code)))) (IN if) (NP (-LRB- -LRB-) (NNP this.configuration.xHTML) (-RRB- -RRB-))) )
(TOP (S (-LRB- -LCB-) (NP (NN int) (NNS savewraplen)) (VP (SYM =) (VP (VBN this.configuration.wraplen))) (: ;)) )
(TOP (S (NP (NNP /) (NNP *)) (VP (VBD disable) (S (VP (VBG wrapping) (NP (JJ *) (JJ /) (NNS this.configuration.wraplen)))))) )
(TOP (FRAG (X (SYM =)) (NP (NP (NN 0xFFFFFF)) (: ;) (NP (NP (NNS /)) (VP (VBG *) (NP (NP (NP (DT a) (ADJP (RB very) (JJ large)) (NN number)) (NP (QP (CD *) (CD /)) (NNS addC))) (PRN (-LRB- -LRB-) ('' ') (NP (NN -RSB-) (POS ')) (, ,) (NP (CD linelen++)) (-RRB- -RRB-))))) (: ;) (NP (NP (NNS addC)) (PRN (-LRB- -LRB-) ('' ') (NP (NN -RSB-) (POS ')) (, ,) (NP (CD linelen++)) (-RRB- -RRB-))) (: ;) (NP (NP (NNS addC)) (PRN (-LRB- -LRB-) ('' ') ('' ') (, ,) (NP (CD linelen++)) (-RRB- -RRB-))) (: ;) (NP (NP (NN condFlushLine)) (PRN (-LRB- -LRB-) (NP (NN fout) (, ,) (NN indent)) (-RRB- -RRB-))) (: ;) (NP (NNS this.configuration.wraplen)))) )
(TOP (X (X (SYM =)) (NP (NP (JJ savewraplen) (PRN (: ;) (PP (VBG //) (NP (NP (NN End)) (PP (IN of) (NP (NP (JJ added) (NN code) (NN printEndTag)) (PRN (-LRB- -LRB-) (NP (NN fout) (, ,) (NN mode) (, ,) (NN indent) (, ,) (NN node)) (-RRB- -RRB-)))))) (: ;)) (NN flushLine)) (PRN (-LRB- -LRB-) (NP (NN fout) (, ,) (NN indent)) (-RRB- -RRB-))) (: ;) (PP (IN if) (NP (-LRB- -LRB-) (NN this.configuration.IndentContent)))) )
(TOP (FRAG (NP (NP (JJ ==) (JJ false) (NN &amp)) (: ;) (NP (NN &amp)) (: ;) (NP (NN node.next)) (. !)) (X (SYM =)) (NP (NP (NP (JJ null) (-RRB- -RRB-) (NN flushLine)) (PRN (-LRB- -LRB-) (NP (NN fout) (, ,) (NN indent)) (-RRB- -RRB-))) (: ;) (NP (NNP HTH) (, ,) (person (NNP Gary))))) )
