A general conclusion is that you will need to give a good deal of help to people who want to convert from SGML. 
There are bits which aren't obvious and bits which you might expect to be there and aren't. 
This conversion is not just the document instances, it's the whole lot. 
(This isn't meant to sound negative... but it will be even harder for PhaseII). 
That is bad news. 
If XML is a complete break with SGML, then there is trouble ahead. 
The San Diego conference could have some rough moments if the attendees are knowledgeable. 
An example (from "ISO 8879-1986//ENTITIES Added Latin 1//EN") (BTW I use the FPI to identify the document, not its location): There are about 100 such records in the file: The fields underlined are not parsable in XML. 
This means that either it is not possible to use the ISO entity sets in XML (which seems a pity), or they must be transformed (?who would validate them) or maybe there is some cunning way round this problem My personal opinion is that the SGML comment (which is ubiquitous in DTDs, entities , etc.) will be the thing that causes most problems as the change to --* *-- is not immediately obvious to those who haven't been involved in the discussions. 
P. Peter Murray-Rust, domestic net connection Virtual School of Molecular Sciences Ewww. 
This hadn't dawned on me: comments in existing dtds and ent files. 
In this case, it can be fixed with sed "s|--.*--||" but do we know if the comments are an integral (ie compulsory) part of the ISO char ent files? 
///Peter The comments are not mandatory -- they're just about universal, though. 
The source of these things is, of course, Annex D.4 of ISO 8879. 
And it's not just one file but quite a few in a typical installation. 
The annex is not normative text, but files containg this public text have been copied by almost every vendor (a quick look around my disk found copies from WordPerfect and Adobe/Frame and two copies from SoftQuad). 
There are further examples of this sort in ISO/TR 9573, Techniques for Using SGML. 
Given the near ubiquity of files that look lile the Annexes, maybe XML ought to reexaine the decisions on the things Peter points out above. 
(I, for one, think the "--* *--" delimiter is more junk to type -- and it makes me have to hit a shift key, too. 
I have enough sense to distinguish between when I'm typing text and use " -- " as an em-dash and when I'm typing code and putting in comments.) Jim Mason Dr. James D. Mason (ISO/IEC JTC1/SC18/WG8 Convenor) Lockheed Martin Energy Systems Information Management Services SGML Systems Development 1060 Commerce Park, M.S. 6480 Oak Ridge, TN 37831-6480 U.S.A. Facsimile: +1 423 574-0004 Network: masonjd@ornl.gov 
I'm REALLY glad to see other folks concerned about the comments, but I do feel we have already lost on this one. 
We, as an industry, can cope. 
At Mulberry, we see two big problems for us personally: 1) All those standard sets of SDATA entities 2) Our "house-style", which embedded comments concerning every attribute, within the ATTLIST Declaration, before the attribute definition. 
On the comment issue, we figured: 1) One of the vendors would undertake to produce an XML conformant version of the standard ISO special-character general entities (maybe SGML Open can volunteer) and we would all replace. 
Since this is only a comment definition, we need not maintain 2 sets, only replace the one we have. 
(In the days before the SGML Open catalogue agreement, we kept as many sets as we had software packages; this is not as uncomfortable as that was.) 2) Every SGML DTD we have ever written would have to be modified, but we're pretty sure that it could be done programatically, and only once. 
So the comments will require work, but are no big deal. 
Unfortunately, there are still other reasons that every SGML DTD will need to be re-written for XML, the peskiest being the omissability indicators. 
If the syntax could just be written to ignore ANYTHING found in that position (after the first ps following the element name and before the "(" of the content model ... ). 
Sigh. 
As XML is shaping up, I see no alternatives for an SGML shop but to: 1) Generate XML DTDs on the fly from SGML DTDs, as you need them; or 2) Maintain duplicate XML/SGML DTDs (Ouch); or 3) Generate both XML and SGML DTDs from another source (we're working on this, actually). 
And while I see this as inconvenient I don't see it as any sort of a show-stopper. 
It looks like XML will be, like all standards, an imperfect compromise. 
That's OK. --Debbie 6010 Executive Blvd. 
Suite 608 E-mail: dlapeyre@mulberrytech.com 
Rockville, MD USA 20852 The other alternative is to ignore XML syntax, adopt XML or adopt and modify XML linking, then use an SGML conforming system. 
Not as easy to build; probably easier to sell. 
Faced with keeping up what appear on the surface to be gratuitous incompatibilities, forcing translation at the customer site, and breaking the back of the SGML standard support and ISO support, it might not be the horrible option it seems to be otherwise. 
No, I am not suggesting the WG revisit the decisions. 
I am saying, that alternative is always there and when choosing, the familiar evil is typically the popular one. 
len 
