Is anyone interested in a simple mod to HTTP to allow more efficient link updating when a 301 response occurs? 
I once designed an addition to HTTP 
to allow updating of referrers the first time any user follows an old link, rather than waiting on (at best?) a periodic link-check performed by the server. 
I designed it as an exercise; now that I have it, and we're in 1.2-issues-phase, I thought I'd ask the WG if there's any interest. 
Is there enough long-term efficiency gain to warrant a change to the protocol? 
Implementors of link-editing HTTP servers, does this appeal to you at all? 
Cheers, James Marshall jsm@crl.com 
I would be interested ... if the WG wanted to consider the possiblity but I can anticipate several concerns which might be difficult to resolve: a. 
The referer is often unrelated to the owner or the refered document. 
In that role, I would not want automatic update of anything on my site w/o some very careful controls. 
b. 
I have a shipping product which includes a built in reference to an unrelated external site. 
This product will make thousands of users into micro-web servers w/o any ability to deal with any form of automatic notification. 
I only offer this as the penultimate example of difficulty which needs to be considered (and makes me think our maintenance release should have a way to deal with broken imbeded links...) Dave Morris 
I agree that updating broken links is a useful feature in a web server. 
But why does this need to be addressed in the standard? 
Is this really anything more than a useful utility for webmasters ( as opposed to a client-server communication issue which must be addressed in the standard )? 
Apologies in advance if I'm just being dense :-) Vance Huntley Director of Technology &amp; GenesisJive Guy WebGenesis, Inc., Ithaca, NY 14850 vance@webgenesis.com 
--- 607.255.8499 
Check out "The Globe"! 
--- http://www.theglobe.com/ 
I see I wasn't very clear in my first post-- let me apply some Windex: 
Given the current HTTP standard, I don't see how to update a link the first time any user follows it; the best method I know is for the owning server to keep checking all links in its resources, and update those that are obsolete. 
It would be more efficient (and more immediate) to update a 
link the first time someone discovers it's obsolete, instead of checking all links periodically. 
Sort of like interrupt-driven versus polling. 
If you know a way to do this with the current HTTP standard, then I'm the one being dense (and please let me know how) (I mean how to do it, now how dense). 
The scheme I'm talking about involves adding or modifying an HTTP method to let any client SUGGEST to a server that a link in a resource needs updating. 
The server is then expected to test the link with a HEAD request, before actually updating the link. 
This suggestion mechanism allows anyone to notify any server that a link needs updating, while preventing unauthorized changes (the security concern that Dave Morris (Hi Dave!) brought up in his note). 
Does this make more sense? 
Cheers, James Marshall jsm@crl.com 
Date: Sat, 13 Jul 1996 15:02:33 -0700 (PDT) From: "David W. Morris" dwm@shell.portal.com 
b. 
I have a shipping product which includes a built in reference to an unrelated external site. 
This product will make thousands of users into micro-web servers w/o any ability to deal with any form of automatic notification. 
I only offer this as the penultimate example of difficulty which needs to be considered (and makes me think our maintenance release should have a way to deal with broken imbeded links...) Dave Morris I don't see link update as neccessarily part of the protocol, except perhaps for requiring more strict adherrence to providing certain headers (e.g., the "Last-Modified" field). 
My online product consists of a large database of URLs. 
Part of my offering is alerting customers to movement or change in the link targets. 
To do this, I batch run some custom link-verification code. 
This works pretty well. 
Joe Joseph Arceneaux Arceneaux Consulting jla@arceneaux.com 
nice thing about that is that the checking is done on somebody else's Internet time. 
unfortunately, I wouldn't want my client to waste my hard earned money telling your server about some link. 
a more reasonable standard might be A. SERVER RECIEVES REQUEST FOR UNAVAILABLE RESOURCE 1. Checks for the "Referer" header 2. If it is available it writes the URL of the request, as well as the Referer in a ADVISE FILE B. ADVISE DAEMON BEGINS IT'S PROCESS 1. Reads the ADVISE FILE...at a time when connection activity is low 2. INITIATES A CONNECTION WITH THE REFERRING SERVER ----begin session---- ADVISE /your-referring-resource HTTP/1.X Invalid-Resource: http://myserver/mybadurl Valid-Resource: http://myserver/mygoodresource ----end session---- 3. if Valid-Resource is not available ..it is left blank 4. if the server replies with a "405 -Method Not Available" ...it is recommended that your server keep an "ADVISE N/A CACHE" .... and wait some time before bugging that out of date machine again. 
I do not believe that HTTP needs any kind of additional method for advising the site that a URL has changed. 
If the world needs a standard like this, I suggest a new media type application/webmaster-advice and that such a media type could be delivered by email to webmaster@host I suggest for the format of application/webmaster-advice: Dear Webmaster: My system has discovered the following link on one of your pages is incorrect. 
Please correct it. 
Link from page: http://sloppy.host/referring-resource 
Invalid-Resource: http://myserver/mybadurl Valid-Resource: http://myserver/mygoodresource 
