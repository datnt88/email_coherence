I think we need to pay some attention to this. 
This request reflects an energetic exchange of views within Webont, and although it did not emerge as a consensual group comment, it clearly reflects a very deep issue for some potentially large user communities for RDF. 
The issue is that the only available syntactic form for adding comments to RDF involves making RDF assertions, since rdf:comment is a genuine RDF property, so all such triples have genuine entailments. 
This means, in particular, that changing a comment in an ontology changes the formal entailments made by that ontology, so is a genuine logical change to that ontology. 
Whether or not this should be considered a bug or a feature is controversial, but there is no doubt that to those for whom it is a problem, it is a very serious and basic problem, something very close to a fatal can't-live-with objection to RDF. 
It also means that one can set up inference chains which are probably not what any rational person would want to do, eg by defining an rdfs:subPropertyOf rdf:comment and then expecting to be able to use that to infer that something is an rdf:comment value. 
This distinction isn't particularly important (IMO) in RDF itself, but it becomes more trenchant in OWL, where quite subtle and indirect chains of reasoning could, in principle, allow one to draw unexpected (and probably unintended) conclusions about an rdf:comment value, eg by virtue of there only being three comments in the graph, a cardinality constraint applying to a superproperty of rdf:comment and an assertion that rdf:comment was functional could produce an inconsistency, or maybe allow one to conclude that an invisible comment must exist even though it is not in the graph. 
(The ambiguity in what this would really mean illustrates one of the aspects which I think most bothers Ian and others, which is that this treatment of rdf:comment muddles the distinction between the logical content of an RDF graph and what might be called the syntactic decorations of it, and hence muddies the semantic clarity of the language by importing things - in the case, comment values - into the semantic domain which do not belong there. 
Personally I am happier in muddier semantic waters than Ian is, but I recognize that his views are widely shared.) 
We could address this in various ways (dark triples, anyone?), but all but one of them are too ambitious at this stage, probably. 
One thing we could do relatively easily is for the MT to declare that all interpretations make all assertions of rdf:comment true. 
This in effect would cancel the entailments which bother Ian. 
What this amounts to in practice is that all comments are trivially entailed, so one cannot use entailment as a guide to associating a comment with a graph; one has to appeal to a more directly syntactic criterion, such as actually being in the graph. 
On the other hand, this might bother some other users who would prefer to use entailment as a general RDF 'glue', even for such things as comments. 
An alternative point of view is that problems will only arise if people fiddle with the machinery (which is forbidden in OWL-DL in any case), and that Ian's worries about development of large ontologies can probably be handled by providing some extra-RDF way of associating developer comments with RDF graphs, eg by adding non-RDF XML markup. 
This is rather a brush-off attitude, however, particularly if we do not actually provide any hints as to how this might be done. 
Comments? 
Is there any other way to allow for 'genuine' comments in an RDF graph? 
Pat IHMC(850)434 8903 or (650)494 3973 home 40 South Alcaniz St.(850)202 4416 office FL 32501 (850)291 0667 cell phayes@ai.uwf.edu http://www.coginst.uwf.edu/~phayes s.pam@ai.uwf.edu for spam I agree we need to pay some attention to this (I remember thinking that when Ian first made the comment), but I need some clarification of the pros and cons. 
In Ian's message, he said "In particular, it would be inappropriate for *applications* to infer semantic differences in information represented in two ontologies based solely on differences in comments (in the same way that it would be inappropriate for code to behave differently when only the comments are changed)." 
[my emphasis] I'm having problems with who is doing the inferring/entailments in question, and what kinds they are. 
It makes perfect sense for an *application* to decide that it wants to pay no attention to triples with rdf:comment properties, but it seems to me what we're being asked to do is to rule that out in some sense for *all* applications, by making this somehow basic in RDF. 
If triples with rdf:comment properties are "pure comments", presumably they are still there in the graph [otherwise the XML comment option would have worked], but they are ignored in certain types of processing. 
I would hope that I could still write an application that, say, used the number of comments (and maybe even the length of the values) to decide whether an ontology was "well-commented" in some sense? 
So could you give me some test cases describing the sorts of entailments in RDF that you'd like to forbid (test cases describing the situations below, which I didn't entirely understand, would be fine). 
This seems similar to the class/instance distinction, which RDF also "muddles", because at this level we don't want to wire those distinctions in. 
That sounds reasonable, assuming I understood what these extra entailments are that create the problem (see the "test cases" comment above). 
Reification anyone? 
--Frank Frank Manola The MITRE Corporation 202 Burlington Road, MS A345 Bedford, MA 01730-1420 formal entailments made by that ontology, so is a genuine logical change to that ontology. 
Whether or not this should be considered a bug or a feature is controversial, but there is no doubt that to those for whom it is a problem, it is a very serious and basic problem, something very close to a fatal can't-live-with objection to RDF. that in If I understand it correctly, that could be easily done and I've tried that (rdfs:comment triples always succeed). 
Of course, that would then mean that the empty graph entails phayes@ai.uwf.edu rdfs:comment "mail address of the cleverest guy on the planet". 
de re ification? 
Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/ 
This made me think of something (maybe) related. 
Is this a reasonable inference rule to contemplate?: _:foo rdfs:label "cat"@en implies _:foo rdfs:label "chat"@fr One could imagine similar inferences regarding comments. 
#g Graham Klyne PGP: 0FAA 69FF C083 000B A2E9 A131 01B9 1C7A DBCA CB5E I missed this ... Some examples of why we might want to reason about comments: 1: I use this property to distinguish comments made by me from other rdfs:comments. 
2: (In OWL Full) This thing is in the class someThings. 
The first seems to be the whole point of having RDF(S) being able to talk about itself. 
User level extensions are permitted - if you don't like that work in OWL DL or a subset. 
The second is significant because we have dropped rdf:aboutEach and rdf:aboutEachPrefix. 
This shows how an rdf:aboutEach type scenario can be approached in OWL - put all the items we wish to discuss in a class and then use a restriction - in this case on rdfs:comment, to add a comment to every resource in that class. 
A true about each can be done in the following way in OWL Full: This thing is in the container #aContainer. 
I think we should be pointing Ian at XML comments ... They seem to do what he really wants. 
Jeremy Possible unhelpful observation ... once XML Schema give us a URI for user defined types, and using facilities in OWL DL then: define realComment as an owl:DatatypeProperty with range string of length 1000000 or less. 
add an axiom giving owl:minCardinality rdf:datatype="&amp;xsd:integer" &amp;VeryBigNumber; owl:minCardinality As long as &amp;VeryBigNumber; is exactly the number of strings of length 1000000 or less then we have addressed Ian's requirement. 
(All possible realComments are necessarily true) It is hard to know how many strings there are - it might not even be time constant. 
Jeremy I don't thing so, particularly not if you are implying that there is some significance to the cat-chat correspondence! 
Ian Err, I thought we had disposed of horrocks-01 and were just waiting for Pat to write it up. 
Brian &amp;VeryBigNumber; owl:minCardinality Oops sorry - I did say the observation was unhelpful. 
Jeremy &amp;VeryBigNumber; owl:minCardinality 
