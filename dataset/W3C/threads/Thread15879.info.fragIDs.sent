How we know that a given character reference is an em-dash is in the area of internationalization, because internationalization is the area where we have to deal with the fact that there are lots of characters that aren't in ASCII. 
[Pawson, David] The inclusion or exclusion of 'funny marks' is determined by the 'Latin' ISO set of entities - included below. 
If the one you want is not in that one, it is no hardship to find the right entity set that does and look at including that one. 
Note that none of the marks are included, this set is primarily the one to cover the variants on the base alphabet. 
for example, mdash is in ISOPUB.ENT regards, DaveP 
!-- (C) International Organization for Standardization 1986 Permission to copy in any form is granted for use with conforming SGML systems and applications as defined in ISO 8879, provided this notice is included in all copies. 
-- !-- Character entity set. 
Typical invocation: !ENTITY % ISOlat1 PUBLIC "ISO 8879:1986//ENTITIES Added Latin 1//EN" %ISOlat1; -- !ENTITY Aacute SDATA "[Aacute]"--=capital A, acute accent-- !ENTITY acirc SDATA "[acirc ]"--=small a, circumflex accent-- !ENTITY Acirc SDATA "[Acirc ]"--=capital A, circumflex accent-- !ENTITY Agrave SDATA "[Agrave]"--=capital A, grave accent-- !ENTITY auml SDATA "[auml ]"--=small a, dieresis or umlaut mark-- !ENTITY Auml SDATA "[Auml ]"--=capital A, dieresis or umlaut mark-- !ENTITY aelig SDATA "[aelig ]"--=small ae diphthong (ligature)-- !ENTITY AElig SDATA "[AElig ]"--=capital AE diphthong (ligature)-- !ENTITY ETH SDATA "[ETH ]"--=capital Eth, Icelandic-- !ENTITY Eacute SDATA "[Eacute]"--=capital E, acute accent-- !ENTITY ecirc SDATA "[ecirc ]"--=small e, circumflex accent-- !ENTITY Ecirc SDATA "[Ecirc ]"--=capital E, circumflex accent-- !ENTITY Egrave SDATA "[Egrave]"--=capital E, grave accent-- !ENTITY euml SDATA "[euml ]"--=small e, dieresis or umlaut mark-- !ENTITY Euml SDATA "[Euml ]"--=capital E, dieresis or umlaut mark-- !ENTITY Iacute SDATA "[Iacute]"--=capital I, acute accent-- !ENTITY icirc SDATA "[icirc ]"--=small i, circumflex accent-- !ENTITY Icirc SDATA "[Icirc ]"--=capital I, circumflex accent-- !ENTITY Igrave SDATA "[Igrave]"--=capital I, grave accent-- !ENTITY iuml SDATA "[iuml ]"--=small i, dieresis or umlaut mark-- !ENTITY Iuml SDATA "[Iuml ]"--=capital I, dieresis or umlaut mark-- !ENTITY Oacute SDATA "[Oacute]"--=capital O, acute accent-- !ENTITY ocirc SDATA "[ocirc ]"--=small o, circumflex accent-- !ENTITY Ocirc SDATA "[Ocirc ]"--=capital O, circumflex accent-- !ENTITY Ograve SDATA "[Ograve]"--=capital O, grave accent-- !ENTITY ouml SDATA "[ouml ]"--=small o, dieresis or umlaut mark-- !ENTITY Ouml SDATA "[Ouml ]"--=capital O, dieresis or umlaut mark-- !ENTITY szlig SDATA "[szlig ]"--=small sharp s, German (sz ligature)-- !ENTITY thorn SDATA "[thorn ]"--=small thorn, Icelandic-- !ENTITY THORN SDATA "[THORN ]"--=capital THORN, Icelandic-- !ENTITY Uacute SDATA "[Uacute]"--=capital U, acute accent-- !ENTITY ucirc SDATA "[ucirc ]"--=small u, circumflex accent-- !ENTITY Ucirc SDATA "[Ucirc ]"--=capital U, circumflex accent-- !ENTITY Ugrave SDATA "[Ugrave]"--=capital U, grave accent-- !ENTITY uuml SDATA "[uuml ]"--=small u, dieresis or umlaut mark-- !ENTITY Uuml SDATA "[Uuml ]"--=capital U, dieresis or umlaut mark-- !ENTITY Yacute SDATA "[Yacute]"--=capital Y, acute accent-- !ENTITY yuml SDATA "[yuml ]"--=small y, dieresis or umlaut mark-- 
Hi 
I've just noticed that the Lie and Bos book on CSS (www.awl.com/css/) has this under the list of special characters: &amp;mdash; However NN4 does not seem to support it :-( Should there be something in the WAI check list advising people not to use things like &amp;#151;? 
Chris chris@atomism.demon.co.uk 
See the section on entities, and subsections on character references, in the HTML 4.0 specification. 
The value which follows the &amp;# can be decimal digits for a decimal value, or an x followed by hexadecimal digits for a hexadecimal value, corresponding to a 
Unicode character. 
Thus, the numeric character reference for &amp;mdash; is &amp;#8212; or &amp;#x2014;. 
The Unicode values correspond to the US-ASCII values through decimal 127, and ISO-8859-1 values through decimal 255. 
The decimal values 127 through 159 are invalid in HTML. 
The major GUI browsers invalidly treat character references in that range as Windows charset (e.g., ISO-8859-1-Windows-3.1-Latin-1, a.k.a, windows-1252) values. 
You not only should discourage their use, but the vendors of those browsers should be encouraged to respect the HTML specifications. 
The HTML 4.0 specs include named character references (e.g., mdash, ndash, lsquo, rsquo) for fancy dashes, quotation marks, spaces, etc., in that Windows codepage range, and, of course, all have valid Unicode numeric character references which could and should be used instead of the invalid ones. 
For accessibility reasons, Lynx v2.7.2 "handles" those invalid character references (e.g., substitutes ASCII dashes or quotation marks for the intended fancy ones) as is does the valid named and numeric character references, but (for better or worse :) this "acceptance of invalidity" is not done in the current Lynx development code that will become v2.8. 
Fote Foteos Macrides Worcester Foundation for Biomedical Research MACRIDES@SCI.WFBR.EDU 222 Maple Avenue, Shrewsbury, MA 01545 
On Fri, 06 Feb 1998 21:28:51 -0500 (EST), Foteos Macrides 
(snip) 
(snip) Thanks for all the useful info. 
&amp;#8212; works in NN4 but results in a in MSIE3 (W95) I don't have any other browsers installed at the moment -- what do other people get in other browsers? 
Chris chris@atomism.demon.co.uk 
-----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1 
Under Win95: Lynx 2.7.1 supports all of them MSIE 4.01 supports &amp;mdash; and &amp;#8212; but not &amp;#x2014; Netscape 4.04 supports &amp;#8212; but not &amp;mdash; or &amp;#x2014; Netscape 3.04 and 2.02 support none of them, showing "?" in place of &amp;#8212; Netscape 1.22 and 1.0N, Opera 3.0, and HotJava 1.1 support none of them, showing a square in place of &amp;#8212; NCSA Mosaic 3.0 supports none of them, showing a square in place of &amp;#8212; and a small thorn in place of &amp;#x2014; UdiWWW 1.2.000 supports none of them, showing a square in place of &amp;#8212; and nothing in place of &amp;#x2014; Amaya 1.1beta supports none of them, showing nothing in place of &amp;#8212; -----BEGIN PGP SIGNATURE----- Version: PGP for Personal Privacy 5.0 Charset: noconv iQA/AwUBNNy58vP8EtNrypTwEQK6AwCgv2WfjB17cDLPwHpGFKO6hrFwmcYAoOhw XZE0j/1GRvchXuehnBDTTK9w =jtUM -----END PGP SIGNATURE----- Liam Quinn Web Design Group Enhanced Designs, Web Site Development 
Please refer me to exactly what needs to be corrected in the next version of Internet Explorer. 
Thanks, 
Charles Oppermann Program Manager, Active Accessibility, Microsoft Corporation "A computer on every desk and in every home, usable by everyone!" 
Under Win95: Lynx 2.7.1 supports all of them MSIE 4.01 supports &amp;mdash; and &amp;#8212; but not &amp;#x2014; Netscape 4.04 supports &amp;#8212; but not &amp;mdash; or &amp;#x2014; Netscape 3.04 and 2.02 support none of them, showing "?" in place of &amp;#8212; 
to follow up on what Charles said: 
There is also an issue with the programs that originate, HTML, as opposed to interpreting in. 
That is to say, don't represent an &amp;mdash; as &amp;#151, etc, but use the SGML entity names or ISO character numbers for them. 
Al Gilman 
With regards to checking if browsers support special symbols: I bounced elements of this thread over to the style list server (www-style@w3.org), and Liam Quinn (liam@htmlhelp.com) 
wrote to refer me to a web page at the URL http://www.htmlhelp.com/reference/html40/entities/ . 
The pages there have tables that say what the characters should look like, alongside your browser's rendition of them. 
I noticed that my current browser, Navigator 4.0, supported very little *except* m-dash. 
Matt. 
[Pawson, David] Surely the simple need is for IE4.xx and netscape to implement ISO latin 1? [I.e. be capable of displaying the correct glyphs for each entity in the set]. 
In deference to those out there who only live in MSDOS, perhaps this should be a switchable option? 
My logic says that the html generator programs will follow the browsers fairly rapidly. 
I.e. the html editor software programs. 
Is that 
reasonable? 
My only real concern is that the single ISO latin 1 is only one of a number needed for true internationalisation. 
A Unicode shift would give a real move forward, permitting a wider use of the other entity sets. 
regards, DaveP 
The codepages 850 for DOS and 1252 for Windows adequately (IMHO) encompass the Latin 1 (iso-8859-1) character set. 
The problem has two aspects: (1) The HTML editor software programs are not respecting that the values of numeric character references are for the HTML Document Character Set, which it iso-10646 (essentially, Unicode) as of HTML 4.0, and iso-8859-1 (a subset of iso-10646) in previous HTML specs, and are generating numeric character references in the range reserved for control characters -- disallowed for HTML -- but corresponding to intended characters such as fancy dashes and quotation marks in the Windows codepage; (2) that the browsers are treating these character references in that range as references to the corresponding characters in the Windows codepage, rather than as disallowed values in the HTML Document Character Set. 
Both aspects of the problem need to be addressed simultaneously, or you are likely to find yourself in the position of hoping that the tail can wag the dog. 
The HTML 4.0 specs now include named character references for all of the characters which are presently being handled via invalid numeric character references (except smiling face :). 
Here is a list of the invalid nurmeric character references being encountered on today's Web, and their correct numeric (in hex notation) and named references: Conversions of invalid numeric (MicroSoft codepage) character references to valid Unicode numeric or named character reference (names as in HTML 4.0). 
INVALID Numeric Named Character &amp;#1; - &amp;#x263a; (none) WHITE SMILING FACE &amp;#130; - &amp;#x201a; &amp;sbquo; SINGLE LOW-9 QUOTATION MARK &amp;#132; - &amp;#x201e; &amp;bdquo; DOUBLE LOW-9 QUOTATION MARK &amp;#133; - &amp;#x2026; &amp;hellip; HORIZONTAL ELLIPSIS &amp;#134; - &amp;#x2020; &amp;dagger; DAGGER &amp;#135; - &amp;#x2021; &amp;Dagger; DOUBLE DAGGER &amp;#137; - &amp;#x2030; &amp;permil; PER MILLE SIGN &amp;#139; - &amp;#x2039; &amp;lsaquo; SINGLE LEFT-POINTING ANGLE QUOTATION MARK &amp;#145; - &amp;#x2018; &amp;lsquo; LEFT SINGLE QUOTATION MARK &amp;#146; - &amp;#x2019; &amp;rsquo; RIGHT SINGLE QUOTATION MARK &amp;#147; - &amp;#x201c; &amp;ldquo; LEFT DOUBLE QUOTATION MARK &amp;#148; - &amp;#x201d; &amp;rdquo; RIGHT DOUBLE QUOTATION MARK &amp;#149; - &amp;#x2022; &amp;bull; BULLET &amp;#150; - &amp;#x2013; &amp;ndash; EN DASH &amp;#151; - &amp;#x2014; &amp;mdash; EM DASH &amp;#152; - &amp;#x02dc; &amp;tilde; SMALL TILDE &amp;#153; - &amp;#x2122; &amp;trade; TRADE MARK SIGN &amp;#155; - &amp;#x203a; &amp;rsaquo; SINGLE RIGHT-POINTING ANGLE QUOTATION MARK As I noted in a previous message, for accessibility reasons Lynx 2.7.2 is performing the above conversions of invalid numeric character references, but that's a catch-22. 
We're now seeing messages like this from people who rely on the empirical behavior of browsers instead of understanding and complying with the standards for interoperability: "We gee, &amp;#145; and &amp;#146 get me the quotation marks in Lynx, and it's developers are fussy about standards, so that must be OK." Sigh... &amp;#x263a; Note that a number of smiley and frowney characters are available in iso-10646, and I hope the named entities for them are added to the HTML specs soon, because the present situation on the Web is a serious threat to world peace. 
:) Fote Foteos Macrides Worcester Foundation for Biomedical Research MACRIDES@SCI.WFBR.EDU 222 Maple Avenue, Shrewsbury, MA 01545 
