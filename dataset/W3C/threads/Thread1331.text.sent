These are the comments that I think may be more controversial. 
(II.1) F and T should be false and true to allign the direction of the XML Schema look of allignment with XML schema wherever we can (at least by value). 
(II.2) Require the value of DAV:comment to be XML, for internationalization. (II.3) Don't constrain the value of DAV:creator-displayname to be a string. 
(II.4) Require version-name to be XML, for internationalization. (II.5) Move all DAV:supported-xxx properties to the OPTIONS response. 
Move all DAV:xxx-collection-set properties to the OPTIONS response. 
(II.6) Require that a version URL never be re-used after a version is deleted. 
(II.7) Add tokens for If header that check whether specific checkout/checkin forking behavior is supported by the server. 
(II.8) Allow "ancestor", "descendant", (or both), and "all" as options to the DAV:version-tree report. 
(II.9) Require that a PUT to a locked auto-versioned resource be just CHECKOUT/update (i.e. omit the CHECKIN). 
Then have an UNLOCK of an auto-checked-out versioned resource be a CHECKIN. 
Can somebody clarify what this would mean: Whether or not I agree with this, I find the phrase "version URL" to be ambiguous enough that I'm not certain what this comment is supposed to mean, so I'll start with an example: - foo.doc is created - foo.doc is made versioned and "foo.doc.__v1__" is defined as the relative version URL - All of foo.doc is deleted - foo.doc is created - foo.doc is made versioned, NOW, according to this suggestion, the current version CANNOT be called foo.doc.__v1__ therefore is called foo.doc.__v2__ 
Is that the intent? 
if so, I'd have to disagree with this; although it might be desirable for a server to avoid ever having a version URL re-used, it ought not to be part of the standard. 
I don't actually think it's relative to the standard, although it may be very relative to good server design. 
lisa The term "version URL" simply means a URL that identifies a version. 
In your example I'm not sure what you mean by "relative URL". 
Servers may support deleting individual versions (as well as the entire versioned resource). 
It would be undesirable for servers to reuse version URLs since they represent a 'stable' reference to a particular state of the resource, and may be used as such by other persistent resources. 
Clearly if the server reuses a URL that would be a bad thing in such circumstances. 
Tim "Lisa Dusseault" lisa@xythos.com on 2000-12-12 08:56:57 PM Please respond to "Lisa Dusseault" lisa@xythos.com 
ietf-dav-versioning@w3.org Subject: RE: comments on deltav-10.5 from Yaron Goland, Act Two Can somebody clarify what this would mean: Whether or not I agree with this, I find the phrase "version URL" to be ambiguous enough that I'm not certain what this comment is supposed to mean, so I'll start with an example: - foo.doc is created - foo.doc is made versioned and "foo.doc.__v1__" is defined as the relative version URL - All of foo.doc is deleted - foo.doc is created - foo.doc is made versioned, NOW, according to this suggestion, the current version CANNOT be called foo.doc.__v1__ therefore is called foo.doc.__v2__ 
Is that the intent? 
if so, I'd have to disagree with this; although it might be desirable for a server to avoid ever having a version URL re-used, it ought not to be part of the standard. 
I don't actually think it's relative to the standard, although it may be very relative to good server design. 
lisa From: "Geoffrey M. Clemm" geoffrey.clemm@rational.com 
(II.1) F and T should be false and true to allign the direction of the XML Schema look of allignment with XML schema wherever we can (at least by value). 
Done. 
(II.2) Require the value of DAV:comment to be XML, for internationalization. Removed the restriction that it be a string, but did not require it to be XML. 
(II.3) Don't constrain the value of DAV:creator-displayname to be a string. 
Done. 
(II.4) Require version-name to be XML, for internationalization. Removed the restrictin that it be a string, but did not require it to be XML. 
(II.5) Move all DAV:supported-xxx properties to the OPTIONS response. 
Move all DAV:xxx-collection-set properties to the OPTIONS response. 
Done. 
(II.6) Require that a version URL never be re-used after a version is deleted. 
Done. 
(II.7) Add tokens for If header that check whether specific checkout/checkin forking behavior is supported by the server. 
Deferred. 
This can be added later if there is sufficient interest. 
(II.8) Allow "ancestor", "descendant", (or both), and "all" as options to the DAV:version-tree report. 
Deferred. 
This can be added later if there is sufficient interest. 
(II.9) Require that a PUT to a locked auto-versioned resource be just CHECKOUT/update (i.e. omit the CHECKIN). 
Then have an UNLOCK of an auto-checked-out versioned resource be a CHECKIN. 
Done. 
Cheers, Geoff See tim tags below. 
"Geoffrey M. Clemm" geoffrey.clemm@rational.com on 2000-12-21 03:27:57 PM Please respond to "Geoffrey M. Clemm" geoffrey.clemm@rational.com 
Subject: Re: comments on deltav-10.5 from Yaron Goland, Act Two From: "Geoffrey M. Clemm" geoffrey.clemm@rational.com 
(II.1) F and T should be false and true to allign the direction of the XML Schema look of allignment with XML schema wherever we can (at least by value). 
Done. 
(II.2) Require the value of DAV:comment to be XML, for internationalization. Removed the restriction that it be a string, but did not require it to be XML. 
(II.3) Don't constrain the value of DAV:creator-displayname to be a string. 
Done. 
(II.4) Require version-name to be XML, for internationalization. Removed the restrictin that it be a string, but did not require it to be XML. 
So what's a guy to do? 
If it is not necessarily XML it must be handled as a String -- which means all of those 's and &amp;'s must be escaped. 
Of course if a different client retrieves the comment and the XML is un-escaped on the way out, it won't be internationalized to the client's taste. 
I guess that the objection to it's being XML is that the comment is typically accessible by other (non-NLS'd) tools that would only expect a String. 
(II.5) Move all DAV:supported-xxx properties to the OPTIONS response. 
Move all DAV:xxx-collection-set properties to the OPTIONS response. 
Done. 
Do we need DAV:supported-live-properties? 
Servers are required to protect the names of all live properties (whether they support them or not), so PROPPATCH will fail if the property is unsupported. 
Servers should not define a live property that it does not support, and PROPFIND would return 404 Not Found. 
(II.6) Require that a version URL never be re-used after a version is deleted. 
Done. 
(II.7) Add tokens for If header that check whether specific checkout/checkin forking behavior is supported by the server. 
Deferred. 
This can be added later if there is sufficient interest. 
(II.8) Allow "ancestor", "descendant", (or both), and "all" as options to the DAV:version-tree report. 
Deferred. 
This can be added later if there is sufficient interest. 
(II.9) Require that a PUT to a locked auto-versioned resource be just CHECKOUT/update (i.e. omit the CHECKIN). 
Then have an UNLOCK of an auto-checked-out versioned resource be a CHECKIN. 
Done. 
Cheers, Geoff (II.4) Require version-name to be XML, for internationalization. Removed the restrictin that it be a string, but did not require it to be XML. 
So what's a guy to do? 
If it is not necessarily XML it must be handled as a String -- which means all of those 's and &amp;'s must be escaped. 
Of course if a different client retrieves the comment and the XML is un-escaped on the way out, it won't be internationalized to the client's taste. 
I guess that the objection to it's being XML is that the comment is typically accessible by other (non-NLS'd) tools that would only expect a String. 
I think it should be XML too. 
Remember PCDATA is acceptable XML, and its just a string. 
This should follow the same convention as DAV:owner for lock owners for example. 
