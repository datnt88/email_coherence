I started to test the package with my newbie mode and here is some comments: The zipfile does not create its own directory. 
would be nice if the package unzip in a directory such as "DOML1Core-20020206". 
It is important imo to use the date as a version number. 
correct the link to NIST logo. 
Copy the W3C Icon (instead of link to the web site) copy activity-home.css and toc.js (instead of a link to the web site) Overview provide a link to http://www.w3.org/DOM/Test on the text "DOM Conformance Test Suite" 
Running the ECMA tests - I tried to run alltest.html 
but it did nothing. 
Seems to be at least the same error as Jason (I use mozilla 0.9.8) 
So I applied the patch from Curt and it worked: Runs: 290 Errors: 63 Failures: 25 
I got 3/4 javascript warnings in the console but it worked. 
Running the Java tests: - add "junit-run.jar is in dist/" (java -jar dist/junit-run.jar) 
- if I run java -jar junit-run.jar 
in dist/, the program output: Exception in thread "main" java.lang.NoClassDefFoundError: org/w3c/dom/DOMImplementation 
move the sentence "The parser must be put in the dist directory" before the command line. 
- Once I got the interface, I don't see anything to select. 
If I put org.w3c.domts.level1.core.TestXerces or ...AltConfig, it keeps saying "failed to invoke suite():java.lang.NoSuchMethodError". 
I do have xerces.jar 
in dist/ ... I looked into dom1-core.jar 
and this class doesn't seem to exist? 
Copyight: (s/Copyight/Copyright) please provide a link to a copy of this file in the package? 
(similar to the one included in the DOM specs packages) missing section "How to contribute"? 
Unfortunately, that was the only way I could find to fake a synchronous parse with Mozilla. 
That should be described as an expected exception if you don't have a parser in the classpath. 
The first way described to run the tests should be: java -jar dom1-core.jar 
Which will run all tests in two modes on the default JAXP parser and print results to the console. 
The "TestXerces" and other classes are JUnit specific and therefore are located in junit-run.jar. 
JUnit's GUIs don't populate the combo box (at least for us), but do remember previous entries. 
I haven't seem that message before, it would indicate that the class was loaded, but the suite method doesn't exist which should not be the case. 
Any more diagnosis you could provide would be appreciated. 
I copied a xerces.jar 
found in the CVS repository of xerces itself. 
After checks, it appears that the jar file didn't contain all the relevant class files. 
It worked after using the appropriate xerces.jar. 
I tried with Xerces 2.0 but xercesImpl.jar doesn't seem to be the right jar file to use. 
Philippe 
For Xerces-J 2, you need both xercesImpl.jar and xmlParserAPIs.jar in the directory. 
comments inlined I'll update the sidtro so that it contains stylesheets, pictures and so forth, even though I think the IPR disclaimer should point to W3C, especially sine a verbatim is provided in the matrix. 
For the rest: 
[dd] I'll add a section saying that the TS is produced in accordance with the Process docuemtn and point to it from there. 
[dd] I left this out on purpose since it is a distribution with source files; i could include relevant info in the main page with appropriate links 
