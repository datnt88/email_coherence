I'm forwarding Jon's message to HC, and I have also told Jon to followup on this forum rather than on IG. ------- Forwarded Message Date: Fri, 31 Oct 1997 13:53:45 -0600 From: Jon Gunderson jongund@staff.uiuc.edu 
Subject: HTML Specifications for Accessibility Is there any attributes in the current proposal for adding text to selectors when they are rendered in a browser. 
For example in the following style sheet excerpt is an example of how text could be added to automatically to label selectors for people using screen readers, or other forms of speech output or enlarged text using an attribute named "preamble". 
** style sheet ** H1 { preamble: "Header Level 1" font-family: times-roman font-size: 12 } ** HTML ** ** Screen Display *** Header Level 1 Introducation to CSS The speech system would identify the text as a header since it would be rendered on the screen, yet the user could select what they wanted (if at 
all) the message to say. 
This is similar to a concept proposed in the Auditory Style Sheets. 
Jon Gunderson, Ph.D., ATP Coordinator of Assistive Communication and Information Technology Division of Rehabilitation - Education Services University of Illinois at Urbana/Champaign 1207 S. Oak Street Champaign, IL 61820 Voice: 217-244-5870 E-mail: jongund@uiuc.edu 
WWW:http://www.staff.uiuc.edu/~jongund 
------- End of Forwarded Message 
** style sheet ** H1 { preamble: "Header Level 1" font-family: times-roman font-size: 12 } ** HTML ** ** Screen Display *** Header Level 1 Introducation to CSS I saw an example of this being demonstrated last week, being labelled as an example of a 'primary browser'. 
This was in an audio presentation of html. 
I found it very effective in 'labelling' content. 
Fully support this as a way of describing content in a useful manner. 
From: Dave Pawson. 
RNIB(UK) e-mail dpawson@rnib.org.uk 
At one point there was a proposal for inserting text before or after an element. 
Sadly this was rejected by the CSS and FP working group. 
I think there is a good case to be made for the more specific proposal for speak-before and speak-after, defined in a similar manner to cue-before and cue-after. 
For example: 
Property name: 'speak-before' (or 'speak-after') Value: "quoted text" | none Initial: none Applies to: all elements Inherited: no Percentage values: N/A where the "quoted text" is a quoted text string to be spoken before (or after) the rendering of the given element. 
cue-before and cue-after are limited to auditory icons specified via a URL. 
speak-before and speak-after would provide a means to insert text directly from the style sheet. 
Regards, -- Dave Raggett dsr@w3.org 
http://www.w3.org/People/Raggett World Wide Web Consortium (on assignment from HP Labs) 
to follow up on what Dave Raggett said: 
This approach sounds good. 
I might want to name them say-before and say-after as opposed to speak-etc. 
because the content is text, not sound, and these expansions may find use in "verbose" styles in other media as well as in audio. 
-- Al 
to follow up on what Dave Raggett said: 
[Good suggestion snipped.] 
Along the same lines of "what _can_ we get if we can't have everything," there is a limited form of variables that is needed to make Jason's idea of a SpeakCell (or SpeakRow or SpeakCol) attribute work. 
That is the capability to pull a multi-stage attribute dereference into the pattern. 
An example piece of content you want to be able to use in such an attribute is related to the current entity instance by the relationship: "the content of a cell which has an ID mentioned in the HEADERS attribute, or in whose SCOPE I fall." 
This is much less general than a complete "define-includable-fragment" capability, but it would really help us to pull together related pieces of an HTML structure which are not juxtaposed in the syntax tree. 
That's in the category of "I am convinced we want it; I am not convinced we can get it." -- Al 
To be more specific: there have been several proposals for generated text and it was agreed that CSS 2.0 would not proceed to Proposed Recommendation status until it was able to render the content of ALT attributes (which implies being able to deal with generated text, and also to get at the value of attributes). 
One proposal, which would have provided richly styled generated text, as rejected as being too complex. 
A following proposal was rejected as being too simple and not meeting the needs of designers. 
Murray Maloney argued persuasively that generated text was needed, and at his suggestion the CSS2 specification has a placeholder for the section on generated text. 
Any contributions to filling in that placeholder are of course welcome. 
Chris Lilley, W3C [ http://www.w3.org/ ] Graphics and Fonts Guy The World Wide Web Consortium chris@w3.org 
2004 Rt des Lucioles / BP 93 
Was the proposal made for disability access purposes? 
Can proposals be resubmitted with arguements that address concerns of other W3C members? 
Jon Gunderson, Ph.D., ATP Coordinator of Assistive Communication and Information Technology Division of Rehabilitation - Education Services University of Illinois at Urbana/Champaign 1207 S. Oak Street Champaign, IL 61820 Voice: 217-244-5870 E-mail: jongund@uiuc.edu 
WWW:http://www.staff.uiuc.edu/~jongund 
The proposed say-before and say-after properties (I am using Al's names) have my support as well. 
They are similar in design to my speakrow and speakcell properties. 
In connection with the latter, Al is correct in observing that the HEADER variable in SPEAKCELL would require the user agent to be able to identify the headers associated with the current cell (namely the cell which is to be spoken). 
Given the HEADERS and SCOPE attributes in HTML, this requirement should be easily satisfied. 
The only problem here is that the solution would be somewhat HTML-specific and may not apply to other structured document formats such as XML documents, at least without software support from the user agent and appropriate markup constructs in the DTD. 
Great! I am glad this is space for it in CSS 2.0. 
I am not sure what "generatred text" means. 
But I would like to propose the use of a new style attribute to add text labels to selectors. 
Using styles would give persons with disabilities the capability to customize the labels to their own needs. 
What can I do to help foster this proposal? 
Jon 
Jon Gunderson, Ph.D., ATP Coordinator of Assistive Communication and Information Technology Division of Rehabilitation - Education Services University of Illinois at Urbana/Champaign 1207 S. Oak Street Champaign, IL 61820 Voice: 217-244-5870 E-mail: jongund@uiuc.edu 
WWW:http://www.staff.uiuc.edu/~jongund 
to follow up on what Chris Lilley said: 
Would you give us references to the failed proposals (too complex, too limited) so we have an idea of the range a solution would fall in? 
This next one is tough, but would be enormously helpful. 
For the too-complex version, what are the 3-5 main ideas or capabilities used in that proposal, and how would _you_ rank these in order of increasing difficulty of selling them to implementors? 
-- Al 
