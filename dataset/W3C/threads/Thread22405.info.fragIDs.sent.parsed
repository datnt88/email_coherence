(S1 (S (S (ADVP (RB Hi)) (, ,) (NP (PRP I)) (VP (VBD encountered) (NP (NP (DT the) (JJ following) (NNS problems)) (PP (IN in) (NP (DT the) (NN core) (NN specification)))))) (: :) (: -) (S (NP (NP (DT The) (NN NotMyChildException)) (SBAR (WHNP (WDT that)) (S (VP (AUX is) (VP (VBN thrown) (PP (IN in) (NP (DT some) (NNP Node) (NNS operations)))))))) (VP (AUX does) (RB n't) (VP (VB appear) (PP (IN in) (NP (DT the) (NNP Node) (NNP interface) (NN definition)))))) (. .)))
(S1 (S (: -) (NP (NP (DT The) (NN explanation)) (PP (IN of) (NP (NP (DT the) (NN operation) (NNP Node.getNodeType)) (-LRB- -LRB-) (-RRB- -RRB-)))) (VP (VBZ says) (SBAR (S (NP (DT an) (NN enum)) (VP (AUX is) (VP (VBN used) (S (VP (TO to) (VP (VB indicate) (NP (DT the) (NN type))))) (SBAR (IN while) (S (NP (DT that)) (VP (AUX is) (RB not) (ADJP (JJ true)) (ADVP (RB anymore)))))))))) (. .)))
(S1 (S (PP (IN By) (NP (DT the) (NN way))) (, ,) (NP (PRP it)) (VP (AUX is) (ADJP (JJR better)) (S (VP (TO to) (VP (VB use) (NP (NP (NNS constants)) (CONJP (RB instead) (IN of)) (NP (NNS enums)))))) (SBAR (IN because) (S (NP (NN code)) (VP (MD would) (VP (VB break) (SBAR (WHADVP (WRB when)) (S (NP (JJ new) (NNS types)) (VP (AUX are) (VP (VBN added)))))))))) (. .)))
(S1 (S (PP (IN In) (NP (NN fact))) (NP (NP (NN none)) (PP (IN of) (NP (DT the) (CD two)))) (VP (AUX are) (ADJP (JJ necessary)) (SBAR (IN because) (S (S (NP (PRP we)) (ADVP (RB already)) (VP (AUX have) (NP (QP (CD CORBA) (CD ::)) (NN Object) (NN ::) (NNS is_a)))) (-LRB- -LRB-) (-RRB- -RRB-)))) (. .)))
(S1 (S (: -) (NP (PRP It)) (VP (AUX is) (RB n't) (ADJP (JJ specified)) (SBAR (WHADVP (WRB where)) (S (NP (NP (DT the) (NN iterator)) (VP (VBN returned) (PP (IN by) (NP (NNP Node.getChildNodes))))) (-LRB- -LRB-) (-RRB- -RRB-) (VP (AUX is) (ADJP (VBN positioned)) (, ,) (PP (FW i.e.) (PP (IN at) (NP (DT the) (JJ first) (NN node))) (CC or) (PP (IN before) (NP (DT the) (JJ first) (NN one)))))))) (. .)))
(S1 (S (NP (DT Both) (NNS policies)) (VP (MD can) (VP (AUX be) (VP (VBN encountered) (PP (IN in) (NP (JJ public) (NNS libraries)))))) (. .)))
(S1 (S (PP (IN For) (NP (DT the) (NN moment))) (NP (PRP I)) (VP (VBP assume) (SBAR (S (NP (PRP it)) (VP (AUX is) (VP (VBN positioned) (PP (IN at) (NP (DT the) (JJ first) (NN node)))))))) (. .)))
(S1 (S (: -) (NP (NNP NodeIterator.toNth) (-LRB- -LRB-) (-RRB- -RRB-)) (VP (MD should) (ADVP (RB also)) (VP (VB return) (NP (NNP NoSuchNodeException)) (SBAR (IN if) (S (NP (DT the) (NN argument)) (VP (AUX is) (ADJP (JJ negative)) (SBAR (IN because) (S (NP (DT the) (NN argument) (NN type)) (VP (AUX is) (RB not) (ADJP (JJ unsigned)))))))))) (. .)))
(S1 (S (: -) (NP (NNP NodeIterator.toNth) (-LRB- -LRB-) (-RRB- -RRB-)) (VP (AUX is) (ADJP (JJ inconsistent))) (. .)))
(S1 (S (NP (PRP It)) (VP (VBZ says) (SBAR (S (NP (PRP it)) (VP (VBZ returns) (ADVP (RB null)) (SBAR (IN if) (S (NP (DT the) (NN iteration)) (VP (VBZ leads) (PP (TO to) (NP (NP (DT a) (NN position)) (PP (IN beyond) (NP (NP (DT the) (NN end)) (PP (IN of) (NP (DT the) (NN list)))))))))))))) (. .)))
(S1 (S (NP (PRP It)) (ADVP (RB also)) (VP (VBZ says) (SBAR (S (NP (PRP it)) (VP (VBZ throws) (NP (DT a) (NN NoSuchException)) (SBAR (IN if) (S (NP (DT the) (NN argument)) (VP (AUX is) (ADJP (ADJP (JJR greater) (IN that) (JJ NodeIterator.getLength)) (-LRB- -LRB-) (-RRB- -RRB-))))))))) (. .)))
(S1 (S (: -) (NP (DT The) (NNP TreeIterator) (NNP interface)) (VP (AUX is) (RB n't) (VP (VBN used) (ADVP (RB anywhere)))) (. .)))
(S1 (S (SBAR (IN As) (S (NP (PRP it)) (VP (AUX is) (NP (DT a) (JJ general) (NN purpose) (NN tree) (NN iterator))))) (NP (PRP it)) (VP (MD could) (VP (AUX be) (ADVP (RB simply)) (VP (VP (VBN created) (PP (IN on) (NP (PRP$ its) (JJ own)))) (CC and) (VP (VBN initialized) (PP (IN with) (NP (NP (DT some) (NN Node)) (PP (IN from) (SBAR (WHADVP (WRB where)) (S (NP (NN navigaton)) (VP (MD should) (VP (VB start)))))))))))) (. .)))
(S1 (S (NP (DT The) (NN following)) (VP (MD should) (ADVP (RB then)) (VP (AUX be) (VP (VBN added) (PP (IN in) (NP (DT the) (NNP Document) (NNP interface))) (: :) (NP (NP (JJ TreeIterator) (NN createTreeIterator)) (PRN (-LRB- -LRB-) (PP (IN in) (NP (NNP Node) (NN startPoint))) (-RRB- -RRB-)))))) (: ;)))
(S1 (S (: -) (NP (PRP I)) (VP (VBP see) (NP (NP (DT no) (NN reason)) (SBAR (WHADVP (WRB why)) (S (NP (NNP Document)) (VP (MD should) (VP (AUX be) (VP (VBN derived) (PP (IN from) (NP (NNP DocumentFragment)))))))))) (. .)))
(S1 (S (: -) (NP (NNP Element.attributes)) (VP (MD should) (VP (AUX be) (VP (VBN called) (S (NP (NNP Element.getAttributes)) (VP (TO to) (VP (AUX be) (ADJP (JJ consistent)))))))) (. .)))
(S1 (S (: -) (NP (NP (DT The) (NN explanation)) (PP (IN of) (NP (NN getElementsByTagName))) (PP (IN in) (NP (NN Document) (CC and) (NN Element)))) (VP (VBZ says) (: :) (`` ``) (S (VP (VBZ Returns) (NP (DT an) (NN iterator)) (PP (IN through) (NP (DT all) (JJ subordinate) (NNS Elements))) (PP (IN with) (NP (DT a) (VBN given) (NN tag) (NN name)))))) (. .) ('' '')))
(S1 (S (SBAR (IN If) (S (NP (PRP I)) (VP (VBP understand) (NP (DT this))))) (, ,) (NP (DT the) (NN iterator)) (VP (MD will) (VP (VB see) (NP (NP (RB only) (DT a) (NN subset)) (PP (IN of) (NP (NP (DT the) (JJ subordinate) (NNS elements)) (VP (VBN selected) (PP (IN with) (NP (DT a) (NN tag) (NN name))))))))) (. .)))
(S1 (S (PP (IN In) (NP (DT that) (NN case))) (NP (EX there)) (VP (MD should) (VP (AUX be) (NP (DT an) (NN argument)))) (. .)))
(S1 (S (NP (PRP It)) (VP (MD could) (ADVP (RB also)) (VP (VB mean) (SBAR (IN that) (S (NP (DT all) (JJ subordinate) (NNS elements)) (VP (AUX are) (VP (VBN returned) (S (VP (VBN ordered) (PP (IN by) (NP (DT the) (NN tag) (NN name))))))))))) (. .)))
(S1 (S (PP (IN In) (NP (DT that) (NN case))) (NP (DT the) (NN explanation)) (VP (AUX is) (RB not) (ADJP (JJ correct))) (. .)))
(S1 (S (NP (DT This) (NN meaning)) (VP (AUX is) (RB not) (ADJP (RB very) (JJ usefull)) (ADVP (RB anyway)) (PP (IN in) (NP (PRP$ my) (NN opinion)))) (. .)))
(S1 (NP (: -) (NP (NP (NN Everything)) (PP (IN in) (NP (NP (DT the) (NNP XML) (NN specification)) (SBAR (WHNP (WDT that)) (S (VP (AUX has) (S (VP (TO to) (VP (AUX do) (PP (IN with) (NP (DT the) (NN document) (NN type))))))))))))))
(S1 (S (NP (NN definition)) (, ,) (S (VP (VBG ie) (NP (NP (RB almost) (DT the) (NN whole)) (PP (IN of) (NP (PRP it)))))) (, ,) (VP (MD should) (VP (AUX be) (PP (IN in) (NP (NNP Core))) (SBAR (IN because) (S (NP (PRP it)) (VP (AUX is))))))))
(S1 (NP (NP (JJ common)) (PP (TO to) (NP (NNP XML) (CC and) (NNP HTML))) (. .)))
(S1 (S (PP (IN In) (NP (NNP HTML))) (NP (NP (DT a) (NN number)) (PP (IN of) (NP (NNS operations)))) (VP (MD will) (VP (VB return) (NP (NP (JJ empty) (NNS lists)) (PP (IN of) (NP (NN course)))))) (. .)))
(S1 (S (VP (VB Note) (SBAR (IN that) (S (NP (DT the) (NN Attribute) (NNP interface)) (VP (VBZ refers) (S (VP (TO to) (VP (VB document) (NP (NN type) (NN information))))))))) (. .)))
(S1 (S (: -) (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (NNP Element.attributes)) (VP (MD should) (VP (AUX be) (NP (NNP Element.getAttributes))))))) (. .)))
(S1 (S (: -) (NP (NNP Is) (NNP Element.normalize)) (VP (VBD recursive)) (. ?)))
(S1 (S (: -) (NP (NP (DT The) (NN sentence)) (PP (IN below) (NP (NNP Text.delete)))) (VP (AUX is) (ADJP (JJ wrong))) (. .)))
(S1 (S (: -) (NP (NP (DT The) (NN explanation)) (PP (IN of) (NP (NNP Text.splice)))) (VP (AUX is) (ADJP (RB quite) (JJ obscure))) (. .)))
(S1 (SBARQ (WHNP (WP What)) (SQ (VP (VBZ happens) (PP (TO to) (NP (DT the) (JJ original) (NN node))))) (. ?)))
(S1 (SBARQ (WHADVP (WRB Why)) (SQ (VP (AUX is) (RB n't) (NP (NP (DT the) (VBN inserted) (NN element)) (CONJP (RB not) (RB also)) (NP (NP (RB just) (DT a) (NN sibling)) (PP (IN of) (NP (DT the) (JJ original) (NN node))))))) (. ?)))
(S1 (NP (NP (DT A) (JJ general) (NN comment)) (: :) (S (NP (PRP It)) (VP (MD would) (VP (AUX be) (ADJP (JJ nice)) (SBAR (IN if) (S (NP (NP (DT the) (NNS types)) (PP (IN of) (NP (DT the) (NNS arguments)))) (VP (AUX were) (VP (VBN included) (PP (IN in) (NP (NP (DT the) (NNS specifications)) (PP (IN of) (NP (DT the) (JJ individual) (NNS operations)))))))))))) (. .)))
(S1 (S (SBAR (IN With) (S (NP (NN kind)) (VP (VBZ regards)))) (, ,) (NP (NP (NNP Werner) (NNP Donne) (POS ')) (NNP Re) (NNP BVBA) (NNP Leuvenselaan) (CD 172) (NNP B-3300) (NNP Tienen) (NN E-mail)) (: :) (NP (NN wdonne)) (VP (SYM @) (NP (NN ibm.net)))))
(S1 (S (NP (NP (NNS Thanks)) (PP (IN for) (NP (PRP$ your) (ADJP (RB very) (JJ perceptive)) (NNS comments)))) (: ;) (S (NP (NP (DT those)) (SBAR (WHNP (WDT that)) (S (VP (AUX are) (ADVP (RB outright)) (NP (NNS errors)))))) (VP (MD will) (VP (AUX be) (VP (VBN fixed))))) (, ,) (NP (NP (DT those)) (SBAR (WHNP (WDT that)) (S (VP (VBP call) (PP (IN for) (NP (NN discussion))))))) (VP (MD will) (VP (AUX be) (VP (VBN discussed)))) (. !)))
(S1 (NP (DT A) (JJ few) (NNS questions/comments) (: :)))
(S1 (FRAG (WHADVP (WRB Why)) (RB not) (. ?)))
(S1 (S (NP (PRP It)) (VP (AUX 's) (NP (NP (DT a) (JJ special) (NN type)) (PP (IN of) (NP (NNP DocumentFragment))) (SBAR (WHNP (WDT that)) (S (VP (AUX has) (NP (NP (JJ addtional) (NNS properties)) (SBAR (WHNP (WDT that)) (S (VP (VBP pertain) (ADVP (RB only)) (PP (TO to) (`` ``) (NP (JJ top-level) (`` ``) (NNS documents)))))))))))) (. ?)))
(S1 (S (NP (EX There)) (VP (AUX is) (NP (DT a) (JJ strong) (NN feeling) (SBAR (SBAR (IN that) (S (NP (DT the) (NNP Core)) (VP (MD should) (VP (AUX be) (ADJP (ADJP (RB as) (JJ small)) (PP (IN as) (ADJP (JJ possible)))))))) (, ,) (CC and) (SBAR (IN that) (S (NP (NP (DT any) (NNS objects)) (SBAR (WHNP (WDT that)) (S (VP (AUX are) (RB not) (ADJP (JJ relevant) (PP (TO to) (NP (NNP HTML) (NNS users)))))))) (VP (MD should) (RB not) (VP (AUX be) (VP (VBN represented) (PP (IN in) (NP (NNP Core))))))))))) (. .)))
(S1 (SQ (AUX Do) (NP (PRP you)) (VP (VB see) (NP (DT a) (JJ serious) (NN problem)) (PP (IN with) (S (VP (VBG leaving) (NP (NNS DTDs)) (PP (IN out) (PP (IN of) (NP (NNP Core)))))))) (. ?)))
(S1 (NP (NNP Yes.) (NNP Mike) (NNP Champion)))
(S1 (S (NP (DT No) (PRP I)) (VP (AUX do) (RB n't)) (. .)))
(S1 (S (NP (DT The) (NNP Core) (CC and) (NNP XML) (NNS parts)) (VP (AUX are) (NP (NP (DT the) (NNS ones)) (SBAR (WHNP (WDT that) (NN interest)) (S (S (NP (PRP me)) (NP (DT the) (RBS most))) (CC and) (S (NP (PRP I)) (VP (MD will) (VP (AUX be) (VP (VBG using) (NP (PRP them)) (PRT (RP together)) (ADVP (RB anyway)))))))))) (. .)))
(S1 (S (NP (PRP I)) (VP (VBP understand) (SBAR (S (NP (PRP it)) (VP (MD would) (VP (AUX be) (ADJP (JJ unusual)) (S (VP (TO to) (VP (VB consult) (NP (DT the) (NNS DTD))))) (SBAR (WHADVP (WRB when)) (S (VP (VBG working) (PP (IN with) (NP (DT a) (NNP HTML) (NN document))))))))))) (. .)))
(S1 (S (S (ADVP (RB Strictly)) (VP (VBG speaking) (NP (DT this)))) (VP (MD could) (VP (AUX be) (ADJP (JJ possible)) (ADVP (RB however)) (, ,) (SBAR (IN because) (S (NP (DT an) (JJ implicit) (NN DTD)) (VP (AUX is) (ADVP (RB always)) (ADJP (JJ present)) (PP (IN for) (NP (NNP HTML)))))))) (. .)))
(S1 (S (CC But) (NP (PRP it)) (VP (AUX is) (ADVP (RB indeed)) (RB not) (ADJP (JJ important))) (. .)))
(S1 (NP (NP (VBZ Regards)) (, ,) (NP (NNP Werner) (NNP Donn)) (. ?)))
(S1 (NP (NP (NNP Re) (NNP BVBA) (NNP Leuvenselaan) (CD 172) (NNP B-3300) (NNP Tienen) (NN E-mail)) (: :) (NP (NN wdonne)) (X (SYM @) (NP (NN ibm.net)))))
(S1 (S (CC And) (ADVP (RB indeed)) (RB not) (VP (JJ desirable) (PP (IN as) (NP (NP (DT a) (NN requirement)) (PP (IN for) (NP (DT a) (NNP HTML) (NNP DOM) (NN implementor)))))) (. .)))
(S1 (S (NP (DT The) (NN DOM) (NN group)) (VP (AUX is) (VP (VBG aiming) (PP (IN for) (NP (NP (DT a) (NN specification)) (SBAR (WHNP (WDT that)) (S (VP (AUX is) (ADJP (JJ complete) (, ,) (CC yet) (JJ practical)) (, ,) (PP (DT both) (IN for) (NP (NNS implementors) (CC and) (NNS users)))))))))) (. .)))
(S1 (NP (NN --Vidur)))
