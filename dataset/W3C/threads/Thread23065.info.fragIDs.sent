1. LAST CALL ANNOUNCEMENT: DOM LOAD AND SAVE This is the last call announcement from the W3C DOM Working Group (DOM WG) for review of the DOM Level 3 Load and Save Specification. 2. REQUEST FOR DOCUMENT REVIEW 
The DOM WG asks for review of the following document: Document Object Model (DOM) Level 3 Load and Save Specification 
This specification defines the Document Object Model Load and Save Level 3, a platform- and language-neutral interface that allows programs and scripts to dynamically load the content of an XML document into a DOM document and serialize a DOM document into an XML document; DOM documents being defined in [DOM Level 2 Core http://www.w3.org/TR/2003/WD-DOM-Level-3-LS-20030619/references.html#DOM2Core ] or newer, and XML documents being defined in [XML 1.0 http://www.w3.org/TR/2003/WD-DOM-Level-3-LS-20030619/references.html#XML ] or newer. 
The document is available at: 3. HOW TO SEND COMMENTS Comments from any W3C Working Group or Member of the Community are welcome on: www-dom@w3.org 
mailto:www-dom@w3.org?Subject=Re:%20Last%20Call%20for%20DOM%20Level%203%20Core&amp;In-Reply-To= 3EE603E5.9050303@aol.com 
&amp;References= 3EE603E5.9050303@aol.com 
archived at: and will be added to the last-call issues list at: 4. INTENTIONS OF DOM WG Unless the review uncovers substantial problems, the next step will be to recommend the document for publication as Candidate Recommendation to gain implementation experience. 
5. IMPLEMENTATION EXPERIENCE The DOM WG is looking for implementations of the draft. 
If you, or your company, are planning to implement (or already has an implementation of) this DOM module and are willing to participate in the Candidate Recommendation phase with your implementation, please let us know by sending a message to the public mailing list www-dom@w3.org. 
6. END OF REVIEW PERIOD The Last Call review period ends at 5p Pacific Time on July 31, 2003. 
7. REQUESTED REVIEWS The following Working Groups are especially invited to provide review comments: - XML Core - I18N Any other groups or individuals are encouraged to send comments as appropriate. 
8. PATENT DISCLOSURES A page about Patent disclosures for the DOM WG is found at: No patents have been disclosed at this time. 
Thank you, Ray Whitmer, for the DOM WG 
Just a few minor issues I noticed implementing this: DOMInput  systemId  "relative URI's" Shouldn't have an apostrophe. 
DOMParser  parse The parameter 'is' should probably be called 'input', for consistency. 
DOMSerializer  writeURI The parameter 'URI' should probably not be in capitals, for consistency. 
DOMImplementationLS A createDOMOutput method seems to be missing. 
Andrew Clover 
Regarding grammatical corrections: 
I think you may correct although I was taught to use apostrophe in this case. 
I have seen style guides that say either way, and can easily 
search and find many guides saying either way on the internet, not that I can tell the weight a particular English professor writing a style guide carries (such as We should make sure we are consistent at any rate, since the Core specification seems to always do it without apostrophe and the Load and Save specification always seems to do it with apostrophe. 
We are clearly dealing with camel casing when naming multiple-word things, which is used throughout the specification, for example: Document.documentURI. 
I know we are not always consistent, but I believe in this case our usage is correct and consistent with many other usages throughout the specification. 
Ray 
The leading authority on the issue is generally agreed to be Professor Robert T. Angryflower, whose seminal paper on the issue is at last available on the web, at his academic site: 
Seriously, apostrophes for plural abbreviations are widely considered the Wrong Thing in British English at least, despite their widespread use. 
Some - for example the style guide you quoted - advocate them for cases where the lack of punctuation could also cause confusion, for example "there are two Is in imitate" vs. "I's", though situations like this can often be avoided by other means. 
"URIs" isn't one of those cases, anyway, so regardless of the merits of the argument one would irritate fewer pedants this way. 
;-) 
On the other hand, other methods are using 'uri', and throughout the spec parameters are always begun with a lower case character, in keeping with common style from languages like Java. 
The naming issue is not normally important, of course, but it could conceivably have an impact in Python, where parameters can be passed by name as well as position in the argument list. 
Andrew Clover 
I am not arguing that we should settle on URI's, but you mischaracterized the one example I cited that clearly did not restrict it as you claim, but only said "Rarely" and I quote from its examples: * Instead of &amp;'s in your sentences, use and's and other additive conjunctions. 
* Most of my friends have M.S.'s and PhD's. 
* Mind your P's and Q's. 
* She used to sell BMW's; now she sells IRA'S at BofA's throughout the state. 
The explanation was that without the apostrophe, it is confusing whether the s is part of the abbreviation or not. 
The argument could be made that because these acronyms are typically all-caps, adding the s to the end is not too ambiguous (assuming that the upper-case S used to make IRA plural is an error) but that is not a case made by the cited page or its examples. 
I find the example of BMW's hardly different from that of URI's. 
Sorry, I rushed that one and thought you were talking about writeURI and not the URI parameter. 
It is not about camel casing, and should be made consistent with other parameters. 
You are correct. 
Ray 
All of the above have been corrected. 
Thanks for your feedback! 
jst 
