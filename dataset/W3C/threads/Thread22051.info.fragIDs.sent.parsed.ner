(TOP (S (NP (NP (JJ Several) (JJ XPath) (NNS tests)) (PRN (-LRB- -LRB-) (PP (IN for) (NP (NN example))) (, ,) (NP (NNP XPathExpression_evaluate_NOT_SUPPORTED_ERR)) (-RRB- -RRB-))) (VP (VBD used) (NP (DT the) (NN string) (JJ literal) (`` ``) (NN dummy) ('' '')) (PP (IN as) (NP (DT a) (JJ namespace) (NN resolver)))) (. .)) )
(TOP (S (NP (PRP I)) (VP (VBP believe) (SBAR (S (S (NP (NP (DT all)) (PP (IN of) (NP (DT these) (NNS tests)))) (VP (VBD expected) (NP (DT an) (NN exception)) (PP (IN for) (NP (JJ other) (NNS reasons))))) (CC and) (S (NP (DT the) (NN type) (NN mismatch)) (VP (MD would) (VP (AUX have) (VP (VBN satisified) (NP (NP (DT the) (NN expectation)) (PP (IN of) (NP (DT an) (NN exception))))))))))) (. .)) )
(TOP (S (SBAR (IN If) (S (NP (NNP Mozilla)) (ADVP (RB actually)) (VP (VBZ takes) (NP (NP (DT a) (NN string)) (ADJP (JJ literal) (PP (IN as) (NP (DT an) (JJ namespace) (NN resolver)))))))) (, ,) (NP (PRP we)) (VP (MD should) (VP (VB add) (NP (NP (DT a) (NN test)) (SBAR (WHNP (WDT that)) (S (VP (VBZ asserts) (SBAR (IN that) (S (NP (DT an) (NN implementation) (NN specific) (NN exception)) (VP (AUX be) (VP (VBN thrown))))))))))) (. .)) )
(TOP (FRAG (ADVP (RBS Most)) (SBAR (IN if) (S (NP (RB not) (DT all) (NN load) (NNS statements)) (VP (AUX were) (VP (VBG missing) (NP (JJ willBeModified) (NNS attributes)))))) (. .)) )
(TOP (S (NP (DT The) (NN DTD)) (VP (MD can) (RB n't) (VP (VB distinguish) (PP (IN between) (NP (NP (DT the) (JJ inner) (NN class) (NN load) (NN method)) (SBAR (S (NP (NP (NN definition) (NN element)) (CC and) (NP (NP (DT the) (NN framework) (NN load) (NN statement) (NN element)) (, ,) (ADJP (RB so) (JJ willBeModified)))) (VP (AUX is) (ADJP (JJ optional)) (PP (IN in) (NP (DT the) (NNP DTD)))))))))) (. .)) )
(TOP (S (ADVP (RB However)) (, ,) (NP (PRP it)) (VP (AUX is) (VP (VBN required) (PP (IN for) (NP (NP (DT the) (NN framework) (NN load) (NN statement) (NN element)) (PP (IN in) (NP (DT the) (NN schema))))))) (. .)) )
(TOP (S (NP (NNPS Conformance_Expressions)) (VP (VBD used) (NP (NP (DT a) (NN lot)) (PP (IN of) (NP (VB append) (NNS statements)))) (S (VP (TO to) (VP (VB add) (NP (NNS items)) (PP (TO to) (NP (NP (DT a) (NN list)) (PP (IN of) (NP (NNS statements))))))))) (. .)) )
(TOP (S (NP (DT These)) (VP (AUX were) (NP (NP (NN change)) (PP (IN per) (NP (DT the) (JJ previous) (NN message))))) (. .)) )
(TOP (S (S (NP (NP (DT The) (NN reason)) (SBAR (S (NP (NNP Mozilla)) (VP (AUX does) (RB n't) (VP (VB throw) (NP (NP (DT an) (NN exception)) (SBAR (WHADVP (WRB when)) (S (NP (DT a) (NN string)) (VP (AUX is) (VP (VBN passed) (PP (IN as) (NP (DT a) (JJ namespace) (NN resolver))))))))))))) (VP (AUX is) (SBAR (IN that) (S (NP (DT the) (NN argument)) (VP (AUX is) (ADVP (RB still)) (RB not) (VP (VBN used) (, ,) (SBAR (IN so) (S (NP (DT the) (NN string)) (VP (VP (VBZ goes) (PP (IN through) (NP (DT the) (JJ JS-to-C++) (NN layer)))) (CC and) (VP (VBZ gets) (VP (VBN converted) (PP (TO to) (NP (DT the) (JJ appropriate) (NN type)))))))))))))) (, ,) (CC but) (S (SBAR (IN since) (S (NP (PRP it)) (VP (AUX 's) (RB not) (VP (VBN used))))) (, ,) (NP (DT no) (NN exception)) (VP (AUX is) (ADVP (RB ever)) (VP (VBN thrown)))) (. .)) )
(TOP (S (S (NP (DT This)) (VP (AUX is) (PP (IN of) (NP (NN course))) (NP (RB not) (DT the) (NN intent)) (PP (IN in) (NP (location (NNP Mozilla)))))) (, ,) (CC and) (S (NP (DT the) (NN fact) (SBAR (IN that) (S (NP (PRP we)) (VP (AUX do) (RB n't) (VP (VB throw) (NP (DT an) (NN exception))))))) (VP (AUX is) (NP (NP (RB just) (DT a) (NN shortcoming)) (PP (IN in) (NP (NP (NP (NNP Mozilla) (POS 's)) (JJ current) (NN support)) (PP (IN for) (NP (NNP DOM) (NNP XPath)))))))) (. .)) )
(TOP (NP (NNP jst)) )
(TOP (S (PRP I) (VBN used) (DT a) (NN dummy) (NN resolver) (CC and) (NN expression) (NN string) (IN in) (VB XPathExpression.evaluate) (TO to) (VB get) (DT the) (NN test) (NN createExpression) (CD interface=) (`` ``) (NN XPathEvaluator) ('' '') (CD obj=) (POS ') (NN xpEvaluator) (POS ') (CD var=) (POS ') (NN xpathExpression) (POS ') (CD expression=) (POS ') (NN //foo) (POS ') (CD resolver=) (POS ') (NN nullNSResolver) (POS ') (NNP /) (NN createEntityReference) (CD var=) (`` ``) (NN contextNode) ('' '') (CD obj=) (`` ``) (NNP doc) ('' '') (VB evaluate) (CD interface=) (`` ``) (NN XPathExpression) ('' '') (CD obj=) (POS ') (NN xpathExpression) (POS ') (CD expression=) (POS ') (NN dummy) (POS ') (CD resolver=) (POS ') (NN dummy) (POS ') (CD var=) (POS ') (NN result) (POS ') (CD contextNode=) (POS ') (NN contextNode) (POS ') (CD type=) (POS ') (CD 0) (POS ') (CD result=) (POS ') (NN nullResult) (POS ') (NNP /) (TO to) (VB validate) (IN in) (DT the) (NNP ML) (IN since) (NNP interface) (NN XPathExpression) (-LRB- -LCB-) (VB DOMObject) (VB evaluate) (-LRB- -LRB-) (IN in) (NNP Node) (NN contextNode) (, ,) (IN in) (JJ unsigned) (JJ short) (NN type) (, ,) (IN in) (VB DOMObject) (NN result) (-RRB- -RRB-) (VBZ raises) (-LRB- -LRB-) (NN XPathException) (, ,) (NN DOMException) (-RRB- -RRB-) (: ;)) )
(TOP (SQ (AUX has) (NP (DT no) (NN resolver) (CC or) (NN expression)) (SBAR (IN although) (S (NP (DT the) (NN dom3.dtd)) (VP (AUX has) (NP (NN resolver) (CC and) (NN expression)) (SBAR (IN as) (S (VP (VBN required))))))) (. !) (VP (VB ATTLIST) (S (VP (VB evaluate) (NP (NP (NP (NP (NN id) (NN ID)) (NP (QP (# #) (VBN IMPLIED) (CD obj)) (NP (NNP CDATA) (# #) (VBN REQUIRED) (JJ var) (NN CDATA) (# #)) (VBN REQUIRED) (NN expression) (NN CDATA) (# #))) (JJ REQUIRED) (NN contextNode) (NN CDATA)) (QP (# #) (JJ REQUIRED) (JJR resolver)) (NP (NN CDATA) (# #)) (organization (VBN REQUIRED)) (NN type) (NN CDATA) (# #)) (NP (JJ REQUIRED) (NN result)) (S (NP (NNP CDATA)) (ADJP (# #) (VBN REQUIRED) (SBAR (S (NP (NP (NNP interface) (-LRB- -LRB-) (NNP XPathEvaluator|XPathExpression) (-RRB- -RRB-) (# #) (VBN REQUIRED)) (NP (DT The) (VBN generated) (NN ecmascript) (NN code))) (VP (AUX did) (RB not) (VP (VB contain) (NP (DT the) (JJ dummy) (NN string)))))))))))) )
(TOP (NP (NP (NNP xpEvaluator) (SYM =) (FW createXPathEvaluator)) (PRN (-LRB- -LRB-) (NP (NNP doc)) (-RRB- -RRB-)) (: ;) (NP (NN xpathExpression)) (X (X (SYM =)) (NP (NP (NN xpEvaluator.createExpression)) (PRN (-LRB- -LRB-) (INTJ (`` ``) (UH //foo) (`` ``) (, ,) (NN nullNSResolver)) (-RRB- -RRB-)) (: ;)))) )
(TOP (NP (NP (NNP contextNode) (SYM =) (FW doc.createEntityReference)) (PRN (-LRB- -LRB-) (`` ``) (NP (NN entityname)) ('' '') (-RRB- -RRB-)) (: ;)) )
(TOP (FRAG (NP (JJ var) (NN success)) (X (SYM =) (ADJP (JJ false))) (: ;) (VP (VB try)) (-LRB- -LCB-) (NP (NN result)) (X (SYM =)) (NP (NP (NN xpathExpression.evaluate)) (PRN (-LRB- -LRB-) (INTJ (INTJ (UH contextNode,0)) (, ,) (INTJ (VB nullResult))) (-RRB- -RRB-)) (: ;))) )
(TOP (S (NP (NN catch)) (PRN (-LRB- -LRB-) (FW ex) (-RRB- -RRB-)) (-LRB- -LCB-) (NP (NN success)) (VP (SYM =) (-LRB- -LRB-) (VP (VB ex.code)))) )
(TOP (S (NP (NNP ==) (CD 9)) (-RRB- -RRB-) (: ;) (S (NP (NP (NN assertTrue)) (PRN (-LRB- -LRB-) (INTJ (`` ``) (UH throw_NOT_SUPPORTED_ERR) (`` ``) (, ,) (NN success)) (-RRB- -RRB-)))) (: ;) (NP (DT The) (JJ real) (NN issue)) (VP (AUX is) (NP (NP (DT the) (NN requirement)) (PP (IN in) (NP (NP (DT the) (NN DTD)) (SBAR (WHNP (WDT that)) (S (VP (VB evaluate) (NP (CD interface=) (`` ``) (JJ XPathExpression) ('' '') (NNS /))) (VP (AUX have) (NP (NN expression) (CC and) (NN resolver) (NNS attributes))))))))) (. .)) )
(TOP (NP (NNP /bc)) )
(TOP (S (NP (DT The) (NN element) (NN definition)) (VP (VP (AUX is) (VP (VBN generated) (PP (IN from) (NP (NP (DT the) (JJ first) (NN occurance)) (PP (IN of) (NP (DT the) (NN method) (NN name))))))) (CC and) (VP (VBZ assumes) (SBAR (IN that) (S (NP (DT the) (NN argument) (NN list)) (VP (AUX is) (ADJP (JJ compatible))))))) (. .)) )
(TOP (S (VP (VBG Attempting) (S (VP (TO to) (VP (VB resolve) (NP (DT the) (NNS differences)) (PP (IN in) (NP (NP (DT the) (VB transform) (NN way)) (ADJP (RB too) (JJ complicated)))))))) (. .)) )
(TOP (S (PP (IN In) (NP (NP (JJ previous) (NNS cases)) (SBAR (WHADVP (WRB where)) (S (NP (DT the)) (VP (AUX was) (NP (DT a) (NN conflict))))))) (, ,) (S (NP (DT the) (JJ standard) (NN generation)) (VP (AUX was) (VP (VBN suppressed)))) (CC and) (S (NP (DT a) (JJ hand-crafted) (NN definition)) (VP (AUX was) (VP (VBN provided)))) (. .)) )
(TOP (S (NP (PRP I)) (VP (VP (AUX 've) (VP (VBN logged) (NP (DT the) (JJ last) (NN issue)) (PP (IN as) (NP (NN bug) (CD 443))))) (CC and) (VP (AUX have) (VP (VBN committed) (NP (NNS changes)) (PP (TO to) (NP (NN dom-to-schema) (CC and) (NN dom-to-dtd))) (S (VP (TO to) (VP (VB make) (S (NP (NN resolver) (CC and) (NN expression)) (ADJP (JJ optional)))))))) (CC and) (VP (AUX have) (VP (VBN removed) (NP (DT those) (NNS attributes)) (PP (IN on) (NP (NP (NNS calls)) (SBAR (S (VP (TO to) (VP (VB XPathExpression.evaluate)))))))))) (. .)) )
