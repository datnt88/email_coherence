<s> Also ideally, developers should be free to view the language as a formal expression of the application semantics and just use it as a guide for implementing it in C, Java whatever.  </s>
<s> Sounds like Scheme and DSSSL to me!!! Can we use Scheme/DSSSL to specify the link resolution "algorithm" involved in clink, ilink etc.  </s>
<s> If so, doesn't this give us a clean way of pre-defining link relationships without throwing the baby out with the bath water?  </s>
<s> The only language the charter mentions is DSSSL.  </s>
<s> The baby and the bathwater parted company there.  </s>
<s> Nothing prevents the XML developer from ignoring this.  </s>
<s> Many will, some will use the examples "out of the box".  </s>
<s> We aren't churning in circles.  </s>
<s> There are and always have been different ways to express hyperlinks (static/data object or dynamic/data structure) for years.  </s>
<s> That's not a problem as much as a fact of the history of hypermedia.  </s>
<s> Application languages settle the issue at implementation.  </s>
<s> A meta-language is problematic in that the application (in SGML terms) is in expressed by the DTD, which we are told, should have no rendering information (open to debate depending on what religion you practice in SGML).  </s>
<s> The reality is that many systems do insist on having such information in the application language and in fact, they have been well accepted and sucessful.  </s>
<s> HyTime attempts to bridge this by the concept of architectural forms which just *happen* to look like DTD fragments.  </s>
<s> The concept of groves is there to tighten up the problems with the original ESIS which did not do the job.  </s>
<s> It is a good concept based on a sound approach to parsing output.  </s>
<s> TEI bridges the gap by providing not arch forms, but actual element types (e.g, xptr) and a set of attributes for location (e.g, grep like patterns, dataloc-types, treeloc-types etc.).  </s>
<s> Both HyTime and TEI seem to be the same thing with some small variations in naming (e.g, reftype | targtype).  </s>
<s> TEI extended pointers are a sensible subset of HyTime.  </s>
<s> The are in your terms, static definitions, but their operations are defined axiomatically (i.e, in their documentation).  </s>
<s> Insofar as a static approach goes, this is all good.  </s>
<s> Avoiding dynamic definitions has the problem that no state definitions are given such as application languages like the MID provide for.  </s>
<s> It can be said that state management is an issue of the application language and whatever implementation language or framework is chosen by the application developer.  </s>
<s> However, without it, portable definitions can be created, but not true interoperable ones.  </s>
<s> If this is the case, then there may be no need for DSSSL in XML.  </s>
<s> IOW, stop with the static definitions and let the market choose the implementation language.  </s>
<s> Should the XML working group choose to consider the charter the limit of the working group's focus, then it will be best if the implementation/rendering be a non-normative set of examples.  </s>
<s> That provides the ultimate flexibility and guidance, and enables conforming XML applications without the need to implement DSSSL.  </s>
<s> Using scheme/lisp as a Bachus-Naur form is useful, but is similar to the use of the arch form/DTD fragment.  </s>
<s> It is hard to convince people they don't *have* to do it that way, so many programmers unwilling to do it that way toss the whole spec out and move on.  </s>
<s> Len Bullard Lockheed Martin  </s>
<s> This taxonomy/relationship stuff is extremely interesting but I have a yearning for some structure, some layering of the concepts being discussed to help me see the wood from the trees.  </s>
<s> I think we are going around in (highly interesting) circles but circles nevertheless owing to a lack of an agreed terminology base and an agreed layering of highly slipper concepts like "syntax", "semantics", "behaviour", "relationship" etc.  </s>
<s> I have been trying to build a mental picture of what has been discussed in recent days and have ended up with a 3 layered model (and some comments about a possible level 4).  </s>
<s> I present it here for comment, ridicule or a mixture of the two:- Layers to the XML effort Level 0 : Syntax Lexical structure of XML documents heavily based on SGML.  </s>
<s> Concerned with tokenising/separating markup from data content.  </s>
<s> Level 1 : Static Semantics "Well-formed" docs have matching start/end-tags etc.  </s>
<s> The whole doc forms a tree structure (okay then, a grove) "Valid Docs" form "sentences" of the grammer defined in the DTD.  </s>
<s> Level 2 : Application Semantics (or Dynamic Semantics) Adding run-time behavior of one form or another to the abstract data structures defined by level 1.  </s>
<s> Examples:- Rendering docs on screen, paper etc.  </s>
<s> Interpting elements as hypertext links etc. Spiders, Agents and XML data processors of all kinds.  </s>
<s> Now some opinions based on this layering and terminology:- a) The question of whether there should be pre-defined link types boils down to whether link behaviour should be at level 1 (Static Semantic) or level 2 (Dynamic Semantic) characteristic.  </s>
<s> I see link relationships such as "Approved-By" , "Is an Amendement To" etc. as a Level 1 characteristic and their behaviour as a Level 2 characteristic.  </s>
<s> b) XML certainly concerns itself with levels 0 and 1.  </s>
<s> So far, rendering is a known area of (future) XML activity that occurs at level 2. At Level 2, Link behaviour and rendering are inextricably linked.  </s>
<s> I see no sensible way to deal with them other than discuss them together.  </s>
<s> c) We don't want to hard-wire application semantics but we do want to make it easy to use XML "out of the box".  </s>
<s> Thus the desire to make Rendering Application Semantics part of XML and to make Hypertext Application Semantics part of XML.  </s>
<s> We want a formal, unambiguous way of expressing Application Semantics that does not force any particular implementation regime down anyones throats.  </s>
<s> I.e. no particular programming language, no forced "you must do it this way".  </s>
<s> d) I think we should be careful to ensure that "browsing XML on the WEB" is just one of the things you can do with XML.  </s>
<s> I can see mind-blowing applications built around XML that do not involve browsing any XML at all (except perhaps the "result" of some serious XML crunching.) e) Level 2 - Application Semantics is part of the XML effort which currently encapsulates Rendering + Hypertext.  </s>
<s> The key is to somehow implement these things at level 2 without limiting what *might* be done in the future - either in terms of additions to XML standard Application Semantics or Killer Applications developed by XML users.  </s>
<s> Tentative Conclusion We need a Level 3... Level 3 - Application Semantic Specification Language A language for the formal expression of :- How to go about rendering this document How to interpret the meaning of an "ilink" element etc. Naturally, the language should be general enough to allow currently unconsidered application semantics to be formally defined.  </s>
<s> Ideally, the language should be "executable" so that the application semantics can be executed directly as well as cross-compiled.  </s>
<s> Also ideally, developers should be free to view the language as a formal expression of the application semantics and just use it as a guide for implementing it in C, Java whatever.  </s>
<s> Sounds like Scheme and DSSSL to me!!! Can we use Scheme/DSSSL to specify the link resolution "algorithm" involved in clink, ilink etc.  </s>
<s> If so, doesn't this give us a clean way of pre-defining link relationships without throwing the baby out with the bath water?  </s>
<s> Sean Mc Grath digitome@iol.ie  </s>
<s> [Sean Mc Grath:]  </s>
<s> [Proposal omitted] My mental picture of what we're doing is more market-oriented than architectural.  </s>
<s> I'm seeing applications falling into three basic categories: 1. Applications that require extensible content markup and nothing else.  </s>
<s> Examples: interprocess communication, exchange of data between heterogeneous databases.  </s>
<s> Specification: XML. 2. Applications that also require linking but use programmed routines (typically Java applets) to generate displays or perform other processing.  </s>
<s> Examples: Pinnacles circuit modelers, airline scheduling systems, CML.  </s>
<s> Specifications: XML and XML-LINK.  </s>
<s> 3. Applications that perform linking and also need a stylesheet language to handle complex display behavior in a standard way.  </s>
<s> Examples: Advanced Web publishing applications.  </s>
<s> Specifications: XML, XML-LINK, and XML-STYLE.  </s>
<s> Please note that this is just a snapshot of my personal mental model this Sunday morning, and as a marketing view, it makes no claim to be architecturally coherent.  </s>
<s> Jon  </s>
