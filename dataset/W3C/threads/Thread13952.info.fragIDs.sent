There still exist many concerns about how we are rating and classifying 
guidelines. 
It seems there is a grey area between Recommended and Required, particularly as it relates to what can be done today and what will be possible in the future. 
Each guideline that seems to posses a problem is discussed followed by the issues. 
These wordings and numbers are from the April 14th release. 
1. Style and Structure 1. [Required] Use elements and attributes that comply with an HTML 4.0 Document Type Definition (DTD) and CSS-1. 
Issues: 
should this be Required, ever? 
Should the language change to say, "Use elements and attributes that comply with an HTML Document Type Definition (DTD) and CSS-1." so that an author can choose which DTD they want to comply with? 
However, shouldn't we nudge people towards the use of 4.0 since it includes several attributes and elements that were included to increase accessibility? 
BUT, if they do not use HTML 4.0 will a page NOT be accessible? 
3. [Required] Nest headings properly. 
and 4. [Required] Encode list structure and list items properly. 
Issues: Al asks, "if these rules are broken, [will] somebody's ability to access the page _be broken_?" 
This will depend on the user agent implementation of navigation between elements. 
It might possibly break the page for someone with a cognitive disability, or it might break the navigation scheme for the UA. 
It seems to be a usability issue but would make things much easier, especially for UAs. but are they required for accessing the page? 
6. [Recommended] Use style sheets rather than converting text to images. 
and 7. [Recommended] Use style sheets rather than invisible or transparent images to force layout. 
Issue: These seem to be appropriately marked as Recommended for today's browsers. 
In the future, might they might be Required? 
Perhaps we create a "Recommended today, Required tomorrow" category. 
However, (for #6) if alt-text is provided for the image of the text is this guideline still required? 
This seems to be a guideline that is the most elegant solution, not necessarily the most accessible, so we would like to require it on idealistic grounds. 
Should we let our ideals for page design affect our rating system? 
We *could* include in the definition of Required something along the lines of , "to satisfy our (W3C) philosophy that content and structure are separate from presentation." 
However, it is only recommended in the HTML 4.0 spec that authors do this, it is not required. 
New (would be 13) [Recommended] Ensure that text and background colors or patterns contrast well. 
Issues: Currently this is tucked back in the "Good Web Site Design Practices." 
It seems this ought to be a guideline and it ought to point to the Lighthouse site that provides guidelines for how to do this. 
Section 5, Tables 1. [Required] Associate table cells with row and column labels explicitly. 
and 2. [Required] Avoid using tables to format text documents in columns. 
Issues: #1 is doable but not supported, #2 will most likely cause an uproar. 
However, #2 is a real problem today but probably less of one in the future. 
This seems to be required today, recommended tomorrow whereas #1 is recommended today, required tomorrow. 
The issue has also been raised about exempting small tables. 
There seems to be a concensus on this, but not about where the line will be drawn. 
Is 4 by 4 a reasonable place to draw the line? 
How would the content affect where the line is drawn? 
8. [Recommended] Ensure that alternative text does not wrap within tables used to position graphics. 
I hope this one goes away soon, but where is the line that we have to cross for it to drop out? 
It is also hard to test this since there is no way to control presentation on the user end. 
Should we replace the word "Ensure" with something less stringent? 
Section 6, Links [Recommended] Create link phrases that make sense when read out of context, but that are not too verbose. 
Issues: People keep raising the issue that this should be required, although the argument still exists that it doesn't seem possible for *all* links to make sense when read out of context. 
However, if we raise it to required and change it slightly to say, "Where possible, create link phrases that make sense when read out of context, but that are not too verbose." 
Although it also makes it sound kind of iffy and fluffy (required where possible, and sounds contradictory). 
help? 
2. [Recommended] Place non-link, printable characters (surrounded by spaces) between links that occur consecutively ... Issues: Another one that will go away, but when? 
How will we know it's o.k.? Summary: There are several guidelines that fit into a grey area between Recommended and Required. 
Some should be Recommended today, Required tomorrow, others should be Required today but Recommended tomorrow, while others are Recommended today and gone tomorrow. 
It seems that these transitions 
should be clearly stated in the guidelines, but we are unsure about the 
best way to accomplish this. 
One option is: [Recommended] (in the future will be Required) OR [Required] (in the future will be Recommended) OR [Recommended] Interim Thoughts??? 
The editors 
I am concerned, and have been so for some time, that a certain proportion of HTML authors will not take seriously the strict definition of the 
"required" category in the guidelines. 
They may, therefore, choose to 
implement all of the items which are marked as required, ignore the rest, and then claim that their web sites are accessible. 
It is time to set aside the two-level classification scheme as an over-simplification, or at least to broaden the definition of "required" somewhat to include those guidelines which, if not followed, would make the document so difficult to access by certain groups of readers as to be practically unusable. 
What comments have been received so far, from web site maintainers who have sought to apply the guidelines, concerning the classification scheme? 
I agree that a note could be added to certain of the guidelines, indicating that its status is likely to change in the future, for instance from "recommended" to "required". 
For the reasons enunciated above, I have never been fully comfortable with the two-level classification system. 
I'm not in favor of making the classification more complicated than a two-level system. 
I think we could change the terms we use: both Required and Recommended (in W3C jargon especially), which are loaded, and maybe switch to Important, Paramount, i.e. more subjective words. 
Changing the names of the categories would certainly be helpful, but it would also be necessary to ensure that the definitions of the revised categories were appropriate. 
The designation "required", as it presently stands, is strictly interpreted, and it is this interpretation of the term which I suspect is likely to create confusion. 
A useful question to ask is what purpose is served by attaching different levels of importance to each of the guidelines. 
The answer seems to be that it establishes an order of priorities: the "required" guidelines would need to be implemented with greater urgency and thoroughness, when creating or, more significantly, updating an HTML document, whereas the "recommended" items can, so the term implies, be postponed. 
This is reasonable, so long as a page which conformed to only the "required" guidelines would be practically usable. 
It is from this standpoint that the classification of 
guidelines ought to be decided. 
It should also be reflected in the 
definitions by evoking a "practically unusable" criterion as the basis for making a guideline "required" (or whatever the label ultimately chosen turns out to be). 
I think, incidentally, that "paramount" would be an appropriate term, as Daniel suggests. 
Perhaps "paramount" and "recommended" would be best, or even "paramount", "strongly recommended" and "recommended". 
In the latter case, "paramount" would retain the definition presently ascribed to "required". 
In the former case, namely if the two-level scheme were preserved, "paramount" should be given a less restrictive definition by introducing the concept of practical usability. 
As an author with very recent experience on trying to apply the current guidelines to a large site-in-progress, I may have some insight to offer here. 
The only problem I have with the guidelines as they exist now is that they don't go into detail about *why* certain elements are required/recommended. 
Some guidelines are bet-hedging for accessibility in old browsers, some are wish-fulfilment for future browsers. 
Certainly, it's important to know where accessibility is going, but most designers who approach the guidelines will just want to know how to cover themselves now. 
The most important question that a designer will ask, I feel, is: "What is the minimum I have to do to ensure accessibility in most existing browsers?" 
If the guidelines don't answer this question directly, there needs to be a document that does. 
Perhaps each guideline could be annotated with a description of what it's supposed to achieve. 
Web designers could then get an overall idea of the accessibility problems they're trying to overcome, and possibly come up with innovative solutions. 
For example, the required guideline about avoiding using tables to format text in columns. 
Since 90% of commercial sites, including Netscape, Microsoft and even the very basic Yahoo break this rule, designers who don't understand the accessibility problem may assume either that this isn't a big deal, or that it's too hard to implement an alternative. 
It needs to be made clear that this is a serious issue, but for a decreasing number of users as access technology catches up with this problem. 
Perhaps the guideline should be Recommended, with a requirement for an alternative if not implemented. 
Another extremely useful addition would be an associated document which links to example sites that meet all or most of the guidelines, so web designers can see what modifications or accommodations have worked for sites similar to theirs. 
Regards, Sean Lindsay 
Editor - OutLook Magazine's Disability Web editor@outlookmagazine.com 
In response to Sean's valuable comments, the following may be noted. 
First, the central reference document, which, so far as I am aware, has not been updated so as to correspond accurately with the latest page authoring guidelines, is supposed to provide details of the rationale underlying each item in the latter document. 
There are also plans, though I am not sure how advanced they are at this point, to create a web site that will furnish examples of appropriate design practice. 
I would argue that the requirement not to use tables so as to format text in columns is of paramount importance, since existing screen readers are unable to differentiate columns and will thus read the text (or display it in braille) in the sequence in which it appears on the screen, from top to bottom and left to right. 
Also, future assistive technologies will attempt to locate the header cell that corresponds to each data cell in the table. 
If the table is used for layout purposes, this algorithm will not be applied correctly, as there are no headers as such, and the results may well be confusing to the reader. 
Most commercial web designers will have a heart attack if you tell them they should not use tables for multicolumn layout. 
They may counter-argue that their design is no less accessible than Yahoo or CNET, or suggest that any user who has a problem with tables should use Lynx. 
It is unrealistic to expect them to abandon their otherwise effective designs to accommodate what they will consider a minor demographic. 
These designers are painfully aware that the vast majority of their readers will be using N/IE 3/4, and they have one screen's worth of information to hook readers before they go elsewhere. 
The possibilities of future browsers are also not likely to sway them, since many sites now use database publishing to construct pages as they are requested, and could makes changes to accommodate new browser features easily. 
I can implement a new design across my 200+ page site in an hour, for example, and I'll probably update the site a hundred times between now and when the next generation of browsers appear. 
A change to a component on a dynamic website will take effect immediately. 
For the designers of a server-based dynamic website, the best solution to accessibility might be add a cookie-based instruction to assemble a text-only version of the site for users that specifically request it, by clicking on a link on the front page. 
Many sites do something like this already, using Javascript to fetch information on the browser and serving a page to match the browser's capabilities. 
Come to think of it, you could do this in DHTML, using a Javascript button to instruct the browser to move the various page elements (defined in CSS) into a sequential order. 
You could even write the website's interface in XML and make it completely customisable by the user (bye bye frames!). 
Of course, these options are unfeasible in today's browsers, but they could be quite reasonable choices by year's end. 
(And by year's end it's possible that designers will be creating HTML-based alternatives to XML-based websites.) 
My point being: I think it's of paramount importance to explain what the problem is, offer solutions from best to least desirable, give some examples of effective design, and let the designer choose the best way to apply it on their site. 
Regards, Sean Lindsay 
Editor - OutLook Magazine's Disability Web editor@outlookmagazine.com 
From: w3c-wai-gl-request@w3.org 
[mailto:w3c-wai-gl-request@w3.org]On 
Behalf Of Jason White Sent: Wednesday, 6 May 1998 8:20 Subject: RE: Murky ratings 
[snip] 
At the WWW7 conference, there was some discussion of the need to generalise the guidelines by abstracting the principles of universal design from their specific HTML implementation, and then providing examples in HTML/CSS, XML, etc. 
The consensus seemed to be that such an effort would be appropriate in the design of the second version of the authoring guidelines. 
It seems that such a plan would accommodate Sean's suggestions. 
It will be interesting to notice how quickly XML is actually adopted by web site designers. 
I would be sceptical of a solution that relies on client-side scripts, since many people with disabilities are likely to be depending upon Lynx, the W3 browser within Emacs or another text-based solution which does not support client-side scripts. 
The best solution is to use CSS positioning instead of tables to prescribe the visual appearance of a document. 
With CSS 2 now at the proposed recommendation stage, and with positioning features having been available in draft form since last year, it is to be hoped that software implementors will soon be able to provide support for it, thereby relieving authors of the temptation to abuse table markup, at least once the new browsers are adopted by the public. 
As to the issue of convincing site developers to follow the guidelines, this problem is being most ably addressed by the WAI International Programme Office. 
I remain convinced that the prohibition against the abuse of tables for columnar layout purposes should remain, as a required (or paramount) item in the guidelines. 
I also heard the term Crucial, to replace Required. 
Let me try to explain the situation as I understand it, and then give my opinion. 
If a TABLE columnar layout is used, and done in such a way that ignoring the TABLE markup (like Lynx does today) leads to a logical reading order that makes sense (like the W3C home page today), then there is no problem except in one case. 
This is the case where a dumb (i.e. markup unaware) screen reader is used, reading the output of graphical browsers (NS/IE) that present the TABLE data in columns while the screen reader reads it line by line. 
The ideal solution to this one case is the use of CSS (instead of TABLE markup) to do column layout, because then, the user can override the author CSS with its own CSS that change this columnar layout in something linear and suitable for the dumb screen reader. 
Several comments: - CSS properties that can replace TABLE markup are not there yet in a reliable way, meaning authors will unlikely switch before I'd say at least 6 to 9 months. 
- Graphical browser side features that allow for good user override of CSS properties are not there yet (IE has some) either. 
- Graphical browser side feature that would linearize the TABLE are not there yet but would solve the problem equaly (that's what lynx is doing in fact) - A proxy linearizer service would also solve the problem equally, at the price of some inconvenience (performance, security), but it can be implemented right away (some already exist) Overall, I think it's not worth making this item a Required/Paramount. 
I would hope most people will switch away from this one combination (dump screen reader/ graphical browser) in the coming months, but if not, I would push for a solution in the graphical browser (UA guideline can handle) and in a temporary proxy linearizer. 
CPL:: I prefer Crucial to replace Required. 
Page Author Guidelines Working Group cpl@starlingweb.com 
(613) 820-2272 
The remarks I made about Javascript and XML solutions were intended as flippant - but they reflect my belief that if you explain what the problem is to a halfway decent web designer, especially a professional, they will come up with an innovative solution that best suits their website, and their audience. 
Perhaps I'm confused as to the intent of the Guidelines themselves? 
Is the intention to steer designers towards best practices for accessibility, or to assist in identifying/solving existing accessibility problems? 
I suspect that Jason is advocating the former while I am advocating the latter. 
Both are necessary in one form or another, and obviously it's a shame that as yet they are not perfectly compatible. 
I believe it's too early to advocate a CSS-only solution. 
Current support for CSS is so varied that pages will not only look inconsistent, but in some cases (in IE3) can actually look worse than plain structural HTML. 
A page that displays poorly and inconsistently in graphical browsers may be technically accessible, but it forms a barrier for sighted users. 
The lack of consistent CSS support today's browsers is an issue that designers will have to accommodate for another year or more at least, just as designs often still accommodate the limitations of v2.0 browsers. 
If the guidelines insist on designing for tomorrow's browsers at the expense of today's, you are asking designers to ignore the majority of their current audience. 
The guidelines need to advocate accessibility as well as define it. 
A designer reading the guidelines is still deciding whether the changes are worth implementing. 
It may be the first, and only, document they read on the subject. 
As a designer I want to know what conditions I need to meet to guarantee 100% accessibility for my users - but I'll settle for satisfactory accessibility 100% of the time. 
I also want to know how to achieve this with the minimum amount of alteration to my existing design, and disruption for existing users. 
Currently the guidelines don't answer the second question. 
And as a designer who's responding to a complaint from a user (in my case this is literally true), I can't wait for browsers or authoring tools to catch up, and more than I could ask the user (now or in the future) to upgrade their software. 
Regards, Sean Lindsay 
Editor - OutLook Magazine's Disability Web editor@outlookmagazine.com 
In answer to Sean's question, the guidelines tend to emphasise long term solutions, although the immediate needs are intended to be met by the "interim" recommendations. 
Owing to the time that is required to develop and revise successive versions of the page authoring guidelines, I think the emphasis on solutions that will become available during, for instance, the next 12-18 months would be perfectly appropriate. 
The next version of the guidelines would be generalised so as to take account of XML and other emerging standards. 
Since one of the main objects of the guidelines is to promote best practice from the standpoint of universal design, the misuse of HTML elements should be strongly discouraged. 
The main problem with regard to tables appears to be that braille and audio formatting technologies will be unable to distinguish between what is, and what is not, a genuine table, and this is likely to give rise to difficulties, such as an attempt to locate row and column headers. 
To minimise inconvenience for the user and for the software developer, the best solution is to ensure that table markup is introduced into a document only for its intended purpose, namely, as a representation of tabular data. 
Perhaps the best solution would be as follows: The prohibition expressed in the guidelines against using tables to produce columnar layout should be interim and recommended, with a note that this will be strictly required in the future, as soon as CSS positioning is supported by user agent software. 
On the other hand, those who are using screen reading technology with a graphical browser will still find such pages inaccessible, in the absence of a server-side linearisation service. 
Perhaps the recommendation could be: either do not use tables as a mechanism for producing columnar layout, or provide a server-side linearisation script, with a link that enables the user to activate it and receive a decolumnised version of the page. 
This guideline would be classified as "required". 
The required future strategy would be to use CSS positioning ("new" and "required"). 
I apologize for the following long posting, but I do feel that it addresses the problems in the current structure of the guidelines with a reasonable and simple alternative providing a great deal more power and flexibility. 
Josh Krieger CAST I'm beginning to see some common issues in the current WAI guidelines which, in terms of the current framework, are hard to resolve and which will continue to cause problems in the future. 
These issues primarily revolve around the longevity of individual guidelines (when in time they begin to be relevant and when they cease to be relevant) and an attempt to, I think incorrectly, entirely tease out authoring issues from browser and assistive technology issues. 
The model we have been working with is one of a static set of guidelines in which we determine as of the release date of the guidelines, whether a page is accessible or not in regards to some ill-defined population using an unknown browser and unknown assistive technology. 
For example, take this apparently simple guideline: 2.1. 
[REQUIRED] Provide alternative text for image maps. 
Solution: Use the "alt" attribute on AREA tags. 
The following qualifying information is never mentioned: 1. 
The guideline is not relevant for HTML before version 3.2 since at that point in time there was no ALT support in the AREA tag. 
An 
alternative approach must then be taken here. 
See point 6 below. 
2. Even if the page were authored during or after HTML 3.2, if a blind person were using Netscape Navigator 3.0 or IE 3.0, regardless of the screen reader, the image map would not be accessible because Navigator didn't display the ALT text for AREA tags then. 
3. In IE 4.01, if image loading is turned off, the alt text for the image map areas are not available because the image map is replaced only by the image alt text. 
4. When Jaws 3.2 is release this month or next, because of the IE 4.0 document object model, IE 4.01 now becomes accessible with regards to this guideline. 
5. A page that uses this guidelines is accessible for people who are blind using any screen reader and Lynx 2.5, 2.6, 2.7 6. If the strategy of using the ALT attribute is ineffective for a particular browser, one should provide redundant links in the body of the HTML page. 
What we see clearly is that the seemingly specific guideline 2.1 is actually inadequate to convey a detailed notion of accessibility. 
This is not because the guideline is wrong, but simply because it is not defined with regards to the specific browsers and ATs for which it is relevant. 
By defining this relationship, we also define a notion of 
longevity of the guideline which replaces the problematic interim label. 
For example, let's rewrite guideline 2.1 as follows: Guideline: Provide alternative text for image maps. 
Solution: Use the "ALT" attribute on AREA tags. 
Guideline Relevant For: America On-Line Browsers v2.5,v2.6,v2.7,v3.0 
Assistive Technology Relevant For: All screen readers Population Affected: Non-sighted Guideline: Provide alternative text for image maps. 
Solution: Use the "ALT" attribute on AREA tags. 
Guideline Relevant For: Internet Explorer 3.0,4.0 
Assistive Technology Relevant For: All screen readers Population Affected: Non-sighted Guideline: Provide alternative text for image maps. 
Solution: Use the "ALT" attribute on AREA tags. 
Guideline Relevant For: Internet Explorer 4.01 Assistive Technology: Jaws v1.0,v2.0,v3.0 
Population Affected: Non-sighted [ In this last example note that Jaws v3.2 is not included because, with regards to this guideline, IE 4.01 is accessible] I've only included the first three instances of this guideline above, but check out the last section of this document for some more examples. 
Also, I defined these instances as separate entries, but practically one could define a very simple computer language that would allow the expression of all these variants in a single structure. 
Ratings: Building the guidelines as a collection of these instances allows us to create a complete database of what accessibility means with regards to HTML over many years. 
Such a database can then be used to GENERATE documents containing lists of accessibility guidelines that are relevant for particular people and organizations' needs. 
We lose very little by storing the guidelines in this new format. 
In fact, if we so chose, we could generate the current guidelines automatically. 
For example, we've found with Bobby that we can't just change the standard on people suddenly requiring their organizations to implement a whole new set of accessibility measures on thousands of pages of which they've already invested considerable time making accessible. 
Some government organizations established policies requiring Bobby and HTML 3.2 approval before posting pages on their internet site and those pages don't cease to be accessible if Bobby or the guidelines suddenly change. 
Besides, if an organization wants their pages to be as accessible as possible and yet still has an HTML 3.2 policy, we can't suggest they add all sorts of HTML 4.0 tags. 
It doesn't make sense. 
All these issues now arise as we attempt to encourage the use of the accessibility support built into HTML 4.0. 
These issues will continue to arise in the future as more changes and additions are made. 
I do also want to add that by labeling individual guidelines as Recommended/Required we essentially implement a de facto rating scheme. 
Further, this rating scheme is fixed in time. 
This is not the purpose of the guidelines! 
The guidelines need to be separate from rating and well defined in time. 
Given that our database exists as I described above, we can then define an abstract measure of accessibility that can change at predefined intervals (i.e. once every year). 
For example, what CAST now calls "Bobby Approved" could mean that all database entries for Netscape Navigator 4.0, Internet Explorer 4.0, and Lynx 2.7, that are relevant to all affected populations with all possibilities for assistive technologies are taken care of (well that's a little broad, but you get the point). 
In this way, web accessibility can be well defined and measurable according to annual WAI policy decisions about what accessibility means with regards to the database. 
Additional information to store with the guidelines There are probably other relevant items that people want to store with each guideline, but it occurs to me that it would also be useful to have an entry for whether or not a guideline can be automated (can a program like Bobby find it without human intervention). 
More examples: Below are some more examples of how the guidelines could be rewritten: 2.1. 
Provide alternative text for images. 
Guideline: Provide alternative text for images Solution: Add "ALT" text to image tags. 
Guideline Relevant For: All browsers Assistive Technology Relevant For: All screen readers Population Affected: Non-sighted Guideline: Insure that alt text does not wrap for images: Solution: Browser dependent Guideline Relevant For: All browsers except IE 4.01 Assistive Technology Relevant For: All screen readers Population Affected: Non-sighted 4.1. 
Provide a text transcript of all audio information Guideline: Provide a text transcript of all audio information Solution: Full audio transcripts include spoken dialogue as well as?. Guideline Relevant For: All browsers Assistive Technology Relevant For: None Population Affected: Non-hearing 
I think you might want to take a look at RFC1980 (Aug 1996), where this type of client side image map was officially launched. 
There you would find the ALT attribute documented (though admittedly it was declared to be optional in that RFC). 
So, I would say that AREA has had an ALT attribute as long as it has officially existed. 
I disagree with the approach that the guidelines should be based on for what browser something works or not. 
For the guidelines to be stable they should be based on specs. 
Collecting this data about browsers may be useful for _users_ to decide what browser to use. 
Authors should not be bothered with features of particular browsers. 
I think that the guidelines already take current (in a few months obsolete) browsers features/bugs too much (e.g., "avoid word wrapping..." how can you do that? 
this dependes on font size and resolution of the monitor.) 
It is much more _practical_ to specify in what _theoretical_ browsers it works: Example: Use alt in AREA : HTML 3.2 and 4.0 conforming browsers. 
Population affected: sighted users with images turned off, among others. 
Note: HTML 2.0 does not support the AREA element thus an HTML2.0 browser wouldn't create a link at all. 
Population affected: all users of HTML2.0 browsers. 
Concerning institutions that have guidelines like "HTML3.2 and Bobby Approved", I say: if a page is not consistent with the guidelines as it fails to implement an HTML4.0 feature (say, summary in TABLE), it should be upgraded to HTML4.0. 
Practically, any valid HTML3.2 document is also a valid HTML4.0 transitional one. 
One doesn't have to rewrite the whole page, just to add the new feature. 
Institutions should set guidelines like "current W3C recommendation" (current with respect to document's creation date, not the guidelines date) rather than HTMLy.x . 
The approval of Bobby should also be dependent on Bobby's criteria on the creation date of the document. 
This way no inconsistencies can occur. 
Regards, Nir Dagan 
I agree entirely with Nir's position and would strongly oppose any attempt to take account of the limitations of specific browsers, or specific browser and assistive technology combinations, in the guidelines. 
What is needed is a set of guidelines which, it should be remembered, will be in use and circulation for some time, and which will not only assist authors in the further development and refinement of their existing web sites, but which will also be incorporated, thanks to the "education and outreach" component of the WAI, into training materials, governmental regulations, etc. 
For this reason, it would be wrong to recommend obsolete solutions which are only necessitated by limitations of particular implementations. 
Instead, the guidelines should be formulated in terms of browsers that comply with different versions of the HTML specification (2.0, 3.2 and 4.0). 
This approach need not be stated explicitly, but it should be, and to a large extent has been, implicitly operative in the distinction between "new" and "interim" recommendations. 
Moreover, since the "authoring tool" working group is relying on the page authoring guidelines to provide recommendations of best practice which will be paralleled in their own recommendations, it is clear that whatever this group recommends will be setting in concrete as a standard that will be normative for a considerable time. 
In this and other fora, page authors have argued, quite reasonably, that they should not be expected to compensate for the inadequacy of outdated technology. 
Also, they should not be expected to adopt one solution today and a different approach in the future. 
To some extent, it is appropriate to take account of those features of HTML 4.0 that have not yet been implemented; and this is achieved by the "interim" recommendations in the guidelines. 
It is time to set aside, so far as possible, the problems of the past and work toward developing a long lasting solution which will ensure that the Web can in principle become universally accessible, meaning, concretely, that it will embody the characteristics which Gregg Vanderheiden has so aptly termed "medium independence" and "medium redundancy". 
The "interim" guidelines, so long as they are firmly based on different versions of the HTML specification and assume correct implementation thereof, will provide a bridge between solutions applicable to HTML 3.2 technology, and the new HTML 4.0 and CSS framework. 
I agree *in concept* with what is said below, but if authors have no practical way to test their pages, then the rating should be reconsidered. 
I agree entirely with Nir's position and would strongly oppose any attempt to take account of the limitations of specific browsers, or specific browser and assistive technology combinations, in the guidelines. 
What is needed is a set of guidelines which, it should be remembered, will be in use and circulation for some time, and which will not only assist authors in the further development and refinement of their existing web sites, but which will also be incorporated, thanks to the "education and outreach" component of the WAI, into training materials, governmental regulations, etc. 
For this reason, it would be wrong to recommend obsolete solutions which are only necessitated by limitations of particular implementations. 
Instead, the guidelines should be formulated in terms of browsers that comply with different versions of the HTML specification (2.0, 3.2 and 4.0). 
This approach need not be stated explicitly, but it should be, and to a large extent has been, implicitly operative in the distinction between "new" and "interim" recommendations. 
Moreover, since the "authoring tool" working group is relying on the page authoring guidelines to provide recommendations of best practice which will be paralleled in their own recommendations, it is clear that whatever this group recommends will be setting in concrete as a standard that will be normative for a considerable time. 
In this and other fora, page authors have argued, quite reasonably, that they should not be expected to compensate for the inadequacy of outdated technology. 
Also, they should not be expected to adopt one solution today and a different approach in the future. 
To some extent, it is appropriate to take account of those features of HTML 4.0 that have not yet been implemented; and this is achieved by the "interim" recommendations in the guidelines. 
It is time to set aside, so far as possible, the problems of the past and work toward developing a long lasting solution which will ensure that the Web can in principle become universally accessible, meaning, concretely, that it will embody the characteristics which Gregg Vanderheiden has so aptly termed "medium independence" and "medium redundancy". 
The "interim" guidelines, so long as they are firmly based on different versions of the HTML specification and assume correct implementation thereof, will provide a bridge between solutions applicable to HTML 3.2 technology, and the new HTML 4.0 and CSS framework. 
If an author today were to perfectly follow the current 
incarnation of the WAI guidelines and make a web page theoretically accessible, would that page necessarily be practically accessible to anyone today? 
Moreover, how could we determine if it would be accessible to someone in the future? 
And at what date in the future? 
(consider CSS absolute positioning) Do we have any guarantee that future combinations of assistive technology and the browsers with which they work will actually support these authored features in a single uniform way that conveys the extra information for accessibility? 
If not, there will need 
to be additional guidelines that provide alternative strategies to make pages accessible. 
The simple AREA ALT tag example in my original posting illustrates just this problem (and it gets much worse, just try doing such an analysis for each guideline). 
It is problematic to imagine that at some point we will achieve a fixed standard for authoring, independent of browsers and assistive technology, which, if met, defines the true/false accessibility of a page. 
This is clear to me from the many feedback letters Bobby gets where people write, "I did X,Y,Z which are in the guidelines and it says my page is accessible, but such and such a person can't access this information." 
Or the reverse, I did X,Y,Z and a person who is blind says my page is accessible, but your program says its not." 
In the heterogeneous world of the web, will this ever change? 
Each guideline already has implicitly defined a set of browsers and assistive technology for which it refers. 
We can choose to ignore this implicit assignment and claim that we are establishing a standard for accessibility but we ultimately shoot ourselves in the foot. 
All I am arguing for is storing MORE information with each guideline (not less). 
But information which provides a very exacting notion of accessibility and anchors this notion to moments in time as a function of the technology that people use. 
This extra information could then be used by a program to CREATE a set of guidelines of which the current WAI working guidelines would be one instance. 
I like Nir's comment below that a theoretical browser construct would also be useful. 
In such a procedure a guideline might be marked with being relevant for HTML 4.0 (an imaginary browser that perfectly conforms to the HTML 4.0 spec) and, when real browsers and assistive technology combinations exist that support this feature they are added to the extra data in the guideline. 
For example: Guideline: Use CSS for all absolute position Solution: ... Description of how to do this ... Population Affected: Non-sighted Guideline Relevant For: HTML 4.0 Assistive Technology Relevant For: None Guideline Relevant For: IE 5.0 Assistive Technology Relevant For: Jaws 4.0 I think it's important NOT to overly separate our notions of future (and sometimes theoretical) accessibility from present accessibility. 
After all, there will always be many people using many different technologies. 
Josh Krieger CAST 
In regards to your comment about recommending obsolete solutions. 
This is not what I'm advocating. 
I am advocating creating a database of individual guidelines marked with extra information regarding the browsers and assistive technologies for which they are relevant. 
These 
guidelines can then be compiled by a simple program into a different collections that suit our varying needs. 
One compilation could be what we we now consider the WAI authoring working draft, but another collection would be the WAI working draft plus those guidelines that are necessary for making pages accessible on current versions of IE 4.0, Netscape 4.0, and the major screen readers. 
Such an approach provides a definitive notion of accessibility that takes into account the past, present, and future of the guidelines while denying the idea of a single measure of accessibility. 
Josh Krieger CAST 
Thanks; that was, at any rate for me, a useful clarification of your position. 
As a matter of fact, I composed quite a long reply to you yesterday based on my understanding of what you had said: you had appeared to be advocating the writing of guidelines for old documents written to obsolete versions of HTML, and/or to be viewed by obsolete browser versions, or by browsers that had been deliberately chosen to be inappropriate to the needs of the particular reader. 
I then decided that I must have misunderstood your intentions, so I didn't send the mail, instead I waited to see how the discussion would develop. 
I'm now glad that I waited. 
It's only realistic to make rules that are appropriate for the browsers that are actually available, rather than for some ideal browser that has not yet been written and perhaps never will. 
But, it seems to me that the more you make the writing of accessible documents into what many will perceive to be a complex chore, the less successful your enterprise is going to be across the web as a whole. 
Having met face to face so many examples of the - misconceived but nevertheless genuinely held - "we author for our majority readers, we cannot afford the time and effort to make alternative pages for a tiny minority" attitude, I suggest that you will always be steering an uncertain course between, on the one hand, a tolerably accessible world wide web, with handy guidelines that everyone can follow and could reasonably be expected to follow; and on the other hand a ghettoized web in which most of the content is totally and utterly inaccessible to anyone who can't "get with the program", and a small minority content that fully and completely complies with elaborate and detailed rules of accessibility legislation but is of no interest to readers in general. 
Please excuse me for putting this in such polarised terms, but based on what I am seeing and which, I think, none of us have the power to control, this is what I think the issues are. 
I'll close this quickly because the -GL list is surely the wrong place for such a wide-ranging rant, but I did feel that I had to express my concern at the potential for harm if the rule-making goes too far. 
Please can we at least assume that those who have a special need are playing some part in the deal, by not selecting a browser/version that is inappropriate to their requirements, that then has to be compensated by over-elaborate author work-arounds. 
I humbly submit that the most effective use of the available good-will is to convince sceptics that it is in the nature of the web to be inherently accessible, that their task is to to work with that strength rather than against it, and that the guidelines are not meant as a complex edifice of legislation which their business case is sure to tell them isn't worth the effort, but rather as useful hints to help them in their task. 
I have been much impressed by the work of CAST, make no mistake about it. 
Best regards 
Josh's suggested data base might be useful under some circumstances, though it should not be part of the guidelines proper and would require constant updating. 
I do not think there is need for pessimism at this stage concerning the proper implementation of HTML 4.0 and CSS, since by supporting these standards, W3C member organisations have made a committed to complying with them. 
Furthermore, the motivation for doing so will be increased by the normative value of the WAI user agent guidelines. 
This kind of discussion would be more appropriate for the IG list, however. 
I hope it's not too late for me to add my 2 cents.... Through this conversation it has become apparent, (at least to me), that we are wanting the to fulfill two distinct purposes with the guidelines that should be separated. 
1. Guidelines - as in "best practices" that should assist the direction (guide) of page authors. 
2. Guidelines - as in "requirements" which are necessary to fulfill. 
I think our goal is 1, and the discussion of 2 should be handled by RC. If this were the case, the database approach would be appropriate. 
We would also might want to consider abandoning the "required" vs "recommended" language. 
David Clark CAST, Inc. 
Of Jason White Josh's suggested data base might be useful under some circumstances, though it should not be part of the guidelines proper and would require constant updating. 
I do not think there is need for pessimism at this stage concerning the proper implementation of HTML 4.0 and CSS, since by supporting these standards, W3C member organisations have made a committed to complying with them. 
Furthermore, the motivation for doing so will be increased by the normative value of the WAI user agent guidelines. 
This kind of discussion would be more appropriate for the IG list, however. 
