I've seen a lot of traffic in this list discussing the use of passwords, how necessary they are and how insecure, etc. etc. 
I haven't seen any mention of the use of techniques like Bellovin-Merrit's for preventing dictionary attacks. 
Certainly, these techniques improve significantly on the security of passwords (particularly, low-entropy ones). 
BM solutions and related ones use public key techniques which are already available in SSL. 
Did anyone considered using them? 
Does anyone know of *any* real-world implementation of such techniques (not necessarily related to SSL)? 
Thanks, Hugo 
It turns out that this was a very good way to advertise Bellovin-Merrit's work. 
So I got no single answer to whether an implementation exists or about its potential usability within SSL. 
Instead I got eight personal messages asking for the reference to the papers. 
There are two papers on this subject by these authors. 
They call the technique "encrypted key exchange". 
The first paper appeared in Oakland conference 1992, the second in ACM Security 1993. 
I found an on-line version of both papers under Look for the phrase "encrypted key exchange" (the papers are NOT listed under the "password" section of that page). 
Anyway, if anyone has an answer to my previous posting I'll be glad to hear. 
Hugo 
Hi, I'm new to this list so I don't know if this has been mentioned. 
Regarding the discussion of SSL not supporting the use of passwords, has SSH been considered by the IETF TLS? 
It supports the use of encrypted passwords as well as pure RSA authentication. 
Thanks, Richard Chase Richard.Chase@DataFellows.com, World Wide Web: http://www.DataFellows.com 
Data Fellows 4000 Moorpark Ave., Suite 207 San Jose, CA 95117 * Vineyard, the Award-winning Visual Information Manager for Workgroups * * F-Secure, Unmatched, Easy to Use Internet Security * * http://www.DataFellows.com/ 
* 
Hugo: We did at one point consider Bellovin-Merritt for shared-key authentication, but we decided that requiring server certification was not a big sacrifice in the contexts we had in mind, and yielded better security and fewer changes to existing infrastructure and code. 
(For example, Bellovin-Merritt would require clients to monitor for online brute-force attacks on the password.) 
Of course, if you want to propose an extension allowing for BM-style two-way shared-key-based authentication as an option in TLS, we'd have no objections to its inclusion. 
Daniel Simon Cryptographer, Microsoft Corp. (dansimon@microsoft.com) 
