My point here is that the skip-nav or its cousin here the skip-movie link, is something to do with what we have today; but that the answer for the future is not a 'skip' method but an 'escape' method that provides the 'skip' capability and more. 
Navigation bars are just another sub-case along with tables and movies. 
I agree with Al that the model of being able to get into a navigation structure and get out of it at ny point is better than having to decide at the beginnning whether or not to follow the "skip navigation links" link. 
Well, we need both. 
The "escape out" is not the same as the "skip to". 
The "escape out" only allows one to get out of the current structure while the "skip to" doesn't rely on any structure nor on what is between your current location and the target. 
For example, a local link "skip to main content" allows one to efficiently skip over navigation links, nested navigation links, advertisement, and lots of other structures that the designer may choose to elegantly design (cram) into the top and side real estate of the site pages. 
The escape only allows one to escape out of the current structure. 
If the structures in the top and side navigation are nested, which they are often, one will be "escaping out" a few times before ever getting to the top of the main content. 
The "escape out" is a browser, or more important;y, as assistive technology responsibility. 
IBM Home Page Reader (and other screen readers) today allow one to escape to the next item, escape out to the bottom of a map, list, table, and other structures such as select menus. 
Since we can't force designers to use the same XHTML structures on every page, the best solution to ask designers to provide is a "skip to the main content" link and use reasonable structures (I include paragraphs here) that the browser/AT can escape out of along the way if so desired. 
The problem I see in web sites today trying to be accessible , is the confusion over the two concepts caused by WCAG 1.0 checkpoint 13.6 (see [1]) and 508 Web paragraph O (see [2]). 
At least 508 got the skip to main content correct. 
WCAG is 2 years older than 508 and needs a revision before getting to WCAG 2.0. 
[1] WCAG 1.0 Checkpoint 13.6 techniques for grouping and bypassing links [2] 508 1194.22 paragraph O Skip navigation links Regards, Phill Jenkins, IBM Research Division - Accessibility Center My point here is that the skip-nav or its cousin here the skip-movie link, is something to do with what we have today; but that the answer for the future is not a 'skip' method but an 'escape' method that provides the 'skip' capability and more. 
Navigation bars are just another sub-case along with tables and movies. 
I agree with Al that the model of being able to get into a navigation structure and get out of it at ny point is better than having to decide at the beginnning whether or not to follow the "skip navigation links" link. 
Agreed. 
What WCAG requires is that groups of links are identified and skippable. 
I think that is one bit, and that being able to escape a block is important. 
(That is a requirement in UAAG - checkpoint 9.9 draft). 
In addition, being able to get to "the start of the content" is an important feature in navigation - like being able to get to a search page for any collection of pages (analagous to using the browser search for a single page). 
I am not sure that it is explicitly identified as a requirement in WCAG 1.0 which has a short list of explicit structure requirements and then requires "navigation bars"... Cheers Chaals My point here is that the skip-nav or its cousin here the skip-movie link, is something to do with what we have today; but that the answer for the future is not a 'skip' method but an 'escape' method that provides the 'skip' capability and more. 
Navigation bars are just another sub-case along with tables and movies. 
I agree with Al that the model of being able to get into a navigation structure and get out of it at ny point is better than having to decide at the beginning whether or not to follow the "skip navigation links" link. is current for single then Not only is it (skip to main content) not in WCAG 1.0, it's not in WCAG 2.0 either. 
But I think "skip to main content" could fit in Checkpoint 3.3 Provide multiple methods to explore sites that are more than two layers deep WCAG 1.0 and WCAG 2.0 are too biased to the notion that structured content is the answer when in fact the structures in XHTML are too limited to communicate more of the semantics of web pages and web applications today. 
If there was a "main content" tag, in addition to the "body" tag", then that could mark the beginning of the "main content". 
Additions of the "top navigation" tag, side navigation, advertisement, etc. tags would help in further communicating not so much the "structure" but the intended purpose of the content that could then be presented and navigated by the browser. 
I'll take this thread and include it in my comments on WCAG 2.0 Phill Jenkins while we are on this, I have a couple of observations. 1 user agents are becoming quite effective at presenting structure when well marked up even in simple html and assistive technologies and platforms are taking advantage of this fact. 
Given this, could we not just advise in 2.0 that a heading be used to denote main content instead of creating a new tag that people need to remember to write in or tools will take time to implement? 
xml of course will alleviate most if not all of this. 
I find it quite helpful when a site is well marked up to be able to go directly to the content on a page I want when the links are grouped correctly and headings are used. 
we can now even move by paragraph. 
older Flash movies] My point here is that the skip-nav or its cousin here the skip-movie link, is something to do with what we have today; but that the answer for the future is not a 'skip' method but an 'escape' method that provides the 'skip' capability and more. 
Navigation bars are just another sub-case along with tables and movies. 
I agree with Al that the model of being able to get into a navigation structure and get out of it at ny point is better than having to decide at the beginning whether or not to follow the "skip navigation links" link. 
block is current an page for single then Not only is it (skip to main content) not in WCAG 1.0, it's not in WCAG 2.0 either. 
But I think "skip to main content" could fit in Checkpoint 3.3 Provide multiple methods to explore sites that are more than two layers deep WCAG 1.0 and WCAG 2.0 are too biased to the notion that structured content is the answer when in fact the structures in XHTML are too limited to communicate more of the semantics of web pages and web applications today. 
If there was a "main content" tag, in addition to the "body" tag", then that could mark the beginning of the "main content". 
Additions of the "top navigation" tag, side navigation, advertisement, etc. tags would help in further communicating not so much the "structure" but the intended purpose of the content that could then be presented and navigated by the browser. 
I'll take this thread and include it in my comments on WCAG 2.0 Phill Jenkins There are a couple of points I would make. 
Dave is right that in general good structure already identifies the content - not so much by saying "this is the start of the main content" but by identifying all the things that are not main content - navigation bars, etc. 
These can then be skipped over or escaped from by the user according to their preference. 
In a lot of cases "the main content" is what is left. 
The first time you encounter a site it can be helpful to find out what is in the navigation bar. 
And when you are navigating a way through a site you have more or less understood you need to use the navigation bar in the most useful sized chunks available. 
But if you get halfway into a long list of links (say the A-Z list oln the W3C home page and realise it isn't the particular navigation chunk you were looking for (perhaps you wanted the "participate" group that is later in the page) it is helpful to be able to find it. 
In HTML almost any element can take a title attribute. 
Using this, combined with good page structure, should make it easy to have a map of the page that corresponds to the map of the site, at a higher level of detail that the rough map you get from header elements. 
For most HTML this should be enough. 
For something like SVG or SMIL it might be a bit more complicated, but the same principles (and even the same attribute names) apply. 
So an XSLT that builds the tree of elements with a title should be pretty straightforward for a given language (admittedly in SVG you look for a title element as compared to an attribute in SMIl or HTML). 
Cheers Chaals 
