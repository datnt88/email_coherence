Hello, 
in thotlib/dialogue/dialogapi.c:1669 #ifndef _GTK + XmRepTypeInstallTearOffModelConverter(); 
/* redirige le handler de warnings vers une fonction vide pour eviter */ /* les delires de motif */ (you've to include #include Xm/RepType.h ) This enables the tearoff-converter. 
You've to merge the following line to the Xresources then: Dialogue*tearOffModel: XmTEAR_OFF_ENABLED btw.: is it intended not to parse standard X command line arguments as -xrm -display ... ? 
-- they're respected if set with xrdb, so it's reasonable to parse the command line, isn't it ? 
I'd suggest something like e.g.: RootShell = XtVaAppInitialize(&amp;Def_AppCont, "Dialogue", NULL, 0, &amp;argc, argv, NULL, NULL); this way, one could also use amaya -xrm 'Dialogue*tearOffModel: XmTEAR_OFF_ENABLED' Johannes 
Hello Johannes, 
Thanks for your contribution. 
I tried it and it works fine. 
I have a problem, though. 
After tearing up a menu, I'm unable to destroy it with the Window manager interface (in this case, an X in the title bar). 
Do you know the name of the event that we need to register? 
I'm not sure if this bug is related to my using lesstif. 
-jose In our previous episode, Johannes Zellner said: 
Salut Jose, 
try pressing ESCAPE while the cursor is on the menu. 
But you're right: It should also work by destroying it with the window manager. 
I'm not too experienced in motif programming, so I'd try writing a small event handler which will dump all events the torn of menu gets. 
Maybe I'll have a closer look later (though I've not much time). 
Johannes 
Thanks a lot for your patch. 
We'll add it, but we probably need to add a callback that allows the user to close the menu. 
In-reply-to: Your message of Sat, 25 Nov 2000 12:17:39 +0100." 
Irene. 
