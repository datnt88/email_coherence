(TOP (S (SBAR (IN as) (S (S (NP (NP (DT a) (NN follow-up)) (PP (IN of) (NP (NN discussion))) (PP (IN on) (NP (NNS www-ql)))) (VP (SYM @) (NP (NP (NN w3.org)) (PP (IN about) (NP (JJ syntax) (NNS issues)))))) (: :) (S (NP (PRP I)) (VP (VBP suggest))))) (, ,) (SBAR (IN if) (S (NP (PRP it)) (VP (AUX is) (RB not) (ADJP (RB too) (JJ late))))) (, ,) (NP (DT the) (JJ following)) (VP (VBP change)) (: :)) )
(TOP (FRAG (: -) (VP (VB make) (ADJP (JJ optional))) (NP (DT the) (NN separator) (POS ')) (: ;) ('' ') (PP (IN between) (NP (NN prolog) (NNS declarations))) (. .)) )
(TOP (PRN (-LRB- -LRB-) (SBAR (IN unless) (S (S (NP (DT this)) (VP (VBZ creates) (NP (DT a) (JJ real) (JJ lexical) (NN issue)))) (CC but) (S (NP (PRP it)) (VP (AUX does) (RB n't) (VP (VB seem) (S (VP (TO to) (VP (AUX be) (NP (DT the) (NN case)))))))) (. .))) (-RRB- -RRB-)) )
(TOP (S (SBAR (IN Though) (S (NP (DT the) (NN semicolon)) (VP (MD can) (VP (VB improve) (NP (NN readability)) (PP (IN in) (NP (DT some) (NNS cases))))))) (, ,) (NP (PRP it)) (VP (AUX is) (DT both) (ADJP (JJ heavy) (, ,) (JJ ugly) (CC and) (JJ unnecessary)) (PP (IN after) (NP (NP (NNS functions)) (CC or) (NP (JJ variable) (NNS initializations))))) (. .)) )
(TOP (S (PP (TO To) (NP (PRP me))) (, ,) (S (VP (VBG making) (S (NP (PRP them)) (ADJP (JJ optional))))) (VP (AUX is) (NP (NP (DT the) (ADJP (JJS worst) (JJ possible)) (NN approach)) (: -) (S (NP (JJ XQuery) (NNS processors)) (VP (MD would) (ADVP (RB still)) (VP (AUX need) (S (VP (TO to) (VP (AUX be) (ADJP (JJ able) (S (VP (TO to) (VP (VB parse) (NP (DT the) (NN language)) (PP (IN with) (CC or) (IN without) (NP (DT the) (NNS semicolons))))))))))))))) (. .)) )
(TOP (S (SBAR (IN If) (S (NP (PRP we)) (VP (AUX were) (S (VP (TO to) (VP (AUX do) (NP (DT that)))))))) (, ,) (NP (PRP it)) (VP (MD would) (VP (AUX be) (ADJP (JJR better)) (S (VP (TO to) (ADVP (RB simply)) (VP (VB remove) (NP (DT the) (NNS semicolons))))) (SBAR (IN so) (S (NP (NN everybody)) (VP (VBZ writes) (NP (NNS queries)) (PP (IN with) (NP (DT the) (JJ same) (NN syntax)))))))) (. .)) )
(TOP (S (CC But) (NP (DT the) (NNS semicolons)) (VP (AUX do) (VP (VP (VB make) (NP (NP (NN error)) (VP (VBG reporting) (ADVP (RB easier))))) (, ,) (CC and) (VP (VB simplify) (NP (NP (NN parsing)) (PP (IN of) (NP (DT the) (NN language))))))) (. .)) )
(TOP (S (ADVP (RBR More) (RB importantly)) (, ,) (NP (PRP they)) (ADVP (RB also)) (VP (VBP make) (S (NP (PRP it)) (ADJP (RBR more) (JJ likely)) (SBAR (IN that) (S (NP (NP (JJ future) (NNS versions)) (PP (IN of) (NP (NNP XQuery)))) (VP (MD will) (VP (AUX have) (NP (NP (DT the) (NN flexibility)) (SBAR (S (NP (PRP they)) (VP (AUX need) (S (VP (TO to) (VP (VB extend) (NP (DT the) (NN language))))))))))))))) (. .)) )
(TOP (NP (person (NNP Jonathan))) )
(TOP (S (ADVP (RB Right)) (, ,) (NP (JJ optional) (NNS semicolons)) (VP (AUX is) (RB not) (NP (DT the) (ADJP (JJS best) (JJ possible)) (NN idea))) (. .)) )
(TOP (S (NP (PRP I)) (VP (AUX did) (NP (PRP it)) (PP (IN in) (NP (NNP Qizx))) (ADVP (RB only)) (S (VP (TO to) (VP (VB keep) (NP (NN compatibility)) (PP (IN with) (NP (JJ former) (NN syntax))))))) (. .)) )
(TOP (S (PP (IN In) (NP (NN fact))) (, ,) (NP (NNS semicolons)) (VP (MD should) (VP (AUX be) (VP (VBG *) (NP (NP (NP (NNS terminators)) (VP (VBN *) (PP (IN on) (NP (JJ simple) (NNS declarations))))) (, ,) (CC and) (RB not) (NP (NNS separators)))))) (. .)) )
(TOP (S (ADVP (RB Incidentally)) (, ,) (NP (PRP I)) (VP (VBP prefer) (NP (NP (DT a) (JJ simple) (NN rule)) (PRN (-LRB- -LRB-) (`` ``) (S (NP (DT a) (NN declaration)) (VP (VBZ ends) (PP (IN with) (NP (DT a) (NN semicolon))))) ('' '') (-RRB- -RRB-))) (PP (TO to) (NP (NP (DT any) (NN rule)) (SBAR (WHNP (WDT that)) (S (VP (AUX has) (NP (NNS exceptions)) (PRN (-LRB- -LRB-) (S (`` ``) (NP (DT a) (NN declaration)) (VP (VBZ ends) (PP (IN with) (NP (DT a) (NN semicolon))) (PP (IN except) (SBAR (IN if) (S (NP (PRP it)) (VP (AUX is) (NP (DT a) (NN function) (NN declaration))))))) (: ...)) (-RRB- -RRB-))))))))) )
(TOP (S (CC Yet) (NP (DT this)) (VP (AUX is) (SBAR (WHADVP (RB exactly) (WRB how)) (S (NP (PRP it)) (VP (AUX is) (PP (IN in) (NP (NP (NN mainstream) (NNS languages)) (PP (IN like) (NP (NP (person (NNP Java)) (, ,) (NNP Javascript) (, ,) (person (NNP C)) (, ,) (NNP C++)) (, ,) (NP (person (SYM C)) (# #)) (, ,))))) (S (VP (TO to) (VP (VB name) (NP (DT a) (JJ few) (NNS ..))))))))) (. .)) )
(TOP (SBARQ (WHADVP (WRB Why)) (SQ (MD would) (RB n't) (NP (NNP XQuery)) (VP (VB adopt) (NP (DT a) (JJ usual) (NN approach)) (, ,) (PP (RB rather) (IN than) (S (VP (VBG inventing) (NP (DT a) (JJ new) (CD one))))))) (. ?)) )
(TOP (S (NP (NP (CD 1.) (NNS Semicolons)) (PP (IN at) (NP (NP (DT the) (NN end)) (PP (IN of) (NP (NNS declarations)))))) (VP (VBP simplify) (VP (VBG parsing) (PP (PP (IN of) (NP (DT the) (NN language))) (: -) (CONJP (RB not) (RB only)) (PP (IN for) (NP (NN recognition))) (, ,) (CONJP (CC but) (RB also)) (PP (IN for) (NP (NN error) (NN detection)))) (, ,) (S (VP (VBG making) (S (NP (PRP it)) (ADJP (JJ possible) (S (VP (TO to) (VP (VB give) (NP (JJ good) (NN error) (NNS messages))))))))))) (. .)) )
(TOP (S (NP (DT This)) (VP (AUX is) (ADVP (RB hardly)) (NP (NP (DT a) (JJ good) (NN reason)) (PP (IN for) (S (VP (VBG introducing) (NP (PRP them))))))) (. .)) )
(TOP (S (NP (JJ Easiness-of-implementation) (NNS considerations)) (VP (MD should) (RB not) (VP (VB influence) (NP (NP (DT the) (NN design)) (PP (IN of) (NP (NP (DT a) (NN language)) (, ,) (NP (NNP IMHO))))))) (. .)) )
(TOP (S (NP (NP (CD 1.) (NNS Semicolons)) (PP (IN at) (NP (NP (DT the) (NN end)) (PP (IN of) (NP (NNS declarations)))))) (VP (VBP simplify) (VP (VBG parsing) (PP (PP (IN of) (NP (DT the) (NN language))) (: -) (CONJP (RB not) (RB only)) (PP (IN for) (NP (NN recognition))) (, ,) (CONJP (CC but) (RB also)) (PP (IN for) (NP (NN error) (NN detection)))) (, ,) (S (VP (VBG making) (S (NP (PRP it)) (ADJP (JJ possible) (S (VP (TO to) (VP (VB give) (NP (JJ good) (NN error) (NNS messages))))))))))) (. .)) )
(TOP (S (NP (DT That)) (VP (AUX 's) (NP (NP (NN nothing)) (SBAR (S (VP (TO to) (VP (AUX do) (PP (IN with) (NP (NP (NN ease)) (PP (IN of) (NP (NN implementation))))))))))) (. .)) )
(TOP (S (NP (PRP You)) (VP (MD can) (ADVP (RB only)) (VP (VB give) (NP (JJ good) (NN error) (NNS messages)) (PRN (-LRB- -LRB-) (CC and) (VP (VB recover) (S (VP (TO to) (VP (VB report) (NP (JJ multiple) (NNS errors)) (PP (IN in) (NP (DT a) (JJ single) (NN run))))))) (-RRB- -RRB-)) (SBAR (IN if) (S (NP (DT the) (NN language)) (VP (AUX has) (NP (JJ sufficient) (NN redundancy))))))) (. .)) )
(TOP (S (NP (DT That)) (VP (AUX 's) (NP (NP (DT a) (NN question)) (PP (IN of) (NP (NN language) (NN design)))) (, ,) (PP (RB not) (IN of) (SBAR (WHADJP (WRB how) (JJ clever)) (S (NP (DT the) (NN implementation)) (VP (AUX is)))))) (. .)) )
(TOP (S (NP (NP (NN Redundancy)) (PP (IN in) (NP (NN language) (NN syntax))) (PRN (-LRB- -LRB-) (PP (IN as) (PP (IN with) (NP (NP (DT any) (JJ other) (NN kind)) (PP (IN of) (NP (NN input) (NNS data)))))) (-RRB- -RRB-))) (VP (VBZ leads) (PP (TO to) (NP (JJR better) (NN error) (NN detection)))) (. .)) )
(TOP (FRAG (PP (IN Without) (NP (NP (NNS semicolons)) (, ,) (SBAR (WHADVP (WRB when)) (S (NP (PRP you)) (VP (VBP write) (NP (NP (NN something)) (PP (IN like) (NP (NN import) (NN schema) (`` ``) (FW ns.uri) ('' '') (`` ``) (FW location.uri) ('' '')))))))))) )
(TOP (S (NP (PRP you)) (VP (AUX are) (VP (VBG going) (S (VP (TO to) (VP (VB get) (NP (NP (DT the) (NN error) (NN message)) (VP (VBG **) (NP (NP (ADJP (CD *) (NN Type)) (NN error)) (: :) (S (S (NP (NNP Cannot)) (VP (VB add) (NP (DT a) (NN string)))) (CC and) (S (S (NP (NP (DT an) (NN integer)) (PP (IN while) (NP (NN import) (NN schema) (`` ``) (FW ns.uri) ('' '') (`` ``) (FW location.uri) ('' '') (CD 3)))) (VP (MD will) (VP (VB give) (S (NP (PRP you)) (VP (VBP **) (S (VP (VBG *) (NP (JJ Unexpected) (JJ token) (`` ``) (CD 3) ('' '')) (PP (IN beyond) (NP (NP (NN end)) (PP (IN of) (NP (NN expression))))) (PP (IN With) (NP (NNS semicolons)))))))))) (, ,) (NP (DT the)) (VP (VB construct) (NP (NN import) (NN schema) (`` ``) (FW ns.uri) ('' '') (`` ``) (FW location.uri) ('' ''))))))))))))) (: ;)) )
(TOP (S (VP (MD will) (VP (VB give) (NP (PRP you)) (NP (NP (DT the) (ADJP (RB much) (JJR clearer)) (NN error) (NN message)) (VP (VBG **) (NP (JJ *) (NNP Syntax) (NN error))) (: :) (ADJP (JJ Expected) ('' ') (PP (IN at) (NP ('' ') (CC or) (NP (POS '))))) (: ;) ('' ')))) (, ,) (VP (VBD found) (NP (NN string) (JJ literal) (`` ``) (FW location.uri) ('' '')))) )
(TOP (NP (person (NNP Michael) (NNP Kay))) )
(TOP (S (S (VP (VBG Hi) (NP (NNP Xavier)))) (, ,) (ADVP (RB Personally)) (, ,) (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (PRP it)) (VP (AUX 's) (NP (NP (NN time)) (SBAR (S (VP (TO to) (VP (VB stop) (S (VP (VBG worrying) (PP (IN about) (NP (NP (JJ minor) (JJ syntactic) (NNS details)) (PP (IN of) (NP (NNP XQuery))))))) (SBAR (IN if) (S (NP (PRP we)) (ADVP (RB ever)) (VP (VBP want) (S (VP (TO to) (VP (VB get) (VP (AUX done))))))))))))))))) (. .)) )
(TOP (S (NP (NNS People)) (VP (MD can) (ADVP (RB reasonably)) (VP (VB disagree) (PP (IN about) (SBAR (IN whether) (S (NP (DT a) (NN declaration)) (VP (MD should) (VP (VB end) (PP (IN with) (NP (DT a) (NN semicolon)))))))))) (. .)) )
(TOP (S (NP (PRP I)) (VP (AUX do) (RB n't) (VP (VB think) (SBAR (S (NP (PRP it)) (VP (AUX 's) (ADJP (JJ reasonable)) (S (VP (TO to) (VP (VB spend) (NP (NP (DT a) (NN lot)) (PP (IN of) (NP (NN time)))) (PP (IN on) (NP (DT this) (NN issue))))))))))) (. .)) )
(TOP (NP (NNP Jonathan)) )
