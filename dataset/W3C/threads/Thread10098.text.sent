(neither are *critical* both substantive) Suggestions: 3.1 character defn changes 127 to 126 langguage defn in concepts language is now lower case. 
This is a cross-document consistency issue. 
Options: do nothing, resolve later. 
or new text: language ::= [a-z0-9][a-z0-9-]+ (delete ref to REC-xml#sec-lang-tag) Jeremy Jeremy Carroll said: That was a bug, the hexadecimal was correct (#x20-#x7E), the comment was wrong ("... to 127") Fixed. 
Can you give me a pointer to this? 
I thought this was being done at the semantic level, not in the syntaxes? 
Why? 
I guess this is incomplete since it is refering obliquely to multiple changing RFCs. 
Is checking this unimportant? 
Is it defined elsewhere that is better pointed at? 
If I used the above defn, it would be good to explain where it came from. 
Dave This is editorial at this point, sounds as though we should stick with what you've got. 
If you ant that then something like grahams text The language tag is composed of one or more parts: A primary language subtag and a (possibly empty) series of subsequent subtags. 
The syntax of this tag in ABNF [RFC 2234] is: Language-Tag = Primary-subtag *( "-" Subtag ) Primary-subtag = 1*8ALPHA Subtag = 1*8(ALPHA / DIGIT) The productions ALPHA and DIGIT are imported from RFC 2234; they denote respectively the characters A to Z in upper or lower case and the digits from 0 to 9. The character "-" is HYPHEN-MINUS (ABNF: %x2D). is the relevant stuff from RFC 3066, XML got burnt because this was a change from RFC 1766 which XML initially copied. 
In terms of N-triple syntax, a minimal change to your text would be language ::= ( character - ('.'|'^' | ws )) + to avoid the ambiguity on datatyping, keeping the comment. 
Jeremy ant=want ? 
:) Yes, that's what I was thinking of. 
If you are happy with this, I'll make a change, trying try to put this in terms of this syntax; see below Hmm, the EBNF we are using from restrictions of RFC3066 on the primary-subtag and subtag. 
so at best we can have: language ::= [A-Za-z0-9]+ ('-' [A-Za-z0-9]+ )? or if we go for lowercase only language ::= [a-z0-9]+ ('-' [a-z0-9]+ )? 
I'm prefering the latter I think; with pointers to the RFC3066 section above. 
The current N-Triples language definition is too far away from the RFC3066 etc. version. 
Dave just to make sure, are we reviewing I'm also very glad that is updated and we have it working well Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/ 
Dave Beckett ol.ac.uk cc: w3c-rdfcore-wg@w3.org 
Sent by: Subject: Re: NTriple review w3c-rdfcore-wg-requ est@w3.org 
2002-11-11 01:31 PM ant=want ? 
:) Yes, that's what I was thinking of. 
If you are happy with this, I'll make a change, trying try to put this in terms of this syntax; see below Hmm, the EBNF we are using from restrictions of RFC3066 on the primary-subtag and subtag. 
so at best we can have: language ::= [A-Za-z0-9]+ ('-' [A-Za-z0-9]+ )? or if we go for lowercase only language ::= [a-z0-9]+ ('-' [a-z0-9]+ )? 
I'm prefering the latter I think; with pointers to the RFC3066 section above. 
The current N-Triples language definition is too far away from the RFC3066 etc. version. 
Dave Jos De_Roo said: Yes, or the version at which I just posted about. 
Great! 
Dave Jeremy, Please clarify: this is a thumbs up to publish - right? 
Brian Jos, Please clarify: as a named reviewer, have you read the updated section of this document and are you giving it a thumbs up to publish? 
Brian Brian, this is a thumbs up! 
Dave has done a great job! 
I've read the document and was especially OK with OK OK 3.4. 
Example we should maybe have some URI ref #'s in here... 3.5. 
N-Triples Tests The N-Triple test file at contains multiple tests of legal N-Triples. 
OK and tested Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/ 
PS I know that I have to improve as a reviewer e.g. for the schema document I can't tip at Frank's review... Brian McBride m dave.beckett@bristol.ac.uk Sent by: cc: Jeremy Carroll jjc@hplb.hpl.hp.com , w3c-rdfcore-wg@w3.org w3c-rdfcore-wg-requ Subject: Re: NTriple review est@w3.org 
2002-11-11 03:33 PM Jos, Please clarify: as a named reviewer, have you read the updated section of this document and are you giving it a thumbs up to publish? 
Brian language and I don't have strong feelings here, but I note that RFC3066 explicitly allows upper- and lower-case. 
That doesn't mean we can't be more restrictive in N-triples. 
I think either of the above is OK. #g Graham Klyne The abstract syntax is restrictive to a single case. 
I suggest we want the simplest possible mapping between n-triples and the abstract syntax. 
Hence, parses are expected to normalize the language code. 
Brian I overlooked that. 
In which case I fully agree. 
#g Graham Klyne Sorry I lost this thread today - the above production is slightly wrong it should read: language ::= [a-z0-9]+ ('-' [a-z0-9]+ )* (i.e. any number of subtags are allowed .. e.g. en-us-wisconsin I expect this is too late, it won't matter. 
Jeremy Jeremy Carroll said: Darn. 
I missed that extra Kleene star in the original definition. 
I guess for the next version I'll should do it right and extend XML's EBNF to add sequence clauses like term{1,8} and define it like: language ::= [a-z0-9]{1,8} ( '-' [a-z0-9]{1,8} )* However, reading RFC3066 *again* it says: Language-Tag = Primary-subtag *( '-' Subtag ) Primary-subtag = 1*8ALPHA Subtag = 1*8(ALPHA / DIGIT) so no digits in the primary subtag. 
So shouldn't that be: language ::= [a-z]{1,8} ( '-' [a-z0-9]{1,8} )* Dave 
