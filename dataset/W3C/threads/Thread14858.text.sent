Here is the latest list of CONSENSUS STATEMENTS New ones are marked with ** Please read them over and comment if you don?t consens. 
Thx G Consensus means "I can live with that". 
These are posted to see if there are problems with listing these as consensus for the working group at this time - so we can move on to those things where we need to address our discussion. 
ITEMS WHERE THERE WAS CONSENSUS IN THE GROUP. 
POSTED TO THE LIST FOR REVIEW. 
RE: OUR GUIDELINES AND REGULATIONS R1 - That what we develop should be usable by people who are writing regulations or requirements or policies (government, company, agency etc.) This is not the ONLY group - but it is one group we need to address. 
R2 - That our guidelines should not necessarily be directly usable or adoptable as regulations R3 - That our guidelines should have a "harmonizing" effect on regulations -- so that they cause regulations to be written so that they are similar and create similar or at least compatible demands on companies and individuals who must follow the regulations or standards or policies. 
RE: WHAT SHOULD BE NORMATIVE N1 - that technology specific checkpoints should be normative N2 - we shouldn?t 
be including anything (as normative) that we can't provide techniques and examples for. 
N3 - normative is determined by objectiveness -- ease of establishing consensus on fulfillment. 
N4 - we shouldn?t 
be including anything (as normative) that we can't provide success criteria for. 
N5 - things that are normative must be testable. 
(Testable does not mean it must be machine testable) N6 - that ?testable by a tool? 
should NOT be required for normative items N7 - normative items should not be determined by how easy it is to test. 
(in time and effort) (Testability may be a criterion, but not ease of testing) RE: LEVELS AND SUBSETS OF CONFORMANCE C1 - we want to have recognition for accomplishment beyond baseline C2 - it is good to have levels of conformance rather than just all or nothing. 
C3 - there is a minimum set that conformance should not be possible without. 
C4 - should not be able to claim conformance by disability C5 - we WCAG should provide a way for people to see impact of items for particular disabilities but it should not be used for conformance. 
(see requirement 5) C6 - GL should provide hooks in WCAG to allow someone to provide a way for people to measure access against particular disabilities but it should not be used for conformance. 
[ Who should/would do the tool? 
GL or EO or ?] [Separate tool] ** C7 - The success criteria (for a checkpoint) must be sufficient. 
(i.e. if you do them you comply. 
You would not have to do anything not in the list of success criteria.) RE: CLIENT SIDE AND SERVER SIDE SOLUTIONS S1 - serving content in different forms is an acceptable way to comply with the guidelines as long as equivalents for all of the information are provided in the different forms and it is all available through the same URI (though it may be linked to it) (server side solutions are acceptable ? 
as specified) RE: BROWSERS ** B1 - Techniques should specify if particular browsers are needed or will not work with the technique. 
Or they should specify if they require particular technologies. 
e.g. 
You must have CSS2 support for this technique to work. 
RE: HOW OUR GUIDELINES ARE WRITTEN **W1 - Our document should be written as clearly and simply as is appropriate for the content, with links to definitions. 
We should go with the clearest and simplest language that someone can propose as long as it is accurate. 
Gregg, I see problems with this .... if it is applied to the inclusion of illustrations, it would be easy to fulfill by adding graphics, but determining the illustrative value of the chose graphics may not be objective. 
Likewise ... an alt tag may be determined as a string of text in the right box, but determining the equivalency of the alt tag will not be objective ... Seems some guidelines/checkpoints could have both normative and non-normative attributes and techniques ... Anne Anne Pemberton apembert@erols.com 
[draft record of consensus] [Anne Pemberton] [Al, here] So far this list only talks about 'normative' as though what we say is either 'normative' or 'not normative.' 
In the IETF they have found it helpful to have three grades of things that they find to say. 
These can be summarized by the graded series [MUST, SHOULD, MAY].? There are other keywords but they equate to these three in terms of their effect on 'normativity.' It could be reasonable for us to agree that one SHOULD minimize the dependency of your message on obscure words, and MUST annotate with definitions those terms that are essential to your message and not used in their standard meanings.? In this it is not necessarily easy to gain consensus on when someone has minimized the dependency of their text on obscure words.? It does not reduce to an objective Boolean pass/fail condition.? But it unreasonable not to mention that they SHOULD do it, all the same. 
And while some find that SHOULD statements are weaker than they would prefer, it is still not quite right to say that they are 'not normative.' 
Is is possible that our 'objectivity' criteria should be different for things we say the content or content provider SHOULD do and things that we say they MUST do? 
Now, I know these code words are from a style guide for writing specifications. 
But as soon as we say that we are writing 'normative' stuff it is not that far from specification language. 
So we might think about more shades of grey that just 'normative' and 'not.' Al Ref: How would this tripartite division of the normativity continuum (from "must", i.e., normative, at one end, to "may", i.e., non-normative, at the other) be reflected in the guidelines? 
Would it be used in the checkpoints themselves, in the success criteria, or elsewhere? 
How would it interact with the priority scheme? 
Note that in WCAG 1.0, checkpoints at all three priority levels are normative; the differences between them are based entirely on "impact"--that is, the effect of implementing or not implementing the checkpoint upon the accessibility of the content to identifiable groups of users. 
Thus, on the one hand we have a distinction between normative, recommended/advisory and non-normative assertions, and on the other a distinction between differing priority levels. 
If both distinctions were to be relied upon in the document, how would you implement them and avoid potential confusion? 
In essence I am looking for a concrete proposal that the working group can discuss. 
So we might think about more shades of grey that just 'normative' and 'not.' Also, we tend to think of "normative" and "informative" as opposite sides of a coin. 
In everyday usage whatever we put in there (including whatever we choose to label "normative") is "informative". 
A really big problem is that "normative" is a VERY HEAVY "what's that mean" word in most vocabularies - even among those who do this stuff for a living. 
If what it connotes can't be readily communicated, watch out! 
One little problem with the concept is that "normative" acquires the sort of status that chiseled stone has: even if there's only little errors of punctuation/spelling/grammar, the ability to change them is fettered by process. 
Love. 
EACH UN-INDEXED/ANNOTATED WEB POSTING WE MAKE IS TESTAMENT TO OUR HYPOCRISY AG:: OK, here's a blue sky version: 1 * Guidelines go away.? 
They are replaced by scenarios that construct a situation as concretely or as abstractly as is convenient to state success criteria. 
Success criteria are stated by sentences which use MUST and SHOULD, and refined or clarified by sentences that user MAY. 
These statements are made about the things that appear in the scenario.? There can be any number of success criteria that apply to any given scenario. 
All of these apply within the view of Web browsing and serving exposed by one scenario or another.? The success criteria may be interelated, such as where one says a site MAY meet the requirement for equivalents to be available from the same URL by providing well oriented and cross-disability accessible hyperlinking back and forth among pages that work well for one delivery context and those that work well for another. 
2 * Checkpoints go away.? 
They are replace by the success criteria, which are stated inline in the prose plus exhibits discussion of the scenarios without an intervening document structure level. 
3 * Conformance is based on the success criteria, the MUST and SHOULD statements, that is to say sentences.? 
Each sentence with a MUST or SHOULD in it is an entry in the evaluation menu.? 
This is standard industry practice. 
4 * MUST statements must meet a "substantially objective boolean" text.? SHOULD statements need not.? Policy setters will immediately understand that if they wish to set objective boolean criteria in the areas of SHOULD statements, they have clear guidance as to the objective of these criteria and no statement from W3C as to what the precise boolean cutoff should be.? That is about as usable as we can make the writing for policy setters.? 
They eithe pass through the SHOULD to their implementers, or if the wish to enforce in a more rigorous fashion they know that the criteria they are enforcing are entirely in line with what others are pursuing that have adopted these guidelines as guidance. 
5 * Prioroties go away.? Policy setters have sources of priorities that we don't have visibility into.? We should put objective facts before them and let them implement from what we give them with total Chinese Menu freedom.? Our leading failure with WCAG 1.0 in the area of "usable by policy setters" was a simple matter of shooting ourselves in the foot.? We got carried away and put poison pill language in the document in an attempt to ensure that they could not "abuse" what we had to offer, and as a result they couldn't use it. 
Al PS:? 
Baby Steps, that is to say the minimum implementation from the above dream scenario, is points 3 and 4.? 
This is what it takes for the SHOULD option to get us out of the endless small circles box we have put ourselves in.? The rest is gravy if we can do that. 
either are 
