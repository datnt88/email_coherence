WCAG working group -- whose job is it to respond to these? 
I have a response below, which I have written and sent to you, but not to the original querent, since I'm not sure what our protocol is on responding. 
I have a comment on guideline 3.4 of WCAG 1.0 IMO this is really wrong. 
You can design web page which doesn't use text at all (pure formatting/presentation purpose), like: html style type="text/css" div { border: 10pt solid blue; background: silver; width: 100pt; height: 80pt } /style div /div body I'm not sure I understand the purpose of such a page, though; for what is it intended? 
Is this to put a silver box with a blue border on the page? 
If so -- is there any particular meaning associated with it, or is it just a blue box of a particular size? 
Using 'em' for defining width/height iof DIV element here is really NONSENSE - as *there is no font used in that page at all*. 
That's incorrect, as a default font is always defined in CSS, and should be based upon the user's default settings. 
Is there some reason the size of the box should not be relative to the rest of the presentation? 
The user may have chosen, for example, to increase the font size to some large number. 
Besides, you can't use percentage here - as you never know what is the browser's screen width (especially if you you XHTML basic - as script is not supported in XHTML basic, you can't get screen.width and screen.height. 
What kind of application do you envision in which the exact size is necessary and cannot be provided in percentages or em units? 
If there was something wrong in using 'pt' or 'cm' in CSS definitions - than 'pt' and 'cm' could be just excluded from CSS specifications. 
As they are present in CSS1/CSS2 - there is nothing wrong in using them. 
This isn't necessarily true -- there are many things you can do within the context of the specifications which may lead to accessibility errors. 
They are allowable via the spec (CSS, XHTML, whatever) but they can produce inaccessibility for many users. 
However, this may be a point in which the techniques should be clarified -- "pt" or "cm" should be acceptable within certain media types (for example, setting a left page margin to 2 cm in print media). 
This is implied in the techniques document for CSS at Besides, using 'pt' (instead of 'px') is the only way to get font size *right* - and current CSS specification *doesn't recommend* using 'smaller' or 'bigger' - as these properties are device-dependant, so using them you limit your page portability and possibility to view it on different kind of devices. 
The problem is that a desire to "get font size *right*" implies a desire to override the user's preference for default font size. 
What makes you think that "smaller" or "bigger" are device-dependent? 
Font values of "smaller" or "bigger" do not limit the portability of a page; they encourage it, more than explicit, fixed font sizes set with "pt". 
Therefor, I suggest that Guideline 3.4 should be excluded from WCAG 1.0 (or latest WCAG 2.0). 
If it's already done in Errata, please let me know URL of that Errata - so far I was not able to find any correction for this GL. 
Why do you think it should be excised? 
Without such a guideline, users with visual disabililties who need to change their default font sizes may not be able to do so. 
--Kynn Kynn Bartlett kynn@idyllmtn.com http://kynn.com 
Chief Technologist, Idyll Mountain http://idyllmtn.com 
Web Accessibility Expert-for-hire http://kynn.com/resume 
January Web Accessibility eCourse http://kynn.com/+d201 
Hi Vadim, in the errata page for WCAG as of today (11 december 2001 0750UTC+1100) there is an error recorded as number 5, added november 1999, which suggests: ...If absolute units are used, validate that the rendered content is usable... 
For example, do not proportionally size raster images. 
I think the point is that relative units should be used for font sizes, and I would argue that it is appropriate to use them for layout as well - especially for layout of text. 
In general I think em and % are better than "big, bigger, small" etc because the size differences in the recommendation are too extreme and the implementation is very varied. 
And I think they are the only way to get font sizes "right" because I find it very difficult to read what some content developers obviously thinks is the appropriate font size. 
(more detailed comments/responses below) cheers Charles Hello, I have a comment on guideline 3.4 of WCAG 1.0 [snip] IMO this is really wrong. 
You can design web page which doesn't use text at all (pure formatting/presentation purpose), like: div { border: 10pt solid blue; background: silver; width: 100pt; height: 80pt } Using 'em' for defining width/height iof DIV element here is really NONSENSE - as *there is no font used in that page at all*. 
Besides, you can't use percentage here - as you never know what is the browser's screen width (especially if you you XHTML basic - as script is not supported in XHTML basic, you can't get screen.width and screen.height. 
Actually I am not sure why you think it is nonsense to use em or % - it seems to me that both of those would work, although I ma not sure of the effect you are trying to create. 
If there was something wrong in using 'pt' or 'cm' in CSS definitions - than 'pt' and 'cm' could be just excluded from CSS specifications. 
As they are present in CSS1/CSS2 - there is nothing wrong in using them. 
That logic doesn't hold up unless we claim to be perfect in all our specifications. 
For that matter, the order of the Cascade in CSS2 is vvery different from that in CSS1 because we felt that in CSS1 it was wrong, but we only make improvements after we know of the problem, and it is difficult to update a Recommendation. 
Besides, using 'pt' (instead of 'px') is the only way to get font size *right* - and current CSS specification *doesn't recommend* using 'smaller' or 'bigger' - as these properties are device-dependant, so using them you limit your page portability and possibility to view it on different kind of devices. 
Hello, I have a comment on guideline 3.4 of WCAG 1.0 Guideline 3. Use markup and style sheets and do so properly. 
3.4 Use relative rather than absolute units in markup language attribute values and style sheet property values. 
[Priority?2] 
For example, in CSS, use 'em' or percentage lengths rather than 'pt' or 'cm', which are absolute units. 
If absolute units are used, validate that the rendered content is usable (refer to the section on validation). 
IMO this is really wrong. 
You can design web page which doesn't use text at all (pure formatting/presentation purpose), like: div { border: 10pt solid blue; background: silver; width: 100pt; height: 80pt } Using 'em' for defining width/height iof DIV element here is really NONSENSE - as *there is no font used in that page at all*. 
Besides, you can't use percentage here - as you never know what is the browser's screen width (especially if you you XHTML basic - as script is not supported in XHTML basic, you can't get screen.width and screen.height. 
If there was something wrong in using 'pt' or 'cm' in CSS definitions - than 'pt' and 'cm' could be just excluded from CSS specifications. 
As they are present in CSS1/CSS2 - there is nothing wrong in using them. 
Besides, using 'pt' (instead of 'px') is the only way to get font size *right* - and current CSS specification *doesn't recommend* using 'smaller' or 'bigger' - as these properties are device-dependant, so using them you limit your page portability and possibility to view it on different kind of devices. 
Therefor, I suggest that Guideline 3.4 should be excluded from WCAG 1.0 (or latest WCAG 2.0). 
If it's already done in Errata, please let me know URL of that Errata - so far I was not able to find any correction for this GL. Vadim Plessky 33 Window Decorations and 6 Widget Styles for KDE KDE mini-Themes and I In general I agree, but I don't think it's that clear cut - I'm concerned as to who the users are who require text to be scaled, but aren't interested in having images scaled. 
Current UA's provide mechanisms for scaling both together, and this works best today where the text has been scaled to the image, which only the author can do, so for these users a fixed font size is advantageous. 
* definitions - than are vvery but we to And pt or cm are entirely appropriate for CSS in a medium where the output characteristics are known, such as print, or for your own personal interests, we should remember CSS is not just for creating webpages. 
Jim. 
* I realise I use my browser differently from most, and actually maximise what we've already got... 
