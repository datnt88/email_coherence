Hi all 
Priority 10.4 states that form text areas should have default place-holding 
characters. 
This is causing us some grief here because it creates a 
situation where a sighted mouse-user has to deliberately delete the 
place-holding characters before typing in the text area. 
It is highly likely 
that some user will not delete but just type in the box either after, before or in the middle of the default text. 
This will cause huge problems for any form data that is inserted into databases unless we do some server side 
validation and character stripping from strings. 
If the user tabs to the text area it seems that the default text is highlighted and then overtyped but how can I make this happen with someone 
who uses a mouse (without resorting to client side javascript). 
thanks 
Julian Julian Scarlett Web Design &amp; Document Management System Officer PPU Education Directorate Sheffield City Council The information in this email is confidential. 
The contents may not be disclosed or used by anyone other than the addressee. 
If you are not the addressee, please tell us by using the reply facility in your email software as soon as possible. 
Sheffield City Council cannot accept any responsibility for the accuracy or completeness of this message as it has been transmitted over a public network. 
If you suspect that the message may have been intercepted or amended please tell us as soon as possible. 
(You mean Guideline 10.4. 
(It is at priority level 3.)) 
Many people share your opinions and views. 
The "place-holding characters" 
might help people using some old software, but they probably cause more problems than benefits. 
Besides, they are illogical, and using them conflicts with genuine default values provided by authors. 
You can't. 
My advice is: Don't use place-holding characters. 
(They are sometimes 
claimed to give information about the kind of data that is expected, but any 
need for such hints is caused by lack of adequate explanations and labels 
before the fields.) 
Jukka Korpela 
TIEKE Tietoyhteiskunnan kehitt?miskeskus 
ry Finnish Information Society Development Centre Salomonkatu 17 A, 10th floor, FIN - 00100 HELSINKI, FINLAND 
It is 
This can be easy, if you can use default text that is guaranteed to be invalid - e.g. non-numeric data in a numeric field. 
It is a problem though. 
I'm afraid javascript is the only way to do this in most browsers AFAIK. 
On the bright side it is a relatively easy piece of script to write in a manner that degrades well to non-javascript user-agents. 
Oops, yes I did mean that. 
Sorry. 
I think I may have misunderstood something here. 
I was (am) under the impression that whatever I, as an author, decide to put in a text area to 
designate it's intended use is the actual place-holding characters. 
Jukka's 
statement about them conflicting with *genuine* values provided by the authors seems to suggest that my understanding is wrong. 
What then, is a place-holding character and how does it differ from , for example, my decision as an author to put "enter your name here" in a text input that is for a user to type in their name. 
I must admit to being a tad confused now. 
If there is a difference between the two and I do not use place-holding characters how can I achieve AAA accessibility? 
thanks Julian. 
From: Jukka Korpela [mailto:jukka.korpela@tieke.fi] 
Sent: Thursday, May 23, 2002 10:54 AM Subject: RE: place-holding characters in form elements 
The information in this email is confidential. 
The contents may not be disclosed or used by anyone other than the addressee. 
If you are not the addressee, please tell us by using the reply facility in your email software as soon as possible. 
Sheffield City Council cannot accept any responsibility for the accuracy or completeness of this message as it has been transmitted over a public network. 
If you suspect that the message may have been intercepted or amended please tell us as soon as possible. 
What you put in a text area, e.g. Salomonkatu 17 A 10th floor FIN-00100 HELSINKI FINLAND specifies the "initial value", or "default value", for the field (or "control", to use the HTML 4 terminology). 
This means that if the user does nothing about it and submits the form, that value will be sent as the value of the field. 
This is great e.g. in applications that generate a form from data base information or from previous user input. 
For example, in a form for making modifications to a database entry, the program that generates the form would simply put the current entry into the form fields, letting the user see them all and modify those that need to be modified. 
Similarly for input type="text" . 
The value="..." attribute assigns an initial value to the field. 
What then, is a place-holding character and how does it differ from, for example, my decision as an author to put "enter your name here" in a text input that is for a user to type in their name. 
It doesn't differ from that - "enter your name" or just "your name" are what 
the Guidelines mean by "place-holding characters", though the characters 
could presumably be just dummy character data, like "*", when intended just to deal with some old browsers' inability to treat initially _empty_ input fields properly. 
If you use initially empty input fields, you don't achieve AAA accessibility. 
One might say that you then need to decide between accessibility and compliance with some rules for accessibility. 
:-) For example, when asking for a person's name, there's no point in putting any initial value into the field _unless_ you have some information of what the user's name might be. 
Jukka Korpela TIEKE Tietoyhteiskunnan kehitt?miskeskus 
ry Finnish Information Society Development Centre Salomonkatu 17 A, 10th floor, FIN - 00100 HELSINKI, FINLAND 
Myself included, FWIW. 
IMNSHO, guidelines should always steer well clear of advocating anything likely to be harmful (e.g. confusing) either 
Agreed. 
A technique I occasionally use is to populate a field with a help string, and use an onfocus event to clear it the first time the field gets focus. 
But whether that is a good idea is more a matter of usability than accessibility. 
shouldn't be too confusing, but can never be more than an ad-hoc usage. 
Nick Kew Available for contract work - Programming, Unix, Networking, Markup, etc. 
You could design your server-side application to recognize the placeholder text and either return the user to the form, flagging the error, or ignore the text as if nothing had been entered. 
Alan Chuter Fundosa Teleservicios Rufino Gonz?lez,40-2? 
planta 28037 Madrid achuter@teleservicios.com 
-----Mensaje original----- De: w3c-wai-ig-request@w3.org 
[mailto:w3c-wai-ig-request@w3.org]En nombre de Jukka Korpela Enviado el: jueves, 23 de mayo de 2002 12:50 Para: 'w3c-wai-ig@w3.org' 
Asunto: RE: place-holding characters in form elements 
What you put in a text area, e.g. Salomonkatu 17 A 10th floor FIN-00100 HELSINKI FINLAND specifies the "initial value", or "default value", for the field (or "control", to use the HTML 4 terminology). 
This means that if the user does nothing about it and submits the form, that value will be sent as the value of the field. 
This is great e.g. in applications that generate a form from data base information or from previous user input. 
For example, in a form for making modifications to a database entry, the program that generates the form would simply put the current entry into the form fields, letting the user see them all and modify those that need to be modified. 
Similarly for input type="text" . 
The value="..." attribute assigns an initial value to the field. 
What then, is a place-holding character and how does it differ from, for example, my decision as an author to put "enter your name here" in a text input that is for a user to type in their name. 
It doesn't differ from that - "enter your name" or just "your name" are what the Guidelines mean by "place-holding characters", though the characters could presumably be just dummy character data, like "*", when intended just to deal with some old browsers' inability to treat initially _empty_ input fields properly. 
If you use initially empty input fields, you don't achieve AAA accessibility. 
One might say that you then need to decide between accessibility and compliance with some rules for accessibility. 
:-) For example, when asking for a person's name, there's no point in putting any initial value into the field _unless_ you have some information of what the user's name might be. 
Jukka Korpela TIEKE Tietoyhteiskunnan kehitt?miskeskus 
ry Finnish Information Society Development Centre Salomonkatu 17 A, 10th floor, FIN - 00100 HELSINKI, FINLAND 
In fact the Checkpoint text is "Until user agents handle empty controls 
correctly, include default, place-holding characters in edit boxes and text 
areas". 
In order to decide whether this is still required to meet triple-A conformance it is important to have some idea of whether or not User Agents handle empty controls correctly. 
Unfortunately here we have to decide for ourselves unless and until the Web Content Accessibility Guidelines group provides some criteria. 
So until there is any better information, my understanding is that User Agents do handle empty controls correctly, so not including default place-holding characters does not violate this checkpoint any more. 
In some cases it is obviously helpful to have a default, but I agree wuth Jukka that having proper labels is the real solution to explaining what the form control is for (and that is already required by a higher priority checkpoint). 
cheers chaals 
If you use initially empty input fields, you don't achieve AAA accessibility. 
One might say that you then need to decide between accessibility and compliance with some rules for accessibility. 
:-) For example, when asking for a person's name, there's no point in putting any initial value into the field _unless_ you have some information of what the user's name might be. 
would that it were true that we could now abandon the practice but in fact, there are still many people not using the latest and greatest or even the updates or two before them or who are using application combinations whose feature set is still dinosauric. 
I would not make the leap just yet unless you know that your targets do not fit the above. 
In fact the Checkpoint text is "Until user agents handle empty controls 
correctly, include default, place-holding characters in edit boxes and 
text areas". 
In order to decide whether this is still required to meet triple-A conformance it is important to have some idea of whether or not User Agents handle empty controls correctly. 
Unfortunately here we have to decide for ourselves unless and until the Web Content Accessibility Guidelines group provides some criteria. 
So until there is any better information, my understanding is that User Agents do handle empty controls correctly, so not including default place-holding characters does not violate this checkpoint any more. 
In some cases it is obviously helpful to have a default, but I agree wuth Jukka that having proper labels is the real solution to explaining what the form control is for (and that is already required by a higher priority checkpoint). 
cheers chaals 
If you use initially empty input fields, you don't achieve AAA accessibility. 
One might say that you then need to decide between accessibility and compliance with some rules for accessibility. 
:-) For example, when asking for a person's name, there's no point in putting any initial value into the field _unless_ you have some information of what the user's name might be. 
examples are still valid no matter what the field. 
It is not only helpful to some, it also makes for a more accessible form for many still. 
What you put in a text area, e.g. Salomonkatu 17 A 10th floor FIN-00100 HELSINKI FINLAND specifies the "initial value", or "default value", for the field (or "control", to use the HTML 4 terminology). 
This means that if the user does nothing about it and submits the form, that value will be sent as the value of the field. 
This is great e.g. in applications that generate a form from data base information or from previous user input. 
For example, in a form for making modifications to a database entry, the program that generates the form would simply put the current entry into the form fields, letting the user see them all and modify those that need to be modified. 
Similarly for input type="text" . 
The value="..." attribute assigns an initial value to the field. 
What then, is a place-holding character and how does it differ from, for example, my decision as an author to put "enter your name here" in a text input that is for a user to type in their name. 
It doesn't differ from that - "enter your name" or just "your name" are what 
the Guidelines mean by "place-holding characters", though the characters 
could presumably be just dummy character data, like "*", when intended just to deal with some old browsers' inability to treat initially _empty_ input fields properly. 
If you use initially empty input fields, you don't achieve AAA accessibility. 
One might say that you then need to decide between accessibility and compliance with some rules for accessibility. 
:-) For example, when asking for a person's name, there's no point in putting any initial value into the field _unless_ you have some information of what the user's name might be. 
Jukka Korpela TIEKE Tietoyhteiskunnan kehitt?miskeskus 
ry Finnish Information Society Development Centre Salomonkatu 17 A, 10th floor, FIN - 00100 HELSINKI, FINLAND 
tell the user to destroy the text. 
No java script is needed. 
It is 
side 
This can be easy, if you can use default text that is guaranteed to be invalid - e.g. non-numeric data in a numeric field. 
It is a problem though. 
someone 
I'm afraid javascript is the only way to do this in most browsers AFAIK. 
On the bright side it is a relatively easy piece of script to write in a manner that degrades well to non-javascript user-agents. 
you cannot prevent people from entering incorrect data either but we deal. 
(You mean Guideline 10.4. 
(It is at priority level 3.)) 
Many people share your opinions and views. 
The "place-holding 
characters" might help people using some old software, but they probably cause more problems than benefits. 
Besides, they are illogical, and using them conflicts with genuine default values provided by authors. 
You can't. 
My advice is: Don't use place-holding characters. 
(They are sometimes 
claimed to give information about the kind of data that is expected, but 
any 
need for such hints is caused by lack of adequate explanations and 
labels 
before the fields.) 
Jukka Korpela TIEKE Tietoyhteiskunnan kehitt?miskeskus 
ry Finnish Information Society Development Centre Salomonkatu 17 A, 10th floor, FIN - 00100 HELSINKI, FINLAND 
However, is a user enters data and then accidently tabs or clicks away and then focuses back on the field, the data will be cleared. 
If you really feel the need for default text, then it is better to do something along the lines of: onfocus="if(!this.cleared){this.value='';this.cleared=true;}" 
/ This should only clear the text once. 
You can also do this.select() onfocus, to select all the text - when the user starts typing, that text will generally be deleted. 
Often users don't realize this however, and delete the text first anyway. 
Tom Gilder 
and of course, if It never is sensed that onfocus has been triggered, you still have to clear it manually but at least you know what format the date should take. 
Myself included, FWIW. 
IMNSHO, guidelines should always steer well clear of advocating anything likely to be harmful (e.g. confusing) either 
but any 
labels 
Agreed. 
A technique I occasionally use is to populate a field with a help string, and use an onfocus event to clear it the first time the field gets focus. 
But whether that is a good idea is more a matter of usability than accessibility. 
shouldn't be too confusing, but can never be more than an ad-hoc usage. 
Nick Kew Available for contract work - Programming, Unix, Networking, Markup, etc. 
