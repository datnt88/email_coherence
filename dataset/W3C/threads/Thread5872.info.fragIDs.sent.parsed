(S1 (NP (NP (DT Another) (NN question)) (, ,) (NP (NP (DT this) (NN time)) (PP (IN about) (NP (JJ unsupported) (NNS datatypes)))) (. .)))
(S1 (S (PP (IN In) (NP (DT the) (NN reference) (NNP doc))) (, ,) (NP (PRP it)) (VP (VBZ says) (: :) (`` ``) (S (PP (IN For) (NP (JJ unsupported) (NNS datatypes))) (, ,) (ADVP (RB lexically)) (NP (JJ identical) (NNS literals)) (VP (MD should) (VP (AUX be) (VP (VBN considered) (S (ADJP (JJ equal))) (, ,) (SBAR (IN whereas) (S (NP (ADJP (RB lexically) (JJ different)) (NNS literals)) (VP (MD would) (RB not) (VP (AUX be))))))))))))
(S1 (S (VP (VBN known) (S (VP (TO to) (VP (AUX be) (ADJP (DT either) (JJ equal) (CC or) (JJ unequal)))))) (. .)))
(S1 (S (NP (JJ Unrecognized) (NNS datatypes)) (VP (MD should) (VP (AUX be)))))
(S1 (S (VP (VBN treated) (PP (IN in) (NP (DT the) (JJ same) (NN way))) (PP (IN as) (NP (JJ unsupported) (NNS datatypes)))) (. .) ('' '')))
(S1 (S (NP (NP (DT The) (JJ first) (NN half)) (PP (IN of) (NP (DT the) (NN sentence)))) (VP (MD would) (VP (VB suggest) (S (VP (TO to) (VP (VB treat) (NP (NP (DT a) (JJ literal)) (PP (IN of) (NP (JJ unknown) (NN type)))) (PP (IN as) (NP (RB just) (DT a) (NN string)))))))) (. .)))
(S1 (S (ADVP (RB However)) (, ,) (NP (PRP I)) (VP (AUX am) (RB not) (ADJP (RB entirely) (JJ sure)) (SBAR (WHNP (WP what)) (S (VP (AUX is)))))))
(S1 (VP (VBN expected) (PP (IN from) (NP (DT a) (NNP reasoner))) (PP (IN with) (NP (NP (NN respect)) (PP (TO to) (NP (NP (DT the) (NN behaviour)) (PP (IN of) (`` ``) (S (VP (MD would) (RB not) (VP (AUX be)))))))))))
(S1 (S (VP (VBN known) (S (VP (TO to) (VP (AUX be) (ADJP (DT either) (JJ equal) (CC or) (JJ unequal) ('' '')))))) (. .)))
(S1 (FRAG (NP (NNS Views)) (. ?) (NP (NNP Cheers)) (, ,) (NP (NNP G) (NNP Gary) (NNP Ng)) (, ,) (NP (NNP PhD) (NN gary.ng)) (X (SYM @)) (NP (NP (JJ networkinference.com) (JJ Senior) (NN Software) (NN Engineer)) (NP (NNP Network) (NNP Inference) (PRN (-LRB- -LRB-) (NP (NNP Holdings)) (-RRB- -RRB-)) (NNP Ltd)))))
(S1 (S (NP (ADJP (JJ Unknown) (CC or) (JJ unrecognised)) (NNS datatypes)) (VP (AUX are) (VP (VBN treated) (PP (IN as) (S (VP (AUXG being) (NP (NP (DT the) (JJ lexical) (NN form)) (PRN (-LRB- -LRB-) (NP (DT a) (NN string)) (-RRB- -RRB-)) (PP (IN of) (NP (DT some) (JJ unknown) (NN datatype))))))))) (. .)))
(S1 (S (NP (PRP It)) (VP (AUX is) (ADVP (RB obviously)) (NP (NP (DT the) (NN case)) (SBAR (WHNP (WDT that)) (S (, ,) (SBAR (WDT whatever) (FRAG (NP (DT the) (NN datatype)))) (, ,) (NP (JJ identical) (JJ lexical) (NNS forms)) (VP (VP (VBP map) (PP (TO to) (NP (NP (DT the) (JJ same) (NN element)) (PP (IN of) (NP (DT the) (NN value) (NN space)))))) (, ,) (CC and) (VP (MD can) (ADVP (RB thus)) (VP (AUX be) (VP (VBN considered) (S (ADJP (JJ equal))))))))))) (. .)))
(S1 (S (PP (IN For) (NP (JJ non-identical) (JJ lexical) (NNS forms))) (, ,) (ADVP (RB however)) (, ,) (NP (PRP it)) (VP (VBG *) (NP (JJ cannot) (NNS *))) (VP (AUX be) (VP (VBN assumed) (SBAR (IN that) (S (NP (PRP they)) (VP (AUX do) (RB not) (VP (VP (VBP map) (PP (TO to) (NP (NP (DT the) (JJ same) (NN element)) (PP (IN of) (NP (DT the) (NN value) (NN space)))))) (CC and) (VP (AUX are) (ADVP (RB thus)) (ADJP (JJ unequal))))))))) (. .)))
(S1 (S (NP (NP (NNP E.g.)) (, ,) (NP (NP (DT the) (JJ lexical) (NNS forms)) (`` ``) (CD 1.0) ('' '') (CC and) (`` ``) (CD 01.00) ('' ''))) (VP (MD would) (VP (NN map) (PP (TO to) (NP (NP (DT the) (JJ same) (NN value)) (PRN (-LRB- -LRB-) (CC and) (ADVP (RB thus)) (VP (AUX be) (VP (VBN considered) (ADJP (JJ equal)))) (-RRB- -RRB-) (PP (PP (IN in) (NP (NP (DT some) (NNS datatypes)) (PRN (-LRB- -LRB-) (NP (NNP e.g.)) (, ,) (NP (NN decimal)) (-RRB- -RRB-)))) (, ,) (CC but) (RB not) (PP (IN in) (NP (NP (NNS others)) (PRN (-LRB- -LRB-) (NP (NNP e.g.)) (, ,) (NP (NN string)) (-RRB- -RRB-)))))))))) (. .)))
(S1 (NP (NNP Ian)))
(S1 (FRAG (PP (IN From)) (: :) (NP (NP (NP (NNP Ian) (NNPS Horrocks)) (VP (VBN Sent))) (: :) (NP (NP (CD 15) (NNP July)) (ADJP (NP (CD 2003) (CD 18:02)) (JJ Subject))) (: :) (NP (NNP Re)) (: :) (NP (JJ unsupported) (NNS datatypes)))))
(S1 (X (AUX be)))
(S1 (X (AUX is)))
(S1 (X (AUX be)))
(S1 (S (INTJ (UH Yes)) (, ,) (NP (PRP I)) (VP (VBP got) (NP (DT that))) (. .)))
(S1 (S (CC But) (PP (IN from) (NP (NP (DT a) (JJ practical) (NN point)) (PP (IN of) (NP (NP (NN view)) (PP (IN of) (S (VP (VBG handling) (NP (NNS values)) (PP (IN from) (NP (NP (DT an) (JJ unsupported) (NN datatype)) (PP (IN within) (NP (DT a) (NN reasoning) (NN tool)))))))))))) (, ,) (NP (DT this)) (VP (VBZ sounds) (SBAR (IN like) (S (NP (PRP I)) (VP (MD can) (RB n't) (ADVP (RB even)) (VP (VB implement) (NP (PRP them)) (PP (IN as) (NP (NNS strings))) (SBAR (IN because) (S (PP (IN since) (NP (CD two) (JJ different) (NNS strings))) (VP (MD would) (VP (AUX be) (VP (VBN considered) (S (ADJP (JJ unequal))))))))))))) (. .)))
(S1 (S (IN So) (NP (DT the) (NN question)) (VP (AUX is) (, ,) (SBARQ (WHADVP (WRB how)) (SQ (MD should) (NP (PRP I)) (VP (VB implement) (NP (PRP them)))) (. ?)))))
(S1 (S (VP (VB Consider) (NP (NP (DT the) (VBG following)) (: :) (NP (JJ hasAValueOf) (NNP rdf)) (: :) (NP (NP (JJ datatype=) (`` ``) (NN someUnsupportedType) ('' '') (NNS XYZ)) (NP (NN /hasAValueOf) (NN hasAValueOf) (NNP rdf))) (: :) (S (VP (VBG datatype=) (`` ``) (NP (NN someUnsupportedType)) ('' '') (S (NP (NNP ABC)) (ADVP (RB /hasAValueOf)) (PP (IN by) (NP (DT the) (NN definition))) (, ,) (NP (`` ``) (JJ XYZ) ('' '') (CC and) (`` ``) (NP (NNP ABC)) ('' '')) (VP (AUX are) (ADJP (DT neither) (JJ equal) (CC nor) (JJ unequal)))))))) (. .)))
(S1 (SBARQ (RB So) (WHNP (WP what)) (SQ (VP (MD should) (VP (AUX be) (NP (NP (DT the) (NN answer)) (PP (TO to) (NP (DT the) (VBG following) (NN question))))))) (. ?)))
(S1 (S (VP (VB Retrieve) (NP (NP (DT all) (NNS instances)) (SBAR (IN of) (S (PRN (-LRB- -LRB-) (RB complementOf) (PRN (-LRB- -LRB-) (VP (VBZ exists) (NP (JJ hasAValueOf) (NNS XYZ))) (-RRB- -RRB-)) (-RRB- -RRB-)) (IN Because) (S (NP (PRP we)) (VP (VBP cannot) (SBAR (S (VP (NN *) (VP (VB prove) (ADJP (JJ *) (SBAR (IN that) (S (NP (NNP XYZ) (SYM =) (X (CC or) (. !) (SYM =)) (PP (TO to) (NP (NNP ABC)))) (, ,) (ADVP (RB thus)) (NP (DT The) (NN answer)) (VP (MD would) (VP (AUX be) (ADJP (JJ empty))))))))))))) (. .)))))))
(S1 (SQ (AUX Am) (NP (PRP I)) (ADJP (JJ correct)) (. ?)))
(S1 (S (SBAR (IN If) (S (NP (PRP I)) (VP (AUX am) (ADJP (JJ correct))))) (, ,) (ADVP (RB then)) (NP (DT this) (NN behaviour)) (VP (AUX is) (NP (NP (DT the) (JJ same)) (PP (IN as) (SBAR (IN if) (S (NP (NNP XYZ) (CC and) (NNP ABC)) (VP (AUX are) (NP (NNS classes/instances)))))))) (. .)))
(S1 (S (CC So) (ADVP (RB really)) (NP (PRP we)) (VP (MD can) (RB n't) (VP (VB implement) (NP (NNS values)) (PP (IN from) (NP (NP (JJ unsupported) (NNS datatypes)) (PP (IN as) (NP (NNS strings))))))) (. .)))
(S1 (INTJ (JJ Correct) (. ?)))
(S1 (NP (NNP G)))
