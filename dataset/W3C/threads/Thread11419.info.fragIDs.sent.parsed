(S1 (FRAG (WHNP (WP What)) (SBAR (IN if) (S (NP (JJ end) (NN tag) (NNS GIs)) (VP (AUX were) (VP (VBN required) (ADVP (RB only)) (PP (IN for) (NP (NP (NNS elements)) (VP (VBN *) (PP (IN with) (NP (NP (NNS subelements)) (ADJP (JJ *) (CC and) (JJ optional)) (PP (IN for) (NP (NP (NNS elements)) (VP (VBN *) (PP (IN without) (NP (NNP *))))))))))))))) (. .)))
(S1 (S (S (ADVP (RB Then)) (NP (NP (DT the) (NN perl) (NN hacker) (POS 's)) (NN job)) (VP (AUX is) (RB not) (ADJP (ADJP (RB quite) (RB as) (JJ difficult)) (PP (IN as) (PP (IN with) (NP (JJ nested) (NNS elements))))) (PP (IN without) (NP (NNPS GIs))) (PP (IN in) (NP (NN end) (NNS tags))))) (CC and) (S (NP (DT the) (NN user)) (VP (MD would) (VP (AUX have) (NP (NP (DT a) (JJ hard) (NN time)) (S (VP (VBG getting) (VP (`` ``) (VBN lost) ('' '') (PP (IN in) (NP (DT the) (NNS levels)))))))))) (. .)))
(S1 (S (NP (NP (DT The) (`` ``) (JJ short) (NNS fields) ('' '')) (PP (IN in) (NP (NN database) (NNS records)))) (VP (MD would) (ADVP (RB also)) (VP (AUX be) (ADJP (JJ able) (S (VP (TO to) (ADVP (RB almost) (RB always)) (VP (VB use) (NP (DT the) (JJ short) (NN form)))))))) (. .)))
(S1 (S (S (S (VP (TO To) (VP (VB put) (NP (NP (DT the) (NNP Perl) (NN programmer) (POS 's)) (NN plight)) (PP (IN in) (NP (ADJP (RBR more) (JJ formal)) (NNS terms)))))) (, ,) (NP (NP (DT the) (NN language)) (PP (IN of) (NP (NP (NP (NNS elements)) (PP (IN with) (NP (DT an) (JJ optional) (NN GI)))) (CC and) (NP (DT no) (NNS subelements))))) (VP (AUX is) (VP (VBG *) (NP (JJ regular) (NNS *))))) (PRN (-LRB- -LRB-) (VP (MD can) (VP (AUX be) (VP (VBN described) (PP (IN with) (NP (DT a) (JJ regular) (NN expression)))))) (-RRB- -RRB-)) (CC but) (S (NP (NP (DT the) (NN language)) (VP (VBN described) (PP (IN by) (NP (DT the) (NN proposal))))) (VP (AUX is) (RB not))) (. .)))
(S1 (S (S (NP (NNP grep)) (VP (VP (MD may)) (CC or) (VP (MD may) (RB not) (VP (AUX be) (ADJP (JJ able) (S (VP (TO to) (VP (VB deal) (PP (IN with) (NP (DT this) (NN language))))))) (, ,) (SBAR (IN because) (S (NP (NN grep)) (VP (AUX is) (ADJP (JJ line-oriented)) (PRN (-LRB- -LRB-) (NP (UCP (PP (IN by) (NP (NN default))) (CC or) (ADVP (RB always))) (NNS ???)) (-RRB- -RRB-))))))))) (, ,) (CC but) (S (NP (ADJP (NN character) (VBN oriented)) (NNS searchers)) (VP (MD should) (VP (AUX have) (NP (DT no) (NN problem))))) (. .)))
(S1 (S (NP (PRP I)) (VP (VBP think) (SBAR (IN that) (S (NP (DT the) (JJ regular) (NN expression)) (VP (AUX is) (: :) (NP (NP (NN chargrep) ('' '') (NN /foo) ('' '') (NN |) ('' '') (NN foo) ('' '') (JJ -LSB-^) (JJ *) (NN -RSB-) ('' '') (NN /)) ('' '') (SBAR (WHNP (WDT That)) (S (S (VP (POS 's) (NP (DT a) (JJ strange) (NN syntax)))) (, ,) (CC but) (S (NP (NP (DT the) (NN equivalent)) (PP (IN in) (NP (PRP$ your) (JJ favourite) (NN syntax)))) (VP (MD should) (VP (AUX be) (ADJP (RB no) (RBR more) (JJ complicated)))))))))))) (. .)))
(S1 (S (NP (NP (DT The) (NN downside)) (PP (IN of) (NP (DT this) (NN proposal)))) (VP (AUX is) (SBAR (IN that) (S (SBAR (IN if) (S (NP (PRP you)) (VP (VBP add) (NP (DT a) (NN sub-element)) (PP (TO to) (NP (DT an) (NN element)))))) (NP (PRP you)) (VP (MD must) (VP (VB add) (NP (DT a) (NN GI)) (PP (TO to) (NP (DT the) (NN endtag)))))))) (. .)))
(S1 (S (ADVP (RB Thus)) (NP (DT the) (NN language)) (VP (AUX is) (NP (NP (DT a) (JJ little) (NN bit)) (ADJP (RBR less) (JJ regular)))) (. .)))
(S1 (S (NP (PRP I)) (VP (MD would) (VP (VB accept) (NP (NP (DT a) (ADJP (RB slightly) (JJR less)) (JJ regular) (NN language)) (PP (IN for) (NP (NP (NNS hundreds)) (PP (IN of) (NP (NP (VBN saved) (NNS keystrokes)) (CC and) (NP (NP (DT those)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (RB n't) (VP (MD could) (VP (VB stick) (PP (TO to) (NP (DT the) (NN end-tag))) (NP (VBN required) (NN syntax))))))))))))))) (. .)))
(S1 (S (NP (PRP I)) (VP (VBP suspect) (SBAR (IN that) (S (NP (DT the) (NN math) (NNS people)) (VP (AUX are) (VP (VBG going) (S (VP (TO to) (VP (AUX be) (NP (ADJP (RB VERY) (JJ interested)) (NNS shorttags)))))))))) (. .)))
(S1 (S (S (NP (PRP I)) (VP (AUX 'm) (RB not) (VP (VBG saying) (SBAR (S (NP (PRP we)) (VP (MD should) (VP (VB go) (ADVP (ADVP (RB as) (RB far)) (PP (IN as) (NP (FW shortrefs))))))))))) (, ,) (CC but) (S (NP (PRP I)) (VP (VBP think) (SBAR (IN that) (S (NP (NP (DT a) (JJ single) (NN level)) (PP (IN of) (NP (NP (JJ unnamed) (NN end) (NNS tags)) (-LRB- -LRB-) (SBAR (IN as) (S (VP (VBN described) (PP (IN in)))))))) (VP (AUX is) (RB not) (ADJP (RB too) (JJ hard) (SBAR (S (VP (TO to) (VP (VB search) (PP (IN for)))))))))))) (. .)))
(S1 (FRAG (ADVP (RB ASIDE)) (NP (DT NAME=) (`` ``) (NN Idea) ('' '')) (WHNP (WP What)) (PP (IN about) (NP (NP (JJ regular) (NNS SGML/XML)) (SBAR (WHADVP (WRB where)) (S (NP (PRP you)) (VP (AUX have) (VP (VBN nested) (NP (NP (JJ recursive) (NNS elements)) (, ,) (PP (JJ such) (IN as) (NP (NNP DIV)))))))))) (. ?)))
(S1 (S (NP (EX There)) (VP (AUX is) (ADVP (RB exactly)) (NP (NP (DT the) (JJ same) (NN problem)) (PP (IN for) (NP (NP (NNS users)) (CC and) (NP (NN perl) (NNS hackers)))))) (. .)))
(S1 (S (NP (EX There)) (VP (MD should) (VP (AUX be) (NP (NP (DT a) (NN way)) (PP (IN of) (S (VP (VBG labelling) (NP (NP (VB start) (CC and) (VB end) (NNS tags)) (SBAR (WHNP (WDT that)) (S (VP (MD will) (VP (VB allow) (S (NP (DT the) (NN parser)) (VP (TO to) (VP (VB determine) (SBAR (IN that) (S (NP (PRP they)) (VP (VB line) (PRT (RP up))))))))))))))))))) (. .)))
(S1 (NP (NNP Paul) (NNP Prescod)))
(S1 (S (SBAR (IN If) (S (NP (PRP I)) (VP (VBP understand) (NP (PRP$ your) (JJ final) (NN suggestion))))) (, ,) (NP (PRP you)) (VP (AUX are) (VP (VBG asking) (S (VP (TO to) (VP (AUX have) (S (NP (PRP it)) (ADJP (JJ legal)) (S (VP (TO to) (VP (AUX have) (NP (DT an) (NN ID) (NN attribute)) (PP (IN on) (NP (DT an) (JJ end) (NN tag)))))))))))) (. .)))
(S1 (SQ (SQ (AUX Is) (NP (DT that)) (ADJP (JJ correct))) (, ,) (CC or) (SQ (AUX do) (NP (PRP I)) (ADJP (JJ misunderstand))) (. ?)))
(S1 (S (INTJ (UH No)) (, ,) (NP (DT that)) (VP (AUX 's) (ADVP (RB just)) (, an) (ADVP (RB aside))) (. .)))
(S1 (NP (DT A) (JJ future) (NN consideration) (. .)))
(S1 (S (NP (DT The) (CD *) (JJ real) (NNP *) (NN proposal)) (VP (AUX is) (S (VP (TO to) (VP (VB allow) (NP (NP (NP (DT a) (JJ single) (NN level)) (PP (IN of) (NP (NN shorttag)))) (: :) (NP (NP (NN shorttag) (RB only)) (PP (IN on) (NP (NN leaf) (NNS nodes))))))))) (. .)))
(S1 (S (NP (DT This)) (VP (VP (AUX is) (NP (NP (DT the) (NN usage)) (VP (VBN demonstrated) (PP (IN in) (NP (DT the) (NNP Microsoft) (NNS examples)))))) (CC and) (VP (MD can) (VP (AUX be) (VP (VBN described) (PP (IN by) (NP (NP (DT a) (JJ strict) (JJ regular) (NN expression)) (CONJP (RB rather) (IN than)) (NP (DT a) (NN CFG)))))))) (. .)))
(S1 (S (NP (DT This)) (VP (VBZ brings) (NP (JJ Dirty) (NNP Perl) (NNS Hackers)) (ADVP (RB back) (PP (IN into) (NP (DT the) (NN game)))) (PP (IN without) (S (VP (VBG requiring) (S (NP (PRP them)) (VP (TO to) (VP (VB implement) (NP (DT a) (VB stack))))))))) (. .)))
(S1 (S (S (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (PRP it)) (VP (AUX is) (NP (NP (DT the) (JJS best)) (PP (IN of) (NP (DT both) (NNS worlds))))))))) (CC but) (S (NP (NN nobody) (RB else)) (VP (VBZ seems) (ADJP (JJ interested)))) (. .)))
(S1 (NP (NNP Paul) (NNP Prescod)))
