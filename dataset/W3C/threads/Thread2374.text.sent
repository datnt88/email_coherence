Please have a look at this.. Josh Cohen Netscape Communications Corp. Netscape Fire Department "My opinions, not Netscape's" Server Engineering josh@netscape.com http://home.netscape.com/people/josh/ 
Network Working Group Josh Cohen Internet-Draft Netscape Communications Expires in 6 Months 24 March 1997 Discovering proxy servers Status of this Memo This document is an Internet-Draft. 
Internet-Drafts are working documents of the Internet Engineering Task Force (IETF), its areas, and its working groups. 
Note that other groups may also distribute working documents as Internet-Drafts. 
Internet-Drafts are draft documents valid for a maximum of six months and may be updated, replaced, or obsoleted by other documents at any time. 
It is inappropriate to use Internet- Drafts as reference material or to cite them other than as ``work in progress.'' To learn the current status of any Internet-Draft, please check the ``1id-abstracts.txt'' 
listing contained in the Internet- Drafts Shadow Directories on ftp.is.co.za (Africa), nic.nordu.net 
(Europe), munnari.oz.au (Pacific Rim), ds.internic.net 
(US East Coast), or ftp.isi.edu (US West Coast). 
Abstract This document describes a method for automating 'out of the box' configuration of WWW clients via the Server Location Protocol. 
Presently, the most popular method of automatic browser configuration is via a Proxy Autoconfig file, which is delivered upon request to the browser. 
Unfortunately, the URL of this PAC file must still be specified by the user or administrator. 
Introduction The Server Location Protocol working group has defined a number of Internet Drafts on how to locate and advertise services on IP networks. 
This draft suggests using the method described in [SRVURL] and [SVRADV] to advertise the URL of the autoconfig file. 
If has been suggested that a client should use DHCP in [KWAN] to determine this URL, but presently, there is no cross platform way to reference DHCP configuration options. 
Because of this, the author suggests using the Server Location protocol. 
J. Cohen [Page 1] INTERNET-DRAFT Discovering proxy servers 24 March 1997 By following the recommendations in this draft, an administrator can expect that a user will procure a conforming web client, install it on their computer and have the product automagically configure itself for the appropriate proxy policies based on the clients domain. 
Advertising the URL As specified in [SRVADV] and [SRVRR], service: URLs can be advertised via DNS. 
The method for advertising these resources in DNS is based on TXT RRs and SRV RRs. 
Presently, SRV records are not widely supported, so in the interim, [TXT] recommends using TXT records instead. 
The service URL for a PAC file is a service URL defined in [SRVURL]. 
The general format of a service: URL is: service: service-location The explicit format of the URL in DNS TXT records is defined in [FIND]. 
The general format is: service IN TXT "service: srvtag - url " [preference] [protocol According to [FIND], srvtag would be 'yp' short for yellow pages. 
This is the generic tag for services, as opposed to 'wp' or white pages for people. 
Service should be 'w3-ns-pac' to specify the type of configuration we are looking for. 
An example for a proxy called proxy1.foo.com on port 8080 whose PAC file is /proxy.pac 
is: w3-ns-pac IN TXT "service:yp-http://proxy1.foo.com:8080/proxy.pac" 
Discovering the PAC URL A client should attempt to discover the PAC URL at least as often as upon each startup. 
To do so it shall query DNS for TXT RRs with the identifier w3-ns-pac. 
It should start with the most specific domain, and the query, with a more general domain, until it finds an response. 
For example, for a client whose name is pc1.test.corp.foo.com, the client should query, in order: w3-ns-pac.text.corp.foo.com. 
J. Cohen [Page 2] INTERNET-DRAFT Discovering proxy servers 24 March 1997 w3-ns-pac.corp.foo.com. 
w3-ns-pac.foo.com. 
Note the final '.' to speed unsucessful queries. 
The 'w3-ns-pac' specifier The specifier should is unique and it reflects: the functional area: the world wide web the origination of: ns (Netscape Communications) this resource format the type of resource: PAC (Proxy Auto Config) By using unique identifiers, administrators can list other resources for other types of PAC files, should they use a browser which has its own format. 
The PAC file format This format has generally become a defacto standard, but is not currently defined in any standards body. 
Information can be found at: [PAC] Security Considerations Since this discovery method depends on DNS, it is subject to the same concerns and restrictions as the Domain Name System with respect to security. 
It is presumed that this functionality will be of most use in an intranet deployment where the DNS servers, and proxy servers are maintained by the same organization. 
Therefore, a certain degree of trust is assumed. 
References [HTTP] R. Fielding, J. Gettys, J.C. Mogul, H. Frystyk, T. Berners-Lee "Hypertext Transfer Protocol -- HTTP/1.1", RFC 2068, Jan 1997 [KWAN] S. Kwan, "DHCP Option for Proxy Client Configuration File", draft-kwan-proxy-client-conf-00.txt, 
March 1997 [SRVRR] A. Gulbrandsen, P. Vixie, "A DNS RR for specifying the location of services (DNS SRV)," RFC 2052, October 1996. 
J. Cohen [Page 3] INTERNET-DRAFT Discovering proxy servers 24 March 1997 [SRVURL] E. Guttman, "The service: URL Scheme", draft-ietf-svrloc-service-scheme-00.txt , November 1996. 
[SVRLOC] C. Perkins, S. Kaplan, J. Veizades, E. Guttman, "Service Location Protocol", draft-ietf-svrloc-protocol-15.txt, 
January 1997 [SVRADV] R. Moats, M. Hamilton, "Advertising Services", draft-ietf-svrloc-advertise-00.txt 
February 1997 [FIND] R. Moats M. Hamilton, "Finding Stuff (How to discover)", draft-ietf-svrloc-discovery-00.txt, 
February 1997 [PAC] A. Luotonen, "Netscape Proxy Autoconfiguration" March 1996 Author's Address Josh Cohen Netscape Communications Corporation 501 E. Middlefield Rd Mountain View, CA 94043 Phone (415) 937-4157 J. Cohen [Page 4] A question about auto-config: under what circumstances does it come into play? 
For example, suppose I start up a browser and it configures itself. 
Then I fuss with the configuration, use the browser for awhile, then quit. 
When I start it again, is the browser going to override the settings I put in place, or does it try to auto-config only if there are no other settings? 
If the browser only tries to configure itself if there are no pre-settings, there's another problem. 
Suppose, given the scenario above, that I decide, for whatever reason, that I want no proxies. 
When I exit and restart, will auto-config force a proxy on me again? 
Dave Kristol Date: Thu, 27 Mar 1997 09:38:06 -0500 From: Dave Kristol dmk@bell-labs.com 
A question about auto-config: under what circumstances does it come into play? 
For example, suppose I start up a browser and it configures itself. 
Then I fuss with the configuration, use the browser for awhile, then quit. 
When I start it again, is the browser going to override the settings I put in place, or does it try to auto-config only if there are no other settings? 
If the browser only tries to configure itself if there are no pre-settings, there's another problem. 
Suppose, given the scenario above, that I decide, for whatever reason, that I want no proxies. 
When I exit and restart, will auto-config force a proxy on me again? 
I think the answer should be that by default, a browser will try automatic configuration, and if that fails will use no proxy. 
However, the preferences of the program should allow you to tell it to use something other than the default setting. 
So you can either choose a proxy manually or disable proxies. 
I think the default should be up to the client publisher. 
I would recommend that once the user has manually altered setting, either those setting persist or the user should be asked if the settings are temporary. 
In the context of Netscape 3.0, the user has three proxy choices: 1. 
No 2. Manual ... which allows mix and match 3. PAC URL The shipping default is NO proxy. 
I would expect that the new protocol would either replace #3 or add a #4 and I would guess that the install script would include an autoconfig option and either select #1 or #4 but I mention these only to put in context the ID as I read it with how it might be used. 
I don't see any need for the RFC which might result from this dealing with how individual implementations might be seen by the user except as setting the context for understanding the protocol. 
Dave Morris Date: Thu, 27 Mar 1997 12:35:00 -0800 (PST) From: "David W. Morris" dwm@xpasc.com 
I think the default should be up to the client publisher. 
I would recommend that once the user has manually altered setting, either those setting persist or the user should be asked if the settings are temporary. 
I agree. 
However, note that automagic configuration has the ideal that a network administrator should be able configure one server machine and then not have to touch the clients. 
When people at my school screwed the routing so that the machines behind the firewall could talk to the mail server, but not outside machines, I changed about three teacher's machines manually. 
Those teachers didn't have a clue what a proxy is; and it would be no easier for them to tell the browser to use automagic setup than it is for them to say to use 204.130.130.62 port 80. 
In the context of Netscape 3.0, the user has three proxy choices: 1. 
No 2. Manual ... which allows mix and match 3. PAC URL The shipping default is NO proxy. 
I would expect that the new protocol would either replace #3 or add a #4 and I would guess that the install script would include an autoconfig option and either select #1 or #4 but I mention these only to put in context the ID as I read it with how it might be used. 
I don't see any need for the RFC which might result from this dealing with how individual implementations might be seen by the user except as setting the context for understanding the protocol. 
Agreed. 
I personally would rahter see dhcp used instead of dns I think. 
But I need to read the dhcp spec before I comment furthur... Apparently, protocol working groups have the responsibility to ensure that the agents that implement their protocols are managable. 
There's an "application MIB" working group also scheduled for IETF, and one of the issues is network management of web servers. 
Perhaps things like proxy configurations and the network management of clients are a good topic to raise in that forum. 
I think the issue your talking about is where the browser control resides. 
Does the control reside with the network administrator, who "knows better" about what proxies to use and when? 
or does the user know better? 
Keep in mind, that the browser iplementation is free to query the user on whether or not to accept the configuration presented. 
The intent of the draft is to address concerns from administrators in large networks about difficulty in either configuring a large number of browsers, or educating a non technical crowd how to configure proxy settings. 
If the administrators have not configured the TXT record, then the browser should default to the configured settings. 
While I've said that the browser implemention is flexible, I would recommend a model like the netscape navigator. 
Out of the box, the browser should be set to 'discovery proxy settings', but still have the check boxes for 'manual settings' 'no proxies' 'explicit PAC URL' and that choice be saved in the users preferences. 
This arrangement seems to meet the needs you specify (IMHO ) Josh Cohen Netscape Communications Corp. Netscape Fire Department "My opinions, not Netscape's" Server Engineering josh@netscape.com http://home.netscape.com/people/josh/ 
There is a draft which recommends using dhcp instead, which I cite in my draft. 
I beleive the Server Location Method is a better choice because: 1. DHCP doesnt have a cross platform interface to its configuration option. 
By using DNS, or even the raw SVRLOC multicast protocol, its still a consistent and relatively easy implementation. 
2. DHCP is a one time configuration retreival, the proxy config can change dynamically, and DNS allows a mechanism to do that. 
( ie it has a lifetime ) ( yes, DHCP has a lease, but I beleive that is meant to be more long lived ) 3. Service location is an appropriate way to advertise a service, which I beleive the proxy is. 
The browser is discovering an available proxy service, not a host configuration option. 
4. DNS is much more commonly deployed where the web clients are (its usually a necessity ), while DHCP seems to be mainly popular on PCs Agreed ( in previous reply ) Yes, if thats all your saying, but these days, a common config would be something like: set http:// to go to proxy1 on port 80 set ftp:// to go to proxy2 on port 80 set https://*.evil.com to proxy 3 in port 443 set no-proxy for mydomain.com 
yourdomain.com 
thishost.thatdomain.com and more complex ones are coming ie: send HTTP GETS to proxy2 on port 80 send HTTP PUTS to proxy3 port 80. 
I suspect that if the browser can detect this by itself, out of the box, the teachers life is greatly simplified. 
As an aside, even if the discovery isnt used, the teacher still must navigate to 'proxy settings - auto' and specifiy the URL: http://proxy:8080/proxy.pac which is still much easier than a manual configuration. 
I want to make the point that as caches as being deployed more frequently and with more complexity, ie hierarchies and dynamic ICP type protocols, the configurations need to be dynamic and complex. 
Well beyond what a nontechnical user should need to know, and extremely difficult to provide a UI to let a user specify it manually. 
Josh Cohen Netscape Communications Corp. Netscape Fire Department "My opinions, not Netscape's" Server Engineering josh@netscape.com http://home.netscape.com/people/josh/ 
I dont agree, this is about configuring a user agent's service utlization, not configuring or reporting on the server of a service. 
I think this is closer a DHCP issue than any SNMP MIB stuff. 
Josh Cohen Netscape Communications Corp. Netscape Fire Department "My opinions, not Netscape's" Server Engineering josh@netscape.com http://home.netscape.com/people/josh/ 
Date: Thu, 27 Mar 1997 18:14:26 -0800 (PST) From: Josh Cohen josh@netscape.com 
Sender: josh@birdcage.mcom.com 2. DHCP is a one time configuration retreival, the proxy config can change dynamically, and DNS allows a mechanism to do that. 
( ie it has a lifetime ) ( yes, DHCP has a lease, but I beleive that is meant to be more long lived ) That was not how I interpreted it. 
I think most of the DNS servers I work with have a 1 week lifetime. 
My PC has an IP address that will last for the duration of this ppp session--ie an hour or two. 
3. Service location is an appropriate way to advertise a service, which I beleive the proxy is. 
The browser is discovering an available proxy service, not a host configuration option. 
What's the difference between discovering DNS servers and discovering HTTP proxies? 
4. DNS is much more commonly deployed where the web clients are (its usually a necessity ), while DHCP seems to be mainly popular on PCs I understand that point. 
But I don't think that the implementation you propose is not as clean. 
Yes, if thats all your saying, but these days, a common config would be something like: set http:// to go to proxy1 on port 80 set ftp:// to go to proxy2 on port 80 set https://*.evil.com to proxy 3 in port 443 set no-proxy for mydomain.com 
yourdomain.com 
thishost.thatdomain.com and more complex ones are coming ie: send HTTP GETS to proxy2 on port 80 send HTTP PUTS to proxy3 port 80. OK, but I don't see any settings where I would want to have such a complex setup. 
Like I might run a proxy server on one of my computers at home if I get organized. 
But I would only need one proxy. 
I'd guess you need thousands of users on your network before you'd need multiple proxies. 
And with proxy cache hierarcies, I would htink it would always work to ask your local proxy for the document, and let the proxy figure out how to talk to another proxy. 
I don't see where the client would have to know about that. 
In DNS, each record has a lifetime, specified individually. 
So, the while your A records would be ttl 1day this TXT record could be ttl 1 hour In DHCP, all options are stuck with the same lease time. 
The DNS server is a system wide setting, all applications depend on the system, which depends on the DNS. the proxy settings are for an application. 
This is picking nits. 
I initially was hoping to use DHCP, but it doesnt offer the cross platform and lifetime flexibility that DNS does and its less widely deployed. 
Another fundamental issue here is if you buy into the service location protocol ideas. 
I do. 
They are trying to solve the problem of "how do I use a standard method to look up arbitrary services on a network". 
Granted, by following their DNS recommendations ( which is only one of many ways to advertise services in their world ), its not perfect. 
In time, I hope that we could support their multicast discovery protocol as well. 
I suppose I could have specified that in the draft, but since the rest of the serverloc stuff is so new, and virtually undeployed as of yet, I figured this gives us a solution to a big problem, today, with protocols and APIs software implementors in the realm of the 'world wide web' are commonly using. 
Josh Cohen Netscape Communications Corp. Netscape Fire Department "My opinions, not Netscape's" Server Engineering josh@netscape.com http://home.netscape.com/people/josh/ 
I wasn't clear in my message. 
What I meant to say is that even though "system management of HTTP clients" doesn't appear in our charter, and isn't directly related to "development of the HTTP protocol", I believe that discussion of this topic is "in scope" for HTTP-WG, at least to the extent that we decide how to deal with the issue or delegate it to some other subgroup. 
It would be useful to enumerate the entire set of requirements for system management for HTTP clients (media type helpers, security profiles, site policy about viruses, privacy, etc.) as well as HTTP proxies and HTTP servers. 
I expect that these issues could easily absorb at least one new working group, and we need to arrange to establish this activity before HTTP-WG itself shuts down. 
Regards, Larry 1. DHCP doesnt have a cross platform interface to its configuration option. 
By using DNS, or even the raw SVRLOC multicast protocol, its still a consistent and relatively easy implementation. 
Lack of API's on different platforms shouldn't be a reason to pick one wire protocol vs. another. 
On windows, for ex., you can look at DHCP options quite easily in the registyr but there aren't API's (yet) for querying RR's from the DNS (unless you want to count on NSLOOKUP output on the commandline) 4. DNS is much more commonly deployed where the web clients are (its usually a necessity ), while DHCP seems to be mainly popular on PCs There are thousands of small intranets that use DHCP for IP addressing and NetBios broadcasts for name resolution. 
PC's make up the bulk of clients and a DHCP-solution solves more than half the case instantly. 
I'm not quite religious about this DHCP vs. DNS issue and it might not be a bad thing to allow this info to be specified twice. 
The idea of "auto-configuration" is "to pull the configuration automatically from a central place", not "to automatically configure default values". 
That is, either you use the automatic configuration, or manual. 
Cheers, Ari Luotonen* * * Opinions my own, not Netscape's * * * Netscape Communications Corp.ari@netscape.com 
501 East Middlefield Roadhttp://home.netscape.com/people/ari/ 
Mountain View, CA 94043, USANetscape Proxy Server Development 
