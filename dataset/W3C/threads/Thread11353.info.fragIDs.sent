Web Collections: Channel Definition Format: 
Jon 
Nice spec. 
Complete with a DTD. 
len 
In response to several inquiries: This is all that is publicly visible. 
The rest is internal W3C-only at this time. 
The Web collections proposal (the part that you can't see if you're not a W3C member) goes into some detail about XML, though it is not mentioned in the overview. 
Jon 
At 21:49 1997/03/13 -0800, Jon Bosak wrote about CDF: 
The first two above are only available to W3C members. 
I note something that may be related to those two, but not referenced in Jon's list, and available from the Microsoft site is: Channel Definition Format (CDF) CDF is an application of XML. 
Thus its definition consists of the various XML elements and attlists defined therein. 
This CDF DTD has no #PCDATA. 
All content is in structure and attribute strings. 
As the purpose of CDF is to allow broadcast, push, from any desktop, these attributes provide structured description of what is being pushed (through urls). 
Presumably a client will automatically get and possibly request some or all of those received urls. 
Regards/Harvey Bingham SGML/XML/HTML/DSSSL/Accessibility Consultant 
Thanks for the public URL, Harvey! 
I noticed some problems with MS's examples. 
They use net-enabled start-tags in a couple of places (like the ITEM example), they don't use XML declarations, and they don't quote all attribute values. 
Other than that, it's nice to see XML being used, whatever _le Monde Informatique_ may think of it. 
-Chris Christopher R. Maden One Richmond Square DynaText SIT Technical Support Providence, RI 02906 USA Inso Corporation +1.401.421.9550 (voice) Electronic Publishing Solutions +1.401.521.2030 (facsimile) 
Monday morning quarterbackSpeak: Folks shouldn't get overly annoyed with the press release blizzard. 
There will be a period of obscure thinking and propaganda while competitors try to get the edge on implementation and mindshare. 
The only losers will be the ones who ignore it and pretend it will go away. 
There will be a desperate attempt to dismiss it, call it names, brand it as proprietary, all the usual marketing schtick. 
We know that for those who value information lifecycle, XML is a proven and natural solution. 
It is robust and resists platform obsolescence. 
Getting the market requires: 1. Firm up the spec. 
Duh. 2. Get a lot of little terribly useful cheap apps out there. 
3. Get authoring support in place as fast as possible. 
They don't have to be perfect the first time. 
They have to be useful. 
Utility to the content provider must be the first order of business. 
Content rules. 
It is useful to remember that encapsulation and "a person is a king in their own home" are the same psychological concept. 
The competition will try to sell the idea of uniformity ("standards are key"), but the key to competitive advantage for the content provider is standard differentiation ("tastes great AND less filling"). 
XML returns control back to the person smart enough and fast enough to use it, and it provides a way to differentiate themselves and their information. 
It is also useful to remember that SGML was the middle ground between programmers and authors. 
It is just rigorous enough to make a program happy, and just simple enough that the average bear can do it. 
Don't try to sell this to programmers. 
Sell it to the content sources, particularly those who manage content. 
At the same time, large organizations have to control differentiation to ensure smooth communication. 
Don't undersell the DTD. 
It is a *negotiable contract* and that is a term a businessman understands. 
To many of them, well-formed means "laissez-faire" and they reserve that advantage to themselves, not their employees. 
len 
Christopher, Thanks for pointing on the problems. 
We will fix them. 
And yes, it has been *really* interesting for us to build our first XML application ! 
-Jean 
