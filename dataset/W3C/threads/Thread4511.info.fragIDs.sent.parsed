(S1 (S (NP (NNP Appendix) (NNP A.1) (NNP EBNF) (NNP Technical) (PRP It)) (VP (VBZ looks) (PP (IN like) (SBAR (IN that) (S (NP (PRP we)) (VP (VBP cannot) (S (VP (VB parse) (NP (NP (NP (DT an) (NN expression)) (PP (IN of) (NP (DT the) (NN form)))) (: :) (NP (`` ``) (NP (CD 1)) ('' '') (VP (VBN cast) (PP (IN as) (NP (NN xs))))) (: :) (SBAR (S (NP (NN integer)) (VP (SYM =) (`` ``) (NP (CD 1.0)) ('' '') (S (VP (VBN cast) (PP (IN as) (NP (CD xs)))))))) (: :) (NP (NN integer)))))))))) (. .)))
(S1 (FRAG (SBAR (WHNP (WDT Which)) (S (VP (AUX is) (RB semantically) (NP (DT the) (JJ same)) (PP (IN as) (NP (CD xs)))))) (: :) (VP (VB integer) (S (-LRB- -LRB-) (NP (`` ``) (CD 1) ('' '')) (-RRB- -RRB-) (VP (SYM =) (NP (CD xs))))) (: :) (NP (NP (NN integer)) (PRN (-LRB- -LRB-) (`` ``) (NP (CD 1.0)) ('' '') (-RRB- -RRB-))) (. .)))
(S1 (S (S (PP (VBN Based) (PP (IN on) (NP (DT the) (NN precedence) (NN table)))) (, ,) (NP (PRP I)) (VP (MD would) (VP (VB assume) (NP (DT that) (NN cast)) (PP (IN as) (NP (NP (NNS binds)) (ADJP (ADJP (JJR stronger)) (PP (IN than) (X (SYM =))))))))) (, ,) (CC and) (S (PP (IN from) (NP (NP (DT a) (JJ composability) (NN point)) (PP (IN of) (NP (NN view))))) (, ,) (NP (PRP I)) (VP (MD would) (ADVP (RB also)) (VP (VB expect) (S (VP (TO to) (VP (AUX be) (ADJP (JJ able) (S (VP (TO to) (VP (VB write) (NP (DT the) (JJ above)))))))))))) (. .)))
(S1 (S (ADVP (RB However)) (, ,) (SBAR (WHADVP (WRB when)) (S (VP (VBG following) (NP (DT the) (NN grammar))))) (, ,) (NP (PRP it)) (VP (VBZ looks) (SBAR (IN like) (S (NP (DT the) (NN grammar)) (VP (VBZ pops) (PRT (RP out)) (PP (IN without) (S (VP (NN consuming) (NP (DT the) (SYM =))))))))) (. .)))
(S1 (S (S (ADVP (RB Here)) (VP (AUX is) (NP (DT the) (JJ parse) (NN process)))) (: :) (S (`` ``) (NP (CD 1)) ('' '') (VP (AUX is) (VP (VBN consumed) (PP (IN by) (NP (NP (NNP Expr-) (NNP SingleExpr-) (NNP OrExpr-) (NNP AndExpr-) (NNP InstanceOfExpr-) (NNP TreatExpr-) (NNP CastableEx) (NN pr-) (NNP CastExpr-) (NNP ComparisonExpr-) (NNP RangeExpr-) (NNP AdditiveExpr-) (NNP MiltiplicativeExp) (NN r-) (NNP UnaryExpr-) (NNP UnionExpr-) (NNP IntersectExpr-) (NNP ValueExpr-) (NNP PathExpr-) (NNP RelativePat) (NN hExpr-) (NNP StepExpr-) (NNP FilterStep-) (NNP PrimaryExpr-) (NNP Literal-) (NNP StringLiteral)) (SBAR (WHNP (WDT Which)) (S (ADVP (RB then)) (VP (VBZ pops) (ADVP (RB back) (PP (TO to) (NP (NNP CastExpr)))) (SBAR (IN that) (S (NP (NNS consumes)) (`` ``) (VP (VP (VBD cast) (PP (IN as) (NP (CD xs)))) (: :) (NP (NP (NN integer)) ('' '') (SBAR (RB Then) (S (NP (PRP we)) (VP (VP (VBP pop) (ADVP (RB back) (PP (TO to) (NP (DT the) (NN top))))) (CC and) (VP (VBP realize) (SBAR (IN that) (S (NP (PRP we)) (VP (VP (AUX have) (VP (VBN left) (NP (NNS overs)))) (CC and) (VP (VBP raise) (NP (DT a) (JJ parse) (NN error)))))))))))))))))))))) (. .)))
(S1 (S (NP (DT This)) (VP (AUX is) (ADVP (RB also)) (NP (NP (DT a) (NN problem)) (PP (IN for) (NP (DT the) (JJ related) (NN treat) (IN as))) (, ,) (ADJP (JJ castable) (PP (IN as) (NP (FW etc)))))) (. .)))
(S1 (NP (NNP Hi) (NNP Michael) (. .)))
(S1 (S (NP (NNP Paul)) (VP (VBD wanted) (S (NP (PRP me)) (VP (TO to) (VP (VB give) (NP (JJ high) (NN priority)) (PP (TO to) (S (VP (VBG answering) (NP (DT this) (JJ particular) (NN issue))))) (PRN (-LRB- -LRB-) (NP (NP (JJ original) (NN mail)) (PP (IN at) (NP (JJ -LSB-1) (NNS -RSB-)))) (-RRB- -RRB-)))))) (. .)))
(S1 (S (PP (IN Since) (NP (DT the) (NNP November) (NN document))) (, ,) (NP (DT the) (NNP WG)) (VP (AUX has) (VP (VBN agreed) (S (VP (TO to) (VP (VB change) (NP (NP (DT the) (NN precedence)) (PP (IN of))))))))))
(S1 (NP (NP (NN instance-of) (, ,) (NN treat) (, ,) (NN castable) (, ,) (CC and) (NN case)) (PRN (-LRB- -LRB-) (PP (IN in) (NP (NP (NN response)) (PP (TO to) (NP (DT a) (JJ previous) (NN issue))))))))
(S1 (NP (NP (VBN raised) (JJ -LSB-2) (NN -RSB-)) (PP (IN by) (NP (PRP you))) (-RRB- -RRB-) (. .)))
(S1 (S (DT The) (NN precedence) (NN table) (AUX is) (RB now) (VBG looking) (JJR more) (IN like) (: :) (CD 1) (-LRB- -LRB-) (NN comma) (-RRB- -RRB-) (CD 2) (NNP FLWORExpr) (, ,) (DT some) (, ,) (DT every) (, ,) (NNP TypeswitchExpr) (, ,) (NNP IfExpr) (CD 3) (CC or) (CD 4) (CC and) (CD 5) (CD eq) (, ,) (CD ne) (, ,) (CD lt) (, ,) (FW le) (, ,) (CD gt) (, ,) (NNP ge) (, ,) (SYM =) (, ,) (. !) (SYM =) (, ,) (, ,) (SYM =) (, ,) (, ,) (SYM =) (, ,) (AUX is) (, ,) (, ,) (CD 6) (TO to) (CD 7) (NNP +) (, ,) (: -) (CD 8) (NNP *) (, ,) (CD div) (, ,) (CD idiv) (, ,) (NN mod) (CD 9) (NN unary) (: -) (, ,) (NN unary) (NNP +) (CD 10) (NN union) (, ,) (NNP |) (CD 11) (VB intersect) (, ,) (IN except) (CD 12) (NN instance) (IN of) (CD 13) (VB treat) (CD 14) (JJ castable) (CD 15) (NN cast) (CD 16) (NNP ValidateExpr) (, ,) (NNP /) (, ,) (CD //) (CD 17) (JJ -LSB-) (JJ -RSB-) (, ,) (-LRB- -LRB-) (-RRB- -RRB-) (RB so) (IN that) (DT these) (NNS operators) (NN bind) (JJ much) (JJR more) (RB tightly) (. .)))
(S1 (S (PP (IN In) (NP (DT the) (RBS most) (JJ recent) (NN test) (NN parser))) (, ,) (NP (PRP$ your) (NN expression)) (VP (VBZ parses) (NP (NP (NN fine)) (: :) (NP (NN Type) (NN Expression)) (: :) (NP (`` ``) (NP (CD 1)) ('' '') (VP (VBD cast) (PP (IN as) (NP (NN xs))))) (: :) (SBAR (S (NP (NN integer)) (VP (SYM =) (NP (`` ``) (CD 1.0) ('' '') (VP (VBD cast) (PP (IN as) (NP (NN xs)))))))) (: :) (NP (JJR integer) (NN |QueryList))))))
(S1 (S (INTJ (UH Please)) (VP (VB let) (S (NP (PRP me)) (VP (VB know) (SBAR (IN if) (S (NP (DT this) (ADJP (RB previously) (VBN decided)) (NN issue)) (VP (VBZ resolves) (NP (CD MS-XQ-LC1-146))))))))))
(S1 (FRAG (PP (IN in) (NP (PRP$ your) (NN view))) (. .)))
(S1 (NP (NNS Thanks) (. !)))
(S1 (NP (NP (JJ -scott) (JJ -LSB-1) (JJ -RSB-) (NN -LSB-XQuery) (NN -RSB-) (CD MS-XQ-LC1-146) (JJ -LSB-2) (NN -RSB-) (NN Grammar) (NN issue)) (: :) (NP (NN cast) (RB as))))
(S1 (S (NP (NNP Yes.) (NNP This)) (VP (VBZ seems) (S (VP (TO to) (VP (VB resolve) (NP (DT the) (NN issue)))))) (. .)))
(S1 (NP (NNS Thanks) (NNP Michael)))
(S1 (NP (NP (NNP precedence)) (PP (IN of))))
(S1 (NP (NN issue)))
(S1 (NP (CD MS-XQ-LC1-146)))
