It seems to me that much (but not all) of the discussion over the last few months on the Expires, Last-Modified headers is really due to the desire of server administrators to control whether a document is cached. 
One of the big improvements in the current HTTP spec is the "Pragma: no-cache" header. 
This provides a way to say, "Don't cache this," without the need for fictitious expiration or last-modified dates. 
This is important. 
There are often good reasons for saying that a document should not be cached, but having a future expiration date (for example, if the validity of the document doesn't, in fact *expire* until that date). 
The only problem is that server admins often want to prevent local disk caching as well as proxy caching and the Pragma: no-cache applies only to the latter. 
Perhaps we also need a "Pragma: no-local-cache". 
One thing of which I am thoroughly convinced is that if a clean mechanism for giving administrators this capablility is not made available then every conceivable ugly hack which has the desired effect will gain widespread use. 
We will see 1970 expiration dates (always a lie) and future last-modified dates (also a lie). 
These hacks will likely work with some clients/proxies and fail with others. 
There will, no doubt, even be those who use different hacks based on the User-Agent header of the request! 
Why not make life easier for everyone and allow a server to cleanly request that a document not be cached to local disk. 
This should be a separate request from the Pragma: no-cache request to prevent proxy caching. 
John Franks I recently changed netscape to interpret "Pragma: no-cache" and not cache the object. 
This is slightly different than a "Expires" header because the object will not even be cached for history navigation. 
(Documents that are expired are still shown when traversing the session history). 
Haveing the client interpret "Pragma: no-cache" lets servers tell the client that this information is highly sensitive or volitile and should not be cached in any way. 
:lou Lou Montulli http://www.mcom.com/people/montulli/ 
Netscape Communications Corp. 
According to Lou Montulli: Well, I find this reasonable. 
But, I believe that the latest version of the spec says the client should ignore Pragma: no-cache. 
What I think is important is that there be some way to stop the client from caching -- as apparently there now is with Netscape. 
:) I don't care if it is Pragma: no-cache or if there is a separate way (Pragma: no-local-cache ?) but apparently someone does since the spec wants the client to ignore Pragma: no-cache. 
Could someone explain the rationale for this? 
John Franks The reason Pragma: no-cache is not a redundant way of saying Expires: = now is that it allows servers to send essentially "private" documents to particular clients where these documents need not expire immediately. 
If intermediate proxies cannot cache the document (due to Pragma: no-cache) but clients can, this makes for more flexibility at the client end. 
The client would not be required to issue a new HTTP request when revisiting the non-expired document. 
Since this appears to be the only added functionality of Pragma: no-cache as a return header, though, I think it probably should have been called something else, such as Pragma: private (or something equally, or more, mnemonic). 
The problem with calling it Pragma: no-cache is that user-agent designers will feel that it ought to have some effect on the client, which it shouldn't, because Expires is sufficient for controlling caching in the client. 
So I think the above mentioned changes to Netscape are probably ill advised and in fact defeat the purpose of this header. 
If it stays in the Netscape browser as mentioned, the new header will have been rendered useless. 
(It will not be possible to send "private" documents that are client-cacheable, which is the only added benefit of it in the first place). 
--Shel Kaphan sjk@amazon.com 
