Question 1: Should a guideline state that labeling of simple tables is not [required]? 
If yes, then: Question 2: When does a table become complicated enough for labeling to be [required]? 
Note 1: [required] is the sense defined in the guidelines - Required, otherwise it will be impossible for one or more groups of users to understand the page. 
(Whereas, [recommended] means - Makes page easier to understand and use.) 
Note 2: labeling refers to the new TABLE markup available in HTML 4.0 such as header, id, scope, and summary Starling Access Services "Access A World Of Possibility" e-mail: info@starlingweb.com 
URL: http://www.starlingweb.com 
comments labeled as JRG:: JRG:: I think tables for navigation bars and other standard tables should have specific labels like "navbar", or if there are more than one "navbar1", "navbar2", "navbar3"... If tabling (is tabling a word?) is used for formating, maybe the label should just be: "table is being used for xxx visual formatting." 
Are there other structures besides nav bars that could have "standard" labels. 
JRG:: I think on one level labels sould be used to desribe why the tabel is there, but on a functional side that seems a bit extreme for the author to have to define. 
Jon Gunderson, Ph.D., ATP Coordinator of Assistive Communication and Information Technology Division of Rehabilitation - Education Services University of Illinois at Urbana/Champaign 1207 S. Oak Street Champaign, IL 61820 Voice: 217-244-5870 E-mail: jongund@uiuc.edu 
WWW:http://www.staff.uiuc.edu/~jongund 
yes This is of course the tough question. 
I talked to Dave Raggett about this issue and I think we both agree that there is a threshold below which a table can be considered "simple". 
I propose the following: - if it only has a single row of header cells at the top and/or - if it only has a single column of header cells on the left side (modulo right-to-left directionality) In these two cases (which should be treated together), given a cell, it is really easy for an agent to find the column and the row header they belong to without requiring the author to add more markup. 
In other words, there is a potential "default" value for the scope attribute on TH that can be defined as: - if all the cells in a row (TR) are header (TH), then scope defaults to col - if only the first cell in a row (TR) is a header (TH) then scope defaults to row We might go as far as trying to define default values for rowgroup and colgroup cases (covering sub-headers) but I'd be happy with just that in the guidelines. 
summary and abbrev should be RECOMMENDED regardless of the above, they do no serve navigation but description. 
Another category of "simple table" is tables with only a single cell each. 
Such tables are frequently used for purely formatting purposes and aids should have no problem working with them, by ignoring the fact that they are tables and only looking at standard attributes such as coloration, title=, etc. From: Daniel Dardailler[SMTP:danield@w3.org] Subject: Re: TABLES - To label or not to label tables is not yes labeling to be This is of course the tough question. 
I talked to Dave Raggett about this issue and I think we both agree that there is a threshold below which a table can be considered "simple". 
I propose the following: - if it only has a single row of header cells at the top and/or - if it only has a single column of header cells on the left side (modulo right-to-left directionality) In these two cases (which should be treated together), given a cell, it is really easy for an agent to find the column and the row header they belong to without requiring the author to add more markup. 
In other words, there is a potential "default" value for the scope attribute on TH that can be defined as: - if all the cells in a row (TR) are header (TH), then scope defaults to col - if only the first cell in a row (TR) is a header (TH) then scope defaults to row We might go as far as trying to define default values for rowgroup and colgroup cases (covering sub-headers) but I'd be happy with just that in the guidelines. 
4.0 such summary and abbrev should be RECOMMENDED regardless of the above, they do no serve navigation but description. 
I'm not sure I follow what you mean by "each". 
I'll let you detail. 
In the mean time, I'll share some drawing of table templates using pseudo markup (TR, TH, and TD) that Dave and I have been exchanging (hope it's not too unaccessible) Simplest table (a single header row at the top): TR TH TH TH TR TD TD TD TR TD TD TD Next step up with headers on both rows and columns (~ below represents an empty cell): TR ~ TH TH TR TH TD TD TR TH TD TD Another common case has two levels of column headers. 
(-- means spanning is used for the first level headers to "cover" the second level header) TR -- TH -- -- TH -- TR TH TH TH TH TH TH TR TD TD TD TD TD TD TR TD TD TD TD TD TD which can be handled by the algorithm in the HTML4 spec. 
However, we should recommend people to use column groups to make the grouping more explicit. 
Two levels of *rows* headers are not generally done in the same way since it wastes too much space. 
Instead an extra row is inserted into the table and a special column header is used to label the row headings below it. 
We could recommend people use row groups to make this explicit e.g. repeated TBODY elements. 
The scope attribute can then be used to make the scope of the header explicit. 
But IMHO this is not a "simple table" anymore. 
