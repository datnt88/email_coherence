I had forgotten to respond to the DOM Xpath announcement earlier. 
I want to thank the DOM WG for undertaking this work. 
I certainly voted and lobbied for such work whenever possible, including during DOM chartering. 
It's great to see this happen. 
I know members of the DOM WG were concerned about introduction of a query language into the API, especially given the XML Query work, and I wanted to again thank them for putting their concerns aside in favour of standardization. 
Cheers, Dave Orchard XML Architect Jamcracker Inc., 19000 Homestead Dr., Cupertino, CA 95014 m: 604.908.8425 f: 408.725.4310 www.jamcracker.com - Sounds like a job for Jamcracker. 
From: plh@w3.org 
[mailto:plh@w3.org] 
Sent: Monday, June 18, 2001 1:29 PM Subject: Document Object Model (DOM) Level 3 XPath Specification The first public Working Draft for the DOM Level 3 XPath has been published: This is the result of discussions from the www-dom-xpath mailing list [1], feedbacks from the xml-dev mailing list [2] [3], and works in the DOM Working Group [6]. 
As usual, comments are welcome, Philippe [1] http://lists.w3.org/Archives/Public/www-dom-xpath/ [2] 
[3] http://lists.xml.org/archives/xml-dev/200103/msg00178.html [4] http://www.w3.org/TR/2001/WD-query-datamodel-20010607/ [5] http://www.w3.org/TR/1999/REC-xpath-19991116 [6] http://www.w3.org/DOM/Activity#DOM3 
The xml-dev list is sponsored by XML.org, an initiative of OASIS The list archives are at http://lists.xml.org/archives/xml-dev/ 
To unsubscribe from this elist send a message with the single word "unsubscribe" in the body to: xml-dev-request@lists.xml.org 
I'm curious why the DOM has no explicit support for concurrent access? 
Bob Foster WebGain 
The DOM being really just a linked list like data structure would require wrapping everything with mutexes. 
The is not portable, messy, and doesn't appeal to very many people. 
Why would you want to concurrently access a DOM tree anyway? 
Mike 
Because :) Concurrency control would imply a certain way of working with the DOM that can't be assumed between various languages/platforms/implementations. 
There's no reason why you could add such support to your DOM implementation and expose it using the feature set. 
We do that in dbXML for database binding and DOM compression. 
-- Tom 
It's hard to define a platform-neutral, vendor-neutral, language-neutral model of concurrency control. 
Or at least that's what we decided in doing the initial "triage" of potential DOM requirements. 
It's a plausible requirement for Level 4, if such at thing is undertaken. 
We've looked at this several times. 
Last time we discussed it, the consensus seemed to be that per-operation concurrency was not particularly useful -- too much overhead for too little gain. 
Many logical operations on a document require an extended series of DOM operatations, so any concurrency control would really want to operate at that level. 
It's unclear that putting explicit transaction locking featues into the DOM would really be any easier to use or more efficient than implementing them in the application code. 
This question is still on our Open Issues list and may -- or may not -- be addressed in a future version of the DOM. 
Joe Kesselman / IBM Research 
