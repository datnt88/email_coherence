3.? 
Streamable Results Format for Variable Binding Results When returning Variable Binding Results (aref: #r3.2), there must be a form of the protocol that allows streaming of results. 
In this form, the results must be returned to the client so that all the data for one binding of the variables is available before data for the next binding of variables is started. 
Alternative: make this a design objective and s/must be/should be/g Alternative (weaker) second sentence: A client must be allowed to obtain one complete binding of the variables before the entire result set has been received. 
I don't think there is a meaningful version of subgraph results. 
If a client asks for an RDF graph, then half graph is useless. 
I have said that all of one query result solution be started before the next. 
This is testable. 
While designs that intermix bindings of variables are possible, it would require some buffering (maybe small) to deliver results to an application. 
This text does preclude "SELECT ?x, 
?y 
..." and returning all the ?x's and then all the ?y's. 
It would require buffering ?x's 
before the first ?y 
appearded. 
Normal API style is to deliver (?x, ?y) to an application as if it were one row of a table at a time. 
Andy Could this not be generalised to just talk about results (or result sequences, or result sets)? 
This would cover returning multiple graphs IF that was decided as a result format. 
Let me try a rewrite: 3.? 
Streamable Results When returning multiple results there must be a form of the protocol that allows streaming of results. 
In this form, the results must be returned to the client so that all the data in one result are available before all the data for the next result. 
Optional addition: This does not require an ordering of results but that each result is available one at a time. 
Dave Dave, Good idea to make the wording allow for any result sequence form. 
The re-wording is good as well. 
Andy From: Dave Beckett Date: 9 June 2004 15:02 On Wed, 9 Jun 2004 13:51:55 +0100 , "Seaborne, Andy" 
