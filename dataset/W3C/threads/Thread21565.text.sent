Tim, I came across http://ilrt.org/discovery/chatlogs/rdfig/2001-09-24.html and found [03:14:20] tim So I am left wondering whether to build this log:forAll :x. {} log:implies { :x a rdf:Resource }. ^s into cwm so that I can use Jos's rules directly -- or is the whole idea that you have to turn on each rule - you have control of them. 
I didn't notice this axiom in his list. 
I see that adding that rule doesn't help CWM to infer more, and that Euler has a parser problem while I thought that I fixed that {} :-( Adding - { :s :p :o } log:implies { :s a rdfs:Resource }. is better, and CWM now thinks - rdfs:Resource a rdfs:Class, rdfs:Resource . 
rdfs:domain a rdfs:ConstraintResource, rdfs:Resource . 
rdfs:range a rdfs:ConstraintResource, rdfs:Resource . 
however is see that it is not finding - rdfs:ConstraintResource a rdfs:Class. 
whereas Euler thinks it is - {:RULE7 a rdfs:Resource. 
rdfs:domain a rdfs:ConstraintResource} log:implies {rdfs:ConstraintResource a rdfs:Class}. 
{:RULE7 a rdfs:Resource. 
rdfs:range a rdfs:ConstraintResource} log:implies {rdfs:ConstraintResource a rdfs:Class}. 
We actually have that rule built in (and also the one to infer wether a thing is a rdf:Property) because we could,t find a way to do that in a back-chaining way... 
There was not an "idea that you have to turn on each rule" but that could be interesting :-) Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/ 
Why do you do the RULE7 a rdfs:Resource. 
thing anyway? 
How do you use that? 
Tim (No, {} implies ... doesn't help cwm at all) we were thinking about a proposal for RDF/RDFS entailment tests -- http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Sep/0322.html and Pat suggested OK, great. 
Suggestion: how about showing the *proofs* of the entailments in some form? 
For rdf, this could be simply the intermediate subgraph of the (merge of the) antecedent(s) which generalizes to the consequent graph. 
For the rdfs cases it could include the rules used to generate the relevant part of the rdfs closure, with references to the numbers in the MT table (?) If this would be a lot of work to generalize, then never mind; but I think it might make it easier to see what is going on, and it would certainly emphasise the difference between (and relationships between) rdf and rdfs entailments. 
]] -- http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Sep/0324.html 
Because Pat talked about "references to the numbers in the MT table" we found that the easiest thing to do (and fitting with "the so called proof thing is a SOUND ARGUMENT"). 
So it is just used for that purpose and indeed it requires this log:forAll :s :p :o. { :s :p :o } log:implies { :s a rdfs:Resource }. or maybe we have to find another predicate which is true Jos 
