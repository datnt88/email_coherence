Hi, RFC2518 currently says that the values of get* properties must match those HTTP headers returned upon a GET/HEAD request "without accept headers" (for instance, see 13.3). 
I'd like to see clarified a) the rational for this restriction, and b) a precise definition of what "accept" headers are. 
Looking at RFC2616, the only "accept" header is actually the one called "accept", while "accept-language" does not qualify. 
My personal preference would be to get rid of this language, unless we can agree on what it's supposed to accomplish, and rephrase it accordingly. 
I personally think that PROPFIND should be just an extended syntax for HEAD, supporting additional properties and allowing collection member retrieval, but stay completely compatible with the GET/HEAD response headers where possible. 
Julian I agree that we should clarify what is meant by "accept headers". 
But I'd be concerned about dropping this language, because it could introduce incompatibility between new clients (that would then expect accept headers to be respected) and old servers (that would ignore them). 
Cheers, Geoff Hi, RFC2518 currently says that the values of get* properties must match those HTTP headers returned upon a GET/HEAD request "without accept headers" (for instance, see 13.3). 
I'd like to see clarified a) the rational for this restriction, and b) a precise definition of what "accept" headers are. 
Looking at RFC2616, the only "accept" header is actually the one called "accept", while "accept-language" does not qualify. 
My personal preference would be to get rid of this language, unless we can agree on what it's supposed to accomplish, and rephrase it accordingly. 
I personally think that PROPFIND should be just an extended syntax for HEAD, supporting additional properties and allowing collection member retrieval, but stay completely compatible with the GET/HEAD response headers where possible. 
Julian Possibly. 
I think the first step should be to find out what this restriction is for, and to exactly which headers it's supposed to apply. 
Can anyone remember why the original authors came up with this description? 
Julian 
