Hi, A complaint that I've heard from various blind web page users is that they often have to read through all sorts of navigation links before they can get to the "meat" of the page. 
This means that they can be less efficient than their sighted counter-parts. 
(Since I'm of the school of thought that accessibility must include efficiency, I believe that this is an important aspect to consider for web page accessibility.) Dynamic HTML is becoming more popular for web pages. 
I figured it might be interesting to use dynamic HTML to improve the efficiency of blind people navigating through a web page. 
By incorporating features of dynamic HTML, I re-wrote one of BART's web pages so that the navigation bars are invisible. 
This means that there are much fewer links to read through. 
Two links are provided to show the navigation bar. 
One shows a graphic version while the other shows a text-only version. 
If you would like to take a look at this version of the web page, the URL is: There are some interesting benefits to the approach. 
The page becomes much simpler 
to read for blind people and people with certain types of learning disabilities. 
More screen real estate is freed up. 
The pages are easier to write since less effort is needed to find visually pleasing ways to include links. 
The pages can look less clutered. 
There might be some problems to this approach. 
Some screenreaders are not up to handling dynamic HTML. 
Some non-disabled may not want to do an extra mouse click to see the navigation bar. 
Lynx users may have a problem with dynamic HTML. 
Let me know what you think. 
Scott 
Some background for people interested in this technique: Checkpoint 13.6 as found in Web Content Accessibility Guidelines 1.0 is intended to address the same need that this technique addresses. 
We need to flesh out the techniques in this area, both in terms of HTML techniques such as the internal bypass link found at http://www.acb.org and user-agent techniques such as skip-block. 
Scott, can you write the script so that it edits the page, such that if the script doesn't run one leaves in place an HTML fragment containing an explicit skip-link and if the script does run one replaces this with an active widget offering a minimized navbar? 
Al 
through. 
much simpler 
Hi, Al The idea I had behind the technique was to come up with an approach which would benefit blind users and could be a benefit to sighted people. 
I figured a technique which benefits a larger user group would increase the likelyhood of the technique being used. 
I'm sorry, but I don't quite understand what you are requesting. 
Scott 
With regard to DHTML, I've been doing some work with Microsoft InterDev recently to build a web front end for a database. 
According to MS documentation, I was under the impression that DHTML is only IE-friendly. 
That's why I didn't use it--*.asp 
seemed to be the only alternative. 
I viewed your page successfully in Netscape 4.05, but I'm curious as to how cross-browser friendly DHTML is. 
Is DHTML more accessible than asp? 
Thanks, Kristine Bradow Wayne State University Detroit, MI 48202 (313) 577-1791 
Hi, Kristine DHTML uses a combination of scripts and element attributes to create certain effects. 
As to be expected, Netscape and Microsoft do not offer the same features which can be used with DHTML. 
However, by keeping the DHTML within a sub-set of certain features it is possible to have a fair amount of DHTML work with both. 
The demo page I created works for both MS and Netscape browsers, but has to do things a little differently for each browser. 
Scott 
In general, server-side scripting is more friendly that client-side scripting. 
So-called DHTML (it isn't a particular thing, just the name given to HTML that has client-sided active elements, included by means of some script) tends to be pretty browser-specific. 
Netscape and Explorer, the two browsers which implement lots of scripting, do a pretty poor job of compaitibility. 
Using asp pages (for those who use Microsoft webservers - the rest of the world achieves the results with php, CGI interfaces, Cold Fusion, Domino, etc etc) allows the creation of "pure" HTML, which can be reliably used by all users. 
It also, of course, allows the creation of something that nobody can use - it is only when itis done right that it helps anyone. 
(Likewise it is possible to write client-side scripting which transforms gracefully in browsers which do not interpret scripts.) Charles 
Hi, Kristine DHTML uses a combination of scripts and element attributes to create certain effects. 
As to be expected, Netscape and Microsoft do not offer the same features which can be used with DHTML. 
However, by keeping the DHTML within a sub-set of certain features it is possible to have a fair amount of DHTML work with both. 
The demo page I created works for both MS and Netscape browsers, but has to do things a little differently for each browser. 
Scott 
--Charles McCathieNevile mailto:charles@w3.org 
W3C Web Accessibility Initiative http://www.w3.org/WAI MIT/LCS - 545 Technology sq., Cambridge MA, 02139, USA 
I agree! 
I like the simplicity and effectiveness of that approach for skipping navigational links. 
Whatever can be done to address this problem is appreciated, however, since it poses one of the biggest efficiency drains/usability problems for people who cannot visually identify where the unique content of a page actually begins. 
Regards, Jamal On 1999-03-28 basr-l@trace.wisc.edu 
said: The ACB (www.acb.org) was the first, to my knowledge, to place a local anchor at the top of their page, "skip over navigation links. 
Following that link places the user at the "lead story." 
We are 
integrating this in the new version of our site (www.austin.ibm. 
com/sns2) and recommending it everywhere we can. 
This idea of "skip avigation links" is the best and simplest accessibility idea I have heard in a long time. 
It makes a HUGE difference. 
Jim Thatcher IBM Special Needs Systems www.ibm.com/sns thatch@us.ibm.com (512)838-0432 Scott Luebking phoenixl@NETCOM.COM on 03/27/99 09:06:01 PM Please respond to basr-l@trace.wisc.edu 
Hi, A complaint that I've heard from various blind web page users is that they often have to read through all sorts of navigation links before they can get to the "meat" of the page. 
This means that they can be less efficient than their sighted counter-parts. 
(Since I'm of the school of thought that accessibility must include efficiency, I believe that this is an important aspect to consider for web page accessibility.) Dynamic HTML is becoming more popular for web pages. 
I figured it might be interesting to use dynamic HTML to improve the efficiency of blind people navigating through a web page. 
By incorporating features of dynamic HTML, I re-wrote one of BART's web pages so that the navigation bars are invisible. 
This means that there are much fewer links to read through. 
Two links are provided to show the navigation bar. 
One shows a graphic version while the other shows a text-only version. 
If you would like to take a look at this version of the web page, the URL is: There are some interesting benefits to the approach. 
The page becomes much simpler to read for blind people and people with certain types of learning disabilities. 
More screen real estate is freed up. 
The pages are easier to write since less effort is needed to find visually pleasing ways to include links. 
The pages can look less clutered. 
There might be some problems to this approach. 
Some screenreaders are not up to handling dynamic HTML. 
Some non-disabled may not want to do an extra mouse click to see the navigation bar. 
Lynx users may have a problem with dynamic HTML. 
Let me know what you think. 
Scott Net-Tamer V 1.11 - Registered 
Hi, Just a clarification. 
Server-side scripting can have some limitations depending on the application. 
A very general one is that creaters of web pages may not have access to servers which provide the facilities needed. 
For example, may ISP's won't let a user create their own CGI scripts because of security issues, etc. 
A second problem is that the changes in the display could be more interactive than server-side scripting can be provide. 
For example, a page which uses element movement to convey information cannot be as easily done with server-side scripts. 
Another interaction problem is that the application may require faster response than provided by server-side scripts responding via a network. 
As with many things, there are trade-offs between server-side scripting and client-side scripting. 
Scott 
I think I should mention that "a page which uses element movement to convey information" would be a problem for blind users. 
-Jamie Fox Of Scott Luebking Hi, Just a clarification. 
Server-side scripting can have some limitations depending on the application. 
A very general one is that creaters of web pages may not have access to servers which provide the facilities needed. 
For example, may ISP's won't let a user create their own CGI scripts because of security issues, etc. 
A second problem is that the changes in the display could be more interactive than server-side scripting can be provide. 
For example, a page which uses element movement to convey information cannot be as easily done with server-side scripts. 
Another interaction problem is that the application may require faster response than provided by server-side scripts responding via a network. 
As with many things, there are trade-offs between server-side scripting and client-side scripting. 
Scott 
