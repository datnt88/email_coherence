I don't see anything in the spec that requires DAV:comment to be copied from checked-out resources to versions on CHECKIN, or from unversioned resources to the initial version on VERSION-CONTROL. 
In particular, since DAV:comment is a live property, it doesn't get copied with the dead properties, and it is not mentioned explicitly in postcondition DAV:initialize-version-content-and-properties of Section 4.4 or postcondition DAV:put-under-version-conrtrol of Section 3.5. 
Is this the intended behavior? 
Thanks, Roy 
Currently, the server gets to decide which live properties of a VCR are captured by versions. 
It would be reasonable to identify a set of live properties that SHOULD/MUST be captured by versions, and publish this list in an internet draft and on the DeltaV web site. 
This list would then be added to the protocol document when we go to the next standard level. 
Cheers, Geoff I don't see anything in the spec that requires DAV:comment to be copied from checked-out resources to versions on CHECKIN, or from unversioned resources to the initial version on VERSION-CONTROL. 
In particular, since DAV:comment is a live property, it doesn't get copied with the dead properties, and it is not mentioned explicitly in postcondition DAV:initialize-version-content-and-properties of Section 4.4 or postcondition DAV:put-under-version-conrtrol of Section 3.5. 
Is this the intended behavior? 
Thanks, Roy 
That sounds like a good process to me. 
On DAV:comment, I think the common use case is for authors to use a new comment most times they CHECKIN a new version, to document the changes specific to that version. 
To support this common case, I think the property list should say that servers MUST copy DAV:comment from the checked-out resource to the new version on CHECKIN. 
This allows clients to consolidate the PROPPATCH of DAV:comment with the PROPPATCH of any dead properties of the VCR (and other copied live properties) before CHECKIN, and makes the behavior atomic. 
I also think the property list should say that servers SHOULD NOT copy DAV:comment from the predecessor version to the VCR on CHECKOUT, so that clients do not need to do a PROPPATCH to guarantee that DAV:comment was not incorrectly carried forward from the previous version. 
Thanks, Roy 
Requiring that the value of DAV:comment of a checked-out resource be copied to the version created by CHECKIN sounds right to me (and I'll bet it's what all the implementors end up doing). 
Note that some systems allow you to modify the comment on a version, so we probably don't want to require that it is immutable. 
Note that CHECKOUT does not change the state of a VCR, so a server would never copy anything at that time. 
Probably what you want here is for the DAV:comment property to be *removed* as a side-effect of the CHECKOUT operation. 
Just goes to show that it is a good thing we didn't try to define general behavior of live properties under versioning! 
Cheers, Geoff That sounds like a good process to me. 
On DAV:comment, I think the common use case is for authors to use a new comment most times they CHECKIN a new version, to document the changes specific to that version. 
To support this common case, I think the property list should say that servers MUST copy DAV:comment from the checked-out resource to the new version on CHECKIN. 
This allows clients to consolidate the PROPPATCH of DAV:comment with the PROPPATCH of any dead properties of the VCR (and other copied live properties) before CHECKIN, and makes the behavior atomic. 
I also think the property list should say that servers SHOULD NOT copy DAV:comment from the predecessor version to the VCR on CHECKOUT, so that clients do not need to do a PROPPATCH to guarantee that DAV:comment was not incorrectly carried forward from the previous version. 
Thanks, Roy 
