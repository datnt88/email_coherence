At first, I was going to say that this was a poor example and suggest that you considered most of the programming reference books on your shelves, but then I realized that it isn't so bad. 
The only difference is that I think you're assuming that someone typed your example. 
We have hundreds (thousands?) of tabular ASCII report options in various software products. 
The documentation for that software naturally contains samples of those reports. 
I just can't picture myself promoting a language that requires people to go in and add markup to these examples. 
I don't think I could even convince myself to use such a language. 
I feel your pain. 
Could we combine proposals? 
Could we (in XML) define characters to begin a section of text guaranteed not to have markup within, where spaces and newlines should be passed to the application unmolested? 
In other words, a verbatim delimiter? 
(not full CDATA or RCDATA marked sections unless we are 
willing to simplify the rules for those constructs). 
The contents of the delimeters would be restricted to disallow comments, PIs, sub-elements or anything else that would break SGML compatibility. 
Whether processed by an XML or SGML tool, the REs inside the delimeters would be significant. 
Then there would be the existing-SGML-tool compatible way of doing things (which would require you to escape your newlines) and the verbatim-optimized XML way of doing things (which wouldn't). 
" ABCD 1234 EFGH 5678 IJKL 9012 " I know that duplication of features makes the parser writer's job harder, but Robert has a reasonable point about usability. 
Comments? 
Paul Prescod 
On Mon, 30 Sep 1996 09:51:09 -0400, Paul Prescod 
At that point it might be best to bite the rest of the bullet and always delimit data. 
Look at the advantages: 
1. No need to access a DTD to determine if an element is mixed content. 
2. All REs and RSs are ignored -- full stop! 
(See, I'm internationalized :-) 3. Really easy parsing. 
4. Much simpler to explain. 
Charles F. Goldfarb * Information Management Consulting * +1(408)867-5553 13075 Paramount Drive * Saratoga CA 95070 * USA International Standards Editor * ISO 8879 SGML * ISO/IEC 10744 HyTime Prentice-Hall Series Editor * CFG Series on Open Information Management 
Will the obvious \" work as expected? 
Does "string concatenation" work? 
"this is line one " "this is line two " "this is line three" if so, it can probably be made to fly. 
If not, I think it looks odd enough that you might as well but the bullet and use RTF or TeX syntax, \p{this is line one this is line two this is line three} with no hint of backwards compatibility. 
Then there is no problem. 
But it all seems like overkill to me. 
If you could have a top-level inclusion for #PCDATA, we would always be in mixed content, and the collapse-as-per-mixed-content rules would work fine in both SGML and XML. 
So how about adding the possibility of +(#PCDATA) in SGML? Lee 
