I have just obtained 7.1 for win98 and it seems much better than the 6.x I was using before. 
Thank you. 
I've a question about access key support. 
How does the user of Amaya, when using it as a browser rather than editor, determine that elements of the current page have accesskey functionality defined, and which ones they are? 
I could not find this in the help, and since these are defined by page authors they cannot be simply deduced. 
The help information concentrates on how to create the accesskey items and how to make use of them once they are known. 
To be fair, this is not only a problem in Amaya: Mozilla and Internet Explorer both seem to be rather quiet about what has been defined. 
I could find no mention of how one is supposed to discern this information whilst reading the User Agent Accessibility Guidelines, so if there is a general principle for most browses, I have missed it. 
A similar issue applies to targets. 
When the viewing of targets is enabled, the round target correctly appears next to links of the display of what the name or id is, for example when the pointer is over the target. 
This would be useful when browsing sites to which you want to create links; the information on what form the link should take would be immediately to hand. 
Thank you, Hugh The User Agent Guidelines do cover this as far as I can tell: says Provide information to the user about current user preferences for input configurations. 
As far as I can tell this should cover what keys can be used to navigate around a document. 
One approach to doing this would be to implement the CSS pseduo-elements :before and :after, the property content, and attr() then a user style sheet rule like *[accesskey]:before { content: " " attr(accesskey) " " } would provide a functionality like iCab has for identifying the accesskeys. 
There is a similar functionality somewhere in Amaya already, which is used to put in markers for things like targets and annotations. 
Adapting / repeating this would be another possiblity. 
For accessibility purposes, copying the annotation mechanism to give access to longdescs would be a way to provide access to longdesc - another accessibility feature that would be good for Amaya. 
just my thoughts... Chaals Post: 21 Mitchell street, FOOTSCRAY Vic 3011, Australia or W3C, 2004 Route des Lucioles, 06902 Sophia Antipolis Cedex, France I expressed this poorly: what I meant was that they don't seem to recommend a standard way to do this for visual browsers, so I'm not aware of what I should expect. 
They have good reasons for not doing so in terms of not limiting browser design and innovation. 
Yes, agreed. 
Would this work now? 
If so, I'll scour the docs for more info on how to set this up. 
These look good ideas. 
So I have not missed existing functionality then? 
Thank you, Hugh I believe it won't work at the moment. 
As far as I know the functionalities like this (described below) are individually hard-coded in. 
I don't think so. 
cheers Chaals 
