Is it expected that you should be able to BIND a lock-null resource? 
I am in the process of trying to come up with a software design for the programmers here to implement WebDAV (first) and then DeltaV (later). 
We want to build a fairly generic lump of code to do all the protocol messing around with a fairly clean and simplified to the underlying 'file system of resources'. 
So far I have put the LOCK mechanisms into the WebDAV library layer (because they are based on URIs). 
I am also trying to keep the 'lock-null' resource concept in the WebDAV layer since they are tightly related to locks. 
My current proposal is to keep track of lock-null resources with properties that have been set and then copy those properties over to the real resource when it is created later (if I have understood things correctly). 
I realise BIND is not in the base WebDAV spec, but I want to keep what is done future proof. 
There are two variations of questions I guess I have. 
(1) Does the spec prohibit BIND-ing to a lock-null resource? 
(OK, I am being lazy and have not reread the spec again to verify this question - but the next question is the real question) (2) Regardless of the spec, do people think its acceptable to fail BIND requests to a lock-null resource with an error? 
(Is there any reason why someone would want to do it before doing a PUT or MKCOL etc?) Alan ps: Thanks to all for time spent answering these questions. 
Interesting question. 
Since it is a resource, it makes sense that you can bind to it. 
So I'd say, yes. 
But, I'd understand if servers decided to fail such a request. 
I just gave it a quick look, and it seems like the BIND protocol specification does not mention lock null resources. 
I think this is fine. 
- Jim From: Jim Whitehead [mailto:ejw@cse.ucsc.edu] 
Interesting question. 
Since it is a resource, it makes sense that you can bind to it. 
I disagree (strongly :-). 
There are a large variety of things that you cannot do to a lock null resource. 
BIND should be one of them. 
(In fact, just about everything should be one of them :-). 
A lock null resource is just a mechanism (hack :-) to expose a URL that is locked but that currently is not bound to a resource. 
If you want to see just how bad the lock null mechanism really is, just compare any two implementations of lock null resources, and notice how different/non-interoperable they are. 
So I'd say, yes. 
But, I'd understand if servers decided to fail such a request. 
I'd say "no", and all servers should be required to fail such a request. 
I just gave it a quick look, and it seems like the BIND protocol specification does not mention lock null resources. 
That is an omission (somewhat conscious, because I try to ignore lock null resources in hopes that they will be replaced with a more sensible form of lock discovery). 
If it looks like we can't make lock null resources go away, we need to update the BIND protocol to explicitly disallow binding to a lock null resource. 
More than acceptable, commendable (:-). 
Cheers, Geoff 
