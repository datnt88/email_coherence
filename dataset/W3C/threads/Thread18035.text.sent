Hello, This review deals with the usability of navigation tools &amp; UA setup. 
As someone with Cerebral Palsy I've typed with a headwand for 37 years, 21 years on small computers (12 years with DOS &amp; Windows) while watching technological developments. 
Use of macro programs to reduce work loads &amp; distances traveled over the keyboard while running programs led to experience on optimizing keystroke commands. 
Checking key pad layout is a theme with me as I can work TV &amp; VCR remote controls (&amp; other devices) with my left hand if the buttons are not too small, not too far to 1 side, &amp; have space around them (some similar spacing also makes browser keystroke commands more usable). 
Making keystroke commands most attractive is that keyboards are system constants which work in the absence of other technology. 
Which isn't to say 1 technology is inherently easier to use than another, that is determined by the nature of the controls. 
Computer programs have great usability only if frequently used commands are readily available without making people think about where the commands are. 
For the purposes of this review usability means a program can be run for hours without undue fatigue or annoyance at the command structure. 
For people using 1 hand, a few fingers, or a headwand's lone pointer usability means 1 or at most 2 key presses execute 1 command, avoiding 3 or 4 steps to use a menu item. 
The Save command is often used (in some programs) so I've always put the command sequence into a keyboard macro activated by F11 making Save a 1 key command; in current browsers F3 starts Find, a 2nd example of a 1 key command. 
Of course, Find itself isn't so easy to use since forming search strings entails much travel over a keyboard. 
For people with reduced mobility or motor control (making typing less accurate) current keyboards are a large area to cover so use of the whole thing is something to avoid (the Function keys are useful enough not to switch keyboard styles). 
To UAs that means some forms of Direct access wont be as beneficial as it seems at first blush. 
To make it more useful the Guildline should state that Direct access must load a link &amp; move the link highlight to that link (as an option), then when users return to the page they'll be in place to key to other links. 
Decreasing hand travel is mentioned by Jakob Nielson on this page states short mouse moves are better than long ones as it is faster to click items that are closer to your current position. 
Movement is basically movement whether it is across a screen or keyboard, to me only the target type differs as one is virtual &amp; the other physical. 
When specifying what is needed where needs some attention. 
A link from Dr. Nielson's page led to ideas that should be used as guides for placing commands &amp; determining the usefulness of Direct access. 
Bruce Tognazzini on this page http://www.asktog.com/basics/firstPrinciples.html in a section titled "Efficiency of the user" explains that even making a system do extra work makes people more efficient. 
His point is that it is faster for a person to set a microwave oven timer for 1:11 (1 minute &amp; 11 seconds) than for other 3 digit times since 1:11 (or 2:22) entails no finger movement &amp; little thought about the next push. 
Making a microwave run a bit longer takes less time than for folks to select 3 different numbers like 1:09. 
For people with disabilities the ability to use one button repeatedly is much more efficient than repositioning over a 2nd button. 
I say repositioning because it gives a better sense of how people with reduced dexterity reach the next button or key with accuracy decreasing as the distance to subsequent keys goes up. 
The ease of Sequential access is underplayed in Guildline 10.3 in a manner that could lead developers not to pursue Sequential access enough to make it more effective! 
Direct access is appealing, but the point needn't be made at the expense of other methods. 
The microwave example shows that searching out a search string has its own inefficiencies. 
Important to note is that keyboards have dedicated Web keys to enhance the Web experience. 
The strength of the tend is seen in Microsoft's 2 updated keyboards with dedicated Web navigation keys: 'Microsoft Natural Keyboard Adds Web, CD Keys' page http://cgi.zdnet.com/slink?11110:803742 
Microsoft Internet Keyboard page Magazine's Jim Seymour page Internet Keyboard saying, "it's the first to win me over to the new dedicated-button approach to using the Internet." 
PC Magazine's hottest "Editor's Choice" among new PCs lists Internet keys in the first paragraph of the review page keyboards weren't built for 2 handed use they'd be getting my rugous tests. 
UA developers need to be told about ideas like well laid 1 key commands to make their programs truly usable for people with disabilities. 
Perhaps the most words important I've read on the UA list are from Scott Luebking phoenixl@netcom.com 30 Nov 1999 in "A couple of comments" page Suggesting how the Guildline opens Mr. Luebking says, {Quote "It probably should say that the guidelines can help avoid pitfalls, but it is quite possible to follow the guidelines and still end up with an inaccessible user agent." 
Unquote} Accessibility doesn't often equal usability. 
An example of that is mainstreams UA using Tab, Shift-Tab, &amp; Enter as the primary navigation keys. 
That arrangement is very difficult to run because Tab is a vast distance away from Enter while Shift-Tab employs 2 key pushes (which often becomes 4 keystrokes for people who are unsteady) to move back one link. 
That contrasts the highly usable 4 year old standard for keystroke browsing set by NCSA Mosaic &amp; Opera. 
The hardware trend clearly endorses dedicated Web keys as have been available in software for many years so by making 1 key browsing commands a Priority 1 the UA Group will merely extend the trend to the folks that can most use it! 
The priority is only for main UAs. 
Gregory J. Rosmaita unagi69@concentric.net in a note to the UA Group at page that in many programs the Accessibility 'bar' is very low &amp; that this Guildline must bring the 'bar' to a reasonable height. 
Part of raising the 'bar' will only be fulfilled by stating the importance of 1 key browser commands using the main alphanumeric character area of keyboards. 
The software keyboard Mouse, "Mouse Keys", is a prime example of hugely changing the regular interface without bothering regular users. 
Such options should be very easy to turn On &amp; then Off so that worries about 'interface inconsistency' for regular users needlessly leads to Accessibility features that are difficult to use. 
To avoid that people with disabilities should be involved in program design as Mr. Luebking mentioned his note (2nd link up). 
Yet I can see practical difficulties in making that happen so input for efforts like this Guildline must gleaned on indirectly created whenever possible. 
For keyboard issues I can help; &amp; point to Bill McMurray's billmcm@earthlink.net home page into 1 keystroke browser commands. 
More generally the AT professionals on W3C WAI lists should give approximations of how people with various disabilities run computers so developers can work from rough compasses. 
To illustrate here is a way to approximate a lack of motor control: Put the keyboard Repeat Delay to very short &amp; Repeat rate to very fast (or whatever rate is bothersome) when the slightest touch or accidental bump generates a key press typing is wholly different &amp; key combinations become a huge challenge to say the least. 
We'd do well to try such experiments before writing Guildlines. 
Most importantly such tests would allow creation of input layouts so developers &amp; users wouldn't have to continually reinvent the wheel. 
Guildline 10.3 says users should control input which would likely be a complex task for most folks. 
With the proper information to use Guildline 10.3 could say provide a selections users to choose from, that will likely be easier for programmers to do than for UAs to have what amounts to miniature keyboard macro programs. 
Guildline 4 should do the same for CSS. 
Besides getting folks off to quick starts developers will receive less questions about how to configure UAs. 
As for Speech Recognition a new PC Magazine review says it succinctly on this page Recognition works well if you have the equipment {Quote "and the ability to speak clearly at all times" Unquote} which isn't promising for people with physical disabilities. 
In preparing for the future we mustn't overlook what now &amp; for the mid-term. 
On a specific Guildline 7 talks of *tabbing* in regard to Sequential access: that should be changed to keying through because using the word Tab implies uses of the Tab key itself which is too far away from other Page movement keys. 
Indeed, all browser commands should be near the Cursor-Pad area where Page Up &amp; Down etc. are to reduce traverses across the keyboard. 
Regards, Bryan Campbell -- "Just because we call it the Web does not mean it should tangle people up!" Hi Bryan, Thank you for the very interesting comments and references. 
It's very tempting to put your email in wholesale in the Techniques Document. 
I have just a couple of comments on some editorial changes I can make based on your comments. 
Please let me know if you feel additional requirements would be appropriate. 
[snip] I propose stating this explicitly as a technique under checkpoint 7.5 (Navigation among active elements). 
I propose the following Technique for checkpoint 10.7 "Provide default input configurations for frequently performed operations.": 
Allow users to accomplish tasks through through repeated keystrokes (e.g., tabbing navigation) since this means less physical repositioning for all users. 
Your last statement deviates from mantra for the last couple of years that more accessibiltiy means more usability. 
I am bewildered. 
What standard is that? 
This is our issue 129. 
I will add a link to your email there so that your suggestion is considered at the same time. 
Great technique. 
I think CSS should not be written, but generated from UI controls. 
Nice addendum to motivate designers/support teams. 
I recommend: 1) Using the term "sequential navigation" instead fo "tabbing navigation" throughout the document. 
2) Noting existing practice and your concern about key placement in the techniques for sequential navigation of active elements. 
Thanks Bryan, - Ian Ian Jacobs (jacobs@w3.org) http://www.w3.org/People/Jacobs Cell: +1 917 450-8783 [snip] hi Fine Great [snip] Thanks Yes! Good Regards, Bryan - "Cyberspace dwarfs all outer space because cyberspace is only limited by human imagination!" 
