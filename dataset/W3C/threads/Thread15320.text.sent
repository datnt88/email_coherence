After read the document of lee, here are my suggestion. 
You will have successfully met Checkpoint 5.4 at the Minimum Level if: 1. any application with custom user interfaces conform at least Level A of the User Agent Accessibility http://www.w3.org/TR/UAAG10/ Guidelines 1.0. 
If the application cannot be made accessibile, an alternative accessible solution that grant interaction by keyboard or keyboard emulator input must be provided. 
You will have successfully met Checkpoint 5.4 at Level 2 if: 1. the interface has been tested with real people with disabilities who use assistive technologies or using one or more assistive technologies or at least with assistive tecnologies emulators to determine that all the information can be accessed by people with assistive tecnologies. 
We received a few comments regarding Checkpoint 5.4 User Interfaces. 
Comment #1 This checkpoint requires conformance to UAAG 1.0 Level A, but that is an incomplete profile. 
Please refer to sections 3.1 and 3.3 of UAAG 1.0 for information about how to include a UAAG 1.0 conformance profile in a specification.[1] 
Proposal: You will have successfully met Checkpoint 5.4 at the Minimum Level if: 1.any applications with custom user interfaces conform to at least Level A of the User Agent Accessibility http://www.w3.org/TR/UAAG10/ Guidelines 1.0. 
If the application cannot be made accessible, an alternative, accessible solution is provided. 
Rewrite to the following: any applications with custom user interfaces must conform to UAAG 1.0 Guideline 2.0. 
If the application cannot be made accessible, an alternate, accessible solution must be provided (this does not have to be a text-only version). 
Note: The custom user interface could be a result of a Flash application, a Java Applet, a Java Object or program, or any other technology that is created that requires user input outside of entering an input into a static or dynamically generated cross-platform machine readable page complying with Checkpoint 5.2. 
Comment #2 All content has a user interface, which makes this checkpoint redundant. 
Should be "custom user interface".[2] Proposal: Checkpoint 5.4 Ensure that all custom user interfaces are accessible or provide an accessible alternative. 
This will ensure that we are speaking about application programming interfaces and remove the confusion of individuals thinking this section is regarding the HTML interfaces. 
Comment #3 This checkpoint is about making the user interface operable and would be better organized as part of guideline 2. Proposal: This seems to be taken care of when we apply the proposal from Comment #2 because this Guideline is focusing more on the custom user interfaces generated through application programming interfaces outside of the normal HTML user interfaces. 
Comment #4 a) minimum level #1: This point needs to be clearer. 
We cannot tell if we would need to follow these other guidelines. 
If a Web app runs in a standard browser, does the interface still have to conform to the other guidelines? 
What is considered an accessible alternative? 
A text-only site? 
What would be an accessible alternative for a Web app page? 
Proposal: This is taken care of with the proposed rewrite under comment #1. 
Comment #4 b) level 2 #1: What does "or hidden within the page" mean? 
Variety of assistive technologies" needs to be defined. 
Otherwise it's too vague. 
Is it enough, for example, to target JAWS and MAGic? 
Proposal: "hidden within the page" should be directed to related to the metadata included in the page. 
"Variety of assistive technologies" should not be defined as new technologies will probably emerge and if not mentioned would lead people to think those new technologies are not suitable for measurements. 
We could, on the other hand, provide examples of assistive technologies with a disclaimer that at the publication of this document these are some of the known assistive technologies and should only be referred to as an example base. 
Comment #4 c) level 2 reviewer's note: Not sure how it would be possible to comply with the checkpoint without carrying out tests. 
The text specifically says "the interface has been tested." 
Please clarify. 
Proposal: On the "Reviewers Note:" we should consider removing the first sentence and include the second part. 
Rewrite: It is possible to conduct tests, but still fail to meet the checkpoint (with respect to assistive technologies that were not tested, for example). 
A list of the technologies used for the testing should be included in the Accessibility Statement so people with technologies that do not support the features of the site may find a reasonable alternative to use the site. 
[1] http://lists.w3.org/Archives/Public/w3c-wai-gl/2002OctDec/0020.html [2] http://lists.w3.org/Archives/Public/w3c-wai-gl/2002OctDec/0080.html [3] http://lists.w3.org/Archives/Public/w3c-wai-gl/2002OctDec/0117.html [4] http://lists.w3.org/Archives/Public/w3c-wai-gl/2002OctDec/0130.html 
Sincerely, Lee Roberts President/CEO 405-321-6372 Rose Rock Design, Inc. First, contratulations and thanks are due to Lee for his excellent work in analysing and writing proposals for the comments on checkpoints 5.3 and 5.4. 
This is very much what we need at present, and will facilitate the working group's progress significantly. 
Turning to the substance of the comments, I worry about the scope of this checkpoint - under what circumstances exactly are we proposing to invoke the jurisdiction of the User Agent Accessibility Guidelines? 
Consider the following scenario, which already exists in practice (cf. 
Mozilla and possibly other comparable technologies). 
An interactive application is written in a combination of Ecmascript, XML and CSS; it has a URI, and when it is interpreted by the user agent a user interface, as interactive as you please, is constructed. 
The Ecmascript code calls functions of the user agent (and possibly the operating system); the XML describes the user interface in more or less device independent terms according to its design, and the CSS component regulates the style of the interface. 
Here we have an application that is, under all reasonable definitions, Web content. 
In fact the user interface of a user agent can be constructed in this manner, thereby complicating the distinction between "content" on the one side, and "user agent" on the other. 
The application could equally well be an authoring tool, for that matter. 
Under this scenario, the question is whether checkpoint 5.4 should apply at all, and if so how it interacts with the remainder of the guidelines. 
Surely an application of the kind described above should be subject to WCAG 2.0. 
What additional requirements, then, should be imported from UAAG 1.0 and how do the two sets of guidelines interact in such a case? 
One could propose that only non-standard user interface code used by the content (code which bypasses the accessibility support of the user agent and/or operating system) should be subject to checkpoint 5.4, but that kind of incompatibility with alternate user interfaces and assistive technologies is part of what checkpoint 5.3 is supposed to exclude, implying that checkpoint 5.4 is redundant under this interpretation. 
I think we need to go back to the beginning and, possibly in cooperation with the User Agent Accessibility Guidelines working group, examine relevant scenarios and decide how the two sets of guidelines should interact in such circumstances; and the same holds with respect to authoring tools (obviously if the "content" is also an authoring tool, the developer should apply ATAG). 
