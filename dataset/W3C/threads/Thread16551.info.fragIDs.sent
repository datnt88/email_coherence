From:Joe Clark [SMTP:joeclark@electricseed.com] * Do current screen readers even recognize when a DHTML menu drops down? 
[DJW:] What's a DHTML menu? 
There is no such element in HTML! 
One problem with such attempts to simulate Windows behaviour is that there are no standards for doing it; it certainly doesn't represent proper structural markup. 
I think this question would only make sense in the context of one particular way of doing them, or in terms of the HTML generated by one particular version of one named authoring tool. 
If I remember correctly, script alternatives are a priority 1 requirement in the WAI guidelines, so any site with any pretensions to accessibility will work with "DHTML" disabled, and I would think it best for anyone with screen readers (as well as those concerned about security) to disable it. 
In my experience, sites that are heavily into Javascript are going to a problem for anybody to navigate; this isn't fundamentally true, but the people who design navigable sites tend not to feel the need for heavy scripting. 
--------------------------- DISCLAIMER --------------------------------- Any views expressed in this message are those of the individual sender, except where the sender specifically states them to be the views of BTS. 
We had this discussion on the Webdesign-L mailing list on the topic of DHTML navigation-- those jazzy menubars that pop up outta nowhere: 
What happens if you have a DHTML navigation system that pops up or drops down submenus as you drag a mouse across a menu bar? 
Presumably the screen reader is chugging it's way through the content of the page when you drop the submenu. 
Can the screen reader even recognize that a submenu has been dropped, let alone read it? 
And I wrote back that there were two obvious possibilities 
In your DHTML drop-down menu, you've set things up as a collection of individual graphics, each with an ALT and TITLE. 
Or: You have set up clickable hotspots in your single graphic image, each of which has an ALT and TITLE. 
(This doesn't quite take care of the other instructions you may have embedded as bitmapped type inside the graphic.) If either of these is possible, theoretically a screen reader could read the ALT or TITLE and let the user know it's actually there. 
Now, as to the issue of even recognizing that something has happened at the DHTML level, I wish I knew. 
So here are a few questions for WAI-IG: 
* Do current screen readers even recognize when a DHTML menu drops down? 
* If it contains ALTs and TITLEs, can the screen reader navigate it? 
What about the fake close boxes used in some such menus? 
Will the screen reader even recognize the existence of that close box, given that there is no standardized data format to mark up a close box as such? 
If you're interested in looking at a few examples of DHTML navigation, I've covered the topic extensively on the NUblog Weblog on online content: (Those discussions are fully accessible, with ALTs, TITLEs, and-- wait for it!-- LONGDESCs on any graphical elements.) 
Any wisdom to share on how screen readers handle DHTML navigation? 
Joe Clark | joeclark@contenu.nu 
Taste | Acumen | Content -- http://www.contenu.nu 
(Weblog on online content: http://www.contenu.nu/nublog.html ) www.fawny.org 
| www.joeclark.org 
| www.electricseed.com/joeclark 
First of all, you assume that screen readers are activating the menus. 
Most DHTML "menus" are activated by a mouseover. 
Screen reader users do not use the mouse, they use the keyboard. 
Therefore, the first step to making DHTML menus accessible to screen readers is to not only activate them from a mouseover but also when they receive focus from a keyboard action. 
Secondly, you assume that you have to use images. 
Depending on the look you are trying to achieve, you may or may not be able to use style sheets. 
This is a minor point. 
Thirdly, and most importantly, as Dave Woolley responded, you need to make sure that the page is usable without the DHTML. 
I have documented a case study that I played with last year at It is by no means an exhaustive list and several open issues exist. 
I encourage people to play with the examples given in the site to: 1. break them and record how they break 2. find better ways to do them 3. let me know about other common practices that we need to investigate. 
This information will eventually end up in a chapter of the WCAG Techniques document. 
Thanks, --wendy 
wendy a chisholm world wide web consortium web accessibility initiative madison, wi usa 
Here is an item that I think will be of interest, which I am forwarding from an email from Cyndi Rowland, Project Manager of Web Accessibility in Mind (WebAIM): 
The deadline to submit e-testimony to the Web-based Education Commission is August 18! 
This commission was established by Congress to develop specific proposals aimed at "ensuring that all learners are able 
to 
take full advantage of the World Wide Web." 
They invite people to testify on public policy issues necessary to " help fulfill the educational 
promise 
of the Internet." 
They can be found at http://www.webcommission.org 
Readers of the WebAIM site are encouraged to provide congress with their testimony. 
Cyndi@cpd2.usu.edu 
Cyndi Rowland, Ph.D. Director, Collaborative Early Childhood Special Education Program Center for Persons with Disabilities 6800 University Blvd. 
Utah State University Logan, Utah 84322-6800 (435) 797-3381 
