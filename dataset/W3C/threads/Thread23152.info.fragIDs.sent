Hi, a quick question. 
Is getElementsByTagNameNS supposed to be able to find elements that are in 
no namespace? 
If yes, how? 
It seems that Xerces accepts null as 
namespaceUri, which seems to be right. 
If getElementsByTagNameNS can not match elements which aren't in a 
namespace, what's the behaviour of the DOM level 1 method 
getElementsByTagName? From what I read it will ignore the namespaceUri and will only check the name, making it useless for documents where namespaced elements occur... Julian 
Yes, null should work to specify these. 
Completely insensitive to namespaces. 
Yes, that makes it useless for namespace-aware processing; its main use these days is to support backward compatability for pre-namespace (eg DOM Level 1) applications. 
Joe Kesselman / IBM Research 
From: Joseph Kesselman [mailto:keshlam@us.ibm.com] 
Sent: Thursday, August 23, 2001 4:03 PM Subject: Re: getElementsByTagNameNS 
Thanks for the information. 
Is it generally true that with the DOM level 2 methods, a namespaceUri of (null) can be used for elements which arent's in a namespace, while the behaviour for "" (empty string) is undefined? 
Julian 
The specs is written in terms of null strings, however not all potential "DOMString"'s have a representation for null (for example, C++ Standard Template Libraries std::basic_string  , Mozilla's nsString and ECMAScript's String). 
This results in most uses of null as an string argument from Jscript or Javascript within a browser to fail and so "" is safer in practice, but relies on non specified behavior. 
I believe the Work Group is trying to find a resolution to this, there was an errata for hasFeature() to address this for its case. 
