Hi. In an effort to complete the collection dedicated to Web sites' quality within the W3C QA Library [1] and build a more comprehensive set of resources adapted to all the kinds of actors involved, we have created a simplified outline of the various stages and actors of a Web Site's creation[2]. 
This outline may, eventually, become a good guide for readers to find their way among these resources, but for now it can be useful in assessing which documents are yet to be written and which documents need to be amended to be more adapted to their intended audience. 
[1] http://www.w3.org/QA/Library/#websitequality [2] http://www.w3.org/QA/2003/05/Web-site-steps Participants in the QA Interest group, especially participants in this mailing-list, had expressed some interest in contributing material to the QA Library, and for that purpose we wrote up some contributions guidelines [3] (for which feedback is still welcome). 
This outline of "Web site steps" may be an interesting source of inspiration for volunteer contributors without a clear idea of what they would like to provide help on. 
[3] http://www.w3.org/QA/2003/06/Contrib 
Should you decide to start work on one of the missing documents, or should you want to have a try at improving one of the existing documents, please coordinate with other participants on this list. 
Thank you. 
olivier 
Hi Olivier (and others on this list) 
As I mentioned to you at the WWW 2003 conference I'm involved in QA 
support for a number of digital library programmes in the UK Higher Education community. 
Details of our work are given in a couple of papers, which are available from: 
Our aim is to encourage projects to comply with open standards and best practices - while recognising the constraints that projects face, such as lack of resources, investment in existing working practices and tools, etc. 
We've producing a range of brief documents, which are available from: I'd be happy for the content of any of these documents to be repurposed for the W3C QA Web site. 
However some will be out-of-scope for you, while others may be too pragmatic (e.g. suggesting approaches for making PowerPoint files available on the Web or mentioned specific applications by name). 
Anyway I'd welcome comments on these documents, especially if anyone feels they'd make a useful addition to the W3C QA libray of resources. 
Thanks Brian Brian Kelly UK Web Focus UKOLN University of Bath BATH BA2 7AY Web: http://www.ukoln.ac.uk/ FOAF: http://www.ukoln.ac.uk/ukoln/staff/b.kelly/foaf/bkelly-foaf.xrdf For info on FOAF see http://www.ukoln.ac.uk/ukoln/staff/b.kelly/foaf/ 
"Brian Kelly" B.Kelly@ukoln.ac.uk 
As always another site which has singularly failed to swallow it's own 
dogfood, you cannot serve XHTML 1.0 as text/html unless it follows Appendix 
C of XHTML, the above document does not follow Appendix C, and is served as 
text/html so whilst the material looks incredibly useful and valuable, the fact it can be shot down so easily makes it useless, we can't use it to educate people. 
Jim. 
Hi Jim 
Thanks for the comments. 
I assume you're referring to Appendix C in: 
(which states that "This appendix is informative."). 
It's not clear to me what I should do. 
Are you saying the page 
should be XHTML 1.0 strict, that I need an XML PI, that I need to use a different character encoding or that I should use another MIME type? 
Hmm. Have just read section 3.1 in which does not seem to *ban* this MIME type although it's clearly not recommended: 
"In **general**, this media type is NOT suitable for XHTML. 
..." "The use of 'text/html' for XHTML SHOULD be limited for the purpose of I'd be happy to move to 'application/xhtml+xml' - but there will need to be testing for any problems with other resources on the Web site (which aren't managed by me). 
The document is XHTML 1.0 compliant (append ,validate to the URL) 
Note that I've not said anything about MIME types in my documents - but I guess this would be a useful document to be produced. 
Brian Brian Kelly UK Web Focus UKOLN University of Bath BATH BA2 7AY Web: http://www.ukoln.ac.uk/ FOAF: http://www.ukoln.ac.uk/ukoln/staff/b.kelly/foaf/bkelly-foaf.xrdf For info on FOAF see http://www.ukoln.ac.uk/ukoln/staff/b.kelly/foaf/ 
"Brian Kelly" B.Kelly@ukoln.ac.uk 
XHTML is only "allowed" to be served as text/html if it's under Appendix C, 
if someone would like to correct me on that and say Appendix C isn't 
normative and any old XHTML can be served as text/html then I'll withdraw 
the criticism. 
but it's not Appendix C compliant which AIUI is required to be served as text/html (C.7 for example, I didn't bother looking beyond.) Also xhtml 
1.0 SHOULD be served as application/xhtml+xml, and I find it hard to explain to people that some SHOULD's are to be ignored, and others are to be obeyed, how is a non-expert supposed to judge which, surely we need to either have 
all or none? 
Jim. 
"Brian Kelly" B.Kelly@ukoln.ac.uk 
The actual content of the briefings are all excellent, and I would very much like them available to a wider audience, either through being repurposed for the QA site, or just linked to/advertised to get the wider audience (the W3 stamp of approval by being hosted on w3.org would be useful, but not essential). 
One comment is the often links to bobby, I'd rather this was to a variety of tools, as my experience has shown people often don't like bobby's warnings about things they get right, if you suggest a variety of accessibility checkers they often put things differently and people can judge quicker that one of them just isn't very good at mechanically checking that feature. 
Jim. 
Le jeudi, 2 oct 2003, ? 
09:40 America/Montreal, Jim Ley a ?crit 
: 
Jim they are two methods to change the world. 
Encourage people or cut their head. 
I often prefer the first one, it's longer but it's more effective. 
When something is wrong, encourage people to fix the problems, explain solutions, etc. Do not shoot in their head. 
Karl Dubost - http://www.w3.org/People/karl/ W3C Conformance Manager *** Be Strict To Be Cool *** 
Le jeudi, 2 oct 2003, ? 
09:40 America/Montreal, Jim Ley a ?crit 
: 
Okay, Don't serve up XHTML 1.0 has text/html, application XHTML 1.0 SHOULD be served as application/xhtml+xml. 
There's a simple solution, author 
your documents as HTML 4.01, it's more supported (Appendix C only gives a 
profile compatible with "most" html user agents) and it has established QA tools (such as the W3's validator) unlike Appendix C which has none. 
The thing is, I know Brian knows that, the rest of his briefings are excellent, there's nothing to educate him on in the area, it just seemed necessary to point out the problem. 
It's unfortunate that it's an example of Flavell's law, and I could perhaps have pointed it out more politely, but it's a pretty elementary mistake highlighting the lack of QA tools. 
If we're going to public evangelise standards, we need to be whiter than white, we can't be shot down on the markup of our resources, non-Appendix C XHTML 1.0 makes that all too easy. 
Jim. 
Hi Jim Thanks for the comments. 
I've changed the subject line as there are two seperate threads: my documents and my use of XHTML and my reading of the XHTML spec and use of XHTML. 
My first comments are about the spec. 
The document says 
"C. HTML Compatibility Guidelines 
This appendix is informative." 
If you think that's incorrect I suggest the editor of the spec should be 
informed (I guess there's a QA of the spec issue). 
This comment is also about the spec, or rather interpretation of the spec. 
C.1. 
allows you to omit the XML declaration, due to problems with older browsers. 
I've done this. 
C.7 says you need lang: and xml:lang attributes. 
I have the lang attribute in the html element. 
I don't need to give the xml:lang attribute as C.1 allows me to omit it (as I understand it). 
I think I comply with the other requirements (e.g. 
I use br / etc.) - although I can't formally prove this. 
It does occur to me that there's a need for a tool to validate compliance with this section. 
have 
The previous comments are meant to be factual. 
The following comment are subjective and open to debate. 
As stated above, I don;'t thinbk my use of the MIME type is wrong - but may not reflect recommended practices. 
I'd like to implement best practices. 
This will include real world implementation issues and not just the W3C specs. 
I also want to be able to implement solutions which can easily be deployed by others. 
My QA Focus Web site is part of our organisational server. 
The Web site is based on simple use of PHP. 
I manage the XHTMl fragments in HTMLkit. 
We use directory defaults to try to avoid URIs which have gormats encoded in them (cf recent discussion on this list). 
I don't want to change server configuration options which could affect other areas of the Web site. 
So the current approach meant that XHTML resources could be created (and validated) without having to change server configuration options. 
Note that I suspect that some projects that I advise will not be in a position to change MIME types (but this is speculation). 
So I think my approach is better than creating HTML 4 resources. 
If I wish to move to a more appropriate MIME type I'll have to work out how best to do that. 
It may be that I'll need to do something differently with the file suffix or do something in PHP. 
I'd welcome suggestions. 
But going back to the best practices in the real world I think there's need for advice (from this group) on the different approaches to deployment of XHTML. 
This should include advice on whether one should author in XHTML if one has no control over the MIME type (which may be the case with some ISPs) and the pitfalls one may encounter in use of various MIME types. 
Note that an advantage with text/html is that the page will display if the 
XHTML is invalid. 
I think it would be difficult to sell the notion of 
application/xml if an invalid file is not displayed (I appreciate the need for compliance - this comment is about marketing XHTML. 
One could argue that HTML 4.0 is a more fault tolerant format that XHTML (I wouldn't say that but others may). 
Brian 
"Brian Kelly" b.kelly@ukoln.ac.uk 
C, 
withdraw 
I agree Appendix C is non-normative, however the MIME-type definition 5.1 is 
normative 
XHTML Documents which follow the guidelines set forth in Appendix C, "HTML Compatibility Guidelines" may be labeled with the Internet Media Type "text/html" 
So whilst Appendix C isn't normative in itself (since you can use 
application/xml or application/xhtml+xml for your XHTML) if you wish to serve it as text/html 5.1 requires it to be. 
This is certainly been my interpretation and it's been discussed here and in other places often enough that I'd've thought someone would correct me on it if it was wrong. 
Ah, I understood the xml declaration was the ?xml 
version="1.0"? 
and that was all you were being allowed to leave out, it had no bearing on C.7, I could be wrong of course, but again, it's been often discussed. 
All of your reasons for serving XHTML how are you, I entirely agree with, and are completely understandable, indeed they're probably required in the real world. 
However you've not given the reason why HTML 4.01 strict is not appropriate for you, it's semantically identical to XHTML 1.0. 
Or what it is about it that makes you not want to author it (a point that I've not yet seen made on this list) 
I'd personally say, this is a huge disadvantage of XHTML as specified, not an advantage of breaking the rules, it doesn't have a method of degrading, the don't display anything in error is a key weakness, and a key strength of HTML 4.01 as deployed. 
I don't think pretending XHTML is really HTML tag-soup and relying on that get us out of trouble if we make a mistake is to be applauded. 
I don't think we should deploy XHTML in any format, unless we have automated publishing tools to actually ensure it's valid, the constraint on invalid - no rendering is too severe a failure, in a document that is mostly correct. 
Jim. 
[snip] 
Brian, 
I really must chime in and agree with Jim about this. 
The point that he and I have been trying to make over some period of time is that the attitude that serving XHTML as text/html and allowing authors to get in the habit of authoring invalid XHTML all the while thinking it is ok will end up destroying the promise that is XHTML. 
One of the great advantages to authoring in XML and XHTML (as application/xhtml+xml) is that the documents must be well formed at the very least. 
To take the position that the requirement of well formed documents is a disadvantage and that any hodgepodge of markup should be displayed is antithetical to the entire idea behind XML. 
As Jim stated, I have not heard a good reason to use XHTML when it is served as text/html, especially when the content is not subject to a strict validation process. 
The reason I brought up the news.com 
site today was to illustrate the Bad Things(tm) that are happening to XHTML because of lack of a commitment to what XHTML really is... XML. 
Why are we recommending XHTML over HTML when all we expecting of the author is that they continue to author HTML as they always have? 
/bc 
Hi Bob Thanks for the email. 
I understand your (and Jim's) rationale. 
I got the impression at the WWW 2003 conference that the problem with dodgy XHTML was to be addressed with XHTML 2.0. 
Anyway I don't have any disagreements with the logic of 
your position. 
I guess my current interest is in the deployment of the application/xml MIME type in a University server environment (typically a mixture of XHTML and HTML; PHP, etc). 
Thinking about it makes me wonder if the advice on format independent URIs ties in with MIME type mapping. 
BTW the reason I'm using XHTML 1.0 is (1) to gain experience of problems - as I'm now finding; (2) to be able to use XSLT to transform the resources (e.g. to RSS) and (3) is the most recent W3C recommendation 
for HTML and its use is preferred (this is my current understanding). 
I get the impression that this (esp. 
point 3) isn't your's (or Jim's 
view). 
I guess your position is that the best approach is XHTML+application/xml (or whatever) and if you can't guarantee to provide the MIME type (for whatever reason) you should stick with HTML 4. If this is felt to be the best approach, shouldn't there be some advice on the QA Library covering this? 
As I pointed out in a previous message the XHTML 1 spec does allow text/html. 
I think additional caveats about the denages of this approach are needed. 
(My apols if this is going over old ground or slightly out of scope for this list). 
Brian Brian Kelly, UK Web Focus UKOLN, University of Bath, BATH, England, BA2 7AY Homepage: http://www.ukoln.ac.uk/ukoln/staff/b.kelly/ 
"Brian Kelly" b.kelly@ukoln.ac.uk 
Getting a new markup language out won't solve the problem of dodgy XHTML, dodgy XHTML is a user problem, not a standards problem - developers have little incentive to author XHTML valid pages, as there's virtually no cost in authoring invalid ones. 
We can only change this behaviour by providing real benefits in the valid. 
As I see there's 2 options to this, ensure that new UA's don't render invalid XHTML - this is completely unrealistic, UA's need to render content that aren't 100% right, planes don't stop flying just because the lock on the toilet door doesn't work. 
Alternatively the UA's can indicate that it's used some form of fixup, perhaps by not using the users stylesheet or something that provides the content, whilst still making it clear it's not right. 
Whatever we choose we'll only be able to deploy these new User Agents against application/xhtml+xml, text/html is lost - that means tag-soup, and because of that we have to ensure that there's not a large userbase of invalid XHTML ready to be dumped on this unsuspecting XHTML ua - if there is, that UA will have to render it, or people won't use it. 
This is a good reason, but we can still present HTML from XHTML sources, it's just an extra publishing step, this may be too much trouble, but then I don't find XHTML meets my needs as a storage format in any case - I'd rather go RSS- HTML than XHTML- RSS, keeping the storage in the richer semantic format. 
Jim. 
Hi Jim (and Bob) Following your comments about XHTML and MIME types I've written a draft advisory document which takes on-board your suggestions: and a case study which explains why the QA Focus Web site uses XHTML and how we intend to change the MIME types: Comments welcome. 
Thanks Brian Brian Kelly UK Web Focus UKOLN University of Bath BATH BA2 7AY Web: http://www.ukoln.ac.uk/ FOAF: http://www.ukoln.ac.uk/ukoln/staff/b.kelly/foaf/bkelly-foaf.xrdf For info on FOAF see http://www.ukoln.ac.uk/ukoln/staff/b.kelly/foaf/ 
