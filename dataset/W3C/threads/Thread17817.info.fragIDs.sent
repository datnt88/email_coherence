Checkpoint 7.2.1 Provide programatic access for dependent user agents to the user interface by using operating system and development language accessibility resources and conventions. 
Technique Most of the current assistive technology available to improve the access to computer based technologies for people with disabilities is designed to provide access to non-specific software applications with in an operating system. 
User agents rendering WWW content is just one type of application the assistive technology is providing access. 
For software applications to be compatible with these types of assistive technologies they need to follow standard operating system conventions for accessibility and in the case of some types of operating systems use accessibility APIs to provide additional information to assistive technologies. 
Operating systems with accessibility APIs include this functionality in standard controls and display rendering APIs. 
User agents which use standard controls and rendering APIs will have a basic level of compatibility with existing assistive technologies. 
The complexity of visual rendering of WWW content though often requires additional information about the content rendered which means making more information about the content available through the accessibility API. 
Current operating system accessible design guidelines: 1. Microsoft Windows (http://www.microsoft.com/enable/dev/) 2. Java (http://www.sun.com/access/ and 3. Apple Macintosh (http://www.apple.com/education/k12/disability/) 
Current accessibility application programming interfaces: 1. Active Accessibility (http://www.microsoft.com/enable/msaa/) 2. Java accessibility API (provide URL later) 3. Java Swing Classes (provide URL later) 
Jon Gunderson, Ph.D., ATP Coordinator of Assistive Communication and Information Technology Division of Rehabilitation - Education Services University of Illinois at Urbana/Champaign 1207 S. Oak Street Champaign, IL 61820 Voice: 217-244-5870 E-mail: jongund@uiuc.edu 
WWW:http://www.staff.uiuc.edu/~jongund 
There are actual guidelines for apple (as opposed to promotional material, which is all I could find at the site listed) at Charles 
Checkpoint 7.2.1 Provide programatic access for dependent user agents to the user interface by using operating system and development language accessibility resources and conventions. 
Technique Most of the current assistive technology available to improve the access to computer based technologies for people with disabilities is designed to provide access to non-specific software applications with in an operating system. 
User agents rendering WWW content is just one type of application the assistive technology is providing access. 
For software applications to be compatible with these types of assistive technologies they need to follow standard operating system conventions for accessibility and in the case of some types of operating systems use accessibility APIs to provide additional information to assistive technologies. 
Operating systems with accessibility APIs include this functionality in standard controls and display rendering APIs. 
User agents which use standard controls and rendering APIs will have a basic level of compatibility with existing assistive technologies. 
The complexity of visual rendering of WWW content though often requires additional information about the content rendered which means making more information about the content available through the accessibility API. 
Current operating system accessible design guidelines: 1. Microsoft Windows (http://www.microsoft.com/enable/dev/) 2. Java (http://www.sun.com/access/ and 3. Apple Macintosh (http://www.apple.com/education/k12/disability/) 
Current accessibility application programming interfaces: 1. Active Accessibility (http://www.microsoft.com/enable/msaa/) 2. Java accessibility API (provide URL later) 3. Java Swing Classes (provide URL later) 
Jon Gunderson, Ph.D., ATP Coordinator of Assistive Communication and Information Technology Division of Rehabilitation - Education Services University of Illinois at Urbana/Champaign 1207 S. Oak Street Champaign, IL 61820 Voice: 217-244-5870 E-mail: jongund@uiuc.edu 
WWW:http://www.staff.uiuc.edu/~jongund 
--Charles McCathieNevile mailto:charles@w3.org 
W3C Web Accessibility Initiative http://www.w3.org/WAI MIT/LCS - 545 Technology sq., Cambridge MA, 02139, USA 
if this helps. 
from a previous post back in March Windows applications Microsoft includes things like a "Checklist of Accessibility Design Guidelines" at this web site. 
The checklist includes topics like providing keyboard access to all features, exposing keyboard focus within a control, and to avoid conveying important information by color alone. 
- Macintosh applications Apple includes information on topics like responses to user input via the keyboard and mouse, clear and consistent use of language, and designing for an international market. 
- UNIX/ X Window System The Open Group has various guides which explain the Motif and Common Desktop Environment (CDE) with topics like how users interact with Motif/CDE applications and how to customize these environments. 
