The last couple of days I have been putting together a test suite for javadom.py, which is a simple wrapper interface that allows Python scripts running in JPython to use Java DOM implementations with a Python DOM interface. 
When writing this test suite I found a number of bugs in the underlying DOM implementations (and, of course, my own interface), which I have reported. 
I also found a couple of weak spots, I believe, in the specifications, where implementations differ. 
1. 
What is the result of document.createAttribute("a")._get_nodeValue()? 
Is it None or ""? 
As far as I can see neither of the level 1 and level 2 specs answer this question. 
None would be the most reasonable answer, methinks, but some implementations think otherwise. 
Xerces: "" Sun: None Brownell: "" 4DOM: "" Indelv: None SXP: None OpenXML: "" 2. What is the result of calling element.removeAttribute("non-existent")? 
The specs (1 and 2) seem to say that nothing should happen, and that is my own interpretation. 
Xerces: nothing Sun: raise DOMException Brownell: raise DOMException 4DOM: nothing Indelv: nothing SXP: nothing OpenXML: nothing --Lars M. Since Delphi does not treat wideStrings as ordinary objects I always use an empty string where the DOM prescribes a null pointer. 
In my opinion DOM 2 should explicitly allow this by modifying ?1.1.5. 
I agree. 
The problem probably arises in some implementation, because NamedNodeMap.removeNamedItem() will raise a NOT_FOUND_ERR exception, i.e. if you use instead of the above example element.attributes.removeNamedItem("non-existent") 
you should raise an exception. 
So if an implementation just transforms a removeAttribute() call into a removeNamedItem() call of the Element's attribute list it is not conforming with the DOM spec. 
Though it is a constant pitfall for implementations, the DOM WG decided not to harmonize the NamedNodeMap- and the Element-calls, because of backward compatibility. 
Dieter Koehler, M. A. - dieter.koehler@ppp.uni-bamberg.de 
Mittlere Kaulberg 22, D-96049 Bamberg, +49(0)951-5190726 "http://www.philo.de/Philosophie-Seiten/": 
1000+ Philosophie-Links "http://www.philo.de/VirtualLibrary/14.de.htm": Deutsche Philo-Links "http://www.philo.de/xml/": 
Open XML - XML-Komponenten fuer Delphi * Lars Marius Garshol * Dieter K?hler This is a case of name collision. 
My Python - Java DOM module only handles Java DOM implementations, so the OpenXML I am talking about is not your Delphi module, but this one: In my XML tools list I've called your module XDOM, since you seem to use that name just as often as OpenXML. 
In any case, keshlam has already assured me off-list that "" is the correct return value. 
* Lars Marius Garshol * Dieter K?hler So, apparently does the DOM WG, again according to keshlam. 
Aha, I didn't think of that. 
Thank you for pointing that out. 
--Lars M. Nothing should happen if you try to remove a non-existent attribute. 
The methods don't have a return value and explicitly raises no exception for that case. 
Philippe 
