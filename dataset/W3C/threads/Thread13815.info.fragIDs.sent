As (most of) you know, AccessValet 1.0 generates diagnostic messages to help a web content developer identify and fix violations of WCAG or Section508. 
AccessValet 1.1 extends the capabilities of 1.0 by taking the operator through a process of classifying each warning: is this in fact a violation, and if so what to do about it. 
The purpose of this is to generate a briefer accessibility report that can form part of a management or QA process. 
EARL is of course a primary target format. 
I've been messing around with how to express this in EARL, and I'd like to ask for review on my current ideas. 
I've taken a brief Valet report, and added comments to the EARL to make it clear what's going on (chaals - does this use of "heuristic" meet your approval?) I still don't think I understand the significance of reification here:-( rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://www.w3.org/2001/03/earl/1.0-test#" !-- Level1 is the automatic analysis. 
Detailed level1 reports are as seen in the online AccessValet -- testmode rdf:resource="http://www.w3.org/2001/03/earl/1.0-test#automatic"/ !-- Level2 results are generated as the operator ticks off each warning in the Level 1, and marks how to treat it. 
The l2 assertor asserts a result based on the sum total of assertions. 
-- testmode rdf:resource="http://www.w3.org/2001/03/earl/1.0-test#heuristic"/ testmode rdf:resource="http://www.w3.org/2001/03/earl/1.0-test#manual"/ !-- 
All assertions in this report are about the page as a whole. 
Assign an ID to it so we can collect page info in one place. 
-- !-- What we are testing against: in the case of WCAG, this is in two parts -- !-- 
One level 1 assertion (result). 
It should perhaps also reference a detailed Level1 report; OTOH that's for the developer, and (s)he may not want to publish or even save it Result here is always "suspectagainst", quantified by the note. 
-- rdf:predicate rdf:resource="http://www.w3.org/2001/03/earl/1.0-test#suspectAgainst"/ !-- 
One level 2 assertion (result). 
This is the bottom-line of the whole report -- rdf:predicate rdf:resource="http://www.w3.org/2001/03/earl/1.0-test#Fail"/ !-- 
Any number of assertions may be made by the operator based on the warnings in the Level 1 report -- testResult rdf:resource="http://www.w3.org/2001/03/earl/1.0-test#Pass"/ testResult rdf:resource="http://www.w3.org/2001/03/earl/1.0-test#Fail"/ Nick Kew 
This seems to make sense, except that I don't think you need to have two levels. 
The assertor is either the tool or the person - the fact that a tool 
chooses to trust a person over itself means that it should suppress its own result, or that it should provide both results allowing someone else to decide the tool is smarter than the person. 
The significance of reification is that it lets us say "joe says that" and "fred says that" without running into a problem because the things they say are contradictory (which is what would normally happen if we merged the two statements as bare RDF). 
On the other hand the new schema uses some nicer property names to make the reification less visible and make it more obvious what is going on - the tested, result, etc properties are less general than subject,predicate,object, but I think that is an advantage. 
Cheers Chaals 
SWAD-E http://www.w3.org/2001/sw/Europe ------------ WAI http://www.w3.org/WAI W3C, 2004 Route des Lucioles, 06902 Sophia Antipolis Cedex, France 
Since my original post, I've put up some real examples of this on the web. 
If you haven't already done so, can I suggest you look at the HTML version (e.g. URL:http://valet.webthing.com/access/example-full.html ; there's also a corresponding .rdf) 
I thinks this makes the motivation of the report very clear. 
Level 1 is the automatic analysis Valet has done in the past, while Level 2 is new, but has to be based on a Level 1 report (or it becomes just another checklist-with-a-GUI tool). 
The EARL I posted was for Level 2, but I didn't want to lose the one-line summary from the Level 1 report completely. 
But the tool is now doing two different things, one automatic and one heuristic, quite apart from recording the person's assertions. 
What bothers me is when I find use of rdf:[subject|object|predicate] seems to be an only alternative to jumping through hoops. 
In this case I was drafting something with pure-ish EARL terminology, but found it much simpler to express when I went back to rdf-land. 
Yes, that's how I think it should be, and that's why it's bothering me that it didn't work like that in this case. 
Nick Kew 
