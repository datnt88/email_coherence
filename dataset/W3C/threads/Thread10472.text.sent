Dear RDF WG, I have been actioned by the I18N WG (Core TF) to write to you. 
This is partially a Last Call comment, and partially a comment on your recently announced post-Last Call changes. 
It affects several of your specifications. 
On its recent teleconference, the I18N WG (Core TF) agreed with my summary of the situation in In particular, we have looked at the current (both in the Last Call as well as in your later proposal) status of string and language handling in RDF literals (plain literals, XML literals, typed literals of XML Schema Datatype 'string'). 
The core arguments for our case are contained in the above email, but I'll copy them here for your easy reference: This situation is not at all satisfactory from the viewpoint of I18N because: - We have worked hard to eliminate artificial differences between text strings that are essentially the same: - by basing XML and RDF on Unicode, and therefore eliminating differences in character encoding. 
- by working on normalization (NFC) to reduce or avoid accidental differences based on remaining encoding choices in Unicode It would be very bad if after all that work, we were left with gratuitously different ways of representing textual strings due to idiosyncrasies of a type system. 
- Language tagging is an important aspect of internationalization. 
Also, small-scale markup is important for internationalization (multilanguage strings, bidirectionality, ruby, glyph variants,...). 
Both are in many ways natural extensions of plain text strings as soon as markup is available. 
The current handling of XML literal strings without any actual markup, as well as the recent change to ignore xml:lang on XML literals, break this natural extension. 
In addition, the recent change to ignore xml:lang on XML literals makes language tagging more tedious in the prevalent case of monolingual or mostly monolingual data. 
We think that this is a very important issue for RDF and I18N, and strongly urge you to find a better solution. 
We think the proposal given by Ralph is a very good start, but we are sure you will have other ideas. 
With kind regards, Martin. 
This is a complicated issue, and I may have overlooked some of the reasons we are where we are, but I think Martin's description [1], second part (starting with "The orgininal RDF spec (http://www.w3.org/TR/1999/REC-rdf-syntax-19990222)had very few variation for literals."), is useful and well-presented background. 
I think the arguments made reinforce the idea of losing XMLLiteral as a datatype, which I previously [2] argued in favour of in response to Martin's earlier comments [5], which were themselves in response to the decision [3] [4] to drop language tags and rdf-wrapper stuff from XML literals. 
So, along the line, it seems we decided: (a) that XML C14N was a parser issue, and the abstract graph syntax is presumed to contain only canonical XML literal data, (b) to drop the language tag from XML literals, hence the need for rdf-wrapper in the abstract syntax. 
Martin argues that (1) XML literals shouldn't be gratuitously different than plain literals, and (2) XML literals really need to have language tags. 
Thus, I propose that parsetype='Literal' values be treated as plain literals, and that the parsetype='Literal' is simply a flag to the parset to not try to interpret the contained XML data as any form of RDF description. 
The value of a literal thus described is simply the sequence of characters (after C14N applied to the RDF/XML) contained within the corresponding element, together with the in-scope XML language tag (if any). 
The current approved definitions, per [6] [7] make it clear that a plain literal denotes either a string or a pair of two strings, one of which is a language tags. 
After that, there's one final wrinkle raised by Martin's last message, namely the status of xsd:string datatyped literal values. 
My view on these is that they are syntactically distinct values in the RDF graph, but under a suitable datatyped interpretation will denote the same thing as a corresponding plain literal without language tag. 
#g [1] http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jun/0023.html [2] http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003May/0203.html [3] Meeting minutes 9-May-2003 (item) [4] Jeremy's outline proposal, option 4 approved per [3] [5] Martin's comments in response to this decision: [6] Meeting minutes 16-May-2003 [7] Jeremy's proposal for revised literal interpretation, broadly accepted per [6]: [8] Meeting minutes 28-Mar-2003 (item 13): [9] C14N proposal accepted per [5]: Graham Klyne PGP: 0FAA 69FF C083 000B A2E9 A131 01B9 1C7A DBCA CB5E Martin, I'm not sure whether it matters, but with all due respect, this is not even partially a last call comment. 
The window for submitting last call comments to RDFCore closed some time ago. 
This is thus a post last call comment. 
RDFCore is reviewing post last call comments and considering how to respond to them, so you can be assured that this comment will go through that process. 
Brian It affects It helps me if these post-last call discussions are connected with the pre-last call issues list. 
In this case, the relevant issues include I just checked to see that the issues list acknowledges what's happened to that issue since it was closed back in Feb 2002. 
Gold star for Brian; indeed it does cite the 9 May decision to change the way xml:lang works. 
FYI, these issues are nearby, in my mind... though I don't think we're talking about any proposals that would change our decisions on those. 
Dan Connolly, W3C http://www.w3.org/People/Connolly/ Hello Dan, Many thanks for your pointers. 
It mentions that decision, but does not give any justification. 
Any place that's documented? 
Can anybody supply a good writeup? 
This is unrelated (except for being about i18n) This is related in that the RDF Core WG, by using exclusive canonicalization, actually cares about namespaces inherited from (maybe far) outside the actual literal (apart from namespaces implied by qnames in attributes and element content, which is not RDF's fault). 
It seems very odd that at the same time, inheritance of xml:lang was thrown out, even though the later is clearly used in M&amp;S, whereas the former is definitely unclear in M&amp;S. 
agreed. 
Regards, Martin. 
