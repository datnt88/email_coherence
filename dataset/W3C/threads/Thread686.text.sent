Hi, we just installed JTidy(R6) at work today. 
We added the Tidy.jar to the environment and created a wrapper Class to ease acess. 
The local JUnit test worked fine. 
But acessing the file over RMI (the method call comes from an EJB) we get following stacktrace: Mi Mai 16 16:42:46 GMT+02:00 2001: I EJB JAR deployment c:/dev/fbs/application/fbs/serverclasses/fbs_session_finstral_wl51.jar 
Exception in non-transactional EJB invoke: java.lang.IllegalAccessError: try to access field org.w3c.tidy.ParserImpl._parseHead 
from class org.w3c.tidy.ParserImpl$ParseHTML at org.w3c.tidy.ParserImpl$ParseHTML.parse(ParserImpl.java) at org.w3c.tidy.ParserImpl.parseDocument(ParserImpl.java) at org.w3c.tidy.Tidy.parse(Tidy.java) 
at de.sitewaerts.futuna.common.XHTMLHandler.parseHTMLtoXML(XHTMLHandler.java:58 at de.sitewaerts.futuna.ejb.session.GuiServiceBean.getContentsGuiWrapper(GuiSer 
viceBean.java:2212) 
at de.sitewaerts.futuna.ejb.session.GuiServiceBean.getContentsGuiWrapper(GuiSer 
viceBean.java:2091) 
at de.sitewaerts.futuna.ejb.session.GuiServiceBeanEOImpl.getContentsGuiWrapper( 
GuiServiceBeanEOImpl.java:918) at de.sitewaerts.futuna.ejb.session.GuiServiceBeanEOImpl_WLSkel.invoke(GuiServi ceBeanEOImpl_WLSkel.java:1040) at weblogic.rmi.extensions.BasicServerObjectAdapter.invoke(BasicServerObjectAda pter.java:347) at weblogic.rmi.extensions.BasicRequestHandler.handleRequest(BasicRequestHandle r.java:86) at weblogic.rmi.internal.BasicExecuteRequest.execute(BasicExecuteRequest.java:1 5) at weblogic.kernel.ExecuteThread.run(ExecuteThread.java:129) 
de.sitewaerts.futuna.common.XHTMLHandler: 
being our wrapper class de.sitewaerts.futuna.ejb.session.GuiServiceBean: 
being our Session Bean The Application Server is weblogic 5.1. 
I found a mail stated from Feb 2001 discussing the same topic, but no remedy was seemed to be found. 
It said something about switching back to R5 which I did. 
The Library seems to work fine now, but its too buggy for a normal usage. 
What can I do? 
Thanx a lot Stefan Siprell Software-Development 

sitewaerts GmbH Hebelstr. 
15 76133 Karlsruhe Germany Stefan -- From the sources, recompile Tidy.java which should recompile all of the other .java 
files and then build your own .jar. 
This should fix the problem. 
Gary This is not a static linking or compile problem. 
This error is caused by classloader behavior. 
Many frameworks define their own classloaders and can even reload classes as needed. 
This can sometimes cause problems with statics accessed through inner classes. 
The best thing to do is to change JTidy so it no longer does that. 
Russell Gold | "... society is tradition and order russgold@acm.org 
| and reverence, not a series of cheap bargains between selfish interests." 
