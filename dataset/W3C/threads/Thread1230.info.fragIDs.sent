Charset name: iso-8859-14 Charset aliases: &amp;alias iso-ir-199 &amp;alias ISO_8859-14:1998 &amp;alias ISO_8859-14 &amp;alias latin8 &amp;alias iso-celtic &amp;alias l8 
Suitability for use in MIME text: Yes. 
Published specification(s): ISO/IEC 8859-14:1998 Information technology - 8-bit single-byte coded graphic character sets - Part 14: Latin alphabet No. 8 (Celtic) ISO 10646 equivalency table: This is given in the notation and with the definitions of RFC1345. 
&amp;charset ISO-8859-14 
&amp;rem source: ISO 2375 registry 
&amp;alias iso-ir-199 &amp;alias ISO_8859-14:1998 &amp;alias ISO_8859-14 &amp;alias latin8 &amp;alias iso-celtic &amp;alias l8 &amp;g1esc x2d5f &amp;g2esc x2e5f &amp;g3esc x2f5f &amp;bits 8 &amp;code 0 NU SH SX EX ET EQ AK BL BS HT LF VT FF CR SO SI DL D1 D2 D3 D4 NK SY EB CN EM SB EC FS GS RS US SP ! 
" Nb DO % &amp; ' ( ) * + , - . 
/ 0 1 2 3 4 5 6 7 8 9 : ;  =  ? 
At A B C D E F G H I J K L M N O P Q R S T U V W X Y Z ( // ) ' _ '! a b c d e f g h i j k l m n o p q r s t u v w x y z (! !! !) '? DT PA HO BH NH IN NL SA ES HS HJ VS PD PU RI S2 S3 DC P1 P2 TS CC MW SG EG SS GC SC CI ST OC PM AC NS B. b. Pd C. c. D. SE W! Co W' d. Y! -- Rg s. F. f. G. g. M. m. 
PI P. w! p. w' S. y! W: w: Y: A! A' A A? A: AA AE C, E! E' E E: I! I' I I: W N? O! O' O O? O: T. O/ U! U' U U: Y' Y ss a! a' a a? a: aa ae c, e! e' e e: i! i' i i: w n? o! o' o o? o: t. o/ u! u' u u: y' y y: Additional information: Person &amp; email address to contact for further information: 
Keld Simonsen 
RAP Sankt J?rgens All? 8 DK-1615 K?benhavn V Danmark Intended usage: COMMON In areas using Celtic language 
I approve of this specification. 
Note to IANA: &amp;alias is not part of the alias name, and should be removed before entering this registration into tables. 
Quibble to mailing list, seeking guideline text: Intended usage says "COMMON", but "in areas using Celtic language". 
Should this be written as "LIMITED USE", with a comment saying "(common in areas using Celtic languages)"? 
Harald T. Alvestrand Charset reviewer 
Harald Tveit Alvestrand, EDB Maxware, Norway Harald.Alvestrand@edb.maxware.no 
I strongly object to the large number of aliases listed below and propose that every alias request should document established usage. 
This sort of nonsense requires browser etc vendors to build ever- larger tables of rubbish into their products. 
Is it too late to stop this registration? 
Misha Wolf W3C I18N WG Chair 
[This mail was written using voice recognition software] 
Visit our Internet site at http://www.reuters.com 
Any views expressed in this message are those of the individual sender, except where the sender specifically states them to be the views of Reuters Ltd. 
I also object to the aliases. 
Erik 
It is in the style that has been done for all the other iso-8859 series of standards. 
So yu need to do it anyway for everything else. 
Keld 
I realize that the software must support aliases, but that is not a very good reason to create even more aliases that are not even used. 
I have occasionally wondered whether it might even be a good idea to deprecate and eventually remove some of the current aliases. 
It is hard to tell which aliases can be safely removed, but perhaps we could look at the data collected by a Web crawler, a news server and some mailing list archives to determine that. 
And we'd have a phased approach, where aliases are marked "deprecated" for a year or two before removing them from the database. 
How does this sound? 
If volunteers could be found to do the work, would there be any objections? 
Erik 
It is not madness, this is what the aliases section is for, to record known aliases for the charset. 
If you only want to deal with one name, then use the charset name. 
Keld 
That's exactly why now is the time to say: Enough. 
Stop this madness. 
Misha [This mail was written using voice recognition software] 
Visit our Internet site at http://www.reuters.com 
Any views expressed in this message are those of the individual sender, except where the sender specifically states them to be the views of Reuters Ltd. 
there are good reasons for each of the aliases. 
The alisases records names that are used in some networking environments, such as ISO communications, X, POSIX and others. 
The charsets are used in may other places that just HTML and XML. 
The words I get from people is: never delete entries in registries. 
And these voices are very firm. 
Keld 
The IANA charset registry is for Internet protocols, such as MIME, HTTP, HTML and XML. 
It is not appropriate to contaminate the IANA registry with names that are used in ISO communications, X, POSIX and others. 
The HTML font tag is deprecated. 
There are better ways to do that now, and we are trying to get the Net to move in that direction. 
On the other hand, Unicode and 10646 do not remove or move characters once they have been assigned (with the unfortunate exception of the Korean mess). 
I prefer to see the charset aliases as being more similar to the former (HTML's font ) than the latter, since there are alternatives (i.e. the preferred or canonical name). 
I still think we should at least consider cleaning up the IANA charset registry. 
Erik 
I think this goes way too far. 
We have no way of knowing which of the aliases are in use now. 
Attempts to scan some tiny subset of transactions in a particular protocol are entirely futile, as usage of odd things often tends to be concentrated in small groups of systems. 
We can deprecate the use of some names, but like the font tag, the existance of these names needs to be documented, not deleted. 
OK, instead of deleting the aliases, perhaps we could mark them "deprecated" (or just make sure that at least one of the names in each set is marked "preferred", as some are now). 
Erik 
I agree. 
Just because we made the mistake of registering such things in the past doesn't mean we should continue to do so. 
I think this goes way too far. 
We have no way of knowing which of the aliases are in use now. 
Attempts to scan some tiny subset of transactions in a particular protocol are entirely futile, as usage of odd things often tends to be concentrated in small groups of systems. 
We can deprecate the use of some names, but like the font tag, the existance of these names needs to be documented, not deleted. 
(I note in passing that any browser that doesn't 
support font isn't terribly useful in practice.) 
This has already been done. 
Expect to see the revision available in the very near future. 
Ned 
I can agree to marking stuff as depreciated, or preferred. 
Anyway under some concensus rules. 
keld 
Some ISO protocols are also internet protocols. 
You may in IETF diverge from the charset names used in ISO for the same concepts and entities, but by doing that you really miss alignment with ISO naming of charsets. 
Keld 
If there is a single name for a particular encoding in an ISO standard, then the person who registers that charset with IANA should use that name (and only that name). 
If there are 2 or more names for the charset in ISO standards or other places, then one of them should be chosen, and the others should go into the "Source:" field in the IANA registry or perhaps just in the document that explains that charset. 
I.e. *not* in the IANA charset aliases. 
Erik 
Hi Keld, 
protocols have normative references to each other. 
And several W3C specs have normative references to the IANA Charset Registry. 
Planned incoherence is short-sighted. 
Comments showing the usual domain of usage of an alias would be a good improvement. 
Cheers, - Ira McDonald, consulting architect at Xerox and Sharp High North Inc 
Some ISO protocols are also internet protocols. 
You may in IETF diverge from the charset names used in ISO for the same concepts and entities, but by doing that you really miss alignment with ISO naming of charsets. 
Keld 
Take a look at the revised registry when it comes out -- I think you will like it! 
Ned 
Keld, I don't see any reason to make the problem worse, just because past practices were bad. 
It is not just a problem that it increases the size of tables, it is a problem for people diagnosing problems to run into an infrequently used alias to have to go off and figure out what this unusual code page represents. 
What is the advantage of having more than one name for it? 
tex 
Tex Texin Director, International Products Progress Software Corp. +1-781-280-4271 Bedford, MA 01730 USA texin@bedford.progress.com 
Award Progress Globalization Program Spanish Proverb:Don't speak unless you can improve on the silence. 
Tex's Proverb:Don't email unless you can improve on the screen saver. 
Please cite an example of an ITU protocol that: (1) Uses a textual strings to identify charsets. 
(2) Specifically uses one of the new aliases in question. 
(3) Forms some part of an IETF protocol now, or is planned to in the future. 
If such a protocol exists, then there's a legitimate case for registering these aliases. 
If not... Charset names aren't simply names -- they are strings intended for use on the wire. 
Noting all sorts of strings used to refer to a given charset in the registration information is fine, but such names should not be aliases unless there's some chance of them appearing on our wires. 
Ned 
It is not a problem, it is a feature:-) The case is that mime names are used many places also beyound the Internet realm. 
The alisas I have listed is to specify that the names used there are realy the same as this IANA registration, so that if X is talking about ISO_8859-14 then it is the same as iso-8859-14 and also what UNIX people use for a charmap under the name of iso8859-14. 
The ISO character set prople know it by its registration number in the 2375 registry so that is the iso-ir name. 
The idea with the aliasing was to record all the information on the charset in one place, including all the names it is customary known as. 
This facilitatets interoperation between different applications on a system, including internet aware applications. 
That was the original plan when I wrote rfc 1345 and I think in the greater perspective this is still valid. 
I don't think this complicates life, I just have my computer organize this for me, and whether there are 100 charset names or 500 does not matter. 
And it helps users avoid interoperability problems. 
Keld 
