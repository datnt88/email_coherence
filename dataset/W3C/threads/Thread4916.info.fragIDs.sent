/ Sandy Gao sandygao@ca.ibm.com was heard to say: 
2.1 Accessing unparsed entities In section 6.1 Document nodes have a [unparsed-entities] property, which is a sequence of entities. 
They also have accessors "dm:unparsed-entity-system-id" and "dm:unparsed-entity-public-id". 
So there are ways to query the system/public id of a given entity. 
Wouldn't it be useful to have an accessor that exposes all entities within a document node? 
Propose to introduce: dm:unparsed-entities($node as document()) as xs:string* and optionally: dm:unparsed-entity-system-ids($node as document()) as xs:string* dm:unparsed-entity-public-ids($node as document()) as xs:string* (If the above 2 are introduced, then the processor must guarantee the order of the entities is the same for all 3 accessors.) 
Thank you for your comment. 
The WGs have discussed this matter and concluded that the existing accessors are adequate for the unparsed entity use cases. 
The WGs have no plans to add any additional accessors. 
Be seeing you, norm Norman.Walsh@Sun.COM / XML Standards Architect / Sun Microsystems, Inc. NOTICE: This email message is for the sole use of the intended recipient(s) and may contain confidential and privileged information. 
Any unauthorized review, use, disclosure or distribution is prohibited. 
If you are not the intended recipient, please contact the sender by 
/ "C. 
M. Sperberg-McQueen" cmsmcq@acm.org was heard to say: 
1.4. 
The implications of [validity] != valid Section 3.6 para 2 reads in part: "The only information that can be inferred from an invalid or not known validity value is that the information item is well-formed." 
This is not true in the general case: the values of the properties [validity] and [validation attempted] interact, so that some inferences beyond well-formedness can be made. 
(If [validity] is 'notKnown', for example, we can infer without examining the PSVI that [validation attempted] is not 'full'. 
If for some node N [validity] is 'invalid', we can infer that declarations are available for at least some element or attribute information items in the subtree rooted in N.) The data model doesn't have to be interested in those inferences, but it is simply incorrect to say that they don't exist. 
On the whole, we believe that that the data model misses an opportunity by failing to exploit the information contained in the [validity] and [validation attempted] properties more fully. 
The offending text "The only information ... is well-formed" has been redrafted in the following way in response to your comment. 
Please let us know if this is satisfactory. 
In the data model, precise schema type information is exposed for Element and Attribute Nodes that are quote emph valid /emph /quote . 
Nodes that are not quote emph valid /emph /quote are treated as if they were simply well-formed XML and only very general schema type information is associated with them. 
Be seeing you, norm Norman.Walsh@Sun.COM / XML Standards Architect / Sun Microsystems, Inc. NOTICE: This email message is for the sole use of the intended recipient(s) and may contain confidential and privileged information. 
Any unauthorized review, use, disclosure or distribution is prohibited. 
If you are not the intended recipient, please contact the sender by 
This will go onto the WG agenda the next time we deal with inter-WG issues. 
Speaking for myself, I think the change you show is a good resolution of the issue (even though you didn't take up the challenge to exploit the PSVI more fully). 
Michael 
