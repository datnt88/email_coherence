I have some questions on the XML-Signature core syntax and processing document 
thanks Frederick 
I'll answer what I can, but I think the other authors could address much of this better than me. 
I have some questions about signed XML, specifically regarding Draft 07-December-1999, 1. 
If I wish to not include the OBJECT elements themselves in the 
signature for 
the transaction, is the example xpath transform below correct? 
If so, what does the draft mean in section 5.6.3 (Xpath filtering) that the root should be included so the result is well-formed? 
I thought I only want to sign the contents of the referenced object element. 
Is there an example available? 
In your example, I believe your XPath would grab txn xmlns=... which is the root of that object. 
You could also give the txn element type an ID and reference that directly without using the XPath. 
2. For KeyInfo, KeyData, Is it correct to assume a CERTIFICATE element for each certificate in the signing party certificate chain? 
Is it correct to specify the encoding for each as an attribute of the certificate element? 
David, Barbara, others? 
I am assuming that each certificate is base64 encoded (encoding type) of the DER encoding. 
Yes. 
3. I assume that X.509 oids are not used since they are implicit in an XML element. 
Thus for example, if the signer sends device specific information as part of signing, the OID for this information would be implicit. 
Thus if in ASN.1 it is AUTHINFO and an OID, the tag SignerDeviceInfo would be enough - if the recipient knows to map this to the OID. 
(I guess I'm asking and assuming OID mapping is application dependent). 
David, Barbara, others? 
4. In section 3.4, KeyInfo, I note that the spec allows including a CRL, with element X509CRL. 
Can we also define including signed OCSP responses, with an X509OCSP element? 
This would allow transmitted the status of the certs with a transaction in an interoperable manner. 
David, Barbara, others? 
5. What is the relationship between SignatureAttribute object types and SignatureProperties elements, and when is either necessary? 
How is the optional type in an ObjectReference element used? 
(section 3.3.3). 
Does it matter if I have it or not? 
It seems not to matter. 
(e.g. Object ID="timestamp" type="&amp;dsig;/SignatureAttributes" vs Object ID="txn" 
I don't think it matters nor is necessary, but if an application wants to use it, they could as you have. 
David? 
Should all signature attribute objects be within SignatureProperties elements? 
I'm a little confused because it looks like properties of the signature (e.g. signing time) belong in SignatureProperties, but that is not how example 8.0 works. 
Is there a guideline? 
You are correct there is an conceptual inconsistency in the example. 
SignatureProperties should only be used for things about the signature, but we don't specify that all things about a signature must appear in SignatureProperties. 
I will tweak that example to use them. 
6. Likewise in the ObjectReference section 3.3.3, 
I'm not clear what a "parent document" is when using the null URL. 
Does this mean the root of the current document or something else? 
Yes, the root of the current document, I will make sure we are consistent. 
7. The difference between SignedInfo, Manifest and Package is (to restate) SignedInfo - each digest must be validated Manifest - each digest may be validated Package - each referenced object should be the same after transforms are applied (e.g. this is like mirrors for the reference info) 
Yes. 
A package may be used as a Object reference within a SignedInfo or Manifest, but then only the digest of the manifest (and not the content itself is signed. 
Yes. 
8. I might suggest adding in the security section (section 7), that in the X.509 case, the security also depends on the validity of the signers certificate chain, and that if any private key has been compromised the document signature is not dependable, so signature validation may only be the first step in a process to reduce the risk of depending on the 
document. 
I hope this is clear given the distinction in the definitions between signature, core, and application validation in the latest draft. 
9. Section 1.3 refers to the XML namespace xmldsig-core, but the other namespaces (e.g. SHA1) include dsig-core. 
Are they intentionally different? 
Well, given they have the same prefix, they are supposed to be seen as part of the larger namespace. 
Given that XML-ns don't ascribe any semantics to the URI, this is our own convention... 
One could use fragment identifiers like RDF: .../xmldsig-core#sha-1 but I think they ran into some problems with that. 
Would you suggest something different? 
Joseph Reagle Jr. Policy Analyst mailto:reagle@w3.org 
XML-Signature Co-Chair http://www.w3.org/People/Reagle/ 
Frederick: Clarifications on X.509 certificates included as KeyInfo: 
2. For KeyInfo, KeyData, Is it correct to assume a CERTIFICATE element for each certificate in the signing party certificate chain? 
Is it correct to specify the encoding for each as an attribute of the certificate element? 
David, Barbara, others? 
(Barb) X509Data contains an identifier for the key or cert used to validate 
a signature. 
These can be a certificate, a bunch of certificates or identifiers like IssuerSerial, subject name, etc. 
We do not make any assumptions about what collections of X509Data might be. 
3. I assume that X.509 oids are not used since they are implicit in an XML element. 
Thus for example, if the signer sends device specific information as part of signing, the OID for this information would be implicit. 
Thus if in ASN.1 it is AUTHINFO and an OID, the tag SignerDeviceInfo would be enough - if the recipient knows to map this to the OID. 
(I guess I'm asking and assuming OID mapping is application dependent). 
David, Barbara, others? 
(Barb) Your statement is correct - sort of. 
OIDs in ASN.1 define a de-codable structure that in turn, defines processing rules/semantics. 
In XML, you don't need an OID as a parse hint for the bytes that follow it because you can parse the XML directly. 
The important point is that the processing/semantic meaning for an XMLDSIG doc can change on the fly. 
4. In section 3.4, KeyInfo, I note that the spec allows including a CRL, with element X509CRL. 
Can we also define including signed OCSP responses, with an X509OCSP element? 
This would allow transmitted the status of the certs with a transaction in an interoperable manner. 
David, Barbara, others? 
(Barb) X509OCSP: This isn't a big deal to add, but it has the potential to 
open a can of snakes that we've carefully tried to avoid, "freshness of 
certificates." 
We don't require certificates in XML signatures. 
They're just one form of evidence that MAY be provided by a signer to a verifier. 
Attaching an OCSP response could be considered additional evidence. 
What we want to avoid tho is our making any implied recommendations about signers having to get and attach OCSP responses (or certs, for that matter) to their signed documents. 
An OCSP response in particular seems pretty silly since if a verifier wants freshness information about a certificate, he can get his own OCSP response. 
Barbara Fox Microsoft 
4. In section 3.4, KeyInfo, I note that the spec allows including a CRL, with element X509CRL. 
Can we also define including signed OCSP responses, with an X509OCSP element? 
This would allow transmitted the status of the certs with a transaction in an interoperable manner. 
open a 
certificates." 
We 
don't require certificates in XML signatures. 
They're just one form of 
evidence 
that MAY be provided by a signer to a verifier. 
Attaching an OCSP response 
could 
be considered additional evidence. 
What we want to avoid tho is our making 
any 
implied recommendations about signers having to get and attach OCSP 
responses (or 
certs, for that matter) to their signed documents. 
An OCSP response in 
particular 
seems pretty silly since if a verifier wants freshness information about a certificate, he can get his own OCSP response. 
Actually I would avoid the construct for a quite different reason. 
OCSP responses are mainly constructed on an ad-hoc basis in response to an actual request. 
I don't see particular value in embedding ASN.1 structures of that type in XML documents. 
The OCSP server should have the manners to deliver the data in XML syntax. 
So while I think there is a value in incorporating an OCSP token in a sig package I don't think we want to assume that it will be PKIX OCSPv1 in ASN1 format. 
In fact one of the original reasons for supporting a variant response syntax in OCSP was to allow an XML reply. 
In fact I have recently been rewritting OCSP-X to exclude the 'controvertial' Authorization functionality and rolled that into an XML based OCSP draft for experimental track just so it does not get patented by some louse. 
[Don't expect the drafts till I have spare time to finish 'em though] Phill 
(snip) David, Barbara, others? 
(Barb) X509OCSP: This isn't a big deal to add, but it has the potential to open a can of snakes that we've carefully tried to avoid, "freshness of certificates." 
We don't require certificates in XML signatures. 
They're just one form of evidence that MAY be provided by a signer to a verifier. 
Attaching an OCSP response could be considered additional evidence. 
What we want to avoid tho is our making any implied recommendations about signers having to get and attach OCSP responses (or certs, for that matter) to their signed documents. 
An OCSP response in particular seems pretty silly since if a verifier wants freshness information about a certificate, he can get his own OCSP response. 
[Tom Gindin] For non-repudiation, it can be important to preserve evidence that the signer's certificate was valid at the time of signature, and an OCSP or SCVP response is perfectly reasonable as a way of preserving evidence that it was valid at the signing time. 
Is there any other reason to put a CRL in the KeyInfo, since the verifier can get it almost as easily as he can get an OCSP response? 
Resent-Sender: w3c-ietf-xmldsig-request@w3.org 
It seems to me that this discussion gets beyond of a pure signature validation. 
It's sliding into a discusion about how to ensure the validity of the document for a long time. 
In principle this seems to me a good thing. 
At least, it should be made clear where one should stop: - A strictly minimal behaviour is not to treat any assertions/certificats at all. 
- A more advanced version would be to allow to add all kinds of "certificates" to be added as unsigned elements and leave the interpretation of this up to a verifying entity. 
- Another step is to explicitely provide a form to include such assertions/certificates also in the signed part of a document, thus to allow verifying applications a homogenous, and independant way of finding these assertions (including recursively signed document). 
- Then another last step could be to specify some procedures like transforming rules that take this 'security' structure of the document as input to verify whether they follow some rules. 
Example: A document needs to be signed at least by two directors of a company, they need to include identity certificates in the signature and an assertion of a local chamber of commerce that the certs are valid and could be used in some context, and some assertion of a legal deposit service that the content had been shown and archived by some well known notary at some time, and so on. 
Just talking about id certificates, thus about CRLs, or OCSP is just one dimension to get evidences about the validity of a document. 
Do you verify the signatures on a 200 year old consitution in order to determine its validity? 
How do you determine the validity of some 1000 year old document? 
How to you determine the validity of the contract signed by your grand-parents for the house you are living in? 
Peter Sylvester 
Tom: I don't mind pulling CRL out, but it seems like an ASN.1 structure that some people might want if they choose to use certificates. 
Responses to certificate revocation status requests, as Phill points out, can be XML formatted messages. 
--Barbara Fox John Boyer; David Solo (snip) David, Barbara, others? 
(Barb) X509OCSP: This isn't a big deal to add, but it has the potential to open a can of snakes that we've carefully tried to avoid, "freshness of certificates." 
We don't require certificates in XML signatures. 
They're just one form of evidence that MAY be provided by a signer to a verifier. 
Attaching an OCSP response could be considered additional evidence. 
What we want to avoid tho is our making any implied recommendations about signers having to get and attach OCSP responses (or certs, for that matter) to their signed documents. 
An OCSP response in particular seems pretty silly since if a verifier wants freshness information about a certificate, he can get his own OCSP response. 
[Tom Gindin] For non-repudiation, it can be important to preserve evidence that the signer's certificate was valid at the time of signature, and an OCSP or SCVP response is perfectly reasonable as a way of preserving evidence that it was valid at the signing time. 
Is there any other reason to put a CRL in the KeyInfo, since the verifier can get it almost as easily as he can get an OCSP response? 
"Barb Fox (Exchange)" bfox@Exchange.Microsoft.com on 12/21/99 01:47:05 PM Subject: RE: xmldsig questions Tom: I don't mind pulling CRL out, but it seems like an ASN.1 structure that some people might want if they choose to use certificates. 
Responses to certificate revocation status requests, as Phill points out, can be XML formatted messages. 
--Barbara Fox [Tom Gindin] I'm not arguing for CRL to come out, since I think it's useful for non-repudiation. 
What I was primarily responding to was your comment that putting an OCSP response in was "pretty silly", because if the document is being prepared for non-repudiation use having a signing-time OCSP response serves the same purpose as having a signing-time CRL. 
If your recommendation (and Phill's too) is that status responses placed in a document be XML formatted, my only problem with that is that excluding the currently deployed format for such responses might be premature. 
Phill, do you have a syntax for the XML OCSP responses? 
John Boyer; David Solo (snip) David, Barbara, others? 
(Barb) X509OCSP: This isn't a big deal to add, but it has the potential to open a can of snakes that we've carefully tried to avoid, "freshness of certificates." 
We don't require certificates in XML signatures. 
They're just one form of evidence that MAY be provided by a signer to a verifier. 
Attaching an OCSP response could be considered additional evidence. 
What we want to avoid tho is our making any implied recommendations about signers having to get and attach OCSP responses (or certs, for that matter) to their signed documents. 
An OCSP response in particular seems pretty silly since if a verifier wants freshness information about a certificate, he can get his own OCSP response. 
[Tom Gindin] For non-repudiation, it can be important to preserve evidence that the signer's certificate was valid at the time of signature, and an OCSP or SCVP response is perfectly reasonable as a way of preserving evidence that it was valid at the signing time. 
Is there any other reason to put a CRL in the KeyInfo, since the verifier can get it almost as easily as he can get an OCSP response? 
I was thinking that an OCSP status response would require a special element to indicate what it is, similarly to CRLs, just so there is no need to agree in advance on an element. 
Depending on the business model, it can be valuable to pass a signed OCSP response with a transaction so the receiver does not need to perform a check. 
I gather that a subsequent version of OCSP *may* use XML, or that there is an independent effort to do this, but the current RFC 2560 is not using XML. 
What I am hearing is that we could just treat this as any other kind of application specific data. 
What I am suggesting is that by defining the element (tag) we may make it easier to support applications which want to include an OCSP response in a transaction, since the element will be standard. 
I do not want to sidetrack the effort, but since we have X509CRL defined in X509Data, I thought X509OCSP would be logical, since lots of projects use OCSP instead of CRLs. 
thanks Frederick 
