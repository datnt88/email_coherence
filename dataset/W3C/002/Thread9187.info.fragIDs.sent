Now that we have got a partition of the problem space, I would like to see us moving forward on the issues we have in the lower layers. 
A core of our work is going to be a simple representation of an RDF graph. 
We need a simple language for unambiguously expressing an RDF graph. 
We can then define the meaning of other RDF languages, such as RDF/XML as a transform to this simple language. 
We have such a language already. 
It is n-triple. 
We also need to define the semantics of RDF, and since we already have n-triple, it seems simpler, less work and clearer to define the semantics of n-triple rather than use something different. 
n-triple was conceived for the purpose of writing test cases. 
As such, I think it represents the intuitions of at least some of us, of what needs to be represented in the lowest layers of RDF. 
However, we haven't up till now considered it as the basis for the core definition of RDF. 
We have issues with it that remain to be resolved. 
These are: I would therefore like to activate these issues, and to reflect the decisions we make in update to the specification of n-triple. 
I'd like some volunteers to own these. 
Graham, you have made a proposal for an absract syntax and semantics. 
I am assuming that you feel pretty neutral about the actual concrete form of the syntax and that n-triple can represent everything you need at the syntactic level. 
If that is so, then we can focus on the question of reification on the semantics rather than the syntax. 
Yesterday we also activated I think this is more of a semantic question, but it does affect the syntax of n-triple. 
I'd also like a volunteer to own this one. 
Having got the syntax of n-triple agreed, we can then move swiftly on to address its semantics. 
I remain hopeful that we can resolve both the syntax and semantics questions by the end of the face to face. 
Brian 
I'll volunteer to own this. 
Having reviewed the issue, the first question I have to ask is this: 
In the current RDF specification (that we are chartered to clarify), is this a purely syntactic issue, or does the "model" also allow for anonymous resources? 
I'll plan to prepare a more comprehensive framework for discussion. 
#g Graham Klyne Baltimore Technologies Strategic Research Content Security Group 
Yes, with one proviso: 
Some semantics depend on an interpretation of more than one triple used in concert. 
Following the style of attaching interpretations to syntax productions, it may be necessary use a "model syntax" that is more complex than the minimal syntax needed to describe N-triple. 
Otherwise, I fully agree that everything can be based on a concrete, parseable representation that we call N-triple (an important property of which is that, modulo trivial matters like statement ordering, there is only one way to represent any given RDF graph). 
#g Graham Klyne Baltimore Technologies Strategic Research Content Security Group 
You beat me to it. 
If "model" means the set-of-triples abstract graph syntax, the answer is surely yes, in the m&amp;s. 
If it means 'domain of semantic interpretation', the concept of 'anonymous' isnt really defined, but there would be no harm in letting nameless things be in the domain; that would be the usual logical convention. 
(If you insist not, so that everything has a name, then there is an implicit closed-world assumption on any vocabulary, which would make RDF reasoning sharply nonmonotonic, which is probably a mistake.) Pat IHMC(850)434 8903 home 40 South Alcaniz St.(850)202 4416 office phayes@ai.uwf.edu 
Graham, I have a strong worry about doing this in the revised standard. 
"used in concert" is just a way to say that there is a syntactic construction which is not in fact explicitly encoded in RDF content. 
It would mean that the criteria for wellformedness were not explicitly represented in the syntax, unless we introduced some new syntax (not just some new syntactic classes) to actually encode the ranges of these 'larger' structures. 
In effect, it allows for arbitrarily complex syntactic specifications to be smuggled into the RDF model invisibly. 
To call the n-triple encoding 'parsable' is misleading, if some of those 'parsings' are not in fact in conformity to the syntactic classes to which the semantics is attached. 
Look, here is a universal parsable syntax for all of the world's languages: expression ::= unicode-char * but we wouldnt normally say that this is parsable in any useful sense. 
Pat 
IHMC(850)434 8903 home 40 South Alcaniz St.(850)202 4416 office phayes@ai.uwf.edu 
If we can define the desired semantics based on the simple N-triple form, I have no objection. 
#g 
Graham Klyne Baltimore Technologies Strategic Research Content Security Group 
I think that's half the battle! 
My vote is for syntactic. 
"Aaron Swartz" | ...schoolyard subversion... http://www.aaronsw.com/ 
| because school makes kids dumb 
My understanding of 'anonymous resource' is that an RDF/XML file mentions, but does not name by URI, some Web resource. 
I'm at a loss as to how this could be merely XML-syntactic: if the information isn't in the XML file, it isn't going to be accessible to parsers and consequently any RDF "model" (aka graph... whatever...) generated by the RDF parser is also going to mention but not name those same RDF resources. 
Dan 
I don't think that adding a 'genid' to the model can be said to add any information that is not present in the XML. 
(The 'genid' is presumed to be chosen so that it cannot clash with any other identifier used for any other purpose.) So, in this sense, an anonymous resource might be claimed to be XML-syntactic: it is the responsibility of the RDF/XML parser to allocate a unique identifier for any resource that is not explicitly named in the XML. 
I would say that any issue that is dealt with entirely by a parser is, ipso facto, a "merely syntactic" issue. 
(I'm not saying here that this must be the resolution, just trying to point out why I think it might be a resolution.) #g Graham Klyne Baltimore Technologies Strategic Research Content Security Group 
