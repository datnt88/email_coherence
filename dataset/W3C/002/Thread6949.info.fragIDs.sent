Is it valid to use a fragment identifier with a URN? 
The definition of a fragment identifier in RFC2396 suggests that they are only relevant to URLs: When a URI reference is used to perform a retrieval action on the identified resource, the optional fragment identifier, separated from the URI by a crosshatch ("#") character, consists of additional reference information to be interpreted by the user agent after the retrieval action has been successfully completed. 
This specifically defines a fragment identifier to be information related to a retrieval action, which implies that it makes no sense to use a fragment identifier with a URI scheme intended to denote names with no implied retrieval mechanism. 
However, I have certainly seen them used with URNs. 
Has this issue been clarified in any documents subsequent to RFC2396? 
- Stephen 
Stephen Cranefield Department of Information Science University of Otago Dunedin, New Zealand 
Note, however, that your suggested change would restrict the applicability of a URI-reference beyond what the specification currently requires, to the point where it conflicts with the Web. 
You are suggesting that an application-specific requirement be placed on an existing protocol element in order to satisfy some restriction that somebody wants to use within RDF. 
I don't see any reason why we should make that change. 
Actually, I'm not proposing making a change, just finding out how compatible the IETF notion of a URI is with the use of a URI scheme to represent abstract names with no retrieval semantics. 
The answer 
seems to be that it's not compatible. 
For the record though, I don't see how such a change would "conflict with the Web". 
- Stephen 
Note, however, that your suggested change would restrict the applicability of a URI-reference beyond what the specification currently requires, to the point where it conflicts with the Web.? 
You are suggesting that an application-specific requirement be placed on an existing protocol element in order to satisfy some restriction that somebody wants to use within RDF. 
I don't see any reason why we should make that change. 
... with no associated Resources? 
What does the 'opaquelocktoken' scheme have to tell us here? 
Is this compatible with the IETF doctrine on URIs? 
Can someone construct a scenario in which a #fragment appended to one of these would ever see a context of use? 
Al 
