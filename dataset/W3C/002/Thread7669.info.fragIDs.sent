Section 11 of the BIND specification defines the dav:bindings property. 
What is not clear to me from the text in this section is if it is possible to have the dav:bindings property accessible through one binding but not another? 
One could imagine that two servers share access to the same disk drive and hence are able to map names to the same "resource" (as they understand the term). 
In order to keep things consistent both servers agree to record all the names they use to refer to the same resource. 
However only one of the servers actually supports the BIND method and the dav:bindings property and the other doesn't. 
I can still do a GET on each server and the result will be from the same resource but only one of the servers will be able to serve up the dav:bindings property. 
Unfortunately the language in section 11 speaks of the dav:bindings property being on a resource so the presumption is that if I can get the dav:bindings property through one binding then I MUST be able to get it through the other. 
I believe this is too strict a requirement. 
As such I move that the language in section 11 be clarified so as to specify that the dav:bindings property may not necessarily be available through all bindings on the resource. 
This seems right to me. 
It also points out that till now we've been thinking that capabilities vary by resource, so that responses to OPTIONS vary by resource. 
When we consider situations where there are multiple bindings to the same resource, it turns out that capabilities really vary by URI, and responses to OPTIONS with different request-URI but the same resource may be different. 
So we need also to take another look at the wording of section 15 Capability Discovery, as well as 9 (which you discuss in another note). 
--Judy Section 11 of the BIND specification defines the dav:bindings property. 
What is not clear to me from the text in this section is if it is possible to have the dav:bindings property accessible through one binding but not another? 
One could imagine that two servers share access to the same disk drive and hence are able to map names to the same "resource" (as they understand the term). 
In order to keep things consistent both servers agree to record all the names they use to refer to the same resource. 
However only one of the servers actually supports the BIND method and the dav:bindings property and the other doesn't. 
I can still do a GET on each server and the result will be from the same resource but only one of the servers will be able to serve up the dav:bindings property. 
Unfortunately the language in section 11 speaks of the dav:bindings property being on a resource so the presumption is that if I can get the dav:bindings property through one binding then I MUST be able to get it through the other. 
I believe this is too strict a requirement. 
As such I move that the language in section 11 be clarified so as to specify that the dav:bindings property may not necessarily be available through all bindings on the resource. 
One possiblity is to say that "all dead properties of a resource must be available from all bindings to that resource". 
This acknowledges that the behavior of live properties can be "special", including acting differently at different bindings to that resource. 
From: Yaron Goland yarong@Exchange.Microsoft.com 
Section 11 of the BIND specification defines the dav:bindings property. 
What is not clear to me from the text in this section is if it is possible to have the dav:bindings property accessible through one binding but not another? 
One could imagine that two servers share access to the same disk drive and hence are able to map names to the same "resource" (as they understand the term). 
In order to keep things consistent both servers agree to record all the names they use to refer to the same resource. 
However only one of the servers actually supports the BIND method and the dav:bindings property and the other doesn't. 
I can still do a GET on each server and the result will be from the same resource but only one of the servers will be able to serve up the dav:bindings property. 
Unfortunately the language in section 11 speaks of the dav:bindings property being on a resource so the presumption is that if I can get the dav:bindings property through one binding then I MUST be able to get it through the other. 
I believe this is too strict a requirement. 
As such I move that the language in section 11 be clarified so as to specify that the dav:bindings property may not necessarily be available through all bindings on the resource. 
One of the big mistakes WebDAV, in my opinion, made was differentiating between live and dead properties. 
I think this is a meaningless differentiation. 
For example, one can take any property, declare it "alive" and instantly get around the requirement that dead properties be available everywhere. 
"Maul, I have you now, that is a dead property and therefore must be available through all bindings!" "I see you are weak in the ways of WebDAV Qui-Gon, my server is enhanced so that all properties are treated as alive, therefore I do not have to make them all available through all bindings!" "But Maul, No! Ahhhhhhhhhhhhhhhhhhhhh...." (or whatever sound one makes when a light saber is thrust through one's chest) Yaron 
