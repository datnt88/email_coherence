Incidentally, we don't need xsd:[Ii]nteger rdf:type rdf:Datatype . 
since this also seems to be perfectly reasonable: xsd:integer rdfs:subClassOf rdf:Literal . 
jan jan grant, ILRT, University of Bristol. 
http://www.ilrt.bris.ac.uk/ HP-unix: Open Sauce product, available in 57 distributions. 
Errr, and just what does it mean for xsd:integer to be a subclass of rdf:Literal? 
Does that mean that the members of the value space of xsd:integer are 
literals? 
I think not. 
The class extension of a datatype class is its value space. 
Unless you wish to define rdf:Literal to be the present definition of rdfs:Datatype, I don't see the above subClassOf relation as valid. 
Patrick 
Yes. 
OK. 
jan grant, ILRT, University of Bristol. 
http://www.ilrt.bris.ac.uk/ Generalisation is never appropriate. 
From your last message, it seems my understanding of syntactic datatyping is similar to yours. 
In that framework, I'm not convinced that *either* of the following relations are needed. 
I.e. 
I'm not convinced we need to say anything about the rdf:type or rdf:Class of xsd:integer at this time, since it appears (needs to appear) only as part of a purely syntactic construct. 
Of course, if we're targeting more than purely syntactic datatyping, there's another story... #g 
Graham Klyne 
