Just wondering how to handle the insertion of PHP variables or scripts that occur within a link. 
For example: a href="http://digitalhit.master.com/texis/master/search/mysite.html?q= 
?php 
echo $celebsearch; ? 
" Which grabs the variable celebsearch and inserts it into the link at the server so all the browser would get is: 
a href="http://digitalhit.master.com/texis/master/search/mysite.html?q=Bruce+W 
illis" Tidy turns that into: a href="http://digitalhit.master.com/texis/master/search/mysite.html?q=?ph p echo $celebsearch;  " Which is proper form if the  and  ever made it to the browser, but as PHP is server-side they never do. 
Is there anything I can do to stop tidy touching the ?php and ? 
within a link? 
It leaves them alone properly outside a link. 
Thanks. 
Ian Evans Chairman &amp; Executive Producer Digital Hit Entertainment 
Don't do that then! 
Seriously, don't use php inside a tag, but replace the whole tag: ?php 
echo ' a href="http://digitalhit.master.com/texis/master/search/' 
. 'mysite.html?q=$celebsearch" 
'; ? 
Of course this needs the end tag, and possibly the contents of the element, to also be generated by php, or tidy will complain about mismatched tags. 
hope this helps, Daniel Biddle deltab@osian.net 
. 'mysite.html?q=$celebsearch" 
'; ? 
Duh. 
I should've thought of that. 
That's the benefit of lists. 
You get a fresh set of eyes while you go and refuel with coffee. 
Thanks. 
This way won't work (single quote delimited strings are not parsed for variable references), correctly it would have to be: ?PHP print ' a href="/texis/master/search/mysite.html?q=' . 
$celebsearch . 
'" '; ? 
or better even (assuming that $celebsearch is not yet URLencoded): ?PHP print ' a href="/texis/master/search/mysite.html?q=' . 
urlencode($celebsearch) . 
'" '; ? 
Another alternative would be to pre-process the PHP3 file (before sending it to tidy) and replacing all occurences of ?PHP ... ? 
with a placeholder string, storing the content of the PHP tags in an array and then post-processing tidy's output and inserting back the PHP codes. 
In Perl, I would do that like this: ## pre-process: # replace all ?PHP ... ? 
blocks with a placeholder string $i = 0; while ($filecontent =~ m/( \?PHP.*?\? )/gsi) { $PHPStack[$i] = defined($1) ? 
$1 : ""; $filecontent =~ s/ \?PHP.*?\? /PHPStackPlaceHolder\[$i\]/si; $i++; ## post-process: # replace all placeholder strings with the right ?PHP ... ? 
blocks for ($i = 0; $i = scalar @PHPStack; $i++) { $tidyOutput =~ s/PHPStackPlaceHolder\[$i\]/$PHPStack[$i]/s; 
Sebastian Lange Maybe the first chat site that validates as HTML 4.0 even though user input may contain HTML codes. 
Courtesy to Dave Raggett's HTML Tidy: Tidy your documents ONLINE: 
