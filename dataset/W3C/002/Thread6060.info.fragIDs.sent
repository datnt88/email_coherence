What happens if a community designs a choreography put it into productions having generated all the necessary Web Services skeletons and then later on someone changes their Web Service (maybe changing a timeout from 2 to 3 minutes) and their CDL file? 
The community as a whole are not updated nor are they updateable automatically. 
Is this a community process issue? 
Could we use any form of bi-simulation between the newly updated choreography and the master choreography to determine that they are now different and flag it as an error through a vendor specific bi-simulation tool? 
Cheers Steve T 
Is that a question about versionning or about runtime validation based on CDL retreival of all participating sub-choreographies? 
It may be possible to describe relationship between v1 and v2 of a service (if you think of inheritance in the OO-World). 
However, expressing all the small differences that may not matter for the semantic of the service, but may have impact the way the choreography is built is far beyond what is possible. 
So in that case I would say that the only viable option is to flag it as an error and restart the building process of the choreography. 
It may imply running through another automatic composition/validation phase or involve human to actually verify that the change is not causing any trouble, but solving that issue in the general case is just not possible. 
Also I would note that there is no consensus yet on the way to express versionning of a service in WSDL... Yves Lafon - W3C "Baroula que barouleras, au ti?u toujou t'entourneras." 
Steve There is, IMO, no simple answer to this problem. 
Think about the following question ... Q. 
In a community, is it allowable for different participants to have web services that behave "slightly" differently, e.g. on timeouts. 
A. I think the answer to this is a definite yes as a business might participate in multiple communities and want to use the same service they've built, e.g. a sales order acceptance service, in all those communities where each community has defined their own variation of a choreography. 
What I think this means is that: 1. 
The services that are the "endpoints" or "channels" for a choreography will have different service definitions depending on the implementation. 
2. You *have* to bind together separate definitions of the choreography (i.e. the sequence of exchanging messages), and the definitions of the services (i.e. the WSDL). 
Which is why we have abstract, portable and concrete definitions of a CDL. 3. Updating and maintaining changes in WSDL definitions will be a headache !! Thoughts? 
David [mailto:public-ws-chor-request@w3.org]On Behalf Of Steve Ross-Talbot What happens if a community designs a choreography put it into productions having generated all the necessary Web Services skeletons and then later on someone changes their Web Service (maybe changing a timeout from 2 to 3 minutes) and their CDL file? 
The community as a whole are not updated nor are they updateable automatically. 
Is this a community process issue? 
Could we use any form of bi-simulation between the newly updated choreography and the master choreography to determine that they are now different and flag it as an error through a vendor specific bi-simulation tool? 
Cheers Steve T 
