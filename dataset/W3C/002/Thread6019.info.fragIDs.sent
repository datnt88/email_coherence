Martin, While I agree that it should be possible to define a MEP with 
the choreography langauge, I would not like a reliable messaging choreography to be merged with a purchasing choreography. 
I want the purchasing choreography to be expressed with the 
reliable messaging protocol implied, i.e., abstracted out. 
The MEP will have implications to the design of the business choreography. 
Consequently, it may be necessary to incorporate a reference so that the assumptions are clear, but I don't see a single choreography incorporating both levels of abstraction in any more complex way. 
Fred 
From: Martin Chapman [mailto:martin.chapman@oracle.com] 
Sent: Thursday, July 17, 2003 12:17 PM Subject: RE: Grounding Choreographies (the atoms) - WAS Simple Choreography composition suggestion I think there is a fundamental terminology issue here that needs to be cleared up. 
An entity (avoiding any overloaded word) that sends a message to a web service (and may expect a response depending on the wsdl) doesn not iteslf have to be a web service. 
This is the most fundamental building block. 
Furthermore this interaction supports an MEP (in soap teminology) and pattern (in wsd teminology). 
Perosnllay if we can not describe these meps in a choreography language we have failed, and hence I do not think that mep choreogaprhy is any different from web service choreography. 
Martin. 
-----Original Message----- From: public-ws-chor-request@w3.org [mailto:public-ws-chor-request@w3.org]On 
Behalf Of Steve Ross-Talbot Sent: Thursday, July 17, 2003 2:14 AM Subject: Grounding Choreographies (the atoms) - WAS Simple 
Choreography 
composition suggestion At the considerable risk of adding further confusion to the discussion I would like to attempt to clarify what I said 
on the call 
with respect to the grounding of a choroegraphy. 
Here is how I see it: A "web service" choreography, as distinct from any other choreography, is grounded to a minimum of two web services 
instances. 
This may mean that the web services are the same web services but different instance or it may mean that they are distinct 
(personally I 
have a hard time seeing what they would be anything other than the latter) such that I can observe a communication between them. 
A communication is a minimum of a single message sent 
from one web 
service to another web service. 
It may be the case that in receiving or indeed sending a 
message the 
sending web service and/or the receiving web service can be 
externally 
observed to change their behaviour. 
A "web service" choreography, as distinct from any other choreography, is based on externally observable behaviour where this behaviour is defined in terms of communications between web services and externally observed behavioral changes of a web service. 
For the avoidance of doubt, a Message Exchange Pattern 
(MEP) or any 
mechanism that describes communication between two parties 
can be said 
to be a choreography. 
But it cannot be said to be a "web service" choreography. 
Cheers Steve T 
-----Original Message----- From: Fletcher, Tony [mailto:Tony.Fletcher@choreology.com] Sent: Wednesday, July 16, 2003 9:12 AM Subject: FW: Simple Choreography composition suggestion The point I disagree with is the notion that something is not a Choreography if somewhere, at some level it involves 
'orchestration' 
within a single system. 
If we accept this notion / restriction it means that you can only have Choreographies involving exactly 
two parties 
where each party only plays a single role - we will not be able to have Choreographies with more than two parties / roles at all. 
That wasn't my intent, FWIW. 
All sorts of compositions and decompositions can occur within a "choreography," but IMHO only those 
that involve the 
globally visible shared state are in scope for the choreography description language we are developing. 
The discussion yesterday got me re-thinking all sorts of things ... if the fundamental unit of a 
"choreography" is a 
Web service invocation / MEP, then all sorts of 
implementation details of 
the service that involved "orchestrated" interactions behind 
the scenes are 
abstracted away, but if the fundamental unit is a 
message, then all 
those messages behind the scenes have to be accounted for 
somehow. 
I'm as 
confused as anyone at this point. 
By all means let's make sure that we don't box ourselves 
into a corner 
based on some preliminary guesses about what terms mean! 
This email is confidential and may be protected by legal 
privilege. 
If 
you are not the intended recipient, please do not copy 
or disclose 
its content but delete the email and contact the sender 
immediately. 
Whilst we run antivirus software on all internet emails we are not liable for any loss or damage. 
The recipient is advised 
to run their 
own antivirus software. 
This email is confidential and may be protected by legal privilege. 
If you are not the intended recipient, please do not copy or disclose its content but delete the email and contact the sender immediately. 
Whilst we run antivirus software on all internet emails we are not liable for any loss or damage. 
The recipient is advised to run their own antivirus software. 
Which is why I took the approach I did in trying to describe the grounding. 
Certainly the abstract language that we design could be used to describe MEP's. 
It could and should be capable of describing choreography in any context. 
We have to ground somewhere sensible given what we have been chartered to do. 
It is possible that MEP's are the right level. 
Equally it is possible that they are too low and that we need to think in terms of business messages and not protocol messages. 
Hence my scoping or grounding out at what I was calling a web service. 
Using the term "agent" or better still "process" (at least for my money) would allow us to work at the right level of abstraction. 
Then it's a case of trying a process (or agent if you prefer) to the correct term in the web service stack. 
Cheers Steve T 
-----Original Message----- From: public-ws-chor-request@w3.org [mailto:public-ws-chor-request@w3.org]On 
Behalf Of Steve Ross-Talbot Sent: Thursday, July 17, 2003 2:14 AM Subject: Grounding Choreographies (the atoms) - WAS Simple 
Choreography 
composition suggestion At the considerable risk of adding further confusion to the discussion I would like to attempt to clarify what I said 
on the call 
with respect to the grounding of a choroegraphy. 
Here is how I see it: A "web service" choreography, as distinct from any other choreography, is grounded to a minimum of two web services 
instances. 
This may mean that the web services are the same web services but different instance or it may mean that they are distinct 
(personally I 
have a hard time seeing what they would be anything other than the latter) such that I can observe a communication between them. 
A communication is a minimum of a single message sent 
from one web 
service to another web service. 
It may be the case that in receiving or indeed sending a 
message the 
sending web service and/or the receiving web service can be 
externally 
observed to change their behaviour. 
A "web service" choreography, as distinct from any other choreography, is based on externally observable behaviour where this behaviour is defined in terms of communications between web services and externally observed behavioral changes of a web service. 
For the avoidance of doubt, a Message Exchange Pattern 
(MEP) or any 
mechanism that describes communication between two parties 
can be said 
-----Original Message----- From: Fletcher, Tony [mailto:Tony.Fletcher@choreology.com] Sent: Wednesday, July 16, 2003 9:12 AM Subject: FW: Simple Choreography composition suggestion The point I disagree with is the notion that something is not a Choreography if somewhere, at some level it involves 
'orchestration' 
within a single system. 
If we accept this notion / restriction it means that you can only have Choreographies involving exactly 
two parties 
where each party only plays a single role - we will not be able to have Choreographies with more than two parties / roles at all. 
That wasn't my intent, FWIW. 
All sorts of compositions and decompositions can occur within a "choreography," but IMHO only those 
that involve the 
globally visible shared state are in scope for the choreography description language we are developing. 
The discussion yesterday got me re-thinking all sorts of things ... if the fundamental unit of a 
"choreography" is a 
Web service invocation / MEP, then all sorts of 
implementation details of 
the scenes are 
abstracted away, but if the fundamental unit is a 
message, then all 
those messages behind the scenes have to be accounted for 
somehow. 
I'm as 
confused as anyone at this point. 
By all means let's make sure that we don't box ourselves 
into a corner 
based on some preliminary guesses about what terms mean! 
This email is confidential and may be protected by legal 
privilege. 
If 
you are not the intended recipient, please do not copy 
or disclose 
its content but delete the email and contact the sender 
immediately. 
Whilst we run antivirus software on all internet emails we are not liable for any loss or damage. 
The recipient is advised 
to run their 
own antivirus software. 
This email is confidential and may be protected by legal privilege. 
If you are not the intended recipient, please do not copy or disclose its content but delete the email and contact the sender immediately. 
Whilst we run antivirus software on all internet emails we are not liable for any loss or damage. 
The recipient is advised to run their own antivirus software. 
This email is confidential and may be protected by legal privilege. 
If you are not the intended recipient, please do not copy or disclose its content but delete the email and contact the sender immediately. 
Whilst we run antivirus software on all internet emails we are not liable for any loss or damage. 
The recipient is advised to run their own antivirus software. 
This email is confidential and may be protected by legal privilege. 
If you are not the intended recipient, please do not copy or disclose its content but delete the email and contact the sender immediately. 
Whilst we run antivirus software on all internet emails we are not liable for any loss or damage. 
The recipient is advised to run their own antivirus software. 
'visible' at the higher 'layer'" is the role/state information from the lower layer. 
David Choreography composition suggestion Dear Fred and others, I basically agree with what you say below. 
As I stated in a previous mail I think that merging different levels of a choreography may not be the best approach - but it will depend on the mechanics of the language we come up with. 
I would have a preference for a layered or modular approach where you could define the RM protocol as a choreography then just use that as an 'interaction' at the next level with only the information considered to be significant being 'visible' at the higher 'layer' (the message made 'reliable' in this case). 
Best Regards Tony A M Fletcher Cohesions (TM) Business transaction management software for application coordination www.choreology.com 
Choreology Ltd., 13 Austin Friars, London EC2N 2JX UK 7801 948219 tony.fletcher@choreology.com (Home: amfletcher@iee.org) 
-----Original Message----- [mailto:public-ws-chor-request@w3.org] 
On Behalf Of Cummins, Fred A Choreograph y composition suggestion Martin, While I agree that it should be possible to define a MEP with the choreography langauge, I would not like a reliable messaging choreography to be merged with a purchasing choreography. 
I want the purchasing choreography to be expressed with the reliable messaging protocol implied, i.e., abstracted out. 
The MEP will have implications to the design of the business choreography. 
Consequently, it may be necessary to incorporate a reference so that the assumptions are clear, but I don't see a single choreography incorporating both levels of abstraction in any more complex way. 
Fred 
Tony My use case for having a choreography definition is covered by slides 9 and 10 of the presentation I gave at the F2F in June [1]. 
Quoting from this the key requirements are that: 1. 
One role can't control what another role does, for example a buyer can't control what the seller does and vice versa. 
2. For roles to interoperate, they both *have* to agree how they will co-operate (e.g. the buyer and seller must agree how orders will be placed and satisfied) 3. This means that the roles (e.g. the buyer and seller) must have a shared understanding of what each will do. 
4. The Choreography definition is *one part* of the shared definition of what the roles will do in terms of the sequence and conditions in which interactions/messages occur. 
(Other parts include message content and service interface definitions). 
So without a shared definition of the choreography, interoperability will not occur. 
Providing a *single* definition of the shared choreography that defines the behavior of all the roles involved means that those roles are using the *same* definition which means that the chances of a role misunderstanding what's required are reduced. 
By comparison, separate definitions of what each role will be more open to errors. 
David [1] aphy_v.0-1_Overview.ppt 
Choreography composition suggestion Dear Colleagues, I take no credit for raising this question - I think I remember Paul Lipton asking it on one of the early Telecons six months or so ago. 
But it is raised again in the mail below so I will surface it again explicitly. 
What is the use case for having a Choreography language of the type that this group is trying to develop? 
Who will use it or what will use it. 
At what stage(s) of designing and running business processes will it be used? 
What will we be able to achieve when we have the language available that we can not achieve now? 
(And what are the advantages of expressing the language in XML syntax (I can list some disadvantages already!) rather than just building the language ourselves (as Java, C#, Perl, etc., etc.)? 
The use cases we have all describe various business 'situations' or scenarios that the language could / should be able to describe but do not describe how such a description would be used or what the benefits of having one available would be. 
(By the way if any of the authors of the use cases have included this then apologies, thank you, and please point me to chapter and verse (OK a URI will do!) and I will go and read properly.) 
I do have my own views on the answers to these questions but I am hoping that others will respond with some sound reasons. 
If people do I really feel that it will focus and re-invigorate the group. 
Best Regards Tony A M Fletcher Cohesions (TM) Business transaction management software for application coordination www.choreology.com 
Choreology Ltd., 13 Austin Friars, London EC2N 2JX UK 948219 tony.fletcher@choreology.com (Home: amfletcher@iee.org) 
-----Original Message----- On Behalf Of Champion, Mike composition suggestion 
Maybe we could agree that ... -- The underlying formalism we use or devise must be rich enough to describe all known MEPs, and RM protocols, etc. -- The actual WS-Choreography language must be rich enough to describe the interaction at the "logical" level, with RM, Security interactions, etc. abstracted away. 
-- Our objective is that business choreography *languages* can be built as a layer on top of WS-Choreography, not that it should be directly useable by non-technical business analysts . 
