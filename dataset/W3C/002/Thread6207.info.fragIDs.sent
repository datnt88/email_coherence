Sandra, We still have the following problems... ibm/not-wf/P32/ibm32n09.xml still says: !DOCTYPE animal SYSTEM "ibm32i09.dtd" 
[ but it needs to say: !DOCTYPE animal SYSTEM "ibm32n09.dtd" 
[ 
There is also the following problem discovered by the Xerces parser that I am not sure how to solve. 
Output Tests: ibm-valid-P28-ibm28v02.xml ibm-valid-P29-ibm29v01.xml ibm-valid-P29-ibm29v02.xml ibm-valid-P57-ibm57v01.xml ibm-valid-P58-ibm58v01.xml ibm-valid-P58-ibm58v02.xml ibm-valid-P70-ibm70v01.xml 
Xerces resolves and returns the complete path of systemIds for notation decls, where as the actual outputs do not and can not contain complete resolved paths for systemIds. 
Xerces appears to behave in accordance with the SAX API... 
notationDecl If a system identifier is present, and it is a URL, the SAX parser must resolve it fully before passing it to the application through this event. 
I am not sure what we can do at this point to support expected 
results files for documents that have absolute path names in 
their infoset. 
Does anyone have any thoughts or suggestions for how this issue can be addressed? 
Otherwise, I think that we would need to remove the expected results files for these tests. 
Regards, Glenn 
I will take care of the first one. 
Sandra 
Sandra I. Martinez National Institute of Standards and Technology 100 Bureau Drive, Stop 8970, Gaithersburg, Md. 
20899 (301) 975-3579 sandra.martinez@nist.gov 
One thing that I should have mentioned is that SAX is certainly inconsistant with the Infoset specification on this point given this description from Notation information item: 2. [system identifier] The system identifier of the notation, as it appears in the declaration of the notation, without any additional URI escaping applied by the processor. 
If no system identifier was specified, this property has no value. 
However, if most people are testing conformance using the SAX API and the SAX implementations are "correct" then we cannot 
get the correct infoset to test expected results conformance. 
One idea that came to me would be to add a new attribute to the test suite descriptions similar to NAMESPACE that could be used by a SAX based test harness to identify those tests that cannot be compared with the expected output. 
Best Regards, Glenn 
The definition of the canonical forms (sun/cxml.html) 
specifies that the shortest possible relative URI should be output. 
This is inconsistent with the infoset - which is the way it is to allow for catalogues and redirection - but should be easily derivable from the value SAX returns. 
Why is this a problem now? 
Surely the test harnesses must have made this work in earlier releases? 
-- Richard 
My understanding is that the change to the Xerces parser to conform to the SAX API in this respect was relatively recent. 
It certainly was the case that when I last ran the conformance suite against Xerces myself this was not a problem, but that would have been about a year ago. 
I have long thought the SAX API is broken in this regard. 
Unless we want to change the Infoset spec and break the ability to do proper catalog resolution, I think we should leave things as is and have a note that says that people who use a tool that uses the broken SAX API will get different results. 
And we should tell the Xerces folks that their 
parser is broken. 
After all, that is what a test suite is for, isn't it? 
paul 
I agree that the test suite should not be changed. 
This isn't a parser API test, nor is it an infoset implementation test. 
The test suite requires a particular format, and the fact that it doesn't match what SAX returns merely means that the SAX test harness has to do some extra work. 
-- Richard 
