I first raised this here: Jeremy 
Ha! I think PatrickS was right :) 
The test case Jeremy presents can be made deterministic. 
The problem is that the XML spec says that the order of the attributes is not significant. 
But we can define an ordering to determine in what order to add the statements to the bag, e.g. we could say sort the attributes by their qnames and insert in that order. 
It would take a little more than that to precisely define the ordering, but you get the idea. 
This is sufficient to order them since they attribute names must be unique. 
Two questions: o does it work? 
o is it worth it, or do we just accept the non-determinism. 
Anyway, it seems like syntax issue, not a MT one. 
Brian 
Thanks. 
I've been the "troublemaker" for so long regarding datatyping, I didn't want to push yet another issue... (and since I don't believe in instance-specific containers and do such things differently... ;-) It occurred to me that since any single instance is static, that we could define a set of rules that are deterministic and always produce the same ordering for any parser. 
Granted, it may be out of charter, but I think it could be done. 
Agreed. 
Never thought it was an MT issue. 
Cheers, Patrick 
Maybe, but it might not, and it looks like a quagmire to me. 
Eg we will need to define that ordering very precisely in a way that nobody can argue about (...qnames???) 
Id say accept the nondeterminism. 
The worst that can happen is that poor dumb RDF has two bags that it gives different names to, but a more bag-savvy engine can see are really the same. 
But RDF is always in this condition; two urirefs *might* co-denote in a way that is invisible to RDF, that's always a possibility. 
Agreed. 
I think this is only an issue at all because of a lingering feeling that RDF ought to be something like a programming language. 
THe moral is, get used to the fact that it isn't a programming language. 
Pat IHMC(850)434 8903 home 40 South Alcaniz St.(850)202 4416 office phayes@ai.uwf.edu 
