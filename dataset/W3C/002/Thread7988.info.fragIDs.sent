The question isn't about attributes in general, it is about *which* attributes. 
Consider the following: D:prop theprop attr1="foo" thevalue subelem attr2="bar"/ /myprop /D:prop I believe everybody would agree that attr2 gets stored. 
Yes. 
The real question is about attr1. 
I see that attribute as part of the element that *names* a property, but it isn't part of the property *value*. 
That's an interesting comment -- I'd say that everything from the opening 
element theprop... to the closing element /theprop is the property, and 
the outermost element is called its 'name'. 
Everything about the property 
should be stored, including 'copying down' namespace declarations where required. 
IMO, PROP_ATTR is about defining the boundary between property naming, and a property's value. 
I don't think there is a boundary per se, the name is extracted from the property. 
Tim 
The real question is about attr1. 
I see that attribute as part of the element that *names* a property, but it isn't part of the property *value*. 
Since persisting the attributes is going to be tricky enough, my leaning is 
to only allow namespace and xml:lang attributes in the property name tag. 
However, I do agree that servers MUST persistently store XML attribute information found in the value of the property. 
I don't care how they store it -- the XML is just a marshalling format. 
I agree with the suggestion to look at the XML Canonicalization Recommendation for ideas on how to specify the round-trip behavior http://www.w3.org/TR/xml-c14n . 
It's important to support XLink style linking http://www.w3.org/TR/2000/PR-xlink-20001220/ , and this is *very* dependent on the use of attributes. 
Storage of XLinks in DAV properties is a very natural way to persistently attach link metadata to a resource -- the major roadblock holding this up at present is the fact that, right now, a client does not have a guarantee that attribute information will be persistently stored. 
I'm glad to see the sentiment of the working group leaning in this direction. 
- Jim 
Let's try to approach it this way: A property is a tupel of (namespacename, localname, content). 
content can be (for instance) empty, a string, or mixed XML content. 
By definition, it can by anything that belongs to the property element's infoset (including anything below it). 
If "content" is not a simple string, it needs to be stored in an XML-friendly way. 
For instance, elements or attributes in the content might use namespace prefixes that have been defined outside that element. 
For instance: If attributes of the property itself need to be recorded as well, that's extremely easy to do: just instead of storing the "content" of the element, you store the XML serialization of the element including it's attributes and children. 
Two other notes: a) It needs to be specified which parts of the Infoset are preserved (comments, processing instructions)? 
I'd say: all of them. 
b) Microsoft's webfolders already use the old XML data namespace to put data type information into properties, for instance DAV:getlastmodified dt:type="isoDate.tz" 
/ . 
Julian 
From: w3c-dist-auth-request@w3.org [mailto:w3c-dist-auth-request@w3.org]On 
Behalf Of Jim Whitehead Sent: Wednesday, April 11, 2001 7:13 PM Subject: RE: Issue: PROP_ATTR 
The real question is about attr1. 
I see that attribute as part of the element that *names* a property, but it isn't part of the property *value*. 
Boy we've got to put our old thinking caps on for these issues! 
Anyway, as has been pointed out many times in the past, WebDAV does not specify the persistence format or semantics of (at least) dead properties, it only specifies how properties are marshalled on the wire using the protocol. 
It also does not specify anything but the property name and that its value is some XML element. 
I think WebDAV has the right to define the PROPPATCH prop, set, multistatus, etc. elements including the property name and any of their associated attributes. 
But it should not have anything to say about the value of the property other then that it is marshalled in well formed XML. 
Clients/servers can use whatever they want for attributes or content model for the value element, but must use the attributes (if any) and content specified by the WebDAV protocol for the parent of the value. 
If there is some conversion from a property value to some underlying storage mechanism, it is the responsibility of the server to figure out what to do with the properties value element, attributes, content model, and all. 
Servers may have restrictions about what value types the can support, how well they can serialize generic objects in XML, if they use RDF, XML Schema, or DTDs to validate, etc. WebDAV shouldn't need to concern itself with this. 
Any attributes on DAV defined elements that are not defined in the protocol should be ignored. 
"Jim Whitehead" Sent by: w3c-dist-auth@w3.org 
w3c-dist-auth-request@w3.org cc: Subject: Issue: PROP_ATTR 04/10/2001 08:53 PM As mentioned in a previous post, now is the time to start resolving issues on the RFC 2518 issues list. 
As fate would have it, the first issue on the list is one that has been contentious in the past. 
Can we come to consensus on it now? 
Issue: PROP_ATTR Description: What is a WebDAV server required to do with XML attributes other than xml:lang submitted with a PROPPATCH? 
This affects how well WebDAV will be able to support RDF, since RDF uses attributes extensively. 
Greg Stein originally raised this issue: See also: 
