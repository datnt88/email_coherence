I'm adding container support to an RDF parser tonight... it sure is nice to have a pile of test cases to work with. 
But this one looks totally bogus. 
Did we really endorse this one? 
If so, would somebody show me the record? 
why aren't e1 and e4 treated the same way? 
Also... this test involves reification; did we consciously decide how reification works here? 
Dan Connolly, W3C http://www.w3.org/People/Connolly/ 
test005 sure looks squirrelly too... rdf:li gets special treatment when it's a typednode? 
Ugh... that was evidently on purpose... rdf:li elements will be translated to rdf:_nnn elements when they are found matching either a propertyElt (production 6.12) or a a typedNode (production 6.13). 
I guess my implementation will raise a "not supported" exception in that case; I don't see sufficient value to implement this. 
Dan Connolly, W3C http://www.w3.org/People/Connolly/ 
[I am doing this offline from memory, I did not succeed in checking it before sending] 
containers test0004 involves the fourth expansion of the property element production rule 6.12. 
By the decision to drop all the special container rules, this expnasion then 
applies to rdf:li. 
By paragraph 232 (which is so horrible its number!) this 
fourth expansion is different from the others, in that it does not reify, but the ID is the ID of the resource. 
in my opinion para 232 is an error, and is addressed in the unresolved issue 
FFFFFF 
I did some archaelogy on this one, and as far as I could tell, this paragraph dates from the early days before the first working group resolves 
issues 4, 7 ,11 and they still had a certain amount of confusion about referring to a resource and referring to the description of the resource. 
I 
think it is a hard call whether to delete paragraph 232 or preserve it for the sake of backwards compatibility. 
test0005 is also difficult for some parser writers (e.g. me). 
It is fine if 
you really are using an XSLT transform to process rdf:li, but if you're not 
you need some fairly horrid special code for processing a corner case that nobody in their right mind would rely on. 
ARP does it, but I personally am very sympathetic to a not supported exception. 
Jeremy 
Sorry my e-mail on this topic got out before it was meant to. 
I insert/correct the references etc 
[6.12] propertyElt ::= [ omit ] 
then 
this 
issue 
No, it isn't. 
None of the issues would allow us to drop para 232 if we wanted to. 
We would need to start a new issue first. 
resolves 
I 
I have probably got those issues numbers wrong, and need to go over the member archives to get the references. 
I will do that early september if there is interest. 
if 
not 
Jeremy 
