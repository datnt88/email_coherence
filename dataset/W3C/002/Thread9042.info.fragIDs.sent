Hello, List! 
I am working on C14N and Exc-C14N standards implementation based on gnome-xml library and I have few questions about ext-c14n. 
It'll be great if someone can help me with it. 
Thank you in advance, Aleksey. 
Questions about Exc-C14N: 
1) Do we need to exclude default "xml" namespace "xml" with href="http://www.w3.org/XML/1998/namespace" when a node has an attribute in this namespace (for example, "xml:space") as it is done in C14N? 
I suspect that the answer is "yes" but want to confirm it. 
2) The same as above but the default namespace is in the InclusiveNamespaces PrefixList? 
3) From the documentation it is not clear should the namespace utilized by an "invisible" attribute (i.e. the attribute not in the XPath subset). 
I guess the answer is "no" but it'll be better to make it more clear. 
4) one of exc-c14n tests I found in this mailing lists (http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2002JanMar/0097.html) processes attached document test.xml with following results (spaces and line breaks are corrupted): 
EXC-C14N ON e6 SUBSET policy: xmlsec-python test_c14n.py 
-e -i eg3.xml -x '(//. 
| //@* | //namespace::*)[ancestor-or-self::e6]' e6 test="../baz" e7 e8 xmlns:a="http://www.w3.org" a:foo="bar" e9 attr="default" /e9 /e8 /e7 /e6 aaddbe1fdb6122ad46af56e038bd721b 
However, I am not sure I understand why there is no namespace definition xmlns="http://www.ietf.org" in e7 node. 
AFAIK, this node utilizes this attribute itself since it has following definition in original document: and according to specification: "A similar definition applies for an element E in a document subset that visibly utilizes the default namespace declaration, which occurs if E has no namespace prefix." 
Will you clarify this, please? 
Please, ignore this question. 
I found that it was already answered in the thread. 
Thanks, Aleksey. 
Hello, thank you for the comments! 
These are good examples for interop "screw-cases". 
If you have and example that tests these, please send it on and the other implementors can try it out. 
Correct. 
To finish processing L, simply process every namespace node in L, except omit namespace node with local name xml, which defines the xml prefix, if its string value is http://www.w3.org/XML/1998/namespace. 
The data model, processing, input parameters, and output data for Exclusive XML Canonicalization are the same as for Canonical XML [XML-C14N] with the following exceptions [and I see no relevant exception]. 
Excluded. (And for this reason I've yet to come up with a good test case for testing this feature, but I haven't thought about it hard enough.) 
The following text, "if E or an attribute node in the document subset" covers this case, right? 
[1] http://www.w3.org/TR/2002/CR-xml-exc-c14n-20020212#sec-Terminology "An element E in a document subset visibly utilizes a namespace declaration, i.e. a namespace prefix P and bound value V, if E or an attribute node in the document subset with parent E has a qualified name in which P is the namespace prefix." 
As you noted, my example was in error. 
Also, note some other interesting issues that have come up recently: 1. 
If you serialize (just) an attribute bound to a prefix, the result is just the attribute, it is not accompanied by a namespace declaration. 
(This is probably not a good thing... still thinking about it though.) 2. If you serialize a value price="euro:1" the fact that the attribute value seemingly uses a namespace prefix does not fit the definition of utilized by these exc-c14n. 
(This is probably reasonable.) 3. I just noted this point today, but when I was testing my implementation I noted a declaration of xmlns:xml="http://www.w3.org/XML/1998/namespace" caused a parser "Invalid namespace" error. 
I note Tim Bray addressed [2] this issue, and it was discussed last week at the W3C plenary and expect an erratum to be published that permits this. 
[2] http://lists.xml.org/archives/xml-dev/200201/msg01733.html Joseph Reagle Jr. http://www.w3.org/People/Reagle/ W3C Policy Analyst mailto:reagle@w3.org 
IETF/W3C XML-Signature Co-Chair http://www.w3.org/Signature/ W3C XML Encryption Chair http://www.w3.org/Encryption/2001/ 
Josep, Thanks a lot for your reply! 
Your answers make the picture clear. 
The C14N and Exc-C14N implementations are included in the gnome-xml (libxml2) library (http://xmlsoft.org) and will be available in the next release. 
I've successully tested my implementation with all test vectors from C14N Interop report page (http://www.w3.org/Signature/2000/10/10-c14n-interop.html) and from "set2" test vectors from Exc-C14N Interop report page (http://www.w3.org/Signature/2002/02/01-exc-c14n-interop.html). 
I was not able to test "set1" from Exc-C14N interop page because it uses XML DSig stuff not available for libxml2 yet. 
It think, you can include libxml2 in the interop reports for both standards ("Y" in all rows except for "set1" for Exc-C14N). 
Thanks, Aleksey. 
Ok, I've added libxml to [1] and added a column for it in the interop [2]. 
I'm not yet satisfied with the interop tests for lack of a good framework. 
Some folks use dsig which is very appropriate but others aren't using that, and folks have written it in different languages with different APIs so a language specific testing framework doesn't seem to work well. 
(Plus, I'm not that experienced with serious interop yet.) Hopefully someone will send a nice big interop set with different XML instances, XPath expressions, and parameters that tests screw cases. 
Worse case, I'll send a manual set when I get the time. 
[1] http://www.w3.org/Signature/Overview.html#Code [2] http://www.w3.org/Signature/2002/02/01-exc-c14n-interop.html 
Joseph Reagle Jr. http://www.w3.org/People/Reagle/ W3C Policy Analyst mailto:reagle@w3.org 
IETF/W3C XML-Signature Co-Chair http://www.w3.org/Signature/ W3C XML Encryption Chair http://www.w3.org/Encryption/2001/ 
