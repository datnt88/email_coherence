All, With reference to my previous message: there's not been an overwhelming response concerning the key question raised, but some muted agreement with the suggestion that this is really a syntactic issue. 
By way of a reminder, the key question was: 1. Are anonymous resources allowed in the abstract graph syntax? 
In order to either (a) declare a quick victory, or (b) flush out the objections, I'm going to assume the answer is "no" and make a proposal for resolution of this issue. 
PROPOSAL: Anonymous resources may appear in the XML serialization of an RDF graph, but they have no distinguished representation in the abstract syntax of RDF. 
It is the responsibility of an RDF/XML parser to assign a unique URI for any resource that is not explicitly named. 
The essential property of a unique URI is that the same URI is not used as the explicitly given or automatically generated identifier of any other element in any graph that contains the uniquely generated URI. 
No specific mechanism for generating such URIs is mandated, but the following options might be considered: (a) relative URI forms in the generated graph. 
(b) uuid URIs. 
(c) URIs containing identification of the RDF parser. 
(d) URIs containing large random values. 
#g 
On the contrary: I consider it essential that the abstract syntax has a distinguished representation for anonymous nodes, and that the interpretation of these anonymous nodes in the abstract syntax works like existentially quantified variables in FOPL. 
I've given test cases and running code (n-triples2kif.pl) 
to support this position; I believe Pat H and somebody else agreed with me. 
based on what we have testcased at I completely agree with you and I really wonder how else we could model/infer 
(which are not yet equivalent, but that's another challenge) 
Absolutely, yes. 
yep Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/ 
On the contrary: I consider it essential that the abstract syntax has a distinguished representation for anonymous nodes, and that the interpretation of these anonymous nodes in the abstract syntax works like existentially quantified variables in FOPL. 
I've given test cases and running code (n-triples2kif.pl) 
to support this position; I believe Pat H and somebody else agreed with me. 
The answer is that in RDF, you *can't* infer this stuff. 
You use N3, which is way more expressive than RDF; it has negation and universal quantifiers, just for a start. 
Pat Hayes (650)859 6569 w (650)494 3973 h (until September) phayes@ai.uwf.edu 
