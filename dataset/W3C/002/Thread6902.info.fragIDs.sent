<s> Below is a test suite for Python based on Appendix C of RFC2396.  </s>
<s> Python's built-in urlparse module fails the test suite in a number of instances.  </s>
<s> I used a similar test suite to validate my Tcl URI parser.  </s>
<s> Enjoy,  </s>
<s> [ "Aaron Swartz" ; mailto:me@aaronsw.com ; http://www.aaronsw.com/  </s>
<s> ]  </s>
<s> import urlparse base = 'http://a/b/c/d;p?q'  </s>
<s> assert urlparse.urljoin(base,  </s>
<s> 'g:h') == 'g:h' assert urlparse.urljoin(base,  </s>
<s> 'g') == 'http://a/b/c/g' assert urlparse.urljoin(base,  </s>
<s> './g') == 'http://a/b/c/g' assert urlparse.urljoin(base,  </s>
<s> 'g/') == 'http://a/b/c/g/' assert urlparse.urljoin(base,  </s>
<s> '/g') == 'http://a/g' assert urlparse.urljoin(base,  </s>
<s> '//g') == 'http://g' assert urlparse.urljoin(base,  </s>
<s> '?y') == 'http://a/b/c/?y'  </s>
<s> assert urlparse.urljoin(base,  </s>
<s> 'g?y') == 'http://a/b/c/g?y' assert urlparse.urljoin(base,  </s>
<s> '#s') == 'http://a/b/c/d;p?q#s'  </s>
<s> assert urlparse.urljoin(base,  </s>
<s> 'g#s') == 'http://a/b/c/g#s' assert urlparse.urljoin(base,  </s>
<s> 'g?y#s') == 'http://a/b/c/g?y#s' assert urlparse.urljoin(base,  </s>
<s> ';x') == 'http://a/b/c/;x' assert urlparse.urljoin(base,  </s>
<s> 'g;x') == 'http://a/b/c/g;x' assert urlparse.urljoin(base,  </s>
<s> 'g;x?y#s') == 'http://a/b/c/g;x?y#s'  </s>
<s> assert urlparse.urljoin(base,  </s>
<s> '.') == 'http://a/b/c/' assert urlparse.urljoin(base,  </s>
<s> './') == 'http://a/b/c/' assert urlparse.urljoin(base,  </s>
<s> '..') == 'http://a/b/' assert urlparse.urljoin(base,  </s>
<s> '../') == 'http://a/b/' assert urlparse.urljoin(base,  </s>
<s> '../g') == 'http://a/b/g' assert urlparse.urljoin(base,  </s>
<s> '../..') == 'http://a/' assert urlparse.urljoin(base,  </s>
<s> '../../') == 'http://a/' assert urlparse.urljoin(base,  </s>
<s> '../../g') == 'http://a/g' assert urlparse.urljoin(base,  </s>
<s> '') == base assert urlparse.urljoin(base,  </s>
<s> '../../../g') == 'http://a/../g' assert urlparse.urljoin(base,  </s>
<s> '../../../../g') == 'http://a/../../g' assert urlparse.urljoin(base,  </s>
<s> '/./g') == 'http://a/./g'  </s>
<s> assert urlparse.urljoin(base,  </s>
<s> '/../g') == 'http://a/../g' assert urlparse.urljoin(base,  </s>
<s> 'g.') == 'http://a/b/c/g.' assert urlparse.urljoin(base,  </s>
<s> '.g') == 'http://a/b/c/.g'  </s>
<s> assert urlparse.urljoin(base,  </s>
<s> 'g..') == 'http://a/b/c/g..' assert urlparse.urljoin(base,  </s>
<s> '..g') == 'http://a/b/c/..g' assert urlparse.urljoin(base,  </s>
<s> './../g') == 'http://a/b/g' assert urlparse.urljoin(base,  </s>
<s> './g/.') == 'http://a/b/c/g/' assert urlparse.urljoin(base,  </s>
<s> 'g/./h') == 'http://a/b/c/g/h' assert urlparse.urljoin(base,  </s>
<s> 'g/../h') == 'http://a/b/c/h' assert urlparse.urljoin(base,  </s>
<s> 'g;x=1/./y')  </s>
<s> == 'http://a/b/c/g;x=1/y' assert urlparse.urljoin(base,  </s>
<s> 'g;x=1/../y') == 'http://a/b/c/y' assert urlparse.urljoin(base,  </s>
<s> 'g?y/./x') == 'http://a/b/c/g?y/./x' assert urlparse.urljoin(base,  </s>
<s> 'g?y/../x') == 'http://a/b/c/g?y/../x' assert urlparse.urljoin(base,  </s>
<s> 'g#s/./x')  </s>
<s> == 'http://a/b/c/g#s/./x'  </s>
<s> assert urlparse.urljoin(base,  </s>
<s> 'g#s/../x') == 'http://a/b/c/g#s/../x'  </s>
<s> You remind me - I logged a bug with Python a while back regarding their urlparse module; it represents a URI as a six-tuple ( scheme, authority, path, parameters, query, fragment ) As I read 2396, parameters can occur as a suffix to *each* path segment, not only on the final one.  </s>
<s> Guido's response was "great!  </s>
<s> fix it!", but I haven't had time to make a go of it.  </s>
<s> URI list, is this reading correct?  </s>
<s> Any opinions as to what data structure is best to represent a parsed URI with?  </s>
<s> (I'm thinking just make it a 5-tuple, taking out 'parameters', and optionally making 'path' a list of 2-tuples, but that's probably not useful in a lot of scenarios).  </s>
<s> Mark Nottingham, Research Scientist Akamai Technologies (San Mateo, CA USA)  </s>
<s> Make it an opaque object that you can query with various methods.  </s>
<s> Python is OO, isn't it?  </s>
<s> Regards, Martin.  </s>
<s> *hits head* Of course.  </s>
<s> Mark Nottingham, Research Scientist Akamai Technologies (San Mateo, CA USA)  </s>
<s> Interesting. Someone pointed your bug report out to me and they are very much related.  </s>
<s> The reason Python fails the test suite is because it treats queries and parameters specially, where as RFC2396 treats them only as a normal part of the path segment.  </s>
<s> So perhaps the solution is to just get rid of parameters and query... [ "Aaron Swartz" ; mailto:me@aaronsw.com ; http://www.aaronsw.com/  </s>
<s> ]  </s>
<s> I've started sketching out a class-based URI module to replace the function-based urlparse one distributed with Python... don't know how much time I'll have to work on it, but if you (or anyone else) is interested, we could give it a go.  </s>
<s> Cheers,  </s>
<s> Mark Nottingham, Research Scientist Akamai Technologies (San Mateo, CA USA)  </s>
<s> I've got a few thoughts on URI API design that I haven't managed to code up.  </s>
<s> But while we're talking about it... Developers tend to learn about URIs from APIs, and I'd like to clarify some things from that perspective.  </s>
<s> For example, a URI object shouldn't have any state.  </s>
<s> Several APIs bundle URI parsing with network access, putting GET and POST methods on the same object as getFragID.  </s>
<s> Bad news.  </s>
<s> So I'd prefer a URIOracle class that knows how to parse  </s>
<s> URIs; its interface is exposed with static methods.  </s>
<s> (this is pretty much the same thing as a python module with functions).  </s>
<s> Another opportunity I'd like to exploit is explaining the difference between when it's OK to peek into which parts of a URI.  </s>
<s> At one level, the only methods are: URIOracle.getFragID(aURIRef): # returns fragid URIOracle.combine(absBaseURI, aURIRef) # returns absolute URIref URIOracle.refTo(fromHere, toThere) # URI "subtraction"  </s>
<s> (and maybe some escaping/unescaping methods... and maybe something for encoding form arguments... gotta think about that).  </s>
<s> At this level, you can't peek in enough to tell the difference between one scheme and another.  </s>
<s> This level corresponds to  </s>
<s> the application and/or presentation objects in TimBL's diagrams of the web model Then there's a separate interface for use by code that does network access; at this level, you can parse the scheme, the host, the username/password, the path segments, etc. Anyway... as I say, I haven't worked out the details.  </s>
<s> I have a formal specification of these interfaces in progress...  </s>
<s> Dan Connolly, W3C http://www.w3.org/People/Connolly/  </s>
<s> Please say getFrag.?  </s>
<s> You don't know that the Frag is an ID until you have recovered the resource and determined its type by inspection.  </s>
<s> The 'fragment' that is the heuristic reason for the naming of this terminal in the parsing model is _a fragment of the URI-reference string_, not a "fragment" of the resource.  </s>
<s> It is just what follows the '#'.  </s>
<s> In general.  </s>
<s> It is commonly used for an ID to indicate a proper sub-object (not general fragment) of the recovered value of the indicated resource.  </s>
<s> But that's not definitive, i.e. not universal.  </s>
<s> So in an OO context getFrag is stateful because the class of the object returned -- what you can do with it -- depends on the state variable knowResourceRecoveredValueType.  </s>
<s> This level is pertinent to the topic of URIref methods, not URI methods, precisely.  </s>
<s> These are two closely related classes, but the abstract URI comprised of the equivalence class of all strings provable to indicate the same resource (by equivalence under the escaping rules, etc.) is worth regarding as a separate class from the URIref that one finds in the HREF of a hyperlink, for example.  </s>
<s> The URI is fully qualified and needs no context.  </s>
<s> The URIref appears in context and may be relative, depending for its interpretation on a BASE available from the context.  </s>
<s> If you can't tell the scheme, you are not dealing with URIs.? GetScheme is perhaps the sole universal proper method for URIs.? Everything else hangs on it.  </s>
<s> URIs expose the class of their indicated resources by means of the scheme component.?  </s>
<s> That is the first, most important production in the reference model for defining the world in which we use URIs.? If you haven't captured that, start over.  </s>
<s> ftp: URLs indicate resources which have a have a GET method.  </s>
<s> [no PUT] data: URLs indicate resources which have a PARSE method.? [no GET or PUT] to handle a URIref one contextualizes and normalizes to obtain the associated URI and case on scheme to determine the applicable proper methods of the resource indicated.?  </s>
<s> More information on which of these methods is indicated by some activation may be available from the context of the URIref, as for example when it appears as the ACTION for a FORM.  </s>
<s> Al  </s>
<s> http://www.w3.org/XML/9711theory/URIclient.lsl http://www.w3.org/XML/9711th eory/URIclient.lsl  </s>
<s> http://www.w3.org/XML/9711theory/URI.lsl http://www.w3.org/XML/9711theory/U RI.lsl  </s>
<s> http://www.w3.org/People/Connolly/ http://www.w3.org/People/Connolly/  </s>
