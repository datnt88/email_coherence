If I organized a teleconference bridge so we could discuss this issue, would that be useful to folks? 
The reason I ask is because I can't yet formulate a simple question to pose to the list. 
Presently, I have four issues in mind: 
1. What we call the operations -- easy once we settle on the other issues. 
2. The type of operation: as specified, Merlin's intersections [2], and Christian's include/search [3]. 
3. The input node set (see my question in the previous email). 
4. The optimized speed of whatever we decide on. 
The discussion on the list is very instructive and we can let it percolate 
a bit more, but if desired, I'll organize a call. 
[2] [3] Joseph Reagle Jr. http://www.w3.org/People/Reagle/ W3C Policy Analyst mailto:reagle@w3.org 
IETF/W3C XML-Signature Co-Chair http://www.w3.org/Signature/ W3C XML Encryption Chair http://www.w3.org/Encryption/2001/ 
Hi Joseph, Merlin, Gregor and Christian, I'm happy to do a conference call, but one may not be necessary because I feel inclined to acquiesce on this point in favor of set intersection and subtraction as long as we change the keywords and define a couple of specific optimizations, as Merlin has proposed. 
The first reason is that we have numerous people who have walked down the wrong implementation path. 
This is one of the indicators I use to detect the need for improvement in a software architecture. 
The second reason is that I have always liked these operations better from an elegance standpoint (my principal concern is not wanting to be burned again on speed issues). 
The third reason is that I think Merlin's approach of defining the specific optimizations will work out for the very simple cases I'm concerned about; as long as those optimizations are RECOMMENDED to implement, I think that is strong enough language for me. 
From a change standpoint, defining set intersection and subtraction is a relatively small change to the spec. 
I think the optimizations will also be easy to define and not hard on the programmer because we basically only want to account for the current include/exclude cases. 
Given the optimizations, I would certainly agree that the set operations represent a preferable architecture. 
Finally, I remain convinced that we should do set intersect and subtract, not those in Christian's proposal (no offense; it was a good strawman, but I still don't see how it's faster except in some really esoteric scenarios). 
As our fearless leader, Joseph, I think the question is to take a yes/no vote on change from include/exclude to (intersect/subtract + recommended simple optimizations). 
Thanks, John Boyer If I organized a teleconference bridge so we could discuss this issue, would that be useful to folks? 
The reason I ask is because I can't yet formulate a simple question to pose to the list. 
Presently, I have four issues in mind: 
1. What we call the operations -- easy once we settle on the other issues. 
2. The type of operation: as specified, Merlin's intersections [2], and Christian's include/search [3]. 
3. The input node set (see my question in the previous email). 
4. The optimized speed of whatever we decide on. 
The discussion on the list is very instructive and we can let it percolate a bit more, but if desired, I'll organize a call. 
[2] l [3] l Joseph Reagle Jr. http://www.w3.org/People/Reagle/ W3C Policy Analyst mailto:reagle@w3.org 
IETF/W3C XML-Signature Co-Chair http://www.w3.org/Signature/ W3C XML Encryption Chair http://www.w3.org/Encryption/2001/ 
I agree that this seems to be where the consensus is headed. 
I'm not aware of any standing opposition to set operations though there is still some 
confusion: Christian asking about what exactly Merlin is proposing [1], and my confusion about multiple transforms operating on the *original* document, not their preceding transforms output [2]. 
So before we have a call or resort to a poll I'd recommend we gather our thoughts and first reflect these changed in the document. 
Then we can further discuss as needed. 
[1] [2] Joseph Reagle Jr. http://www.w3.org/People/Reagle/ W3C Policy Analyst mailto:reagle@w3.org 
IETF/W3C XML-Signature Co-Chair http://www.w3.org/Signature/ W3C XML Encryption Chair http://www.w3.org/Encryption/2001/ 
r/reagle@w3.org/2002.03.20/11:29:42 
To answer 2, in case it's not clear from my last message (which hopefully addresses 1), the XPath expression is evaluated in the context of the input document and then the result is applied to the input node set. 
I think, as an aside, that a sequence of XPath, XPath filter and Enveloped signature transforms can thus be reordered without altering the resulting node set. 
Merlin 
Baltimore Technologies plc will not be liable for direct, special, indirect or consequential damages arising from alteration of the contents of this message by a third party or as a result of any virus being passed on. 
This footnote confirms that this email message has been swept by Baltimore MIMEsweeper for Content Security threats, including computer viruses. 
