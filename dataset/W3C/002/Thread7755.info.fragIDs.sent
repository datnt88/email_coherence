I report on preliminary interoperation testing between the Python DAV client and the Xythos server (at 216.102.212.251, port 80, using base collection /~webdav/) So far as I know, Xythos is the only other WebDAV server that supports locking on collections (MS supports locking, but not on collections. 
I am unsure about the IBM implementation, someone should set me straight.) 
I tested OPTIONS, PUT, GET, HEAD, PROPFIND, PROPPATCH, MKCOL, DELETE, LOCK, and UNLOCK, including some combinations. 
I find the following problems: 1. 
The reply from server (to a PROPFIND) has neither a content-length nor 
does it use chunked encoding. 
I believe this is a violation of HTTP/1.1 rules. 
PROPFIND /~webdav HTTP/1.1 Host: 216.102.212.251 
HTTP/1.1 207 Multi-Status Server: JavaWebServer/2.0 Vary: Accept-Encoding Connection: close Date: Mon, 12 Jul 1999 16:49:20 GMT 
(seems like the server just closes the connection each time. 
Is this allowed? 
It's certainly not efficient. 
But anyway on the assumption that it is legal, I modified my test code to work with this, so I could test more features) 
2) the server does not seem to be preserving the xml:lang attribute 3) dead properties are preserved across deletion of a resource. 
That is, I PROPPATCH foo, delete it, then PUT foo again, and the property I set the first time is still there 4) PROPPATCH changes a property even if the resource is locked. 
I could set and delete properties on the other hand, I could not *delete* a property when I did pass a token 5) PUT could not create resource in a locked collection even with token 6) attempt to create collection /~webdav/newcoll/ when parent was locked got code 405 (NotAllowed). 
shouldn't this be 409 (conflict) instead? 
7) Deleted resource /~webdav/foo.html 
when parent was locked (without passing token) 
8) attempt to lock a non-existant resource gets NotFound I was not able to test operation of locked resources within locked collections because of these bugs. 
When they are corrected, I'll try again. 
I congratulate the Xythos team on a good (though not yet perfect) server. 
Jim 
DAV4J is a complete DAV class 2 server and does support locking on collections. 
It is allowed, but prevents the client from knowing whether they obtained the complete response or were just cut off. 
In other words, it is legitimate in HTTP/1.1, but never a good design 
choice when chunked is an alternative. 
....Roy 
The WebDAV spec explicitly addresses this point. 
The reason being that you 
might want to lock something before creating it so you can control all the 
details of it. 
otherwise there is a race condition: you create FOO, someone else locks FOO before you can issue the lock. 
Does this make sense? 
See spec section 7.4 for more details 
Jim, thanks again for testing the server. 
I will be making all of the changes necessary in the next few days. 
- 2) the server does not seem to be preserving the xml:lang attribute 
I need to add that support. 
Not sure how I want to handle this, do I need to stripe property by lang. 
This means that someone could set the same property to two different values as long as the lang was set differently??? 
that's not how I understand it. 
If you're not clear, better post a question to the webdav list asking for clarification, as others may also be unclear. 
I talked to Jim Whitehead on this. 
He told me that I must keep the xml:lang attribute, but it is not intended to stripe the property. 
In other words a propatch of then propatch Will result in only ONE value for K:foo . 
The second value REPLACES the first even though it is a different lang. 
I think this is different than what you are telling me. 
While I am at it. 
Is the server required to keep ALL attributes sent to it??? 
Thanks, Kevin 
What Jim W said is the same as what I believe. 
Sorry if I did not explain it well. 
Required? No, at least not at present. 
You'll note that the protocol document is mute on the point. 
SInce it says nothing, there's no requirement. 
Some have stated that it *should* be required, but the list has never reached concensus on the point. 
There are arguments both ways. 
I won't repeat them in full, but in brief they are: NO: The data model for WebDAV properties is a tree, where the leaf nodes are string values, and the interior nodes have a label, BUT NO OTHER STATE, except for the xml:lang attribute (and perhaps one or two other attributes required by XML). 
WebDAV uses XML as an on the wire format, but the data model is not XML. 
An additional argument against is the possible cost of storing attributes. 
YES: Since WebDAV uses XML, and since XML uses attributes, users will expect it, so it should be required. 
The list has never reached concensus on this point, and, as I recall, it has not even been able to agree to place an explicit statement on the non-agreement in the protocol document. 
So the protocol is simply silent on the point. 
