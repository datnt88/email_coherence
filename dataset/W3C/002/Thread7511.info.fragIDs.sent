Like several others, I register my objection to the new treatment of external members of collections. 
I object to the externalmembers property, and I object to the limitation of PROPFIND to only returning information about *internal* members of the collection. 
In my opinion, if the semantics of PROPFIND with regards to external members remain as they are, it would be better instead to REMOVE ADDREF, DELREF, and external members. 
The current definition is so weak as to be useless, and so why clutter WebDAV with it? 
In my opinion, the only distinction between internal and external members of a collection should be that internal members have a URI relative to that of the collection. 
Behavior I would like to see, briefly illustrated: on server www.foo.com 
MKCOL /c1 PUT /c1/lesh.html 
MKCOL /c2 PUT /c2/phish.html ; create internal member of c2 ADDREF /c2 ;create external member of c2 Collection-Member: /c1/lesh.html 
ADDREF /c2 ; also create external member of c2 Collection-Member: http://www.media-lab.mit.edu/nicholas.gif PROPFIND /c2 Depth: 1 href http://www.media-lab.mit.edu/nicholas.gif There should not be an externalmembers property. 
It serves no purpose, and adds a burden to the server. 
It is acceptable to me to simply drop the entire concept of external members, and it is acceptable to me to adopt the semantics I describe above. 
The current semantics are not acceptable. 
Note that the semantics I call for mean that you'd also have to support PROPFIND and PROPPATCH on external members, e.g. on www.foo.com it would be okay to do PROPFIND http://www.media-lab.mit.edu/nicholas.gif Host: www.foo.com 
Lest anyone claim this is hard to do, I can tell you that I have already implemented it on my prototype WebDAV server. 
If you have to support an arbitrary property store anyway, it's no harder to store properties on URIs that are non-local to the server. 
Jim 
It seems to me that the use of PROPFIND to provide a namespace listing is merely providing a window to the namespace allocation functionality of the server. 
It has become so stripped down as to no longer correspond to what is normally referred to as a collection (at least within other Hypertext systems). 
Perhaps it would be easier to refer to it as a namespace, restrict it to the properties of allocating a namespace, and reserve the term collection for ordered sets that may be independent of the namespace hierarchy? 
We could then manipulate the namespace using namespace-restricted functionality, and manipulate each collection using the normal content modification methods upon a media type that describes an ordered collection. 
With that sense, external members == server-side redirects. 
....Roy 
I am not sure I understand Roy, but if I do, I agree with him, conditionally. 
Let me elaborate and expand on what I think this means. 
The proposed semantics for collection are so weak as to not be "worthy" of the name "collection". 
If these semantica are retained (I would prefer expanded semantics, e.g. external members as first class citizens, and optional support for ordering) then perhaps a better name, more faithful to the actual semantics, would be "directory" or "folder". 
I find "namespace" to be too generic, since one may speak of a namespace of domain names, but perhaps the term "namespace" is used in a coherent way throughout the spec. 
If that's the generally accepted term in the HTTP community (forgive my ignorance) then it's fine. 
If so, shouldn't the method MKCOL be renamed to MAKENAMESPACE (or MKDIR) as appropriate? 
This would leave the (you should excuse the term) "namespace" of method names free for a future Web extension that actually supported collections. 
To reiterate, this is conditional agreement. 
If I can't have collections with rich semantics I'd rather just have MKDIR and be done with it. 
which I simply don't get. 
Best regards Jim 
Jim, 
Whether it's called a "collection" or not aside, in my view is the WebDAV notion of a collection *should* be treated as a pure namespace. 
There is a need to be able to structure the URI namespace, and the current WebDAV collection does that. 
When the notion of a collection (really a namespace) is expanded to included unnamed external members, it suggests that a collection is more than a namespace, but does not specify what it actually does represent. 
It seems to me that this opens the possibility that different DAV implementations may use external members for different purposes, which might hurt interoperability. 
Certainly there are any number of other possible notions of "collection", including compound documents and versioned documents. 
Each one of these needs to specialize the namespace concept of a collection in some way. 
I believe that each of these specialized forms of a collection ought to be modelled as a different resource type. 
That is, if you want a compound document container, define it as such, with ordered and repeated members as desired. 
It would also be wise to consider the possibilities of compound documents with versioned members, and versioned, compound documents. 
That being said, I don't object to inclusion of external members in the spec, if that's what it takes to get it through the process. 
Howard 
I meant that the role of an external member within a namespace is essentially equivalent to a symbolic link in a filesystem -- it adds a name to the space that corresponds to some other resource, thus resulting in a name redirection. 
In the filesystem, the standard library would follow the link on an open, whereas accessing the external member name on the Web would result in either an internal or external (HTTP) redirection to the other resource. 
This is a common feature allowed by Apache configuration files. 
From WebDAV's perspective, the important thing is that it allows the client to see what names are already in use, even if some of those names are merely handles for negotiation points, gateways, or other non-authorable resources. 
I am using the term namespace because it is more neutral to implementation than directory or index, though I agree that they follow the same purpose. 
Tip-toeing on terminology is a side-effect of too many IETF arguments over the URI technology. 
A directory or index is the response we should get when we ask to look at a namespace. 
From a namespace perspective, ordering and duplicate membership is not allowed. 
On the other hand, there are a hundred things that could make good use of a collection in the generic form of a directed graph. 
While I think it is possible to model the namespace using a collection, I'd absolutely hate for collections as a whole to be hindered by the restrictions on a namespace. 
WebDAV seems to be moving toward the latter in order to make it easier for implementations; if that is necessary, I'd rather the result be called something more specific than "collections". 
BTW, the reason I think a name change is justified at this point is because the semantics of MKCOL, etc., no longer correspond to the semantics they had when we started calling them collections. 
This is a case where continuance of the same names causes more confusion than a discontinuance. 
....Roy 
