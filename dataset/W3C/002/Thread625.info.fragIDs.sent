I find it confusing when Tidy tells me I cannot use (leaving out details): P Whatever 
Tidy wants to see a /FONT before the UL . 
Is SGML/HTML really that restrictive? 
If so, I'd like to see the specs for this? 
In order to understand Tidy, it would help to learn where is the formal specification on how tags can be nested. 
Is this info in the HTML 4 spec? 
I cannot seem to find the info. 
Or do I have to look at the SGML Handbook to learn SGML's rules? 
This is from the HTML spec... font is an inline element while ul is a block element. 
You cannot wrap inline elements around block elements. 
(SGML has nothing to HTML or XML, except to see where tagging concepts started.) The specs are available at http://www.w3.org/ Serge Knystautas Loki Technologies 
I found the following in clause 7.5.3 in the file ..\html40\struct\global.html. 
"Generally, block-level elements may contain inline elements and other block-level elements. 
Generally, inline elements may contain only data and other inline elements. 
Inherent in this structural distinction is the idea that block elements create "larger" structures than inline elements" 
That wording is too loose. 
The spec needs to be tightened. 
...\html40\struct\global.html. 
That is exactly the guideline I gave you, and then I ask you to read the spec... 
No, you can't ignore a 753k document and say "it needs to be tightened"... you have to read it... a FONT tag can wrap % inline entities. 
% inline entity can be text, % fontstyle entities, % phrase entities, %special entities, and %formctrl entities. 
% fontstyle is TT, I, B, U, S, STRIKE, BIG, and SMALL tags. 
% pharse is EM, STRONG, DFN, CODE, SAMPL, KBD, VAR, CITE, ABBR, and ACRONYM. 
% special is A, IMG, APPLET, OBJECT, FONT, BASEFONT, BR, SCRIPT, MAP, Q, SUB, SUP, SPAN, BDO, and IFRAME. 
%formctrl is INPUT, SELECT, TEXTAREA, LABEL, and BUTTON. 
Meanwhile, UL is a % list entity, which is a % block entity... you very clearly can't put UL instead a FONT tag. 
HTML 3.2 clearly shows the same rules. 
Serge Knystautas Loki Technologies 
Yes, I had found that. 
It's important to understand that Tidy is designed to take erroneous HTML and produce standards-conformant HTML by using its best guess as to the author's intent. 
When it says you "cannot use" something, it means that you've submitted erroneous HTML, and Tidy will attempt to produce conformant HTML from your submission. 
The result may or may not exactly reflect your intention, as Tidy's heuristics aren't infallible (yet :-). 
Tidy is not designed to produce erroneous HTML on output, regardless of whether certain browsers accept that erroneous HTML and display what an author intended. 
It is "restrictive" in the sense that you must follow the rules laid out in the standard if you want to write valid HTML. 
If you wish to write invalid HTML that may work on a given browser only, then Tidy simply isn't the right tool for the job. 
The formal specifications are the DTDs (document type definitions) associated with a given version of HTML. 
They are the "final word" regarding what's legal and what is not. 
The HTML4 DTDs are listed in Chapters 21-23 of the HTML 4.01 Specification on the W3C site. 
However, there are some prose descriptions of the legality rules available on the Web. 
For example, you might refer to the Web Design Group's "HTML 4.0 Reference" at: Looking at your original problem, if you click on the "Alphabetical list of HTML elements" link, and then click on the "FONT" link, you'll find that the description for this element shows: Contents: Inline elements Contained in: Inline elements, block-level elements except PRE If you then click on "Inline elements", you'll get a list of all elements that may be contained within a FONT element (UL isn't one of them). 
This particular reference lists, for each element, what it may contain and what may contain it. 
That may help you with your understanding of Tidy's diagnostics. 
-- Dave 
