Hi all, I'm confused by the following points. 
Could someone clarify this? 
1. If an XML Signature Application accepts a DOM node as an input XML document in which it create a ds:Signature element, the Section 4.3.3.2 and 4.3.3.3 of XML DSIG spec implicitly defines that the input DOM node have to be the result of well-formed processing of the octet stream of the document. 
2. If an XML Signature Application accepts an octet stream as an input XML document in which it create a ds:Signature element, the Section 4.3.3.2 and 4.3.3.3 of XML DSIG spec implicitly defines that it have to parse the input octet stream via well-formed processig. 
If the above is true: 
3. Without any DTD/Schema definitions, how an XML Signature Appilcation does identify a node via barename XPointers or an id() function contained in XPointer expressions in dereferencing Same-Document URI-References? 
Do I miss some important points? 
Takuya Mori moritaku@bx.jp.nec.com / tk-mori@isd.nec.co.jp Internet Solution Platform Development Div., NEC Solutions, Tokyo Japan 
Hi Takuya --On Mittwoch, 10. Oktober 2001 16:02 +0900 Takuya Mori 
You're right: If you do not have a DTD or Schema, the Parser cannot identify Attributes of Type ID. What I did in my application [1] is that I can select Id attributes in elements from XML Signature space, because even without Schema, you know that an "Id" Attribute in an Element from Signature namespace _is_ of type ID, so you can catch them. 
If the user tries to identify IDs from other elements, my software does not catch them 
without tricks, but if the user helps me (uses my registerElementById(Element element, String idValue)), the parser can even find these elements. 
Christian [1] utils/IdResolver.java?rev=1.2&amp;content-type=text/vnd.viewcvs-markup 
Hi, r/tk-mori@isd.nec.co.jp/2001.10.10/16:02:48 
Sections 4.3.3.2 and 4.3.3.3 refer *only* to the reference processing model; that is, processing the target of a dsig:Reference element. 
They do not say anything, explicit or implicit, about the document in which a signature is created. 
Indeed,see section 3.1.2 of the processing rules (signature generation): 
Note, if the Signature includes same-document references, [XML] or 
[XML-schema] validation of the document might introduce changes that break the signature. 
Consequently, applications should be careful to consistently process the document or refrain from using external contributions (e.g., defaults and entities). 
" [ http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html ] This clearly states that parsing of the signature document itself is application-specific, and may be validating or well formed. 
Merlin Baltimore Technologies plc will not be liable for direct, special, indirect or consequential damages arising from alteration of the contents of this message by a third party or as a result of any virus being passed on. 
In addition, certain Marketing collateral may be added from time to time to promote Baltimore Technologies products, services, Global e-Security or appearance at trade shows and conferences. 
This footnote confirms that this email message has been swept by Baltimore MIMEsweeper for Content Security threats, including computer viruses. 
Hi merlin, Thank you for your clarification. 
merlin said: 
Note, if the Signature includes same-document references, [XML] or 
I skipped over the note you cited. 
Takuya Mori moritaku@bx.jp.nec.com / tk-mori@isd.nec.co.jp Internet Solution Platform Development Div., NEC Solutions, Tokyo Japan 
Hi Christian, Thank you for your comment. 
We are also using such kind of tricks. 
And my concern is it is somewhat ugly that Id resolution is required for well-formed processed documents. 
Takuya Mori moritaku@bx.jp.nec.com / tk-mori@isd.nec.co.jp Internet Solution Platform Development Div., NEC Solutions, Tokyo Japan 
You're right. 
It's an ugly trick, but the only one that exists. 
Imagine you're creating a document from scratch and you want to define IDs. 
I asked the xerces-user mailing list and what I got was that there is no way in DOM to define that an attribute is of type ID during document creation. 
But I got a hint that Xerces allows this tricky thing to set IDs during creation: ((org.apache.xerces.dom.DocumentImpl) doc).putIdentifier(idValue, element); So well, that seems to work. 
Christian 
