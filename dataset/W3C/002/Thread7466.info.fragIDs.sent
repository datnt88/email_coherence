Below is a brief summary of the WEBDAV WG meetings which took place last week. 
More detailed minutes are under preparation. 
- Jim WEBDAV Working Group Summary The WEBDAV working group met two times at the Washington IETF meeting, on Monday and Tuesday, December 8-9, 1997, and 78 people attended one or both of the sessions. 
The first session began with a mini-BOF on the topic of WEBDAV searching and locating 
(DASL), which was led by Saveen Reddy. 
During this mini-BOF, the goals of the working group were presented, and some discussion on the group took place. 
Attendees notes that there was overlap between the issues being considered by LESSOR and DASL, however there was some agreement that DASL would be able to build upon the work of the LESSOR group. 
At the end of the mini-BOF, a poll of the attendees found substantial, but not unanimous, support for having a DASL working group in the IETF. 
After the DASL mini-BOF, the WEBDAV session begain with a status report on 
the current documents being developed by the working group, including the creation of a new versioning protocol specification, now that the main protocol document is focused on distributed authoring capability. 
During this status report, the chair announced that there will be a working group last call on the distributed authoring protocol document in January. 
A discussion of open issues in the distributed authoring protocol specification took place during the remainder of the session. 
Functionality for ordered collections was discussed, with debate centering on what kind of ordered collection support should be provided, and whether the support should be mandatory given the processing burden on servers. 
No resolution was reached, discussion will continue on the list. 
Security considerations were discussed next, and the group reached agreement that a) the security considerations from HTTP/1.1 need to be reviewed to ensure they are unchanged for the domain of distributed authoring, b) WEBDAV will mandate use of digest authentication, c) for cases where greater security that an unencoded session is needed, use TLS will be recommended. 
Finally, the working group agreed with the decisions of the Design Team that the INDEX method be removed in conjunction with adding recursive capability to PROPFIND, and the PATCH method be moved to the versioning specification. 
Access Control was the topic of the second WEBDAV session. 
Howard Palmer led discussion on WEBDAV access control by presenting a series of slides highlighting design issues. 
One thread discussed the problem of underlying repositories having access control schemes which vary (e.g., by operating system), the difficulty of mapping different schemes into each other, and the challenge this poses for WEBDAV access control. 
No consensus was reached (none was expected) and discussion on access control will continue on the mailing list. 
Since Jim mentioned DASL in his summary, I thought it might be nice to give a reminder to everyone about where you can locate DASL documents of interest: - DASL Homepage: http://www.ics.uci.edu/pub/ietf/dasl - DASL Charter: http://www.ics.uci.edu/pub/ietf/dasl/charter.html - DASL Requirements: ftp://ftp.ietf.org/internet-drafts/draft-reddy-dasl-requirements-00.txt - DASL mailing list archives: - DASL mailing list: www-webdav-dasl@w3.org . 
To join the DASL mailing list, send email with a body of "subscribe" to www-webdav-dasl-request@w3.org . 
For your convenience I've included the charter below. 
-Saveen DAV Searching and Locating (DASL) Description of Working Group This working group will define the HTTP extensions necessary to enable the location of HTTP resources based upon the value of the properties and text content of those resources. 
These extensions will provide searching interoperability among the variety of underlying storage systems whose data can be exposed by WEBDAV. 
The WEBDAV protocol defines a simple set of mechanisms to manipulate and retrieve properties on resources. 
Interaction is at the individual resource. 
WEBDAV provides no mechanism to locate efficiently the set of resource matching a user-desired criteria on their properties. 
The mechanisms defined in WEBDAV allow only the most primitive support to this operation, one that requires extensive manual processing and 
network usage by the client and does not take advantage of the advanced querying and caching capabilities of many storage systems. 
The functional needs for DAV search encompass the following capabilities, which shall be considered by this working group: 
IN-SCOPE: *Criteria: relative comparisons on string and non-string values: 
, , etc. 
*How to deal with internationalized content. 
*Use of existing querying mechanisms schemes. 
*Definition of a simple query syntax for interoperability *Extensibility mechanisms to allow advanced queries *Standard result format *Multi-server search *Simple text content search *Implementation of functionality by non-origin proxies A generalized Search mechanism is a broad problem space. 
It can be considered to encompass a wide variety of object models, typing schemes, and media. 
However, by focusing on the better-defined problem space of locating resources based on property values and text content, the working group will leverage much of the existing work that has been done on querying under the simple property models. 
To more clearly focus the working group, the following list of "out of scope" elements have been developed. 
This working group to avoid the inclusion any item, unless it is impossible or impractical to create a useful set of searching mechanism without it: NOT IN SCOPE: *Definition of default property sets for resources *Server to server communication protocols *Searches for non-property values or values not in text content *Content-based criteria for non-text content (i.e images, sounds, etc.) *Data definition language: resource/table creation, property/column manipulation, etc. Deliverables The final output of this working group is expected to be two documents: A requirements document, which describes the high-level functional requirements for DASL, including rationale. 
Additions to WEBDAV which describes new methods, headers, request bodies, and response bodies, to implement the DASL requirements. 
Goals and Milestones: (Specification) Produce DASL specification. 
Submit as Internet Draft. 
(Meeting, Specification, Requirements) Meet at meet in LA (March '98) and hold working group meeting to develop the protocol specification and requirements document. 
(Requirements) Create final version of DASL requirements document. 
Submit as Informational RFC. 
(Specification) Produce revised DASL specification. 
Submit as Internet Draft. 
(Specification) Complete revisions to DASL. 
Submit as a Proposed Standard RFC 
Saveen: There are and have been many previous attempts to standardize searching on web servers in the past, including the Starts work, its recasting as ZStarts (using Z39.50 as a basis for searching). 
Your charter for DASL doesn't mention any attempt to rationalize the DASL work with any of the other (still ongoing) efforts. 
While it would be great if there were a standard for searching Internet repositories, especially those that can be constructed using WEBDAV, it's not so great to have two or three different and incompatible standards. 
Can you say more about the attempts to coordinate, or the justification, if any for an explicit decision not to? 
It is unusual, and, I think, bad form, to define the functional requirements of scope in the charter of the working group itself. 
It might be that you have an initial Internet Draft which defines your best view of the functional requirements, and that you will put that document early in the milestones for consensus as an Informational RFC, but putting the contents itself in the charter leaves no place to have the discussion and consensus building around the description of the functional requirements themselves. 
That seems to stack the deck too much. 
What is the relative importance of "Use of existing querying mechanisms schemes" vs. "Definition of a simple query syntax for interoperability" if there is no existing simple query syntax? 
Or what is the relative value of a simple query syntax for interoperability if, in the name of simplicity, you have to leave out features that are important for full interoperability? 
Larry 
Ideally, we leverage everything possible from those ongoing efforts ( ZStarts, the LESSOR group, etc. ) and existing standards. 
DASL's goal is to search (DAV) internet repositories, and I think that existing within the DAV framework places constraints and requirements on the problem: the resource model DAV defines (how it models collections in relation to non-collection resources and properties), its use of arbitrary XML as property values (opening up the potential for arbitrarily complex values), variants, DAV's versioning model, DAVs use of namespaces for property values, the relationship of the source link to resources being searched, typing of values in XML etc. 
Saveen this is a terrific beginning of the requirements. 
I agree with your overall sense of scope, particularly the things you excluded. 
I must also say that there are a lot of requirements in this document whose rationale (or perhaps semantics) I do not understand. 
Can you enlighten me? 
Variants (3.1.4). 
What WebDAV group is working on "mechanisms ... to use when submitting variants to the server"? 
I must have missed this. 
Regular Expressions (3.1.6) 
By "must" do you mean that every DASL server MUST support regex? 
If so, why? 
This seems too expensive to me. 
As far as I know, the large search engines (e.g. Verity) do not support regex. 
Likewise for NEAR (3.1.7) 
Again, why is this mandatory? 
Result Record Definition (3.2.1). 
I can certainly see the value of supporting this - it improves performance by cutting round trips. 
(otherwise, you do a SEARCH to get the list of resources that match, then a PROPFIND for each one.) 
But is this the only reason, and should it be mandatory? 
Paged Search Results (3.2.3). 
I don't at all see why we need this. 
If the search results are returned in chunked Transer Encoding, then the search engine can start returning results as soon as the first match occurs, and the client can certainly start displaying them as they arrive. 
Or perhaps I don't know what this means. 
I hope it does not mean that the server has to store the state of searches in progress, as in Z39.50. 
Search Scope 3.3.1 
- is a search scope a collection? 
Why do we need this? 
It's a performance improvement, so one does not have to issue N searches? 
Search Depth 3.3.2 
- by "container" do you mean "collection"? 
Extensible Query Syntax (3.4.2) - I am leery of this. 
Where does this requirement come from? 
I challenge it in two ways 1 - it's not needed, because generic query syntaxes are sufficient. 
Consider, for example, the DMA (document management alliance) API. 
It provides only one syntax, albeit a powerful one, unless by "extensible" you mean that the client can discover the list of searchable properties and operators allowed on each one. 
For this kind of discovery, you should look at DMA, which provides means of describing the operators, the required operands for each, the datatypes supported, the default values, and so on. 
I think that RDF is actually expressive enough to express all this. 2 - it's not sufficient - I find it hard to believe that a client C can do discovery on server S and generate an effective query using a *syntax* it did not previously know, without the intervention of a human. 
If all you are trying to say is that server S should be allowed to provide proprietary search interfaces so that client C (from the same vendor) can work with it, that's neither difficult nor worthy of the spec. 
If you have something different in mind, please correct my misunderstanding. 
Internationalization 3.7. 
I strongly agree. 
I've certainly run into problems in searching against non-ascii data, e.g. names in German or Greek. 
(Did you think I would have only disagreements?) Finally, something needs to be said about full text variants - when a document is stored with N variants, it's not clear to me which one(s) a full text search applies to. 
With some indexing systems, you don't get to choose. 
Likewise, if versioning is still in WebDAV (or should I say 'WebDA'?) then there must be some interaction with search. 
I look forward to discussing these and become more enlightened. 
PS we should carry followup discussion on www-webdav-dasl only, I think. 
