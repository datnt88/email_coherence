From: Julian Reschke [mailto:julian.reschke@gmx.de] 
Actually, I'd prefer to change/clarify multistatus error reporting to: - MUST contain response elements for each source resource that wasn't moved/copied/deleted as specified (however keeping the current optimization for 424 on ancestors) I agree. 
- MAY contain response elements for targets that caused the failure. 
That would be OK with me but I'd prefer to nest the information about targets that caused the failure in the response element for the source resource that wasn't moved/copied/deleted. 
This is a change from RFC 2518, but I think it is warranted. 
It might be woth thinking to also add some kind of linkage between the 
two response elements. 
I agree. 
That is the purpose for nesting the information about the targets that caused the failure in the response for the target that was not copied. 
Cheers, Geoff 
From: Stefan Eissing [mailto:stefan.eissing@greenbytes.de] Instead of a response plain vanilla HTTP/1.1 403 LOCKED or Julian's HTTP/1.1 409 CONFLICT I would prefer HTTP/1.1 207 MultiStatus The problem with this is that for COPY/MOVE, a server would have to list all non-copied resources as well in the multistatus. 
Something to be avoided when a precondition for a operation failed. 
Section 8.8.3 of RFC 2518 has "error minimization rules" that require/encourage a server to only return the error once for a given lock. 
So only one such error message would be included. 
So, the best of both worlds would maybe be: HTTP/1.1 403 LOCKED I don't think this degree of divergence from RFC 2518 is warranted/required. 
The error minimization rules handle this case reasonably well. 
Note: I am neutral as to whether the server returns a 423 LOCKED or a 409 CONFLICT in case an error token is being returned by the server. 
One can make reasonable arguments for either behavior (but I personally would do the latter, i.e. 409 CONLICT). 
Cheers, Geoff 
Am Montag den, 22. April 2002, um 02:40, schrieb Clemm, Geoff: 
So, as usual I propose a format which will make everyone scream and come up with a much better one. 
//Stefan 
