<s> I've noted it in the lock issues list and I suspect Jim already has it in the 2518 issue list, but in the definition section it says that lock-null resources  </s>
<s> are not listed as children of their parent... and (by omiision) cannot accept UNLOCK and PROPFIND methods.  </s>
<s> Later in the document it says the opposite.  </s>
<s> I believe the later information is correct.  </s>
<s> Based on that assumption and a "problem" I encountered with LOCK support in the  </s>
<s> Linux version of mod_dav, I'd like to propose "lock-null" as a potential value  </s>
<s> for the resourcetype property.  </s>
<s> This will give clients a predictable value there  </s>
<s> for lock-null resources.  </s>
<s> What is the "problem" in linux mod_dav?  </s>
<s> Well it claims that the lock-null resource is a collection.  </s>
<s> That's not technically incorrect.  </s>
<s> So I'd like to insure that we specify exactly what is returned for the sake of clients.  </s>
<s> And it  </s>
<s> seems like a new value would be appropriate.  </s>
<s> Could someone *pleeeassse* tell me what problem "lock null" resources are supposed to solve?  </s>
<s> I found a message from Yaron dated 3/22/98 where they appear to be introduced by an analogy with the need for "zero" when you are counting.  </s>
<s> I am not convinced (:-).  </s>
<s> If you want to "lock" a place where there is no resource, create some dummy resource there and lock that.  </s>
<s> Currently we're stuck with several paragraphs of verbiage telling us how a lock null resource behaves exactly like a regular resource except that it returns a "404" when you try to get its body.  </s>
<s> Is that feature so important that it warrants the incremental complexity and confusion that it adds to the spec?  </s>
<s> I propose that we strike all references to "lock null" resources in 2518.  </s>
<s> Note: Unlike my previous more radical non-proposal (which by the way is still what I wish we would do :-), this is a serious proposal.  </s>
<s> Cheers, Geoff  </s>
<s> We should make sure there is a DAV:resourcetype for every resource defined by the protocol.  </s>
<s> ccjason@us.ibm.com on 10/13/99 12:38:49 PM  </s>
<s> Subject: resourcetype locknull I've noted it in the lock issues list and I suspect Jim already has it in the 2518 issue list, but in the definition section it says that lock-null resources  </s>
<s> are not listed as children of their parent... and (by omiision) cannot accept UNLOCK and PROPFIND methods.  </s>
<s> Later in the document it says the opposite.  </s>
<s> I believe the later information is correct.  </s>
<s> Based on that assumption and a "problem" I encountered with LOCK support in the  </s>
<s> Linux version of mod_dav, I'd like to propose "lock-null" as a potential value  </s>
<s> for the resourcetype property.  </s>
<s> This will give clients a predictable value there  </s>
<s> for lock-null resources.  </s>
<s> What is the "problem" in linux mod_dav?  </s>
<s> Well it claims that the lock-null resource is a collection.  </s>
<s> That's not technically incorrect.  </s>
<s> So I'd like to insure that we specify exactly what is returned for the sake of clients.  </s>
<s> And it  </s>
<s> seems like a new value would be appropriate.  </s>
<s> Lock-null resources were introduced to allow a user to "reserve" a name in the namespace.  </s>
<s> That is, to sort of create the resource and lock it in a single method.  </s>
<s> Otherwise, there is a race condition between the time the resource is created and the time it is locked where some other user could get the lock or otherwise change the new resource.  </s>
<s> Lock-null resources represent an attempt to special case situations that arise from the need to have transaction semantics and stateful servers for distributed authoring.  </s>
<s> There are other cases (in the versioning spec too) where methods are overloaded with headers (control couples) to make them do something that could have been done with a number of other methods, but not atomically.  </s>
<s> There's also the argument of reducing round trips, but this is pretty limited in this case.  </s>
<s> HTTP can execute a lot of methods in a second, and authoring environments often have much lighter nonfunctional requirements that production server systems.  </s>
<s> It was a real pain to implement lock-null resources as it is full of special cases.  </s>
<s> I too would just as soon see it removed from the spec.  </s>
<s> It doesn't seem that the complexity it adds to the protocol is consistent with the potential problem it solves.  </s>
<s> But Geoff, how do you reall feel about lock-null resources?  </s>
<s> gclemm@atria.com  </s>
<s> (Geoffrey M. Clemm) on 10/13/99 01:45:57 PM Subject: Re: resourcetype locknull Could someone *pleeeassse* tell me what problem "lock null" resources are supposed to solve?  </s>
<s> I found a message from Yaron dated 3/22/98 where they appear to be introduced by an analogy with the need for "zero" when you are counting.  </s>
<s> I am not convinced (:-).  </s>
<s> If you want to "lock" a place where there is no resource, create some dummy resource there and lock that.  </s>
<s> Currently we're stuck with several paragraphs of verbiage telling us how a lock null resource behaves exactly like a regular resource except that it returns a "404" when you try to get its body.  </s>
<s> Is that feature so important that it warrants the incremental complexity and confusion that it adds to the spec?  </s>
<s> I propose that we strike all references to "lock null" resources in 2518.  </s>
<s> Note: Unlike my previous more radical non-proposal (which by the way is still what I wish we would do :-), this is a serious proposal.  </s>
<s> Cheers, Geoff  </s>
<s> resources  </s>
<s> the  </s>
<s> value  </s>
<s> there  </s>
<s> it  </s>
<s> From: jamsden@us.ibm.com  </s>
<s> Lock-null resources were introduced to allow a user to "reserve" a name in the namespace.  </s>
<s> That is, to sort of create the resource and lock it in a single method.  </s>
<s> Otherwise, there is a race condition between the time the resource is created and the time it is locked where some other user could get the lock or otherwise change the new resource.  </s>
<s> Isn't this functionally equivalent to someone getting the lock on the lock null resource between the time when you issued the lock request and the time it was handled by the server?  </s>
<s> The fact that they got the lock on the empty dummy resource you created, as opposed to a lock on a "lock null" resource doesn't seem to change the situation in any substantive way.  </s>
<s> (Jim: Since you don't like lock null resources anyway, you shouldn't feel compelled to answer this ... this question is intended for  </s>
<s> anyone who *is* in favor of lock null resources :-)  </s>
<s> Lock-null resources represent an attempt to special case situations that arise from the need to have transaction semantics and stateful servers for distributed authoring.  </s>
<s> There are other cases (in the versioning spec too) where methods are overloaded with headers (control couples) to make them do something that could have been done with a number of other methods, but not atomically.  </s>
<s> There's also the argument of reducing round trips, but this is pretty limited in this case.  </s>
<s> HTTP can execute a lot of methods in a second, and authoring environments often have much lighter nonfunctional requirements that production server systems.  </s>
<s> Yup, to all Jim says here.  </s>
<s> It was a real pain to implement lock-null resources as it is full of special cases.  </s>
<s> I too would just as soon see it removed from the spec.  </s>
<s> It doesn't seem that the complexity it adds to the protocol is consistent with the potential problem it solves.  </s>
<s> But Geoff, how do you reall feel about lock-null resources?  </s>
<s> Oh, still pretty ambivalent ... (not :-).  </s>
<s> Cheers, Geoff  </s>
<s> Consider what happens if you need to create a resource with a particular body and some particular properties.  </s>
<s> If you don't have lock-nulls (or transactions), then you do PUT, LOCK, PROPPATCH, UNLOCK (or maybe skip the LOCK/UNLOCK, since it's only protecting one operation).  </s>
<s> If you and somebody else are trying to create it at the same time, then you could get PUT1, PUT2, PROPPATCH2, PROPPATCH1, resulting in resource whose properties don't match its body.  </s>
<s> With lock-null, you can do LOCK, PUT, PROPPATCH, UNLOCK.  </s>
<s> |John Stracke | http://www.ecal.com  </s>
<s> |My opinions are my own.| |Chief Scientist |=============================================| |eCal Corp. |Never mind the GUIs--Unix won't be for the | |francis@ecal.com|masses until we fix backspace &amp; delete.  </s>
<s> |  </s>
<s> From: John Stracke francis@ecal.com  </s>
<s> Consider what happens if you need to create a resource with a particular body and some particular properties.  </s>
<s> If you don't have lock-nulls (or transactions), then you do PUT, LOCK, PROPPATCH, UNLOCK Actually, since you don't know whether or not something is there already, you'd always first try the LOCK.  </s>
<s> If the LOCK fails (because there is no resource there to LOCK), you do a PUT (with an empty body) followed by a LOCK.  </s>
<s> So what you do is:  </s>
<s> LOCK (if fail because no resource there, then PUT null-body; LOCK) PUT; PROPATCH; UNLOCK So all LOCK-NULL buys you is the avoidance of the extra PUT/LOCK in case there is no resource there yet.  </s>
<s> (or maybe skip the LOCK/UNLOCK, since it's only protecting one operation).  </s>
<s> Even if you just did a single operation, you still want the LOCK/UNLOCK to prevent another (locking) client from performing its edits using the state of the resource prior to your operation (i.e. you don't want to "lose" your operation).  </s>
<s> If you and somebody else are trying to create it at the same time, then you could get PUT1, PUT2, PROPPATCH2, PROPPATCH1, resulting in resource whose properties don't match its body.  </s>
<s> With lock-null, you can do LOCK, PUT, PROPPATCH, UNLOCK.  </s>
<s> Without lock null resources, you still wrap LOCK/UNLOCK around your sequence of operations.  </s>
<s> The only difference is that if your LOCK fails because there is no resource to LOCK, you issue a PUT with an empty body, followed by a retry of the LOCK.  </s>
<s> Note: If someone gets in ahead of you and locks the dummy resource you just created, that's no different than someone getting their lock-null LOCK request in ahead of you.  </s>
<s> Note 2: Hopefully there are some GET's and PROPFIND's mixed in with those PUT's and PROPPATCH's, or else you're going to lose the previous updates, whether or not you use LOCK's.  </s>
<s> Cheers, Geoff  </s>
<s> Consider what happens if you need to create a resource with a particular body and some particular properties.  </s>
<s> If you don't have lock-nulls (or transactions), then you do PUT, LOCK, PROPPATCH, UNLOCK (or maybe skip the LOCK/UNLOCK, since it's only protecting one operation).  </s>
<s> If you and somebody else are trying to create it at the same time, then you could get PUT1, PUT2, PROPPATCH2, PROPPATCH1, resulting in resource whose properties don't match its body.  </s>
<s> With lock-null, you can do LOCK, PUT, PROPPATCH, UNLOCK.  </s>
<s> Or similarly LOCK, DELETE (leave null lock flag), PUT, PROPATCH, UNLOCK.... ala MKRESOURCE.  </s>
<s> Or LOCK, DELETE (null lock left), COPY (tree perhaps), play, UNLOCK.  </s>
<s> Or xserver COPY... LOCK (depth), DELETE, PUT, MKCOL, PROPATCH, MKCOL, etc UNLOCK.  </s>
<s> And reduces possible error conditions in the middle of sequences of methods that a client might want to invoke.  </s>
<s> And facilitates backing things out if it has an error... because it knows what the state is and can feel safer about backing it out... (depth null lock) Question... what situations are complicated by lock null resources.  </s>
<s> I'm sure we must have covered this, but I forget what they were and I didn't record them.  </s>
<s> I'd like to record this in the issues list.  </s>
<s> Lock-null resources were introduced to allow a user to "reserve" a name in the namespace.  </s>
<s> That is, to sort of create the resource and lock it in a single method.  </s>
<s> Otherwise, there is a race condition between the time the resource is created and the time it is locked where some other user could get the lock or otherwise change the new resource.  </s>
<s> Isn't this functionally equivalent to someone getting the lock on the lock null resource between the time when you issued the lock request and the time it was handled by the server?  </s>
<s> The fact that they got the lock on the empty dummy resource you created, as opposed to a lock on a "lock null" resource doesn't seem to change the situation in any substantive way.  </s>
<s> We could eliminate lock-null resources, and keep the ability to reserve a name in the namespace if LOCK on a null resource created a resource with an empty body and locked it.  </s>
<s> Since LOCK on a null resource isn't going to respond with 404 Not Found anyway, it might as well create the resource.  </s>
<s> Or LOCK, DELETE (null lock left)... /jason DELETE on a locked resource does not result in a lock-null resource, the resource is deleted and the lock is lost.  </s>
<s> From: ccjason@us.ibm.com  </s>
<s> Or similarly LOCK, DELETE (leave null lock flag), PUT, PROPATCH, UNLOCK....  </s>
<s> ala MKRESOURCE.  </s>
<s> Or LOCK, DELETE (null lock left), COPY (tree perhaps), play, UNLOCK.  </s>
<s> Or xserver COPY... LOCK (depth), DELETE, PUT, MKCOL, PROPATCH, MKCOL, etc UNLOCK.  </s>
<s> And reduces possible error conditions in the middle of sequences of methods that a client might want to invoke.  </s>
<s> And facilitates backing things out if it has an error... because it knows what the state is and can feel safer about backing it out... (depth null lock) As Jim Amsden mentioned, according to 2518 you will lose your LOCK as soon as you issue a DELETE, so you will have to request another LOCK, and there will be a window of opportunity for someone to get in ahead of you with their LOCK.  </s>
<s> But their doing so does not introduce any lost update issues, but just says that you have to wait for them to finish instead of the other way round.  </s>
<s> This is just the normal situation in distributed authoring.  </s>
<s> Question... what situations are complicated by lock null resources.  </s>
<s> I'm sure we must have covered this, but I forget what they were and I didn't record them.  </s>
<s> I'd like to record this in the issues list.  </s>
<s> With lock null resources, a client has to think about what special thing they might need to do in case what appears to be no resource in some cases (404 coming back from a GET), appears to be a resource in other cases (PROPFIND).  </s>
<s> In particular, the client needs to indicate this fact somehow to a user when the user requests information about a collection.  </s>
<s> So it is not just the client but the user that pays a cost for this feature.  </s>
<s> If you look at it from the server side, removing lock null resources is of course an unconditional win (Jim Amsden already made that point in an earlier message).  </s>
<s> Cheers, Geoff  </s>
<s> From: jamsden@us.ibm.com  </s>
<s> We could eliminate lock-null resources, and keep the ability to reserve a name in the namespace if LOCK on a null resource created a resource with an empty body and locked it.  </s>
<s> Since LOCK on a null resource isn't going to respond with 404 Not Found anyway, it might as well create the resource.  </s>
<s> Having LOCK create a null resource as a side effect?  </s>
<s> This can't be "no control coupling" Jim Amsden talking here!  </s>
<s> (:-).  </s>
<s> But seriously, I could easily live with this proposal.  </s>
<s> Although I am aesthetically against control coupling of this kind (i.e. creating a resource and locking a resource should be two separate and orthogonal requests), I could live with it if that's what it takes to get rid of lock null resources.  </s>
<s> Cheers, Geoff  </s>
<s> But would this work if one intended to reserve a URL to create a collection?  </s>
<s> Albert Lunde Albert-Lunde@nwu.edu  </s>
<s> We could eliminate lock-null resources, and keep the ability to reserve a name in the namespace if LOCK on a null resource created a resource with an empty body and locked it.  </s>
<s> Since LOCK on a null resource isn't going to respond with 404 Not Found anyway, it might as well create the resource.  </s>
<s> Having LOCK create a null resource as a side effect?  </s>
<s> This can't be "no control coupling" Jim Amsden talking here!  </s>
<s> (:-).  </s>
<s> But seriously, I could easily live with this proposal.  </s>
<s> Although I am aesthetically against control coupling of this kind (i.e. creating a resource and locking a resource should be two separate and orthogonal requests), I could live with it if that's what it takes to get rid of lock null resources.  </s>
<s> This proposal essentially creates a resource and that resource has special properties... no guid?  </s>
<s> special resourcetype?  </s>
<s> MKCOL?.  </s>
<s> I guess that could be fine... but it also sounds like it's largely the same as our current lock null resource.  </s>
<s> At least in implementation and behavior... even if different in conceptual model.  </s>
<s> brainstorm The thing is, the goal of this isn't really to create a resource... it's to reserve the the namespace and perhaps to provide for some atomicity subsequently.  </s>
<s> The ideal would be a lock that is rooted in the slot of the parent collection where the binding resides.  </s>
<s> This doesn't fit our current data model since we never really talk about slots.  </s>
<s> This does resolve a few problems though.  </s>
<s> (No, I'm not making a proposal at this point.  </s>
<s> Just brainstorming.)  </s>
<s> Whoops, I thought I already sent this... From: ccjason@us.ibm.com  </s>
<s> Or similarly LOCK, DELETE (leave null lock flag), PUT, PROPATCH, UNLOCK....  </s>
<s> ala MKRESOURCE.  </s>
<s> Or LOCK, DELETE (null lock left), COPY (tree perhaps), play, UNLOCK.  </s>
<s> Or xserver COPY... LOCK (depth), DELETE, PUT, MKCOL, PROPATCH, MKCOL, etc UNLOCK.  </s>
<s> And reduces possible error conditions in the middle of sequences of methods that a client might want to invoke.  </s>
<s> And facilitates backing things out if it has an error... because it knows what the state is and can feel safer about backing it out... (depth null lock) As Jim Amsden mentioned, according to 2518 you will lose your LOCK as soon as you issue a DELETE, so you will have to request another LOCK, and there will be a window of opportunity for someone to get in ahead of you with their LOCK.  </s>
<s> But their doing so does not introduce any lost update issues, but just says that you have to wait for them to finish instead of the other way round.  </s>
<s> This is just the normal situation in distributed authoring.  </s>
<s> Right.  </s>
<s> That's what 2518 says.  </s>
<s> That's why I explicitly noted it.  </s>
<s> But we haven't completed the spec.  </s>
<s> The assumption is that we'd support this.  </s>
<s> If we do... we could use lock null resources in this way.  </s>
<s> See my previous postings on this.  </s>
<s> Right, deleting the lock doesn't create a lost update problem.  </s>
<s> It does cause a problem where someone else can slip in a lock, thus block you, abort themselves because what they expected there is no longer there.  </s>
<s> But of course you've already done the delete, so you've only done a partial execution and you can't really back out.  </s>
<s> You've lost atomicity.  </s>
<s> So to get around this a client app might do a MOVE instead of a delete... so at least it has a chance of backing out your change, but once again someone else's lock can block it even if it's a temporary lock.  </s>
<s> As you see... this type of atomicity is not achievable without the this type of lock.  </s>
<s> Question... what situations are complicated by lock null resources.  </s>
<s> I'm sure we must have covered this, but I forget what they were and I didn't record them.  </s>
<s> I'd like to record this in the issues list.  </s>
<s> With lock null resources, a client has to think about what special thing they might need to do in case what appears to be no resource in some cases (404 coming back from a GET), appears to be a resource in other cases (PROPFIND).  </s>
<s> In particular, the client needs to indicate this fact somehow to a user when the user requests information about a collection.  </s>
<s> So it is not just the client but the user that pays a cost for this feature.  </s>
<s> Interesting.  </s>
<s> I'll note that... and give it more thought.  </s>
<s> JimA just posted a proposal that would resolve this.  </s>
<s> Something about giving the null resource a body.  </s>
<s> To some extent... it no longer would be a null resource then though.  </s>
<s> More thought.  </s>
<s> If you look at it from the server side, removing lock null resources is of course an unconditional win (Jim Amsden already made that point in an earlier message).  </s>
<s> I'll look for that posting and list it here.  </s>
<s> From: Albert-Lunde@nwu.edu (Albert Lunde)  </s>
<s> But would this work if one intended to reserve a URL to create a collection?  </s>
<s> Albert is of course right.  </s>
<s> So I can no longer live with Jim's proposal (:-).  </s>
<s> So I'm back to:  </s>
<s> - return a 404 if there is no resource to LOCK, - let the client create a "null" instance of what it wants there, - then the client locks that null instance and it is off and running.  </s>
<s> Cheers, Geoff  </s>
<s> Geoff, That's exactly how I feel about it too.  </s>
<s> With MKRESOURCE, perhaps even PUT shouldn't create resources as a side effect, but we have to be compatible with HTTP conventions.  </s>
<s> "Geoffrey M. Clemm" gclemm@tantalum.atria.com on 10/14/99 10:23:30 AM Subject: Re: resourcetype locknull From: jamsden@us.ibm.com  </s>
<s> We could eliminate lock-null resources, and keep the ability to reserve a name in the namespace if LOCK on a null resource created a resource with an empty body and locked it.  </s>
<s> Since LOCK on a null resource isn't going to respond with 404 Not Found anyway, it might as well create the resource.  </s>
<s> Having LOCK create a null resource as a side effect?  </s>
<s> This can't be "no control coupling" Jim Amsden talking here!  </s>
<s> (:-).  </s>
<s> But seriously, I could easily live with this proposal.  </s>
<s> Although I am aesthetically against control coupling of this kind (i.e. creating a resource and locking a resource should be two separate and orthogonal requests), I could live with it if that's what it takes to get rid of lock null resources.  </s>
<s> Cheers, Geoff  </s>
<s> From: ccjason@us.ibm.com ... according to 2518 you will lose your LOCK as soon as you issue a DELETE, so you will have to request another LOCK, and there will be a window of opportunity for someone to get in ahead of you with their LOCK.  </s>
<s> But their doing so does not introduce any lost update issues, but just says that you have to wait for them to finish instead of the other way round.  </s>
<s> This is just the normal situation in distributed authoring.  </s>
<s> Right.  </s>
<s> That's what 2518 says.  </s>
<s> That's why I explicitly noted it.  </s>
<s> But we haven't completed the spec.  </s>
<s> The assumption is that we'd support this.  </s>
<s> If we do... we could use lock null resources in this way.  </s>
<s> See my previous postings on this.  </s>
<s> Fair enough.  </s>
<s> I was criticizing lock null resources as they are defined in 2518.  </s>
<s> Any attempt I have seen to improve the semantics of lock null resources ends up fixing some problems at the cost of even greater complexity.  </s>
<s> So I'm not saying that they don't solve any interesting problems (they do), but rather that the cost of providing them outweighs the benefits they provide.  </s>
<s> Question... what situations are complicated by lock null resources.  </s>
<s> I'm sure we must have covered this, but I forget what they were and I didn't record them.  </s>
<s> I'd like to record this in the issues list.  </s>
<s> With lock null resources, a client has to think about what special thing they might need to do in case what appears to be no resource in some cases (404 coming back from a GET), appears to be a resource in other cases (PROPFIND).  </s>
<s> In particular, the client needs to indicate this fact somehow to a user when the user requests information about a collection.  </s>
<s> So it is not just the client but the user that pays a cost for this feature.  </s>
<s> Interesting.  </s>
<s> I'll note that... and give it more thought.  </s>
<s> JimA just posted a proposal that would resolve this.  </s>
<s> Something about giving the null resource a body.  </s>
<s> To some extent... it no longer would be a null resource then though.  </s>
<s> Albert's point (in my opinion) squelched that proposal (:-).  </s>
<s> Unless you allow MKRESOURCE to "mutate" a resource to a new resource type, you will have to delete the resource created by LOCK in order to get the right resource type, and if we hold to the model that LOCK's are on resources (not URL's), then when that old resource is deleted, it's lock cannot be inherited by some new resource at that same URL.  </s>
<s> Now I suppose we *could* just say that you can use MKRESOURCE to "mutate" a resource of one type into a resource of another type, but that's probably a cure that is worse than the disease ... (:-).  </s>
<s> Cheers, Geoff  </s>
<s> No it wouldn't, unless we did something with URLs ending in /.  </s>
<s> Getting ugly isn't it.  </s>
<s> Albert-Lunde@nwu.edu (Albert Lunde) on 10/14/99 11:23:04 AM Please respond to Albert-Lunde@nwu.edu (Albert Lunde) Subject: Re: resourcetype locknull  </s>
<s> But would this work if one intended to reserve a URL to create a collection?  </s>
<s> Albert Lunde Albert-Lunde@nwu.edu  </s>
<s> That's good to hear ... that means the body-snatchers didn't get you after all (:-).  </s>
<s> I'm actually not as concerned about PUT and MKRESOURCE being allowed to both create and update resources, since they both know what kind of resource should be there when they are done.  </s>
<s> I think LOCK is very different because you *can't* infer from the LOCK call what kind of resource should be created if none is there at the moment.  </s>
<s> Cheers, Geoff From: jamsden@us.ibm.com  </s>
<s> Geoff, That's exactly how I feel about it too.  </s>
<s> With MKRESOURCE, perhaps even PUT shouldn't create resources as a side effect, but we have to be compatible with HTTP conventions.  </s>
<s> "Geoffrey M. Clemm" gclemm@tantalum.atria.com on 10/14/99 10:23:30 AM Having LOCK create a null resource as a side effect?  </s>
<s> This can't be "no control coupling" Jim Amsden talking here!  </s>
<s> (:-).  </s>
<s> gmc So I'm back to:  </s>
<s> gmc - return a 404 if there is no resource to LOCK, gmc - let the client create a "null" instance of what it wants there, gmc - then the client locks that null instance and it is off and running.  </s>
<s> 1. There is a Very Popular Client which does just about this when creating a new resource.  </s>
<s> 2. The main problem with "lock null resources" is that the spec is a little weak on exactly what they are.  </s>
<s> That causes me as a server implementor to try to think too hard, when instead I could be having a delicious latte on the veranda.  </s>
<s> To my mind, this really reduces the chances of most servers ending up with compatible semantics for this. 3. OK, how about this implementation?  </s>
<s> I grant "lock null resource" requests, but my server has discretion to vaporize the locks whenever it wants, and it wants to vaporize them one clock tick after it creates them.  </s>
<s> Bwahh-ha-ha-ha!  </s>
<s> Take that, pesky clients!  </s>
<s> :-) 4. I run a lot of applications every day that work with my local filesystem, and they seem to cope without the equivalent of "lock null resource".  </s>
<s> If there is a namespace collision, which there often is, I, as a user, deal with that (including the occasional walk to educate Wally in the next cubicle).  </s>
<s> It's an everyday occurrence.  </s>
<s> That's what open() with the O_EXCL flag is all about, right?  </s>
<s> Could it be paralleled in WebDAV with either (a) expanded use of the OVERWRITE: header, or (b) HTTP/1.1 PUT, etc, with "IF-NONE-MATCH: *"? bill@carpenter.ORG  </s>
<s> (WJCarpenter) PGP bill@bubblegum.net  </s>
<s> 0x91865119 38 95 1B 69 C9 C6 3D 25 73 46 32 04 69 D6 ED F3  </s>
<s> gmc So I'm not saying that they don't solve any interesting problems gmc (they do), but rather that the cost of providing them outweighs gmc the benefits they provide.  </s>
<s> Back when this was invented, someone must've thought there were scenarios where it was pretty important to be able to reserve namespace to be used later.  </s>
<s> Would someone care to lay out some scenarios where this is pretty important?  </s>
<s> (I'm not disputing it.  </s>
<s> Just looking for an education.) bill@carpenter.ORG  </s>
<s> (WJCarpenter) PGP bill@bubblegum.net  </s>
<s> 0x91865119 38 95 1B 69 C9 C6 3D 25 73 46 32 04 69 D6 ED F3  </s>
<s> This is a pretty good restatement of the original rationale for lock-null resources.  </s>
<s> Given the preponderance of evidence that indicates this is a difficult feature to implement, and since the arguments claiming that the feature is not strictly necessary appear to be sound, I would be happy to remove this feature as we move from Proposed to Draft standard, assuming that doing so does not create any interoperability problems.  </s>
<s> Yaron's currently on vacation, he may wish to defend this feature when he returns.  </s>
<s> I'm certainly not going to, unless I hear a compelling counter argument.  </s>
<s> - Jim  </s>
<s> Given the preponderance of evidence that indicates this is a difficult feature to implement, Jim, could you point me to that evidence.  </s>
<s> Earlier today Geoff defered that question to a note he said JimA wrote.  </s>
<s> I did a search for it and didn't find it.  </s>
<s> The best I've been able to find is simply folks saying it's hard... but not explaining why.  </s>
<s> I'd like to document this.  </s>
<s> From: ccjason@us.ibm.com  </s>
<s> Given the preponderance of evidence that indicates this is a difficult feature to implement, Jim, could you point me to that evidence.  </s>
<s> Earlier today Geoff defered that question to a note he said JimA wrote.  </s>
<s> I did a search for it and didn't find it.  </s>
<s> The best I've been able to find is simply folks saying it's hard... but not explaining why.  </s>
<s> I'd like to document this.  </s>
<s> Jason: Both Jim and I were referring to the fact the server writers that have contributed to this thread have said that lock null resources were unpleasant/hard to implement, and that they'd prefer to see them removed from the spec.  </s>
<s> You are correct the reasons for why it was hard were not detailed.  </s>
<s> My arguments have largely been focused on the fact that they don't do much for a client, and in some ways can make life harder for both clients and users.  </s>
<s> As a server writer, the following are some of the problems with lock null resources: They don't act like normal resources.  </s>
<s> They return 404's to a GET as if they didn't exist, but show up in PROPFIND's.  </s>
<s> Are they a binding, and therefore part of the state of a collection, or something else?  </s>
<s> If you have a versioning server, do you have to checkout a collection in order to add a lock-null resource to it, or not?  </s>
<s> If you checkin a versioned collection that has a lock-null resource in it, does that make that lock-null resource "immutable" (whatever that means)?  </s>
<s> Do you have to checkout the versioned collection in order to remove a lock-null resource from it?  </s>
<s> When you do a DELETE, does that delete the lock-null resource at that spot, or does it leave it alone?  </s>
<s> When you DELETE a locked resource, should it delete the lock, or leave a lock-null resource in its place?  </s>
<s> Those are a few of the questions that a server writer must answer, and then hope that the client writers are expecting that behavior.  </s>
<s> And then the server writer has to figure out how to model this behavior with their underlying implementation objects.  </s>
<s> Let me know if you'd like more ... (:-).  </s>
<s> Cheers, Geoff  </s>
<s> For collections, this doesn't work properly with your/Alan's proposal for static depth locking.  </s>
<s> If I'm creating a collection, I do LOCK (404), MKCOL, LOCK--but this LOCK only locks the resources that are there now (i.e., none).  </s>
<s> So anybody else is free to come along and add new resources, and my lock means nothing.  </s>
<s> For collections that are meant to model compound documents or some such, where the entire state of the collection needs to be treated as a unit, this is a Bad Thing.  </s>
<s> |John Stracke | http://www.ecal.com  </s>
<s> |My opinions are my own.| |Chief Scientist |=============================================| |eCal Corp. |Illiterate?  </s>
<s> Write today for free help!  </s>
<s> | |francis@ecal.com| |  </s>
<s> From: John Stracke francis@ecal.com  </s>
<s> For collections, this doesn't work properly with your/Alan's proposal for static depth locking.  </s>
<s> If I'm creating a collection, I do LOCK (404), MKCOL, LOCK--but this LOCK only locks the resources that are there now (i.e., none).  </s>
<s> Your lock on the collection locks the state of that collection, i.e. the bindings.  </s>
<s> That means that only someone with the lock can modify the state of that collection, such as adding new bindings to it.  </s>
<s> So anybody else is free to come along and add new resources, and my lock means nothing.  </s>
<s> Not unless they have the lock.  </s>
<s> See above.  </s>
<s> For collections that are meant to model compound documents or some such, where the entire state of the collection needs to be treated as a unit, this is a Bad Thing.  </s>
<s> As long as you partition the compound object clearly into disjoint pieces, and provide a mechanism for locking each of those pieces (including the pieces that glue the other pieces together, i.e. the collections!), then you can effectively treat it as a unit by locking "every piece".  </s>
<s> The problem with the current state of locking in 2518 is that the various locks overlap in various complex ways, making the interaction between locks hard for clients to predict and hard for servers to implement.  </s>
<s> But I think that we can adjust the protocol to remove this locking overlap in a way that makes it largely consistent with the existing clients and servers.  </s>
<s> Cheers, Geoff  </s>
<s> running.  </s>
<s> Huh? In your original post about static depth locking you say: Here is (what I consider) to be an extremely sensible proposal from Alan Babich (from a few months ago).  </s>
<s> He basically says that if you are going to do depth locking, it should be static, i.e. it should be a lock on the current members of the collection.  </s>
<s> If you MOVE things into and out of collections (because you have the appropriate lock tokens for the appropriate collections), it has no effect on the locks on those resources.  </s>
<s> Lock the CURRENT members of the collection.  </s>
<s> I believe that is what John was commenting on.  </s>
<s> This is giving me a headache :-) -David  </s>
<s> My "summary" of the proposal was too terse.  </s>
<s> When I said: "if you are going to do depth locking, it should be static, i.e. it should be a lock on the current members of the collection" I should have said: "... it should be a lock on the collection and its current members" So every successful LOCK locks at least one resource (with no Depth header, it is exactly one resource).  </s>
<s> A key point here (which I managed to successfully obscure :-) is that a collection is a distinct resource, and a lock on the collection is independent of a lock on any of its members (separate resources, separate locks).  </s>
<s> And to emphasize, a DELETE and a MOVE are modifications to the state of the collection containing the resource being deleted/moved.  </s>
<s> For a MOVE, it is also a modification to the state of the collection containing the Destination of the move.  </s>
<s> In either case, it is not a modification to the state of the resource being deleted/moved.  </s>
<s> Cheers, Geoff From: "David Motes" david@pentaventures.com  </s>
<s> Huh? In your original post about static depth locking you say: Here is (what I consider) to be an extremely sensible proposal from Alan Babich (from a few months ago).  </s>
<s> He basically says that if you are going to do depth locking, it should be static, i.e. it should be a lock on the current members of the collection.  </s>
<s> If you MOVE things into and out of collections (because you have the appropriate lock tokens for the appropriate collections), it has no effect on the locks on those resources.  </s>
<s> Lock the CURRENT members of the collection.  </s>
<s> I believe that is what John was commenting on.  </s>
<s> This is giving me a headache :-) -David  </s>
<s> Uh, something has been taken out of context.  </s>
<s> In Alan Babich's proposal (which I favor a LOT), the depth-0 exclusive lock on the collection arranges that only the lock holder can add or delete members.  </s>
<s> Even with a depth-1 exclusive lock (which prevents alteration of existing immediate members by anyone but the lock holder) there is no problem about new members.  </s>
<s> The lock holder creates them with an exclusive lock and then inserts them in the exclusively-locked collection.  </s>
<s> This provides more than one lock to remove ultimately, but no one said this was effortless.  </s>
<s> (A multi-lock unlock-any-of-these operation would be handy and a boon to clients without doing much to server's in Alan's simply-deterministic unlock model.)  </s>
<s> If you look at the combinatorial complexity and housekeeping requirements, I say this will be an easy winner so long as depth locking is important.  </s>
<s> The fact that you can explain this simple model -- and people can still misread it -- says a lot about what you are saddled with in 2518.  </s>
<s> It takes something to implement the Babich model without literally implementing the invariants of Alan's proposal, and that tells you something about 2518's current model too.  </s>
<s> I'd say you win simply on the reduced complexity of validation and regression confirmation of an implementation.  </s>
<s> For me, being able to explain it and understand its deterministic behavior under all conditions is the key element.  </s>
<s> (Yes, I am treating LOCK NULL as orthogonal to this model.) -- Dennis Dennis E. Hamilton [mailto:w3c-dist-auth-request@w3.org]On  </s>
<s> Behalf Of David Motes -----Original Message-----  </s>
<s> running.  </s>
<s> Huh? In your original post about static depth locking you say: Here is (what I consider) to be an extremely sensible proposal from Alan Babich (from a few months ago).  </s>
<s> He basically says that if you are going to do depth locking, it should be static, i.e. it should be a lock on the current members of the collection.  </s>
<s> If you MOVE things into and out of collections (because you have the appropriate lock tokens for the appropriate collections), it has no effect on the locks on those resources.  </s>
<s> Lock the CURRENT members of the collection.  </s>
<s> I believe that is what John was commenting on.  </s>
<s> This is giving me a headache :-) -David  </s>
<s> John, Locking a collection means users that do not own the lock cannot modify the collection.  </s>
<s> That is, they cannot add or remove members and cannot modify the collections properties.  </s>
<s> John Stracke francis@ecal.com on 10/15/99 09:44:50 AM Subject: Re: resourcetype locknull  </s>
<s> For collections, this doesn't work properly with your/Alan's proposal for static depth locking.  </s>
<s> If I'm creating a collection, I do LOCK (404), MKCOL, LOCK--but this LOCK only locks the resources that are there now (i.e., none).  </s>
<s> So anybody else is free to come along and add new resources, and my lock means nothing.  </s>
<s> For collections that are meant to model compound documents or some such, where the entire state of the collection needs to be treated as a unit, this is a Bad Thing.  </s>
<s> |John Stracke | http://www.ecal.com  </s>
<s> |My opinions are my own.| |Chief Scientist |=============================================| |eCal Corp. |Illiterate?  </s>
<s> Write today for free help!  </s>
<s> | |francis@ecal.com| |  </s>
