Hi all, I'm Gino Tesei and I'm new both this mailing list and XML Signature Technology. 
I'm sorry in advance for possible technical inaccuracies. 
I'd like to have your opinions about the maturity of XML Signature Technology for real big projects with very strict legal reaquirements. 
Just two words to introduce a possible business scenario &amp; some functional requirements. 
Let say that the "big" Bank (BB) want to publish a set of services (Web Services) for "smaller" (SS) banks, for a set of business reasons. 
For instance, in our SOA conceptual model a possible service can be Pay with Credit Card  in cc_num . 
SS's customers have, hence, the possibility of paying with a their (normal) credit card, but SS don't communicate directly with Credit Card providers for all finer grained services to implement the above function (e.g. "is such a number a valid &amp; correct CC card number?" or "is such a valid CC card number related to the given customer?"), but use BB as "a proxy" service provider. 
Obviously, such a service will be not free :) ... Now, in order to get the non-repudiation capability we have to handle signatures. 
Possible options are handling signatures at application level (e.g. using J2SE support) or using XML Signature. 
Both solutions can work but (Applic Level) developers have to write code by their hands to handle digests, signatures, certs, ... it's suitable having a self made framework ... new business partners have to agree to such a "self made standard", ... (XML Signature) developers use a (Java?) implemetation of standard ... no a self made framework is required ... new business partners agree to XML Signature ... It's obvious that if XML Signature is mature enough (implementations robust, easy to use, integrated with IDEs or dev frameworks such as J2SE ... ) the latter is the best solution ... 
What's your opinion about such issues? 
What's new in six months? 
Thanks in advance. 
Gino Tesei Gino Tesei Senior Consultant Ekar - Altran Group Via G. Modena, 10 - 20129 MILANO, ITALY 
Hi Gino, My first impression to your question would be: "Why choose XML Signature to begin with?" 
XML Signature is great for situations where XML data must be selectively 
signed based on XML document 
subsets. 
The situation that you have described doesn't immediately point to a multi-hop signing environment with multiple intermediate signers. 
Alternatively, if you are in a situation where you want to authenticate function calls (e.g. a 'true' XML-based Web Service enviornment), you are 'stuck' with the W3C XML Signature in some form another (either the raw standard itself or its use in WS-Security Core). 
What types of document artifacts do you need to authenticate? 
Are these function call 'representations' or documents of some format? 
Of all the XML Security standards, XML Signature is certainly the most mature, but there are some important security concerns to be careful of, especially with regards to transformations. 
Blake Dournaee Senior Architect Sarvega, Inc. 
Gino, Of all the XML Security standards, XML DSIG is the oldest; it is also the cornerstone of almost all the others (e.g., WS-Security, signed SAML assertions, etc.) 
XML DSIG is being used in the real world for real financial transactions. 
For example RouteOne is doing online auto loan 
applications for some of the world's biggest auto manufacturers, and using XML DSIG to make binding commitments between lendor and customer. 
Their web site is http://www.routeone.com, 
although the site doesn't show that they're actually in production and they are; more details are available at Many vendors have XML DSIG libraries, and there are some open source packages in (at least) C and Java. 
These libraries don't free the application program of all the details -- securing keys, for example, is often a big concern. 
Several companies (mine included; see URLs below) have network devices that add XML security features as either a true network device, or a set of software running as a software proxy. 
XML DSIG, as supported by WS-Security (i.e., signing SOAP messages) is the way to go. 
There are still security issues (implementation, implications of canonicalization, etc.) that will need some analysis 
on your side. 
In six months, toolkits will be widespread, companies 
like mine will be more popular, and WS-I will have a draft profile that offers solid interop guidance on WS-Security and XML DSIG. 
Also, in the greater Boston area it will be cloudy with a chance of rain and temperatures around 68 Fahrenheit. 
:) Hope this helps. 
/r$ Rich Salz Chief Security Architect DataPower Technology http://www.datapower.com 
XS40 XML Security Gateway http://www.datapower.com/products/xs40.html 
XML Security Overview http://www.datapower.com/xmldev/xmlsecurity.html 
I would say 3D-Secure is a prime example of widely used protocol based on 
XML-Signature. 
Since 3D-Secure is all about credit-card processing, you 
might want to take a look at it. 
One can extend 3D-Secure to support the kind of transaction you described. 
Timeline might be a little longer than six months, but direct hardware support for 3D-Secure is coming. 
For example, a chip that can parse, encrypt, decrypt, canonicalize, sign, and validate XML would be very useful as well as marketable since the market has started to realize that XML/Crypto combo throw a wrench into Google-like approaches to scalability. 
Best, Don Park 
I thought about that, but unfortunately because they tag one of their "id" attributes as CDATA, and don't use legal ID-style naming. 
Therefore, while 3D-Secure is *very close* to XML DSIG, it's not conformant. 
:( 
/r$ Rich Salz Chief Security Architect DataPower Technology http://www.datapower.com 
XS40 XML Security Gateway http://www.datapower.com/products/xs40.html 
XML Security Overview http://www.datapower.com/xmldev/xmlsecurity.html 
I think that is just a bug in the 3D-Secure DTD which was pulled out of the spec before it was published. 
As to why anyone would generate invalid ID, I 
have no idea. 
Don Park 
From: Rich Salz [mailto:rsalz@datapower.com] Sent: Saturday, October 18, 2003 6:35 PM Subject: RE: How much XML Signature is mature? 
It was not pulled out. 
It's in the current official spec you can download from Visa's website. 
Moreover, I know that several people (including myself) contacted Visa guys about this 
problem but the response basically was "we don't care". 
As to why anyone would generate invalid ID, I have no idea. 
I haven't seen the code that does this but I bet that it generates N random bytes, base64 encodes them and result string is called "ID attribute". 
Of course, such strings could not be used as ID 
attributes (may start with number, may contain '+', etc.). 
Aleksey Sanin XML Security Library http://www.aleksey.com/xmlsec 
It's actual a slightly subtle point. 
It's disappointing; they refuse to fix it. 
/r$ Rich Salz Chief Security Architect DataPower Technology http://www.datapower.com 
XS40 XML Security Gateway http://www.datapower.com/products/xs40.html 
XML Security Overview http://www.datapower.com/xmldev/xmlsecurity.html 
I must have missed that. 
I think they care to a degree, but they probably decided that it wasn't important enough to change the spec at this point since most 3D-Secure implementations do not use validating parsers. 
They should have issued a 
'heads-up' message to implementers so the problem can be contained for future fix though. 
If so, then I think there might have been some security concern raised that mandated use of random IDs. 
If so, then they should have at least replaced ID and IDREF in the DTD with CDATA. 
Don Park 
I am not sure I understand your point about validating parsers. 
The reason why there are resrtrictions for ID attributes are exactly the same as why there are restrictions for the variable names in all known to me programming languages. 
ID attribute might be included in a complex XPath/XPointer expression 
and you have to be able to understand what "123+123" means: is it "123" + "123" or this is an ID attribute. 
Aleksey 
I would re-phrase this a little bit: 3D-Secure specs are *very close* to XML, it's not conformant. 
Aleksey 
While I understand your point, ID syntax is a validation constraint, not a well-formedness constraint. 
3D-Secure specs are *very close* to XML, it's not conformant. 
Please explain what you mean by "very close" and "not conformant" in more detail. 
As far as I know 3D-Secure is well-formed XML so you must have a different definition of what XML is. 
Best, Don Park 
3D-Secure specs are *very close* to XML, it's not conformant. 
What I meant is that not only XML DSig but several other specs including XPath and XInclude 
were also broken by 3D Secure. 
Aleksey 
In other words, interop doesn't matter as long as you comply with their spec. 
That's a lousy attitude. 
If I weren't in polite company, I'd use a more fecal term. 
:) 
That's what they did -- their attribute is defined as CDATA. 
But then they use that attribute as the target of a dsig:Reference/@URI attribute, and that's non-conformant. 
According to the XPointer spec, "barewards" must be XML ID's, not XML CDATA. 
Several of us took a bit of time to explain this, including pointing to the relevant specs. 
They're attitude is "oh, well." 
Or, less charitably "too bad." 
It's a fairly small fix, just limiting the alphabet used to generate the attributes, and their unwillingness to fix it is surprising. 
Perhaps you could also mention this to them -- your voice might get more attention then some others. 
And you might want to mention to the hardware folks you alluded to that they should be careful about burning non-complaince into their silicon. 
:) Perhaps they could accept broken signatures, but makes sure that the reference targets they generate are compliant as XML ID attributes. 
/r$ Rich Salz Chief Security Architect DataPower Technology http://www.datapower.com 
XS40 XML Security Gateway http://www.datapower.com/products/xs40.html 
XML Security Overview http://www.datapower.com/xmldev/xmlsecurity.html 
I agree with that statement. 
Best, Don Park 
Unfortunately, I no longer have direct influence on the 3D-Secure protocol and don't know who their XML expert is at this point. 
Re hardware folks, I'll do what I can but I can't promise I'll jump up and down over this. 
IMHO, these issues are of little importance to Visa, issuers, and merchants because there are not enough incentives for them to correct these problems 
at this time. 
Why in the world would a merchant want to pull down their system for even ten minutes so XML experts can sleep at night? 
Yes, I am guilty of having a bad attitude. 
Maybe I got infected... 
Best, Don Park 
If you think that all possible code to support 3D Secure is already done and nobody working on this these days then you are wrong. 
Just search xmlsec library mailing list and see how many guys run into this problem in the last couple months. 
And as someone pointed out, the security implications of this error are not clear. 
Anyway, I think that Visa can invent *any* protocol they want. 
The only problem I have is that they state that this protocol is based on XML, XPath, XInclude, XML DSig and so on. 
As we already agreed, this is not the case. 
They just need to remove mention of XML DSig from their papers and 
everyone would be happy :) 
Aleksey Sanin XML Security Library http://www.aleksey.com/xmlsec 
Because maybe they'd like to avoid vendor lock-in? 
Because maybe, e.g., they'd like standard MSFT .NET tools to be able to verify 3DSecure signatures? 
Or IBM Websphere? 
Etc... /r$ Rich Salz Chief Security Architect DataPower Technology http://www.datapower.com 
XS40 XML Security Gateway http://www.datapower.com/products/xs40.html 
XML Security Overview http://www.datapower.com/xmldev/xmlsecurity.html 
Why did they use XML to begin with? 
Don, scratch Rich's suggestion -- why don't you just tell them to base64-encode SET, wrap it in some angle-brackets, and carry on as before. 
;-) What the hell is the point of using XML specs if you don't intend it to interoperate? 
As someone who already has hardware that does XML crypto, I'm unimpressed that special breaking of the standard is required for either hardware support or security. 
Aleksey, actually, that's a good suggestion -- maybe the W3C would like to take this up? 
To the original questioner, this whole thread should provide much-needed confirmation that XML DSIG is so mature, that a whole bunch of people are already cranky about some implementations not being properly compliant, and others have had time to develop a bad attitude. 
That's a mark of a mature standard! 
\\ Eugene Kuznetsov, Chairman &amp; CTO \\ eugene@datapower.com 
\\ DataPower Technology, Inc. \\ http://www.datapower.com - XS40 XML Security Gateway 
I have to agree with this one also. 
*chuckle* Don Park 
Calculating the DigestValue over an Object URIThis has been a great discussion. 
I'd just add in reference to Gino's original note that, I would expect that the web service he describes to potentially encompass authorization, multi-reference and multiple digital signatures. 
Even noting that though XML Signature and SAML are comfortably mature, WS-Security is (hopefully) just about to give birth to its first official standards, it would be a pretty safe bet that using an XML Signature/WS-Security/SAML(?) architecture is going to be a lot less expensive and much more future-proof than a roll-your-own approach. 
(Note that everything I've said here is based on a very cursory and limited analysis; a real recommendation would be based on a much more thorough review of the particular situation.) Regards, Ed Ed Simon (613) 726-9645 XMLsec Inc. Interested in XML Security Consulting and Training services? 
Visit "www.xmlsec.com". 
Now available! 
"Web Services Security" published by Osborne (ISBN 0072224711) Hi all, I'm Gino Tesei and I'm new both this mailing list and XML Signature Technology. 
I'm sorry in advance for possible technical inaccuracies. 
I'd like to have your opinions about the maturity of XML Signature Technology for real big projects with very strict legal reaquirements. 
Just two words to introduce a possible business scenario &amp; some functional requirements. 
Let say that the "big" Bank (BB) want to publish a set of services (Web Services) for "smaller" (SS) banks, for a set of business reasons. 
For instance, in our SOA conceptual model a possible service can be Pay with Credit Card  in cc_num . 
SS's customers have, hence, the possibility of paying with a their (normal) credit card, but SS don't communicate directly with Credit Card providers for all finer grained services to implement the above function (e.g. "is such a number a valid &amp; correct CC card number?" or "is such a valid CC card number related to the given customer?"), but use BB as "a proxy" service provider. 
Obviously, such a service will be not free :) ... Now, in order to get the non-repudiation capability we have to handle signatures. 
Possible options are handling signatures at application level (e.g. using J2SE support) or using XML Signature. 
Both solutions can work but (Applic Level) developers have to write code by their hands to handle digests, signatures, certs, ... it's suitable having a self made framework ... new business partners have to agree to such a "self made standard", ... (XML Signature) developers use a (Java?) implemetation of standard ... no a self made framework is required ... new business partners agree to XML Signature ... It's obvious that if XML Signature is mature enough (implementations robust, easy to use, integrated with IDEs or dev frameworks such as J2SE ... ) the latter is the best solution ... What's your opinion about such issues? 
What's new in six months? 
Thanks in advance. 
Gino Tesei Gino Tesei Senior Consultant Ekar - Altran Group Via G. Modena, 10 - 20129 MILANO, ITALY 
As a belated aside, I'm not sure there's much the W3C could do. 
They never made any representation to me, (I didn't have contact with them, but heard of it from you! 
smile/ ), didn't ask to be listed on the site, didn't send in an interop report. 
So the W3C can't threaten removal from any of that stuff. 
*If* somewhere they claim they are conformant to W3C (r) specifications, perhaps a trademark issue could be raised there [1], but that has the potential of them simply removing "W3C" if they aren't inclined to do anything. 
[1] http://www.w3.org/Consortium/Legal/2002/trademark-license-20021231 
