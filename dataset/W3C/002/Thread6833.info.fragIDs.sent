Ian and I have been thinkng about how to make tools that we can use for generating specs. 
In making the Authoring Tool Accessibility Guidelines we do a bunch of little tricks with different scripts which have been heavily adapted from the scripts used to generate the CSS2 spec, and we were looking at changing some of them. 
I thought I'd throw this open, and therefore exlpain a bit about how we do what we do, and what that is. 
The scripts that we now use can be found at /afs/w3.org/pub/WWW/WAI/AU/Group/wai-authtools-src/ 
Some background: 
There is a single document that forms the source of the Guidelines, the 
Techniques document, and is used to generate some of the conformance evaluations, the checklist of checkpoints. 
The conformance evaluations and checklists have blank templates into which we add the content - the techniques and guidelines documents are generated completely from the source. 
We do some useful tricks: references are in a DL at the end of the source documet, and anything in a body that looks like [[something]] is replaced by an appropriate reference (at the moment there are no inline direct links, only to to the reference section, which is something I would likeot change). 
The references that are used in a given document are kept there and the rest are dropped. 
Definitions are handled similarly - anything that links to something called def-anything means that the definition item whose DT is an A with the name def-anything gets kept, and a link rel="glossary" is inserted. 
It would make more sense to me if we started by picking things that were linked rel="glossary" - then I could style it. 
There are sections for the techniques or guidelines only. 
These have a class applied, and I use a user stylesheet and Amaya to figure out which is what. 
Similarly there are classes for checkpoints of various conformance evaluations, since the easiest way to do one is against the guidelines. 
I would like to be able to separate this out and do it from a checklist - I suspect that isn't actually too difficult. 
Now we are moving from using sed-type substitutions to remove things to using IFDEF sections in comments, since then we can deal with things that are nested more easily. 
In fact I would like to use an XSLT or some DOM programming to do this, since having the ifdef means our source document becomes invalid (eg it has two titles), although we may be able to solve that one, and more seriously that I can't use classes or style to see different pieces, and have to go back to editing the source (at which point it's easier to do it in something other than HTML) Chaals W3C Web Accessibility Initiative http://www.w3.org/WAI 21 Mitchell Street, Footscray, VIC 3011, Australia (I've moved!) 
Er... I happen to know that that corresponds to but I get "Sorry, Forbidden." there (either because there's no index.html 
or because of our general */Group/* rule, I suspect). 
spec-prod is a public forum; if you want folks here to be able to follow pointers, make them point to publicly readable stuff, please. 
Dan Connolly 
Whoops - sorry. 
I'll figure out how to make them generaly available. 
Charles 
Er... I happen to know that that corresponds to but I get "Sorry, Forbidden." there (either because there's no index.html 
or because of our general */Group/* rule, I suspect). 
spec-prod is a public forum; if you want folks here to be able to follow pointers, make them point to publicly readable stuff, please. 
Dan Connolly W3C Web Accessibility Initiative http://www.w3.org/WAI 21 Mitchell Street, Footscray, VIC 3011, Australia (I've moved!) 
Some of the things you're describing sound like they can already be done (after a fashion) with the XMLspec DTD and the appropriate XSL stylesheet, so you may want to consider authoring your specs in XML and then transforming to HTML. 
For example, XMLspec has a bibref element you can use inline, which links (by means of an IDREF) to a bibliography entry in the back. 
Using one of the several XSL stylesheets people have written, this turns into an HTML A; plus, you get the validation that your bibliography reference points to something real. 
Another handy thing is the issue element, which assigns a label to all issues and then collects references to the issues at the end of the document. 
Ben Trafford (copied here) has been sporadically working on an XSL stylesheet that supports the complete XMLspec DTD, and I'm hoping it can be the start of an "official" W3C stylesheet for those who choose to use it. 
For more information about XMLspec, see: Happy holidays, Eve 
Eve Maler Sun Microsystems elm @ east.sun.com +1 781 442 3190 
The Math working group has some experience with the XMLspec DTD, and we also have the experience that a lot can be done with the markup this DTD defines and appropriate style sheets. 
Daivd Carlisle developed two style sheets (one for HTML, one for LaTeX), based on earlier work by Eduardo Gutentag. 
We produce the MathML 2.0 Specification drafts with it, and are quite pleased about the results so far. 
We can share our results with Ben for example. 
Nico Poppelier W3C Math WG, editor 
It'd be much appreciated. 
--- Ben Trafford 
And, of course, the DOM specs are also authored in XML and converted via a set of Tcl scripts to HTML, Java, etc. Complete with the inline bibliography references, and a few other tricks that are really only applicable to APIs. 
Not that I'd say to use the Tcl scripts unless you need the same output as the DOM specs have; just that it's possible. 
Lauren 
If I may use this occasion, one suggestion I have for the MathML specs (both 1.0 and 2.0) and some others is that they offer a variant (usually something like PostScript or PDF) that allows the thing to be printed out in one go. 
Regards, Martin. 
#-#-# Martin J. Du"rst, World Wide Web Consortium #-#-# mailto:duerst@w3.org 
http://www.w3.org 
Or even the Amaya Make Book function, which uses types of link within HTML documents to construct a single HTML document from a collection of liked documents. 
In any event, I agree that a single version is handy. 
Charles McCN 
If I may use this occasion, one suggestion I have for the MathML specs (both 1.0 and 2.0) and some others is that they offer a variant (usually something like PostScript or PDF) that allows the thing to be printed out in one go. 
Regards, Martin. 
#-#-# Martin J. Du"rst, World Wide Web Consortium #-#-# mailto:duerst@w3.org 
http://www.w3.org W3C Web Accessibility Initiative http://www.w3.org/WAI 21 Mitchell Street, Footscray, VIC 3011, Australia (I've moved!) 
Nico David Carlisle developed two style sheets (one for HTML, one for LaTeX), That should have been: David Carlisle and myself. 
Nico based on earlier work by Eduardo Gutentag. 
We produce the MathML 2.0 Nico Specification drafts with it, and are quite pleased about the results Nico so far. 
We can share our results with Ben for example. 
Ben It'd be much appreciated. 
If you have member access to w3.org, you will find the style sheets in and This is the 'public' (read-only) CVS sand-box of our working group. 
Please note that the Math WG uses LaTeX as an intermediate format to produce a single PDF document for the MathML Specification. 
If you do not have member access, I can send a tar or zip archive. 
Regards, Nico Poppelier W3C Math WG, editor 
This has been the case since WD 2 of MathML 2.0 (I admit: this came out just before Christmas 1999 :-). 
Thanks for the suggestion, Nico 
