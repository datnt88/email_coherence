Hello everyone! 
CyberTeams is pleased to announce the availability of a WebDAV-enabled server for interoperability testing by members of this Working Group. 
We have added WebDAV support to our web content management products, WebSite Director (WSD) and WebSite Director Lite (WSDLite). 
One of our web hosting partners, Fort Wayne Internet, has provided web space for our WebDAV test server using WSDLite at http://www.fwi.com:8080. 
Since our WebSite Director Lite product supports immediate updates to web site content it provides an easier testing environment of the WebDAV protocol. 
In addition to the basic level of WebDAV support included in WSDLite, our premier product WebSite Director also integrates WebDAV support into WSD's workflow management and web content version control capabilities. 
To access our WebDAV test server you will need a login username and password. 
You can request a login username and password from a request form available on our WebDAV testing page at: Click on the "Request WebDAV Access" link on that page and fill in the form to request a username and password. 
We will activate the username and password you supply and send you a confirmation of access by return e-mail. 
Once you have received a login username and password, you can access our WebDAV test server by pointing your WebDAV client at module that interfaces directly with WSDLite, which normally runs as a CGI application on the web server. 
Our WebDAV server supports draft-ietf-webdav-protocol-09 including all Class 1 requirements. 
In addition to access via the WebDAV protocol, the WebSite Director Lite software running on our WebDAV test server can be used in its normal mode of operation as a CGI application. 
You can use WSDLite to verify the results of WebDAV methods by exploring the contents of the web server filesystem after a series of WebDAV operations. 
You can use the same username and password used for WebDAV access to access WSDLite on our WebDAV test server by following the "Enter WebSite Director lite" link on our WebDAV testing page at http://www.cyberteams.com/webdav. 
Since there are few WebDAV clients currently available, most of our own testing of our WebDAV support has been through command-line access. 
We tested earlier versions of our WebDAV support with WebDAV Explorer (Jim saw a demo of that support in Redmond) before changing to the new XML namespaces. 
We have tried Internet Explorer 5, but have not been any more successful than the other interoperability tests with IE5 already reported here. 
We have recently begun testing our WebDAV server against sitecopy with partial success. 
We would like to hear any results of any testing any of you can do against our WebDAV server. 
Please send any testing feedback, problem reports, suggestions, or anything else to do with our WebDAV test site to "webdav@cyberteams.com". 
If you would like more information about CyberTeams or our products, visit our web site at http://www.cyberteams or send e-mail to "info@cyberteams.com". 
Regards, Randall Severy President and CEO, CyberTeams, Inc. Randall Severy severy@cyberteams.com 
http://www.cyberteams.com/severy 
CyberTeams, Inc. info@cyberteams.com http://www.cyberteams.com 
Mt. Airy, MD (301) 829-6144 "Building effective teams in cyberspace" 1-888-832-5575 
I attempted to test my Python DAV client against the CyberTeams WebDAV server. 
I found many problems, in fact they were so severe that I did the bulk of my testing my opening a telnet connection and pasting in the request bodies. 
It is of course possible that the true problem lies in my client library, not the CyberTeams server. 
I would be pleased to have my error revealed to me if so. 
1. The PROPFIND response seems odd in a few ways. 
Here is the response I got for a PROPFIND (with no body) on /. I've 
indented the response myself for clarity, it was not part of the original. 
1. creationdate is wrong. 
The DAV spec (13.1) says this property, if present, contains a time stamp in date-time (1SO 8601) format. the value "(null)" is not acceptable. 
Since this is an optional property, it would be better to omit it from the response. 
Likewise for getlastmodified, except it should be an HTTP-date. 
2. In my opinion, it would be better to omit displayname altogether than to return "(null)", but this is just opinion, not an error. 
3. getcontenttype is (probably) wrong. 
I think (but am not certain) that 'httpd/unix-directory' is a not registered MIME type. 
4. 'FileSize' is missing a namespace. 
Not stricly speaking an error, but it's weird. 
Also I don't see the namespace prefix W used anywhere. 
Perhaps it should have been used here? 
2. I tried PROPFIND for a non-existant resource (/jrd/), and got: 
HTTP/1.1 500 Internal Server Error Date: Wed, 30 Dec 1998 20:16:36 GMT The server encountered an internal error or misconfiguration and was unable to complete your request. 
Please contact the server administrator, webdav@cyberteams.com and inform them of the time the error occurred, and anything you might have done that may have caused the error. 
Additionally, a 500 Internal Server Error error was encountered while trying to use an ErrorDocument to handle the request. 
3. MKCOL on a resource whose parent does not exist, e.g. MKCOL fish/Nixon/sneakers returned no error, but should have failed, as the parents don't exist. 
It seems to have created /jrd/fish 
4. Although PROPFIND with no method body works, I could not get it to work with a non-null method body, e.g. 
PROPFIND / HTTP/1.1 Host: www.fwi.com 
Authorization: Basic anJkOmZvbw== Content-Type: text/xml Content-Length: 104 I tried several variations, and all of them failed. 
5. Deleting a non-existant resource returned a response body with invalid XML: 
DELETE /jrd/foo.html 
HTTP/1.1 Host: www.fwi.com 
Authorization: Basic anJkOmZvbw== returned This response is invalid according to the syntax in 12.9.1. 
Response must contain at least one href, and it must contain either a status or one or more propstats. 
Also, in my opinion, this method should have returned a 404 (Not Found) status, not a 207 (Multistatus) 
6. I think the server is handling XML namespace attributes incorrectly. 
The URL in the attribute is missing the final colon, e.g. it's D:multistatus xmlns:D="DAV" but should be D:multistatus xmlns:D="DAV:" 
7. I tried to PUT /foo.html 
PUT /foo.html 
HTTP/1.1 Host: www.fwi.com 
Authorization: Basic anJkOmZvbw== Content-Type: text/plain Content-Length: 16 barking pumpkin and got back a 412 precondition failed, yet the data was written anyway (as confirmed by a subsequent GET) A subsequent PROPFIND on this resource returns (null) for DAV:getlastmodified, despite the fact that the Last-Modified header is provided in the reply. 
Also, the getcontentlength is 0. On the other hand, at least one thing did work: HEAD on a 'plain' resource (e.g. foo.html) worked fine as did HEAD on a collection. 
HEAD on a collection without the trailing slash returned a 301 (Moved Permanently) which is quite reasonable. 
I look forward to working with you to resolve these errors. 
Jim 
Fixed. 
Fixed. 
Gotten fro Apache mime finction. 
I'll need to look into it. 
I don't want to have to duplicate that code. 
Typo when I changed from the old to new namespace format. 
Fixed. 
Had to override Apaches normal URI to filename translation to fix this. 
Done. 
Still working on this. 
It was working before the namespace changes. 
Probably not till Monday. 
Fixed. 
Corrected. 
Fixed. Dana Carson dcarson@cyberteams.com 
http://www.cyberteams.com/ 
dcarson@toad.net 
http://www.toad.net/~dcarson/ 
Lunar Resources Company http://www.tlrc.com/ 
Artemis Society International http://www.asi.org/ 
