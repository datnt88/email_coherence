From: ext Brian McBride [mailto:bwm@hplb.hpl.hp.com] Sent: 07 November, 2001 19:42 Subject: Re: Literals: lexical spaces and value spaces 
The reason why a range definition cannot be descriptive of non-locally typed literals, is because lexical form is specific to a given data type, and the binding of a value to a given property may occur by various means and one can end up with a literal value having a lexical form that is not compatible with the data type of the property. 
Please can we have at least one concrete example, analysed for each of the three proposals S, P, X. Brian 
Perhaps I'm not understanding the S and P proposals, but I don't see how any examples can be created that are 
relevant to any of the proposals, as the S P and X proposals are about attaching type to literals, right? 
What I'm talking about is when there is *no* type attached locally to the literal. 
It's just the literal. 
What am I missing here? 
Patrick 
The reason why a range definition cannot be descriptive of non-locally typed literals, is because lexical form is specific to a given data type, and the binding of a value to a given property may occur by various means and one can end up with a literal value having a lexical form that is not compatible with the data type of the property. 
You have asserted: 
and one can end up with a literal value having a lexical form that is not compatible with the data type of the property. 
Please show how that can occur with each of the three proposals, P, S, and X. Brian 
From: ext Brian McBride [mailto:bwm@hplb.hpl.hp.com] Sent: 07 November, 2001 19:42 Subject: Re: Literals: lexical spaces and value spaces 
The reason why a range definition cannot be descriptive of non-locally typed literals, is because lexical form is specific to a given data type, and the binding of a value to a given property may occur by various means and one can end up with a literal value having a lexical form that is not compatible with the data type of the property. 
OK, let me try to offer an example. 
aaa eg:prop "10" . 
That's all. 
That is legal in P, but it is ambiguous until more information is given enabling the literal node to be assigned a datatype. 
(Eg by specifying the range of eg:prop to be a datatype class.) 
This is syntactically illegal in X, since one would have to use a URV rather than the bare literal. 
I am not sure what the S form would be; as far as I can see, there would be no way to say this in S, since the only place for the literal to go would be at the sharp end of an edge labelled with a datatype, which by hypothesis we don't have at this time. 
(Sergey, can you comment?) 
So it seems to me that both X and S, in different ways, simply refuse to countenance the possibility of expressing such an 'ambiguous' literal. 
This could be done in the DC version as follows: aaa eg:prop _:1 . 
_:1 rdf:label "10" . 
where there is no rdf:type coming from the bNode. 
Pat IHMC(850)434 8903 home 40 South Alcaniz St.(850)202 4416 office phayes@ai.uwf.edu 
