Is there a test suite of signature documents that can be used to verify a vendor's XML Signature SDK implementation for compliance with the recommendation? 
How do we know that any particular vendor's API will validate a signature that was created by any other vendor's SDK? 
I'm trying to choose a vendor's Toolkit/SDK for use in our application. 
I've been burned in the past by vendor's not fully implementing a standard. 
I'm interested in having a way to test a vendor's SDK and ensure they have fully implemented the standard. 
Dwight E. Funk Technical Software Architect - XML Technologies POWERWAY, Inc. (317) 598-6745 MESSAGE IS INTENDED ONLY FOR THE USE OF THE INDIVIDUAL OR ENTITY TO WHICH IT IS ADDRESSED AND MAY CONTAIN INFORMATION THAT IS PRIVILEGED, CONFIDENTIAL AND EXEMPT FROM DISCLOSURE. 
If the reader of this message is not the recipient or an employee or agent responsible for delivering the message to the intended recipient, you are hereby notified that any dissemination, distribution, or copying of this communication is strictly prohibited. 
If you have received this communication in error, please notify the sender you. 
Dwight, Take a look at http://www.w3.org/Signature/2001/04/05-xmldsig-interop.html for a matrix of interoperable implementations. 
The test messages we used are downloadable from that page: and Best, Ari Kermaier 
Ari Kermaier arik@phaos.com 
Senior Software Engineer Phaos Technology Corp. http://www.phaos.com/ 
Ari, Thanks for the help here...seems like I asked a dumb question. 
I noticed Verisign is on the front page for XML Signature but not in the interopt grid. 
Does the grid need to be updated? 
Microsoft's testing was done on a pre-release version of DotNet. 
Is Microsoft planning to update their results now that DotNet is released? 
The email from Brian LaMacchia (http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/0050.html) from Microsoft says that: XPointers '#xpointer(/)'is No and XPointers '#xpointer(id("ID"))' is No. But the grid says Yes for both. 
What happened there? 
Dwight E. Funk Technical Software Architect - XML Technologies POWERWAY, Inc. (317) 598-6745 Dwight, Take a look at http://www.w3.org/Signature/2001/04/05-xmldsig-interop.html for a matrix of interoperable implementations. 
The test messages we used are downloadable from that page: 01-merlin-xmldsig-sixteen.tar.gz and merlin-xmldsig-fifteen.tar.gz 
Best, Ari Kermaier 
Ari Kermaier arik@phaos.com 
Senior Software Engineer Phaos Technology Corp. http://www.phaos.com/ 
MESSAGE IS INTENDED ONLY FOR THE USE OF THE INDIVIDUAL OR ENTITY TO WHICH IT IS ADDRESSED AND MAY CONTAIN INFORMATION THAT IS PRIVILEGED, CONFIDENTIAL AND EXEMPT FROM DISCLOSURE. 
If the reader of this message is not the recipient or an employee or agent responsible for delivering the message to the intended recipient, you are hereby notified that any dissemination, distribution, or copying of this communication is strictly prohibited. 
If you have received this communication in error, please notify the sender immediately by E-Mail and return the original message to the sender. 
Thank you. 
The grids main purpose was to demonstrate the specification could be read and use to create an independent implementation. 
If folks send me new or updated info I will include it, but as it says, "The following information is the best assesment of the Editors/Chairs for the dated namespace and does not necessarily represent the latest state of any given implementation over this or later specifications.?" 
I suppose that question is best answered by MS. 
I think he told me later it was supported but I didn't (for lack of a URI or mistake) didn't update the link to the new email. 
If Brian corrects me I'll be happy to link to that info. 
Joseph Reagle Jr. http://www.w3.org/People/Reagle/ W3C Policy Analyst mailto:reagle@w3.org 
IETF/W3C XML-Signature Co-Chair http://www.w3.org/Signature/ W3C XML Encryption Chair http://www.w3.org/Encryption/2001/ 
Hi, all, 
We have an XML application case for password-based HMAC (http://www.w3.org/2000/09/xmldsig#hmac-sha1) 
We need to compute a secret key from a password, salt and iteration count first (for dictionary attack) and then feed this secret key to the HMAC defined in XML DSIG. 
The question is where we will store this salt and iteration count. 
It makes more sense for me to store them within the signature node but I did not find any proper place in XML DSIG Signature node. 
Does XML DSIG not support this? 
If so, we may have to store them within application entities. 
Thank you. 
Steve 
Hi Steve, what about ds:SignatureMethod Algorithm="http://www.entegrity.com/#password-hmac-sha1" xmlns:entegrity="http://www.entegrity.com/#" 
Regards, Christian 
Or you can put this information into an Object element if you are just going to specify the http://www.w3.org/2000/09/xmldsig#hmac-sha1 algorithm and omit KeyInfo. 
Or you could create a custom KeyInfo child that has your iteration and salt info. 
Donald From: "Steve Wang" steve.wang@entegrity.com 
Date: Tue, 5 Mar 2002 11:18:47 -0500 (EST) Message-ID: 00d501c1c461$77684b00$65030a0a@chromatix.com 
References: 458987A6604BF94EA6BD4966F1AF2676A8706D@pwmail-wdfld.powerway.com 
200203041547.KAA20584@tux.w3.org Organization: Entegrity Solutions 
I answered Joseph &amp; Dwight privately already, but "for the record" let me state it here so that Joseph can update the Microsoft column in the interop table. 
What's currently in the table is indeed correct for the implementation of XMLDSIG that we shipped as part of v1 of the .NET 
Framework/Visual Studio .NET. 
The items that have * by them (which indicated that the feature was in post-Beta 2  builds) no longer need stars; those features are supported in what we shipped final (all the HMAC-SHA1 stuff). 
To answer Dwight's specific question, yes, we do support the #xpointer(/) and #xpointer(id("ID")) syntax in v1 of the .NET 
Framework, but we don't have general xpointer support. 
(We special-cased those two expressions in our code; full xpointer support in XMLDSIG is dependent on full xpointer support being added to the .NET 
Framework in general...) As always, feel free to contact me directly if you have any questions about the .NET 
Framework implementation. 
--bal 
The grids main purpose was to demonstrate the specification could be read and use to create an independent implementation. 
If folks send me new or updated info I will include it, but as it says, "The following information is the best assesment of the Editors/Chairs for the dated namespace and does not necessarily represent the latest state of any given implementation over this or later specifications.?" 
I suppose that question is best answered by MS. 
I think he told me later it was supported but I didn't (for lack of a URI or mistake) didn't update the link to the new email. 
If Brian corrects me I'll be happy to link to that info. 
Joseph Reagle Jr. http://www.w3.org/People/Reagle/ W3C Policy Analyst mailto:reagle@w3.org 
IETF/W3C XML-Signature Co-Chair http://www.w3.org/Signature/ W3C XML Encryption Chair http://www.w3.org/Encryption/2001/ 
