As a matter of public record, there will be a Design Team meeting held this Thursday and Friday, 11/20-11/21 at the offices of Netscape. 
In attendance will be: Steve Carter, Asad Faizi, Del Jensen, Yaron Goland, Alex Hoppman, Howard Palmer, and Jim Whitehead. 
Topics of discussion will be: access control, issues on the protocol draft, versioning. 
The purpose of holding Design Team meetings is to have a *small* gathering of people to discuss design proposals which are then subject to review and modification by the mailing list, which is the sole authority which can determine "rough consensus" on a draft. 
- Jim Whitehead 
Jim, 
I've made major additions and changes to the access control requirements document and submitted it as an Internet-Draft. 
It is available as: This adds a description of the access control framework, and specifies more detailed requirements than the previous version. 
It mostly reflects my own proposals for what the requirements should be, except for the section on generic access rights, which is left mostly as it was for the moment. 
The access control issues to be discussed at the design meeting, as I see them, are: 1) Review access control framework and terminology. 
2) What is nature of a principal description (previously called a principal specifier)? 
In particular, does it simply refer to a list of users and/or groups, or does it (or could it) include other principal attributes such as IP address and DNS name? 
Does it allow Boolean expressions as proposed in the requirements document? 
3) How is conflict between ACEs in an ACL resolved? 
The ACL protocol document uses ACE specificity as a mechanism for determining precedence. 
I claim that if general principal descriptions are going to be required or even allowed in an ACE, specificity may become difficult or impossible to define. 
Therefore the requirements document specifies that ACEs are ordered in an ACL, and order determines precedence in resolving conflicts. 
4) Should an ACE be able to grant its access rights to one principal description and deny them to another principal description? 
It depends on how conflicts between ACEs are resolved, in my opinion. 
If using ordering to resolve conflicts, it seems unnecessary. 
5) How are users (and possibly groups) referenced in a principal description? 
I don't think opaque identifiers promote interoperability, so the requirements document differs with the protocol document on this point. 
6) What kind of inheritance is required or permitted? 
Inheritance complicates things considerably. 
The requirements document suggests that it is optional, but proposes certain requirements for implementations which do support inheritance. 
7) If inheritance is required or allowed, how are conflicts between policies in different ACLs resolved? 
The requirements document proposes ordering ACLs. 
8) How is access control to ACLs themselves managed? 
The requirements document still has the "change access" access right, but I think finer granularity is needed. 
For example, you probably want to be able to give someone the right to grant "read" access to a resource, but not to grant "modify" access. 
This is partially reflected in the requirements by specifying operations to insert and delete individual ACEs in an ACL. 
That is, someone who was not allowed to grant "modify" access would not be allowed to insert or delete an ACE containing the "modify" right. 
9) What generic access rights should be supported? 
The requirements document has the old list. 
We ought to review it. 
10) Merging of access rights, e.g. "list" and "read", is it really a requirement? 
The requirements document has been changed to limit access right merging to particular cases, rather than giving server implementors carte blanche. 
I don't think that a conforming implementation should be allowed to merge "read" and "delete", for example. 
Or do some things just go without saying? 
I think we'll be doing really well if we get through issues 1-5, and maybe start on 6. 
Howard 
I would like the team to consider adding support for ordered collections. 
How can I do this? 
I've discussed it on this mailing list, and accepted the responsibility for writing up a design, but then procrastinated. 
I did 
not know that a deadline was coming so soon. 
What is the date by which any proposed additions to DAV must be submitted? 
I imagine that the design team already has a full agenda for its two day meeting tomorrow, but if not, would it matter if I had a proposal in the mail by 10 pm PST tonight (Wed, 19 Nov?). 
If it's too late (as I assume it is) for your design meeting, then what is 
the next deadline? 
Jim, Yes, unfortunately it is too late to submit a change to the WebDAV protocol document prior to the December IETF meeting. 
We submitted draft-ietf-webdav-protocol-05 late on Wednesday afternoon to avoid the IETF Internet-Draft submission deadline crunch. 
The topic of ordered collections was discussed at the Design Team meeting, and the conclusion we reached was: a) There will be a time slot at the Washington IETF meeting for discussion of this topic b) It would be very helpful to have a draft proposal for ordered collections in DAV to focus the discussion in Washington. 
Even though it is too late to submit this as an Internet-Draft before the IETF meeting, you should still submit it to the list for discussion, and I will post any drafts I receive on the WebDAV home page. 
My apologies for not publicizing the Internet-Draft submission deadline -- in general, Internet-Drafts are not accepted for 2-3 weeks before an IETF meeting. 
The purpose of this is to ensure that drafts are submitted far enough in advance of the meeting to ensure attendees have read the minutes. 
- Jim On Wednesday, November 19, 1997 3:12 PM, Jim Davis 
did 
submitted? 
is 
