The advanced collections design team has been debating whether to require the ordering semantics (DAV:orderingtype property) to be returned with every PROPFIND response for an ordered collection. 
The spec currently says that the server SHOULD return this property, whether or not the client explicitly requested it. 
It's likely that we'll either change this language to "MUST" or get rid of 
it altogether. 
On the one hand, it is a good thing for the client to be made aware that the PROPFIND response is ordered, so that the client can decide whether to override that ordering with its own. 
On the other hand, it seems like a bad idea to return random information that we think might (or should) be interesting to the client. 
Any opinions? 
--Judy 
Judith A. Slein Xerox Corporation jslein@crt.xerox.com 
(716)422-5169 800 Phillips Road 105/50C Webster, NY 14580 
Just as a general approach, should we not favour the latter view? 
For a client that cannot or does not take notice of the order it is irrelevant information to receive anyway. 
And for the client that can order, they should ask for it. 
Otherwise, where do you stop adding info that you think should be significant? 
Regards, Mark Mark Birbeck Managing Director x-port.net Ltd. 220 Bon March? 
Centre 241-251 Ferndale Road London SW9 8BJ w: http://www.iedigital.net/ 
t: +44 (171) 501 9502 e: Mark.Birbeck@iedigital.net 
I have two thoughts on this proposal. 
They are below. 
THOUGHT 1: 1) ordered collections exist 2) If a client does not place d:orderingtype or d:allprop in its propfind or DASL query, then the server does not return the collection ordered. 
3) If a client does request the d:orderingtype or d:allprop in propfind or DASL then the server returns the collection ordered. 
This is due to the fact that some clients will ignore any ordering that the server gives them. 
Therefore the server did more work than it had to do. 
My belief is that if the client wants the collections ordered, let them ask for them that way. 
If the client does not care, then the server can return normally. 
The SHOULD in the spec, mentioned below, will not help interoperability if it is left as a SHOULD. 
The client will never know whether the server is returning the collection ordered because some servers will say they are ordered, while others will not tell the client. 
I am not a fan of MUST, because the server will then ALWAYS do more work, 
even if the client will be ignoring the results. 
As I have mentioned, I think the best case is the client will ASK for the collection to be ordered if that is what it wants. 
THOUGHT 2: When in DASL ordered collections will be a little weird no matter what. 
If the client asks for a specific order via the d:order clause, does the server always append on the order of the collection as the last ordering. 
In other words, if I ask for and the query has an ordered collection (if we stick with how the spec reads), or has asked for d:orderingtype if we go with my THOUGHT 1 proposal. 
Is the real order by clause This because we must do an implicit order by the collection? 
I believe an even better answer to this situation is to add d:orderby clause to the propfind. 
In this way we generalized the problem, and turn it into a better solution. 
By the way, PROPFIND is a dumbed down DASL query so this works great. 
We then need to add a d:orderedcollection or something like it to the DASL and 2518 spec. 
Thus if a client wants the PROPFIND ordered in ANY way, including the ordered collections, they simply ask for it. 
There is no weird situations with ordered collections in DASL, everything works the same way, and server developers are developing to a spec that makes since through both 2518 and DASL. 
I really like thought 2. I guess the biggest problem is that we need to get the d:orderby clause into 2518 quickly so that we won't have backward compatibility problems. 
I think if we make this change now, we will kill the problem before it starts. 
On a somewhat separate note, I will probably one day push for the removal of PROPFIND, since DASL can do everything it can plus more :) Kevin [mailto:w3c-dist-auth-request@w3.org]On 
Behalf Of Slein, Judith A 
The advanced collections design team has been debating whether to require the ordering semantics (DAV:orderingtype property) to be returned with every PROPFIND response for an ordered collection. 
The spec currently says that the server SHOULD return this property, whether or not the client explicitly requested it. 
It's likely that we'll either change this language to "MUST" or get rid of it altogether. 
On the one hand, it is a good thing for the client to be made aware that the PROPFIND response is ordered, so that the client can decide whether to override that ordering with its own. 
On the other hand, it seems like a bad idea to return random information that we think might (or should) be interesting to the client. 
Any opinions? 
--Judy Judith A. Slein Xerox Corporation jslein@crt.xerox.com 
(716)422-5169 800 Phillips Road 105/50C Webster, NY 14580 
I don't think ordering is random information. 
It's only a few handfuls of bytes to provide information that should be useful to an overwhelming number of clients (since I think WebDAV is going to see primary use as a network filesystem for quite some time to come). 
I agree with "MUST". 
%% Max Rible %% max@glyphica.com 
%% http://www.amurgsval.org/~slothman/ 
%% %% "Before enlightenment: sharpen claws, catch mice. 
%% 
%% After enlightenment: sharpen claws, catch mice." - me %% 
I'm using WebDAV for inter-server database updates. 
The server 'clients' are therefore *very* dumb - they don't care about collection ordering. 
Mark 
[good reasons that propfind should not return the ordering propery unless 
explicitly asked] I agree with Mark. 
Drop the "should" from the spec. 
Thought 1 was fine. 
Nice thought but I am afraid I do not agree. 
I think the DASL arbiter should not append anything to the query. 
First, it is costly. 
Most search engines are going to ignore DAV collection ordering, it wont be part of the underlying indexing information. 
The entries in the indexing are most likely going to be a flat set of rows (for an RDB) of all the entities that are indexed, they won't be grouped by collection. 
Second, it is meaningless. 
If there was an underlying order to the collection, that order has gotten scrambled by the ordering in the query , so we gain nothing by restoring only part of it. 
I mean, if the collection was sorted by date, but the dasl query was a sort by alphabetic name (only), then what good does it do to sort by date within name? 
If the client wanted that secondary sort, it would have asked for it, or done it itself. 
Third, orderby is part of DASL's basicsearch but might not be part of other DASL query grammars. 
fourth, I don't want ordered collections to depend on DASL or vice versa if it can be helped. 
Are you proposing that a PROPFIND request by able to provide an arbitrary (re) ordering, just as in DASL? 
While I admit that I do see the charm, I am afraid that I would strongly disagree. 
I would object to it in RFC 2518, and I would object to it for the Ordered Collection extension. 
Your proposal would require a server to potentially have to perform a sorts for each PROPFIND request, a significant burden. 
We have heard consistently that people do not want Ordered Collections to be expensive. 
Your proposal would make not only Ordered Collections but even plain old RFC 2518 expensive. 
Also the ordering in Ordered Collections is explicitly intended for client -provided orderings, where the burden and the cost of such ordering is paid by the client, not the server. 
Not all WebDAV servers will support DASL, and they should not have to pay the price of supporting sorting. 
Until someone points out why this isn't good, I'm in the camp that says the 
server should only return the properties that the client requested. 
I am also in the "only return what the client requests" camp as well. 
All of the arguments in favor of returning some particular bit of information take the form "this is really important information, and it's not that long". 
The essential flaw in this argument is that *every* piece of data is important to some client, or we wouldn't have spent the effort on standardizing on it. 
There have been several proposals to provide "named batches" of information, so that a client can say things like: "I'm interested in all the DAV:display information". 
That would be fine with me. 
Cheers, Geoff 
the 
I agree with Geoff. 
"Geoffrey Clemm" geoffrey.clemm@Rational.Com on 12/01/99 10:33:12 AM Subject: Re: Ordered Collections and PROPFIND Responses I am also in the "only return what the client requests" camp as well. 
All of the arguments in favor of returning some particular bit of information take the form "this is really important information, and it's not that long". 
The essential flaw in this argument is that *every* piece of data is important to some client, or we wouldn't have spent the effort on standardizing on it. 
There have been several proposals to provide "named batches" of information, so that a client can say things like: "I'm interested in all the DAV:display information". 
That would be fine with me. 
Cheers, Geoff 
the 
