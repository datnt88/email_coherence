We have been checking Beta 1 of our (DSTC) implementation against the interop matrix and merlin-xmldsig-{fifteen,sixteen}. 
My understanding was that some of these documents should *not* verify, because they have URIs that use id() functionality but the documents do not have DTDs that specify the relevant attributes with type ID. 
However, the interop matrix shows that everyone else has happily verified these signatures (and so have we, but only by implementing something that I think is a hack). 
So: - does my understanding need fixing? 
(an all too common event) - has everyone taken a pragmatic approach and implemented the moral equivalent of the example in the XPointer spec? 
(i.e. the last thing in section 4.3, immediately above section 5; I'm not game to try writing a more accurate XPointer for it) - is there some other option that I should have realized? 
Thomas Maslen DSTC (By the way, merlin-xmldsig-sixteen was just wonderful for fingering bugs in my comment-filtering code -- blessings be upon Merlin H). 
Thomas, 
Actually an id() function is used two times within the signature of merlins "sixteen" suite: * id('notaries') ... In this case the element is found since the type of the attribute "Id" of the element "Notaries" is declared in the internal subset of the DTD. 
* id('object-3') ... In our implementation we validate the Signature element to be verified against the Schema grammar specified in the XML-Signature specification. 
So the type of the attribute "Id" of the element "Object" is recognized. 
Liebe Gruesse/Regards, DI Gregor Karlinger Phone +43 316 873 5541 Institute for Applied Information Processing and Communications Austria 
Agreed. 
Fair enough, good idea. 
I was also thinking of the barename XPointers ("#object-3") that implicitly use id() semantics too (except for the discarding of comments) -- but your approach also covers all the examples of barename URIs in both -fifteen and -sixteen. 
I had it in mind that there were also examples of enveloped or same-document detached signatures that used fragment IDs, but that must have been a figment of my imagination. 
Thanks, Thomas Maslen DSTC 
