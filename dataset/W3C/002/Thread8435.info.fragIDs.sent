The subsections of Section 3 should be numbered. 
A number of the URLs in the references don't work. 
In Section 2, paragraph 2.1: When it says "...describe how to digitally sign... an XML document..." 
Is this referring specifically to the non-terminal symbol 'document' in the XML BNF? 
If so, this would include the Prolog and Misc*. 
The reason I mention this is that I heard recently that the canonicalization group was hoping to drop these... 
What's the story? 
In Section 2, paragraph 2.2: What is meant exactly by "cryptographic" signature? 
What qualifies and what 
doesn't? 
According to the ABA, a signature is that which provides signer authorization, document authentication and signer authentication. 
The degree of security depends on the algorithms chosen within an application. 
Perhaps just remove the word cryptographic and instead define what a signature is... 
In Section 2, paragraph 2.3: What do these mean? 
Point A seems to be vacuously true. 
Point B doesn't seem to be correct. 
It is not the case that we associate a signature with other info that provides validity and identity. 
The signature *is* that which provides validity and identity. 
In Section 2, paragraph 7: We seem to have adopted the XLink as our way of indicating resources. 
This has security problems with respect to identifying parts of an XML document 
(as required in Section 2.3). 
Firstly, we need a way to identify non-contiguous portions of a document in such a way that the relative positions of the connected components is preserved. 
Not even an XML fragment does this (I'm not refering here to fragment as that which appears 
after the # but rather to the XML Fragment Interchange working draft). 
Secondly, there seems to be no way right now to obtain document closure. 
That is, we can list that which got signed in a document, but we also need to have a way of expressing what gets omitted from a document. 
The reason 
is that we want to omit certain things (like a second signature element) but 
we want the first signature to break if anything else gets added to the document. 
Otherwise we have a signed document where anything could be added, even things that obscure the original intent of the document when it is rendered. 
In Section 3, paragraph 2 of Signature Data Model and Syntax: Clarification. 
The term is being used in the same sense as it appears in the XLink spec, namely an element id appearing after a #. 
You are not refering to fragment as defined in the XML Fragment Interchange working draft. 
Again, we should require at least fragments, but since they don't allow non-continuous pieces, we need something more (or we need to require the fragment group to add discontinuity). 
In Section 3, under Processing: XML applications should generate an error in this case, shouldn't they? 
Is 
there a valid case (i.e. a case where someone isn't trying to exploit a security hole) where we'd want a cryptographic blob's data to be different from the attributes expressed in the XML. 
I don't think we'll get through very many security reviews with software that permits this. 
John, I'm not qutie sure since you don't provide a referent for your comments, but I think they are over an older version. 
I applied what I could to [1], resulting with [2]: [1] http://www.w3.org/Signature/Drafts/xmldsig-requirements-990721.html [2] http://www.w3.org/Signature/Drafts/xmldsig-requirements-990728.html 
fixed. 
fixed. 
[1] document ::= prolog element Misc* 
I expect to have the c14n draft up today. 
We are signing the (c14n) form of a XML document, if a particular algorithm throws that info away, it's the applications choice to select it. 
what 
Given how hairy many of these terms are, starting a definition section now with extremely precise and well referenced terms would be a good idea. 
However, that will take a lot of work (it's most of the spec IMHO!) and I'm 
afraid to load it all into the requirements document, but good point, I'll give this some thought. 
removed "cryptographic" 
This is very hairy... Could you explain how it doesn't? 
XML-Fragment Interchange 
I'm very afraid of this in the short term. 
I would suggest that applications that care about fragments and specifying no-inclusion/inclusion use XSLT or whatever else, and sign that. 
Then if they want to ensure the generated XML 
is a valid version of the transormed content on signature validation, do 
that at the application level. 
XSL Transformations (XSLT) Version 1.0 For instance, one could use things like those in XFDL to:"When a program checks a signed form, it compares the data in the [transformed data] with that of the portion of the form that is apparently signed" Is this reasonable. 
Building this into DSig now is too ambitious. 
XFDL 4.0 
but 
Yep, part of the processing model will probably say, and when you sign href="" (the object you are in) remove bits of yourself from consideration. 
4.2. 
Same-document References A URI reference that does not contain a URI is a reference to the current document. 
However, this removal has to be smart enough not to remove other signatures, if in fact that is what you are signing. 
To this end, this is why I prefer manifests where you can canonicalize external objects according to content c14n, instead of dsigs embedded in content that refer to the things of which they are part of. 
I hope to see more of this in the scenarios. 
I'm interested in what you are thinking, but not quite sure, and would enourage you to send it to the fragment group (cc me) and we can see what happens. 
I'm not sure frankly, I'll add this as a comment. 
Joseph Reagle Jr. Policy Analyst mailto:reagle@w3.org 
XML-Signature Co-Chair http://w3.org/People/Reagle/ 
application. 
I'm 
I would be willing to write/edit such a definition section. 
I suspect that I would need help from the list (references and input) on some of the very technical definitions, but I'm willing to do the compilation, writing, editing if I'm pointed to the resources (or if definitional decisions are made on the list). 
Todd 
Thanks Todd, but the work I am speaking of consists of good references (like I did in [1]), and writing technically precise definitions. 
I wouldn't even mind seeing them expressed in an informal predicate logic [2] -- as reflected in the latest RD [4] -- or BNF [3] as approriate. 
Perhaps someone will volunteer to work with you since I'm sure with a legal background, you'd be precise with the words. 
smile [1]http://www.w3.org/Signature/Drafts/xml-dsig-design-resources-990723.html [2] http://www.w3.org/Signature/Drafts/xml-dsig-design-resources-990723.html [3] http://www.stud.ifi.uio.no/~larsga/download/artikler/bnf.html [4] http://www.w3.org/Signature/Drafts/xmldsig-requirements-990728.html (Yanked from a conversation from TimBL, RalphS, and DanC yesterday) A more formal definition of a signed resource is that the following evaluates as true "definition(inputs):constraints" where R is a resource., 
I is a resource identifier (URI), and C is content (sequence-of-octects). 
signed-resource(I, C, key, sig): there was some request R such that GET(R) = C and address(R) = I and sign-doc(C, key, sig) sign-doc(C, key, sig): sig is the value of a strong one-way function over content and key that yields C integrity/validity and K non-repudiability Joseph Reagle Jr. Policy Analyst mailto:reagle@w3.org 
XML-Signature Co-Chair http://w3.org/People/Reagle/ 
