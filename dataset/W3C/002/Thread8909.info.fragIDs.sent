Joseph, I think the current Schema definition at least of the DigestValueType leads to severe problems: DigestValueType is derived by restriction from the XML Schema simple type base64Binary. 
The *FIXED* value of the "whitespace" facet is "collapse" for all atomic types other than string [1]. 
A value of "collapse" means that a validating parser normalizes whitespaces in the string content of the DigestValue element. 
This behaviour could break the signature, if the signer produces a digest value containing sequences of whitespaces, and the verifier schema validates the signature. 
Since the "collapse" value for the "whitespace" faced is *FIXED* we cannot derive our DigestValueType from "base64Binary". 
Instead we could derive the type by restriction from "string" since then we are allowed to change the value of the "whitespace" facet to "preserve" [1]. 
This issue is vital with respect to DigestValueType, but maybe it also makes sence to change the definition of SignatureValueType, CryptoBinary, X509SKI, ... since this elements are also likely to be covered by a signature, and then the same problem applies there. 
[1] http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#rf-whiteSpace Liebe Gruesse/Regards, DI Gregor Karlinger Phone +43 316 873 5541 Institute for Applied Information Processing and Communications Austria 
Hi Gregor, These are very interesting observations and I agree we need to do something about this...(see comments below) From: "Gregor Karlinger" gregor.karlinger@iaik.at 
Date: Sat, 9 Jun 2001 12:18:31 +0200 Message-ID: LBEPJAONIMDADHFHAEAOGEHECGAA.gregor.karlinger@iaik.at 
It may be helpful to think about reference validation and siganture validation separately. 
White space in DigestValue and modifications to white space there should have no effect on reference validation. 
If it does not yet, we should be sure our document specifies that the DigestValue check is a numeric check, not a string comparison between the DigestValue content and a newly calculated base64 digest. 
(And the same for SignatureValue check) 
Signature verification, on the other hand, is a different matter. 
You are quite right that it is absolutely essential that signature generators and verifiers serialize SignedInfo, including any white space in DigestValue or anywhere else in SignedInfo, in exactly the same way. 
If we are staying with preserving white space, we need to point this out and be sure that our typing supports it. 
We could change to stripping all white space but I don't see any reason for such a change. 
Presumably the current interoperability is all based on preserving white space. 
Thanks, Donald 
Right. 
This issue is under discussion by the Schema WG (both the white space preservation/omission issue in general and the 'collapse' facet in particular). 
Depending on the outcome, we may have to revert to our own definition of base64. 
Joseph Reagle Jr. http://www.w3.org/People/Reagle/ W3C Policy Analyst mailto:reagle@w3.org 
IETF/W3C XML-Signature Co-Chair http://www.w3.org/Signature W3C XML Encryption Chair http://www.w3.org/Encryption/2001/ 
I'm actually confused about this -- are you saying all _other_ parts of the XML Sig schema use only string/'preserve' attributes and elements? 
It's certainly true that schema-aware processing does not preserve whitespace information, but that's true of DTD-aware processing as well, in lots of ways . 
. . 
ht 
Henry S. Thompson, HCRC Language Technology Group, University of Edinburgh 
W3C Fellow 1999--2001, part-time member of W3C Team 2 Buccleuch Place, Edinburgh EH8 9LW, SCOTLAND -- (44) 131 650-4440 URL: http://www.ltg.ed.ac.uk/~ht/ 
Henry, 
A parser MUST report any whitespace to the application as it has been detected in the parsed XML, according to XML 1.0: "An XML processor must always pass all characters in a document that are not markup through to the application. 
A validating XML processor must also inform the application which of these characters constitute white space appearing in element content." 
[1] Therefore I cannot share your concerns regarding DTD aware processing. 
Liebe Gruesse/Regards, DI Gregor Karlinger Phone +43 316 873 5541 Institute for Applied Information Processing and Communications Austria [1] http://www.w3.org/TR/2000/REC-xml-20001006#sec-white-space 
Attribute value whitespace is considered markup. 
Attribute value normalization always takes place, even in the absence of DTDs [1] Schema processing simply extends the same approach to element content. 
ht [1] http://www.w3.org/TR/REC-xml#AVNormalize 
Henry S. Thompson, HCRC Language Technology Group, University of Edinburgh 
W3C Fellow 1999--2001, part-time member of W3C Team 2 Buccleuch Place, Edinburgh EH8 9LW, SCOTLAND -- (44) 131 650-4440 URL: http://www.ltg.ed.ac.uk/~ht/ 
Henry, 
To overcome problems resulting from this parser behaviour, you employ canonicalization (SignedInfo is canonicalized mandatory, and for signed XML data objects you should apply an approiate canonicalization transform). 
Liebe Gruesse/Regards, DI Gregor Karlinger Phone +43 316 873 5541 Institute for Applied Information Processing and Communications Austria 
So the problem is that there-exists x suchthat wfcs(x) &amp; C(I(x)) != C(I(SAT(x))) where wfcs is a predicate true of well-formed XML document encodings, C is XML Canonical form, I is the XML 1.0 Infoset and SAP is an XML Schema-aware transducer. 
This is certainly true -- it was not a constraint on the design of XML Schema that it preserve canonical form. 
However, it is _not_ the case that whitespace affects the question of whether there-exists x suchthat wfcs(x) &amp; C(I(x)) != C(PSVI(I(x))) where PSVI is the post schema-validation Infoset. 
This is because the PSVI only _augments_ the input Infoset, it doesn't change it. 
So for instance the character info item daughters of an EII with type xs:base64Binary will not have changed. 
[There _is_ a problem with defaulted attributes, however. 
But that's a different problem, I guess, that naturally arises in dealing with schema processing.] 
But I'm still struggling to understand how/why these cases are a problem for XML Signature -- please provide me with scenario where a problem arises. 
You seem to be making assumptions about processing models that I think are not necessary . 
. . 
Thanks for your patience. 
ht Henry S. Thompson, HCRC Language Technology Group, University of Edinburgh W3C Fellow 1999--2001, part-time member of W3C Team 2 Buccleuch Place, Edinburgh EH8 9LW, SCOTLAND -- (44) 131 650-4440 URL: http://www.ltg.ed.ac.uk/~ht/ 
