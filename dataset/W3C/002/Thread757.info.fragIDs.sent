Hi Dave, (I hope your new job is going well.) 
4-Aug-2000 Tidy's handling of illegal ampersands such as "id=1&amp;lang=en" is inconsistent with browsers. 
This is especially important when the 
ampersand occurs in a URL, where a mistake results in a broken link. 
There are two reasonable interpretations: 1) the ampersand should have been escaped; 2) the entity name "lang" should have been terminated with a semicolon. 
Tidy's current rule is: assume #2 if it would result in a valid HTML entity; otherwise assume #1. 
So Tidy interprets the above as "id=1&amp;lang;=en". 
However, based on the example document below, IE 5.5 and Netscape 4.7 appear to use a slightly different rule: Assume #2 if it would result in a valid HTML entity WHOSE CHARACTER CODE IS  256; otherwise assume #1. (I suspect this is a side-effect of their implementation. 
They probably have a table somewhere with 256 entries. 
Grumble.) Since the character code for the entity "lang" is 9001 decimal, IE and Netscape interpret the above as "id=1&amp;amp;lang=en". 
Tidy's rule can be fixed by changing the following if statement in lexer.c 
(search for "ch = 0"): /* deal with unrecognized entities */ if (ch = 0) to: /* deal with unrecognized entities */ if (ch = 0 || (ch  = 256 &amp;&amp; c != ';')) 
This same bug was previously reported for "...NEUF&amp;rang=25": Thanks, Randy ------------------------ Example HTML document ------------------------- 
Randy Waki: 
Which browsers? 
Please demonstrate code that uses the correct "&amp;amp;" and that breaks in a named browser. 
If you can't do that, then just correct the code, as Tidy wants you too, and be done with it. 
Bertilo Wennergren 
Hi Bertilo, 
There is no question in this case that using the correct code would be the best choice. 
But: Tidy has turned from a pure pretty-printer to a multi purpose tool, one of whom's tasks is error-fixing. 
Yes, not only error-warning but error-fixing. 
So, when we discuss tidy's error-fixing features, we have to assume that the input code is illegal/wrong/whatever-you-call-it. 
Now, in the above example of "id=1&amp;lang=en", my mind tells me that the author probably should have written "id=1&amp;amp;lang=en". 
But perhaps I am wrong, perhaps the author (human or program) did actually want to code something which should be written as "id=1&amp;lang;=en". 
This is a classic example that automized error-fixing is doomed to fail in at least some cases. 
So the question with respect to error-fixing is: which option should tidy use? 
I would support Randy (fix it the way the two large browsers interpret it) for a very simple reason: The most common way of HTML debugging is not validating, but browser-testing (by the author and by the users). 
So if the intended effect is not achieved in browsers, the error is likely to be fixed soon. 
If the browsers interpret the error in the way the author wants it to be interpreted, the error will persist - untill tidy wants to fix it. 
Cheers alex Alexander Biron "All science is either physics or stamp collecting." 
Ernest Rutherford (Nobel Price in chemistry 1908) /"\ ASCII ribbon campaign \ / --------------------- http://www-zeuthen.desy.de/~biron/ 
X against HTML mail Tel (+49)33762-7-7516 / \ and postings mailto:biron@ifh.de 
Thanks Randy for the explanation and bug fix, I will incorporate this in the next release, which I expect to make in March. 
Regards, -- Dave Raggett dsr@w3.org or dave.raggett@openwave.com 
W3C Visiting Fellow, see http://www.w3.org/People/Raggett 
I think you may have misunderstood my intent. 
Tidy issues an error message and generates correct HTML both before and after my proposed fix. 
It just that after, the correct HTML is more likely to reflect what the author originally intended. 
Tidy is used for many purposes. 
A major one is to tell people how to clean up their HTML. 
For this case, you're absolutely right -- Tidy is doing its job and the HTML should just be fixed. 
But another major use for Tidy is to automatically clean up HTML that cannot be fixed at the source. 
Examples include the horrid HTML that is generated by some HTML authoring software, HTML obtained from third parties, pre-existing HTML (often in huge quantities), etc. 
This is the case that I was attempting to address. 
As Alex points out, the unfortunate reality is that most people assume that if both (or even just one) of the major browsers displays their HTML like they want, their HTML must be OK. 
So, all else being equal, when Tidy is automatically cleaning up "bad" HTML, its best bet is to generate "good" HTML that mimics how IE and/or Netscape interpret the "bad" HTML, especially when IE and Netscape interpret the "bad" in the same way. 
-Randy 
Randy Waki: 
OK. Is this what you meant?: Tidy sees: "id=1&amp;lang=en". 
Tidy outputs: "id=1&amp;lang;=en" But author probably meant: "id=1&amp;amp;lang=en" So Tidy should output the last. 
Now that seems reasonable. 
Sorry for the misunderstanding. 
Bertilo Wennergren 
