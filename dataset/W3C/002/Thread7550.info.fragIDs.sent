Judy, John, Jim: How about this: 
(1) GET on a reference returns 302 as per John's proposal. 
(2) PUT works on a reference, unless what is being put is not a reference, in which case it fails. 
Then, browsers would work, clients could control whether they are dealing with the reference or the target both for read and writing. 
Alan Babich "Cogito ergo zoom." (I'm a Corvette ZR1 owner -- 405 hp, 180 mph.) 
From:Judith Slein [SMTP:slein@wrc.xerox.com] 
Sent:June 30, 1998 6:46 AM Subject:Re: GET on a reference 
I agree that this is the direction the discussion in Redmond seemed 
to be 
pointing. 
There is a requirement (3.1.4) that operations on a referential 
member not 
affect the resource it references.... If requests were automatically 
redirected to its target resource, 
this would not be possible. 
There is nothing automatic about the 302 response. 
A client can 
decide 
whether to chase the link or not. 
And so what if it is automatic? 
By 
hypothesis, the client does not understand DAV, so there's no choice 
it can 
make. 
Is there any operation that John's proposal makes impossible? 
I 
think not. 
I was not assuming that the client doesn't understand DAV. 
A client that does understand DAV may have occasion to do a GET or HEAD on a referential resource in order to see the headers for the referential resource. 
Do those headers come back with a 302 response? 
(I was assuming not.) If not, then how does the client ever get access to them? 
Similarly for PUT, the client might be wanting to replace the 
content of 
the target resource, but on the other hand it might be wanting to 
replace 
the reference with an ordinary resource that has content. 
I don't think John proposed that a PUT do redirection. 
Don't we 
already 
say that PUT on a referential resource is an error, just as PUT on a collection is an error? 
At the moment the spec says that the referential resource will be replaced by whatever was in the PUT. 
(That is, it will not be redirected, and it will not fail.) 
It's not even clear to me it would do anything. 
(e.g, if you do a 
PUT with 
Netscape and it gets a 302 response does it retry the PUT at the new 
URL?) 
I see nothing to object to in John's proposal. 
Name:Judith A. Slein E-Mail:slein@wrc.xerox.com 
MailStop:105-50C Web Site: http://www.nde.wrc.xerox.com/users/Slein/slein.htm 
Sorry, I'm confused. 
What do you mean? 
You can't PUT a reference. 
You can create one with MKREF, but not with PUT. 
In John's semantics, a client that does a PUT to a referential resource gets back a 302 and can then decide what to do. 
(Either report an error to the user or retry the PUT to the new URI.) If the user desires to replace the referential resource with one of some other type (either 'plain' or even a collection) the client first does a DELETE then a PUT (or MKCOL). 
This definition allows suitable clients to make ref resources act EXACTLY like plain resources, as far as the user is concerned, if the user wishes. 
That's real flexibility. 
And it also allows clients to treat them differently, if desired. 
Look at it this way. 
With most current servers you can create a redirecting resource by writings a suitable config file somewhere. 
So this capability already exists in the Web. 
The only difference is that now it will be possible to create such redirecting resources from the client side alone, by invoking HTTP methods, without creating or writing any server-side config file. 
It's a winner, I think. 
Oops. 
I forgot about MKREF. 
Never mind. 
Yes, I agree. 
Sounds like we've reached closure on this. 
Alan Babich 
From:Jim Davis [SMTP:jdavis@parc.xerox.com] 
Sent:July 01, 1998 2:22 PM Subject:RE: Get on a reference 
And, as I said last week, with most current servers you can create a non-redirecting referential member of a namespace by writing in those same config files. 
Forcing one or the other within the protocol is not an acceptable decision, since that will mean we will just have to add a non-standard extension to WebDAV to handle that case. 
The server is fully capable of doing either behavior, and there exist many situations in which pretending to be a normal resource *is* the desired behavior (keep in mind that the resource owner knows the properties of its own namespace and can decide for themself). 
So the right thing for the protocol to define is a settable option. 
Yes, I am well aware of the caching and relative URI implications. 
There is no point in denying people rope just on the offchance they might hang themselves. 
....Roy 
