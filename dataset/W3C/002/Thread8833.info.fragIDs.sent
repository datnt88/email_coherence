<s> Some thoughts on what we need to do in the near future:  </s>
<s> 1. Canonical XML  </s>
<s> It's been a REC for over a year now: happy birthday!  </s>
<s> smile/  </s>
<s> 1. XML Signature Syntax and Processing  </s>
<s> We're a REC and we have ~15 implementations (woo-hoo)!  </s>
<s> We have four erratum: either editorial clarifications or things we are actively working to address.  </s>
<s> 2. Exclusive Canonicalization I feel like the work on this specification is done and we're pretty much ready to move forward.  </s>
<s> I'd like to hear a few more people report success with Gregor's tests [1] and that you're satisfied with its operation in an application context.  </s>
<s> (Even if you've already sent in a report, if your column isn't complete or haven't interop'd with Gregor's tests, please do so.) If I get this feedback soon, I'll stage it for publication as a Proposed REC at the end of this month!  </s>
<s> 3. XPath Filter 2.0 Transform Thanks to this week's edits by Merlin (and discussion between Merlin, John, Aleksey, and Christian) I think we've converged on a design and text that we're happy with.  </s>
<s> If no one objects to the present text [2] (speak now!) I'll stage it for publication as a W3C Last Call Working Draft (and first "official" W3C WD) at the end of this month.  </s>
<s> 4. DNAMEs are always a fun issue grin/ The interop matrix for xmldsig now has an entry with Gregor's DNAME tests [3].  </s>
<s> It would be great to get some other reports on that!  </s>
<s> (Harada?) [1] http://www.w3.org/Signature/2002/02/01-exc-c14n-interop.html [2] http://www.w3.org/Signature/Drafts/xmldsig-xpath/Overview.html [3] http://www.w3.org/Signature/2001/04/05-xmldsig-interop#DNAME Joseph Reagle Jr. http://www.w3.org/People/Reagle/ W3C Policy Analyst mailto:reagle@w3.org  </s>
<s> IETF/W3C XML-Signature Co-Chair http://www.w3.org/Signature/ W3C XML Encryption Chair http://www.w3.org/Encryption/2001/  </s>
<s> There were no replies to my suggestion [1] about an option to process nodes instead of subtrees in XPath Filter 2.0 Transform so I am rasing this question again.  </s>
<s> I understand the performance concerns (and I do see small performance decrease in my tests).However,  </s>
<s> I believe this will add flexibility and provide better way to select "complicated" parts of XML document.  </s>
<s> Aleksey Sanin.  </s>
<s> [1]  </s>
<s> Hi Aleksey, We could go with a solution supporting both modes of operation; I'd suggest, in that case, Filter=interect and Filter=intersect-subtrees. However, before we go there, I would like to know what is the real- world use case that you are trying to solve.  </s>
<s> You seem to be suggesting that selecting just an element in isolation is a valid use case.  </s>
<s> Consider: I can see that it might be useful to sign this credit card, less the AuthCodeToBeFilledIn element.  </s>
<s> I cannot see the use case for signing something like cc:CreditCard / , which is the case that you have repeatedly brought up.  </s>
<s> I don't have much freedom to play with this (hence the current time), so you will have to forgive my arbitrary statistics, but I quickly ran a benchmark of using an intersect followed by a subtract filter to select an element, less certain children (e.g., the above), versus a pure XPath node-set intersect filter where I used a single XPath expression to achieve this same effect (using a predicate).  </s>
<s> The pair of subtree filters was, again, significantly (2x) faster than the node-set XPath option.  </s>
<s> Now, it would seem to me that the only real advantage of a node-set XPath option would be to perform this type of operation.  </s>
<s> Indeed, the very act of making it available would suggest that this is one of its purposes; but it is not the ideal choice for doing this.  </s>
<s> If, alternatively, the purpose of the node-set XPath is that people will be 'familiar' with it, then their familiarity will breed poorly-performing signatures.  </s>
<s> So, as far as I can see (and it seems that this is confirmed by your tests), our subtree formulation speeds up all the meaningful use cases; and I'd imagine that you didn't even optimize your code for common subtree operations.  </s>
<s> If you can present real use cases where subtrees don't do the job, then I'll gladly advocate a more flexible/complex approach; I simply have yet to encounter the problem that you are solving.  </s>
<s> Merlin r/aleksey@aleksey.com/2002.04.10/15:24:23  </s>
<s> The information contained in this message is confidential and is intended for the addressee(s) only.  </s>
<s> If you have received this message in error or there are any problems please notify the originator immediately.  </s>
<s> The unauthorised use, disclosure, copying or alteration of this message is strictly forbidden.  </s>
<s> Baltimore Technologies plc will not be liable for direct, special, indirect or consequential damages arising from alteration of the contents of this message by a third party or as a result of any virus being passed on.  </s>
<s> This footnote confirms that this email message has been swept for Content Security threats, including computer viruses.  </s>
<s> Hi, Merlin!  </s>
<s> I already agreed with you that "subtrees" solution seems to work faster.  </s>
<s> You are absolutelly right that I did no optimization at all (btw, it is an interesting question "what is it better to optimize: XPath Filter or the XPath engine used in the filter?").  </s>
<s> And in my tests excluding childs in "subtrees" case takes much more time than calculating single XPath expression (the XPath expressions were similar and excluding N childs took N times more than selecting the node).  </s>
<s> If you still have documents and expressions you've used for tests I would like to try to evaluate these expressions using the test program I wrote.  </s>
<s> It'll be interesting to compare the results of XML/XPath engine I use (LibXML2) with your results.  </s>
<s> As an example when you do not want to sign subtrees, consider the following element /it:Item It's possible that the only information we really want to sign is the item Id and price.  </s>
<s> In "subtrees" case we need to select it:Item / first and next exclude all its childs.  </s>
<s> In the other case, everything is done in one step (and it's clear that it will be faster).  </s>
<s> From my point of view, it's very difficult to prove one point of view or another using any examples.  </s>
<s> I have feeling that real performance will significanty depend on a few different factors we don't know about (for example, XPath engine optimization).  </s>
<s> In my case, from the implementation point of view, providing "non-subtrees" option will cost nothing (assuming that "subtrees" option is implemented).  </s>
<s> On the other hand, this can give a simple solution to the case when "subtrees only" standard requires non-intuitive, tricky, multi-steps hack.  </s>
<s> Also to prevent "poorly-performing signatures" we can make a clear distinction by using different requirement levels (for example, MUST for "subtrees" and MAY for "non-subtrees") and probably put a note about possible performance drawbacks in using "non-subtrees" filter (remember, we assumed that before using signatures John Smith will read the standard :) ).  </s>
<s> Aleksey Sanin  </s>
<s> Hi Aleksey, You're right that it's difficult to prove anything given different processing scenarios, and there are questions of optimizing an XPath processor versus coming up with an optimized "profile" akin to what we are doing.  </s>
<s> Our answers to these questions are driven by operational experience and it's the sub-tree case that we found needs to be addressed.  </s>
<s> For example, people want to easily isolate multiple signatures or a SOAP payload.  </s>
<s> These are our real world requirements.  </s>
<s> That isn't to say the example you gave is unimportant, but absent a bunch of folks saying "hey, I have a critical problem in this application" I expect to publish this as a W3C Working Draft.  </s>
<s> We can continue the discussion and tests, and I certainly welcome proposed text to make the issue more clear to readers of the spec.  </s>
