See below. 
Organization: Intalio References: 4.3.2.7.2.20030519094701.03532b90@franklin.cisco.com 
This is an interesting problem. 
The problem from what I understood is that companies track both orders and shipment, but their reports only contain pending/fulfilled orders. 
So if some orders made and reported in Q1 get cancelled after the report is made, the Q2 report would contain Q2 orders but would not contain negative orders. 
For whatever reason the cancellations are never reported and so the data is skewed. 
The government on the other hand prefers to report orders because orders are a good indication of the future and helps identify trends in the economy. 
I expect that there's no serious process problem. 
Whether it's a good process design or just a hack, if they can't properly cancel the orders they would end up with stocks of unused components. 
The cancellation may just remove those records hence nothing to report, or leave them untouched but never issue a shipment, or maybe change their status to cancel but never report negative orders. 
As far as the choreography is concerned, there's an interesting requirement here. 
If the definition is strictly serial then the process can only check for cancellation shortly before it starts delivery (e.g. using a pick in BPEL). 
That may happen weeks after the order was effectively cancelled, a waste of resources. 
Instead you want the cancellation message to arrive and get processed at any point before sending an advance shipping notice. 
In WSCI/BPML you would use a nested process to get the cancellation message and then terminate everything with a fault. 
In BPEL you would use an event handler (same model, different name). 
So both languages are well suited to deal with that. 
A different issue is what does a cancel message mean. 
Some people believe that it should be a protocol message that stops the process dead on its tracks. 
But then you can't record the fact that the order got cancelled, allocate products to some other order, send a nasty e-mail to the buyer, etc. 
It needs to be just another message that incidentally causes some activities to be terminated but with no magical semantics. 
Where it becomes even more interesting is the touch point between execution and choreography. 
Our customers don't really care about the choreography itself, what they are looking for is a way to optimize their business processes. 
If one of their partners doesn't abide to their WSDL, or cancels pending orders, they're not going to sue them. 
In fact, the cancellation is written into the contract so there's no legal merit. 
But now they've wasted a lot of precious time and resources working on an order that never gets paid for. 
For some people the choreography is purely prose and non-executable, and some kind of way to enforce order of messages sent and received. 
For our customers it's a way to look at their side of the choreography and make interesting predictions about it, for example the number of orders that get cancelled. 
That allows them to define their side of the choreography and do things better. 
They may decide to speed up delivery so the choreography moves faster past the point of cancellation and delay invoicing to after they know the order would be paid for. 
(Amazon for example invoices before starting delivery since their invoicing is relatively cheap, they deal with credit cards so there's less hassle involved) That's generally why we like the choreography specification to have more touch points with execution rather than live in its own space. 
The sense we are getting is that being able to specify industry standard choreographies a la RosettaNet is very helpful in reducing costs by conducting business over the write. 
That's like having a robot that can paint a car in half the time it takes a human person to do it. 
But if you can actually correlate the choreography to the execution you can streamline your e-commerce by doing things differently (either in the choreography or the execution). 
That's akin to going from a workshop to an assembly line, and that's where you can get the most ROI. 
Which probably explains some of the disagreement we have in the group. 
Reducing the number of choreographies is helpful and a goal in itself. 
But if everything is automated and the deployment cycle is a one-click process, then you get more power by using choreographies that are tailored for specific cases. 
People in the semiconductor industry would use a choreography that is different from the one used in the car industry where the cancellation rate is lower. 
And they can do that if we provide a solution that makes choreography definition, deployment and change management as easy as one-click shopping. 
We're not quite there yet, but I expect that a lot more people will get it when they become exposed to the next generation BPM systems. 
**Anyway, we can take this back to the mailing list. 
I think the point about being able to receive cancel message while doing other activities is an important one. 
The point about optimizing processes and choreographies together or using streamlined choreographies would probably be lost in the ensuing discussion ;-)** arkin 
Assaf, In the myriad of discussions that are unfolding, I know we spoke about completing processes, and whether or not you apply the decision points/context before, during or before completion. 
I have a real-world example in the manufacturing industry published in the _Wall Street Journal_, 30 May 2003: The Commerce Department tracks durable goods order for the manufacturing sector. 
In addition, previously, the department published data on semiconductor industry durable-goods report. 
[This is the interesting part] It is common practice for buyers of semiconductors to order from multiple companies at onece, then cancel all but the first order to make deliery. 
As a result, data on orders is skewed. 
Therefore, the government will not report on shipments not orders. 
I think we can learn some lessons here about choreography and real-world practice, and see what we can accommodate. 
If you want me to forward to list, let me know. 
Pretty simple. 
Monica 
BPM's Underpinning: The Pi Paradigm BPM is rapidly proving popular, since it gives businesspeople control over the processes that make their companies tick. 
And it doesn't hurt a bit that BPM is a winner in the ROI arena, according to BPM experts and champions Howard Smith and Peter Fingar. 
At the very heart of BPM is "an obscure mathematical theory" called Pi Calculus, literally an award-winner. 
Here, Smith and Fingar explain what Pi Calculus is, and how it forms the foundation for the hot phenomenon known as BPM: BPM's Underpinning: The Pi Paradigm By Howard Smith and Peter Fingar The recent wrangles over standards for forthcoming Business Process Management Systems (BPMS) [see "IBM and Microsoft Messing with Process Standards http://eai.ebizq.net/bpm/smithfingar_3.html "] give us reason to believe something important is at stake. 
While most businesspeople currently understand "BPM" as the evolution of workflow systems or application integration solutions, BPM is in fact a brand new technology. 
All technologies have a conceptual center, a "first class citizen" from which all else is constructed. 
BPM is no different (See Table 1). 
Perl String, Function EDI Business element, document XML Tag, Markup Cobol Report APL Equation ASN.1 Field C Function, Pointer RDBMS Tuple Java Object, Component Workflow Task, Resource EAI API, Message BPM Process Table 1 - First Class Citizens In Computing The choice of a technology's first class citizen governs its suitability for solving problems. 
The conceptual center of BPM is the business process. 
Processes are not composed of other technologies' first class citizens; they are composed of elemental process patterns of communication. 
Remember when you were first introduced to "objects" and wondered what they were? 
BPM requires a similar shift in thinking. 
Unlike objects, which are abstract and alien to most business people, processes are closely aligned with the way companies think, act, develop strategy and mobilize resources. 
That's why there has recently been an intense focus within the IT industry on process modeling languages, such as BPML, BPEL, XPDL and BPSS. 
It also accounts for the high ROI associated with workflow projects, the precursor to BPM, and the frequently low ROI (or complete failure) of application development projects. 
The history of IT is dominated by experiments that have attempted to get closer to the way businesses really work. 
Although most products will use the same boxes and arrows to depict some form of process, procedure or protocol, the comparison stops there. 
BPM is not workflow, nor EAI. BPM is a new paradigm, calling for new standards, technologies and products, which altogether will deliver unprecedented return on investment to small and large organizations. 
It was for this reason that the Business Process Management Initiative (BPMI.org) was formed. 
Proof that a significant shift is happening in the enterprise software industry can usually be found when the largest and most established players start paying attention to it. 
This is precisely what happened when IBM and Microsoft merged two previous languages, XLANG and WSFL, and jointly released the Business Process Execution Language for Web services (BPEL4WS). 
Other than a desire to control and lead, why would they do this, since BPMI.org had previously published a similar language, Business Process Modelling Language (BPML) upon which its many members had already voted? 
The answer lies in an obscure mathematical theory, Pi Calculus http://www.bpm3.com/picalculus/index.html . 
Invented by Robin Milner, professor of computer science at Cambridge University, and a winner of the ACM Turing Award -- the Nobel Prize of computer science -- Pi Calculus has been the focal point of a decade-long effort to unify what were previously thought to be two different entities: computation and communication. 
This insight lies at the heart of how to represent all processes so that they can be manipulated as easily as we do relational data today. 
Pi Calculus gives BPM, and BPML, its conceptual center, an abstract data type able to represent business processes. 
Hence, vendors can develop BPMS so IT can provide "BPM as a service" to the business, just like e-mail or database management. 
To business people, it seems that technology is always getting more complex. 
Technical people feel the same way. 
Over the last five years, delivering business applications has become much more complex, with layer upon layer of new infrastructure requirements and new features. 
While this has been good for incumbent IT industry players that sell new products for new layers, it is not necessarily so good for companies that use them as business tools. 
When complexity mounts and eventually becomes unmanageable, it's time for action. 
As Walt Disney once said, objecting to a proposed sequel to his Three Little Pigs cartoon, "You can't top pigs with pigs." 
In the world of business, stacking a thousand doghouses one atop the other to build a skyscraper is a great proposition for doghouse vendors, but not for future occupants. 
Skyscrapers need an architecture of their own--their own paradigm, not a sequel to the doghouse paradigm. 
Business processes, too, need a paradigm of their own, not sequels to pre-existing technologies. 
What's needed is a radical simplification that will allow business people to cope with the dynamics and complexities of real-world business processes. 
The spreadsheet is a simple yet eloquent example of a useful paradigm shift. 
The convenience and low cost of the breakthrough was so striking that it led to the PC revolution in business. 
To the enterprise, the PC loaded with a spreadsheet meant a radical simplification of routine calculations, transferring to the everyday business person a function that had once required special programming skills. 
A similar simplification and transfer of functions is needed by those pursuing business process development and optimization, for as the management prophets foretell, the next phase of corporate development will require systematic control of the value chain, rather than narrow-gauge process fixes. 
Reengineering prophet Michael Hammer has admitted that managing such wholesale change is mind-numbingly complex. 
In fact, it is no longer possible without computer assistance. 
The spreadsheet could not have been successful had it not been for the fact thatpersonal computers--a standards-based commodity--were spreading like wildfire elsewhere in society. 
With the widespread adoption of application servers, component-based development and Web services, the field is ripe for the wildfire spread of process management. 
Judging by the early success of BPM vendors, companies are already embracing process management in the way they adopted data management decades ago by separating out data for application-independent management, analysis and controlled sharing. 
At that time, companies knew they had a data problem, and they responded by recognizing the value of relational data management systems. 
We believe that companies are now recognizing they have an analogous process problem. 
Companies are seeking both hyper-efficiency and competitive differentiation. 
Packaged software is no longer providing an answer. 
Companies are beginning to realize that what they need is not a suite of new applications, but the application of process management. 
The balance of power in the business-IT relationship must therefore shift, away from the need to squeeze business processes into the pre-packaged fashions of the IT industry, and toward the ability to design, improve and transform the business processes that BPM enables. 
This must be achieved otherwise Nicholas Carr's recent pronouncement in Harvard Business Review that "IT Doesn't Matter" (May 2003 HBR) will come true! 
But BPM does much more than facilitate process design. 
It provides a direct path from vision to execution. 
It's not so much a matter of "rapid application development" as "remove application development" from the business cycle. 
Show the BPM capability to any executive at any level and they will understand inside of five minutes how to break through the IT logjam. 
Some IT execs may still want to prevent business people from defining business processes themselves, saying it is too complex a job and should be left to specialists. 
That may be true right now, but it won't be by the week after next. 
Sometimes it's hard to see the obvious. 
Companies have no trouble understanding how IT can provide an e-mail service, yet display no need for IT to mediate the e-mail conversations themselves. 
Initial ROI figures are impressive, and investment in BPM is justifying itself in the very first projects, and for the very first processes. 
Early results reveal one or two orders of magnitude of projected reductions in total cost of process ownership and process design to production time. 
The significance of these results has been confirmed recently by aggressive moves by the 900-pound gorillas in the IT industry. 
These industry giants have taken unprecedented steps to create new BPM standards, and create their own standardization paths, presumably to exert control over the release of the BPM breakthrough into the corporate environment. 
OASIS is now the host for the standardization path of BPEL4WS. 
However the cat, and the math, are truly out of the bag. 
You can't buck math when it comes to taming the business process, meaning all standards paths must ultimately lead to process calculus if they are to provide the solid foundation that's essential to BPM. 
Yet it won't be standards that drive BPM adoption. 
The true drivers are economic. 
Businesses recognize that BPM is a powerful new capability to manage their business processes, needed to cope with uncertain and rapidly changing economic times. 
If IT companies are to thaw the current "IT Ice Age," they'd better meet their customers' pressing needs with BPM systems built on standards that embody a true business process foundation. 
About the Author Howard Smith is chief technology officer (Europe) of Computer Sciences Corporation and co-chair of the Business Process Management Initiative (BPMI.org). 
Peter Fingar is one of the industry's recognized experts on BPM and author of The Death of "e" and the Birth of the Real New Economy (www.mkpress.com 
http://www.mkpress.com 
). 
This column is dedicated to those at work every day building the company of the future, the process-managed enterprise. 
We look forward to your feedback, questions, suggestions and comments that will shape this discussion of the Third Wave. 
Like the third wave of BPM itself, this column will be built not just to last, but also to adapt to your needs and interests. 
Write to us at authors@bpm3.com mailto:authors@bpm3.com . 
Smith and Fingar are the co-authors of Business Process Management-The Third Wave http://www.amazon.com/exec/obidos/ISBN=0929652339/pfingarA/ 
Preview the book at www.bpm3.com 
http://www.bpm3.com 
sorry subject was wrong before 
