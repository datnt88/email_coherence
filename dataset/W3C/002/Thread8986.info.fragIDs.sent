According to some users of XAdES, it is more secure as you also sign the hash of the signer's certificate in order to thwart changing this element. 
Any thoughts on why this presumably good solution is not a part of XML Dsig? 
thanx Anders Rundgren 
You can do this now, by adding a Reference that points to the cert and including the cert in the Signature. 
I don't think anything special is needed. 
/r$ Rich Salz, Chief Security Architect DataPower Technology http://www.datapower.com 
XS40 XML Security Gateway http://www.datapower.com/products/xs40.html 
XML Security Overview http://www.datapower.com/xmldev/xmlsecurity.html 
Rich, 
Sorry for the stupid question but since X509Data and X509Certificate do not support "Id" attributes, would not KeyInfo would be a better candidate? 
Anders 
Not a stupid question -- it shows you've read the spec more carefully than I have, or that I've forgotten too much. 
Yes, keyinfo would be what you have to use. 
Or perhaps an errata that adds an id attribute would be best. 
:) 
Rich Salz, Chief Security Architect DataPower Technology http://www.datapower.com 
XS40 XML Security Gateway http://www.datapower.com/products/xs40.html 
XML Security Overview http://www.datapower.com/xmldev/xmlsecurity.html 
A novice question. 
Pardon me if it is obvious. 
What is the need for signing the X509 certificate. 
Since each certificate contains a signature of its contents, which is validated by the next level Cert, until a self signed Cert is met. 
And the root Cert (self signed) is not trusted unless the receiver has that certificate in his/her cert store already. 
Even if the Certs are signed, by a reference, its still not secure until a trusted Cert (present in Cert store) is present in the Cert chain, isnt it. 
As long Cert validation happens, the contents is not trustable isnt it. 
And Cert validation is a prerequisite, and independent of the authenticating of the message received, isnt it. 
thanks Joseph 
A Certificate's Issuer binds a Subject and its Public Key with a specific set of Claims (e.g. Account #, validity period, etc.). 
The same Public Key might be bound in different Certificates (for the same or other Subject) to different sets of Claims. 
So there may exist more than one valid Certificate with the same Public Key. 
Including the Certificate with the in the signature makes eliminates the possibility that the Certificate might be replaced after signing. 
Thanks, Mike w3c-ietf-xmldsig-request@w3.org wrote on 03/11/2004 01:49:36 PM: 
Suppose I have a single keypair, but multiple certificates for that pair. 
For example, I might have a cert that identifies me as an employee, for signing email, and I might have a cert that identifies me as an officer of the company, for signing official documents. 
Unless I sign the cert, I can swap the two roles, and the receiver cannot tell. 
Even worse, a "fraudulent" or irrespoinsible CA can mint a new certificate for my public key that contains all sorts of things. 
Unless the receiver does full cert-chain validation (and really, who does that? 
nobody:), they can be fooled by this fraudulent cert. 
/r$ 
Rich Salz, Chief Security Architect DataPower Technology http://www.datapower.com 
XS40 XML Security Gateway http://www.datapower.com/products/xs40.html 
XML Security Overview http://www.datapower.com/xmldev/xmlsecurity.html 
Michael, Rich, Thanks to both of you for the clarification. 
I was not aware a same key be certified by different bodies, and/or for different rolls. 
Even a full cert-chain validation, cannot determine the fraud in that situation, if the hacker has in possession one valid message each signed by the sender in his each role. 
thanks Joseph 
However, I do not think that modelling the signer role per using different 
certs for the same key is a good practice. 
Rather the relying party should 
deduce this from the context, for instance from the data being signed (as 
you do it in the paper world as well), or from another signature attribute 
which XadES provides (Signer Role). 
Yes, reading this chain I got the same feeling as Gregor that the CAs issuing 
multiple certs per the same key pair had crossed the line of the intent of 
the system and were now using the self-signing ability of XML DSig or XAdES 
to fix the hack. 
A key pair is supposed to be assigned to a unique identity. 
If, within a system, 
that means (name+role), then that is what should be assigned the key pair. 
To say that (name+role) is the identity, but we assign the key pair to name 
opens up the real possibility of abuse of the system. 
To wit, how is the relying party supposed to know whether or not a cert is the 
unique wrapper for a given key pair? 
Therefore, how can generic signature engines 
be written? 
Must they be told to require signatures that sign the certificate as 
part of the core validation? 
Conversely, because it's not part of core validation, shouldn't the CA's have 
stayed away from this practice? 
John Boyer, Ph.D. Senior Product Architect and Research Scientist PureEdge Solutions Inc. 
It is interesting to note that the use of a single key-pair for multiple certificates still is fairly often touted by promoters of smart cards. 
Usually due to limitations in private key storage and generation. 
Anders PS I never thought this was a such a great idea BTW DS 
However, I do not think that modelling the signer role per using different 
certs for the same key is a good practice. 
Rather the relying party should 
deduce this from the context, for instance from the data being signed (as 
you do it in the paper world as well), or from another signature attribute 
which XadES provides (Signer Role). 
Yes, reading this chain I got the same feeling as Gregor that the CAs issuing 
multiple certs per the same key pair had crossed the line of the intent of 
the system and were now using the self-signing ability of XML DSig or XAdES 
to fix the hack. 
A key pair is supposed to be assigned to a unique identity. 
If, within a system, 
that means (name+role), then that is what should be assigned the key pair. 
To say that (name+role) is the identity, but we assign the key pair to name 
opens up the real possibility of abuse of the system. 
To wit, how is the relying party supposed to know whether or not a cert is the 
unique wrapper for a given key pair? 
Therefore, how can generic signature engines 
be written? 
Must they be told to require signatures that sign the certificate as 
part of the core validation? 
Conversely, because it's not part of core validation, shouldn't the CA's have 
stayed away from this practice? 
John Boyer, Ph.D. Senior Product Architect and Research Scientist PureEdge Solutions Inc. 
Yes, it is very interesting how the marketing mind works, turning a limitation into a desirable feature. 
They're really good at manufacturing need. 
:-) About 10 years ago we had a doc writer who went on to marketing greatness (someplace else), but the doc writer had this tendency of occasionally finding a bug then writing about it as a wonderful feature rather than realizing it wasn't intended. 
The particular bug that comes to mind was my own. 
I was doing something that was not quite right with windows 3.1 color palette management and the occasional video card took note of it. 
So, instead of getting a directory menu that was consistently a steel blue-grey color, this doc writer would get a different color every time the program was launched. 
So, into the manual went this long spiel about the wonderful, cheery, background color mutation strategy. 
Even called it the 'rainbow effect.' 
Ironically, the name ended up being appropriate as it described all the colors I turned when I saw the documentation. 
:-) 
John Boyer, Ph.D. Senior Product Architect and Research Scientist PureEdge Solutions Inc. 
John, Just like none of us should use the same username/password for different systems, none of us should request multiple certificates for the same key pair. 
However, a CA has no ultimate control over this since the subject may request certificates from multiple CAs. 
Thanks, Mike w3c-ietf-xmldsig-request@w3.org wrote on 03/12/2004 11:52:56 AM: 
different 
should 
(as 
attribute 
issuing 
of 
XAdES 
system, 
pair. 
name 
is the 
signature engines 
certificate as 
have 
