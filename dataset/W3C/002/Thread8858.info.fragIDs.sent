I am reviewing a specification for an application proposing to use XML and DSIG. 
The application proposes to use the feature of DSIG where the 
Reference does not have a URI attribute. 
Paragraph 4.3.3.1 says that "the identity of the object is part of the application context." 
I have a set of questions. 
1 Is this another way of saying "it's up to the application to figure 
out what the Reference points to." 
2 If #1's answer is "yes", would I be correct to assume that such an application could not use a generic DSIG compatible signer or verifier, because this generic software could not resolve the reference? 
3 If #2's answer is "yes", isn't this a fairly strong argument for NOT using the "Reference without a URI attribute" feature. 
4 If #2's answer is "no", is this because there is an unwritten convention for resolving a Reference without a URI? 
For example, would a generic signer/verifier assume it points to the whole document, the first element, or something like that? 
Ken Goldman kgold@watson.ibm.com 914-784-7646 
Now that I'm clear on what a Reference without a URI does, here's what I was trying to ask in #2 and #3. 
A generic DSIG verifier would presumably be passed a document and would come back with a pass/fail result. 
When this generic code came across a Reference without a URI, it would have no way to follow the Reference, no way to verify the hash, and therefore no way to verify the signature. 
The application would have no way to pass in a URI parameter or octets. 
I suspect a similar problem with a signer. 
This is based on my guess on how a signer/verifier would work. 
I'd like to hear opinions from people who have implemented, or plan to implement, a DSIG signer or verifier. 
Do you plan to handle a Reference without a URI attribute? 
X-Sender: reagle@localhost Date: Tue, 07 Nov 2000 15:48:44 -0500 From: "Joseph M. Reagle Jr." reagle@w3.org 
Yes. While I give my best answer to the following as an editor, I'd like to defer to the advocates and implementors of this feature... 
I'm not sure I completely follow and I suspect it would depend on how you implement your DSig compliant signer/verifier. 
The processing rules require that the data be obtained, but doesn't say HOW that must happen: 
I expected an app wanting to use this feature would have an implementation that permitted the object to be passed in via a parameter as well. 
However, I think you have a legitimate point about what exactly we are requiring with respect to conformance (and I'd like to hear others thoughts.) 
I don't think so, I assume the app had some other way of passing octets in. 
Joseph Reagle Jr. W3C Policy Analyst mailto:reagle@w3.org 
IETF/W3C XML-Signature Co-Chair http://www.w3.org/People/Reagle/ 
Ken Goldman kgold@watson.ibm.com 914-784-7646 
Hi, I think that most XMLDSIG implementations (certainly ours) accept contextual information as a parameter to the signing/verification process. 
The resolution of an implicit reference (URI or node set) is part of this contextual information. 
Other relevant contextual information is a base URI against which to resolve relative references, a security context in which to resolve keying information, etc. 
I think you will find that an external "reference resolver" is a fairly typical form for this part of the contextual information. 
Applications can configure and/or implement this resolver as appropriate for their needs; specifying, in particular, how to resolve implicit references. 
Merlin r/kgold@watson.ibm.com/2000.11.08/16:51:15 
