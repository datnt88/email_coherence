('us-ascii' encoding is not supported, stored as-is)
Attached a really simple test which creates a DOMBuilder.
Compiling fails since it should be:
builder = lsImplementation.createDOMBuilder((short)1,schemaType);
instead of:
builder = lsImplementation.createDOMBuilder(1,schemaType);
How do you cast the constant to a short within the test ?
Thanks in advance,
jeroen
X-Hive Corporation
Jeroen van Rotterdam, CEO
e-mail: jeroen@x-hive.com
All casting is implicit, the transform is responsible for doing any
appropriate casting. I assume this scenerio (required casting between data
types) had not previously appeared in the tests. As a workaround, you may
try assigning the value to a short variable and then using the short
variable as the parameter.
createDOMBuilder var="builder" obj="lsImplementation" mode="mode"
schemaType="schemaType"/
Curt,
I think we may be encountering some new
issues. These are level 3 tests -- the level
3 test suite language and the transforms
have not really been exercised all that
heavily. Do you think that maybe this
problem and the whatToShow problem
might be result of problems with the
generated language or the transform?
--Mary
data
I believe that the transform just assumes that whatever you put in for a
literal can be directly copied into the Java source and that it only
generates cast operators when there is a mismatch between a variable type
and parameter type. Introducing a variable to hold the mode value would
probably result in the proper code being generated since assignment of a
integer literal to a short does not need an explicit cast and if the
variable is is typed as an int, it would trigger the existing casting logic.
It is a bit of a kludge, but it might keep Jeroen rolling until I can look
at modifying the transform. I don't think it is anything L3 specific, just
there are very few places in the Java binding where short parameters are
used.
test-to-java.xsl has been updated to add a (short) to a numeric literal used
as a short or unsigned short parameter.
