Maybe this is rather an issue using Watchfire WebXACT [1], but checking WCAG
conformance it throws an error when using no label elements in forms:
'Explicitly associate form controls and their labels with the LABEL element.'
In this case, I simply offer a search feature on my site [2] by using a text
field and a button, which definitely is the best and recommended way (see
e.g. [3] or perform additional tests), offering simplicity as well as
usability. Thus, if I'd be forced to label these elements, I'm also forced to reduce
my site's usability and have to irritate users by e.g. placing 'search' twice
(for example by using 'search' as a text label for the text field and to
label the button this way, too), what I'm not willing to do.
Since I'm not sure if the WCAG 2.0 Techniques (WD) softens this issue by
saying 'Using the LABEL element, associate form elements with their labels' [4],
I'm not sure if this is a critical point, either. Consequently, I'll claim
conformance in this point. -- I'm sorry if this is really an already solved
problem (btw, I partially find the WCAG document structure irritating since it
seems impossible to switch between WCAG, UAAG, Techniques and so on), but I
couldn't determine the current handling that fast.
All the best,
Jens.
[1] http://webxact2.watchfire.com/
[2] http://meiert.com/
[3] http://www.useit.com/alertbox/20031110.html (#8)
[2] http://www.w3.org/WAI/GL/WCAG20/WD-HTMLTECHS-CHECKLIST-20020324.html
Jens Meiert
Interface Architect
WebXACT is a bit restrictive, in my view, in its insistence on use of
the label element in all cases. In the case of the search form you
describe, I think it would be legitimate to use the title attribute on
the input element to prompt the user *before* she or he tabs to the
Search button. For example:
input type="text" size="30" title="Enter a word or phrase to search
for"
People who use screen readers would hear the following:
Enter a word or phrase to search for edit (JAWS inserts the word "edit"
to signal the presence of a text input)
Search button press spacebar to activate (JAWS adds the phrase about
pressing the spacebar)
Without the title attribute, someone using a screen reader would hear
the following:
Edit
Then, when they press tab to move on, they would hear:
Search button press spacebar to activate
In other words, they wouldn't be *certain* they were in a search field
until they had tabbed past the field to the button. This may seem like
a small thing, but this kind of thing adds up to quite a few extra
keystrokes in the course of a day's work, and it's very frustrating to
have to go back and forth all the time. The title attribute gives you a
way to keep your screen visually clean while providing auditory
information that some users depend on.
John
"Good design is accessible design."
Please note our new name and URL!
John Slatin, Ph.D.
Director, Accessibility Institute
University of Texas at Austin
FAC 248C
1 University Station G9600
Austin, TX 78712
ph 512-495-4288, f 512-495-4524
email jslatin@mail.utexas.edu
web http://www.utexas.edu/research/accessibility/
Behalf Of Jens Meiert
Maybe this is rather an issue using Watchfire WebXACT [1], but checking
WCAG conformance it throws an error when using no label elements in
forms: 'Explicitly associate form controls and their labels with the
LABEL element.'
In this case, I simply offer a search feature on my site [2] by using a
text field and a button, which definitely is the best and recommended
way (see e.g. [3] or perform additional tests), offering simplicity as
well as usability. Thus, if I'd be forced to label these elements, I'm
also forced to reduce my site's usability and have to irritate users by
e.g. placing 'search' twice (for example by using 'search' as a text
label for the text field and to label the button this way, too), what
I'm not willing to do.
Since I'm not sure if the WCAG 2.0 Techniques (WD) softens this issue by
saying 'Using the LABEL element, associate form elements with their
labels' [4], I'm not sure if this is a critical point, either.
Consequently, I'll claim conformance in this point. -- I'm sorry if this
is really an already solved problem (btw, I partially find the WCAG
document structure irritating since it seems impossible to switch
between WCAG, UAAG, Techniques and so on), but I couldn't determine the
current handling that fast.
All the best,
Jens.
[1] http://webxact2.watchfire.com/
[2] http://meiert.com/
[3] http://www.useit.com/alertbox/20031110.html (#8)
[2] http://www.w3.org/WAI/GL/WCAG20/WD-HTMLTECHS-CHECKLIST-20020324.html
Jens Meiert
Interface Architect
What if the place holding text for the text box read "enter search text
here"
Would that do it?
All the best
Lisa Seeman
Visit us at the UB Access website
UB Access - Moving internet accessibility
Behalf Of John M Slatin
WebXACT is a bit restrictive, in my view, in its insistence on use of
the label element in all cases. In the case of the search form you
describe, I think it would be legitimate to use the title attribute on
the input element to prompt the user *before* she or he tabs to the
Search button. For example:
input type="text" size="30" title="Enter a word or phrase to search
for" input type="submit" value="Search"
People who use screen readers would hear the following:
Enter a word or phrase to search for edit (JAWS inserts the word "edit"
to signal the presence of a text input) Search button press spacebar to
activate (JAWS adds the phrase about pressing the spacebar)
Without the title attribute, someone using a screen reader would hear
the following: Edit
Then, when they press tab to move on, they would hear:
Search button press spacebar to activate
In other words, they wouldn't be *certain* they were in a search field
until they had tabbed past the field to the button. This may seem like
a small thing, but this kind of thing adds up to quite a few extra
keystrokes in the course of a day's work, and it's very frustrating to
have to go back and forth all the time. The title attribute gives you a
way to keep your screen visually clean while providing auditory
information that some users depend on.
John
"Good design is accessible design."
Please note our new name and URL!
John Slatin, Ph.D.
Director, Accessibility Institute
University of Texas at Austin
FAC 248C
1 University Station G9600
Austin, TX 78712
ph 512-495-4288, f 512-495-4524
email jslatin@mail.utexas.edu
web http://www.utexas.edu/research/accessibility/
-----Original Message-----
Behalf Of Jens Meiert
Maybe this is rather an issue using Watchfire WebXACT [1], but checking
WCAG conformance it throws an error when using no label elements in
forms: 'Explicitly associate form controls and their labels with the
LABEL element.'
In this case, I simply offer a search feature on my site [2] by using a
text field and a button, which definitely is the best and recommended
way (see e.g. [3] or perform additional tests), offering simplicity as
well as usability. Thus, if I'd be forced to label these elements, I'm
also forced to reduce my site's usability and have to irritate users by
e.g. placing 'search' twice (for example by using 'search' as a text
label for the text field and to label the button this way, too), what
I'm not willing to do.
Since I'm not sure if the WCAG 2.0 Techniques (WD) softens this issue by
saying 'Using the LABEL element, associate form elements with their
labels' [4], I'm not sure if this is a critical point, either.
Consequently, I'll claim conformance in this point. -- I'm sorry if this
is really an already solved problem (btw, I partially find the WCAG
document structure irritating since it seems impossible to switch
between WCAG, UAAG, Techniques and so on), but I couldn't determine the
current handling that fast.
All the best,
Jens.
[1] http://webxact2.watchfire.com/
[2] http://meiert.com/
[3] http://www.useit.com/alertbox/20031110.html (#8)
[2] http://www.w3.org/WAI/GL/WCAG20/WD-HTMLTECHS-CHECKLIST-20020324.html
Jens Meiert
Interface Architect
First, John meant use of the title attribute (which IMO is the better
solution) not of place holding text, CMIIW. Second, I rather recommend to say
'enter search text' than 'enter search text here', since 'here' is unnecessary to
say (as is to use 'click here').
Jens.
Jens Meiert
Interface Architect
That's the correct: I was *not* proposing placeholder text.
The content of the title attribute would not be visible on the screen,
but would be spoken by screen readers and talking browsers. A visual
prompt is provided by the submit button, which is labeled "Search" (not
simply submit). At least this is how I understood the situation.
In other words, sighted users see a button labeled "Search" immediately
to adjacent to the empty input field. Visually, then, the button works
like a label.
I think placeholder text would be both redundant and potentially
confusing, because some user agents automatically select the placeholder
text (so that entering the search text would replace the placeholder)
while others do not. In the latter case, a user might enter the search
term but submit a query that also contained the placeholder text,
leading to confusing results.
John
"Good design is accessible design."
Please note our new name and URL!
John Slatin, Ph.D.
Director, Accessibility Institute
University of Texas at Austin
FAC 248C
1 University Station G9600
Austin, TX 78712
ph 512-495-4288, f 512-495-4524
email jslatin@mail.utexas.edu
web http://www.utexas.edu/research/accessibility/
First, John meant use of the title attribute (which IMO is the better
solution) not of place holding text, CMIIW. Second, I rather recommend
to say 'enter search text' than 'enter search text here', since 'here'
is unnecessary to say (as is to use 'click here').
Jens.
Jens Meiert
Interface Architect
[...] remember that placeholder text can be a useful format
entry help: i.e., dd-mm-yyyy, or so.
I disagree, since some users might have difficulties using it (if you pass
on e.g. JavaScript, the user is forced to remove all place holders), and even
JavaScript effects might be irritating (what text was there before I clicked
it?). It's IMO better to display a sample text near the corresponding field
(and use the title attribute, too, which I perceive as a good solution) --
that's usable as well as accessible.
Best regards,
Jens.
Jens Meiert
Interface Architect
I regularly teach internet workshops to senior citizens. Most of my
workshops are about using the internet for genealogy. Since many genealogy
sites use forms, I have seen a lot of elderly people using forms. Many of my
students have limited computer experience and limited understanding of the
use of their operating system. They often have reduced eyesight as well.
I have found that many of these people have trouble deleting placeholder
texts in forms. Especially if the text is larger than the text box, people
who do not have a lot of computer experience and/or mouse coordination find
it difficult delete the entire text. In larger forms with multiple text
boxes, I have seen people get very annoyed at the extra effort required of
them to first delete all the texts that were already filled in. Also, some
people didn't recognize as easily that they had missed to fill out some
required fields because text was already there or ended up searching for
"John Paul Enter surname here".
For these reasons, I personally advise against the use of placeholder texts,
even though it violates a current WCAG 1 AAA guideline. I think the
title-attribute offers a much more elegant way since it helps those people
who need the additional information, without creating new obstacles for
others.
Yvette Hoitink
CEO Heritas, Enschede, The Netherlands
[in response to question about what to do with search boxes that have no
label? ]
From: "John M Slatin"
I agree with John for most of entry forms.
In other cases, remember that placeholder text can be a useful format entry
help: i.e., dd-mm-yyyy, or so.
So the guidellines should distinguish between the cases.
Maurizio Boscarol
Ecologia dei siti web
Hops Libri - A book to build a both usable and
accessible site in the real world (only italian)
From: "Jens Meiert"
even
clicked
field
I'm not against your proposal. A text near the field may be okay, but I
don't know the way non-sighted can use it (where should we put it? I suppose
*just before* the field...). I also think that putting the format help text
in the field is more compact, and the fact that it is *inside* the field
could help. But it's true that some people have trouble using it. Also, the
author should prevent placeholder text from being processed if the user
won't modify it... I suppose this is a little too complicated for simple
sites: the outer field solution it's probably better.
But we need a good way to display format example text, anyway. The
guidelines should advice the better way to display them. Before the field is
ok? There's a proper markup to display them?...
Maurizio Boscarol
Ecologia dei siti web
Hops Libri - A book to build a both usable and
accessible site in the real world (only italian)
I don't think it's a good idea to put formatting instructions (such as
date format) in placeholder text. For one thing, the instructions may
disappear as the user's data replaces the placeholder text, so the
instructions are no longer available to someone who may need them.
If it's necessary to provide such instructions, it's probably best to
include them in the label element for the input . This way the
instructions will be visible to anyone who needs to see them, and will
be audible to people using screen readers.
"Good design is accessible design."
Please note our new name and URL!
John Slatin, Ph.D.
Director, Accessibility Institute
University of Texas at Austin
FAC 248C
1 University Station G9600
Austin, TX 78712
ph 512-495-4288, f 512-495-4524
email jslatin@mail.utexas.edu
web http://www.utexas.edu/research/accessibility/
Behalf Of Maurizio Boscarol
even
clicked
field
I'm not against your proposal. A text near the field may be okay, but I
don't know the way non-sighted can use it (where should we put it? I
suppose *just before* the field...). I also think that putting the
format help text in the field is more compact, and the fact that it is
*inside* the field could help. But it's true that some people have
trouble using it. Also, the author should prevent placeholder text from
being processed if the user won't modify it... I suppose this is a
little too complicated for simple
sites: the outer field solution it's probably better.
But we need a good way to display format example text, anyway. The
guidelines should advice the better way to display them. Before the
field is ok? There's a proper markup to display them?...
Maurizio Boscarol
Ecologia dei siti web
Hops Libri - A book to build a both usable and
accessible site in the real world (only italian)
While on this subject:
For making a form accessible to JAWS 5.0 users, an HTML tag that Freedom
Scientific supports is ContextHelp. Here is an example... it is not a
standard though.
primary care physician" /
When JAWS encounters this it says "Press Insert+F1 for help" and one can
hear the help text and then press Exc to excape... all this in forms
data entry mode. Must say it works well for me.
Roberto:
ContextHelp is a proprietary attribute... If a label is explicit to an
input field, eventually the problem is an user agent problem that is not
able to "read" it correctly. IMHO, we need to make guidelines based to
the web "standards" and not based to the web (commercial) applications
While on this subject:
For making a form accessible to JAWS 5.0 users, an HTML tag that Freedom Scientific supports is ContextHelp. Here is an example... it is not a standard though.
When JAWS encounters this it says "Press Insert+F1 for help" and one can hear the help text and then press Exc to excape... all this in forms data entry mode. Must say it works well for me.
Sailesh Panchang
Senior Accessibility Engineer
Deque Systems,11180 Sunrise Valley Drive,
4th Floor, Reston VA 20191
E-mail: sailesh.panchang@deque.com
* Look up http://www.deque.com *
I heard somewhere (perhaps from someone at Freedom Scientific?) that the
company plans to propose the context-help attribute as an addition to
XHTML sometime in the future. If that happens, then we can recommend
that developers use it. But in the meantime-- proprietary attributes
line the road to madness for end-users and developers alike.
My two cents' worth.
John
"Good design is accessible design."
Please note our new name and URL!
John Slatin, Ph.D.
Director, Accessibility Institute
University of Texas at Austin
FAC 248C
1 University Station G9600
Austin, TX 78712
ph 512-495-4288, f 512-495-4524
email jslatin@mail.utexas.edu
web http://www.utexas.edu/research/accessibility/
Behalf Of Sailesh Panchang
While on this subject:
For making a form accessible to JAWS 5.0 users, an HTML tag that Freedom
Scientific supports is ContextHelp. Here is an example... it is not a
standard though.
primary care physician" /
When JAWS encounters this it says "Press Insert+F1 for help" and one can
hear the help text and then press Exc to excape... all this in forms
data entry mode. Must say it works well for me.
Sailesh Panchang
Senior Accessibility Engineer
Deque Systems,11180 Sunrise Valley Drive,
4th Floor, Reston VA 20191
E-mail: sailesh.panchang@deque.com
* Look up http://www.deque.com *
Hi,
We have already recommended this to the W3C/WAI and hope that the attribute
not remain specific to JAWS. I discussed this with Al Gilman in DC last
week and there does seem to be some discussion within W3C on the matter.
cdh
I heard somewhere (perhaps from someone at Freedom Scientific?) that the
company plans to propose the context-help attribute as an addition to XHTML
sometime in the future. If that happens, then we can recommend that
developers use it. But in the meantime-- proprietary attributes line the
road to madness for end-users and developers alike.
My two cents' worth.
John
"Good design is accessible design."
Please note our new name and URL!
John Slatin, Ph.D.
Director, Accessibility Institute
University of Texas at Austin
FAC 248C
1 University Station G9600
Austin, TX 78712
ph 512-495-4288, f 512-495-4524
email jslatin@mail.utexas.edu
web
http://www.utexas.edu/research/accessibility/ http://www.utexas.edu/research/accessibility/
-----Original Message-----
Behalf Of Sailesh Panchang
While on this subject:
For making a form accessible to JAWS 5.0 users, an HTML tag that Freedom
Scientific supports is ContextHelp. Here is an example... it is not a
standard though.
primary care physician" /
When JAWS encounters this it says "Press Insert+F1 for help" and one can
hear the help text and then press Exc to excape... all this in forms data
entry mode. Must say it works well for me.
Sailesh Panchang
Senior Accessibility Engineer
Deque Systems,11180 Sunrise Valley Drive,
4th Floor, Reston VA 20191
E-mail: mailto:sailesh.panchang@deque.com sailesh.panchang@deque.com
* Look up  http://www.deque.com http://www.deque.com *
Yes, and thank you Chris.
PF expects to be working on "orientation in forms" in the new year.
The 'context help' HTML extension attribute and Jaws function are
included in this topic, and set off this round of consideration.
A check on what is provided in XHTML 2.0 is in the PF charter and a
backward-compatible pattern of XHTML 1.1 practice is in the WCAG
charter. We need both and hopefully they won't be taking
unnecessarily divergent tacks.
We would like to work with y'all on this. I'll follow up with Jason Gregg
and Wendy on how to organize the charge.
Al
