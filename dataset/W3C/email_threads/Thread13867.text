The guidelines (mainly the techniques doc) contain
several references to HTML3.2 and even to HTML2.0.
These two HTML versions are referred to as *informative*
references in the HTML4.0 spec. Therefore I can't see
any reason to mention them that often. It just confuses
the reader, and makes the document longer.
What difference does it makes if HTML3.2 doesn't have
a tabindex attribute? Write it for the browsers who support it
and there is nothing you can do for the others anyway.
Reference to old HTML versions should be made only if an
HTML4.0 feature breaks an older browser, or is rendered
very badly (without breaking). Moreover you may use the term
"older browsers" without stating whether it is HTML3.2, HTML2.0
or buggy browsers. The details may have a theoretical interest
but no interest to the person who wants to be told what to do.
Almost all accessibility features in HTML4.0 don't
"bother" an HTML3.2 browser and therefore are safe.
No reference to HTML3.2 is needed there. Also the
expression "available in HTML4.0" 8or "only in HTML4"
serves no purpose, as this is the only normative HTML
level anyway.
I made a list of the HTML4.0 features that
do not degrade well to HTML3.2. Here it is the whole list.
Couldn't find anything else. Honest.
(Note that frames are not included as one can
use the NOFRAMES element)
* bidirectional algorithm is not supported by HTML3.2
Solution: write two versions, an accessible logical one and
a visual one for backward compatibility.
* HTML3.2 supports a smaller set of characters and
character entity reference. New ones will appear as noise.
Solution: Don't use hex for Latin1. For other characters
there is no solution.
* The BUTTON element will appear as noise,
and INPUT type=button will appear as a text
input in HTML3.2 browsers.
Solution: don't use them.
* rows of a TFOOT element will appear before the BODYs in
an HTML3.2 browser.
Solution: don't use TFOOT
*Structures allowed in HTML4.0 but not in HTML3.2:
* headings and ADDRESS are not allowed in LI or DD.
* block level elements are not allowed in MAP, thus OBJECT
cannot be used as an image-map (if one uses OBJECT, MAP
and AREA the image map disappears in an HTML3.2 browser.)
Solution: avoid these structures
* Coloring attributes that are not in HTML3.2 may cause
text and background to merge: bgcolor in TABLE,TR,TD,TH;
color attribute in BASEFONT.
Solution: use stylesheets for colors.
* Attributes whose values are Length in HTML4.0 may interpreted
as Pixels or ignored by HTML3.2 browsers:
height, width, border in IMG; cellspacing, cellpadding
in TABLE.
Solution: use Pixels.
* The S element will not have an effect on rendering.
Solution: use STRIKE.
Regards,
Nir Dagan
Assistant Professor of Economics
Universidad Pompeu Fabra
Barcelona (Spain)
"There is nothing quite so practical as a good theory."
-- A. Einstein
I tend to agree.
Are you suggesting we should mention this list somewhere ?
In any case, it's an interesting exercise, and I'm asking our HTML
staff to check it for completeness.
On this one:
I already investigated this one a while ago:
HTML 4 say for Lengths:
Pixels: The value (%Pixels; in the DTD) is integer that represents the
number of pixels of the canvas (screen, paper). Thus, the value "50"
means fifty pixels. For normative information about the definition of a
pixel, please consult [CSS1].
and in 6.1, CSS1 says:
The format of a length value is an optional sign character ('+' or
'-', with '+' being the default) immediately followed by a number
(with or without a decimal point) immediately followed by a unit
identifier (a two-letter abbreviation).
and later on there is the arcane "nominal arm's length of 28 inches"
stuff.
But after asking the local experts, it seems that HTML only uses CSS's
definition of the size of a pixel, not CSS's definition of a length
unit. So values used in HTML markup can only be pixels (positive or
negative OK).
TO:danield@w3.org
No. It was just to show that backward compatibility issues with HTML3.2
are rather minor, and therfore shouldn't be mentioned that often.
In my view only the bidirectional algorithm, character entities and,
TFOOT and BUTTON should be noted.
With HTML2.0, there are more issues but the major ones are noted already.
One is that MAP and AREA are not recognized, but we have priority 2 to
add redundent text links to imagemaps.
Using OBJECT and %block; in MAP is also compatible with HTML2.0, but
not with MSIE4, and pardoxically it is theoretically problematic
with HTML3.2.
Another HTML2.0 issue is TABLEs, but here the guidelines correctly
encourage using them for their purpose, rather than using the
information-poor PRE as some older non-W3C "accessibility guides"
proposed.
Back to HTML3.2,
INPUT type=button is widely supported by browsers that support
scripting, so it is rather a theoretical issue.
Concerning deprecated colors and the S element, we discourage
that anyway.
About having headings in LI, it makes some little uglyness problems
in Opera3.2 (but not in 3.5) and Lynx (depending on version) but is not
critical, as no content is lost. Heading in DD seems to be handeled
without problems.
Concerning %Length; vs. %Pixels; both are defined as CDATA in the DTD,
but the wording allows precentage values in %Length; i.e. width ="80%"
I think in practice more problems occur with cellpadding and cellspacing
rather than with IMGs width and height, but this is not that important
for WAI guidelines as authors never use precentage in cellpadding and
cellspacing or in IMG's border.
By the way, some browsers (Netscape 3) don't display INPUT elements
outside of FORM. This structure is allowed in HTML3.2 and HTML4.0,
but not in HTML2.0... So they implemented frames before
implementing HTML3.2 correctly.
Regards, Nir.
I ommitted a few minor things: there are some attributes that are required
in HTML3.2 but are optional in HTML4.0. (like name in TEXTAREA) Again, this
is a theoretical issue, as it wouldn't in practice break any browser, I
think.
