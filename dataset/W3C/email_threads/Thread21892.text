comments inlined
-----Ursprungligt meddelande-----
Fr?n: Arnold, Curt [mailto:Curt.Arnold@hyprotech.com]
Skickat: den 10 augusti 2001 18:14
Till: 'www-dom-ts@w3.org'
?mne: RE: [General] Status?
[mb] Not sure what you mean here -- our less than perfect
tests are and have been available for some time. The tests
have been modified, but have not all been translated and
compiled. I would expect that any contribution would not be
accepted until it met this minimum requirement.
I've used the tests that I scraped from the test matrix to test the
transforms and build processes, however it is not worthwhile trying to
analyze those tests and correct or improve them since there
is no mechanism to get any changes incorporated and the files may be
undergoing independent changes within NIST.
Until the tests are put in the CVS, it isn't worthwhile for anyone else to
spend any time on them. In an earlier message, I thought that you were
hesitant to put the tests in the CVS until they were
near perfect.
I think that we have the freedom to accept contributions in any condition
that we choose. Ideally, a contributor would have tests that would
transform, compile and run before they submitted the tests
and we would double check that before committing the tests to the CVS to
avoid breaking the build process (in rare cases, we could have a whiteboard
area for tests under construction).
However, since we don't have a buildable product at this time and having the
initial test load in any form is valuable, I'd be in favor of your
committing the tests in their current condition and we
as a team can make the necessary changes to the test cases or transforms.
[dd] I agree, as I expect it to take less time if there are more of us
involved in the process of cleaning up tests, much as people have been able
to comment on Curt's tranforms.
Also, comminting files to the CVS in no way implies that they are the final
constituents of the test suite, so they can be far from perfect as far as
the final test suite is concerned.
Some minor notes:
I think the package attribute on the test and suite elements is
extraneous and expect to remove it from the generated schemas and DTD's and
ignore it in the transforms. If you are going to commit
tests, you may go ahead and strip it out now. The package name will be
based on the location of the test.
[dd] The location of the test once we've decided it's ready to form part of
the suite, I presume?
DOM Level 1 tests definitions should be added to
2001/DOM-Test-Suite/tests/level1/core, corresponding test files should added
to 2001/DOM-Test-Suite/files/level1/core.
If we create a log element that is used like the following:
$Log$
The CVS will insert the update log within the element. This could also be
copied to the generated tests. This would require that you avoid using &amp;,
or 's in the update comments.
[dd] Do we solce this if we wrap it in a CDATA section like Fred indicated?
[ca]
and
of
[dd] (in a different message)
think separate directories are preferrable, since we may want to build
suites that consist of different subsets, except if we explicitly remove
the
files we don't want to use. Provided we can't solve it with another
mechanis
that is. Can ANT look into xml-files without including them in the build?
I
[ca]
I don't believe that you can adequately judge the validity of a test without
being able to run it. My take is that, at least in the development phase,
every test submitted that is well-formed goes into the CVS, is translated
into appropriate code and can be invoked.
During the review cycle a subset of all submitted tests would developed that
would be the conformance suite. I don't think it is essential to remove the
rejected tests from the CVS or the build and it would actually better
preserve the history if we left the rejected tests in (but they wouldn't be
run unless you explicitly requested one).
Moving the tests, changing the target URI's or package names would all tend
to break the continuity of the review cycle.
My preference would be that the definition of the test suite be explicit,
that is a suite element listing the accepted tests, and that the metadata
about the review process (links to comments on particular tests, approvals
and rejections) be stored externally to the tests.
[dd] Definitely. Curt, do you have anything handy on the build process?
[ca] It is more complicated that it should be due to the unreleased state of
Ant 1.4 and problems with either crimson.jar or xalan.jar in the current
nightly build. I will make an attempt to isolate the issues and make them
known to the Ant team so that they might be able to provide an Ant version
that works out of the box.
The mailing list search is down and I don't have time to find the previous
message that I described everything, but basically the steps are:
1. put patch (part of CVS) and sed (part of most linux distributions and
downloadable from http://www.cornerstonemag.com/sed/sed3028a.zip for
win32) on the path
2. download a nightly build of ant and the optional tasks jar
3. Remove jaxp.jar, crimson.jar and xalan.jar from the ant /lib directory
and replace with Xalan.jar and xerces.jar from the Xalan 2.1 distribution.
Until there are tests in the CVS, nobody who doesn't have there own test
definitions can building anything, so it is too early to document anything
more than just information emails. Once we have something buildable in the
CVS, then we can write up an appropriate documentation and hopefully it will
be less messy.
indicated?
Using CDATA sections should allow &amp;,  and ? to appear in CVS commit
comments. Guess you couldn't put a ]]  into a CVS commit commit. Fred and
my take was that there is no harm in adding log elements at a later time and
to defer any action on that.
[dd]
One reason to avoid 8.3 is the test's names as they currently stand, take a
look at the NIST matrix...
Perhaps x.3 is a better way to go if we want to avoid long suffixes.
.domtest would also work, so that's mainly a design issue. I'd go for .tst
personally.
[ca]
I was never intending to try to limit the test name of 8 characters. I was
trying to explain that by still primarily thinking in terms of three letter
extensions (the 3 part of 8.3), I proposed a extension that might conflict
with the test definitions from some other testing tool and that a longer
file extension might should avoid that potential conflict.
Using CDATA changes the details of the restriction, but there's
still a restriction: we can't use ]] in the checkin comments. Since
that's a restriction less likely to be violated, we can probably live
with it.
It's also possible to write a tool to scan the CVS logs to detect
violations in the comments, and correct them (or tell a human to do
so). It probably makes the most sense to write that only if we
actually observe ourselves violating the requirement
-Fred
Fred L. Drake, Jr. fdrake at acm.org
PythonLabs at Zope Corporation
