Datatypes in SWOL
Peter F. Patel-Schneider
Bell Labs Research
(17 December 2001)
The semantics and syntax documents that I sent out contain a treatment of
datatypes that has the following features.
1/ Local datatyping syntax (and verification) can be handled by XML Schema
verification. In particular,
results in the age of John being the integer 10.
2/ Non-local datatyping can be handled by an additional interface to an XML
Schema datatype processor. In particular,
results in the age of John being the integer 10.
3/ Other datatyping schemes are allowed. That is, there is no requirement
that XML Schema datatypes be used. There is also the possibility of
only using built-in XML Schema datatypes.
There are some problems and questions that remain, however, particularly
with respect to using XML Schema datatypes.
1/ How can constructed XML Schema datatypes be referenced?
2/ Who will build an XML Schema system that has the extra interfaces
required by this way of handling datatypes? There are a couple of
tricky parts in the interface having to do with determining that the
only possible denotation of a numeral as an integer is the usual one,
and similar issues for the other datatypes.
3/ Will the RDF Core WG come up with a specification that is compatible
with this general way of handling datatypes?
Action Items for the Clean-Up Task Force:
[Relevant comments from other WG members are welcome.]
1/ Determine if you disagree with the following:
- The above is a reasonable way of handling datatypes in SWOL.
- The above does not introduce other problems.
2 (optional)/ Make suggestions for improvements.
Schedule:
7 January 2002: final document for face-to-face discussion
Where is the specification of that syntax?
It doesn't mean what you suggest it means when parsed as RDF.
nope; it's very much more complex, syntacitcally and
in the model theory, than other alternatives
under discussion in the RDF Core WG.
See Melnick's work in the RDF Core WG:
Dan Connolly, W3C http://www.w3.org/People/Connolly/
From: Dan Connolly connolly@w3.org
Subject: Re: UPDATE: datatypes
Date: 17 Dec 2001 11:35:57 -0600
XML Schema Part 1: Structures, http://www.w3.org/TR/xmlschema-0/, Section
2.6.1 xsi:type, is, I believe, the primary specification of that syntax.
The syntax is used extensively in the XML Schema documents, including XML
Schema Part 0: Primer, http://www.w3.org/TR/xmlschema-0/, and, XML Schema
Part 2: Datatypes, http://www.w3.org/TR/xmlschema-2/.
I'm not saying that it does mean *anything* as parsed by a current RDF/XML
parsed. I'm saying that it does mean something in
``The semantics and syntax documents that I sent out''
Objection noted.
The proposal in my documents is more semantically complex than others
simply because it handles data values that do not have a locally-specified
lexical-to-value mapping. If one were to move to an environment where this
mapping either had to be locally given for all literals or where the
mapping was unambiguous overal then there would be little difference in the
semantic complexity.
I take it that you are advocating datatyping scheme ``S''.
I have serious reservations about ``S'', mostly concerning compatibility
with existing RDF usage and with XML documents.
If the RDF Core WG has not made a decision by the time of our face-to-face,
it might be fruitful for us to spend some time on this issue there.
peter
Hmm... I'm familiar with that document, but I don't quite
see how it applies; I don't see what shema is to be used
for Person , rdf:about, etc.
Perhaps it's explained elsewhere...
It's traditional to cite sources by URI.
I presume you mean this one:
which, in turn, cites
XQuery 1.0 and XPath 2.0 Data Model (W3C Working Draft 7 June 2001)
I haven't read them in detail, but from a quick scan,
it seems to suggest that all of XML Schema becomes
necessary to parse this language. That doesn't seem
cost-effective.
RDF syntax is constrained so that consumers can
parse it without a schema. This (a) simplifies
implementations and (b) avoids a lot of trust
issues (do I have the right schema?) but
at the cost of (c) the syntax is somewhat awkwardly
constrained.
If we're willing to bite the bullet on
(a) and (b), we might as well get something
prettier (c) while we're at it.
Hmm... I don't think I understand that. What does
"locally specified lexical-to-value mapping" mean?
Yes, we've talked about that; see the recent discussions and
refinenments, in particular Idiom B ("backward compatible")
under 4.9 Modeling styles.
yup.
Dan Connolly, W3C http://www.w3.org/People/Connolly/
From: Dan Connolly connolly@w3.org
Subject: Re: UPDATE: datatypes
Date: 17 Dec 2001 15:07:32 -0600
From http://www.w3.org/TR/xmlschema-1/, Section 2.6 and 2.6.1.
XML Schema: Structures also defines several attributes for direct
use in any XML documents. [...]
2.6.1 xsi:type
The Simple Type Definition (?2.2.1.2) or Complex Type Definition (?2.2.1.3)
used in validation of an element is usually determined by reference to the
appropriate schema components. An element information item in an instance
may, however, explicitly assert its type using the attribute xsi:type.
The value of this attribute is a QName; see QName Interpretation
(?3.15.3) for the means by which the QName is associated with a type
definition.
There are several options open for providing XML Schema datatypes for the
semantic web. It is, of course, possible to depend on a full
implementation of XML Schema. I strongly prefer this approach, because, as
far as I can tell, XML Schema is the W3C-recommended way of incorporating
typed data in WWW documents and so there should (soon) be available a
number of performance implementations of the full XML Schema
recommendation. Further, XML Schema provides mechanisms for putting
datatyping information directly into XML documents, so if one desired one
would not have to depend on the XML Schema mechanisms for determining the
right schema.
However, it is also possible that one might want to (for now) build one's
own datatyping implementation. In this case I strongly prefer going with
an input syntax that is compatible with XML Schema, namely the use of
xsi:type. One could even restrict the XML Schema datatypes one uses to
some select built-in datatypes, resulting in a quite easy to implement, if
limited, datatyping scheme that can be upgraded to full XML Schema.
I believe that this term, or variants thereof, has been used in the RDF
Core WG group discusssions on datatyping. In any case, it means that
literals have datatyping information given syntactically close to them in
the input document, either by means of xsi:type or some other mechanism.
Some of the RDF Core WG proposals for datatyping require locally-specified
lexical-to-value mappings, others do not.
Peter F. Patel-Schneider
Bell Labs Research
