Good lord, I just printed out the latest Page Author Guidelines
and it's 15 pages of (relatively small) print for the guidelines,
and 36 (!) for the "techniques".
I'm all for being complete and what -- but good gravy, do we
really expect the average web designer to sit down and digest
51 pages of dense, sometimes very technical information before
they can make accessible pages?
Sometimes I think it would be easier if our only message was:
0. Use ALT attributes for images.
Sure, that's incomplete and leaves a lot of good stuff out --
but it's easier to get THAT message out, and it's more likely
to be heard and read. I believe the accessibility of the web
would at least double or triple just from regular use of ALT
text alone; to me it seems a given that more people could pick
up on an easy, short message than a lengthy document.
Mind you, this isn't criticism of the guidelines themselves --
they're wonderful, I love them, they're complete, correct, and
a lot of other adjectives which basically mean "the techie
web geek in me really grooves on these." I'm just at a loss,
though, when I speak to people or teach a class and say, "Uhm,
yes, it's not hard to design an accessible page -- in fact,
here's 51 pages of dense technical instructions to tell you
how!"
The people who have worked on the guidelines did a great job,
I just am worried that the guidelines continue to grow and
grow in size, and that can turn off many of the very people
who need to this information the most -- the casual or beginning
web author.
--Kynn
Kynn Bartlett kynn@idyllmtn.com http://www.idyllmtn.com/~kynn/
Chief Technologist &amp; Co-Owner, Idyll Mountain Internet; Fullerton, California
Enroll now for web accessibility with HTML 4.0! http://www.hwg.org/classes/
The voice of the future? http://www.hwg.org/opcenter/w3c/voicebrowsers.html
w3c-wai-ig@w3.org (Kynn Bartlett) 12/06 3:11 AM
Mind you, this isn't criticism of the guidelines themselves --
they're wonderful, I love them, they're complete, correct, and
a lot of other adjectives which basically mean "the techie
web geek in me really grooves on these." I'm just at a loss,
though, when I speak to people or teach a class and say, "Uhm,
yes, it's not hard to design an accessible page -- in fact,
here's 51 pages of dense technical instructions to tell you
how!"
The people who have worked on the guidelines did a great job,
I just am worried that the guidelines continue to grow and
grow in size, and that can turn off many of the very people
who need to this information the most -- the casual or beginning
web author.

Is the casual or beginning web author interested in learning even HTML? Probably not; they just want to "put up a Web page." They're going to use a visual authoring tool. These are the people for whom Authoring Tools must *enforce* universal design.
For example, using the IMG ALT= paradigm, the Tool could require that the author enter a brief one-line description of any image they want to publish on the Web. The inclusion of standard buttons and images and their descriptions with the Tool can set an example for the author of what's intended. The benefit to the author is that the Tool could include descriptions alongside images, sort of an extended directory listing, much the way many tools include the HTML TITLE text alongside the filenames of Web pages. The Tool could take the responsibility of adding ALT="Description" every time the author adds the image to a page. The author doesn't even need to know that the Tool is using the description to improve the accessibility of their site. *They never gave it the first thought* and they shouldn't have to.
Since the casual or beginning web author is not going to care about accessibility, they're not even going to *look* for guidelines, so their length will not intimidate them.
I also have watched the guidelines for accessibility grow and I appreciate
the work that has been done. But of the people on my campus, I am one of
the few who will both read and understand them. However, my job here is to
help people create web pages and since I think accessibility is important,
I provide my own tips for accessibility. Those tips rarely involve writing
HTML code because the average web author here -- and I believe we are
typical -- doesn't do HTML.
That's OK, though, because I think making web sites accessible is a whole
lot more about thinking than it is about writing code. I can help someone
make alt-text happen -- that's easy -- but what I want them to do is think
through it and have reasons why one parcel of alt-text is more helpful
than another. I can help someone make hyperlinks work -- that's easy --
but what I want them to do is think through it and know why it makes sense
for links to make sense.
I agree with Kynn's original statement. For this to work, accessibility
needs to be accessible, and I think teaching thinking is more important
than teaching code. Even the quicktips are moderately geeky.
- tom
tom mcCain, Butler University, Indianapolis USA
Email address: tmccain@butler.edu
Web addresses: http://trevor.butler.edu/~tmccain
