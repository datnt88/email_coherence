We've been discussing how to transform languages into XML form so we can
use XPointer in our evaluation descriptions of them.
I took an action item to propose a generic way to convert any language
expressed in Backus Naur Form (BNF). See e.g. [1] for a BNF tutorial.
I propose an XML application with just three tags
"rule" and "terminal" correspond to BNF rule and terminal symbols (what else?).
We could get by without cdata, but then all the terminals would be
individual characters. This is a shortcut to avoid that level of detail.
Lets jump to an example. Here's a simple unix-like command
sort +increasing -unique phonebook
BNF for this sort of command is as follows.
(I use the following BNF notation:
Unquoted strings are rules.
Quoted strings and characters are terminals.
* means 0 or more.
means "or".
Brackets [] enclose prose definitions.
command ::= command-name (argument)* filename
command-name ::= "sort" | "print"| "mail"
argument ::= prefix argument-name
argument-name ::= "increasing" | "unique"
prefix ::= '+' | '-'
filename = [any sequence of alpha characters]
Using the BNF to parse the example "sort" command, which I repeat here for
convenience,
sort +increasing -unique phonebook
we get:
Note that if you just scan down and read the terminal and cdata tags, you
reconstruct the original unparsed data. So it's simple to see where you
are in the raw input stream.
And, if you go up the XML tree, you unwrap the production rules that were
involved in the parse.
In other words, this is a just an XML version of the parse tree.
So in principle we've got a way to represent CSS, ECMAScript, C++, Java,
Cobal, ADA, anything that can be specified by BNF. Hmmm. Is there an
BNF for HTML?
So... comments anyone?
Any yacc gurus out there who'd like to implement this?
Len
p.s.
I did a quick look around w3c and google and didn't find anything like
this, but I expect that other folks have been thinking along the same
lines. If anyone knows of something like this, please post it, especially
if they already have the converter coded up!
[1] http://burks.bton.ac.uk/burks/foldoc/82/9.htm
Leonard R. Kasday, Ph.D.
Institute on Disabilities/UAP and Dept. of Electrical Engineering at Temple
University
(215) 204-2247 (voice) (800) 750-7428 (TTY)
Chair, W3C Web Accessibility Initiative Evaluation and Repair Tools Group
The WAVE web page accessibility evaluation assistant:
[Forgive me, I'm having one of those overly productive days]
1. CSS2 is expressed in EBNF: http://www.w3.org/TR/PR-CSS2/grammar.html
2. So is XML (thanks to Jelks):
3. Lots of programming languages can be expressed in BNF:
4. Not sure about HTML: "EBNF is also used in many other standards, such as
definitions of protocol formats, data formats and markup languages such as
XML and SGML. (HTML is not defined with a grammar, instead it is defined
with an SGML DTD, which is sort of a higher-level grammar.)" -
HTML can be converted into XML (XHTML) anyway, so who cares?
5. I think EBNF/BNF describe the langauges themselves rather than outputs
of those langauges, but I could be wrong (I only ever looked at EBNF once
before.....).
6. I don't think this HTML parse tree is in (E)BNF, but it looks
interesting all the same:
That's the lot. Hoping as ever that this is useful rather than
distractive...
Kindest Regards,
Sean B. Palmer
"Perhaps, but let's not get bogged down in semantics."
- Homer J. Simpson, BABF07.
BNF describes the grammar for a language. So if you have a BNF, and an
example of something written in that language, you can hunt out each thing
and say what kind of object it is, and away you go with your conversion...
(more or less)
This seems like a very cool thing to do.
For converting bad HTML to XML I still suggest that we call Tidy our
algroithm, and then point out that it is already implemented. The problem is
that most programmers get things more or less into the right syntax - most
HTML coders (including those using tools to do it for them) more or less
don't. So it won't amtch a BNF description in the first place.
Chaals
[Forgive me, I'm having one of those overly productive days]
1. CSS2 is expressed in EBNF: http://www.w3.org/TR/PR-CSS2/grammar.html
2. So is XML (thanks to Jelks):
3. Lots of programming languages can be expressed in BNF:
4. Not sure about HTML: "EBNF is also used in many other standards, such as
definitions of protocol formats, data formats and markup languages such as
XML and SGML. (HTML is not defined with a grammar, instead it is defined
with an SGML DTD, which is sort of a higher-level grammar.)" -
HTML can be converted into XML (XHTML) anyway, so who cares?
5. I think EBNF/BNF describe the langauges themselves rather than outputs
of those langauges, but I could be wrong (I only ever looked at EBNF once
before.....).
6. I don't think this HTML parse tree is in (E)BNF, but it looks
interesting all the same:
That's the lot. Hoping as ever that this is useful rather than
distractive...
Kindest Regards,
Sean B. Palmer
"Perhaps, but let's not get bogged down in semantics."
- Homer J. Simpson, BABF07.
W3C Web Accessibility Initiative http://www.w3.org/WAI
Location: I-cubed, 110 Victoria Street, Carlton VIC 3053, Australia
September - November 2000:
W3C INRIA, 2004 Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France
