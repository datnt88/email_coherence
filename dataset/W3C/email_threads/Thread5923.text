Assaf
I always tend to think that one role can take part in multiple
choreographies, for example a buyer could take part in:
1. Several different choreographies each of which resulted in the placement
of an order
2. A separate order status choreography that could work with any of the
different choreographies.
I also recognize that the same choreography and roles could be invented
multiple times. For example, the shoe industry could invent a choreography
for placing orders that was identical to one developed by the wine industry
but they give the choroegraphies different identifiers (URIs) for
choreography itself and each of its roles.
This is really a broader standardization issue that will only be solved when
there is choreography instance standardization. For example the UBL
initiative is developing standard representations and semantics for order
documents using XML schema. We really need standard order placement
choreographies to be developed using WS-Chor ... but we need WS-Chor first.
David
Decision Po ints Requirement Proposals
For brevity sake, two comments and +1 on everything else.
CHOREOGRAPHY RELATED
1. A role may take part in one or more choreographies
For example a buyer there are several different ways of placing orders that
involve different sequences of messages. However the basic role stays the
same.
That depends on how you define a role. You can define a role as being a
component of the choreography in which case a role participants in one
choreography. That does not restrict an entity from being multiple roles
in multiple choreographies. You can define roles that participate in any
number of choreographies, but I'm not sure what it buys you, and if
you're having problems reaching agreements you probably would have a
problem agreeing to use the same role in multiple choreographies.
(Again, won't restrict the same entity ...)
I accept that as a party intending to buy products I would assume the
role 'buyer' in one choreography, 'procurer' in another, and 'sucker' in
a third one. On the other hand, I may be expected to operate in the same
way in all three choreographies, i.e. implement the same interface, but
that brings us back to the role=interface equality, mobile process model
and all other undesirable solutions.
4. A choreography specifies the sequence, conditions and dependencies of
sending one or more messages
This is really the core of what choreographies are all about. The only
question I would have is whether this is compatible with the ideas of
pi-calculus, and if it isn't does it matter?
Yes it does. And if it doesn't then pi-calculus wouldn't be relevent to
our work.
arkin
RE: Relationship cardinalities (was ... RE: Requirements: Decision Po ints
Requirement ProposalsDavid,
In my view it is a party (participant, instance etc) that takes part in a
choreography. They do so by taking on one (or more ) of
the defined roles. There is no formal relationship between roles in
different choreographies, otherwise they would be part of (the same)
choreography definition.
At most the relationship between choreographies will be akin to a type
library that gets used in multiple progams.
Martin.
[mailto:public-ws-chor-request@w3.org]On Behalf Of Burdett, David
n Po ints Requirement Proposals
Assaf
I always tend to think that one role can take part in multiple
choreographies, for example a buyer could take part in:
1. Several different choreographies each of which resulted in the
placement of an order
2. A separate order status choreography that could work with any of the
different choreographies.
I also recognize that the same choreography and roles could be invented
multiple times. For example, the shoe industry could invent a choreography
for placing orders that was identical to one developed by the wine industry
but they give the choroegraphies different identifiers (URIs) for
choreography itself and each of its roles.
This is really a broader standardization issue that will only be solved
when there is choreography instance standardization. For example the UBL
initiative is developing standard representations and semantics for order
documents using XML schema. We really need standard order placement
choreographies to be developed using WS-Chor ... but we need WS-Chor first.
David
-----Original Message-----
Decision Po ints Requirement Proposals
For brevity sake, two comments and +1 on everything else.
CHOREOGRAPHY RELATED
1. A role may take part in one or more choreographies
For example a buyer there are several different ways of placing orders
that
That depends on how you define a role. You can define a role as being a
component of the choreography in which case a role participants in one
choreography. That does not restrict an entity from being multiple roles
in multiple choreographies. You can define roles that participate in any
number of choreographies, but I'm not sure what it buys you, and if
you're having problems reaching agreements you probably would have a
problem agreeing to use the same role in multiple choreographies.
(Again, won't restrict the same entity ...)
I accept that as a party intending to buy products I would assume the
role 'buyer' in one choreography, 'procurer' in another, and 'sucker' in
a third one. On the other hand, I may be expected to operate in the same
way in all three choreographies, i.e. implement the same interface, but
that brings us back to the role=interface equality, mobile process model
and all other undesirable solutions.
4. A choreography specifies the sequence, conditions and dependencies of
sending one or more messages
This is really the core of what choreographies are all about. The only
question I would have is whether this is compatible with the ideas of
pi-calculus, and if it isn't does it matter?
Yes it does. And if it doesn't then pi-calculus wouldn't be relevent to
our work.
arkin
Of course the buyer can participate in any number of choreographies it
wants, but as an entity there is nothing precluding the buyer from doing
that. I assume the choreographies are not related and so neither
choreography cares what said entity would be doing on behalf of some
other choreography. So now the question becomes what does it mean for
the same role to take part in multiple choreographies?
Does it mean 'thou shall not preclude some entity from participating in
more than one choreography'? What would the requirement on the language
to make a non-restriction like this?
Does it mean all the choreographies need to use the exact same role
name? What happens if they don't - does it preclude the buyer entity
from participating in two different choreographies (known by different
names)? What if they do - is that sufficient to allow the buyer to
participate in different choreographies?
Does it mean they all expect the buyer to use the same set of
interfaces? If so, how do you combine the same interface into multiple
choreographies?
I am assuming the case of standardization and the case of
non-standardiation are both valid. You would have cases where
standardization is either easy, done unilaterally, or beneficial to all
parties to agree. You would have cases where even if you could agree
there's no benefit in doing so, maybe just because there's too much
variance. I don't know if there's a lot of benefit for the shoe and wine
industry to do things differently just because they classify products in
different way, but I could think of a construction company that needs to
order office supplies, heavy equipment and flammable materials and these
may be different processes altogether.
arkin
Martin
See comments in line.
David
Public'
Decision Po ints Requirement Proposals
a good start at a meta model i think.
Some comments:
1. A role may take part in one or more choreographies
see my email about roles and parties
2. A message is sent from one role to one other role
3. A choreography involves two or more roles
4. A choreography specifies the sequence, conditions and dependencies of
sending one or more messages
5. A choreography must send each message at least once.
The choreography doesn't send anything! Its the participants that do!
DB I totally agree. The above is really an abbreviated way of saying "Each
message definition specfified in a Choreography Defintion MUST identify, by
reference, the sending of each message at least once. /DB
6. A message may be used by one or more choreography definitions.
I think you mean message defintion/type here - an actual message can only be
part of one choreography
DB Absolutely, for brevity, I was using the term message colloqually. I
actually think that it should be a Message family as there can be three
levels of messages:
1. A Message Family which identifies a set of messages that serve the same
purpose, for example a RosettaNet Order, a UBL Order, an EDI Order, etc
would all be part of the same "Order" message family
2. A Message Type, which identifies the structure of a particular message,
for example the structure of a RosettaNet Order OR the structure of a UBL
order.
3. A Message Instance (or just Message) which is an instance of a Message
Type that is transported over the wire between parties taking roles.
7. A role's state is changed by sending, receiving or processing
a message.
8. The sending of the same message may result in different
changes of state
but the choreography should define the possible states and state
transitions?
So either this is declared and becomes part of a composition relationship
(14) or this point is mute (i.e.
its not relevent to the chorei language)
DB Not sure it is mute, as you could have one choreography that can validy
exist on its own. For example the good 'ol order placement choreography. You
could then separately have an "Order Status Inquiry" choreography that can
only be executed if the it references the Order Placement choreography. /DB
14. A choreography definition may be composed from other choreography
definitions.
There are also some relationships associated with the binding of a
choreography to a (web service), for example
1. An operation can accept or generate zero or more messages
should be the same as wsdl (just in case it isnt!)
2. A message may have one or more physical representations
as per wsdl
im not sure this needs to be said or makes sense. Do you mean instance of a
web service, or type ????
4. A choreography is supported by one or more web services
what does is supported mean?
The WS-Chor choreography description format MUST make it possible to
specify
a role's binding to an actual web service instance either statically,
[JJ] Does this requirement imply that a role can only be bound to one
web service or several web services. IMHO, we need to support multiple
web service binding to one role.
you are running an auction service and you just found out that one of
bidders isn't qualified to bid you need a way to say things like "I'm
going to send out an unsolicited 'get lost you dead beat' message to
web
service that is in the role of bidder." This could then trigger a
whole
beat
bidder, the choreography needs some way to capture the fact that you
still talking to the same member of the role group.]
[JJ] Maybe we could say that a role MAY be implemented by more than one
participant in a web service choreography instance. It sounds like an
interesting proposal, but I would like to be convinced that any use case
that require this cannot be implemented by a series of "simple"
choreography that only involve a one-to-one relationship between role
and participants. The "multiple participant scenario" would require that
the initiator of the choreography is able to broadcast a message to a
role, then the run time has to keep track of the individual
conversations with the participants of the same role. Sounds like a
proposition difficult to implement.
The WS-Chor choreography description format MUST NOT require that the
logic
used by a sender in a decision point to decide how to act be exposed
[JJ] Furthermore, if a web service choreography definition is exposing
some logic as part of a decision point, this logic MUST apply to the
content of messages exchanged during the choreography instance prior to
the decision point.
The decision point expression language MUST be compatible with XML.
The WS-Chor choreography description format MUST enable the annotation
all actions with human readable descriptions.
[JJ] It would be best if these annotations can be XML fragments rather
than text only. It would enable people to add "Commitment Oriented"
semantics (See Bob Haugen's COOL presentation).
The WS-Chor choreography description format MUST provide an abstract
mechanism where by the logic used to make a decision at a decision
point
[JJ] I predict that as soon as we will open choreography to "internal"
logic, either it will be identical to the logic on the messages
exchanged during the choreography exchange or it will open a whole set
of issue related to "objects" represented by the messages being
exchanged and their respective state. In other words, a message
typically carries representation of business objects in a given state.
The fundamental question is do we want to expose this to the
choreography definition language (via decision point expression), or is
it enough to express the decision point on the content of the messages.
Orchestration languages need by definition to understand the objects and
their state, however, it is not always clear in current BPM "standards".
JJ-
