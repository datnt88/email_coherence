-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1
Don't install htdocs/config/verbosemsg.rc even if it's in the tarball.
Hmmm. Perhaps we should be keeping in mind the possibility of having a
separate "*-devel" package for stuff like this? Probably not needed yet,
but...
I'm [less] than thrilled by the [VM situation]; all sides of it. I [think]
we need a [fork] in that area so that you guys would stop stepping on each
others' toes. I'm taking no part in your merry 5-way clusterfuck -- sort
that mess out between yourselves. -- Alexander Viro on lkml
-----BEGIN PGP SIGNATURE-----
Version: PGP SDK 3.0.2
iQA/AwUBPyeT0KPyPrIkdfXsEQIzJgCg7bJBOOBkb45GkJJKA6FIKyGG1ukAoPsP
ZGGuVCcyJB0a8furoAuMmItK
=kTfE
-----END PGP SIGNATURE-----
Don't install htdocs/config/verbosemsg.rc even if it's in the tarball.
Yep. spmpp.pl would belong there too. Later...
What about the Config::General/265kB verbosemsg.cfg issue? I can have a
go at using Storable to persist/use the parsed file if it 1) doesn't
exist or 2) is older than verbosemsg.cfg if you think it's a good idea.
Don't install htdocs/config/verbosemsg.rc even if it's in the tarball.
...as well as stuff in htdocs/dev.
On a second thought, it would be better if Config::General could do this
transparently.
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1
Well, I must admit I'm somewhat ambivalent on this issue. As you demonstrated
there is quite a bit of overhead associated with the current implementation,
but the question is whether it is significant in the context (e.g. "check" is
pretty resource intensive as it is).
Adding Storable would add complexity and an additional point of failure that
needs to be traded off against the performance gain. I'm not certain which way
the needle should/would tip in this case (meaning that anyone with strong
opinions in either direction are invited to make that decision!).
But implementing this as a new feature for Config:General instead of as a
local modification does make sense if upstream will take such a patch.
I have to admit that I'm hoping the current situation with regard to XML
Namespaces and W3C XML Schemas is a giant practical joke, but I see no
signs of pranksters coming forward with a gleeful smile to announce that
they were just kidding. -- Simon St.Laurent
-----BEGIN PGP SIGNATURE-----
Version: PGP SDK 3.0.2
iQA/AwUBPyebcaPyPrIkdfXsEQINQgCg8WQl/FPklBTJQjlTn4D6GhxIx3MAoI6+
yTP5VnKwN45lSvouWH1yL2ww
=cbVE
-----END PGP SIGNATURE-----
Yep, but adding roughly 0.3-0.4 seconds CPU time to each request can't
be good... dunno what the overall effect would be in per-request
wallclock time in production at v.w.o.
Will probably see later. Config::General::ParseConfig already takes a
-Tie argument; but I'm not familiar enough with tie() stuff to even tell
whether that could be applicable or useful here.
Will there be another live beta release? Could estimate the cost there.
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1
link@validator:cgi-bin 1 $ time HEAD \
real 0m1.159s
user 0m0.340s
sys 0m0.010s
link@validator:cgi-bin 2 $ time HEAD \
real 0m1.739s
user 0m0.280s
sys 0m0.060s
So we're talking about between 1.0 and 1.75 wallclock seconds for the
processing alone; making your numbers something like 30-50% increase.
I'm aiming to do a new beta as soon as I make a final call on some WS code I'm
working on (haven't quite decided on Go/No Go yet) &amp;&amp; Olivier is happy with
docs and style tweaks &amp;&amp; I hear back from Jim about some JavaScript stuff[0].
Lets make a point to profile this stuff in a more reliable manner then. Well,
or you could just go ahead immediately in a separate server on v.w3.org.
[0] - I've "voluntered" Jim Ley to do some JavaScript for the Results page to
show Error Explanations on demand; but he's pretty busy so I don't know
how long until he has time for this. If it's soon I want to hold off on
beta until we can add the JS to maximized the amount of testing it gets.
Interviewer: "In what language do you write your algorithms?"
Abigail: English.
Interviewer: "What would you do if, say, Telnet didn't work?"
Abigail: Look at the error message.
-----BEGIN PGP SIGNATURE-----
Version: PGP SDK 3.0.2
iQA/AwUBPye+f6PyPrIkdfXsEQLorgCglVLO7B2IGC0qtj1SZk4BuW07IXAAoJpo
W6rFLBTXDgesvg4+v5EujdeC
=Zb7k
-----END PGP SIGNATURE-----
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1
As you may or may not have noticed, there is now a validator-0_6_5-beta1 tag
in CVS and v.w3.org:8001 is updated. The general announcement of the beta will
go out as soon as I get around to writing it up and sending it (probably a
little later today). I'm going over some final issue ATM so there may yet be a
holdup, but it is mostly done. If you need me to delay then yell, now.
Not that it is a major crisis if you need something in as I think we can allow
ourselves to keep the code on :8001 somewhat floating this round (i.e. update
to interrim code without going through the rigmarole of a ??Release??).
BTW, the new output is looking pretty spiffy if I do say so myself. Y'all
should make a point of checking it out if you haven't allready seen it. :-)
Of course we are the good guys! We define what is good and evil. All other
definitions are wrong, and possibly the product of a deranged imagination.
-- Stephen Harris
-----BEGIN PGP SIGNATURE-----
Version: PGP SDK 3.0.2
iQA/AwUBP0sYzaPyPrIkdfXsEQJrsgCgvlxoAdq6of6KDIGSNzIfh2ei2LwAoKOK
dk5Lv6x20EyIGYfr+2y8dFov
=WzsO
-----END PGP SIGNATURE-----
