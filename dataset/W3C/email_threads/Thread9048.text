This is a report with an IBM implementation
# The latest public release does not have an exclusive c14n
# implemenataion conforming to CR yet.
Not rendering ...:Y1
The first occurence ..:Y1
InclusiveNamespaces ..:Y1
The "#default" ...:Y1
Performance:
C14n:53037 [ms]
Exclusive C14n:72584 [ms]
Xerces2 serializer:13219 [ms]
These are time for serializing a DOM tree representing a small
document 10000 times. Note that we have not done any
optimization yet.
TAMURA Kent @ Tokyo Research Laboratory, IBM
Oops, http://www.alphaworks.ibm.com/tech/xmlsecuritysuite is correct.
TAMURA Kent @ Tokyo Research Laboratory, IBM
FYI:
I tested my C14N and Exc-C14N implementation (http://xmlsoft.org) using
the same test file (exc-signature.xml in
The test program loaded the document once and executed (exc-)c14n
10000 times on PIII-900 + Linux 2.4.18 (the time for loading and
parsing document is *NOT* included) with following results:
C14n: 4550 [ms]
Exclusive C14n: 4500 [ms]
There were no visible difference in doing c14n with or without comments.
The program was compiled using gcc-2.96 using w/o optimization
(debug mode).
Joseph, please remove question marks for libxml on iterop report
(http://www.w3.org/Signature/2002/02/01-exc-c14n-interop.html) since it
does support "#default" prefix and the performance does exceed c14n
performance.
Thanks,
Aleksey.
I've updated [1] with Kent's and Aleksey's information.
[1] http://www.w3.org/Signature/2002/02/01-exc-c14n-interop.html
Ok, please let me know if optimization increases the performance. My goal
is that the performance should be no worse than c14n in general, and with
optimization in some scenarios, faster. So I hope the 27% decrease can be
mitigated in the general case.
Joseph Reagle Jr. http://www.w3.org/People/Reagle/
W3C Policy Analyst mailto:reagle@w3.org
IETF/W3C XML-Signature Co-Chair http://www.w3.org/Signature/
W3C XML Encryption Chair http://www.w3.org/Encryption/2001/
