Hello Dave!
First a BIG BIG 'thank you' for making available such a great little tool,
finally giving me the possibility to write *clean* HTML code with no
proprietary stuff.
Anyway, I've encountered a bug in current version:
Just 'TIDY' my small html file I enclosed in my mail - this explains it
all.
Best regards,
Andreas Eibach
Germany
[file]
As it turns out, this came up a few weeks ago. Tidy is actually doing
the right thing. The &amp;'s must be escaped as &amp;amp; according to the HTML
spec. Check the thread in the mailing list archives at
and search for "&amp; in hrefs".
Hope this helps.
--Randy
As it turns out, this was *not* what I meant.
I think it hasn't anything to do with my problem.
Mine is that a site URL inside the HTML
results in a warning message
line 1 column xx - Warning: unescaped or unknown entity "&amp;p2"
line 2 column yy - Warning: unescaped or unknown entity "&amp;p3"
The thing the thread far below is talking about is a different thing.
Andreas
Sorry for not being clearer.
Strictly speaking (which we do when it comes to Tidy's output :)), if
you want an ampersand character in an attribute such as href, you are
supposed to write it as &amp;amp; and not just &amp;. Writing ampersands this
way is known as "escaping" the ampersand, hence Tidy's warning about an
unescaped &amp;.
(FYI, your Tidy warnings above have a critical typo. They should say:
line 1 column xx - Warning: unescaped &amp; or unknown entity "&amp;p2"
Tidy is saying that either a) you have an unescaped ampersand, which is
true in your case, or b) you have an unknown entity named p2, which is
not true in your case. Tidy doesn't know which possibility is true, so
it lists them both.)
Browsers, on the other hand, are lax. They let you write either &amp;amp;
or &amp; to get an ampersand character. However, without getting into a lot
of detail, there are some potentially confusing cases where a plain &amp;
doesn't work as expected, so it's just as well that HTML has outlawed
it.
So Tidy is simply converting each unescaped &amp; into &amp;amp;
Before Tidy (illegal href attribute):
After Tidy (legal href attribute):
Browsers will accept either href. Try it (but be sure to try it in an
acutal HTML document; it might not work if you just type/paste it into
your browser's Address/Location field).
--Randy
I just noticed -- if you're viewing this in Tidy's web-based mail
archive, these two href's appear to be the same. Apparently the archive
software isn't as smart as Tidy because it doesn't seem to have properly
escaped the ampersands. How funny!
The first href should contain:
?p1=1&amp;p2=2&amp;p3=3
and the second href should contain:
?p1=1&amp;amp;p2=2&amp;amp;p3=3
(Hopefully that will come through OK.)
--Randy
[1] a href="http://www.bogus.com/script.asp?p1=1&amp;p2=2&amp;p3=3"
[2] a href="http://www.bogus.com/script.asp?p1=1&amp;amp;p2=2&amp;amp;p3=3"
So I plead for Tidy to NOT bug with the ampersands in hrefs anyway!
I also dare to state that [1] is the normal way you see these hrefs in HTML
documents, [2] is *very* seldom seen imho.
I'm pushy, I know, but I don't have the will to change all my hrefs in my
pages just because Tidy can't be taught to leave these href's alone.
So I will live with that.
Everyone did it this way ever since, why should I change this?
I'm willing to use &amp;_a_m_p_; (note strange format because I want to
prevent it from being converted) if I want to use ampersands in *texts* -
that's normal behavior. But no one would ever convince me to change all
ampersands in my asp calls to the above. This would be too much work -
resulting in nothing but satisfaction that Tidy doesn't output warnings
anymore.
But I won't go so far for this 'satisfaction'.
Andreas
Aha. A reasonable request, especially since Dave has already
implemented such a feature. :)
Try the quote-ampersand configuration option. On the command line,
it's --quote-ampersand no. I believe this affects ampersands in both
text and attributes.
--Randy
The reason why Tidy complains about unescaped ampersand signs in HREFs is
simply because they are not "legal" HTML, according to the DTD.
Just type the example below into the textarea on
it!" button.
You'll get a result like this:
You should not change all your hrefs because of Tidy, you should change all
your hrefs because they are invalid HTML.
The argument "everyone did it false ever since, why should I do it right
now" is simply answered by "right is right and false is false".
sebastian.
Sebastian Lange
Maybe the first chat site that validates as HTML
4.0 even though user input may contain HTML codes.
Courtesy to Dave Raggett's HTML Tidy:
Tidy your documents ONLINE:
Sebastian Lange:
I'd put it a bit differently: If you want to produce invalid HTML,
HTML that does not follow the rules, then Tidy is not the tool for
you. Tidy exists to correct bad HTML, not to produce it. Look for
HTMLUnTidy somewhere...
Bertilo Wennergren
Your problem is, that you are writing sloppy HTML code. There are no entitys
'p2' and 'p3'. If you do not even whant 'p2' and 'p3' to be entitys, you have
to encode your ampersand as an entity:
This is correct HTML and good browsers will convert '&amp;amp;' back to '&amp;' before
they request the referenced URL.
See
for a broader discussion and
to see, that you actually write sloppy HTML code.
regards,
Bj?rn H?hrmann ? mailto:bjoern@hoehrmann.de ? http://www.bjoernsworld.de
am Badedeich 7 ? Telefon: +49(0)4667/981ASK ? http://bjoern.hoehrmann.de
25899 Dageb?ll ? PGP KeyID: 0xA4357E78 ? http://learn.to/quote +{i}
Mine is that a site URL inside the HTML
results in a warning message
line 1 column xx - Warning: unescaped or unknown entity "&amp;p2"
line 2 column yy - Warning: unescaped or unknown entity "&amp;p3"
And so it jolly well should. There *are* entity references &amp;p2 and
&amp;p3 in that attribute value. They *do* need escaping. (There is also
a missing closing quotation mark.) Legal HTML for this is
Attribute value literals allow entity references so that you can get
characters into them that are not otherwise easy to enter (like quotation
marks). The price of that is that some of the characters you _can_
enter easily need escaping too.
