Some small changes this time:
- noted item 7 seems to duplicate 5/6 (not 4/5)
- added a little more explanatory text in the section on idioms
- presented all idioms using triples
- re-labelled the idioms A, B, C and D to reduce confusion about their
being specific to proposals (but still acknowledging their origin in
proposals).
#g
/\ \ Graham Klyne
/ \ \ (GK@ACM.ORG)
My apologies if I appeared a bit difficult on this point. My
concern is simply that we need to distill the desiderda down
into trully fundamental expectations/requirements for the solution,
with as little (ideally no) forshadowing of any particular
proposal or approach -- otherwise we get into a tail wagging the
dog situation -- and it seemed to me that the idioms described (all
of them) need some degree of contextual understanding that is
beyond the scope of this document to provide.
I am satisfied, however, if the idioms simply reflect current
usage, with the relevant pointers (DAML+OIL, CC/PP, whatever),
such that if anyone is not clear on the meaning of the idioms,
they can refer to those references -- not to any of the proposals.
And in case I failed to say it earlier, thanks Graham for
the great job on the desiderada document!
Regards,
Patrick
Graham,
in "2. Use of XML-schema datatypes", you talk about derived types. I
think derived types are out of scope. In order to specify how a type is
restricted, special vocabulary would be required, and this is explicitly
off our charter...
I also think that (1) somehow goes together with (9).
In your examples, Idiom B seems notationally equivalent to Idiom C. Of
course, the difference is in what exB:date and exC:date represent.
BTW, I added the third idiom as Idiom P to the datatyping document
(Idiom D in yours). I don't mind renaming it to something else...
Sergey
Er... I think the intent was to be able to *use* them, not to specify
them. Personally, I'd prefer to start with the primitive types and then
move on to derived types, but other views were expressed.
I think that if we remember these are desiderata, not requirements, it's
OK. These are points for consideration/evaluation of proposals, not
must-haves.
Yes... (9) addresses an aspect of backward compatibility. My intituion
for now is to keep them as separate items, so that we're reminded to look
for other compatibility issues.
Yes... I'm feeling inclined to remove the example and just keep the
placeholder with a reference to B.
That might be confusing .. my idiom 'C' used to be called 'P'.
#g
/\ \ Graham Klyne
/ \ \ (GK@ACM.ORG)
