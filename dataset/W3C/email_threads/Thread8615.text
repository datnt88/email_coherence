On reading the XML Canonical spcification, I have some comments and
concerns, which I think should be addressed.
1) 'However, the statement in Namespaces in XML that "the prefix
functions only as a placeholder for a namespace name" is only true in
the limited context of the Namespaces in XML Recommendation.'
This is not true; although some specifications do not follow this,
others do. There are several DOM applications which treat the prefix as
"syntactic sugar"; it is only important for serialization and may be
changed at that stage. DOM Level 2 makes no attempt to make sure
prefixes match namespace URIs, for example, and there are DOM
applications which don't ever assign prefixes, because the XML is never
serialized. Several people are of the opinion that the Namespaces
Recommendation is correct in this regard, and those specifications which
differ are incorrect. So I would recommend that the language in the
canonicalization specification be chosen carefully.
2) 'The XPath data model expects the XML processor to convert relative
URIs to absolute URIs.'
This is an errata in the XPath specification, which will be fixed. See
the Hypertext Coordination Group archives.
Lauren Wood
Hi Lauren,
1) namespace prefixes
Actually, the language around namespaces was already softened once to the
state it is in now from the state of saying it is flat out wrong.
In the former document, I actually presented a theorem/proof pair to show
how namespace rewriting was actively harmful to some documents. Some felt
it was 'too serious' so we toned it down, but the argument remains in prose.
I would suggest that you consider the argument again because it is quite
irrefutable. Taking the position that other specs are wrong if they do not
regard this information as syntax sugar seems to be an undefendable
position. To wit, we would have to throw away, XSLT, XPointer and XPath. I
really don't think that's going to happen at this point.
2) relative to absolute URIs
I will be *very* happy to see this as an erratum, but I cannot remove the
statement from c14n until that erratum is published. I am hoping this occurs
before C14N goes to candidate rec.
As far as I can tell, the XPath requirement to absolutize was always
misguided anyway since it has nothing to do with XPath but rather with
something that must be done by the XML processor that creates the input to
XPath. If the input processor does not absolutize, it does not affect a
single thing in XPath.
As for signatures, I think that absolutizing would break signatures over
data that contains relative URIs in the namespace nodes. Up to now, we have
been encumbered to simply recommend that people don't use relative URIs in
data they plan to sign, so obviously we will be quite happy if this gets
changed.
Until it does, though, our hands are tied...
Thanks,
John Boyer
Development Team Leader,
Distributed Processing and XML
PureEdge Solutions Inc.
Creating Binding E-Commerce
v: 250-479-8334, ext. 143 f: 250-479-3772
1-888-517-2675 http://www.PureEdge.com http://www.pureedge.com/
On reading the XML Canonical spcification, I have some comments and
concerns, which I think should be addressed.
1) 'However, the statement in Namespaces in XML that "the prefix
functions only as a placeholder for a namespace name" is only true in
the limited context of the Namespaces in XML Recommendation.'
This is not true; although some specifications do not follow this,
others do. There are several DOM applications which treat the prefix as
"syntactic sugar"; it is only important for serialization and may be
changed at that stage. DOM Level 2 makes no attempt to make sure
prefixes match namespace URIs, for example, and there are DOM
applications which don't ever assign prefixes, because the XML is never
serialized. Several people are of the opinion that the Namespaces
Recommendation is correct in this regard, and those specifications which
differ are incorrect. So I would recommend that the language in the
canonicalization specification be chosen carefully.
2) 'The XPath data model expects the XML processor to convert relative
URIs to absolute URIs.'
This is an errata in the XPath specification, which will be fixed. See
the Hypertext Coordination Group archives.
Lauren Wood
Thank you.
It is harmful to some documents and specifications, but not all
documents and applications. This doesn't mean that those applications
that do not need such a dependency are wrong, which is what the current
language implies. I don't want DOM applications that do treat the prefix
as syntactic sugar (since those authors read the Namespaces Rec and
implemented it, without regard to XPath etc) to be labelled as being
wrong. So my suggestion, again, is to come up with some language that is
neutral on this point.
That is probably something you should pass on to the XSL WG.
Lauren
Hi Lauren,
It is harmful to some documents and specifications, but not all
documents and applications. This doesn't mean that those applications
that do not need such a dependency are wrong, which is what the current
language implies. I don't want DOM applications that do treat the prefix
as syntactic sugar (since those authors read the Namespaces Rec and
implemented it, without regard to XPath etc) to be labelled as being
wrong. So my suggestion, again, is to come up with some language that is
neutral on this point.
john Fair enough. I can change the language further to a kind of 'There
exist documents which are dependent...'.
However, note that since there exist XSLT and XPath transforms in DSig's
SignedInfo element, the DSig SignedInfo element is among those documents
that would be harmed by namespace rewriting.
occurs
That is probably something you should pass on to the XSL WG.
Lauren
Hi,
XML Schema could also be added to the list of applications which would
be harmed by namespace rewriting.
In this snippet for instance :
xsd:schema xmlns:xsd="http://www.w3.org/1999/XMLSchema"
xmlns:lib="http://xmlfr.org/ns/library"
"lib:qualificationType" means the type "qualificationType" defined for
namespace prefixed by "lib" and "xsd:string" means the type "string"
defined for namespace prefixed by "xsd".
Which means that "lib:" is syntaxic sugar but if you change it, you need
to change it in the type attributes as well.
Hope this helps.
Eric
Eric van der Vlist Dyomedea http://dyomedea.com
This sounds reasonable. This would also be a flag to various
applications to be careful what they do with the DSig SignedInfo
element.
thanks,
Lauren
