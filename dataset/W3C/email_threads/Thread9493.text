I got the following example from Roland Schwaenzl
Apparently, they use the fact that an RDF parser is required to turn of
parsing when it encounters a name in the RDF namespace it does
recognise. They example he sent me was:
rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:rdfs="http://www.w3.org/1999/02/22-rdf-schema-ns#"
xmlns:dc="http://purl.org/dc/elements/1.0/"
xmlns:dcq="http://purl.org/dc/terms/"
xmlns:my="http://tunichts.org/"
Lengthy html formatted text
Brian McBride said:
The existing M&amp;S is rather vague on this point IMHO:
"The RDF element is a simple wrapper that marks the boundaries in an
XML document between which the content is explicitly intended to be
mappable into an RDF data model instance. The RDF element is
optional if the content can be known to be RDF from the application
context."
-- 2.2.1. Basic Serialization Syntax
since context is never defined. and in the grammar:
[6.1] RDF ::= [' rdf:RDF '] obj* [' /rdf:RDF ']
-- http://www.w3.org/TR/1999/REC-rdf-syntax-19990222/#RDF
and thus rdf:RDF is actually entirely optional in the grammar.
We could specify it clearer in several ways.
I've currently got these words in my editors draft:
If the content is known to be RDF/XML by context, such as when
RDF/XML is embedded inside other XML content, then the grammar can
either start at Element Node RDF (only when an element is legal at
that point in the XML) or at production nodeElementList (only when
element content is legal, since this is a list of elements). Note
that if such embedding ocurrs, the grammar may be entered several
times but no state is expected to be preserved.
This gets around another issue - the XML infoset upon which this is
based is not defined for namespaced XML elements / attributes, so we
can't actually deal with them at all in the regular grammar:
XML 1.0 documents that do not conform to [Namespaces], though
technically well-formed, are not considered to have meaningful
information sets. That is, this specification does not define an
information set for documents that have element or attribute names
containing colons that are used in other ways than as prescribed by
[Namespaces].
-- http://www.w3.org/TR/2001/REC-xml-infoset-20011024/#intro
so for Rolands example, the current wording allows his application to
enter/leave RDF processing at the rdf:RDF element; and we don't and
shouldn't define what is outside that.
Dave
I wasn't clear enough before. Roland is relying on:
[[[When an RDF processor encounters an XML element or attribute name that
is declared to be from a namespace whose name begins with the string
"http://www.w3.org/TR/REC-rdf-syntax" and the processor does not recognize
the semantics of that name then the processor is required to skip (i.e.,
generate no tuples for) the entire XML element, including its content,
whose name is unrecognized or that has an attribute whose name is
unrecognized.]]]
What he is doing is:
o writing an html document
o embedding some RDF in it which does not get rendered by a
browser
o including in the middle of the RDF inside the html
which causes the browser to render the "some html here" and
is ignored by the RDF parser.
I bring this to the WG's attention because para 196 is relevant to this
issue, and also Roland's use of this is unusual.
Brian
Brian McBride said:
Brian McBride said:
He wasn't using that namespace in his example; his rdf:RDF header was:
rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:rdfs="http://www.w3.org/1999/02/22-rdf-schema-ns#"
xmlns:dc="http://purl.org/dc/elements/1.0/"
xmlns:dcq="http://purl.org/dc/terms/"
xmlns:my="http://tunichts.org/"
.... much elided ...
... more elided ...
So rdf:html is NOT handled by para 196 and thus the above is not
legal RDF/XML. Any application that handle this is not conformant to
the existing M&amp;S.
Note the namespace isn't the one for the syntax:
but another one:
or in fact, a whole set of namespaces with URIs beginning with that
prefix - horrible!
I guess this was done in the vein of how XML reserves all attributes
starting with "xml", expecting new RDF terms to be put there, not for
user applications to do it.
However, I feel we shouldn't keep Para 196 around on the grounds of
insufficient use and (correct) implementation. This the first
attempt at use I've ever seen and I don't remember seeing any parser
that implemented this.
Para 196 doesn't apply.
Dave
Hmmm... I assumed (unwisely, perhaps) that was a typo in the spec. (If the
paragraph is taken in its entirety, that possibility seems more plausible.)
(P196) The formal namespace name for the properties and classes defined in
this specification is http://www.w3.org/1999/02/22-rdf-syntax-ns#.
When an RDF processor encounters an XML element or attribute name
that is declared to be from a namespace whose name begins with
the string "http://www.w3.org/TR/REC-rdf-syntax" and the
processor does not recognize the semantics of that name then the
processor is required to skip (i.e., generate no tuples for) the entire
XML element, including its content, whose name is unrecognized or that has
an attribute whose name is unrecognized.
#g
Brian McBride said:
Graham Klyne MIMEsweeper Group
Strategic Research http://www.mimesweeper.com
Hi Dave,
Ahh - that explains something in his emails that I missed the significance
of. I think he perceives the namespace quoted in para 192 as a simple
error. He believes that the intent is that it should read:
I just checked the errata and no correction is there.
Is there a proposal covering this?
Brian
I haven't understood this thread but wonder if the following is relevant.
In ARP, I thought I implemented para 196, viewing the URL to be a typo for
the normal rdf namespace. The ARP implementation is that (at least in strict
mode) any unrecognised rdf attribute or element generates zero triples for
the enclosing element. e.g.
generates no triples (despite there being an unproblematic subdocument with
the rdf:foo attribute deleted).
There are implementation problems like what to do with:
Does this produce one triple or no triples? Para 196 is unclear on this.
I would support 'deleting' this paragraph. In particular I feel that the new
specs should on principle not define the processing behaviour for ill-formed
documents.
i.e. the quote rdf is wrong - and that is all the specs say. The para 196
behaviour is legal, as is to simply ignore the attribute, as is to core
dump, as is to launch world war three (well legal from an RDF processing
point of view, not international law!).
The grammar spec should describe the graphs corresponding to legal
documents; and no more.
Jeremy
Brian McBride said:
So I feel it was not an error; but was a design choice, allowing a
place (namespace) for future RDF syntax things to belong. Which has
not been used yet, but can't be since as far as I know, it has not
been implemented in most parsers. I vaguely remember one of the
original RDF WG members describing this to me at some point.
Nope, but I would propose deleting it because of the reasons I gave:
* Insufficient correct implementation
* Insufficient correct use
".., I feel we shouldn't keep Para 196 around on the grounds of
insufficient use and (correct) implementation. This the first
attempt at use I've ever seen and I don't remember seeing any
parser that implemented this."
-- me, http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0611.html
plus the reasons Jeremy gave which including the following:
* Defines ill-formed documents
"I would support 'deleting' this paragraph. In particular I feel
that the new specs should on principle not define the processing
behaviour for ill-formed documents."
-- http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0619.html
which I also support.
Plus on the grounds of general confusion if it was a typo.
Dave
