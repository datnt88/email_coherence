Impressively detailed and helpful comments ...
I hope we will have time to discuss these in appropriate detail.
I express interest in
1.2 whitespace,
4.1 rdf:datatype vs xsi:type
4.4 XML grammar
4.5 RDF and XML
Although I expect the last two come down to charter really.
Jeremy
A "process" comment... I note that the first URI is not publicly readable
(W3 member access is required). I think all the same information is
available at the second URI.
With reference to Concepts-related comments:
2.1 They suggest the term "lexical mapping" instead of "datatype
mapping". I see no problem with that change.
2.2 Suggestion to restrict the value space to those values for which there
is a lexical form. I cannot identify any problem with this, but I'm
uneasy. I think it means that applications designers must be aware of the
allowed lexical forms whenever using a datatype name as a class name in
RDF. I wonder if there is scope for surprises here?
2.3 Suggests describing the lexical space of datatypes as being "character
sequences" rather than "strings", to reduce possibility of confusion with
the datatype called "string". I think the suggested change is fine. (But
I do find myself wondering if the tail is wagging the dog here; there is
this common problem that when certain terms get specific technical
interpretations, we are pressured to stop using them for their more common
purpose. The term "model" springs to mind.)
2.4 Language tagging of strings is not enough for encoding natural
language. I think this warrants discussion. I think a number of people
(including myself) are uneasy about the special treatment of language tags
when there may be more elegant and comprehensive ways to achieve the
desired goals.
2.5 Editorial. Noted.
#g
Graham Klyne
PGP: 0FAA 69FF C083 000B A2E9 A131 01B9 1C7A DBCA CB5E
I think the union case is decisive here (though depending on
how one squints, one could see each value having a lexical form,
even if the mapping is shadowed by that of a "preceeding"
datatype).
In any case, I see no
reason why XML Schema cannot be more restrictive than RDF
with regards to datatypes. There may be other datatyping
frameworks which do not presume that all values have lexical
representatations, but which will work just fine with RDF.
Agreed.
So many headaches would be cured if we just ignored xml:lang
entirely...
Patrick
