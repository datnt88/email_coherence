Someone has just pointed me to
which it appears ought to be part of this "namespace" discussion
but is behind the W3C members's firewall. Could someone please
post said resource to this list?
Regards,
Terry Allen Electronic Publishing Consultant tallen[at]sonic.net
Davenport and DocBook: http://www.ora.com/davenport/index.html
T.A. at Passage Systems: terry.allen[at]passage.com
This document is
(a) old hat to anyone who's been following the WG, and
(b) out of date, lacking some of the more recent proposals
It was whipped together several weeks ago to present to PICS-NG
folks and so on a picture of some of the options we were looking at
without requiring them to read our WG stuff.
However, I don't want anybody to get the perception that there are
any secrets in this process, so I just mirrored it at
- Tim
I just don't get it. In
Tim and Andrew say that we need a namespace mechanism because we cannot use URIs.
And we cannot use URIs because "URIs are lengthy and require the use of some characters that would be out of place within tags or
attributes". But why not?
1) XML is not geared for terseness. Gavin's little compression tests for the shorttag minimisation debate suggest that lengthier
names would not increase the effective filesize (compressed) by much.
2) If a URI uses certain characters, surely that is good enough reason to make XML names also allow them.
I think you correctly identify the best solution, but then throw it away too soon.
I do not think XML should be constrained to have to support arbitrary cut-and-paste between inadequately marked-up documents. An
adequately marked-up document, I say, is one that uses unique GIs: URI-like names. If this means that all existing SGML DTDs do
not have adequate GIs, then that is not the end of the world.
GI uniquifying is trivial and can be done as part of XML normalisation. In OmniMark, for example it only involves altering things
like
OUTPUT " %q %c /%q "
to
OUTPUT " %g(uniq-prefix)%q %c /%g(uniq-prefix)%q "
Why make an unnessary problem? The problem is poor names, not poor namespaces.
Rick Jelliffe
