Now that the DOM Level 2 is nearing a stage where all that remains to be
done is to make sure it can be implemented :-), here's the list of
modules that the DOM WG is tackling for Level 3. Others are possible,
but only if more people join to help with the work, or the ones
currently on the list are resolved much more quickly than we expect.
We're starting work on requirements; the first WD of level 3 will
contain requirements and a few use cases to motivate them.
Content models, validation: finally, the long-awaited DTD module which
will also allow for validation, lexical checking, etc. Hopefully we'll
be able to come up with something that can be easily extended to
schemas, once they get here.
View and formatting: when a user highlights something on the screen, how
does the DOM know about it? Etc.
Load and save: standardising the way in which a DOM implementation opens
a document, and serializes it. We need to look at existing
implementations, of course, to see how they've all done it.
And, of course, there's Core and Events maintenance to add in the thing
we'd like but didn't want to put into Level 2 for various reasons.
regards,
Lauren
hopefully after yesterday's announcement that sun is withdrawing java
from the ECMA standardization process (a process they initiated),
people will choose another language for reference implementations.
even if there are no suitable standards-based languages, there are
certainly a number of suitable "open" alternatives (python comes to mind)
that are developed in an open spirit consistent with that of the w3.
thanks
Brad Clawsie brad@yahoo-inc.com
I don't think those of us with L2 in Java will be inclined to stop.
And in any case the L2 spec needs to be implementable in both Java
and JavaScript, since those are the standardized bindings.
Question: how is an implementor going to know their implementation
is correct, and conforms to the specification?
- Dave
I think we all reconsider our options from time to time, and this will
be seen as a negative, but until something else emerges that solves
the implementor's requirements as well as Java did, it is hard to make
a case for switching right away.
There are no compliance tests. The spec is the sole source of info
to determine whether the implementation is compliant or not. Tests
would be desirable IMO, but are always incomplete, and would have to
defer to the spec for additional cases, which can never be entirely
covered.
I think that part of this exercize is to find places where the spec
is not clear enough for a developer to know whether the spec is being
followed or not.
Ray Whitmer
ray@imall.com
It would be Really Nice to have a formal validation suite. Writing a good
one is a nontrivial effort. Think of it as an opportunity for someone to
contribute to the Cause...
(My minimal test harness for Events wouldn't help much; it focuses on
mutation events and on the corner cases in my own code, and it isn't
self-analysing.)
Joe Kesselman / IBM Research
NIST did a Level 1 test suite (only works in ECMAScript in IE at
the moment) and would probably welcome feedback on it, in part to
see whether they should do a test suite for Level 2...
See http://www.nist.gov/xml/ for more details, including Mary
Brady's email address for comments.
Lauren
