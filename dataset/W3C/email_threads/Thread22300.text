Greetings, DOM experts
I have a suggestion about the definition in DOM CORE of cloneNode in the
Node
interface, which perhaps needs to be clarified a bit. I was led to read
this
definition closely while examining the relevance of the DOM data model to
XML
query possibilities (my usual list is w3c-ql@w3.org).
Specifically I was comparing queries that return references to nodes with
those that return copies of nodes. A crucial aspect is whether a copy would
still know the parent of the original, and the DOM model includes a
parentNode
attribute as part of the Node interface (even though for a whole document
this
is redundant with the childNodes attributes of the parent nodes). However,
I
note that the definition of cloneNode sets the parentNode attribute to null
in
the result.
My suggestion is about the recursive definition of deep cloning. Strict
recursive application of the definition that creates a result without a
parentNode would produce subnodes that had lost their hierarchical
connection
- is this intended? Probably not - it looks as though it would help to
spell
out additionally that all the child and sibling attributes of the parent
need
to be changed to refer to the clones, and the parentNode attributes in the
children need to be set to the node for which they were recursively created.
[Typo: "recursively clone the subtrees" in the plural?] Is order always
preserved between siblings in deep cloning?
Incidentally, another welcome aid to readers of this section would be to
remove the ambiguity of "attributes" as between the IDL attributes of a node
and the XML attributes of an element.
Just to check my understanding of shallow cloneNode - this will copy the
chosen node, including its childNodes attribute, which (in IDL as in Java)
consists of references to other objects, i.e. to the original child nodes.
Hence by following the parentNode reference in the child, and then the
parentNode reference again, one can arrive at the original parent (if any)
of
the cloned node, even though parentNode is null in the clone.
Net result - if a query returns a clone of a node (following the DOM model),
it is not possible to navigate upwards to the original parent, except
indirectly in the case of a clone that is shallow and has at least one
subnode
- is that correct?
Thanks,
David
David BeechOracle Corporation, 500, Oracle Parkway,
Consulting MTSM/S 2op12, Redwood Shores, CA 94065
opinions, and are not necessarily endorsed by Oracle Corporation.
I have trouble following your description or your intent.
The deep clone copies the hierarchy producing a set of new nodes which bear a
1:1 correspondence to the original hierarchy from the cloned node on down, but
none of which point to the original nodes that were cloned as parents, siblings,
or children.
The childNodes attribute of the cloned node does not refer to any children of
the original node, nor would this be possible without destroying the original
hierarchy, since nodes cannot be children of multiple parents. The intent of
clone is not to destroy the original hierarchy. Rather, it refers to clones of
the children of the original node, which in turn refer to the clone of the
original parent as their parent. Only the root cloned node has a null parent.
Ray Whitmer
Ray,
Thanks for your reply.
My broad intent was to send a friendly response to the invitation in the DOM
Level 1 spec:
Comments on this document should be sent to the public mailing list
www-dom@w3.org.
I should probably have begun by saying that I liked the spec a lot.
Congratulations to all who invested so much effort in it. The application
of
object concepts in the DOM model of XML is very successful. This is why I
was
looking at the DOM model in some detail in thinking about query language
design for XML.
So my detailed intent was to suggest to the editors that some clarification
of
cloneNode might be helpful. If so, I don't know what process is envisaged -
there are already one or two errata noted, and other standards often set up
an
interpretations document pending incorporation into a revised spec.
Your commonsense description of deep cloning
is what would be expected, but it's not exactly what the spec says.
And maybe your difficulty with my description was with the last part, which
is
about shallow cloning, not deep cloning:
On this reading, the clone node would refer to the subnodes of the original
hierarchy, but they would be unaware of it - they would only have their
original parentNode attributes. If this is not correct, it would be helpful
also to clarify just what is cloned in a shallow clone.
Within the context of a query language, the relevance of all this is in
defining precisely what is the result of a query, and whether one can
navigate
to the original ancestor of a resulting fragment. For example, this might
occur where the result is from a subquery nested within the larger query.
Thanks,
David
David BeechOracle Corporation, 500, Oracle Parkway,
Consulting MTSM/S 2op12, Redwood Shores, CA 94065
opinions, and are not necessarily endorsed by Oracle Corporation.
David Beech scripsit:
No. A shallow clone of a Node has no children; it is just the
"local" content of the node, without parent, siblings, or children.
John Cowancowan@ccil.org
e'osai ko sarji la lojban.
ID attributes also need to be examined. What happens when I clone a set of
nodes having unique IDs? Are the IDs cloned as well? Under the current
definition, I would presume so.
What happens when I copy those cloned nodes with their duplicate IDs to
another section of the document?
Even more complicated is nodes with IDREF attributes, when the value of an
IDREF points to a node that is also being cloned.
Jeff Mackay
Vtopia, Inc.
Be careful not to read too much into the spec. I remember that this
subject did come up (probably by someone objecting to the cloneNode()
method!); my recollection is that we decided that cloneNode() creates an
exact duplicate Node, and it is the user's job to fix up IDs to be unique
and IDREFs to point to the desired node. (As I recall, all this requires a
fairly deep understanding of the current DTD to really do properly, and it
seems unreasonable to have the DOM implementor handle this all in the
general case).
You can't count on a DOM implementation doing anything more than what a
very literal interpretation of the spec insists that it do, and a literal
reading of the spec says that cloneNode() creates an exact duplicate, with
all attribute values in the result identical to those in the original, with
no special treatment for ID or IDREF attributes.
Mike Champion
We obviously want to be able to trust the spec, but does everyone agree
with previous replies on this thread, which have departed from "a very
literal reading of the spec" for cloneNode in two ways:
(1) for shallow clone, all the navigational attributes are set to null,
and not just parentNode as stated. This would presumably include the
various Child and Sibling attributes - what about ownerDocument?
(2) for deep clone, the recursive cloning alters all the navigational
attributes to replicate the original structure in the cloned structure
(and does not set parentNode to null in the subnodes).
Given this commonsense treatment of deep clone, I have to admit that
I share Jeff's interest in similar questions about ID and IDREF, e.g.
where the targets of the IDREFs are local to a subtree being cloned.
Thanks,
David
David BeechOracle Corporation, 500, Oracle Parkway,
Consulting MTSM/S 4op8, Redwood Shores, CA 94065
opinions, and are not necessarily endorsed by Oracle Corporation.
