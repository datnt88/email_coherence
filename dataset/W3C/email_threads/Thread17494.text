It seems to me that a list of links is not the only thing that risks
interrupting the narrative of a page for linear renditions such as speech.
I sometimes write a page designed to render in multiple columns for
majority visible browsers. Schematically, things like
This works well in graphical browsers, but breaks the story for
linear browsers. The alternative of keeping the main story together
loses the ability to float-and-flow for the majority readers.
Also "headers navigation" does nothing for it, because there's
logically no header to mark the continuation.
I think perhaps we need to view this kind of situation as a
generalisation of "skip links", and provide a similar kind of
workaround. I have used the following, and wonder if it is
satisfactory in all realistic cases:
(1) Use the above schematic for the benefit of visual browsers:
(2) Add a "Continue this story" link and a "Main story continued"
target before and after the insets respectively.
(3) Style the "continue" anchors as "display: none"
The URL in my .sig is a case in point.
Nick Kew
Nick's manifesto: http://www.htmlhelp.com/~nick/
YES! That is what I meant by adding more skip links. If the floated
section is small enough to view the rest of the main article, hidden links
are fine. But, if you are going to jump to a section off the current
display, but still on the same page, visible links would be encouraged so
that those with graphical browsers but no mouse could easily jump to the
section not currently displayed.
-Steve
Nick Kew said:
Alternatively, you could have kept the main story together and made the
"standards" and "commerce" stories occur after the main story in the HTML
but use CSS to position them. This would avoid the need for the skip link
and header navigation would work well.
AWK
What you don't want to do though is write generic links if you have multiple
stories on the same page that could be come repetitious so you need a
mechanism that puts the title of the story that is being continued in the
body of the link such as continue with bush sells out america instead of
continue story.
It seems to me that a list of links is not the only thing that risks
interrupting the narrative of a page for linear renditions such as speech.
I sometimes write a page designed to render in multiple columns for
majority visible browsers. Schematically, things like
This works well in graphical browsers, but breaks the story for
linear browsers. The alternative of keeping the main story together
loses the ability to float-and-flow for the majority readers.
Also "headers navigation" does nothing for it, because there's
logically no header to mark the continuation.
I think perhaps we need to view this kind of situation as a
generalisation of "skip links", and provide a similar kind of
workaround. I have used the following, and wonder if it is
satisfactory in all realistic cases:
(1) Use the above schematic for the benefit of visual browsers:
(2) Add a "Continue this story" link and a "Main story continued"
target before and after the insets respectively.
(3) Style the "continue" anchors as "display: none"
The URL in my .sig is a case in point.
Nick Kew
Nick's manifesto: http://www.htmlhelp.com/~nick/
Yes Andrew, I forgot to mention that about CSS and linearization. Good
point. But watch out for your tab indexing when using CSS positioning.
Just check that it doesnt get rendered in a way that is not obvious.
Andrew Kirkpatrick said:
Correct me if I'm wrong, but that's not really an option for insets.
CSS float relies on the floated content appearing before what floats
around it, while fixed or absolute positioning precludes the main
story flowing around any kind of inset, and suffers from rather a
lot of buggy implementations.
Splendid initials for a computing man:-) Coincidence? Or are you
young enough to have parents to whom they are meaningful?
Nick Kew
Nick's manifesto: http://www.htmlhelp.com/~nick/
Not satisfied with "this should work, in theory"? Yes, there are lots of
buggy CSS implementations. I don't have a good example on hand that is an
exact parallel of your file. I'll check around my favorites...
Ha! I'm happy to say that my parents didn't name me after a programming
language. They are both pretty good at spelling, so I'm also certain that I
wasn't named after an extinct bird.
AWK
It strikes me that Nick uncovered an excellent example of where HTML/CSS
theory conflicts with good accessibility for non-visual UAs. Using float is
a key principle of CSS, but as mentioned it relies totally on intermixing
the two content streams in a manner that is inconsistent with separating
presentation and structure.
Thinking back to my design for print days, there was no need to insert a
sub-story into the main story flow in Quark or PageMaker in order to create
the text-wrapped display that float replicates. The two stories remained
whole and separate regardless of how they were streamed onto the page.
Both PageMaker and Quark support text-flowing models that allow the story to
be displayed in discontiguous blocks on the page while remaining part of
complete threads internally.
The issue raised originally is real, and absolute or relative CSS
positioning cannot replicate the design function of floats. This is why CSS
has floats :)
The solution would need to be implementing the same sort of sophisticated
box and story handling models in CSS that print designers enjoy in DTP
applications. Physical positioning is only part of the story, something I
had overlooked until Nick's post. In CSS, we should be able to define
display boxes and link them to story threads in the HTML source. The browser
would be responsible for dynamically flowing the story into its boxes
depending on local settings like window size and font properties.
Maybe in CSS8? :)
Thought provoking stuff. The bottom line is you either compromise the design
or the HTML structure if you want to do this kind of DTP-style layout in
todays browsers.
Take care
Ian Anderson
zStudio
PDF, since long before tagged PDF, has had the ability to represent this
sort of structure, even if I've never been aware of it being used in
anger. Each contigous chunk is called a bead and and the whole
article a thread. I don't know how well the reader handles this as
I've never found such a document.
Whilst there are moves towards intrinsic multi-column layout, there are
a couple of problems that CSS has that DTP doesn't have:
- it has incremental rendering with minimal backtracking as a desirable
design aim (even if most web pages use auto table layout, that
frustrates this);
- it doesn't have the human layout designer there to tweak things to
work well, which is necessary to avoid completely empty columns, etc.
if a radically different font size is used.
I more and more think that the tagged PDF model is a better model for
what most designers want to do and they way they seem to think; you
create a hard page description in presentational form, then annotate
it with the structure, rather than creating the structure and annotating
it with soft layout rules. Of course, with tagged PDF, if you are
not in the primary audience, that can appreciate the graphic design,
you are at the mercy of the tagger.
