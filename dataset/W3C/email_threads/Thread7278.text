No, there is much more at stake here. We are talking about developing
the protocol for managing documents on the Web. This involves access
to a variety of sources, only one of which is the traditional file system.
Of further interest is access authentication (notice I did NOT say ACL)
and document privacy (although this is a very sticky problem, see my
comments earlier today on the list server).
"Generation X" is going to require the secure and authenticated sharing
of documents to move various projects ahead. Traditional document
management system (DMS) functions like check-in, check-out, document
control, version control, etc. must be supported as well as the simple file
system access.
-src
Steve Carter
Novell
Wayne C. Gramlich gramlich@bigbang.eng.sun.com 09/20/96
03:18pm
All:
I just recently subscribed to the w3c-dist-auth@w3.org mail list.
After browsing the archives and meeting minutes for a while.
After reading Jim Whitehead's "Requirements on HTTP for Dist. Editing",
I found myself asking the question, "To a first approximation,
aren't we just reinventing a file system protocol (e.g. NFS,
Andrew, etc.)?" Did I miss something important? (Please, no
flame responses... I was not present at either of the first two
WG meetings, so I may be missing some important implicit context.)
Thanks,
-Wayne
I've been thinking about the exchange we've had about "distributed
editing vs reinventing file system protocol", and trying to extract
from it:
* Which requirements for distributed editing
can NOT be met by a file system protocol?
* Are those requirements explicitly described in the "Requirements
on HTTP for Distributed Editing" (an unfortunate title).
I think that most of the requirements are 'information hiding' rather
than 'capabilities' requirements (e.g., "clients need not be aware of
server's locking scheme in order to add a new version" is an
information hiding requirement.)
Larry
My comments below: -src
I think that most (if not all) file systems will have a problem with a
presistant lock and in maintaining the ownership of that lock.
Generally, if a file system is advised that a file is to be locked to
prevent writing by anyone other that the lock holder, that lock is only
honored until the file system is restarted. This is reasonable because
the assumption is that the process editing the document will have gone
through the same state change as the file system and will therefore know
that the lock must be re-aquired. This will not be the case with
distributed authoring. The file system state will be a non-issue as far
as the authoring process is concerned. For these and the other reasons
I've stated, the working group is working toward augmenting existing
protocols to allow persistant-state (lock being one of the states)
processing of documents in a global context.
The intent is that the requirements be explicit. We spent several hours
on the requirements during our last meeting. Jim will soon publish the
result and I anticipate more discussion. This will be a great
opportunity for you to see where we are.
Information hiding is only one of the aspects of the requirements. State
hiding is another. Persistance yet another. This is far from a simple
case.
-src
Steve Carter
Novell
srcarter@novell.com
At night, God leaves the lights on --
so that we know he is home.
All:
(I was out most of last week, so this my first real opportunity to respond.)
The only issue I want to raise is the following -- must the distributed
authoring be done with a single protocol or can a collection of protocols
be employed to accomplish the task?
Is it an absolutely necessary to support traditional document management
systems? If there is a solution that solves all of the problems being
addressed by a traditional DMS and does more, couldn't we skip the
traditional DMS solution? This is not idle speculation on my part.
In my day-to-day activities, I use a distributed document management
system that has local file locks, but no global (remote) locks.
(Actually, there is one global lock, but it could easily be removed.)
-Wayne
Wayne C. Gramlich gramlich@bigbang.eng.sun.com 09/20/96 03:18pm
