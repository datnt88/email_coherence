Sorry for having been absent for a while.
When could we be safe in assuming the review period to have ended? I
personally fell that we should start tying things up in order to have a
release soon, especially as so much work on level 2 things is going on.
I propose that we all, including the editors and members of the DOM WG,
look at the tests for one more week and then proceed to evaluating
correctness and so forth before packaging.
We have still to resolve, as a common action item, the question of the
simplistic harness to run generated tests online, which would be
different than using any of the xUnit frameworks as is being done now.
This was a wish from the DOM WG and I think it would be good to have
something runnable on the DOM/Test area.
As far as my action items are concerned, I still have to produce and
updated documentation, as well as incorporate information about what
tests we need on teh main page; this is particularly relevant for level
2 and onwards since level 1 has been fairly complete from the start.
We also have an issue with transforming Junit tests to our DOM TS. Has
anyoone looked into this? It would probably be a solution along the
lines of Java2XML. Is it doable? Desirable? (The question originates
from a comapny that has tests and wants to know if it is worth the
effort to transform theses tests).
/Dimitris
[mb] Is this wish for just the ECMAScript tests, or for all bindings?
[mb] Maybe the test matrix will do this -- I have not generated the one
included within build.xml, but I suspect that it will point to holes in
the test suite. I'll generate it and see what it looks like.
[mb] I have not looked into this, but I would think that it would require a
transformation from whatever Java2XML produced into the DOM TSML.
From our experience in authoring tests in the DOM TSML, I would suspect
that there will be problems with language constructs that we do not
currently
support, such as the more recent discussions involving the Java String
methods.
--Mary
As I was just informed, the action item to look into transforming from
JUnit to DOM TS is dropped, so we don't need to look into that.
/Dimitris
There are still about 10 tests or so that I was hoping that someone else would write, basically setting node.nodeValue for each of the distinct types of nodes and seeing if the right thing happens.
Only about 3-4 of the derived node types have corresponding tests and this particular test is contentious since the spec says that setting nodeValue when nodeValue is always null is supposed to have
"no effect" and several implementations will throw an exception.
All the tests ending with EE deserve review. I wrote these to do the same test as same name minus the EE but without depending on entity references being preserved. Xerces-J will pass all these
tests when expandEntityReference = false, but will fail them when expandEntityReference = true. I think the tests are right, but I haven't isolated the bug in Xerces-J.
On the last item, it is probably easier to do the transformation on a case by case basis than trying to do a generic tool.
I will try to put together a matrix of tests vs processors by the start of next week.
