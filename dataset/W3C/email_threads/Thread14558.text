Here is a preliminary draft of a some type of diagram for Jason's introduction to the guidelines.
We intend to discuss the process of a site development and were accessibility can be incorporated into this process.
Try to imagine this as a flow diagram. Please add omissions comments.....
Cycle of Development: (flow down)
a.. Brainstorm
b.. Storybook
c.. Prototype
d.. Content
e.. Testing
f.. Usability testing
g.. Promote
h.. Evaluate
i.. Maintain
Areas of Development: ( flow in parallel)
Server Side: Programming, scripting and installation
Client or Sever Side: Graphical, text and semantic content (data models), page design/layout, markup, coding, scripting, formalization of languages, templates, style sheets and rendering information, coordination.
Would add
1.define requirements and scope where this will discuss the players,
functionality, infrastructure, software and hardware.
2.Define deliverables for example, functional specification, test
requirements, quality assurance requirements, change request process
3.Define configuration management and file release process
4.either make a make a separate bullet for quality assurance or add a slash
to Testing and couple it there
Of Lisa Seeman
Here is a preliminary draft of a some type of diagram for Jason's
introduction to the guidelines.
We intend to discuss the process of a site development and were
accessibility can be incorporated into this process.
Try to imagine this as a flow diagram. Please add omissions comments.....
Cycle of Development: (flow down)
*Brainstorm
*Storybook
*Prototype
*Content
*Testing
*Usability testing
*Promote
*Evaluate
*Maintain
Areas of Development: ( flow in parallel)
Server Side: Programming, scripting and installation
Client or Sever Side: Graphical, text and semantic content (data models),
page design/layout, markup, coding, scripting, formalization of languages,
templates, style sheets and rendering information, coordination.
My observations:
- I think the "requirements and scope" line item Robert brought up goes
before brainstorming, and it includes audience (intended and potential) and
the constraints of the system. If WAI is publishing this, it also needs to
convey the message that you need to set the bar for accessibility and
standards compliance before you start even high-level design. I can't
emphasize this enough: it's an order of magnitude more difficult to make
sites usable, accessible and standards-compliant with each step that's
completed without answering these questions.
- "Content" may belong anywhere (or everywhere, or nowhere) in this flow.
Content provision could happen before the site is designed (legacy content),
at any step in the process (e.g., media sites), or even after the site is
released (data entry apps). The information architecture that accommodates
that belongs in scope/brainstorming/storyboarding (but no later).
- Usability testing isn't a step, but an iterative process. (And I'm pretty
sure I'm not saying this so I as a usability person can get more work. ;) If
I were following this flow, I'd run usability on paper mock-ups after
storybook, again after prototype, alongside testing, and after release.
- I think "Release" should be a step in there, as well. Preferably before
"Promote", though there are companies I've seen who believe otherwise. :)
- I'm reluctant to put down too much practical (specifically, large
team-oriented) information into a flow such as this, because it would look
daunting to smaller design teams ("you must be THIS BIG to make an
accessible site"). One person can design something that's accessible, and
I'd hate to scare that one person off by saying s/he needs to hire an
information architect, development resources, QA, project managers, and
usability consultants, and buy a content management system, automated
testing suite, and four staging servers in order to make myquiltingpage.com
accessible. This kind of checklist would be helpful for larger
organizations, but I think that if it's done, it belongs as its own
document, rather than part of the intro; that there should be a miniaturized
version for smaller teams or individuals; and that an introduction for web
design should be written to accommodate both those groups.
m
Would add
define requirements and scope where this will discuss the players,
functionality, infrastructure, software and hardware.
Define deliverables for example, functional specification, test
requirements, quality assurance requirements, change request process
Define configuration management and file release process
either make a make a separate bullet for quality assurance or add a slash to
Testing and couple it there
-----Original Message-----
Of Lisa Seeman
Here is a preliminary draft of a some type of diagram for Jason's
introduction to the guidelines.
We intend to discuss the process of a site development and were
accessibility can be incorporated into this process.
Try to imagine this as a flow diagram. Please add omissions comments.....
Cycle of Development: (flow down)
Brainstorm
Storybook
Prototype
Content
Testing
Usability testing
Promote
Evaluate
Maintain
Areas of Development: ( flow in parallel)
Server Side: Programming, scripting and installation
Client or Sever Side: Graphical, text and semantic content (data models),
page design/layout, markup, coding, scripting, formalization of languages,
templates, style sheets and rendering information, coordination.
Here is an excerpt from my presentation at www8 in Toronto. The text speaks
to the powerpoint slide, which I need to locate and post. This is somewhat
dataed but the process is still good. Note need to update this to add CSS
Validator.
4. LIFE CYCLE DEVELOPMENT
To build a Universally Accessible web site, here is an outline of the life
cycle development process the web designer, coder, content manager, graphic
artist or team can use. The foundation for any universally accessible web
site is the guidelines. The World Wide Web Consortium's Web Accessibility
Initiative (WAI) has published the Web Content Guidelines for people to
use - these are free! On the WAI web site you will also find the List of
Checkpoints. Should you have questions, the Web Accessibility Initiative
provides an Interest Group or forum for discussion on issues relating to Web
accessibility, particularly issues related to WAI activities.
Universal accessibility incorporates usability and universal design. So when
building a web page or web application, accessibility problems or other
design, errors can be greatly reduced before the web page or site is
released to the public. This is accomplished by applying quality assurance
to check the concept, syntax and code; layout, navigation, and graphics; and
acceptance testing on multiple browsers and users.
Quality assurance incorporates internal or external reviews or peer reviews,
and applying third party tools. For example, CAST's Bobby for an
accessibility check, W3C's HTML to validate the code and StarBase's
StarSweeper to check for ALT Tags, Title's, Height and Width, build an image
library from the web site and other quality assurance functions. Unit or
Acceptance testing can be accomplished on multiple browsers to ensure the
information is conveyed and there are no navigation or site usage problems.
For example, here is a simple process to follow in order to build a
universally accessible web page or web applications:
* Define the audience, business requirements and rules, objectives, and
timeline with the user.
* Determine resources, schedule, and sketch the process with a flowchart.
* Determine the design requirements and approach; refer to the Web Content
Guidelines and internal design documents.
* Design the web site or web application.
* Design Review with the customer to ensure the design is what they
envisioned.
* QUALITY ASSURANCE. The web coder or programmer would then conduct a
Quality Assurance review by using Bobby; and a HTML code validator and one
or a combination of the following tools or methodologies: content review;
preview on Lynx, a text based browser; multiple browsers and versions
(Internet Explorer 3 and 4, Netscape Navigator 3, 4.x, and Opera);
voice-based web browser (pwWebSpeak), and screen readers (WIN Vision and
Jaws For Windows), Palm devices, StarBase's StarSweeper and WebSite Garage.
Other items that can be checked are, does the page print properly in black
and white and color? Can the all print and graphics be read?
* UNIT TEST. The coder or programmer tests compliance to the business
requirements. For example, test to ensure the e-mail functions and the
message is received by the recipient, forms are tested and data checked,
links are tested. Usability testing can be either simple or more formal.
Users who are not associated with the design can conduct this or an
independent third party can provide a review of the design concept. If the
design uses queries or updates to modify or retrieve information from the
database, then this will need to be tested. The coder can develop scenarios
using a spreadsheet to document the process, more commonly referred to as a
script. There are also automated testing tools that will record your script
and play it back anytime or simulate different browsers. These tests serve
as a baseline for the design criteria and also can document the expected
results.
* Acceptance Test. This is formal acceptance by the customer of the product
you designed as based upon customer requirements and a test plan. This
procedure can be either a simple checklist or a more formal document if it
is part a more business critical function.
The above process is shown below using a flowchart, see Figure 1 Life Cycle
Development. The keys to any project using the life cycle development
approach are the business rules, the technical and functional design
reviews, and tracking the project using a scheduling tool. This flowchart
describes the major tasks as identifying the project, requirement
definition, test plan, site design, quality assurance, unit test, and
acceptance testing is started. Once requirement definition is complete then
two tasks can start, requirements definition and the test plan.
Before the design is moved between the major tasks, the code can be
baselined and submitted to configuration management or an automated
configuration management tool could be used to manage the code. At this
point the project lead and/or customer also review the design. If the design
fails the review, then a corrective action report is issued and rework
begins to correct the discrepancy. If the design passes and the customer is
satisfied, then design moves to the next task.
When the unit test and the test plan are complete, then acceptance testing
can begin. If the acceptance test fails, then a corrective action report is
issued and rework begins to correct the discrepancy. If the project passes
and the customer is satisfied, then project is promoted to production, which
can involve alpha or beta test.
Each major task has inputs that can be used as a metric or requirement and
the inputs to:
Requirements definition are business rules; scope and definition; allocation
of resources, timeline and budget; design requirements, guidelines, and flow
chart; database design and schema: and, security.
Site Design which includes web applications and database are content,
usability, graphics, layout, HTML or CSS, web application development,
email, forms, and banners.
Quality Assurance are content review; Bobby; layout; code validator; view on
lynx, pwWebSpeak, multiple graphical browsers and versions; review and use
email and forms; print in black and white, and color; and spell check.
Unit Test are use cases, test scripts, test web applications and database.
Test Plan are test environment involves use cases, test criteria, and test
scripts; and test such as usability, performance, functional, regression,
and/or load, which incorporates concurrent users.
Requirement management and traceability requirements are the cornerstone of
any successful project. Each time there is a change to the requirement or
there is a schedule slippage, then the dependencies and constraints must be
reviewed.
I second everything Matt said.
Nothing more to add.
--Kynn
Kynn Bartlett kynn@idyllmtn.com http://kynn.com/
Technical Developer Relations, Reef http://www.reef.com/
Chief Technologist, Idyll Mountain Internet http://idyllmtn.com/
Contributor, Special Ed. Using XHTML http://kynn.com/+seuxhtml
Unofficial Section 508 Checklist http://kynn.com/+section508
Lets see,
if we were to write "testing" and include in parenthesis "can include: , QA,
project managers, usability consultants, automated done on four staging
servers"
Well - everyone does testing (or at least pretend they do) so that is not
intimidating, no one will be put off by by a "can include " thing
keep the terms general, detail by the side.
Just like WCAG 2
Lsa
WAI w3c-wai-gl@w3.org
myquiltingpage.com
Please don't fail to make a valuable contribution that only you can make, just
because it is not the whole solution to the whole problem. This is why we
organize Working Groups.
There is an analysis/synthesis process analogous to object oriented design
that
can right-size the map of activities for different scales of site development.
This requires input in the form of working examples at different scales.? You
are not saying "This is what you have to do."? You are saying "This is what
works for us."? Just tell what you know. You are not obliged to solve the
whole problem.
Al
http://kynn.com/ http://kynn.com/
http://www.reef.com/ http://www.reef.com/
http://idyllmtn.com/ http://idyllmtn.com/
http://kynn.com/+seuxhtml http://kynn.com/+seuxhtml
http://kynn.com/+section508 http://kynn.com/+section508
I could see a document like this being useful as a resource. I
can't see it being a useful resource -generated by a working
group whose job it is to create technical specifications-.
Which is to say, if this is going to be written up and posted
on a publicly available web site by an informed person -- say,
Lisa, or anyone else -- or even posted by the Education and
Outreach group, I'd say it was a great thing and I'd link to
it and happily refer people to it.
On the other hand, if this is going to be part of our WCAG
technical specification or something else released by this
working group, then I feel I must object strenuously to the
idea that we must either mandate or promote a single method
of web site development, with the appearance that our chosen
method is the "best way to create an accessible site" or
"the way all sites are done" or whatever.
Such a scheme has no place _in WCAG_ or in this group which
is tasked with creating the next version of WCAG; defining the
web creation process -- or how we _think_ it should work --
is way, way out of scope for this group, and I feel that if
we want to create anything worth using _as an accessibility
reference_, we need to abandon the notion that we can force
our own concepts of "good web design" on the world by claiming
that "it helps accessibility if you only do things OUR way!"
--Kynn
Kynn Bartlett kynn@idyllmtn.com http://kynn.com/
Technical Developer Relations, Reef http://www.reef.com/
Chief Technologist, Idyll Mountain Internet http://idyllmtn.com/
Contributor, Special Ed. Using XHTML http://kynn.com/+seuxhtml
Unofficial Section 508 Checklist http://kynn.com/+section508
So, here's what I'm thinking. Rather than focus on generalized processes,
might it be more effective to create role documents (techniques for
developers, techniques for designers, techniques for project managers,
techniques for test/QA, techniques for usability, maybe techniques for "I'm
the whole department") that outline what we think they should be thinking
about to build sites, whatever their process is?
Sounds like it might be a decent idea for Education and Outreach,
or maybe even something where the W3C would want to fund or encourage
private authors (such as me, hand some of that fed money over!) to
write specific articles or tutorials for specific audiences.
But I can't possibly see how this wouldn't turn into a huge
distraction _for this working group_ and cause us to spend even
more cycles spinning our wheels and worrying 'okay, who is this
a technique for?' instead of getting a technical specification,
WCAG 2.0, finished up and ready for delivery.
--Kynn
Kynn Bartlett kynn@idyllmtn.com http://kynn.com/
Technical Developer Relations, Reef http://www.reef.com/
Chief Technologist, Idyll Mountain Internet http://idyllmtn.com/
Contributor, Special Ed. Using XHTML http://kynn.com/+seuxhtml
Unofficial Section 508 Checklist http://kynn.com/+section508
just
By no means am I saying this flow shouldn't be worked out because it's
flawed. Actually, in my original response, I had a handful of refinements to
the outline Lisa posted.
development.
Here's my issue here: someone's going to have to analyze and synthesize that
process, and we can't expect many of them, perhaps even the majority, to
glean what they need from a large-scale example process. I'm afraid that in
the struggle to create techniques to make sites accessible, something like
this could prevent the guidelines from being approachable by people who
might not understand or work within this kind of framework, but would
nonetheless comprehend and be able to comply with the principles of the
document itself.
Which is to say, a lot of people look at the guidelines thinking, "what do I
have to do to satisfy this?" I think we should be answering the "what" (and
the "why", while we're there), but not necessarily answer "how" in a
singular super-size process that smaller groups would need to deconstruct.
Those who are simply digging in to get what they need will look at a
document like that and think, "gee, I need to change my whole process? Never
mind." Or, "Wow. This is a lot of work. I/We can't justify that." When in
actuality neither impression is true.
You
That sounds like a "best practices" (oh, how I twitch at that phrase)
document, which presumably has a larger scope than this working group. Good
accessibility techniques are an ingredient in development processes that
vary widely from group to group and sector to sector. A refinement, not a
refactoring. I'm not even certain that "what works for us" is something that
could be agreed upon even within this working group, outside of adherence to
the guidelines and techniques that are being produced.
So, here's what I'm thinking. Rather than focus on generalized processes,
might it be more effective to create role documents (techniques for
developers, techniques for designers, techniques for project managers,
techniques for test/QA, techniques for usability, maybe techniques for "I'm
the whole department") that outline what we think they should be thinking
about to build sites, whatever their process is?
matt
As you lowly regard "best practices" I deplore "rather" since there can be
a multiplicity of foci. If I come into the "document" as a one-person
designer/builder/implementor I can tell it that I want a viewpoint
similarly couched, if I'm in the Department of Whatever and must deal with
an avalanche of resources/requirements/responsibilities I might choose a
"larger" version?
Because most of the WG members are heavy into the "individual" aspect of
things, we need wake-ups from people who find certain naivetes laughable as
in "oh, you want to add meaningful alt="text" - here's 237,422 images for
you to work on." What Phill faced at IBM (half million+ distinct sites, as
I recall!) vs. much of Kynn's clientele who deal more privately with things.
Ultimately the "megashop" produces something that pretends the intimacy of
a single author's voice and the "mom-pop house" wants to spread out and
look like an army - graphics over here, interaction there, etc. Just as our
intended "beneficiaries" vary widely, so does our target audience and by
giving elaborate choices, a person putting up a home page can be a
vicarious "major Web design house".
Love.
ACCESSIBILITY IS RIGHT - NOT PRIVILEGE
Previously I had provided txt from a presentation that describes a process.
I also have found the powerpoint that went along with this. Pls find this
attached.
Behalf Of Kynn Bartlett
QA,
I could see a document like this being useful as a resource. I
can't see it being a useful resource -generated by a working
group whose job it is to create technical specifications-.
Which is to say, if this is going to be written up and posted
on a publicly available web site by an informed person -- say,
Lisa, or anyone else -- or even posted by the Education and
Outreach group, I'd say it was a great thing and I'd link to
it and happily refer people to it.
On the other hand, if this is going to be part of our WCAG
technical specification or something else released by this
working group, then I feel I must object strenuously to the
idea that we must either mandate or promote a single method
of web site development, with the appearance that our chosen
method is the "best way to create an accessible site" or
"the way all sites are done" or whatever.
Such a scheme has no place _in WCAG_ or in this group which
is tasked with creating the next version of WCAG; defining the
web creation process -- or how we _think_ it should work --
is way, way out of scope for this group, and I feel that if
we want to create anything worth using _as an accessibility
reference_, we need to abandon the notion that we can force
our own concepts of "good web design" on the world by claiming
that "it helps accessibility if you only do things OUR way!"
--Kynn
Kynn Bartlett kynn@idyllmtn.com http://kynn.com/
Technical Developer Relations, Reef http://www.reef.com/
Chief Technologist, Idyll Mountain Internet http://idyllmtn.com/
Contributor, Special Ed. Using XHTML http://kynn.com/+seuxhtml
Unofficial Section 508 Checklist http://kynn.com/+section508
Previously I had provided txt from a presentation that describes a process.
I also have found the powerpoint that went along with this. Pls find this
attached.
I agree this does not need to be in the WCAG, however tis may be referenced
in the Techniquiques or EO documentation
QA,
I could see a document like this being useful as a resource. I
can't see it being a useful resource -generated by a working
group whose job it is to create technical specifications-.
Which is to say, if this is going to be written up and posted
on a publicly available web site by an informed person -- say,
Lisa, or anyone else -- or even posted by the Education and
Outreach group, I'd say it was a great thing and I'd link to
it and happily refer people to it.
On the other hand, if this is going to be part of our WCAG
technical specification or something else released by this
working group, then I feel I must object strenuously to the
idea that we must either mandate or promote a single method
of web site development, with the appearance that our chosen
method is the "best way to create an accessible site" or
"the way all sites are done" or whatever.
Such a scheme has no place _in WCAG_ or in this group which
is tasked with creating the next version of WCAG; defining the
web creation process -- or how we _think_ it should work --
is way, way out of scope for this group, and I feel that if
we want to create anything worth using _as an accessibility
reference_, we need to abandon the notion that we can force
our own concepts of "good web design" on the world by claiming
that "it helps accessibility if you only do things OUR way!"
--Kynn
Kynn Bartlett kynn@idyllmtn.com http://kynn.com/
Technical Developer Relations, Reef http://www.reef.com/
Chief Technologist, Idyll Mountain Internet http://idyllmtn.com/
Contributor, Special Ed. Using XHTML http://kynn.com/+seuxhtml
Unofficial Section 508 Checklist http://kynn.com/+section508
