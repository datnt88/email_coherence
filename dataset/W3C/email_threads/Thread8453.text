TO:w3c-ietf-xmldsig@w3.org
Based on the recent discussion, I want to propose the following resolution for
the detached/embedded and transform discussions. In the last version of the
syntax, the notion was to allow either an object within the siginfo element or
a reference to an external element. This introduced two problems (at least):
one was the potential for nested c14n's where one alg applied to the object and
the other to the sigInfo wrapper; and the other the fact that the processing
for an embedded vs. detached signature were different (thus, one couldn't
convert between the methods without breaking the signature).
In order to address this, I'm proposing moving back to a variation on prior
suggestions in which the sigInfo element always contains a single reference (a
resource element) to the object being signed(which may be a manifest, a PDF
file, etc.). The resource element in sigInfo contains the location, a set of
transformations to be applied prior to digest calculation (e.g. c14n,
exclusion, encoding), and the digest alg and value (calculated over the
contents of the object element or the referenced document, but excluding the
object start and end tags. An embedded object may be contained within the
signature element, but not within siginfo.
This approach allows switching between embedded and detached signatures without
breaking the signature (as long as we get the digest computation rules right),
and separates the c14n of sigInfo from the transformations applied to the
object. It does impose the cost of an additional digest calculation in some
instances.
In addition to documenting and refining this (example below), I expect the
draft for next Monday to also begin to define some of the keyInfo and algorithm
structures. I should have the new draft out later this week.
Dave
P.S. My citicorp.com email address is currently in send-only mode (?), so send
any replies to dsolo@alum.mit.edu
Sample revised syntax:
jhasodutoinwoiahsh
for
Part of my confusion related to the intermediate steps of content which have
no representation in the syntax -- they area intermediate steps.
prior
reference (a
PDF
The resource element in sigInfo contains the location, a set of
the
the
without
right),
some
algorithm
send
Joseph Reagle Jr.
Policy Analyst mailto:reagle@w3.org
XML-Signature Co-Chair http://w3.org/People/Reagle/
for
Part of my confusion on all of this was that we are dealing with
intermediate steps of content which have no representation in the syntax --
they are intermediate! However, in the data model they are clearly
identified.
object and
processing
Do these problems apply to the data-model/syntax [1] I've proposed? I don't
think so:
[1] http://www.w3.org/Signature/Drafts/xml-dsig-datamodel-990823.html
Objects and References
reference and object take content.inline and content.EB and yield
*.result. This production occurs based on the parameters of the
operations (hash, c14n, encoding, etc.). This intermediate results are
not represented in the syntax explicitly. However, we do need a
feature for distinguishing between signing the actual object (the
encoded form) and content.inline.result (the decoded (processed)
form.). See the [28]section on signing the native encoding of a
packaged document.
Joseph Reagle Jr.
Policy Analyst mailto:reagle@w3.org
XML-Signature Co-Chair http://w3.org/People/Reagle/
