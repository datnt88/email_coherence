An extra parameter has been added to the id() function to identify the
target document.
We need to decide whether to make the same change to XSLT's key() function.
Michael Kay
This would be very nice! Having to use more than one key on different
documents leads to sprinkling of lots of artificial xsl:for-each
instructions and this results in code that is very difficult to read and
understand even by its original author. It is especially difficult to
decide what the current document is at particular point of the code. I had
a recent bad experience exactly with this.
Please, do include the proposed new argument -- this will make
programmer's work a lot easier and the code much more readable,
understandable and maintainable.
This should be a separate overload, preserving an overload with the
current signature of the key() function.
With regards,
Dimitre Novatchev.
Do you Yahoo!?
Yahoo! Finance Tax Center - File online. File on time.
Michael Kay
Dimitre Novatchev
I agree with Dimitre that xsl:key and xsl:id should have the same
argument forms but I do question why this is needed (for id() or key())
It is true that the XSLT1 for-each hack was horrible but given that the
XPath2 versions allow id() to be used within a path expression and
index the document current at that point, what is gained by the new
syntax. Isn't id("a",$somedocumentnode) the same as $somedocumentnode/id("a")
in the case when $somedocumentnode is a single document node (and
perhaps also when it is not?)
David
This e-mail has been scanned for all viruses by Star Internet. The
service is powered by MessageLabs. For more information on a proactive
anti-virus service working around the clock, around the globe, visit:
# I agree with Dimitre that xsl:key and xsl:id should have the
# same argument forms but I do question why this is needed (for
# id() or key()) It is true that the XSLT1 for-each hack was
# horrible but given that the
# XPath2 versions allow id() to be used within a path
# expression and index the document current at that point, what
# is gained by the new syntax. Isn't id("a",$somedocumentnode)
# the same as $somedocumentnode/id("a") in the case when
# $somedocumentnode is a single document node (and perhaps also
# when it is not?)
It's almost the same. There are probably two reasonable justifications for
the extra argument
(a) the $doc/id(@x) approach isn't obvious to the average beginner
(b) the above changes the context node for "@x" which means you need to
introduce a variable to follow cross-document references.
I'm not personally overwhelmed by the weight of these arguments but I can
live with them.
Michael Kay
neither is xmlns=anything, but it doesn't stop us using it:-)
Yes there are a great many things in XPath2 that are more horrible than
this small duplication of functionality.
But actually what is the semantics of the second argument?
Does it have to be a single document node, or is there some implicit
application of union and root() invoked as would be the case if
id($a,$b) were defined to be $b/id($a).
I have a horrible feeling that you are going to tell me it's a type
error to have anything other than a single document.
David
This e-mail has been scanned for all viruses by Star Internet. The
service is powered by MessageLabs. For more information on a proactive
anti-virus service working around the clock, around the globe, visit:
