Tim Bray writes
10.4
Marked sections are useful in DTDs (a la HTML and TEI) but it might be valid
to ban them within transmitted document instances conforming to XML. (XML
should really be for the transmission of version independent documents.
RCDATA should have its entities resolved before tranmission and with CDATA
should have any embedded markup delimiters replaced by character references.)
There's been no discussion of this, and early voting results do not show a
trend. Marked sections clearly complicate parser construction, and I don't
think they are useful enough to make up for this and get into XML.
Seconded.
ht
10.4
Marked sections are useful in DTDs (a la HTML and TEI) but it might be valid
to ban them within transmitted document instances conforming to XML. (XML
should really be for the transmission of version independent documents.
RCDATA should have its entities resolved before tranmission and with CDATA
should have any embedded markup delimiters replaced by character references.)
There's been no discussion of this, and early voting results do not show a
trend. Marked sections clearly complicate parser construction, and I don't
think they are useful enough to make up for this and get into XML.
On the contrary, I think they are very necessary in DTDs. I try to avoid
them, but the inconsistencies in the current crop of tools force me to
use them. XML is not going to be able improve this situation in the least.
Tools will still have their quirks and many of those quirks will require
some subtle change to the DTD in order to compensate for them. Variations
on table models and equation markup are two such examples of things that
XML will not address and will continue to be a problem in the future.
Robert Streichstreich@slb.com
Schlumberger512-331-3318 (voice)
Tim
10.4
Marked sections are useful in DTDs (a la HTML and TEI) but it might be valid
to ban them within transmitted document instances conforming to XML. (XML
should really be for the transmission of version independent documents.
RCDATA should have its entities resolved before tranmission and with CDATA
should have any embedded markup delimiters replaced by character references.)
There's been no discussion of this, and early voting results do not show a
trend. Marked sections clearly complicate parser construction, and I don't
think they are useful enough to make up for this and get into XML.
I think if you need this kind of sophistication, you should use Real SGML.
Are you calling HTML "Real SGML"? Even such simple applications need marked
sections in their DTDs, as does any DTD that changes over time.
Martin Bryan, The SGML Centre, Churchdown, Glos. GL3 2PU, UK
From the postings on this subject so far it would seem that:
1) MS INCLUDE/IGNORE is useful in a DTD.
It helps tailor a DTD for different development tool quirks (and version
control, and other things). However, it requires a parser to keep a stack
because the MSs can be nested.
2)MS CDATA/RCDATA is useful in an instance.
It lets you imbed TeX directly, for example (]] hardly ever occurs anywhere).
As Erik Naggum has pointed out, it is safer to use an MS for a special parsing
context because there is a visible label. For XML, there is the added advantage
that you don't need to parse the DTD, as you would for a CDATA or RCDATA element
type.
So, if the above are deemed valid requirements for XML, we can simplify the
implementation of MS as follows:
INCLUDE/IGNORE is allowed only in a DTD and may nest.
CDATA/RCDATA is allowed only in an instance and may not nest.
TEMP is allowed anywhere; it is just a comment (or disallow it and save an entry
in the keyword table).
Charles F. Goldfarb * Information Management Consulting * +1(408)867-5553
13075 Paramount Drive * Saratoga CA 95070 * USA
International Standards Editor * ISO 8879 SGML * ISO/IEC 10744 HyTime
Prentice-Hall Series Editor * CFG Series on Open Information Management
