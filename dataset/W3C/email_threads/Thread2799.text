I suggest the following change for Content-Disposition:
19.5.1 Content-Disposition
The receiving user agent SHOULD NOT respect any directory path
! information present in the filename-parm parameter. The
filename SHOULD be treated as a terminal component only.
+ The filename MAY be modified in a way that the system will
+ correctly recognize the media type given in the Content-Type
+ header, i.e. by adding an appropraite file extension.
! disposition-type = "attachment" | "inline" | disp-extension-token
+ disposition-parm = filename-parm | disp-extension-parm
+ | creation-date-parm
+ | modification-date-parm
+ | read-date-parm
+ | size-parm
disp-extension-parameter
The new date fields of RFC 2183 could also be used in HTTP and are
currently missing from HTTP.
I consider the fact that modification-data-parm is independent from Last-
Modified a feature: Last-Modified can be used to indicate when the
resource under this URL changed (i.e. date of upload to server), while
the modification-date parameter explicitly refers to the modification
date of the file offered for download (i.e. the file when the archive
was compiled).
- If this header is used in a response with the application/octet-
- stream content-type, the implied suggestion is that the user agent
- should not display the response, but directly enter a `save response
- as...' dialog.
+ The disposition "inline" suggests that the user agent should try to
+ display the response directly. It may fallback to "attachment" if
+ it is unable to display the response or display it using a generic
+ viewing method (such as a hex viewer).
+ The disposition "attachment" suggests that the user agent should not
+ display the response, but directly enter a `save response as...'
+ dialog.
+ If no Content-Disposition is given, UAs usually makes a guess based
+ on the Content-type.
Rationale: It is not a good idea to use the file type to determine
whether to display it inline. A UA could still start a hex viewer for
application/octet-stream to display it inline in it's browser window.
On the other hand, if is bad if I get type "application/octet-stream"
and filename "foo.gif" and don't know how to handle it, just because my
system does not determine file types by extension.
I believe this is what the "disposition" information is actually for.
The assignments
inline = display directly and
attachment = save to disk
mostly agree with the definitions in RFC 2183.
Then, why not make it part of the official HTTP spec? If implemented
correctly, it can be safe and useful.
And what about Content-Description?
PGP: ID=1024/527CADCD FP=12 20 49 F3 E1 04 9E 9E 25 56 69 A5 C6 A0 C9 DC
This is taken from the MIME useage of Content-Disposition.
We will not differ from current Web usage (without changing the name).
We will not add new material to HTTP/1.1 at this late date (we have
finished working group last call, and have asked the area directors
to start the approval process.
However, feel free (as a separate document) to propose improvements
in this area.
Is our description in variance with other MIME or current Web cleint usage?
- Jim Gettys
Jim Gettys:
I initially wrote the Content-Disposition section, so let me add some
details here.
The Content-Disposition section documents *only* what some popular
current web browsers do. I was careful not to specify anything beyond
what I could test to heve been implemented. The section does not
contain any actual requirements for HTTP/1.1 software. It was added
to answer a frequently asked question.
If we had set out to specify an improved version of
Content-Disposition, something like your proposal would have been in
the specification. But we did not set out to specify any improvement,
reasoning that others (e.g. the MIME community) could to this if
needed.
That being said, *if* another revision of the 1.1 spec is necessary,
it would be nice to add a pointer to RFC 2183, which updates RFC 1806.
Koen.
Jim Gettys jg@pa.dec.com schrieb:
Is it used at all on the Web? To my knowledge, it did first occur in
HTTP/1.1 rev. However, it certainly would not harm to update the
reference to RFC 1806, which is now obsolete, with a reference to RFC
2183.
PGP: ID=1024/527CADCD FP=12 20 49 F3 E1 04 9E 9E 25 56 69 A5 C6 A0 C9 DC
Sounds like updating the spec to reference 2183 is in order,
to me.
As Koen (and I) have pointed out, that non-normative section
is there to document existing practice of existing browsers;
anything more than this should be handled as a separate document.
- Jim Gettys
Content-Dispostion was implemented in Web browsers BEFORE it was added
to the HTTP/1.1 spec, to document existing practice. It is indeed
quite useful, when people are downloading code, to be able to provide
a file name for "save as" to work.
Dunno how widespread it was among MIME implementations at the time.
- Jim
I'll add the pointer and bibliographic reference...
- Jim
