DRAFT - 2 Checkpoints for HTML, XML, SMIL, and CSS
I only considered two checkpoints in an attempt to create technology
specific checkpoints. It is interesting that in each of these cases, the
technology-specifics are highlighted. I think what we will find is that we
will have general principles but that those are principles of design and
not markup language. Each markup language has a strength and not all design
principles will apply to each of those strengths. For example, separating
presentation and content means that two languages may be employed for the
desired effect. Therefore, if we do have technology-specific checks they
will be tied to other technology-specific checks. For example, XML and
style sheets.
The draft is available at: http://www.w3.org/WAI/GL/2000/05/wcag-techs.html
Note that it is very rough. This is a first pass.
--wendy
wendy a chisholm
world wide web consortium
web accessibility initiative
madison, wi usa
Proposal For SVG:
1.1
Ensure each svg element and each g element that is a part of a graphic
has a title and a desc. Defined symbols must have a desc, and should also
have a title.
3.1 ....
+ Group pieces of the graphic into a g element. (for example, table legs, a
table, a chair, a plate, a cup, and the table setting are all meaningful
parts of a picture that shows a table laid out for dinner).
+ Where there are more complex relationships between components, use metadata
to describe these.
+ Use font and text elements rather than simple paths for including text.
+ Use "shortcuts" - rectangle, straight lines, circles, rather than curved
paths, where they adequately reflect the lines being described.
Charles McCN
DRAFT - 2 Checkpoints for HTML, XML, SMIL, and CSS
I only considered two checkpoints in an attempt to create technology
specific checkpoints. It is interesting that in each of these cases, the
technology-specifics are highlighted. I think what we will find is that we
will have general principles but that those are principles of design and
not markup language. Each markup language has a strength and not all design
principles will apply to each of those strengths. For example, separating
presentation and content means that two languages may be employed for the
desired effect. Therefore, if we do have technology-specific checks they
will be tied to other technology-specific checks. For example, XML and
style sheets.
The draft is available at: http://www.w3.org/WAI/GL/2000/05/wcag-techs.html
Note that it is very rough. This is a first pass.
--wendy
wendy a chisholm
world wide web consortium
web accessibility initiative
madison, wi usa
W3C Web Accessibility Initiative http://www.w3.org/WAI
Location: I-cubed, 110 Victoria Street, Carlton VIC 3053
Postal: GPO Box 2476V, Melbourne 3001, Australia
(By the way, how to do a lot of this is outlined in the draft Note
"Accessibility in SVG" - http://www.w3.org/1999/09/SVG-access - and commetns
on that are more than welcome...
Chaals
Proposal For SVG:
1.1
Ensure each svg element and each g element that is a part of a graphic
has a title and a desc. Defined symbols must have a desc, and should also
have a title.
3.1 ....
+ Group pieces of the graphic into a g element. (for example, table legs, a
table, a chair, a plate, a cup, and the table setting are all meaningful
parts of a picture that shows a table laid out for dinner).
+ Where there are more complex relationships between components, use metadata
to describe these.
+ Use font and text elements rather than simple paths for including text.
+ Use "shortcuts" - rectangle, straight lines, circles, rather than curved
paths, where they adequately reflect the lines being described.
Charles McCN
DRAFT - 2 Checkpoints for HTML, XML, SMIL, and CSS
I only considered two checkpoints in an attempt to create technology
specific checkpoints. It is interesting that in each of these cases, the
technology-specifics are highlighted. I think what we will find is that we
will have general principles but that those are principles of design and
not markup language. Each markup language has a strength and not all design
principles will apply to each of those strengths. For example, separating
presentation and content means that two languages may be employed for the
desired effect. Therefore, if we do have technology-specific checks they
will be tied to other technology-specific checks. For example, XML and
style sheets.
The draft is available at: http://www.w3.org/WAI/GL/2000/05/wcag-techs.html
Note that it is very rough. This is a first pass.
--wendy
wendy a chisholm
world wide web consortium
web accessibility initiative
madison, wi usa
W3C Web Accessibility Initiative http://www.w3.org/WAI
Location: I-cubed, 110 Victoria Street, Carlton VIC 3053
Postal: GPO Box 2476V, Melbourne 3001, Australia
W3C Web Accessibility Initiative http://www.w3.org/WAI
Location: I-cubed, 110 Victoria Street, Carlton VIC 3053
Postal: GPO Box 2476V, Melbourne 3001, Australia
My comments, submitted ex officio, are as follows:
1. Wendy's draft is encouraging in that it tends to confirm the viability
of the approach agreed upon at last week's meeting. My few substantive
remarks are consequently directed more at the detail than at the principle
of the work.
2. Wendy is correct in noting that there are certain technical
specifications which are closely interconnected, for example HTML
(including XHTML) and CSS. These could be treated in combination rather
than individually. Thus, techniques could be provided for HTML/CSS, rather
than separately for HTML and CSS, where applicable. Similarly, techniques
corresponding to the scenario in which XML is used with a style language
(whether XSL or CSS) could be developed. More generally, one can
distinguish between markup languages intended to represent documents, and
style languages, which play a supporting, complementary role but generally
do not encode the actual content (text, auditory/visual data, etc.). Of
course, XSL formatting objects do include the contents of the document, in
rendered form; but this occurs at a later stage of processing than that at
which access-related style dependencies (visual/auditory/tactile
formatting according to users' and/or authors' preferences) need to be
taken into account. Thus, by the time the XSL formatting objects are
constructed, it is to be expected that the necessary application of style
rules will have been carried out in such a way as to satisfy the user's
needs; if this is not so, then an access problem would result, which needs
to be avoided. Stated differently, it is possible to describe a processing
model by which style rules operate on high-level semantic constructs in a
markup language to generate formatted output (including form controls and
other user interface components as required) which can then be presented
to the user. The guidelines should encourage such processing.
3. It is also true that some guidelines will be applicable only to a
specific subset of the available web-related technologies. This should not
give rise to any difficulties, provided that it is made clear to readers
of the guidelines that not every requirement is applicable to all
technologies, and further that the generality of the principles enunciated
in the document must be qualified by contextual factors operating within
particular domains. By working through the implications of the guidelines
in each technical area, the working group can provide an excellent basis
on which to apply the general principles to technologies that may be
developed in the future. Ths effort should also assist in the
distillationof basic tenets of accessible design, which can be expressed
and elaborated in the guidelines.
aloha, wendy!
what follows is an extremely rough pass at adding XHTML
checkpoints to the draft located at
note that the following are
a) far from comprehensive
b) far from complete
c) an attempt to illustrate how to preserve accessibility
(and its sister, validity) from both a backwards and
forwards compatibility perspective
d) an attempt to ascertain if i am on the right track
--- begin proposed XHTML Techniques for
Guideline 1. Provide equivalent alternatives to auditory and
visual content.
Checkpoint 1.1 Provide a text equivalent for every non-text
element.
XHTML
1. "alt" is a required attribute of the img element.
Authors are also encouraged to use the "longdesc" attribute
to provide a rich description of the image when appropriate
(i.e. when an understanding of the contents of the image is
indispensable to an understanding of the document as a
whole).
2. While XHTML 1.0 provides an "alt" attribute for the
applet element, since XHTML doesn't allow "empty" elements
(that is, elements without terminating tags), authors are
strongly encouraged to include rich equivalents for applets
by using the applet element as a containing tag, as in the
following example, which illustrates how one might provide
an equivalent alternative for an applet that generates a
"roll-over" graphic which lists the site's sponsor:
3. Use the XHTML modules for the object and map elements
4. For frames:
4A. Use the noframes element to provide an functional
equivalent for the frameset. Authors are encouraged to
replicate the content of the navigation frame within the
noframes container, so as to provide a user employing a
frames-incapable user agent or who has configured the UA not
to render frames with access to the content of the frameset.
4B. Use the "longdesc" attribute to provide equivalent
access to the content of each frame.
4C. Do not use the frame element to point directly to a
rasterized image or any other binary multi-media file.
5. For inline sub-windows (the iframe element)
5A. Replicate the content contained within the body element
of the document referred to by the "src" attribute between
the start and end tags for the iframe to provide inline
alternative content
5B. Use the "longdesc" attribute to provide equivalent
access to the content of each inline frame.
5C. Do not use the iframe element to point directly to a
rasterized image or any other binary multi-media file.
Guideline 3. Use markup and style sheets and do so properly
Checkpoint 3.1 - Use semantics and structure in accordance
with the markup language being used
Note that this is the proposed generalized checkpoint as
discussed DRAFT of Generalized WCAG
Checkpoints.
XHTML
1. All elements must have closing tags. "Empty" (non-
container) elements, such as IMG or HR, inherited from
HTML4, must either have an end tag (i.e. br /br or
(forward slash greater-than), as in the following examples
2. All elements must nest properly. This means that if you
declare an element, you must also close it--using either the
end tag defined for the element or by using the / (forward-
slash greater-than) to terminate the "empty" element--before
closing any parent elements.
3. All HTML element and attribute names used in an XHTML
document must be in lower case. This is particularly
important, as XML is case-sensitive, meaning that LI
(capitalized) and li (lowercase) are two different tags.
4. Attribute values must always be enclosed in quotes.
5. While it is possible to use both the "lang" and "xml:lang"
attributes when specifying a natural language change, the
value of the "xml:lang" attribute takes precedence. Authors
are, therefore, encouraged to use both the "lang" and
"xml:lang" attributes to ensure maximal backwards
compatibility.
6. Use the "id" attribute to identify fragment identifiers.
(Note While HTML 4 defined the "name" attribute for the
elements a, applet, form, frame, iframe, img, and map to
ensure backwards compatibility, HTML 4 also introduced the
"id" attribute. While both attributes are designed to be
used as fragment identifiers in HTML, in XHTML 1.0, the name
attribute of these elements is formally deprecated, and will
be removed in subsequent versions of XHTML. The reason for
this change is that in XML, URIs that end with fragment
identifiers of the form "#foo" do not refer to elements with
an attribute defined to be of type ID--that is, the id
attribute in HTML 4.) XHTML documents, therefore, must use
the "id" attribute when defining fragment identifiers, even
on elements that historically have also had a "name"
attribute. .Since many existing HTML user agents don't
support the use of ID-type attributes in this way, identical
values should be supplied for both of these attributes to
ensure maximum forward and backward compatibility--for
example
Authors should also be aware that, since the set of legal
values for attributes of type ID is much smaller than for
those defined for "name" in HTML (which is defined as type
CDATA in HTML but redefined as a new type, NMTOKEN, in
XHTML), care must be taken when converting existing HTML
documents into XHTML. The values of these attributes must be
unique within the document, valid, and any references to
these fragment identifiers (both internal and external) must
be updated should the values be changed during conversion.
7. Since XML parsers are permitted to silently remove the
contents of comments, the historical practice of hiding
scripts and style sheets within comments to make the
documents backward compatible is highly unlikely to work as
expected in XML-based implementations.
For maximum backwards compatibility, use external style
sheets, especially if your style sheet uses any of the
following characters
(less-than)
&amp; (ampersand)
]] (double-right bracket greater-than)
-- (double-dash)
Likewise, authors are strongly encourage to use external
scripts, and may find it necessary to do so if the script
contains any of the following characters
(less-than)
&amp; (ampersand)
]] (double-right bracket greater-than)
-- (double-dash)
8. Respect XHTML's "element prohibitions}, as defined at
http//www.w3.org/TR/xhtml1/#prohibitions and in Section
4.9 of the XHTML 1.0 Recommendation
The following elements have prohibitions on which elements
they can contain--this prohibition applies to all depths of
nesting, i.e. it contains all the descendant elements.
a -- cannot contain other a elements.
pre -- cannot contain the img, object, big, small, sub, or
sup elements.
button -- cannot contain the input, select, textarea, label,
button, form, fieldset, iframe or isindex elements.
label -- cannot contain other label elements.
form -- cannot contain other form elements.
--- end proposed XHTML Techniques for
ACCOUNTABILITY, n. The mother of caution.
-- Ambrose Bierce, _The Devil's Dictionary_
Gregory J. Rosmaita unagi69@concentric.net
Camera Obscura http://www.hicom.net/~oedipus/index.html
VICUG NYC http://www.hicom.net/~oedipus/vicug/
Read 'Em &amp; Speak http://www.hicom.net/~oedipus/books/
in a previous post, archived at (long URI warning)
i wrote,
quote
7. Since XML parsers are permitted to silently remove the contents of
comments, the historical practice of hiding scripts and style sheets within
comments to make the documents backward compatible is highly unlikely to
work as expected in XML-based implementations.
For maximum backwards compatibility, use external style sheets, especially
if your style sheet uses any of the following characters
(less-than)
&amp; (ampersand)
]] (double-right bracket greater-than)
-- (double-dash)
unquote
obviously--if you think about it, which i equally as obviously did not--i
meant _forwards_ and not _backwards_ compatibility...
at least i think i think that's what i think i think,
gregory
CARTESIAN, adj. Relating to Descartes, a famous philosopher, author of
the celebrated dictum, _Cogito ergo sum_--whereby he was pleased to
suppose he demonstrated the reality of human existence. The dictum
might be improved, however, thus: Cogito cogito ergo cogito sum--"I
think that I think, therefore I think that I am;" as close an approach
to certainty as any philosopher has yet made.
Ambrose Bierce, _The Devil's Dictionary_
Gregory J. Rosmaita unagi69@concentric.net
Camera Obscura: http://www.hicom.net/~oedipus/index.html
VICUG NYC: http://www.hicom.net/~oedipus/vicug/index.html
Read 'Em &amp; Speak: http://www.hicom.net/~oedipus/books/index.html
