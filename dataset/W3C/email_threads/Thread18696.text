Hello,
Eric Hansen and I just spent some time discussing
content focus requirements in the 8 July 2002 UAAG 1.0 [1].
I would like to propose the following clarifications,
for the next draft. Please indicate whether you have
any objections.
Thank you,
_ Ian
[1] http://www.w3.org/WAI/UA/WD-UAAG10-20020708/
1) Checkpoint 9.1 starts:
"1. Provide at least one content focus for each viewport
(including frames) where enabled elements are part of the
rendered content."
When a viewport includes no enabled elements (whether
a particular piece of content doesn't include enabled
elements or the format never allows interactivity),
content focus requirements of the following checkpoints
don't apply: 1.2, 5.1, 5.2, 5.4, 6.6, 7.1, 9.3,
9.4, 9.5, 9.6, 9.7, 10.2, 10.6, 11.5.
For instance, the content focus highlight requirements
of checkpoint 10.2 don't apply when there is no
content focus.
I would like to add a normative exclusion to 9.1
that states this.
Eric and I discussed whether a "ContentFocus" label
would be useful, and we concluded it would not, as
it would not provide useful information to someone
reading a claim. It would only be used to tell someone
that a user agent doesn't support interactivity at all
for a format, which says more about the format
than about the user agent.
2) Checkpoint 5.1 reads:
"1. Allow configuration so that if a viewport opens without
explicit user request, its content focus does not automatically
become the current focus."
Since a viewport may open that does not have a content focus,
this checkpoint should read:
"1. Allow configuration so that if a viewport opens without
explicit user request, its content focus or user interface
does not automatically become the current focus."
3) In checkpoint 11.5, provision 1, the term "focus" should be
replaced by "content focus" for clarity. The other parts
of the sentence make it clear that content focus is intended.
4) We recently removed the VisualText conformance label
since we felt that any user agent that renders text visually
has to satisfy checkpoints 3.3, 4.1, 4.2, and 4.3. For
user agents that don't, they can invoke applicability.
Eric and I propose to re-instate the VisualText label (for
the above checkpoints) and treat it like the Selection label:
* If the UA renders text content visually, the user agent
must satisfy those checkpoints. This is a little more
"transparent" than relying on UA developers to invoke
applicability.
* For audio/speech-only user agents, a developer can
opt out of those checkpoints by reference to the label.
This change does not affect conformance, but I agree with
Eric that having an explicit label (required as soon as
the UA renders visual text) is probably better than
relying on the applicability clause.
Also:
- I will add a link from the definition of "content focus" to
checkpoint 9.1.
- Eric and I reviewed chapter 3 (Conformance) and have some
ideas for simplifying it. These changes will appear in the
next draft.
Ian Jacobs (ij@w3.org) http://www.w3.org/People/Jacobs
Ian,
The proposed changes sound fine to me.
Jon
Jon Gunderson, Ph.D., ATP
Coordinator of Assistive Communication and Information Technology
Division of Rehabilitation - Education Services
MC-574
College of Applied Life Studies
University of Illinois at Urbana/Champaign
1207 S. Oak Street, Champaign, IL 61820
Voice: (217) 244-5870
E-mail: jongund@uiuc.edu
WWW: http://www.staff.uiuc.edu/~jongund
WWW: http://www.w3.org/wai/ua
"Ian B. Jacobs" ij@w3.org
Tom Gilder raised in wai-ig the fact that the above also needs to cover
elements with CSS overflow property set to produce scrollbars - the
element with the scrollbars needs to be able to recieve focus - Mozilla
currently does not make these elements accessible, and IE requires the use
of the proprietary tabindex extension as an author.
I propose changing "including frames" to "including frames, and any
element which can be scrolled" (or similar)
Jim.
I suspect that what you are asking for is already covered:
* You must be able to move the content focus to any
enabled element. Whether you consider the scrolled
element as part of the same or different viewport,
checkpoint 9.1 as written covers what you're asking
for.
* If you are talking about operating the scrollbars
themselves through the keyboard, that's covered
by checkpoint 1.1.
Does this sound correct?
_ Ian
Ian Jacobs (ij@w3.org) http://www.w3.org/People/Jacobs
"Ian B. Jacobs" ij@w3.org
Yep, that seems to be, sorry for not checking in detail, it was just
because it was fresh in my mind and seemed relevant to the checkpoint
being discussed.
Cheers,
Jim.
