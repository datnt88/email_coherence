We are in the process of redesigning a multiple company extranet and have
learned that a huge number of our users have Netscape 4.X as their browser.
Consequently, some of our team is reluctant to design using standards (the main
concern is using CSS) since it will mess up the design we have already created.
The concerns include CSS becoming overhead and that keeping track of how the
various workarounds for Netscape 4.x work and don't work, along with the
inheritance issues, will take a huge amount of time. I would love to know what
some of our options are, but don't have the technical expertise to make a strong
case. Any advice?
Short and simple:
If you want Netscape 4.X support, you do not want standards.
The Hacks'R'Us department is somewhere else.
I apologize if that sounds crude, but welcome to the real world. Either you
want standards (with a small degree of customizations) or you do not want
standards and you can keep on using TABLE/FONT/IMG-spacer-based layouts.
Give up Netscape 4 or give up standards.
Thor Larholm
URL: http://www.jibbering.com/faq/ FAQ for comp.lang.javascript
URL: http://jscript.dk/unpatched/ Unpatched IE vulnerabilities
browser.
main
created.
the
what
strong
Mike, and everyone else, this is absolutely incorrect.
Many designer have been designing standards compliant websites that
display perfectly and work real swell in Netscape 4 for a couple of years
now. Especially using XHTML.
Some believe you must sacrifice your visual design to be standards
compliant in NS4. This is untrue. One has nothing to do with the other.
Some believe you must rely on hacks to be standards compliant in NS4. Like
the visual design, any hacks used have nothing to do with either NS4 or
standards.
There is no line of comparison that suggests non-standards can, in any way,
be better, more cost effective, more visually attractive, or better for
your customers than designing with standards.
Even is you use NS4.
Austin
[Significant user base using Netscape 4]
When it is noticed that a fair chunk of revenue comes from Netscape 4
visitors, the above choice is a no-brainer, and standards lose out. Is the
best way of advocating standards a typical brusque "take it or leave it"?
Taking the importance of the Netscape 4 audience there are two ideas that
are not of the best quality:
1.) Tough, go away
2.) Get a better browser
A more practical and pragmatic approach would be to accept that catering for
Netscape 4 is a prime requirement, and also to accept that standards based
authoring is the best way forward.
Taking a workable technique as described by
fully standards compliant website to all user agents, with the exception of
Netscape 4, give it what it wants.
The upshot of this technique is that there is no significant overhead in
catering for Netscape 4, no overhead in aiming for standards compliancy
where it is important, and no brusque discrimination against browser users.
When the time comes that Netscape 4 ceases to be a problem, switching of the
NN4 browser sniff (sniffing by exception only) leaves a fully standards
compliant website, plus the infrastructure to deliver content in means other
than HTML and XHTML.
Treat Netscape 4 as the exception it is, not by pretending it isn't
important to visitors.
It is highly unlikely your design cannot be created in a way that complies
with standards. You can create 99% of all designs using standards *and*
have them work in NS4 with very, very little to no degradation in
functionality or visual appearance.
If there is a conflict between your design and standards, you need to make
a *business* decision as to what is more important: your current design
*as is*, or designing with standards.
I would suggest that when you add everything up, standards are more
important.
If this means your current design won't work, then 99% of the time, MINOR
CHANGES TO THE DESIGN will allow you it to work with standards.
I want to stress that almost *any* design is possible with standards, in
all the major browsers and versions, all the way back to NS4.
CSS placed in external files (as is best practice) actually cuts server
overhead, both in data transfer and data storage. It also cuts manpower
time as it is easier to maintain the website as a whole. CSS = less
overhead.
Netscape 4 compliant CSS is well-documented. If you're limiting CSS to
basic text formatting and background colors (as most of your CSS will be,
i.e. fonts, colors, size, bold, not bold, link colors, etc.), then you
will need NO HACKS and NO WORKAROUNDS to work in NS4.
If you used more advanced formatting, or even positioning, all of your CSS
hacks and workarounds would be placed in a second stylesheet (as is best
practice), so there would be NO problem tracking the workarounds.
If you or any of your team have any further questions regarding CSS,
standards, or getting your design to work with both, please feel free to
contact me off-list by email (austin@desiremedia.com), or to email the web
design mailing list (list@webdesign-l.com).
Austin
Ok. Maybe I'm crazy. But what kinds of designs are you speaking about, the
ones that are impossible to achieve in NS4 using standards?
Maybe some sample sites you could direct me to, or even screenshots or
photoshop mock-ups would be much appreciated.
Either we're not on the same page concerning visual design, or we're not
on the same planet.
Thanks,
Austin
First, it *is* possible to code for NN4 using valid, strict
(X)HTML and CSS. Of course, you can't create the same
sofisticated layouts and visually perfect designs as for modern
browsers, but your documents can still be fully accessible and
usable.
Second, is not HTML 4.0 Transitional a valid standard? We may
consider XHTML + CSS layout a better standard, however the
transitional specs are standards as well and there is nothing
wrong with a table layout, provided it's done properly.
Best,
Marek Prokop
From: "Austin Govella" austin@desiremedia.com
I will have to disagree on the level of degradation, a standards-based
NS4-compatible design _will_ limit and cripple your choices severely and
will leave you with lesser options than what you had in the TABLE/FONT-based
layouts of the past.
So are (a minute subset of) its errors. Know your limits at
There we go again, limiting ourselfes to use a tiny subset of what is
available to cater for one deprecated browser - and even that subset will
have to be divided into several stylesheets, as NS4 _does_ have severe
errors with it and need workarounds or limitations imposed to even work at
all, without crashing.
Please define "more advanced formatting".
In my case, I use no tables for my layouts as tables are indeed intended for
tabular data. Instead, CSS positioning and floating through reuseable
classes take their place, sometimes nesting themselves in an equal depth as
tables would but nonetheless being managed centrally. Putting this in a
second stylesheet that NS4 would not get would do the exact opposite of what
you're aiming for, since it would remove any and all layout from NS4 and
leave it with plain basic text formatting. That does not exactly sound like
a design that works in NS4.
What you think of as "more advanced formatting" is in my humble opinion the
crude and bare minimum support for basic formatting using standards.
Netscape 4 will not be able to handle this.
Netscape 4 is the only browser on the planet that you will leave behind if
you go for a standards XHTML/CSS-based layout. It has been a dying browser
for years now and several of its own generations have surpassed it. Let it
die peacefully instead of wasting your hardearned money.
From a business perspective, there is no reason to use 50% of your
ressources on an everdiminishing 5% of your users. If your client wants you
to do double the work, I hope you are billing him for double the money.
Going back to real life, it's not even 5% globally, but 3%, and looking
locally you will find huge variations - as an example, Denmark has less than
1% Netscape users - in total, with all versions combined.
For the ontopicness of the list, standards evangelism, we should really urge
Mike to go for the XHTML/CSS design - even if that means NS4 users will get
no layout but only basic text formatting. After all, it can hardly cope with
anything more advanced.
Thor Larholm
URL: http://www.jibbering.com/faq/ FAQ for comp.lang.javascript
URL: http://jscript.dk/unpatched/ Unpatched IE vulnerabilities
We are in complete agreement on those points ;)
I think this is where I got off on the wrong foot on the interpretation with
Austin. In my opinion (and personal as well as professional situation), we
have moved beyond HTML4 and into XHTML + CSS. The only browser we had to
leave behind was Netscape 4, and considering that Denmark has less than 1%
Netscape users (combined), that was hardly a difficult choice.
Of course HTML 4 Transitional is still a valid standard, and if Mike wants
Netscape 4 support he will most likely have to settle for it. I just hope he
is now aware of the limitations and degredations that he willingly impose on
himself through that decision.
Thor Larholm
URL: http://www.jibbering.com/faq/ FAQ for comp.lang.javascript
URL: http://jscript.dk/unpatched/ Unpatched IE vulnerabilities
Any design with a TABLE-less layout. I think our disagreement arose from
what we consider viably usable standards in todays world, see my reply to
Marek for more on that.
Thor Larholm
URL: http://www.jibbering.com/faq/ FAQ for comp.lang.javascript
URL: http://jscript.dk/unpatched/ Unpatched IE vulnerabilities
Thor, I think you ferreted the disagreement out quite admirably. When you
say standards you mean no tables for layout. When I say standards I mean
simple tables for layout.
I agree that in an ideal world, we would only use tables for data, but
tables are a perfectly acceptable part of the XHTML 1.0 specification. You
can create NS4 compatible websites using XHTML 1.0 and CSS, without
sacrificing your visual design.
But these limitations easily cover everything you could do with a font tag.
The font name (verdana, arial, times), the font size, the color of the
text, and bold or italic or both.
CSS positioning and line-height are two that come to mind. Advanced in the
sense that they're not reliably supported in NS4. As a side-note,
line-height isn't *that* important. And the positioning can be handled by
tables. Other formatting like borders, like line-height, are also not that
important and degrade perfectly (to nothin, which isn't so bad).
From a business perspective, there is no reason to use 50% of your
Simple tables with CSS formatting help avoid the above statistics.
Austin
Hello Thor,
Short and simple: ifyou want Netscape 4.X support, you do not want
standards. The Hacks'R'Us department is somewhere else.
I apologize if that sounds crude, but welcome to the real world. Either
you want standards (with a small degree of customizations) or you do
not want standards and you can keep on using
TABLE/FONT/IMG-spacer-based layouts.
Give up Netscape 4 or give up standards.
And what must I give up now Netscape 4 or the XHTML 1.1 standard
when you look this page even coded without tables for layout?
amma/inhoud/
When you look the CSS you can see the image also float in Netscape 4.7
Greetings
Ineke van der Maat
Web Standards embrace:
HTML 4.01 Transitional Document
HTML 4.01 Strict Document
HTML 4.01 Frameset
XHTML 1.0 Transitional Document
XHTML 1.0 Strict Document
XHTML 1.0 Frameset
XHTML 1.1 Document
Anything that is valid in any of these markup varieties is valid and standard compliant.
And from http://www.w3.org/TR/REC-html40/struct/tables.html#h-11.1
?Tables should not be used purely as a means to layout document content as this may present problems when rendering to non-visual media. Additionally, when used with graphics, these tables may force users to scroll horizontally to view a table designed on a system with a larger display. To minimize these problems, authors should use style sheets to control layout rather than tables.?
Should, not must.
So layouts containing tables are valid if they pass the W3C validity tests. They may not be futureproof and have problems with browsers or other client devices, but what we?re talking here is W3C validity and not WAI accessibility.
But I?m looking to use table and frameless layouts ? and I?ll cater as best I can for NS4, but put a warning on my pages (in plain text) to this effect. But it is for me and for others a learning curve. Until the only languages in use are XHTML 1.1 and higher, then we have to embrace the standards we?re all so hot on, even if we think some of them are not disappearing as quickly as we like.
Regards
John
I wanted to ask the group about this. What version of (X)HTML should a
competent web designer use this days? Assuming that his/her design would
work in all versions.
I've been reading a lot about XHTML and liking it, but is any compatibility
sacrificed if I leave HTML behind and go straight to XHTML 1.1 for all my
work? Will Netscape 4 survive this, thanks to the transitional
backwards-compatibility of XHTML? Or is it safer, at this junction, to
still use HTML 4.0.1?
I've being doing this gig since the early nineties, so I'm used to waiting
(and waiting...) for good technology to be adopted across all pertinent
browsers. Is the time right for universal use of XHTML? Or are there
still caveats?
Wondering...
-Joseph
I've never had problems with using XHTML for web-authoring. I would
stay away from XHTML 1.1 right now since it cannot technically be served
as text/html. XHTML 1.0 Strict is essentially the same thing and if the
rules are followed, it can be served as text/html.
Brant Langer Gurganus
Editor, Open Directory Project
Default QA Contact, Mozilla Evangelism
Technician, Protonic.com
Webmaster, troop545.cjb.net
Webmaster, www.firecrafter.org
Webmaster, www.msdpt.k12.in.us/etspages/ph
Junior Assistant Scoutmaster, Troop 545
Eagle Scout, Boy Scouts of America
Member, Internet Society
Hallo Briant
served
the
that also XHTML 1.0 strict should be served as 'application/xhtml+xml'
greetings
Ineke van der Maat
Hallo Briant
served
the
that also XHTML 1.0 strict should be served as 'application/xhtml+xml'
greetings
Ineke van der Maat
You're missing an important point in the note. The note clearly states
that if the HTML Compatibility Guidelines of the XHTML 1.0 spec are met,
then XHTML 1.0 may be served as text/html:
It only later says that if you are serving XHTML 1.0 to "XHTML user
agents", then it should be served as applicatoin/xhtml+xml:
Clearly the vast majority of user agents out there being catered to are not
XHTML ones. They're HTML ones.
Bill Mason
Accessible Internet
w3c@accessibleinter.net
Hello Bill,
states
met,
No I was not something missing, but I made the difference between XHTML
1.0 strict and XHTML 1.0 transitional/frames
I wrote only about XHTML 1.0 strict, as in this specs e.g in the img
element vspace and hspace are not allowed.
In XHTML 1.0 transitional these vspace and hspace attributes are
allowed as in HTML.
I also should serve for that reason XHTML 1.0 transitional as text/html
but not XHTML 1.0 strict.
As you know is XHTML 1.0 not existing ( XHTML 1.0 has 3 DTDs: strict,
frames and transitional), while only XHTML 1.1 exists. The text in the
note is something confusing I think (it speaks only about XHTML 1.0 as
you do) .
That makes the difference in my eyes. XHTML 1.0 strict is not
totally compatible with HTML as XHTML 1.0 transitional is.
The differences between XHTML 1.0 strict and XHTML 1.1 are very little.
Only the lang attribute has been removed from all elements (is replaced
by xml:lang) and the name attribute is replaced in some elements as in
a by only id.
Greetings
Ineke
vspace and hspace were not allowed in HTML 4.0 Strict either, only in HTML 4.0
Transitional.
That certain old elements or attributes from HTML 4.0 are not included in XHTML 1.0
Strict is irrelevant; a valid XHTML 1.0 Strict document can still be compatible with HTML
4.0.
If the note says "XHTML 1.0", it obviously refers to all three variants.
XHTML 1.0 Strict is not, but an XHTML 1.0 Strict _document_ can be.
And that is what makes XHTML 1.1 incompatible with HTML 4.0. For certain functionality,
such as named anchors, you must add the name attribute to be HTML 4 compatible. You could
do that in XHTML 1.0 Strict, but not in XHTML 1.1.
/Jonas
Quoting Joseph McLean joseph@secondflux.com :
Hello,
Using XHTML don't guarantee me being a competent designer, but personally I've
been using XHTML 1.1 DTD[1] for some time. There has been no problems with older
browsers, excluding thead-tfoot-tbody -structure. Last weekend I had to make
one compromise using "border" attribute for an anchored image to prevent it
being bordered with NN4.x. As we know, CSS's border property don't render
properly in NN4.x
When one should re-write a HTML 4.01 -document straight to valid XHTML, there
may appear some problems. For instance, CSS is treated partly differently[2]
with XHTML DTD, and "converting" element's attributes to CSS can also bring
problems.
If people keep waiting and asking "Has the time come for ...", nothing actually
evolves. Start using XHTML when you think it'd be appropriate - not when someone
tells you to do so.
Best Regards,
Samuli Hakoniemi
[1] http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd
[2] Eg., overflow property acts differently in BODY and TEXTAREA elements
depending on DTD.
Mike.Steckel@SEMATECH.Org ; public-evangelist@w3.org ;
the
it"?
If these designs were possible to do in Netscape 4 using a standards-based
approach, then I doubt we would be having this particular discussion. :-)
From a business point of view I don't think this argument stands up. How can
alienating a portion of your audience and its spending power be alleviated
by following a standards-based approach?
The perception with a standards-based approach is that Netscape 4 users will
see a dull grey screen, while Internet Explorer 5 will see the perfect
layout (as long as the box-model isn't relied on). But at the moment, their
mainstream website looks very similar in Netscape 4 and Internet Explorer 5,
and people with Netscape 4 are buying/investing in their site. From this
point of view, standards will prevent the business operating with their
Netscape 4 audience.
How can standards be more important when you're alienating a portion of your
target audience - isn't that discrimination? How can we offer the chance of
full accessibility, but at the same time discriminate against others?
Its not the value of standards I'm arguing against here, it is the way it is
being presented. If there isn't a feasible "upgrade" path offered from where
websites are now (tables based Netscape 4 friendly tag soup), and where we
want them to be (valid XHTML1.0 &amp; CSS), you have no hope of attracting any
serious interest in producing mainstream standards-compliant websites.
Revenue or standards?
A business will go for revenue every single time while the standards are not
a mandatory requirement.
[Treating NN4 as a text-browser]
If this approach is a non-starter for your people, then I'd say you have
a very difficult and, more importantly, very expensive project on your
hands because virtually everything will have to be done twice, the Bv4
(BeforeVersion4) and the Av6 (Version 6 and beyond.)
This argument that developing websites that work in Netscape 4 results in
double development time is a straw-man argument. It automatically assumes
that there is duplication involved in the entire workstream of the website
creation process.
We all know how important it is to separate content from presentation, and
Netscape 4 friendliness is no exception. The only duplicate work items are
the initial creation of templates, and the testing of those templates. The
content should always be separate from the presentation, so this would be a
non-duplicated process.
On delivery, either deliver a dynamic website that delivers full compliant
markup to all user agents except those identifying themselves as Netscape 4,
or run it through an html preprocessor and generate two websites.
The duplication is only imaginary, thus the "very expensive project"
argument equally illusory.
This is all highly over generalized, including my post, and doesn't lend
itself to anything other than highly overgeneralized discussion.
However, the fact that the problem is defined and solved in terms of NS4
AND everyone else (which ignores the differences/quirks among the
various versions of Internet Explorer, for example) means that every
step of the process will have to contain cycles recognizing, checking
and resolving for the "AND" of the relationship. If you are working as
an individual, in a putative vacuum, and not in a large, contentious and
complex organizational and project environment, the overhead will be
minimal; otherwise it will be substantial. There will be costs that will
not involve you and your templating activities.
This is good theory and a great goal to pursue. As you know, what one
confronts, however, is perception of what is on the screen by the people
who are signing the cheque -- "I know what I like and this ain't it."
One can try to be as smart as possible about the initial setup; but,
there will be tremendous, irresistable pressure in the course of the
work that will tend to erode the theory and complexify the product.
Hence, more cycles and more cost, howbeit largely downstream and, for
the moment, hidden.
And the html preprocessor comes from where? At what cost?
These are the kinds of cost "externalities" that are conveniently
forgotten, much like the costs of cleaning up after automobiles or
nuclear power plants. And, if considered properly, these costs radically
change the cost-benefit scenarios of most, if not all, Web development
projects.
All of this has to be seen from a management and operational
perspective, in addition to a designer, coder perspective, in order to
have the proper view.
All I'm suggesting is that web development and operation is a very
expensive proposition, too expensive; the mulitplicity of browsers and
their glitches is one of the major factors in inflating the cost. There
are others. Any cost conscious business contemplating getting into or
upgrading a website deserves to be given the opportunity of looking at
the (total and accurate) incremental costs of supporting each of the
alternatives. Evloving to higher or more advanced levels of
standardization offers the potential for decreasing the number of costly
alternatives to something greater than one, which I think many people
think is a good idea.
The marginal cost to a user of upgrading a browser, particularly if
encouraged and assisted in helpful and efficent ways, is trivial in
comparison to the aggregate costs to the industry or to a large
organization. The fact that browser technologies have been historically
"free" is probably the biggest externality we confront. Browsers are
also the software application about which people know the least in terms
of opperation.
Why don't we talk about how to most positively, expeditiously and
synergistically move users away from NS4 rather than gritching and
snitching about how to accommodate something we all agree (I hope) is a
pain to work with and just plain bad technology? I'd like to suggest
this thread move on to a more "evangelical" topics.
...edN
