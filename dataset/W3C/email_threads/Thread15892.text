I would like to know how to present mathematical formulas
on web pages so they make sense when read by a screen reader.
Does anyone know of any tools that will generate this type of
verbal description of a formula given the formula written in a
simple syntax.
I would also like to know how to best present a formula in ascii
so that it makes sense to someone using a Braille display.
I am familiar with the MathML work - but it will no doubt be a year
or two before web browsers and screen readers do anything meaningful
with it.
Thanks,
Roger Steffen
There is of course T.V. Ramans extraordinary work on rendering math
which you probably know about already from the MathML subculture. His
system requires more than the usual screen reader, but his work may
offer you some useful insights.
His home page is at
Len
to follow up on what roger john steffen said:
Have you reviewed Nemeth code and related Braille dialects for
Math?
Have you looked into what Raman has done re: speech? e.g.
T. V. Raman
Brian Hayes: Speaking Of Mathematics
After you shop around I'm not sure you will find a lower-risk
approach than working with MathML.
Al Gilman
I've also got a Modest Proposal on extensible semantic math markup at
uses SGML and DSSSL, but should be applicable to XML and XSL.
-Chris
!ENTITY crism PUBLIC "-//O'Reilly//NONSGML Christopher R. Maden//EN"
URL http://www.oreilly.com/people/staff/crism/ TEL +1.617.499.7487
I have a more specific question related to math:
How do screen readers read the SUP and SUB elements in current
technology?
E.g., does x SUP 2 /SUP is read: "x superscript 2", which is reasonable
or "x two" (which is quite bad) ?
Nir Dagan
Using todays screenreaders you'd be lucky if you could even
Best Regards,
--raman
as representative of my employer, Adobe Systems Inc.
I think there is a need for the following:
1. An evaluation of MATHML to determine whether it provides the necessary
semantic content to enable a reliable audio rendering to be produced.
Modifications, if necessary, could presumably be discussed with the
relevant groups within W3C.
2. The development of software that would accept MATHML as input and
produce spoken output. T.V. Raman's Aster is the only working example of
such an application so far as I am aware, and it is very impressive
(unfortunately I have never had the opportunity to use the software, but I
have heard an audio tape of the results).
3. Cooperation with developers of braille software, including the Maths
project within the TIDE programme, that will lead to the construction of
software for converting MATHML content into braille. Raised Dot Computing
and Duxbury Systems, both in the U.S., have recently incorporated support
for the North American braille mathematics code into their products. The
Maths project supports the British and German codes.
4. The development of a scheme for embedding XML content in HTML
documents, so that the mathematics can be fully integrated into the text,
while retaining the necessary semantic value.
5. Implementation by authoring tools and browsers of MathML and the XML
embedding scheme as mentioned above.
Concretely, this would involve cooperation between the PF, UI and tool
development activities of the WAI, as well as relevant groups within W3C.
The TIDE programme's Maths project, as already mentioned, is relevant,
I understand that the TIDE Maths project has also been considering SGML as
an input format, but O do not know who is involved in this work.
Amaya, W3C browser/editor, already supports a subset of MATHML.
(http://www.w3.org/Amaya)
[pieces snipped]
CMcCN::
As I read it, the OBJECT tag introduced in HTML 4.0 would allow MATHML or
XML to be inserted into a document. Then all that is required is an
interpreter, either as a feature of a browser or as a plug-in.
Charles McCathieNevile
Sunrise Research Laboratory
RMIT University
It's not that simple, but let's not start a thread on these two.
W3C just held a 2-day meeting in the Bay Area just about that:
inclusion of XML in HTML.
The results of that meeting will get to us in due time (and several
WAI participants were there, like Raman or Murray Maloney).
For those of you who have W3C Member site access:
In lynx2.7.1, your bit of code is read as x2 which is somewhat heartening
I guess.
Hands-On-Technolog(eye)s
touching the internet
voice: 1-(301) 949-7599
poehlman@clark.net
ftp://ftp.clark.net/pub/poehlman
I extracted the bit of example code below and found that it read as x2 in
lynx 2.7.1.
Hands-On-Technolog(eye)s
touching the internet
voice: 1-(301) 949-7599
poehlman@clark.net
ftp://ftp.clark.net/pub/poehlman
MathML has everything you need to do good audio
renderings. I've been part of the MathML working group since
its inception
and was an active participant in the initial design phase--
and have been a passive observer since to make sure that the
representation was adequate for producing multiple
presentations.
--Raman
(Note to W3C Math WG:
this is a response to a message on one of the WAI (Web
Access Initiative lists).
I've added the math wg list to the bcc so you see a copy but
dont get flooded by the cross posting traffic on the WAI
lists.
I think there is a need for the following:
1. An evaluation of MATHML to determine whether it provides the necessary
semantic content to enable a reliable audio rendering to be produced.
Modifications, if necessary, could presumably be discussed with the
relevant groups within W3C.
2. The development of software that would accept MATHML as input and
produce spoken output. T.V. Raman's Aster is the only working example of
such an application so far as I am aware, and it is very impressive
(unfortunately I have never had the opportunity to use the software, but I
have heard an audio tape of the results).
3. Cooperation with developers of braille software, including the Maths
project within the TIDE programme, that will lead to the construction of
software for converting MATHML content into braille. Raised Dot Computing
and Duxbury Systems, both in the U.S., have recently incorporated support
for the North American braille mathematics code into their products. The
Maths project supports the British and German codes.
4. The development of a scheme for embedding XML content in HTML
documents, so that the mathematics can be fully integrated into the text,
while retaining the necessary semantic value.
5. Implementation by authoring tools and browsers of MathML and the XML
embedding scheme as mentioned above.
Concretely, this would involve cooperation between the PF, UI and tool
development activities of the WAI, as well as relevant groups within W3C.
The TIDE programme's Maths project, as already mentioned, is relevant,
I understand that the TIDE Maths project has also been considering SGML as
an input format, but O do not know who is involved in this work.
Best Regards,
--raman
as representative of my employer, Adobe Systems Inc.
[T. V. Raman]
MathML has everything you need to do good audio renderings. I've
been part of the MathML working group since its inception and was an
active participant in the initial design phase--and have been a
passive observer since to make sure that the representation was
adequate for producing multiple presentations.
While I appreciate the effort that's gone into MathML, I think a
static math document type is a mistake. Moreover, MathML is
schizophrenic about whether it wants to be presentational or
semantic.
MathML's presentational markup can be accessible by voice or touch,
but with a certain amount of ambiguity. You know that something is
superscripted, or that numbers are positioned one over the other, but
you don't know if the superscript is an exponent or an isotope, or if
the \over is a division or a combinatorial. (Justify mphantom from
an accessibility point of view.)
On the other hand, any static semantic DTD will be ignored by the
scientific and mathematical communities, because new notation is often
introduced to express new ideas. Moreover, MathML's semantic elements
are infix operators - Knuth thought the \over infix was a bad idea
twenty years ago, and only justified it by technological limitations
that no longer hold.
A better idea, IMO, is to promulgate a markup *methodology* instead of
a DTD, whereby expressions and elements are homologous, and
presentation is in the stylesheet where it belongs. My markup method
is similar to MathML's semantic apply and relation elements, but
attempting to enumerate all applications and relations is doomed.
Instead, authors can choose appropriate element type names; even
without a stylesheet, the markup is readable, and the author can
provide a stylesheet that allows for whatever new markup he wishes to
introduce.
As an example, here are Maxwell's equations, in presentational MathML,
semantic MathML, and my own proposal
( URL:http://www.oreilly.com/people/staff/crism/math/ ):
!-- This is impure, as semantic MathML is lacking vector functions
for the inner or dot product, cross product, divergence, and
curl. It also appears to lack a simple negation, in the
negative-number (as apposed to functional inverse) sense. --
mo &amp;middot; /mo?
partial-differential !-- partial-differential is of the first
child with respect to the second --
exponent !-- exponent is first child to the power of the
second --
lynx had fun with this see below.
&amp;nabla; ? E = &amp;rho; &amp;epsilon; 0 &amp;nabla; ? E = - &amp;part; &amp;ApplyFunction;
B &amp;part; &amp;ApplyFunction; t c 2 &amp;InvisibleTimes; &amp;nabla; ? B = &amp;part;
&amp;ApplyFunction; E &amp;part; &amp;ApplyFunction; t + j &amp;epsilon; 0 &amp;nabla; ? B
= 0 &amp;nabla; ?E rho ep 0 &amp;nabla; ? E 0 B t c 2 &amp;nabla; ? B E t j ep 0
&amp;nabla; ? B 0 E &amp;rho; &amp;epsilon; 0 E B t c 2 B E t j &amp;epsilon; 0 B 0
MathML has everything you need to do good audio renderings. I've
been part of the MathML working group since its inception and was an
active participant in the initial design phase--and have been a
passive observer since to make sure that the representation was
adequate for producing multiple presentations.
Hands-On-Technolog(eye)s
touching the internet
voice: 1-(301) 949-7599
poehlman@clark.net
ftp://ftp.clark.net/pub/poehlman
