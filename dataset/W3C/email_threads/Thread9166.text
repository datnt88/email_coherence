I think/hack that both anonymous *terms* can be *unified*
which is NOT the same as equality
Then your hack only seems to works when we can unify anonymous
terms, or they have some sort of UniqueProperty attached. How do
we solve the general case?
There was some related discussion in the telecon
this afternoon, and I was kind of unable to explain
my point...(I'm really hopeless in that respect)
The thing about anonymous nodes is that they
are ***variables***
if they would be constants, we would be able
to identify them with ***URI constants***
Now they are actually existentially quantified
variables, something like: there exists an _:a
or (using existing vocab): this log:forSome _:a
So I think we should say that *explicitly*
is the testresults (and in the model theory)
(the general case?)
Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/
Hi Brian,
Great, I really find this interesting too!
I think there are 3 kinds of variables
[1] free variables
[2] existentially quantified variables
[3] universally quantified variables
and I think the misunderstanding is that
anonymous resources are (sometimes)
'treated' as [1] whereas I think they
should always be treated as [2].
If somebody writes the following .nt
_:a uriref1 uriref2 .
and says that this is a statement, then
(s)he is basically talking a free variable
(somewhere floating around in triple space)
I think this is wrong because there is no
quantification: the floating thing should
be existentially quantified and I think
the best way to do that is to *point*
to it. That can be simply done with
a statement *using* that term e.g.
uriref3 uriref4 _:a.
or it can be done with
scope-uri the-log-forSome-uri _:a.
I have recently experimented with
implicit scoping, but I think this is
not a scalable approach.
If we have terms existentially quantified,
then I think that a lot can be done with
such terms, but that's another topic...
Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/
Brian McBride bwm@hplb.hpl.hp.com on 06/15/2001 07:46:30 PM
Subject: Re: log:forSome (Was: Model-specific identity for anon resources, and
its representation: A new issue?
Hi Jos,
With regard to the recent discussion with Jan, I think there might be
some miscommunication. What I think than Jan is saying is that, given
the model:
http://descr1 http:/prop _:anon .
http://descr2 http:/prop _:anon .
it is not possible to express this exactly in the RDF/XML syntax.
The reason is that the only way this can be done is to assign an ID
or a URI to the anonymous resource. That 'resource' then ceases to
be anonymous. In effect, it is no longer a variable. Try
translating the above n-triple example to RDF/XML and you will see
what I mean.
Reading your message again, maybe I get an inkling of what you are
saying. We are talking here about what is an anonymous resource.
We have been saying that it is an existentially qualified variable.
I have been understanding that to mean that it denotes some specific
resource with certain properties, i.e.
_:anon rdf:type rdf:Class .
says there is some specific resource, _:anon, which has type class.
Is that what you would call a 'constant'? Ah. This is beginning
to make sense to me. If it were a constant, then you wouldn't
mind at all that a URI had been assigned to it. That would not
change its nature.
I think you may be saying that what I thought of as a variable
is not really a variable. It does not bind to multiple values.
Instead it represents a single value (constant) though I don't
know what the value is. Hmmm. Now consider:
5+x=1
Is x a variable? No. Its an unknown, until I solve the equation.
Have we been calling anon resources variables, when we should have
called them unknowns?
If what I previously thought of as a variable, is not really a
variable, how would you explain what a variable is, without
having to refer to concepts defined in a logic layer above
rdfcore?
This is really very interesting.
Have a good weekend.
Brian
I think/hack that both anonymous *terms* can be *unified*
which is NOT the same as equality
Then your hack only seems to works when we can unify anonymous
terms, or they have some sort of UniqueProperty attached. How do
we solve the general case?
Hi Jos,
So just to help me a little along the path to understanding,
could you explain a bit more about what you mean by a free
variable. Some examples that I can relate to would be good.
For example is the x in 5x+1=6 a free variable? Thats what
I was calling an unknown. Wheras the x in x+y=0 is a
variable. At least that's the distinction I thought you
were making.
Can you give examples of the difference?
Not being sure about what you mean by a 'free variable' I don't
understand that. I would have said _:a is an unknown. The difference
between a free variable and an unknown is that a free variable
may be bound to many things, an unknown can bind to just one.
Doesn't existential quantification turn a free variable into
an unkown? That's why skolemization works - we can give an
existentially qualified variable a name (assuming for the
moment we are not in the scope of a universal quanitifer,
because we don't have any of those in rdf).
Now if that were true, then you and I have the same model
for what what is going on here. _:a is both an existentially
qualified variable and an 'unknown' because they are the
same thing (in this context - because we have no universal
quantification)
So if that is the case, then what's the problem here?
Maybe the problem is that you are of the view that it does no
hard to assign a name to an anonymous resource. That's just
skolemization. You might then argue, with Sergey, that there
is no need to represent anonymous resources in the model. And
Jan's problem that RDF/XML cannot represent an arbritary model
is not a problem.
By the way I've changed the title from log:forSome. This may
be another misunderstanding on my part, but I'm talking about
anon resources as they would be defined in the lowest layers
of the rdf model. At that layer log:forSome is not defined
so we can't use it here.
If you are taling about a logic language layered on top of the
core, that could explain a lot.
Now you have lost me.
What is a term? RDF doesn't define such a concept.
Brian
Jos, Brian--
Just to put my 2 cents in:
I think Jos is doing an implicit translation into logic. Strictly
speaking, I don't think we have variables of any kind in RDF, but if you
translate RDF into [what I think of as] the equivalent logic, some
variables appear. It may help to go back to the M&amp;S example of
anonymous resources, namely:
"The individual whose name is Ora Lassila, email lassila@w3.org , is
the creator of http://www.w3.org/Home/Lassila."
If you look at the equivalent graph in the M&amp;S, there isn't any
"variable" to represent that "individual"; there's just a resource
without an identifier (if anything is "unknown", it's the *identifier*
of the resource; but there is a distinct resource you're talking about,
not an unknown). However, if you wrote this in logic, you'd say
something roughly like
"There exists a [resource] x such that name(x, Ora Lassila) and email(x,
lassila@w3.org) and creator(http://www.w3.org/Home/Lassila, x)"
Here, the resource is represented by an existentially quantified
variable x. Skolemization essentially says (ignoring scope issues that
don't come up in this example) you can give the thing referred to by the
existentially quantified variable a distinct name, use that name, and
delete the quantifier. So if I give that resource a URI (or a gensym),
or it already has one, I've essentially Skolemized it. In both cases,
though, we're not talking about an "unknown" in the sense of an
equation: the resource isn't unknown (I'm asserting one exists; it's
this one right here), even though its identifier may be.
A more faithful representation of the situation we have in RDF might be
to say that there is a "built-in" predicate "URI" that we can use to
specify the URI of those resources that have them. Then, the above
expression represents the version where the resource is anonymous, and
the next example in the M&amp;S where the resource is given a URI would be:
"There exists a [resource] x such that name(x, Ora Lassila) and email(x,
lassila@w3.org) and creator(http://www.w3.org/Home/Lassila, x) and
URI(x, http://www.w3.org/staffid/85740)
which simply adds the additional piece of information.
What I've just said is based on the interpretation of RDF as making
statements in an EC logic; but any quantification is *implicit* (so is
the conjunction). I think that's the only sense in which we have
quantification in RDF. We don't have *explicit* existential
quantification (Sergey noted, and I agree, that this would be out of
scope), and we don't have universal quantification in any form.
We also don't have free variables (also out of scope, IMO). This isn't
the same as a resource with an unknown identifier; since we don't have
*explicit* variables in RDF, we'd need to invent a special notation for
them. We'd also need to define an interpretation for them, an obvious
one being as a placeholder in a query expression. E.g., if someone
wrote just
"name(x, Ora Lassila) and email(x, lassila@w3.org) and
creator(http://www.w3.org/Home/Lassila, x)"
this could be interpreted as "return any bindings for x such that these
assertions were in the fact base" (as it would, say, in Prolog). Note,
though, that x might be bound to one thing, a whole collection of
things, or nothing.
--Frank
Frank Manola The MITRE Corporation
202 Burlington Road, MS A345 Bedford, MA 01730-1420
And 2 centimes from me...
The sense of the Skolemization of the `unknown' resource is surely that
is is given an identification which is in the `global' scope. The space
in which it is said to exist (in the normal understanding of Ora's
example) is the entire web. The `unknown resource' isn't a free variable
in any sense. It is existentially quantified by the RDF segment but to
Skolemize it you have to give it a global identification. Thus one
imagines it has a real but unknown URI only because of one's intuitive
understanding of the need to remove the existential quantification. It
begs the question of how you would form this unknown URI.
The essence of the Skolemization (do I have to type that word again?) is
that the identifier be `new', which is what URIs do for yer every time.
Not particularly clear, I guess: I'm trying to express the natural
feeling that a `definition by properties' gives an anonynous resource a
claim to a global identification. This may be the intuitive reading of
the Skolemization process in the web scope.
Martyn Horner martyn.horner@profium.com
Profium (former name Pro Solutions), Les Espaces de Sophia,
Immeuble Delta, B.P. 037, F-06901 Sophia-Antipolis, France
Mob. +33 (0)6.21.01.54.56
Internet: http://www.profium.com
