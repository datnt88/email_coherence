I was going to reply in detail to Ken Holman's note, and the note from Lee
that inspired it, and Ron Daniels' notes that have started this thread, but
instead I think I should summarize, rather than doing a blow-by-blow.
Ron has laid out some strategies for FPI resolution. Note that URNs will
have _at least_ several alternative resolution mechnisms (probably
including some kind of local filesystem access). Ron is asking about
appropriate mechnisms for resolving FPIs within the URN framework. This is
great: certainly some variation of catalogs should be useful in the FPI
subset of the URN space.
Note that URNs (of any sort) do not inherently require the use of DNS or
any particular machines, though NAPTR defines a resolution mechanism based
on DNS. Eventually, for some documents, I expect that libraries will get
into the act, or some groups filling the social function of library
catalogs if they don't fill that niche.
I think, given that the URN group is willing to figure out how to
integrate FPI into URN resolution, that we should encourage and help them
on that (but not worry about specifying or discussing those mechanisms
here, as it's not the right place).
The XML standard should specify the option to have a PUBLIC string,
expain that it is unique, persistent, etc., and how to get a GCA or ISBN
publisher prefix. It should point out that resolution is application
dependent, but that applications are suggested to use catalogs (We might
make a simplified catalog format the does not bother with remapping SYSTEM,
network resolution, etc, if that makes for 1000's of lines of code), or the
Internet's URN mechanisms for FPIs (this latter is being worked by the URN
group, and need not be further specified). We also need to note that other
resolution mechanisms are also acceptable.
That gives an implementor two things to implement if they desire, and a
browser (or other simple parser) can simply use system IDs, and treat the
FPI as documentation when reporting the failure, if it does not ignore the
FPI completely.
FPIs can _only_, in principle, guarantee that something has a unique
name, not that you can find the thing. (But, of course, having a unique
name can be of use in finding things).
-- David
I am not a number. I am an undefined character.
David Durand dgd@cs.bu.edu \ david@dynamicDiagrams.com
Boston University Computer Science \ Sr. Analyst
--------------------------------------------\ http://dynamicDiagrams.com/
MAPA: mapping for the WWW \__________________________
David G. Durand said:
please.
discussion on this topic so far has told me that SGML Open Catalogs provide
a solution, of sorts, for now. A better solution to this problem could
benefit SGML in general, as well as XML. It might thus be better treated as
a independent project.
-derek
"that which is not slightly distorted lacks sensible appeal: from which it
follows that irregularity - that is to say, the unexpected, surprise, and
astonishment,
are an essential part and characteristic of beauty" - Charles Baudelaire
I think you are missing David's point. He is explicitly not looking for a
solution. He is looking for the flexibility to implement his own solutions.
If SGML Open Catalogs happen to be the solution that is useful to many
people, then maybe it could be mentioned in the standard, or even required
(as a default solution, not as a "universal solution").
I think that we all agree that we aren't going to solve the global naming
"problem" here.
As David says,
"given that the URN group is willing to figure out how to
integrate FPI into URN resolution, that we should encourage and help them
on that (but not worry about specifying or discussing those mechanisms
here, as it's not the right place)."
All I am asking is that I not be tied to a "solution, of sorts, for now."
Paul Prescod
I think this is a very reasonable proposal.
By saying "can simply use system IDs" are you implying that you would
always have a system ID even if you also had a public identifier? I'm not
sure I'd want to require a system ID in all cases.
But of course nothing can guarantee the ability to find a thing in the
general case (i.e., a open system, e.g., the Web).
Cheers,
E.
W. Eliot Kimber (eliot@isogen.com)
Senior SGML Consulting Engineer, Highland Consulting
2200 North Lamar Street, Suite 230, Dallas, Texas 75202
"Rats in the morning, rats in the afternoon...if they don't go away, I'll be
re-educated soon..." --Austin Lounge Lizards, "1984 Blues"
I think that any document that is published on the Web should have system
IDs for all entities. That could be in an SGML Open Catalog if we make SOCAT
handling a mandatory default resolution mechanism, or inline, if we do not.
Lee is right to complain that there must be a URL somewhere, or else we are
just handwaving.
Within an "internal system", where a resolution mechanism is well defined,
URLs may not be useful. I am not sure if there is a clear line between
"published on the web" and used in an "internal system", but perhaps authors
should make that decision. If they want everyone to be able to read their
documents, they must put URLs where the user agents know how to find them:
inline or in some widely-implemented catalog mechanism.
Paul Prescod
or the Internet's URN mechanisms for FPIs.
Seconded
-Debbie Lapeyre
I also agree with this. It's best to have a name and a location than one
only of each...
What about for data content notations? As many notations don't have
publicly accessible definition documents (which is what the external
identifier of a notation is supposed to refer to first and foremost), it's
seems unreasonable to require URLs for them. (If this issue's already been
discussed, let me know--I haven't had time to go back and read all the
traffic since SGML '96.)
We've been discussing entities, levaing NOTATION to the side for the
moment. On NOTATION, I think we need to be careful -- Wherever possible, we
should use MIME-types in harmony with the rest of the net -- whether we
also want to support FPIs on the same optional basis as we should for
documents is an open question. Their real use, it seems to me, would be for
private types, and since we have the x- mime types (though their use is
discouraged officially, I think) we may not even need them for that.
For notation, I don't know that we need FPIs because that SYTEM ID (if a
MIME type) is already globally-unique and persistent, with a well-defined
naming authority: IANA.
I think it would be a compatibility issue, more than anything. My
impression is that public notations are not very common, but I could be
wrong.
-- David
I am not a number. I am an undefined character.
David Durand dgd@cs.bu.edu \ david@dynamicDiagrams.com
Boston University Computer Science \ Sr. Analyst
--------------------------------------------\ http://dynamicDiagrams.com/
MAPA: mapping for the WWW \__________________________
What about for data content notations? As many notations don't have
publicly accessible definition documents (which is what the external
identifier of a notation is supposed to refer to first and foremost), it's
seems unreasonable to require URLs for them. (If this issue's already been
discussed, let me know--I haven't had time to go back and read all the
traffic since SGML '96.)
Cheers,
E.
W. Eliot Kimber (eliot@isogen.com)
Senior SGML Consulting Engineer, Highland Consulting
2200 North Lamar Street, Suite 230, Dallas, Texas 75202
"Rats in the morning, rats in the afternoon...if they don't go away, I'll be
re-educated soon..." --Austin Lounge Lizards, "1984 Blues"
moment. On NOTATION, I think we need to be careful -- Wherever possible, we
should use MIME-types in harmony with the rest of the net
Agreed.
Regards,
Terry Allen Fujitsu Software Corp. tallen@fsc.fujitsu.com
"In going on with these experiments, how many pretty systems do we build,
which we soon find outselves obliged to destroy?" - Benjamin Franklin
A Davenport Group Sponsor: http://www.ora.com/davenport/index.html
