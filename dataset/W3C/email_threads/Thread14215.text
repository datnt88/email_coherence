Hi,
I'm hoping to do a thorough review of this document later this
week (I've had it on my todo list since last June, and now that
the document is in Last Call I guess it's now or never.)
For now, I just have a quick comment on section 2.4, "Lists":
[Checkpoint 5.2] Encode list structure and list items properly.
[Priority 2] The HTML list elements DL, UL, and OL (available in
HTML 3.2 and HTML 4.0) should only be used to create lists, not
for formatting effects such as indentation.
When possible, use ordered (numbered) lists to help navigation.
and the example it gives is:
Example.
Instead of nesting bulleted lists like this:
* writing tools
+ pens
o highlighters
# red
# green
# blue
o ball-point
# green
# purple
# mauve
+ pencils
o soft lead
o #2 lead
* erasers
Use ordered lists (or make sure to put distinguishing
information at the beginning of each list item):
1. writing tools
1. pens
1. highlighters
1. red
2. green
3. blue
2. ball-point
1. green
2. purple
3. mauve
1. pencils
1. soft lead
2. #2 lead
2. erasers
But this doesn't seem like a good example of an ordered list at
all -- the items in these lists don't have a particular order to
them (green, purple, and mauve aren't in that order for any
particular reason.)
I suggest that this example be changed to use list items that
really ought to be ordered. (like giving instructions on how
to do something.)
Gerald Oskoboiny gerald@w3.org +1 617 253 2920
System Administrator http://www.w3.org/People/Gerald/
World Wide Web Consortium (W3C) http://www.w3.org/
Hi Gerald,
Thanks for the comment! Note for the record that
the Techniques document is not in last call, only
the guidelines document [1] is. However, all comments
you have on either are very welcome.
- Ian
[1] http://www.w3.org/TR/1999/WD-WAI-PAGEAUTH-19990226/
Yep, I agree.
Ian Jacobs (jacobs@w3.org)
There is more to this guideline than this exchange reveals. I was shocked
when I first encountered this guideline, because the fact that lists give
the appearance of order to things that are semantically sets is one of my
hot buttons. But there is a reason for it. And it goes beyond just those
cases that are natural OL applications.
Numbering of list items is a navigation aid for someone using a screen
reader, which really treats the document as a sequence of lines. Braille
formatting uses hierarchical numbering of sections and not indenting to
show structure for a similar reason. So the guidelines need to expose this
issue. There is benefit to ordinal marking of lists for navigation for
this group. This is not a pure win-win deal; so the practice has to be
applied with a grain of salt. But there is some motivation to use OL over
UL even when the underlying semantics indicate UL.
On the other hand, this particular example is so dysfunctional that we had
better come up with a better one if we want to pass the laugh test. A long
single-level list would be a better idea.
Al
Proposed technique example to clear this up. (I had to think for a while
before I remembered why it was there too...)
When using lists, if the list is ordered and
the size stated explicitly it will provide extra orientation to many
users, in particular people relying on screen readers, single line
braille displays, and very large magnification screens, even when there
is no inherent ordering in the content. For example:
We use staiontery of 3 types, each of which is divided into several
subcatergories:
1. Paper - 4 type
1. Envelopes
2. Notepaper
3. Letterhead
4. Poster paper
2. Pens - 2 types
1. Blue writing pens
2. whiteboard pens
3. fasteners - 3 types
1. paper clips
2. staples
3. Big lengths of rope.
Provides more clues to navigation and to the implicit structure of the
list than if unordered lists were used.
charles
There is more to this guideline than this exchange reveals. I was shocked
when I first encountered this guideline, because the fact that lists give
the appearance of order to things that are semantically sets is one of my
hot buttons. But there is a reason for it. And it goes beyond just those
cases that are natural OL applications.
Numbering of list items is a navigation aid for someone using a screen
reader, which really treats the document as a sequence of lines. Braille
formatting uses hierarchical numbering of sections and not indenting to
show structure for a similar reason. So the guidelines need to expose this
issue. There is benefit to ordinal marking of lists for navigation for
this group. This is not a pure win-win deal; so the practice has to be
applied with a grain of salt. But there is some motivation to use OL over
UL even when the underlying semantics indicate UL.
On the other hand, this particular example is so dysfunctional that we had
better come up with a better one if we want to pass the laugh test. A long
single-level list would be a better idea.
Al
--Charles McCathieNevile mailto:charles@w3.org
W3C Web Accessibility Initiative http://www.w3.org/WAI
MIT/LCS - 545 Technology sq., Cambridge MA, 02139, USA
I heartily agree. As I pointed out earlier the lists are a bit problematic
The extra list information could be better given by the browser, in which
case it can be turned on and off when needed. And especially with long
lists, we could provide the user context information about the hierarchy
levels and navigation support on different levels when needed, such as with
tables.
Another thing is if you need to refer to some specific list item from the
text. In some cases, we might need numbers to differentiate between the items.
However, the sample list does not do even this very well. If I'm in the
middle of the list below with a small screen how do I know which is item
3.2 and if I make a note of item 2. staples because that is what I
currently see (or hear), how would I know it actually is 3.2 without going
back and fort the list or keeping that in my mind?
1. Paper - 4 type 1. Envelopes 2. Notepaper 3. Letterhead
4. Poster paper2. Pens - 2 types 1. Blue writing pens 2. whiteboard
pens
3. fasteners - 3 types 1. paper clips 2. staples 3. Big lengths of rope.
Maybe the text referencing the list item could give enough context that
there is no need to go back to the list. And if there is a need to check
the context of a list item, links might be used to provide the information.
And sometimes links could be used to provide the information needed.
Marja
[Charles McCathieNevile]
This is exactly the kind of thing I don't like. Technology should
serve people, and not vice versa. The information that there are four
sub items is present in the document, and software should be able to
extract it for those that need it. Requiring all users to see the
redundant information clutters up the page, and requiring all authors
to perform a mechanical task that should be automated will encourage
dismissal of the guidelines as onerous, irrelevant, and in conflict
with good design principles. There is no good reason for this
guideline.
To put it another way: if you need this information, would you rather
require on the world's thousands of Web authors to give it to you,
probably incorrectly and possibly in a different language than your
native one, or your browser, in a way configurable by you and always
right?
-Chris
!ENTITY crism PUBLIC "-//O'Reilly//NONSGML Christopher R. Maden//EN"
URL http://www.oreilly.com/people/staff/crism/ TEL +1.617.499.7487
This is exactly the point Al was raising about the solution being a
problem in itself.
As I understand it, CSS2, and real transformation further down the track,
would allow all this to be done as a client-side option.
In the meantime, this is what is helpful to accessibility - which makes it
priority 3, but nonetheless something which should be included in
guidelines on how to improve accessibility.
I agree that the technology should serve the people. But it doesn't serve
them all, and someone has to be compromised in this instance. So we
explain the options and people have to make their choices, and we wait til
something better comes along.
Charles McCN
[Charles McCathieNevile]
This is exactly the kind of thing I don't like. Technology should
serve people, and not vice versa. The information that there are four
sub items is present in the document, and software should be able to
extract it for those that need it. Requiring all users to see the
redundant information clutters up the page, and requiring all authors
to perform a mechanical task that should be automated will encourage
dismissal of the guidelines as onerous, irrelevant, and in conflict
with good design principles. There is no good reason for this
guideline.
To put it another way: if you need this information, would you rather
require on the world's thousands of Web authors to give it to you,
probably incorrectly and possibly in a different language than your
native one, or your browser, in a way configurable by you and always
right?
-Chris
!ENTITY crism PUBLIC "-//O'Reilly//NONSGML Christopher R. Maden//EN"
URL http://www.oreilly.com/people/staff/crism/ TEL +1.617.499.7487
--Charles McCathieNevile mailto:charles@w3.org
W3C Web Accessibility Initiative http://www.w3.org/WAI
MIT/LCS - 545 Technology sq., Cambridge MA, 02139, USA
Hello,
Here's a proposal:
1) We say something like this:
Non-visual users often "get lost" in lists, especially those with
several layers of embedding and those that do not indicate the
specific level of indentation for each item. Content developers are
encouraged to use UL for unordered lists and OL for ordered lists
(i.e., use markup appropriately). However, until user agents
provide
a means to identify list context clearly (e.g., by supporting the
':before' pseudo-element in CSS2), content developers should
consider including contextual clues in their lists.
2) We talk about a CSS2 solution:
The following CSS2 style sheet shows how to provide compound
numbers
for nested lists created with either UL or OL elements.
Items are numbered as "1", "1.1", "1.1.1", etc.
UL, OL { counter-reset: item }
LI { display: block }
LI:before { content: counters(item, "."); counter-increment:
item }
3) We talk about a CSS1 solution:
Until either CSS2 is widely supported by users agents or user
agents allow users to control rendering of lists through other
means,
authors should consider providing contextual clues in nested
lists. The following CSS1 mechanism shows how to hide the
end of a list when style sheets are turned on, and to reveal
it when style sheets are turned off, when user style sheets
override the hiding mechanism, or when style sheets aren't
supported.
.endoflist { display: none }
LI Paper:
LI Envelopes
LI Notepaper
LI Letterhead
LI Poster paper
LI Pens:
LI Blue writing pens
LI whiteboard pens
LI Fasteners:
LI paper clips
LI staples
LI Big lengths of rope.
/UL span class="endoflist" (End of Office
Supplies) /span
Note: This example does not help the case of wrapping
list items. With some more effort, the author
could put similar markup at the end of each list
item.
Question: Perhaps it's also helpful to use this mechanism
at the beginning of each list to say how
many items are in the list. Any thoughts?
All comments welcome!!
- Ian
Ian Jacobs (jacobs@w3.org)
How much of this is contemplated as being in the Guidelines document vs.
the Techniques document? I am hoping that this belongs in techniques and
hence can be deferred past the Monday/Tuesday meetings.
Al
AG:: note changes in lines flagged X below.
X LI Paper: span class="verboselist" (four flavors) /span
or else
X span class="verboselist" BR (End of Paper) /span
or
X LI class="header,verboselist" (End of paper flavors) /LI
It's all for the Techniques document, so yes it can be deferred.
- Ian
P.S. So you don't like the proposal... grin
Ian Jacobs (jacobs@w3.org)
