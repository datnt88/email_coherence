For some long-running operations, it would be nice if a server could send asynchronous notifications to a client, so the client doesn't have to poll (or refresh periodically) to get progress updates. I'm wondering if something similar to the 100-Continue mechanism could be used for this. Maybe with a new status code like 101-Notification. A client could send an Expect (or Accept or similar) header to indicate willingness to accept notifications. A server could send any number of interim 101-Notification responses, with message-bodies, before sending a final status code. 101s would not be sent until the entire request arrives.
Comments?
-Carl Kugler
You can do this now by sending a single response with a multipart/replace
body. All it costs is keeping a connection open. The more general need is
for notifications that do not require an open connection, but that is a
different story.
Great! Is the current MIME type still "multipart/x-mixed-replace" (i.e., is it
still considered experimental?)? Is multipart/replace widely implemented?
-Carl
"Scott Lawrence" lawrence@agranat.com on 06/17/99 08:21:45 AM
Subject: RE: Asynchronous updates/notifications
You can do this now by sending a single response with a multipart/replace
body. All it costs is keeping a connection open. The more general need is
for notifications that do not require an open connection, but that is a
different story.
Surendra Reddy and I prepared some Internet-Drafts on a possible Event
Notification Protocol, but I think the effort got mired down in trying to
come up with the support for a general workflow protocol. I'm still
interested in a fairly lightweight ENP (TCP/IP-only, request-response only
(not store-and-forward also)), as it would help optimize a project we have
here at work. I don't know when I'll have time to get back to it -- maybe
in the 2nd half of this year.
Mark Leighton Fisher fisherm@tce.com
Thomson Consumer Electronics Indianapolis IN
"Browser Torture Specialist, First Class"
I am working in the Internet Presence and Instant Messages field. As you know,
presence needs asynchonous notifications as well.
We are using a protocol for 2 years now which does:
1) subscriptions from client to server
2) notifications from server to client w/o open connection
3) if 2) is not possible, it uses a Unix-select-like mechanism thru HTTP
with open connection. Notifications travel from server to client while
TCP connections are established from client to sever.
You might have a look into the Internet-Draft: draft-wolf-vpp-01.txt.
Search for NOTIFY and SELECT.
Or: go to http://rr-vs.informatik.uni-ulm.de/rr/ and watch the TCP traffic
between Java applet and server. Everything is encapsulated into HTTP
request-response transactions to be HTTP-proxy compatible. We are very happy
with the select-mechanism. Tell me, if you need more information. I can write
an Internet Draft. Planned this anyway since the HTTP-SELECT experience could
be valuable for others as well.
Klaus H. Wolf Voice: +49 (731) 502 4145
Distributed Systems Dept. Ethernet: 08:00:20:12:2a:01
University of Ulm Cobrow: http://www.cobrow.com/
89069 Ulm, Germany Live: http://www.cobrow.com/pages/people/wolf.html
Posted just before the deadline, here is the Internet-Draft on our
"Experiences with HTTP-SELECT and Asynchronous Updates" through
request-response protocols and firewalls:
BTW: The traffic on the ietf-announce list is amazing. I feel sorry for the
Internet-Drafts Administrator(s) who process all those documents. I suppose
the procedure must be modified soon to keep up with the flood of
Internet-Drafts.
Klaus H. Wolf Voice: +49 (731) 502 4145
Distributed Systems Dept. Ethernet: 08:00:20:12:2a:01
University of Ulm Cobrow: http://www.cobrow.com/
89069 Ulm, Germany Live: http://www.cobrow.com/pages/people/wolf.html
