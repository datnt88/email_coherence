Current Mozilla nightly build will currently fail
every DOM 2 HTML test as written do to a issue with
getElementsByTag name. Unfortunately, I'm on the road
and do not have ready access to all the pertinent
documents, so any statements about what the specs say
are my best recollection.
The tests are written to work with both XHTML and
HTML, so they follow the recommended pratices in the
XHTML 1.0 recommendation of using lower cased tag
named in getElementsByTagName.
The source HTML documents use all upper-case tag names
(the XHTML documents are valid XHTML so they use upper
case tag names).
I believe the spec implies that HTML implementations
of getElementsByTagName should return a list of
elements that have the same tag name or differ only in
case.
Microsoft IE does do this, so if I ask for
getElementsByTagName("a"), I'll also get any A
elements in the document. Mozilla 0.9.8 will not.
Since every NIST test starts by finding a specific
element using getElementsByTagName() and every HTML
tag is in upper case, every case will fail by not
finding the element that it wanted to test.
I believe that the tests are testing legitimate
specified behavior, however failing every test because
of this one flaw overstates the issue.
It would be good to confirm that the DOM spec does
require case-insensitive behavior from
getElementsByTagName and whether the issue can be
fixed in Mozilla in a timely manner.
If not, then it would be best to modify the HTML test
documents to use lower case tag names and to introduce
specific tests that test getElementsByTagNames() case-insensitivity.
Do You Yahoo!?
Send FREE Valentine eCards with Yahoo! Greetings!
Shouldn't that be lower case?
Mozilla is correct (for XHTML) since 'a' and 'A' is not the same
element; 'xhtml:A' does not exist.
Mozilla behaves correctly. See [1] section 4.2.
[1] http://www.w3.org/TR/xhtml1/#diffs
Kindest regards,
Manos
From: Manos Batsis
Maybe not, [1] says "element type names exposed through a property are
in uppercase", but what really confuses me is [2].
Before reading the above, I was naive enough to think that a doctype
declaration would be enough to define DOM behaviour....
If I understand correctly you are talking about HTML, not XHTML. So I
guess [1] is correct in this case.
[1]
D-822762427
[2]
D-5DFED1F0
Kindest regards,
Manos
From: Manos Batsis
You forgot:
For DOM Level 1 [HTML], the transitional and frameset DTDs for HTML 4.0
are assumed.
XHTML cannot me manipulated with the DOM Level 1 HTML. Have a look at
DOM Level 2 HTML in order to manipulate XHTML 1.0 documents.
Mozilla behaves correctly.
will tell you if, depending on the mime type, the browser loads the DOM
tree correctly.
HTML is a special since it is not XML, so the rules differ. If you
manipulate an HTML or an XHTML document using the DOM Level 2 HTML, the
rules will be different.
Yes, for HTML 4.0 documents.
Philippe
Note: Continuation of a thread started on www-dom-ts
From: Curt Arnold
[mailto:curta_ontheroad@yahoo.com]
That was a typo, tag names in XHTML are lower case.
Internet Explorer and Mozilla are both correctly case
sensitive for XML (and XHTML). Their behavior differs
for HTML documents. IE appears either to perform a
case-insensitive match on the tag name, Mozilla
performs a case-sensitive match.
The statements on case sensitivity on HTML
implementations in various documents appear to be
inconsistant:
Section 1.3 of the HTML DOM L2 Working Draft says
that:
The other thing is that when calling methods that are
case insensitive when used on a HTML document (such as
getElementsByTagName() and namedItem()) the string
that is passed in should be lower case to work on both
HTML and XHTML documents.
Section 1.1.7 of the DOM L2 Core states that string
comparisions are strictly binary and hence
case-sensitive.
Section C.11 of the XHTML 1.0 says that the HTML DOM
that tagnames and attributes are returned uppercase.
Internet Explorer appears to conform to the behavior
alluded to in Section 1.3 of the HTML DOM 2 WD.
Mozilla appears to be conforming to the behavior
implied by the other two sections.
Do You Yahoo!?
Send FREE Valentine eCards with Yahoo! Greetings!
