They're a pain. They're also ill-specified.
Section 4.2 has a definition of ctext that differs from RFC 822,
which also allows \ escapes of ( and ).
Also I'm unclear on which has precedence in HTTP, a comment or a
blank line in the header. In other words, how do I parse this:
GET / HTTP/1.0
Accept: text/basic (this comment
will include a blank
[blank line]
line)
Accept: text/html
[blank line]
where "[blank line]" is what it says.
Does the blank line in the comment terminate the request, leaving an
ill-formed comment, or does the blank line outside the comment
terminate the request? If the former, the server actually has to parse
comments on the fly so as to locate the blank line that actually
terminates the request. Do any existing servers do that? I doubt it.
Dave Kristol
Pain yes, ill-specified no.
Yep. When I wrote the initial specification of headers and comments,
I decided that allowing \ to mean escape would break too many existing
parsers. This is still my opinion, though if a consensus says otherwise
I will change the draft.
Meaning what? Only an *empty line* ends the headers of a message,
and an empty line is not allowed in a comment. A line containing
space or HTAB is not an empty line.
....Roy T. Fielding Department of ICS, University of California, Irvine USA
p.s.: Conference Hell is upon us all -- I am just now getting through the
mail amassed during the IETF trip, and am now about to embark on a
two-week trip through California, Oregon and Washington
(WebWorld and ICSE-17). Henrik is in Denmark as well, so don't be
surprised if mail goes unanswered for a while.
I must've been asleep when this topic first came up. Of what possible use
are comments in HTTP headers? I'd like to understand why big parser changes
are going to be needed for something that *seems* to be of no value to the
client or the server.
Chuck Shotton
cshotton@biap.com http://www.biap.com/
cshotton@oac.hsc.uth.tmc.edu "I am NOT here."
They are commonly used in User-Agent and From fields.
....Roy T. Fielding Department of ICS, University of California, Irvine USA
I suppose some of the value is in making the specification agree more
with MIME and USENET so that shared code and cross-protocol gateways
work more transparently. I really doubt we _need_ the full glory
of RFC822 comments most of the time.
Albert Lunde Albert-Lunde@nwu.edu
Usenet doesn't allow the full glory of 822 either. In general, Usenet
doesn't allow comments except in a particular format for From lines,
and *sort of* single-word unknown timezones.
I'd drop comment support unless you use a really limited subset of what 822
allows. Doing this still allows you to re-use all that wonderful existing
822-parsing code, but makes it easier on those writing from scratch.
/r$
I'd like to second this. While there do seem to be a few instances where
comments in HTTP headers make sense, HTTP is generally a machine-readable
protocol only and general purpose human-readable comments serve little
purpose in the protocol at large.
Forcing the widespread implementation of a syntactic feature of limited
value is burdensome at best, especially on custom parser authors as Rich
points out. And frankly, there are several of those because of the legal
implications of reusing the "common" code base in commercial apps. Many
HTTP authors simply cannot afford to risk reusing existing code and expect
to retain copyright and ownership.
If comments are necessary in name-related fields (user, server, agent),
then perhaps the syntax should be specified only for those fields. Random
appearances of comments throughout the header seem to be of little utility
and present some difficult recoding problems at first glance (at least for
my cheesey little HTTP parser!)
Chuck Shotton
cshotton@biap.com http://www.biap.com/
cshotton@oac.hsc.uth.tmc.edu "I am NOT here."
