I know that we are not "meant" to lay out pages with text in 2 or
more table cells side by side.
But, how many people really really stick to this ?
I would have thought that most screen readers would be able to read
the first cell's contents, then the next cell etc etc -- rather than
reading right across the page and turning it all to mush.
Rebecca
There was a thread recently on this list which actually looked for screen
readers that could do this. It turns out that on some platforms (e.g.
macintosh) it is normal that the screen readers get it right, while on others
(e.g. Windows) it is normally not right (at least by default).
The thread is available from the archives:
I note in that that I said I would try to gather the information into a Web
page - I haven't done that yet. Sorry.
As for how many people stick to this, the answer is "some". The real
question, surely, is how much of a problem does it cause? And the answer,
surprisingly to me, seems to be "still quite a lot". Although it is getting
better.. (I would have tought it would be solved by now. I think the
difficulty for screen readersis that they are required to work with a wide
range of different products, not just Web browsers, so the development time
available for one product becomes limited. As far as I am aware, the speech
solution in the Windows OS - Narrator, only available in english - is not
capable of dealing with two columns of text at all yet, but I have not
checked for a while).
Cheers
Charles
I know that we are not "meant" to lay out pages with text in 2 or
more table cells side by side.
But, how many people really really stick to this ?
I would have thought that most screen readers would be able to read
the first cell's contents, then the next cell etc etc -- rather than
reading right across the page and turning it all to mush.
Rebecca
Location: I-cubed, 110 Victoria Street, Carlton VIC 3053, Australia
(or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France)
A screen reader will read across the column boundaries unless it
manages to sense the blank area between columns. From what I've heard,
JAWS is not a screen reader but actually accesses the document object
model and may linearise the table sensibly, at least when used with
IE. (I guess Windows screen readers must intercept the GDI calls that
write text to the screen, as the only other alternative is OCR, albeit
with consistent character shapes. As such, they will have some
information about the order in which the program refreshed the screen,
which may not be the logical order, even when none of the window is
ever obscured and will be controlled, to some extent, by Windows,
when there is an obstruction. Can anyone give some first hand knowledge
here?)
Accessing such a table in Lynx will also linearise it.
The real problem is that tables often are not as simple as this.
It's quite likely that the linearised form of a table will actually
be: navigation menu, top banner and menus, real text, producing a
lot of noise to be bypassed.
As I remember the WCAG rules, using tables for layout is tolerated and
the preferred method until browsers properly implement CSS, but the
tables are required to linearise correctly, which, in my view, would
probably mean giving the main text first in the above example.
The leading screen readers (JAWS 3.7, Window-Eyes 4.0, etc) and speech
enabled browsers (IBM Home Page Reader 3.0) do a very good job of reading
tables in their logical order (cell-by-cell). As you might guess, their
older versions (I'd guess more than a year and a half old...) do not. So it
comes down to the difficult question of when we can "write off" the older
technologies. The vast majority of screen reader-users I have worked with
acutally use fairly current technology ( -- but most of my work has been in
workplace settings, where the screen reader is likely purchased by the
employer or state vocational rehab agency).
Either way, it is becoming an increasingly difficult battle to try to
convince web authors not to use tables for accessibility reasons, especially
when the discussion includes demonstration of a modern screen reader.
Without better support from the browsers, CSS Positioning just doesn't seem
to be a practical alternative. The note on checkpoint 5.3 says "once user
agents support style sheet positioning, tables should not be used for
layout" -- it sure seems that today's screen readers do a better job dealing
with tables (for layout) than today's browsers do with style sheet
positioning.
I would be interested to hear if anyone has come to any different
conclusions on this issue.
Mike
Behalf Of Rebecca Cox
I know that we are not "meant" to lay out pages with text in 2 or
more table cells side by side.
But, how many people really really stick to this ?
I would have thought that most screen readers would be able to read
the first cell's contents, then the next cell etc etc -- rather than
reading right across the page and turning it all to mush.
Rebecca
