From:Philippe Le Hegaret [SMTP:plh@w3.org]
Sent:Tuesday, February 19, 2002 6:23 PM
Subject:Re: DOMString Character Encoding
Specifying the type is one thing, but specifying the encoding is another.
Making it UTF-16 (big endian, little endian, w/wo BOM?) unnecessarily
constrains the implementation. I know first hand it creates a significant barrier
for C. It requires that the implementation provide all the usual string
manipulation functions. Consider what would happen if the DOMString type
were defined as a long and specified the encoding as UCS-4BE? What would
the Java language binding look like?
see
Applications must encode DOMString using UTF-16
big endian or little endian is platform dependent. I don't think that
the BOM doesn't have anything to do in a DOMString.
Internally I doubt Java Strings have BOMs but if you serialize one they sure do. But
that doesn't matter because Java users should never be concerned with the actual
character encoding of Java Strings. I'm trying to make the same point about
DOMString but I'm not sure anyone has acknowledged they even know what I'm
talking about. Or I'm missing something fundamental here.
Mike
big endian or little endian is platform dependent. I don't think that
the BOM doesn't have anything to do in a DOMString.
sure but then this is an issue for the serializer, not the DOMString
itself. I don't think we need to specific and define what happen
regarding the BOM. I expect the XML specification to be clear on that if
needed.
Philippe
From:Philippe Le Hegaret [SMTP:plh@w3.org]
Sent:Tuesday, February 19, 2002 6:53 PM
Subject:RE: DOMString Character Encoding
big endian or little endian is platform dependent. I don't think that
the BOM doesn't have anything to do in a DOMString.
I'm sorry, I didn't mean to make BOMs the issue. I was just trying to make
the point that character encoding is totally irrellivant to DOMString just as it
is to Java's String type which is refereneced in the section in question.
Mike
XML text files can carry an optional byte order mark at the start of the
file (before the XML Declaration or Text Declaration, if any). It's the
responsibility of the parser and/or serializer to deal with that... so
outside of the question this raises about whether our Load/Store API needs
an option to control whether a BOM is to be generated, I don't think we
have to worry about it.
Java serialization is irrelevant to the DOM API, and I'm not quite sure why
we're discussing it... or why the byte ordering question came up in the
first place. The byte order in the DOMString is that of whatever datatype
the binding has used as its DOMString type, and the programmer generally
doesn't care.
Joe Kesselman / IBM Research
