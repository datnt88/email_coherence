Before we get too far into a discussion of entities, I'd like to take a
second to reflect on XML's dual parentage. (risking Len's ire =) )
The SGML Way:
In the SGML world, entity referncing and document parsing are intertwined,
though separate. A document cannot be considered "valid" until its entities
have been resolved (especially its external text entities!. Entities are
declared (and theoretically resolved) in the DTD or DTD subset by the entity
manager and used by the parser to create the ESIS. In all but a few SGML
systems, all document content reuse is done through this mechanism.
The Web Way:
In the Web world (especially in the HTML world), entities (or "objects")
are, conversely, resolved by the application AFTER parsing. So, the parser
parses the document and returns the ESIS to the application. The application
starts to process it and fetches (perhaps through an entity manager) any
objects it needs to complete that task. In reality, "transclusion" or
"inclusion" or "fragment inclusion" is just a special case of linking. The
standardized mechanism for including HTML content is the same as for
including JAVA or Active-X content: OBJECT . In other words, in HTML,
document transcusion is just a special case of linking. The parser doesn't
know or care about it.
The Heresy:
Do we really need parse-time entities in XML? What do they "buy?" In a
networked environment, the decision to resolve entities or not should be
entirely left up to the application (not the parser) because only the
application knows which entities it "needs", and the cost of resolving
entities it does not need is quite high. Furthermore, since the number of
entity-resolution failures will be quite high (relatively speaking) going
over the Internet, the application should be able to choose which entities
are strictly need and which may be absent.
In other words, I am proposing that we should not let entities affect the
parsing of their containing documents. Every XML document would be validated
without regard to the content or existance of its sub-documents. Further,
the content of sub-documents should not affect the parse-tree of the parent
document in any way. They would all be "opaque" to the containing document
at the parser level.
At the application level, of course, it might be invalid to transclude a
footnote as if it were a chapter, but that's the same as if you hyperlinked
to a chapter as if it were a footnote. But HyTime (and XTime =) ) has/will
have facilities for specifying those constraints at the "link manager" level.
If we can agree that the parser doesn't need to care about
fragments/entities/objects, then we can wait until the spring to talk about
them.
Paul Prescod
Doesn't even a little bit. This is what we came to do. Shake
out issues, look at alternatives, try to get the work done.
so far, so good.
len
On Sat, 21 Sep 1996 16:13:47 -0400, Paul Prescod
Jon says we're not to discuss this subject now, but so many erroneous
impressions of SGML have been created that I feel a need to get the facts
straight.
(snip)
SGML has entity types for both of these "ways".
The SGML Way:
SGML text entities, internal and external, are accessed and parsed in context,
as though their replacement text was physically in the entity from which they
are referenced.
The Other SGML Way (aka the Web Way, but we did it first):
External data entities, whether CDATA, SDATA, or NDATA, are *never* parsed in
context. The application is given a pointer to them and it can request access or
not, as it sees fit. When accessed, parsing is based on the data content
notation, which may or may not be SGML.
SUBDOC entities are treated like CDATA external data entities with SGML as the
notation. They are not automatically parsed in context.
And just for the record, whether an external entity is located via a public
identifier or a system identifier is totally independent of what kind of text is
in the entity.
Charles F. Goldfarb * Information Management Consulting * +1(408)867-5553
13075 Paramount Drive * Saratoga CA 95070 * USA
International Standards Editor * ISO 8879 SGML * ISO/IEC 10744 HyTime
Prentice-Hall Series Editor * CFG Series on Open Information Management
Thanks for using the agentless passive voice, Charles. =)
You are right, I should have mentioned those other forms of entities. I do
still have concerns about their applicability that I will bring up again in
November. There still is a distinct "Web Way" although the second "SGML Way"
is closer to it.
More in November.
Paul Prescod
