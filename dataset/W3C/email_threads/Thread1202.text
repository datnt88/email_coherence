The Unicode Consortium Technical Committee (UTC) has asked me to look into
what would be involved in deprecating the character set titled
"unicode-1-1". This character set was registered in conjunction with RFC
1641, "Using Unicode with MIME".
This 16-bit character set is obsolete because it is based on an older
version of Unicode which the UTC would prefer people not use. The preferred
charsets that applications should use are UTF-16, UTF-16BE, and UTF-16LE.
Their definition and usage recommendations are in the Internet Draft
draft-hoffman-utf16-02.txt.
Is it possible to deprecate or invalidate an existing, registered character
set? What process would be involved? Should we be looking at some other
process to discourage use of "unicode-1-1"?
Thank you in advance,
Deborah Goldsmith
Manager, International Toolbox Group
Apple Computer, Inc.
goldsmith@apple.com
You have to identify what RFCs reference this version which is to be
deprecated, and ideally update those RFCs by writing one new RFC
which updates all of these, identifying what they should do.
I.e. an RFC can update (not replace) a whole bunch of other RFCs.
That happens now and then for clearifications etc. I see this as one
of these situations when an update is ok.
The process is because of that:
+ Someone checks the RFCs existing for references that will be wrong
+ Check more carefully if the change have impact on the RFC itself
+ Write one Internet-Draft about the two above things. I.e. about how
and what version of UNICODE to use at the moment -- and clearify what
impact it had on old protocols.
+ Let me know that the Internet-Draft is published, and I'll see that
it become an RFC, via the normal process.
If the impact on a certain RFC is "not negliable", the RFC itself
might have to be replaced by a new one, but this descision have to be
made in step 2 above.
Patrik
IETF URL: http://paf.se
PGP Key ID: 0xBD236602
In theory there is no difference between theory and practice,
but in practice, there is.
Based on my search of the RFC database, the following RFCs refer to
"unicode-1-1":
RFC 1945: Hypertext Transfer Protocol -- HTTP/1.0
It's one of the listed character sets for HTTP headers.
RFC 2068: Hypertext Transfer Protocol -- HTTP/1.1
Ditto.
RFC 1700: ASSIGNED NUMBERS
The charset database.
RFC 1641: Using Unicode with MIME
The original registration.
None of these seem like they would cause a problem by being obsoleted.
Deborah Goldsmith
Manager, International Toolbox Group
Apple Computer, Inc.
goldsmith@apple.com
Yes, but RFC 1945 is an "Informational" RFC that noted the
current practice of HTTP/1.0 at the time it was written.
There is no process for "updating" it, and no need.
Actually, no. "unicode-1-1" appears in RFC 2068 only in an
example, and the example is used to demonstrate the use of
"q" factors to indicate preference. In the example in RFC 2068,
"unicode-1-1" is demonstrated as having a lower preference:
Accept-Charset: iso-8859-5, unicode-1-1;q=0.8
so I don't think there's anything wrong with RFC 2068.
It appeared in RFC 1945 in a list of enumerated values,
but that was changed when we went to Proposed Standard.
Even obsoleted charset designations should retain their assigned
numbers, so that updated software can know when it receives data
that uses the obsoleted charset. RFC 1700 notes clearly that it
is a "snapshot" of the online documentation, and does not need
any updating.
Actually, it seems that none of these require any updating at all.
All that's necessary is to note in the charset registration itself
that "Unicode-1-1" is obsoleted.
At the moment IANA doesn't register anything about the state of a
character set, unlike the MIME type registry, where it can be marked
as COMMON, DEPRECATED or LIMITED USE.
Perhaps we should introduce the same labels in the charset registry?
Ned?
Harald
Harald Tveit Alvestrand, Maxware, Norway
Harald.Alvestrand@maxware.no
I am in favour of that.
paf
So am I; I'll make sure it is added to the document the next time it is
revised (hopefully soon).
Ned
Very much in favor, too. Would help a lot!
Regards, Martin.
#-#-# Martin J. Du"rst, World Wide Web Consortium
#-#-# mailto:duerst@w3.org http://www.w3.org
I can't say that I have a problem with this. :-)
I will wait until the process for annotating the charset registration is
defined.
Thank you,
Deborah
Deborah Goldsmith
Manager, International Toolbox Group
Apple Computer, Inc.
goldsmith@apple.com
