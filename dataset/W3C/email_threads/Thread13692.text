To move things along, here's a sample EARL file written in N3, the
abbreviated RDF described at http://www.w3.org/2000/10/swap/Primer that
Sean pointed out (thanks Sean!)
I added a couple of things to that notation
- everything after // is a comment, a la C++
- URL's that start with / are relative to earl:domain @@ hmmm.
(please tell me if I got this notation wrong)
Here goes. As you can see, issues spring up right away once you start
pinning things down.
// define namespaces
@prefix rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns# .
@prefix rdfs: http://www.w3.org/2000/01/rdf-schema# .
@prefix aert: http://www.w3.org/WAI/AU/ATAG10-EVAL# . // ER techniques
@prefix e: http://www.w3.org/2001/10/earl# . // doesn't exist yet
// remember that N3 lists triples SUBJECT FIRST
// define website :site, a name internal to this file
:site e:domain http://www.foo.com
:site e:homepage http://www.foo.com/index.html
//@@ how to define sites that span different domains?
//@@ how to describe sites that give different users different views,
especially if both view have same URI (e.g. though use of cookies or logins)
// define human evaluators
:hu1 e:type e:human
:hu1 e:name "Samuel R. Hawk"
:hu2 e:type e:human
:hu2 e:name "Joe S. Dove"
// define tool
:t1 e:type e:tool .
:t1 e:uri http://astro.temple.edu/piat/wave .
// now lets talk about a particular image tag
:img1 = /dog.html#/1/2 . // using xpath here
:img1 e:type e:tag .
:img1 e:name "img" .
:img1 e:partOf :site
// we have to be explicit. It's not enough to simply be in
// same earl file, as mere presence carries no semantics
// @@ can we get partOf from some other namespace?
//@@ do we really need type and name in the earl file?
// what tools and humans say about this tag
// tool flags it as suspicious
:t1 e:says {:img1 aert:altStatus aert:suspicious} .
// :hu1 says alt bad, suggests new value
:hu1 e:says {:img1 e:altStatus e:fail } .
:hu1 e:says {:img1 e:altShouldBe "Smiling puppy" } .
//@@ instead of ad-hoc "altShouldBe" can we have generic way of describing
changes to tags, attributes, etc?
// :h2 contradicts :h1, says alt is OK
:hu2 e:says {:img1 aerte:altStatus e:pass } .
// consumer of this data must choose to take advice of :hu1 or :hu2
Leonard R. Kasday, Ph.D.
Institute on Disabilities/UAP and Dept. of Electrical Engineering at Temple
University
(215) 204-2247 (voice) (800) 750-7428 (TTY)
Chair, W3C Web Accessibility Initiative Evaluation and Repair Tools Group
The WAVE web page accessibility evaluation assistant:
Notation3 parsing is done with Python for the moment, so TimBL defined N3
quotes as the same as Python quotes. In other words, for "//" read "#". And
it saves a byte :-) Longer quotes can be done using the """ syntax. Three
double quotes starts and stops a multi-lined comment.
Instead of repeating the subject, if the subjects are the same, but the
predicate and objects are different, you can use a semi-colon ";", so that
the above becomes:-
:site e:domain http://www.foo.com/ ;
e:homepage http://www.foo.com/index.html .
Don't forget the full stop at the end (period); I always leave it out by
mistake too, and my N3 doesn't parse...
Things can have multiple objects. In other words, if you have some triples
where the subject *and* predicate are the same, you can use a comma ",",
like so:-
:site e:domain http://www.foo.com/ ,
http://www.example.com/ .
We can probably use Wordnet for some of these terms.
How about using rdf:type, or in N3 this is abbreviated to "a":-
:t1 a e:tool .
hmmmmmm..... I'm not sure about the use of a { context } here. I think you
mean a further node, such as would be represented by brackets: [ ], but I'm
not sure.
:t1 e:says [ :img1 aert:altStatus aert:suspicious ] .
Othewise, it's a neat syntax isn't it? Please note that there are some N3
development tools that might be of use at http://www.w3.org/2000/10/swap/
which includes an N3 to RDF processor, and a simple query engine (CWM).
I think that this is a neat direction for EARL, but we need to start
thinking exactly what we will require from terms in the earl namespace.
Daniel wrote a list down somewhere (I'll have to look it up), and I think
maybe we should start from that.
Kindest Regards,
Sean B. Palmer
@prefix : http://webns.net/roughterms/ .
[ :name "Sean B. Palmer" ] :hasHomepage http://infomesh.net/sbp/ .
Sean,
Thanks for the tips on shortening the notation.
As for use of the curley brackets signifying context, where I had the
humans :hu1 and :hu2 asserting different things about e:altStatus (BTW, I
correct a typo here... I had aerte:altStatus)
:hu1 e:says {:img1 e:altStatus e:fail } .
:hu2 e:says {:img1 e:altStatus e:pass } .
I rechecked and i think that indeed a proper use of context. [1] says:
QUOTE
Sometimes, we need to talk about more than one context. For example, if
either one statement or another is true, then we can't put them in the same
context.
In N3 a context can be represented by enclosing all the statements it
encloses in curly braces { }....
x.rdf :says { :pat a :Person . } .
... This example just declares that the document x.rdf expresses the
hypothetical context in which it is stated that pat is a person: the
statement above doesn't state that pat is a person.
END QUOTE
That's what I'm trying to express... two contexts: in one context, the one
:hu1 expresses, in which e:altStatus is fail, in the other, which :hu2
expresses, in which it's pass. And I'd want this even if we had just one
human saying one thing. It's a statement about another statement.
Ref [1] also has the following example for square brackets:
QUOTE
#pat #child [ #age "4" ] , [ age "3" ].
You could read this as #pat has a #child which has #age of "4" and a #child
which has an #age of "3".
END QUOTE
note that the square brackets only have predicates and objects, no
subjects. So again, I think this shows that the curley bracket contexts
are what's needed here.
So in addition to getting a good vocabulary, we've got to thing about what
the terms have as objects. Objects can be elements in a site, the site as
a whole, or contexts containing statements about a site.
Len
Len
[1] http://www.w3.org/2000/10/swap/Primer.html
Leonard R. Kasday, Ph.D.
Institute on Disabilities/UAP and Dept. of Electrical Engineering at Temple
University
(215) 204-2247 (voice) (800) 750-7428 (TTY)
Chair, W3C Web Accessibility Initiative Evaluation and Repair Tools Group
The WAVE web page accessibility evaluation assistant:
Yes, that seems fine. I get a bit messed up with Seth Russell's semEnglish
language, which he evolved from Notation3. There, you can use [] for almost
anything, depending upon the amount of elements inside. For example, one
element is a URI, two is (p,o), three is a triple, and so on.
Very true, and that's more of the tool thing "what does this triple point
to?". It may be a site, or it may be another triple, or whatever. The
vocabulary is the bit that will be defined in the main language, it is the
bit that is "EARL". The rest is simply RDF M&amp;S, so there are already many
ways to apply it, and lots of processors. This is one of the great
advanages of using RDF.
It may be that people will be needing to create their own EARL-type
vocabularies: e.g. one for repair tools, one for editors, and so on. I
think in that way it should be a modular specification... CSS and XHTML
have both benefited enourmously from modularization. It's something to
consider when we develop EARL for real.
Kindest Regards,
Sean B. Palmer
@prefix : http://webns.net/roughterms/ .
[ :name "Sean B. Palmer" ] :hasHomepage http://infomesh.net/sbp/ .
