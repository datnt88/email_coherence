I did not get to make a presentation on MusicBrainz at the F2F,
however I did feel it was important that I share with you the
top issues that Rob Kaye, the head of the MusicBrainz project,
had while working with RDF:
- Make RDF specs easier to understand
The spec focuses too much on the serialization. The BNF directly
in the spec is useful, but really misleading. The focus of the spec
ought to be more on the graph that is created, rather than the
serialization of that graph.
- Provide more guidelines for creating vocabularies
o What should be specified as part of a vocabulary?
o Provide a sample vocabulary!
o Should/must a vocabulary have an RDF Schema?
- Provide a syntax that isn't as verbose
o It should also be more intuitive. I think Sergey Melnik's
approach seems reasonable:
(http://www-db.stanford.edu/~melnik/rdf/syntax.html)
- Do you have any tips on how to write a vocabulary spec
for inclusion into IETF spec? Drew Streib @ freedb wants to use
MM for CD lookups and he wants to push this through the IETF.
Has this been done before for an RDF vocab?
[ "Aaron Swartz" ; mailto:me@aaronsw.com ; http://www.aaronsw.com/ ]
Hi Aaron,
Thanks for this. I'm sorry you couldn't stay for the full time. The short
presentations did get squeezed into the last 45 mins or so of the meeting.
It does occur to me that it might be a good idea to tidy up the list from
the flip charts and any other contributions such as this folks would like
to make into a consolidated list. To do that would require two actions:
o folks who have knowledge of direct user experience with RDF, to
summarize the top issues users had to the list - as Aaron has
just done for MusicBrainz
o someone to volunteer to make the summary
Brian
Here's one I did:
(This draft is currently expired, but still online (as of today). I do
intend to refresh it and complete the spec when some other work comes to
fruition -- real soon, I hope.)
You may note that, in this case, I've focused on presenting the XML and
brining in the RDF as an "afterthought". It was very easy to sell this
approach to one of our developers for inclusion into a product.
There is one problem with this that I think will be difficult to resolve to
the complete satisfaction of all: addresses are URIs, but presented as RDF
literals. It is my belief that, at this time, it would be very difficult
to sell the idea of using rdf:resource= in this context. (I would hope
that, in due course, we could use an RDF schema with an xsdt:anyURI data
type on the literal value and some inference rules to knit the graph
together, but that would be outside standard RDF.)
#g
Graham Klyne Baltimore Technologies
Strategic Research Content Security Group
The information contained in this message is confidential and is intended
for the addressee(s) only. If you have received this message in error or
there are any problems please notify the originator immediately. The
unauthorized use, disclosure, copying or alteration of this message is
strictly forbidden. Baltimore Technologies plc will not be liable for direct,
special, indirect or consequential damages arising from alteration of the
contents of this message by a third party or as a result of any virus being
passed on.
This footnote confirms that this email message has been swept by
Baltimore MIMEsweeper for Content Security threats, including
computer viruses.
I'm not sure if this counts as "user" experience, but these are the
RDF-related issues I would have raised in presenting our experimental workw
ith RDF, which we hope will lead to applications in trust modelling...
Issues in use of RDF
Encoding of facts and rules
* Facts
subj pred arg2 .
subj rdf:type monad .
subj pred (arg2 arg3 ...) .
It's easier to start with facts expressed using n-place predicates
--s-expressions--; we've thought about coding these in RDF's triple-basedn
otation. Some current thoughts are at:
* Rules
Need a ?handle? to the fact -- a URI:
Reification can do this
? [ a rdf:Statement ;
rdf:subject subj ;
rdf:predicate pred ;
rdf:object ( arg2 arg3 ... ) ]
Similar, but not reification:
? [ a Fact ; functor pred ;
args ( subj arg2 arg3 ... ) ]
From discussions held since these notes were made, I think we may do
better to avoid reification for this purpose, if only to avoid confusion
over the intent.
* Variables
Resource ?stands for? a variable:
[ a Variable ; rdfs:label ??x? ]
I think this parallels the "prince" node resolution we discussed: the
"variable name" is used for certain kinds of presentation, but has no
inherent significance (noting that rdfs:label is described as being for
presentation purposes rather than identification).
Further work
? Capturing provenance: contexts?
? e.g.
StatedBy( http:/foo.bar.com/doc, { s1(a,b,...) s2(c,d,...) ... } )
I don't think any of these issues bear directly on what we are
contemplating at the present, but suggest future issues for RDF-based
applications and generic tools.
#g
Graham Klyne Baltimore Technologies
Strategic Research Content Security Group
The information contained in this message is confidential and is intendedf
or the addressee(s) only. If you have received this message in error ort
here are any problems please notify the originator immediately. The
unauthorized use, disclosure, copying or alteration of this message is
strictly forbidden. Baltimore Technologies plc will not be liable for direct,
special, indirect or consequential damages arising from alteration of thec
ontents of this message by a third party or as a result of any virus beingp
assed on.
This footnote confirms that this email message has been swept by
Baltimore MIMEsweeper for Content Security threats, including
computer viruses.
