Andreas Eberhart has posted a message to the rdf-logic list (in fact,
attempted to cross-post it to just about every RDF-related list) which I
feel is somewhat counter-productive to the work of this group:
I'm not sure what the consensus view on this kind of stuff is. I think
the last thing we want is for other RDF groups to be arguing about what
a query language should be under the assumption that we're hearing their
input when we're clearly not (the attempted cross-post to our mailing
list didn't seem to go through).
I'm also a bit irked about surveys that don't include the REX language;
I realize I haven't put together enough resources to make it accessible
(hoping to at least post a summary of the f2f presentation this
weekend), but I really don't have the time to be writing comprehensive
documentation and language tutorials in more than one forum.
Just to add another data point, I'm finding this report extremely
useful, both in editing our UC&amp;R doc and as a member of the WG
thinking about where to start, what other tech requirements to
propose, and so on.
Is there anything about REX on the Web?
Best,
Kendall Clark
Dear Rob (and all other DA WG members),
our comparison is neither intended to argue about what a RDF query
language should be nor - by any means - intended to force you to take
notice of our results. We posted it across the various RDF-related
mailing lists, including the public RDF data access group list, to
inform interested parties of our results and get feedback.
The report is by no means complete with respect to all (publicly and
privately) available query languages. Our criteria for inclusion of a
given language was primarily based on whether or not we could get hold
of good documentation and a freely available running prototype. This was
necessary in order to formulate queries and to have a certain confidence
in the Yes/No rating for certain language features.
The document could be a useful input for the documents that the group
has to produce. We will comment on the documents produced by the group
at their respective public review periods as suggested by W3C process.
Cheers
Raphael
(on behalf of Peter Haase, Andreas Eberhart and Jeen Broekstra)
This is an useful comparison but one query language missing is RxPath
(http://rx4rdf.liminalzone.org/RxPath) -- so below are RxPath queries
for each of your use cases.
RxPath is syntatically identical to XPath 1.0 and is defined by a
deterministic mapping from the RDF model to XPath data model. Its
specification is available at http://rx4rdf.liminalzone.org/RxPathSpec
(BTW, I'll be releasing a new version of the software next week.)
Based on the metric described in the conclusion of your paper, it's more
complete than any of the languages surveyed, supporting 12 out of the 14
use cases. Also, the same mapping (with minor changes) could be applied
to map RDF models to the XPath 2.0/XQuery data model, the resulting
query language would address most of the items on your wishlist,
including aggregation, sorting, and full support for XML Schema datatypes.
-- adam
1. Path Expression
Return the names of the authors of publication X.
/*[.='X']/author/*/rdf:li/*/name
2 Optional Path
Return the name and, if known, the e-mail of the author of publication X.
/*[.='X']/author/*/rdf:li/*/name | /*[.='X']/author/*/rdf:li/*/email
(Note: RxPath doesn't support tuples, but each email will follow each
author's name because the union is returned in "document" order.)
3 union
Return the labels of all topics that and (union) the titles of all
publications.
/*/rdfs:label | /*/rdfs:title
4 difference
Return the labels of all topics that are not titles of publications.
/*/rdfs:label[. != /*/rdfs:title]
5 Quantification
Return the persons who are authors of all publications.
Not Supported.
6 Aggregation
Count the number of authors of a publication.
count(/*[.='X']/author/*/rdf:li/*)
7 Recursion
Return all subtopics of topic "Information Systems", recursively.
/*[.='http://www.aifb.uni-karlsruhe.de/WBS/pha/rdf-query/sample.rdf#ACMTopic/Information_Systems']//acm:subTopic/*
8 Reification
Return the person who has classified the publication X.
/*[. =/*[.='X']/isAbout/@rdf:ID]/dc:creator/*
9 Collections and Containers
Return the first author of Publication X.
(/*[.='X']/author/*/rdf:li/*)[1]
Unlike the languages you surveyed, RxPath has syntatic support
for RDF containers and collections so you can get the last author too:
(/*[.='X']/author/*/rdf:li/*)[last()]
10 Namespace
Return all resources whose namespace starts with
"http://aifb.uni-karlsruhe.de/".
Assuming there's a namespace declaration with the prefix 'aifb':
/aifb:*
or for any arbitrary URI prefix:
/*[starts-with(., "http://aifb.uni-karlsruhe.de/")]
11 Language
Return the German label of the topic whose English label is "Database
Management".
/*[rdfs:label = 'Database Management']/rdfs:label[@xml:lang='de']
12 Lexical Space
Return all publications where the page number is the lexical value '08'.
/Publication[pages = '08']
13 Value Space
Return all publications where the page number is the integer value 8.
/Publication[pages = 8]
Note: In XPath 1.0 type coercion is automatic but it only supports
numbers and strings.
14 Entailment
Return all instances of that are members of the class Publication.
/Publication
(No special support for entailed vs. ground assertions, inference is up
to the implementation.)
Related to the recent work of the RDF Data Access Working Group [1], we have
compared six proposals for RDF query languages. The report, the use case
data, and the queries are available online [2].
Looking forward to hearing your feedback.
Peter Haase, Andreas Eberhart, Raphael Volz, Institute AIFB, University of
Karlsruhe
Jeen Broekstra, Vrije Universiteit Amsterdam
[1] http://www.w3.org/2001/sw/DataAccess/
[2] http://www.aifb.uni-karlsruhe.de/WBS/pha/rdf-query/
Motivated by this interesting report, we want to call your attention to a
study in many ways complementary: a study from a theoretical point of view
of a basic core of RDF query languages. The paper [1] presents a formal
study of the "conjunctive" fragment of RDF query languages, as well as a
first approach to normalization of RDF data. Same as the report, feedback
is very welcomed,
claudio gutierrez,
[1] C. Gutierrez, C. Hurtado, A. O. Mendelzon,
"Foundations of Semantic Web databases" (to appear in PODS 04),
Related to the recent work of the RDF Data Access Working Group [1], we have
compared six proposals for RDF query languages. The report, the use case
data, and the queries are available online [2].
Looking forward to hearing your feedback.
Peter Haase, Andreas Eberhart, Raphael Volz, Institute AIFB, University of
Karlsruhe
Jeen Broekstra, Vrije Universiteit Amsterdam
[1] http://www.w3.org/2001/sw/DataAccess/
[2] http://www.aifb.uni-karlsruhe.de/WBS/pha/rdf-query/
Related to the recent work of the RDF Data Access Working Group [1], we
have compared six proposals for RDF query languages.
[2] http://www.aifb.uni-karlsruhe.de/WBS/pha/rdf-query/
Andreas,
interesting work; to this regard, you might also want not to skip W3C's
Metalog (cf. http://www.w3.org/RDF/Metalog ).
On the criteria in [2], obviously one might add many different
others as well. Given DAWG's scope, DB-like ops like joins etc might
profitably be included in the list. It would be also nice to express
those use cases in terms of abstract properties, rather than single
use cases: this will help better shaping the requirements document,
keeping a high level of abstraction and generality.
Bests,
-M
In the future, please rely on RDF DAWG members to notice the discussion
in forums such as www-rdf-rules and bring up related points in the
DAWG as they become relevant to our agenda.
We look forward to it.
Dan Connolly, W3C http://www.w3.org/People/Connolly/
see you at the WWW2004 in NY 17-22 May?
