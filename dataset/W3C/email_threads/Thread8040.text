I remember the recent question about DASL (was it this list?).
I was wondering if part of the problem with DASL is the question
of whether it addresses a need, or addresses it appropriately.
We have a text searching engine that can do lots of funky searches
etc. on the content of resources using fields (lets say dublin
core elements). But this would be quite a different thing to
querying on WebDAV properties.
Hence I was interested to understand better the goal of DASL.
Is it to be able to query WebDAV properities (and nothing else).
Or was it intended to be broader and cover the harder problem
of querying content as well?
Just curious to understand the intended scope better before
I jump in. I found a reference to a dasl requirements document
(I have not looked it up yet). But is it still valid? I ask
only because if its been a while and if no one has implemented
it, is it because they have been busy, or because DASL has
missed the mark in some way?
Alan
ps: I noticed that DASL seems to allow other queries to be
plugged in. While this is good, for the above I am not after
an answer like "you can do anything you like". I am more
interested in "what do people like/want?"
pps: I also noticed that the "basic" query langauge looked
rather long when you got down to it - orderby, contains, like,
three value logic... Convienient if you have an SQL engine around
I guess.
Hello Alan,
You mentioned it, DASL define a mini query language to query property mostly
and "server-defined" query languages, that can do want they want (the only
thing those languages need is clients supporting those languages).
I have the feeling, that also the mini query language should be extendable
to define additional content operators. A query covering both content and
properties is required to my understanding (again the question of available
clients).
An extendable mini query language would reduce the need to define an own
"server-defined" query language and you get both content and property query
in a more "standard" way.
Best regards,
juergen pill
I remember the recent question about DASL (was it this list?).
I was wondering if part of the problem with DASL is the question
of whether it addresses a need, or addresses it appropriately.
We have a text searching engine that can do lots of funky searches
etc. on the content of resources using fields (lets say dublin
core elements). But this would be quite a different thing to
querying on WebDAV properties.
Hence I was interested to understand better the goal of DASL.
Is it to be able to query WebDAV properities (and nothing else).
Or was it intended to be broader and cover the harder problem
of querying content as well?
Just curious to understand the intended scope better before
I jump in. I found a reference to a dasl requirements document
(I have not looked it up yet). But is it still valid? I ask
only because if its been a while and if no one has implemented
it, is it because they have been busy, or because DASL has
missed the mark in some way?
Alan
ps: I noticed that DASL seems to allow other queries to be
plugged in. While this is good, for the above I am not after
an answer like "you can do anything you like". I am more
interested in "what do people like/want?"
pps: I also noticed that the "basic" query langauge looked
rather long when you got down to it - orderby, contains, like,
three value logic... Convienient if you have an SQL engine around
I guess.
Is that a rhetorical question? I would think anybody with a searchable
website would want to use DASL...
[mailto:w3c-dist-auth-request@w3.org]On Behalf Of Pill, Juergen
Hello Alan,
You mentioned it, DASL define a mini query language to query property mostly
and "server-defined" query languages, that can do want they want (the only
thing those languages need is clients supporting those languages).
I have the feeling, that also the mini query language should be extendable
to define additional content operators. A query covering both content and
properties is required to my understanding (again the question of available
clients).
An extendable mini query language would reduce the need to define an own
"server-defined" query language and you get both content and property query
in a more "standard" way.
Best regards,
juergen pill
-----Original Message-----
I remember the recent question about DASL (was it this list?).
I was wondering if part of the problem with DASL is the question
of whether it addresses a need, or addresses it appropriately.
We have a text searching engine that can do lots of funky searches
etc. on the content of resources using fields (lets say dublin
core elements). But this would be quite a different thing to
querying on WebDAV properties.
Hence I was interested to understand better the goal of DASL.
Is it to be able to query WebDAV properities (and nothing else).
Or was it intended to be broader and cover the harder problem
of querying content as well?
Just curious to understand the intended scope better before
I jump in. I found a reference to a dasl requirements document
(I have not looked it up yet). But is it still valid? I ask
only because if its been a while and if no one has implemented
it, is it because they have been busy, or because DASL has
missed the mark in some way?
Alan
ps: I noticed that DASL seems to allow other queries to be
plugged in. While this is good, for the above I am not after
an answer like "you can do anything you like". I am more
interested in "what do people like/want?"
pps: I also noticed that the "basic" query langauge looked
rather long when you got down to it - orderby, contains, like,
three value logic... Convienient if you have an SQL engine around
I guess.
In the past, we produced both a Scenarios and a Requirements specification.
I believe that both are still largely valid. The only significant new
factor that has emerged since these documents were initially drafted is the
XML Query effort.
The scenarios and requirements documents can be found at:
- Jim
That's what I would think as well... Both properties and content searchability
would be good.
Not sure if anybody ever answered your basic question about whether DASL
addresses content querying. It does.
Here is the query fragment that would search the body of a document:
This is similar to the property queries, but it does not name a property,
therefore it's the content that must be searched for the string.
Note that it's possible to do exact string matching ("Peter Forsberg") and
string-by-string matching ("Peter" and "Forsberg", not necessarily
together). Section 5.13.1 of DASL shows both examples.
Lisa
Lisa,
which version are you referring to? According to [1],
- "contains" is an optional operator (so cou can't rely on it being
supported)
- the method of matching is only loosely defined; in particular you can't
rely on it doing "exact" matching.
[1] http://www.webdav.org/dasl/protocol/draft-dasl-protocol-00.html
true
true.
I was looking at the same draft. But I think Alan wanted to know if DASL
addressed body content searching at all, which it does. If the server
supports it, the client can use it (as usual).
lisa
This may be a bit of a can of worms, but is there any interest in using
the structure of content in queries? For example, being able to query
on the content's "Title" or "Author". I am thinking of Dublin Core
metadata sort of approach - not XPath or XML Query since the content
can be anything (PDF, GIF, etc). Allowing something like Dublin Core
would allow a level of structure to be imposed.
If this was considered useful, would the better approach be to define
additional live properites that were automatically extracted from the
content (hence its really just querying on properties after all, not
content itself), or to allow querying on properties or content.
I guess I am sort of asking should allprops return the Dublin Core
like elements too? (It could be expensive to compute).
I do a fair bit of work with a search and retrieval protocol, Z39.50.
It is based on the Dublin Core idea of separating your access points
for searching from the physical representation of the data. It allows
querying on "Title" as an abstract concept, without requiring that
it be possible to return a "Title" out from the data. It takes a
different view on query capabilities too - it says you have terms
that can have constraints applied. Specifying a property name to
search within is a constraint. Specifying  (greater than) is a
constraint. It does not use 3 value logic. It more says 'return
all records that contain some data that match the condition'.
WebDAV might not have the same problem of repeating values as
properites have only one value.
Personally I would like to search on parts of the content using
Dublin Core (or other) metadata standards. Should I do this using
WebDAV properties bound to parts of the content of the resource?
Any other ideas?
Thanks
Alan
ps: I am not likely to do this any time soon. Just thinking about
the future.
