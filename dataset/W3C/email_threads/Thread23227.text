First of all as a newcommer to this list I'd like to send my greetings to
all its members.
Now I can ask my question :
DOM Level 3 introduces the method isEqualNode(in Node arg, in boolean deep).
I do not understand the use of the boolean argument deep : "if true,
recursively compare the subtrees; if false, compare only the nodes
themselves". Now a little before in the specifications it's said that two
nodes are equal is the "childNodes NodeLists are equal. This is : they are
both null, or they have the same length and contain equal nodes at the same
index".
Now how can I test the equality of two child nodes without recursively
calling isEqualNode ? So as I understand it it does not matter if deep is
true or false, the general contract requires that recursion be done. What's
your opinion about this topic ?
Zeljko VELAJA
The intent is that the "deep" parameter of isEqualNode is like the
corresponding flag on cloneNode. If false, only the two nodes explicitly
passed as parameters (and maybe their attributes; I'd have to check that)
will be compared. If true, those nodes and all their children wil be
compared.
Joe Kesselman / IBM Research
Yet cloning a node with CloneNode's argument "deep" set to false will
perform no cloning of the children (except for an Attribute). This is
clearly specified. On the over side, as regards the contract of isEqualNode,
the specification does not seem to consider a node's children equality as
facultative and argument dependant ??
-----Message d'origine-----
De : www-dom-request@w3.org [mailto:www-dom-request@w3.org]De la part de
Joseph Kesselman
Envoye : mardi 7 mai 2002 15:26
A : www-dom@w3.org
Objet : Re: Node.isEqualNode
The intent is that the "deep" parameter of isEqualNode is like the
corresponding flag on cloneNode. If false, only the two nodes explicitly
passed as parameters (and maybe their attributes; I'd have to check that)
will be compared. If true, those nodes and all their children wil be
compared.
Joe Kesselman / IBM Research
Last time I looked at the DOM3 spec (too long ago!), there was a
corresponding "deep" argument for isEqualNode(). But this seems to be
absent in the current public working draft for DOM3 Core. I'm slightly
surprised, since it seems a trivial addition to the API.
Question for the DOM team: Is the problem that nobody had a good usage case
for shallow testing of a node, or did this just fall through the cracks?
(It would seem to me that shallow testing is at least as useful as shallow
cloning...)
Joe Kesselman / IBM Research
Thank you for your answer : it gave me an occasion to update my PDF specs,
which where from 14 january.
-----Message d'origine-----
De : www-dom-request@w3.org [mailto:www-dom-request@w3.org]De la part de
Joseph Kesselman
Envoye : mardi 7 mai 2002 16:28
A : www-dom@w3.org
Cc : www-dom@w3.org
Objet : RE: Node.isEqualNode
Last time I looked at the DOM3 spec (too long ago!), there was a
corresponding "deep" argument for isEqualNode(). But this seems to be
absent in the current public working draft for DOM3 Core. I'm slightly
surprised, since it seems a trivial addition to the API.
Question for the DOM team: Is the problem that nobody had a good usage case
for shallow testing of a node, or did this just fall through the cracks?
(It would seem to me that shallow testing is at least as useful as shallow
cloning...)
Joe Kesselman / IBM Research
