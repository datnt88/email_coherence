The WebDAV working group met on Thursday, March 17, 1999, from 15:30 to
17:30. The meeting was chaired by Jim Whitehead, and notes were recorded by
Yaron Goland. Approximately 55 people attended.
The meeting began with a brief presentation by Jim Amsden on the DELTA-V
BOF, which was held in the previous session. The presentation gave an
overview of the scope of the effort proposed in the DELTA-V charter. Next,
Judy Slein led discussion on open issues from the Advanced Collections
protocol specification, specifically the default semantics of COPY on a
direct reference (resolution: create a direct reference at the destination),
and the default semantics of LOCK on a direct reference (attendees preferred
that the lock affect the reference and its target). There was also
discussion on dereferencing URLs where a direct reference is a portion of
the URL's path.
Jim Whitehead led a discussion on registering property schemas, which
highlighted the issue of whether DAV properties should be registered on a
per-property, or per-schema basis. Finally, there was a brief discussion on
moving DAV access control forward.
Hi Greg,
I'm cc'ing the list on this, since I'm sure many people will be interested
in the answer.
Can you elaborate a bit here? Were people interested in a registry?
Since we now have a client (IE5) that is using "unknown" properties, I
was thinking it was time to start that registry we had bandied about a
while back. I'm interested in people's general view on that.
Sorry this was so brief -- WG chairs are required to produce a brief summary
of their WG's meeting, in addition to a full set of minutes for the meeting.
So, there will be better minutes int he future.
People were interested in a registry, but there was concern on two points:
1) There are two views of property reuse. One view (which I held prior to
the meeting) was that properties can be individually reused, and hence it
might be reasonable to pluck out the "author" property from the Dublin Core
and use it without using the rest of the Dublin Core properties. The other
view is that even individual properties are bound into a schema definition,
and cannot readily be unbundled from the rest of their schema.
Based on this, it probably makes sense to register properties as schemas,
rather than as individual properties (which was my view on this).
2) There was also concern that DAV properties may not exist independently of
other protocol elements, and hence registering just properties may not be
enough. For example, it is possible to define a long-time-duration RPC
mechanism using properties. For example, client A stores a request in a
property, then waits. Next, client B retrieves the request from the
property, executes the request, then stores the result back in the property.
Later, client A goes back to retrieve the result. In such a case,
registering the property isn't sufficient, since what is really going on is
a protocol.
None of these suggest to me that creating a property registry is a bad idea,
just that it may be more subtle than it originally seemed, and the
granularity of registration is probably a whole schema.
- Jim
No problem. I appreciate the extended response, before the minutes
arrived.
Okay, I can see that. I'm not sure I buy into it, but I'll take the WG's
word that a schema-based registration is best. (maybe the minutes will
elucidate the issue, so I'll wait for those)
I think in this case, the registry would simply need to indicate that
"additional material" is available for the registered schema. I think it
makes a lot of sense to allow for add'l information to be stored with
the registry (authors, web sites, RFCs, etc).
No problem. This just affects the database schema (pun intended :-) for
the registry.
When I get the registry up (by next week maybe?), I'll pre-load it with
Lisa's property draft and we'll go from there.
Cheers,
-g
Greg Stein, http://www.lyra.org/
You _can_ pluck out the "author" property from the Dublin Core and
use it without using the rest of the Dublin Core properties. However,
you can't _interpret_ the Dublin Core "author" property without
at least some of the context of Dublin Core; e.g., its framework for
establishing author, publisher, creator, editor, songwriter, performer,
contributor, quoted source, translator and the relationship of those
to the date of publication, authorship, first performance, translation,
language, etc.
Even when properties stand alone, their definitions don't.
Thus, schemas. A registry of properties alone is like a book
index without the text it indexes: enough to tell you terms
were used, but not enough to understand the meaning.
Larry
