My proposal has gratifyingly generated some responses.
(I would point out: this is isn't a clear-cut issue for me -- I am seeing
some potent arguments for explicit support for some form of anonymous
resources in the model/abstract syntax. But, I feel I must continue to
play devil's advocate here to push down to the minimum requirements that
must be supported/specified. Otherwise, I fear that we could end up with a
whole load of baggage that really doesn't belong in the RDF core.)
I include below a summary of the responses I have noted to date.
In summary, the arguments _for_ anonymous resources in the model/abstract
syntax are:
(a) difficulty of creating globally unique genids
(b) capturing semantics needed to express queries
Are there more?
To my mind, the most potent reason raised in response to my proposal for
supporting anonymous resources (or similar) in the model is the difficulty
and complexity of reliably generating a unique identifier, and the
implications this has when combining RDF graphs. This represents a
difficulty in dealing with M&amp;S as currently defined and used.
The other case that has been strongly argued is the requirement for
variables in a query. While I can see the utility of what is being
proposed, I have two problems with this:
(a) I don't see anything in M&amp;S that sanctions the idea of query
variables: as such, this proposal seems to be a significant extension
rather than clarification of the current M&amp;S that we are chartered to
do. (I'm not claiming this means that the query issue should not be
addressed, but that we must be clear why and how far we might pursue it.)
(b) I have a concern that anonymous resources are not exactly the right
hook for attaching the query variable problem. A query requires that one
can distinguish between known and unknown values in the query expression,
and anonymous resources can provide that distinction. But when we take it
to a different context, it seems that a very different interpretation of
the anonymity may be desired.
I find myself wondering if support for some kind of scoped identifier
wouldn't address both of the goals raised. This would be in contrast to
URIs which are, by design, globally scoped and bound to specific
resources. I don't know if the semantics could play out simply yet
sufficiently flexible to handle these goals. I think this, too, would be a
clear extension to M&amp;S.
#g
Summary of responses to anonymous resource proposal at
Aaron: [11-Jul-2001 12:47:33-0500]
(a) Is OK that triples can contain anonymous entries, but not with a new
anonymous resource type.
(b) thinks genID algorithm should be specified.
Sergey: [11-Jul-2001 14:26:07-0800]
Agrees with Aaron about genID algorithm.
Jos: [12-Jul-2001 12:17:24+0100]
Thinks that anaonymous resources have NO name; cites empty circles.
Ron: [11-Jul-2001 20:33:47-0700]
Agrees with Aaron about (a), but "predefined" genIDs would be nice, not
essential:
I'd be happy with a non-normative convention suggesting how
the IDs should be generated. I don't want it to be a MUST
in the clarified spec.
DanC: [12-Jul-2001 02:02:51-0500]
Strongly feels anonymous resources must be represented in the model.
Jan: [12-Jul-2001 10:36:54+0100]
Anon resources are needed in the model.
Jos: [12-Jul-2001 12:28:51+0100]
Agrees with DanC.
DanBri: [12-Jul-2001 07:29:33-0400]
Warning about possible problems of generating same URI for same text in
different context. Gives an example with a relative URI.
StefanK [non-WG comment, posted to RDF-IG, 12-Jul-2001 09:38:28+0200]
Thinks that forcing a system to invent names will cause problems.
1. An important application of RDF is the join of RDF graphs:
By now named resources (with identical URI) are glued together,
but anonymous are not. Please don't change this.
and
2.1 I don't think there exists an algorithm that fulfills
the requirement of your 'essential property of a unique URI'
you mentioned above.
Jan: [12 Jul 2001 14:19:28 +0100]
Cites an earlier analysis, claiming it shows why anonymous resources are
needed in the model. http://ioctl.org/rdf/discuss/anonymous#Complications
Graham Klyne
(GK@ACM.ORG)
I notice you didn't say "has generated some gratifying responses" :-)
snip
Actually, I think the main (and fundamental) argument for anonymous
resources in the model/abstract syntax is to support, in the
model/abstract syntax, the capability described in the current M&amp;S for
talking about resources that don't have URIs (that you know of),
e.g.(P41):
"The individual whose name is Ora Lassila, email lassila@w3.org , is
the creator of http://www.w3.org/Home/Lassila."
the graph for which shows a resource *without a URI*.
That is, the current M&amp;S says we can express this in RDF. I interpret
this as meaning that the model/abstract syntax must be capable of
expressing this, not just the XML serialization. It seems to me, then,
that the choice is whether to (a) explicitly support anonymous resources
as something other than resources with generated URIs; (b) clarify this
part of the spec by saying we really have to generate a URI in this case
(and have the graph show a *generated* URI, not *no* URI); (c) delete
this capability from the spec. This isn't strictly about either (a) the
difficulty of creating globally unique genids (although this may be an
obstacle to doing my case (b) above) or (b) capturing semantics needed
to express queries. [Note: my case (a) doesn't preclude generating
internal identifiers; it just precludes them being considered the same
as URIs (e.g., they might only have local scope); if we're going to
insist that they be generated *URIs*, that's my case (b).]
I agree (and have said so before) with a translation into logic (which
Dan has referenced) that views these as existentially quantified
variables, i.e., the above example becomes:
"There exists a [resource] x such that name(x, Ora Lassila) and
email(x,lassila@w3.org) and creator(http://www.w3.org/Home/Lassila, x)"
[I *don't* agree that this has anything to do with queries; the
interpretation of an existentially quantified variable in a logical
assertion, as above, isn't the same as the interpretation of a variable
to be bound in a query expression, in my opinion].
I think this reference to scope is an important point, since variables
in logic aren't usually interpreted as having universal scope (or as
being quite the same as explicit names). If we take the logical
interpretation
"There exists a [resource] x such that name(x, Ora Lassila) and
email(x,lassila@w3.org) and creator(http://www.w3.org/Home/Lassila, x)"
and look at just the variable "x", it certainly isn't intended to have
any universal scope (as a URI is intended to have). You can easily
imagine several people independently making the same assertion, but
using different variables. It happens in logic all the time (e.g., in
different knowledge bases). From the variables alone, it wouldn't be a
good idea to draw any conclusions about whether these people were
talking about the same thing, or different things (as you would need to
do in merging the RDF from these different sources). You'd have to make
that judgement on other grounds.
(It might help to consider a more ambiguous example:
"There exists a [resource] x such that name(x, John Smith) and age(x,
24) and sex(x, male)"
Suppose you saw this at two different Web sites. Would you be very
certain they were talking about the same guy? Suppose you saw this at
one Web site, and
"There exists a [resource] y such that name(y, John Smith) and age(y,
24) and sex(y, male)"
at another. Would you be very certain they were talking about
*different* guys?)
The variables in these cases can be considered as generated identifiers
(since in the original formulation of the RDF we didn't state them
explicitly), but they aren't URIs. The case for a distinct
representation for anonymous variables is at least partly based on the
desire to distinguish between things that need have only local
identifiers and things that need to have globally unique identifiers.
--Frank
Frank Manola The MITRE Corporation
202 Burlington Road, MS A345 Bedford, MA 01730-1420
Thank you for raising this, which should have been mentioned explicitly in
my summary.
I overlooked this because I had it in mind that this was really just a
syntactic issue, adequately addressed by allocation of a unique
identifier. But, as you say, it is something that is explicitly discussed
in M&amp;S.
However, it is not clear to me that this is a requirement on the abstract
syntax: the graph (graphical representation) that you mentioned is, in my
view, another possible surface syntax for RDF, and not one which is really
amenable to being used as a basis for attaching semantics. Thus, I think
it is reasonable to view this case as a counterpart to the XML syntax for
an anynomous resource, where the user may, as a convenience, omit any form
of identification of the resource.
If a parser can then allocate a unique identifier for this resource, there
is no need to represent this specially in the abstract syntax. This seems
to me to be the same as happens in Skolemization (absent universal
quantification), which is consistent with interpretation as existentially
quantified.
I think this is all consistent with what you say...
If we can all agree that queries don't figure (directly) in the problem to
be addressed, then that matter can be deferred, then we can focus on the
abstract syntax representation of the existential quantification:
(a) by some distinct representation of the existentially quantified
resource; a name with localized scope seems to be a popular option.
(b) by generation of a unique URI -- effectively Skolemization
which are the same as your cases (a) and (b) above.
For completeness: nobody, to my knowledge, has argued for changing the
spec per your (c).
With (b) there is the problem of generating a unique identifier, mentioned
previously.
I can appreciate the appeal (a), but I think it does bring some significant
complications of its own: how to avoid "interference" between such
resources when RDF graphs are combined. Two approaches come to mind:
(1) selective update of identifiers so that they remain unique in the
enlarged graph
(2) explicit representation of the scope of each identifier
Maybe there are others?
Finally, I note that DanC has claimed that cases (a) and (b) don't always
represent the same information. In an off-list message, Pat Hayes gave an
assessment of this which I found particularly clear, and would like to
repeat here (with permission):
Also, a lot turns on who is doing the skolemizing. The issue we started
with was whether Dan asserting an existential had the same content as Dan
asserting a skolemised form with a gensym. Answer: yes. They aren't
strictly, logically, *equivalent* on a technicality, since the gensym is
written a different logical language with a new name in it, but they
contain the same information and essentially the same conclusions can be
drawn from them. (Strictly: any conclusion that doesnt use the gensym name
itself can be drawn equally well from either version.) If all you know
about 'genid:xyzzy' is some sentence that I send you, then all you really
know is (exists (?x)( my sentence with' ?x' instead of 'genid:xyzzy' )),
and in fact that is all you can infer, apart from such dumb-ass things as
(= genid:xyzzy genid:xyzzy). Now of course you are free to generate
another genid of your own, and use that as a skolem form; but then you
could do that anyway, if I were to give you the existential. There really
isnt any inferential advantage to having the existential form over the
skolem form.
#g
Graham Klyne
(GK@ACM.ORG)
