For certain applications, it is important to be able to specify the order
of members of a collection. For example, a compound document made of
pages wants a well defined order of the pages.
The spec says nothing whatsoever about the order of members when one does
an INDEX. It should say something, even if what it says is "no promises".
I would like to have ordered collections, but I can appreciate that in the
interests of simplicity you might not want to support this. If there is
interest in extending the spec to support ordered collections, I would be
happy to write up some ideas about how to do it. Basically, I'd suggest
adding headers to PUT and ADDREF allowing you to specify the URI of a
resource that the resource being added is to come either after or before.
I would not propose any method for re-ordering collections at this time.
I have what I hope is a set of simple questions.
Given: a typical webpage with text and inline graphics.
Is it "a compound document" by default or must it be declared as such??
Before anyone answers, let me further ask
a. suppose I want to edit/replace one of the graphics. Under
the WEBDAV protocol, do I request/lock just the graphic?
a1. If yes, does this also request/lock the document containing it?
a2. If no, what happens when someone requests the enclosing doc?
b. suppose the graphic in question is referenced by more than one
document (like a background, or "line" glyph).
b1. Does my having "checked it out" affect requests to any or all
of the documents which reference it?
Howard S. Modell
Adv.Computing Technologist/2 POBox 3707, m/s 4A-25, Boeing D&amp;SG
howard.s.modell@boeing.com Seattle, WA 98124-2207
I don't think DAV has any concept of "compound document". There is nothing
to declare. You might store the page and its graphics in a collection,
but that says nothing about the relationship amongst the pieces. And it
has nothing to do with the topic of whether collections might have an
optional order.
As for your other questions, I am no expert but here's my answers. If I am
wrong someone will correct me.
Yes. No need to lock the others.
No. If you lock a member, the other members remain unlocked.
Requests, as in GET? The spec says that GET is entirely unaffected by
LOCK. This should answer the remaining questions as well.
