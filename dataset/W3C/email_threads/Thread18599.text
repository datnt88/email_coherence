IMHO a note is simply that. Its 'appearance' as being
at the foot, head or side is immaterial.
It _is_ very useful, but its representation as boxed text,
collated notes at the end of the chapter, at the foot of each
page or screen etc. is (should be) down to the individual
reader. I would support the use of note as a couger
element, then leave the rendering of such to the style
sheet. A visually impaired readers requirement is
very different to a reader on screen. Default it, but
permit it.
Is html4 fixed in concrete?
quote his feature wasn't considered sufficiently valuable by
vendors /quote seems a poor reason to ignore something
in regular use for the last couple of hundred years.
I would support such an addition.
Dave Pawson
No - but nearly so.
But in the case of notes, isn't it ok to use:
p class=note this is a note
or perhaps
div class=node ...
Regards,
-- Dave Raggett dsr@w3.org http://www.w3.org/People/Raggett
World Wide Web Consortium (on assignment from HP Labs)
This approach should be feasible, provided that several problems can be
resolved. Firstly, in the case of footnotes or end notes, there is a
reference mark, whether it be a number, a letter, an asterisk or another
character, which appears at a particular point in the text to refer to the
note. A means of automatically generating these markers (for example, by
automatically numbering footnotes) should be provided. This would probably
be more important when documents are printed, since in that case the
standard layout of pages (with footnotes or end notes) should be retained.
The problem is what to place inside the content of the anchor which refers
to the note, if automatic numbering is desired. This would presumably need
to be accomplished by a combination of markup and style sheet mechanisms.
Secondly, style sheet properties should be defined to control the
placement of notes.
Jaysen--
Why is the issue of how notes are numbered a special access issue?
Using P class = note mumble /P
or
more generally DIV class = sidebar foo bar and var /DIV
and leaving it to the stylesheet to decide how that is rendered is the clean
way to do it, and there is nothing "accessibility specific" involved to
discuss as far as I can tell.
As a thumb rule, it's important to design accessibility solutions using the
framework and machinery that is invented to build and implement general
features --CSS is one such mechanism--
and the above has the greatest chance of success since it is likely to get
implemented for the general user anyway.
This said, then the only issue remains
"how do specific stylesheet instances deal with
creating effective presentations of the material"?
That is a question for the person designing the user agent --and not a
"decision by committee" item.
In this case, the "designer of the user agent"
will end up translating to "the person designing the braille or audio
stylesheet".
So now you can factor the problem down to:
what mechanisms does the Braille stylesheet need to provide a presentation of
the note in Braille.
Since Braille is a two-dimensional random-access physical layout, I consider
it similar in many respects to the visual layout--
modulo the fact that things wrap differently in Braille as a consequence of
Braille taking up more physical space--
this said, there should be very few Braille-specific demands on the
style-sheet specification--
what is required is a good implementation of a well-designed Braille
stylesheet.
Said differently, the CSS spec will probably be minimally impacted;
however, attempting to take a visual stylesheet and mapping that one to one to
Braille will probably produce bad/unusable Braille.
So in summary, let's keep the technical work focused at where the work is
necessary, rather than discussing general mechanisms for creating notes
--those general mechanimss are worked on
from the point of view of the general user --a good thing from our
perspective.
Best Regards,
--raman
as representative of my employer, Adobe Systems Inc.
I concur completely with T.V. Raman's assertion that once a mechanism for
marking up notes has been defined, and the required style sheet properties
have been established to control their presentation in the print medium,
all that may be needed for purposes of accessibility is an additional set
of style properties to ensure that braille and audio formatting of notes
can be successfully effected. I also agree that any continued discussion
of general note markup would amount to straying too far from the topic of
accessibility. It should be recognised, however, that the availability of
a convenient method of representing notes in HTML is arguably a greater
priority for people with print disabilities, given the movement by the
International Committee for Accessible Document Design toward HTML as the
standard format in which text books and other academic and technical
materials are to be made accessible. Consequently, it is legitimate to
raise this issue in the context of the WAI, just as it has likewise been
deemed appropriate to address the need for print page indicators, which
also arises from ICADD involvement.
Fine if you don't support the use of notes.
Processing the SGML based on characteristics
is one thing, but is forcing an issue.
A preferable solution is to introduce notes as
an element, which may then be processed to
canvass as any other element, in the way
best suited to user needs.
Lets recognise a kludge when we see it.
How to feed back into html wg to support it?
DaveP
to follow up on what T. V. Raman said:
This issue is not unique to the visually-impaired user group, but
it is special for them because they are closer the edge and are
more likely to be materially hurt by its absence.
I got the PDF version of the HTML 4.0 document and it is very
hard to use as a reference because there are no page numbers in
the table of contents and no section numbers for the element and
attribute indices to refer to. Basically useless for anything
except a cover-to-cover serial read. Bummer!
This will be fixed by the printing-control capabilities of CSS2,
I hear [maybe]. We need to let people know that blind users
care about this capability.
Just as the sighted often want to go to the low-tech output of a
laser printer for extended reading, the blind often want to
retreat to the comfort of being offline with just their favorite
screen reader and a flat ascii file. In any medium where the
links are not hot, some symbolic means of tracing the links has
to be introduced.
I agree that generic means should be used to supply this. But it
is still an accessibility issue because the visually impaired
want to add their vote to make sure that this works.
What is special about a note is not what is at the end of the
link but the relationship of what is at the end of the link to
what is at the start of the link. The link to a note is a
presumptively terminal branch in the text tree. Ninety-nine
times out of one hundred, the next action following on reading a
note is to return.
A natural encoding of this would be by CLASS attributes in
anchor elements similar to the REL attribute. [By the way, when
CLASS was introduced it should have recognized REL and REV as
pre-existing instances of the CLASS class.]
Actually, NOTE should also be a predefined CLASS of DIV since one
wants to be able to put in the HouseRules document a rule that
there shall always be a return link at the end of the NOTE in
hyper-capable media which turns into the page number of the
origin of the link-to-note in print. This is in the class of
content rules that govern HTML building blocks below the CSS
level.
Then serial numbering of link-to-note occurrences -- optionally
by class if multiple classes of notes have been defined -- in the
text can be done under stylesheet control.
I have seen textbooks that use multiple classes of references
much as in intelligent programming environments.
Al Gilman
