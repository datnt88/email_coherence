I have browsed our bugzilla today, trying to have a better picture at
which bugs we have associated with which target, and what we'd need to
do to move forward with check for at least a 0.6.5beta2.
As far as I can tell, except for bugs 297[1] and 300[2], there is no
open/new bug for this target, and most remaining bugs (quite a few, I
agree) have been pushed to 0.7.0.
[1] http://www.w3.org/Bugs/Public/show_bug.cgi?id=297
[2] http://www.w3.org/Bugs/Public/show_bug.cgi?id=300
Of these two, only 297 (config option to integrate better with system
catalog) may be hard to implement.
Then there is the issue of "fussy parsing", for which which I am not
certain we have reached a decision. But if we decide either to trash
the idea altogether or to make it non-default, I do not think it should
be very long to make the changes.
Given all of the above, I would like to go around the table for your
opinion on pushing the 0.6.5beta2 (as it is in its current state)
forward, even to a release state:
PRO: long awaited changes. Provided we take care of bug#297 and roll
out the current CVS version, 0.6.5 will reasonably be, if not
the_perfect_release, the usable, installable release, which is
something our current production version is lacking...
CON: that would be postponing to some future version many of the
changes requested during the beta1.
Timeline: I have to help Ville roll out checklink first, but once this
is done, I can probably focus on check. That means we could target a
date around our next monthly meeting.
Could everyone give their view on the topic?
Thanks.
olivier
Le mar 23/03/2004 ? 06:19, olivier Thereaux a ?crit :
I think making it non-default, with a call for feedback on the results
page when it is used by the requester would be a good first compromise.
I'm all for releasing a new beta, with a short deadline before going to
production.
Dom
Dominique Haza?l-Massieux - http://www.w3.org/People/Dom/
W3C/ERCIM
errors/warnings in fussy mode. If I've understood correctly, some
documents may be currently marked "not valid" even though technically
they are valid, and the reported issues are due to fussiness only. If
this is correct, perhaps add an explanation and never say "not valid" in
fussy mode? Apologies if this is already taken care of, I haven't
checked for a while.
Seconded.
I added a quick comment about this to Bugzilla.
checklink is almost there. I'll commit some cosmetic'ish changes
tonight and ping when done.
Precisely, that's where the complication comes from.
If you have a look at opensp's output when feeding it a document with
shorttags (otherwise valid)
24/03 15:19 ot@wasabi ~% cat SHORTTAG-test.html| onsgmls -wmin-tag -wfully-tagged -wrefc -wmissing-att-name
onsgmls: OSFD 0:2:6:E: NET-enabling start-tag requires SHORTTAG YES
onsgmls: OSFD 0:2:6:E: document type does not allow element "TITLE" here
onsgmls: OSFD 0:4:0:E: unclosed start-tag requires SHORTTAG YES
onsgmls: OSFD 0:4:0:E: document type does not allow element "UL" here
onsgmls: OSFD 0:4:34:W: empty end-tag
onsgmls: OSFD 0:5:20:E: no document element
If I understand onsgmls speak, that means even though the -w options
are supposed to add *warnings*, it actually spits out both errors and
warnings. Which means that, even if we are (were?) marking errors and
warnings differently, there would be no way for us to mark fussy-induced
warnings as such.
In other words, the options we have at this point are, I believe:
- make fussy mode optional and be happy with the fact tat it marks
documents as invalid. (+ s/lax/normal/ in the fussy mode note)
- remove fussy mode altogether (comment it out)
The latter is unfortunate, but so will be the rants of people pointing
out that the validator still marks valid documents as invalid (in this
particular mode).
olivier
regard, as far as I am concerned. Long before this "fussy" thingy has
been added to the W3C MarkUp Validator, actually. -wfully-tagged is not
of any use for the community as long as it complains about all table
elements without a tbody inside. -wmin-tag should certainly be the
default and rewrite its errors to warnings, see the WDG Validator.
I do not care much what happens on a port != 80, but I would like to
point out that I consider the beta highlighting behavior unusable, see
http://validator.w3.org:8001/check?uri=http://msdn.microsoft.com vs.
http://validator.w3.org:80/check?uri=http://msdn.microsoft.com .
"Parsing [url] in [****] mode"
"Result: [pass|fail] (approx. n messages)"
IF mode has extra warnings:
"Note: parsing in [mode] mode generates additional warnings
over and above technical validation errors."
If we term it pass/fail, we avoid that problem by not applying the
word valid or invalid to a document. Problem solved.
But I still think we need a sensible warnings mode.
onsgmls -wmin-tag (as used in Valet Web mode and htmlhelp "warnings")
is IMNSHO the most useful for most of our users (except Jukka).
Nick Kew
