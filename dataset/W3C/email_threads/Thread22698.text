The DOM 2 core spec. states: "DOM implementations in languages other than Java
or ECMAScript may choose bindings that are appropriate and natural for their
language and run time environment. For example, some systems may need to create
a Document2 class which inherits from Document and contains the new methods and
attributes."
Is an implementation in other languages than Java or ECMAScript still conformant
if totally different names are chosen? E.g. in C++ 'delete' is a keyword, so
MediaList's delete() method has to be renamed. Is it conformant to name it
'remove'? In Delphi it is common to use the expression 'count' instead of
'length' for the number of items in a list.
Dieter K?hler, M. A. - dieter.koehler@ppp.uni-bamberg.de
Mittlere Kaulberg 22, D-96049 Bamberg, +49(0)951-5190726
"http://www.philo.de/Philosophie-Seiten/": 1000+ Philosophie-Links
"http://www.philo.de/VirtualLibrary/14.de.htm": Deutsche Philo-Links
"http://www.philo.de/xml/": Open XML - XML-Komponenten f?r Delphi
I accidentally answered Dieter's question on the IG list rather than on the
public list, where he asked it. Reposting:
conformant
By our current definition, I think the answer is "yes, but this would fail
my own criteria for quality-of-implementation." Part of the goal of the DOM
is to minimize relearning as people move between implementations. That
implies that renaming should be absolutely minimized, and that idiomatic
compatabilty with the DOM spec is more important than idiomatic
comptability with other classes in the same system.
If there's a keyword conflict, I would recommend a minimal and systematic
change -- which means finding all the conflicts, then considering whether
there's a simple and obvious transformation that can be applied to those
names to resolve them.
If you really want both count() and length(), write both into your
implementation... but length() will be preferred by anyone who may want to
reapply their DOM code elsewhere.
Joe Kesselman / IBM Research
This issue was reported to the group during the CR period and fixed before
the PR. The method has been renamed to "deleteMedium".
See CSS-12 in
So, I guess the answer to your question is no. You should not rename this
method in your C++ bindings. ;-)
Philippe
