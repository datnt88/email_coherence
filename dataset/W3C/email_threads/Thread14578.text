Sorry I forgot the attachments. Note, when I have tested them a bit more, I will put them up on my site. then anyone can link to them to give the alternative renderings.
Had trouble sleeping, so I wrote some style sheets. (Doesn't everyone?)
These are my first contribution to the techniques.
In the aural style sheet I have tried to translate the semantic content that is normally visually represented to be represented in the aural presentation.
For example:
a.. In the aural style sheets the normal voice is male, but links are in a female voice,
b.. Emphasis, boldness, headings level etc are all represented by differing changes in stress and other such properties.
c.. Quotes, etc sound like they are coming from far away
d.. Abbreviations are spelled out
I think this could be an example also for a general technique/ principle. b Represent all content, not just the text. /b
The second CSS is for the color disabled, it makes the contrasts better, makes all link underlined, stuff like that.
Known bug - backgrounds are white, so if the text is set to white in an inline style change, then you have to put the mouse over the words to see them.
They need testing - if anyone on a screen reader cares to have a try.
I will put them up as freeware on Global Formats as soon as I get around to it (and can write clear install instructions).
How about em Represent all content, not just the text. /em :-)
Another good technique is not to use stylesheets to display hard data.
I n other words, don't do stuff like:-
a:before { content: "Link: "; }
Put that stuff in the document itself. IOW, "don't use stylesheets to
render structural and semantic information that should be contained in
the source."
Maybe hr / is therefore O.K., representing a "pause in the document"
rather than a horizontal rule? But they'd have to rename it...
Kindest Regards,
Sean B. Palmer
@prefix : http://webns.net/roughterms/ .
[ :name "Sean B. Palmer" ] :hasHomepage http://infomesh.net/sbp/ .
That's not "hard data" since the information is already contained
in the markup and accessible. (The presence of an A tag is
trivially easy to detect.) Thus the above really is "presentation"
more than "hard data".
ALSO, it is very important to make clear the distinction between
user CSS and author CSS. If you make a general rule, you can
VERY easily confuse people who learn, for example, the mantra that
"you shouldn't use stylesheets with content: in it."
That will mess them up if they are creating stylesheets designed to
be used by the user, as well as any case where the user is sent
a specifically tailored CSS file -- such as if they choose a
stylesheet from a set (a la the HWG's somewhat broken stylesheet
selector on aware.hwg.org) or if they are sent one based on their
device characteristics and preferences (a la the Edapta system from
Reef).
My caution here is that it's very easy to make "techniques" which
if they appear absolute can be misinterpreted. Remember that the
target audience for a techniques document is always "someone who
can't intrinsically figure out what to do from just reading
principles of accessibility" -- i.e. a "typical web user."
--Kynn
Kynn Bartlett kynn@reef.com
Technical Developer Liaison
Reef North America
Tel +1 949-567-7006
ACCESSIBILITY IS DYNAMIC. TAKE CONTROL.
Yes, it was just a terrible example as usual... how about:-
a.lsigpin:hover:after { content: " (off site link)"; }
Hmm, that's still a bad example, but there might be times when it is
important to know that a link goes off site. Then again, in that case,
it should be represented in the title="" attribute. Ugh, am I terrible
at examples, or what?
Agreed. You can do more or less whatever you want when you know the
output device. No one is going to tell you what to put in your own
personal U-CSS-sheet, or how accessible to make it!
Kindest Regards,
Sean B. Palmer
@prefix : http://webns.net/roughterms/ .
[ :name "Sean B. Palmer" ] :hasHomepage http://infomesh.net/sbp/ .
This is a good principle and _should be stated explicitly_ somewhere
in the CSS techniques.
As for "more or less whatever you want when you know the output
device", that's actually not true at all. ;) Designing _specific_
interfaces is often harder than designing _generic_ (fall-through,
"degrades gracefully", one-size-fits-all) interfaces.
--Kynn
Kynn Bartlett kynn@idyllmtn.com
