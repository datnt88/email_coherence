Hi, All!
The current XPath 2.0 filter calculates nodes sets using XPath expressions.
However, in some cases it's more simple (and natural) to select nodes sets
using XPointers language instead. I think that we can simply extend the
XPath 2.0
filter spec to allow this. The only change we need to do is to allow one
more
child dsig-xpath:XPointer of the "dsig-xpath:XPathType" type in
the dsigTransform element. The processing rules for this new child are
exactly
the same as for existing XPath element (of course, the expression is
evaluated as
XPointer expression).
This change will allow to mix XPath/XPointer expressions and should
simplify
the XPath transforms in some case.
For example:
This change is backward compatible and do not break any existing XPath 2
filter
implementations.
Aleksey Sanin
XML Security Library http://www.aleksey.com/xmlsec
Hi Aleksy,
Independent of the technical merit of the proposal, the spec is already
rather mature/baked. The Candidate Rec period formally ends today and I'm
trying to schedule the Proposed Rec review -- though vacation schedules are
tricky. So, for any new functionality, I'd want to hear *very* strong
consensus that this was essential; if so, does the change necessitate
recycling at Last Call, a new CR, a new namespace/identifier? And is the
delay worth it? (We're in that stage where even reasonable and modest
proposals have a very high bar to leap! smile/ )
On the technical issue, in your example I'm not sure why:
dsig-xpath:XPointer
Filter="subtract" xpointer(id('foo')) /dsig-xpath:XPath
is all that superior to:
dsig-xpath:XPath
Filter="subtract" id('foo') /dsig-xpath:XPath
There might be some more exotic expressions where it's a little easier, but
even so, I'm comfortable with a REQUIRED reliance upon a normative
reference to the XPath Recommendation; I'm less comfortable with a reliance
on the old (abandoned) XPointer Candidate REC, or the new Working Drafts.
(In fact, this is inappropriate going back to the maturity issue.)
* I will be on holiday the week of August 12th; I will try to return any
calls or emails received the following week.
Joseph Reagle Jr. http://www.w3.org/People/Reagle/
W3C Policy Analyst mailto:reagle@w3.org
IETF/W3C XML-Signature Co-Chair http://www.w3.org/Signature/
W3C XML Encryption Chair http://www.w3.org/Encryption/2001/
Hi, Joseph!
I found that using XPointers instead of XPath in case of XMLSec/LibXML
gives
about 10% validation time decrease for the sign-xfdl.xml file from the
XPath 2 filter
interop tests suite. So I thought that it'll be interesting to include
this functionality
into the spec. However, you gave a very good reason why this is a bad
idea right now.
May be it would be interesting to do it when new XPointer spec is ready.
With best regards,
Aleksey
