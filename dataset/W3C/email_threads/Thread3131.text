The thing is I'm not totally clear on exactly how rdfs:isDefinedBy should be
used.
The following excerpt comes from [1] :
rdfs:isDefinedBy is an instance of rdf:Property that is used to indicate a
resource
defining the subject resource. This property may be used to indicate an RDF
vocabulary in
which a resource is described.
What I want is a property that says 'concept X is a member of concept-scheme
Y'.
So I'm not sure if rdfs:isDefinedBy is appropriate?
P.s. I slept on it and now I'm tending towards option (3) - create a
subclass of skos:Concept for each concept scheme (mainly because of
consistency with DCQ).
Al.
[1] http://www.w3.org/TR/2004/REC-rdf-schema-20040210/#ch_isdefinedby
con cept
I'm missing something. Can you explain why (1) is ambiguous and misleading?
Cheers
Steve
----- Original Message -----
cept
Hi,
This is an outstanding issue, which needs to be resolved before an
SKOS-Core
1.0 release.
It is clear that it is necessary to have some way of stating that a
concept
is a member of a particular thesaurus (conceptual scheme). By what
mechanism do we do this?
Options:
1. Use rdfs:isDefinedBy
2. Create a new (more specific than rdfs:isDefinedBy) property e.g.
skos:inScheme
3. For each scheme (thesaurus) define a subclass of the skos:Concept
class
Argument:
(1) is not specific to this need, and overloading it could cause
confusion and ambiguity.
(2) is potentially easiest to understand.
(3) is more consistent with the qualified DC in RDF approach to
representing
subject schemes [1].
I'm tempted to go with (2) for now and add a property to SKOS-Core
skos:inScheme for the 1.0 release.
Any thoughts on choosing this option, or the name of the property
itself? (I didn't suggest something like skos:inThesaurus because
I'm trying to keep SKOS slightly more generic than just thesauri.)
Al.
[1] http://dublincore.org/documents/dcq-rdf-xml/
Right. That makes sense, although my allergic reaction to rdfs:isDefinedBy
is not as pronounced as yours :) I could live with it. But I agree that (3)
is elegant and useful.
Steve
Hi,
This is an outstanding issue, which needs to be resolved before an
1.0 release.
It is clear that it is necessary to have some way of stating that a
is a member of a particular thesaurus (conceptual scheme). By what
mechanism do we do this?
Options:
1. Use rdfs:isDefinedBy
2. Create a new (more specific than rdfs:isDefinedBy) property e.g.
skos:inScheme
3. For each scheme (thesaurus) define a subclass of the
Argument:
(1) is not specific to this need, and overloading it could cause
confusion and ambiguity.
(2) is potentially easiest to understand.
(3) is more consistent with the qualified DC in RDF approach to
Hmm. I prefer the idea of being able to say thhat a concept is a member of a
thesauraus or (the reason why I prefer this over the subclassing Concept
approach) of several thesauri.
One relevant use case here is the WWAAC thing which I will write about in a
minute as a trip report - where a handful of concepts are likely to find
their way into a number of different thesauri and it seems more useful not
to have lots and lots of "sameindividual things floating around to make the
system work.
Cheers
Chaals
Hi,
This is an outstanding issue, which needs to be resolved before an
1.0 release.
It is clear that it is necessary to have some way of stating that a
is a member of a particular thesaurus (conceptual scheme). By what
mechanism do we do this?
Options:
1. Use rdfs:isDefinedBy
2. Create a new (more specific than rdfs:isDefinedBy) property e.g.
skos:inScheme
3. For each scheme (thesaurus) define a subclass of the
Argument:
(1) is not specific to this need, and overloading it could cause
confusion and ambiguity.
(2) is potentially easiest to understand.
(3) is more consistent with the qualified DC in RDF approach to
Post: 21 Mitchell street, FOOTSCRAY Vic 3011, Australia or
W3C, 2004 Route des Lucioles, 06902 Sophia Antipolis Cedex, France
