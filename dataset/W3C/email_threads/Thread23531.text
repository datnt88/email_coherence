Hello,
These are comments for your DOM 3 Load and Save Proposed
Recommendation [1] to use as you see fit.
The document would benefit from adherence to a markup plan. Why
for example is "read only node" a link twice in one paragraph? Why in
LSParserFilter are Document and DOMImplementation not links (or marked
up) in "the owner Document and DOMImplementation objects exist"? Why is
Node marked up and capitalized sometimes and plain text others? Why is
External XML Entity capitalized and not marked up?
Load and Save section 1.3 says "The interface within this section
is considered fundamental, and must be fully implemented by all
conforming implementations of the DOM Load and Save module." Do you
mean all of the "interfaces" (a typo) within section 1.3? If you do,
then why does the introduction to section 1 say, "The functionality
specified in this section (the Load and Save functionality) is
sufficient to allow software developers and web script authors to load
and save XML content inside conforming products." Do you mean all of
the functionality specified in all of section 1?
Section 1.3 says a DOM application may or must do some things. If the
words may and must are meant in the RFC 2119 sense, then the document
should state so. Further, it should credit the RFC and make it a
normative reference. The Manual of Style has example markup [2]. If may
and must aren't used this way, then I would write an explanation of
what you do mean by them.
Statements like the following state requirements in different ways:
"is," "will be," "are expected to." So, I can't search for conformance
keywords (and really shouldn't have to). Maybe no one else would notice
but I think this is worth mentioning to see what you think.
- For all other types of nodes the serialized form is implementation
dependent.
- any occurrence of a character that cannot be represented in the output
character encoding is reported as a DOMError fatal error
- If inconsistencies are found, the serialized form of the document will
be altered to remove them.
- implementations are expected to raise implementation specific errors and
warnings
Maybe a section named "Conformance" would help Load and Save?
The rest of this note is minor editorial.
s/DOM Working Group members/DOM Working Group participants/
s/paramter/parameter/
s/web/Web/
s/The list of interfaces involved with the Loading and Saving of
XML documents is:/The interfaces involved with the loading and saving of
XML documents are:/
s/LSReader is NOT bound/LSReader is em not /em bound/
s/therefore as no recommended meaning/therefore has no recommended meaning/
s/parameters recognized in on/parameters recognized in/ (or on)
s/URN's/URNs/
In the TOCs and headings I would capitalize Interfaces and References.
These sentences were pretty long and could be shortened something like:
This specification does not attempt to define exactly when progress
events should be dispatched. That is intentionally left as
implementation-dependent. Here is one example of how an application
might dispatch progress events: Once the parser starts receiving
data, a progress event is dispatched to indicate that the parsing
starts. From there on, a progress event is dispatched for every
4096 bytes of data that is received and processed.
Same here:
This DOMConfiguration is specific to the parse operation. No
parameter values from this DOMConfiguration object are passed
automatically to the DOMConfiguration object on the Document that
is created, or used, by the parse operation.
The source document must be an XML fragment. A fragment is anything
except a complete XML document, a DOCTYPE (internal subset), entity
declaration(s), notation declaration(s), or XML or text
declaration(s). Note that a complete XML document with context node
of type DOCUMENT_NODE and action ACTION_REPLACE_CHILDREN is a
fragment.
The system identifier is optional if there is a byte stream, a
character stream, or string data. It is still useful to provide
one, since the application will use it to resolve any relative URIs
and can include it in error messages and warnings. (The LSParser
will only attempt to fetch the resource identified by the URI
reference if there is no other input available in the input
source.)
For XML [XML 1.0] resources (i.e. entities), applications must use
the value "http://www.w3.org/TR/REC-xml". For XML Schema [XML
Schema Part 1], applications must use the value
"http://www.w3.org/2001/XMLSchema".
The constants SHOW_ATTRIBUTE, SHOW_DOCUMENT, SHOW_DOCUMENT_TYPE,
SHOW_NOTATION, SHOW_ENTITY, and SHOW_DOCUMENT_FRAGMENT are
meaningless here. Those nodes will never be passed to
LSParserFilter.acceptNode.
[1] http://www.w3.org/TR/2004/PR-DOM-Level-3-LS-20040205/
[2] http://www.w3.org/2001/06/manual/#RFC
Best wishes for your project,
Susan Lesch http://www.w3.org/People/Lesch/
World Wide Web Consortium (W3C) http://www.w3.org/
That would be certainly nice but I don't think that someone is willing
to take the entire document and search for those. Document and
DOMImplementation are not linked because there are part of the Core and
the scripts don't generate automatic link between DOM modules.
Fixed.
Yes. The sentence you mentioned is just after the table of contents and
before the sub sections. I don't think changes are needed.
DOM specifications never used the RFC 2119 explicitly and this is
unfortunate The Manual of Style was published a long time after the
publication of the publication of DOM Level 2.
The conformance section for DOM Level 3 modules is included in the
introduction of DOM Level 3 Core, as noted in the introduction of
section 1.3. There is no need to repeat it across all DOM Modules.
done.
Not done, since a complete document is not a fragment. I kept the
current wording.
Philippe
To double check, and please pardon a layman's terminology. The
current wording is:
The source document must be an XML fragment, i.e. anything except a
complete XML document (except in the case where the context node of
type DOCUMENT_NODE, and the action is ACTION_REPLACE_CHILDREN), a
DOCTYPE (internal subset), entity declaration(s), notation
declaration(s), or XML or text declaration(s).
Because it is an exception to an exception, the latter case (a
"complete XML document" "where the context node of type DOCUMENT_NODE,
and the action is ACTION_REPLACE_CHILDREN") stays true. Or, put another
way: Within the set of "anything," there is a subset named "except"
containing complete XML documents, DOCTYPE, entity and notation
declaration(s), XML or text declarations. Then within the subset
"except" there is "(except in the case...)" that is called out as being
not excepted. So I think the way this reads, it must be a fragment.
Maybe though, the current wording is accurate and clear to those
familiar with the DOM. I trust it will be fine.
Thanks for the quick reply!
Susan Lesch http://www.w3.org/People/Lesch/
World Wide Web Consortium (W3C) http://www.w3.org/
