Noah,
I have incorporated the resolution to issue 221. In doing so I have
modified your proposed text as follows:
Original:
"Except in the special case of intermediaries (see below), envelopes
transmitted by SOAP senders MUST NOT contain PIs.
Receivers (including intermediaries) receiving an envelope with a PI
SHOULD fault with a XXXX fault. However, in the case where performance
considerations make it impractical for an intermediary to detect PIs in
a
message to be relayed, such intermediaries MAY leave the PIs unchanged
in
the relayed message."
New:
"SOAP messages sent by initial SOAP senders MUST NOT contain processing
instruction information items. SOAP receivers receiving a SOAP message
containing a processing instruction information item SHOULD generate a
SOAP fault with the Value of Code set to "env:Sender". However, in the
case where performance considerations make it impractical for an
intermediary to detect processing instruction information items in a
message to be relayed, such intermediaries MAY leave the processing
instruction information items unchanged in the relayed message."
The main changes were associated with use of terminology from section
1.4:
(i) envelope- message to make sure people don't think they can prefix
the envelope with a PIII since that is not 'in' the envelope
(ii) use of 'initial SOAP sender' instead of 'SOAP sender but not
intermediaries'
(iii) expansion of PI to processing instruction information item.
(iv) reference to sender fault made consistent with the rest of the
spec.
I hope you agree that the changes do not affect the semantics or
general spirit of the issue resolution. Please let me know if you
disapprove.
Regards,
Marc.
Marc Hadley marc.hadley@sun.com
XML Technology Center, Sun Microsystems.
I still find it bizarre, though, that
an intermediary must not insert a PI but
may relay one. This seems a little
inconsistent to me.
Why? I think the notion is that adding content is something that you do
very explicitly, so doing it wrong is just an error and is never excused.
The reason for allowing wiggle room at all is the thinking that relaying
someone else's content is something that you sometimes want to do in a
sort of black-box highly optimized manner. Think of a hardware or
microcode implementation that makes sure the role attributes don't match
the intermediary, then just cut-through streams the header until the
end-tag is matched. (Perhaps an over-simple example, but I think the
spirit is right.) There's no reason in the world that such an
intermediary should be granted license to _insert_ erroneous content.
So, I think the approach taken at the F2F is at least plausible, if not
necessarily ideal.
SOAP messages MUST not contain XML Processing instructions. Accordingly,
initial SOAP senders MUST NOT include processing instructions in a SOAP
message, and SOAP intermediaries MUST NOT insert into a SOAP message new
headers containing processing instructions.
An ultimate SOAP recevier that receives a message containing one or more
Processing Instructions MUST fault with a SENDER fault. A SOAP
intermediary receiving a message containing one or more Processing
Instructions SHOULD fault with a sender fault, but in situations where
performance considerations make such fault detection impractical at the
intermediary, the intermediary MAY instead retain the received Processing
Instructions in the relayed message. If the intermediary chooses not to
fault, it MUST retain all the Processing Instructions in the relayed
message (the intention being that a downstream intermediary or ultimate
receiver will eventually detect the error and fault).
The last sentence is an innovation, but I think it makes sense. Does the
above help?
Noah Mendelsohn Voice: 1-617-693-4036
One Rogers Street
Cambridge, MA 02142
[Adding Henrik back.]
Ok, makes sense.
Re. your new last sentence, I like the spirit, but wouldn't an
implication be that intermediairies can no longer remove headers
targeted to them, when they contain PIs? Isn't this in
contradiction with the processing model?
Jean-Jacques.
I still find it bizarre, though, that
an intermediary must not insert a PI but
may relay one. This seems a little
inconsistent to me.
