If we could use DOM to uncomment javascript code, it could lead to high
performance gains at the browser end. Let me elaborate.
function performAction()
use DOM to uncomment performActionCore();
performActionCore();
function performActionCore()
lots of JS coding, all commented
This would amount to implementing loading Javascript On-demand! Any furthur
thoughts??
I'm not sure I understand what you mean by "uncomment", and why it'd gain
you any performance.
As far as a DOM view of an HTML page is concerned, your example's all text
nodes. Removing the /**/ is entirely a string-processing operation, at this
level.
You might want to take a look at the Bean Scripting Framework (BSF),
available on www.alphaWorks.ibm.com. That's intended to be a fairly general
approach to invoking scripts on demand, in any of a variety of languages...
and javascript is one of those languages. Of course this requires that the
application recognize the text as a script and pass it to BSF for
evaluation.
Joe Kesselman / IBM Research
the problem is that the browser(at least IE) scans all imported javascript
code for finding syntax errors at the load time. this elongates the load
time unnecessarily. if the code is commented at load time, the page loads so
much faster
I'm not sure I understand what you mean by "uncomment", and why it'd gain
you any performance.
As far as a DOM view of an HTML page is concerned, your example's all text
nodes. Removing the /**/ is entirely a string-processing operation, at this
level.
You might want to take a look at the Bean Scripting Framework (BSF),
available on www.alphaWorks.ibm.com. That's intended to be a fairly general
approach to invoking scripts on demand, in any of a variety of languages...
and javascript is one of those languages. Of course this requires that the
application recognize the text as a script and pass it to BSF for
evaluation.
Joe Kesselman / IBM Research
so
I think you're going to have to take that up with IE. As I said, the DOM
considers the javascript to just be string content within the document. You
could probably write something that would process those strings to find and
strip out the comments, but I don't know if your browser would then
reprocess them and discover the Javascript.
Joe Kesselman / IBM Research
i found my solution-one has to use defer attribute in script tag.
so
I think you're going to have to take that up with IE. As I said, the DOM
considers the javascript to just be string content within the document. You
could probably write something that would process those strings to find and
strip out the comments, but I don't know if your browser would then
reprocess them and discover the Javascript.
Joe Kesselman / IBM Research
