Hello,
I think Kynn's and Marshall's points are very well made that we need clear
technology-specific checkpoints (or whatever we call them). I also think
that Charles'and Ian's points are well made that we do not want to break
old terminology.
Therefore, I'm trying to imagine how the technology-specific checkpoints
will fit in to the scheme of things. I have drafted some HTML-specific
checkpoints just to see how it works. Note that these are really, really
rough. This was a quick pass.
I know this is going in the opposite direction of where William is pushing
(to list only the principles and work from there) grin , but I am much
more involved in Techniques and technology-specifics these days. Thus, I
need to appease that this level will work in some way before only focusing
on principles, if in fact that is the best approach to take.
In the Guidelines document:
Guideline 1: Ensure that all content can be presented in any medium or
combination of media that may be required by the user.
Checkpoints:
1.1 Provide a textual equivalent for every non-text (auditory or graphical)
component or multimedia presentation.
In the HTML techniques document:
Checkpoint 1.1 Provide a textual equivalent for every non-text (auditory or
graphical) component or multimedia presentation.
In HTML this means:
1. Provide a short text equivalent via the "alt" attribute for every IMG
element or in the content of every OBJECT element used to embed an image.
2. Provide a description of important visual features via the "longdesc"
attribute for every complex IMG element or in the content of every OBJECT
element used to embed a complex image. [ugh, used complex]
3. Provide a text equivalent for every programmatic object embedded with
OBJECT, APPLET, or EMBED. Note that APPLET and EMBED are
deprecated. Refer to the sections on auditory descriptions, captions, and
making applets directly accessible.
4. Provide a text equivalent in the NOSCRIPT element for every scripting
object that is necessary to accessing the page. For example, if a rollover
only causes the appearance of a button to change, a text equivalent is not
necessary. However, if a rollover causes further information about a
button to display, a text equivalent is necessary.
5. Provide a link to a transcript for every audio file in the content of
the OBJECT element if OBJECT is used to embed the audio file, in a P
element if P is used to embed the audio file, in ...?? Refer to sections on
how and when to caption audio files.
6. etc etc etc
Examples and Discussion for Checkpoint 1.1 HTML 1
Examples and Discussion for Checkpoint 1.1 HTML 2
It would be easier to refer to the technology specifics if we had something
specific to call them. "Technology-specific checkpoints" seems long and it
is a new term. However, I would prefer to add a new term to what will
actually be new than renaming something that exists already.
In other words, I tend to agree that the proposed Principles are similar to
the current WCAG 1.0 Guidelines. Proposed Guidelines and WCAG 1.0
checkpoints also seem to have a similar feel. I believe that what is new
is the idea of technology-specific checks. I don't care so much what we
call them, but I agree that we do not want to break the old terminology.
Therefore, perhaps we could focus naming the newest layer. I propose
a. "Technology specific checkpoints" or
b. "HTML-specific checkpoints" then "CSS-specific checkpoints" etc. or
c. "HTML checks" "CSS checks" etc. or
d. "HTML tests" "CSS tests" etc.
thoughts?
--wendy
wendy a chisholm
world wide web consortium
web accessibility initiative
madison, wi usa
This is Wendy's strawman. I'll try to tell you what I like, and
also what I don't like.
I've always hated "Ensure". This is weak English construction
and doesn't stand alone. I'd rather we state things in a more
direct manner.
Also, I suggest that this guideline alone is absurd, as it
places illogical implications on what should be provided.
From reading that "guideline" I have no idea what is expected
of me, but it certainly sounds weighty. Apparently I have to
provide my context in video, sound files, pictures, foreign
languages, and more, even if I'm just making a normal text
page.
Right?
If rewritten this might be what I would consider a "Principle" and
could be included in a Principles document.
Is this checkable? Is it sufficient? I worry about the use of
"checkpoints" when clearly _this_ is not intended to be the thing
checked.
See, this is good, but _these_ are the actual checkpoint. The vague
"checkpoint" above is not a real checkpoint. It's not something
that you can check or not check, it's just a general rule to follow.
1. [...] 5.
Those are checkable, kinda.
BTW, something went wacky with your return key, I think, the rest
of this reads as one huge paragraph.
Examples and Discussion for Checkpoint 1.1 HTML 1 ... Examples and Discussion for Checkpoint 1.1 HTML 2 ... It would be easier to refer to the technology specifics if we had something specific to call them. "Technology-specific checkpoints" seems long and it is a new term. However, I would prefer to add a new term to what will actually be new than renaming something that exists already.
I agree that renaming or reusing terminology is bad.
In other words, I tend to agree that the proposed Principles are similar to the current WCAG 1.0 Guidelines.
Disagree on this. The Guidelines as such aren't really Principles,
they're a meta-step down in the hierarchy of ideas.
Therefore, perhaps we could focus naming the newest layer. I propose a. "Technology specific checkpoints" or b. "HTML-specific checkpoints" then "CSS-specific checkpoints" etc. or c. "HTML checks" "CSS checks" etc. or d. "HTML tests" "CSS tests" etc. thoughts?
Oh dear. Do now have at least 5 layers that we're talking about?
I think we need to consider everything as a whole -- and create
new terminology if necessary (without recycling old terms) --
and in that context it makes no sense to have both "checkpoints"
and something called " X check[points]".
In my opinion, before we start naming things, we need to define
things and come to a consensus on how many layers (and thus
complexity) we need to have, how many _documents_ we will produce,
and what each one should consist of. Then we can launch into
terminology.
Kynn Bartlett kynn@idyllmtn.com http://kynn.com/
Director of Accessibility, Edapta http://www.edapta.com/
Chief Technologist, Idyll Mountain Internet http://www.idyllmtn.com/
AWARE Center Director http://www.awarecenter.org/
Vote for Liz for N. Am. ICANN Nominee! http://kynn.com/+icann
Hi,
Even though I haven't had a chance to read the WCAG 2.0 draft in
detail yet, I've been reading this discussion with some concern.
As someone who tend to read document thinking how it would be
translated, I agree with Wendy's comment.
It is preferrable that terms that have been widely used and accepted
should remain being used in similar way. I believe changing the
meaning of already-used terms si more difficult than introducing new
notion and associated terms. Similarly, changing what to call
concepts which already is widely accepted isn't so easy.
I can't come up with a good name to call the newest layer, but from
Wendy's four proposals, b. seems good for the ease of translation.
Max
WC:: "I know this is going in the opposite direction of where William is
pushing (to list only the principles and work from there)"
WL: William doesn't want to not do techniques/examples/checkpoints or
even guidelines. He just thinks that most of what needs doing with those
things has been done fairly well despite all the swirling. What William
wants (not that it matters much) is to work on the part that: 1) has
received mostly "intro text" type treatment; 2) was one thing we spoke
of doing for new guidelines - provide something more general/abstract so
that it could be normative and allow the other stuff to focus on what
Kynn feels is the meat of the matter. I (speaking only for myself, not
for the senior citizen lobby) don't think the techniques are all that
opaque and if there were a way to get to them without downloading an
entire encyclopedia of disclaimers, copyright notices, etc. would
probably be quite useful to the poor overstressed Web designer who just
wants to find out how to make the damn government happy with the
accessiblity aspect of his creation. There's even example code in there
folks, and if we keep at it there will be pointers to examples of sites
(or portions thereof) that exemplify the "how" of all this stuff. Much
of that still needs doing and organizing and editing and testing and...
but IMO we still need to have some resounding perpetual truths writ
large that say what all this is *really* for.
Maybe Kynn's concerns are well-placed and we are calling for a simple
text site to be accessible by lots of media means. I don't read it that
way. I just don't think you have to have a captioned, text-described,
sound movie with everything you present. If the language states
(implies?) that, it needs changing. I think that's the other side of the
coin that rails agains "dumbing down" one's "cool" site so that a bunch
of cripples can read it. Neither view is accurate.
There's a lot to do and perhaps by Bristol time we'll have cooled out
enough to have a plan for doing it. Most of it is editing what we've
got.
So "What William Thinks" (in his irreverent pomposity) is that one of
the things we need address is what Jason quite nicely labeled
"Principles". Not at the expense of "how-to"s or with the aim of
upsetting our well-established guideline/checkpoint terminology, but
just to generalize and abstract things nicely. I prefer brevity but if
tersifying leads to obscuration, get long!
Love.
ACCESSIBILITY IS RIGHT - NOT PRIVILEGE
