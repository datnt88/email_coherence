Per today's teleconference, these are the questions that I feel need to be
answered to resolve issue #rdfms-identity-anon-resources [1].
1. Does the current model and syntax spec sanction the use of an anonymous
resource to convey anything other than an assertion of the existence of a
resource with the properties given? c.f. Frank Manola's comment in
[2]. See also Brian McBride's survey of relevant parts of M&amp;S [3].
2. Does the use of an anonymous resource as a query variable represent an
extension to the idea an assertion of the existence of a resource with the
properties given? Opinions vary: e.g. [4-9].
3 If the answer to Q1 is "no" and to Q2 is "yes", should we undertake to
extend M&amp;S to allow this usage? If so, why and how?
4. Can we agree whether or not unique generated IDs (in the style of Skolem
constants) are equivalent to existentially quantified variables for the
purpose of asserting the existence of a resource with properties
given? (See Frank's message [10] for a discussion -- I discount the option
of dropping anonymous resources.)
If we agree they are equivalent:
4.1 What are the advantages and difficulties with each approach?
4.2 Which approach do we prefer?
4.3 How does the preferred approach affect M&amp;S?
5. Are there any other uses of anonymous resources that have been overlooked?
#g
[1] http://www.w3.org/2000/03/rdf-tracking/#rdfms-identity-anon-resources
[2] http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jul/0124.html
[3] http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jul/0244.html
Opinions on representation of query variables:
[4] Dan
C: http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jun/0435.html
[5] Pat
H: http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jun/0543.html
[6] Pat
H: http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jun/0518.html
[7] Dan
C: http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jun/0537.html
[8]
Frank: http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jun/0538.html
[9]
Frank: http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jun/0559.html
[10] http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jul/0218.html
Graham Klyne
(GK@ACM.ORG)
This is the key question. I suggest we have established the following
differences between a resource named by a URI and a resource identified
by a quantified variable:
o scope: An application given a resource identified by a URI
can reasonably expect to pass that URI to other applications and
that they should be able to recognise it - c.f. my example
on seeking references about a service offered in response to an ad.
If the response includes a reference to a service identified by
a URI, the receiver could reasonably pass that URI to reference
service to seek a credit/quality reference for that service.
There is no point doing that for a variable.
o binding: An application given a resource identified by a URI
can assume that URI denotes a specific resource - the
binding decision has been made - an existentially quantified
variable has not been bound to a specific resource.
o provenance: when a source of rdf states some properties about
a resource named by a URI it is making assertions that the
resource named by that URI has those properties. when a source
of rdf states properties about a variable, it is making no
assertions about the name of that resource.
Brian
Agreed.
I think the assumption that the URI denotes a specific resource is somewhat
empty if one has no other knowledge about the resource thus denoted. As
Pat pointed out, in this situation you can do no more than infer that such
a resource exists.
The detailed form of the argument here depends a bit on whether one assumes
that URIs:resources are 1:1, or if several URIs can identify the same
resource. But either way I assert that two URIs can ultimately refer to
the same thing in the domain of interpretation. Thus, assertions about a
resource named by a uniquely-generated URI MAY be referring to a resource
that is elsewhere known by a specified URI. This seems to be the same as
information that one has about a resource identified by a variable.
#g
Graham Klyne Baltimore Technologies
Strategic Research Content Security Group
If I use that resource twice, in one case I'd expect to use the same resource
twice, in the other, I could not have that expectation.
A sends signed rdf containing anon node to B. It matters whether A or B
generates the URI. If B generates it, A has not signed that name- resource
mapping.
Brian
I think this is wrong on several grounds. First, there is not in
general any way to 'identify' the resource denoted by a URI. If I am
given a URI then I may or may not be able to discover what resource
it was intended to identify, but there is no general presumption that
this can always be done. Second, while of course the other
application can recognise the URI in the sense that they know where
it comes from, there is no general presumption that they can
'identify' what it denotes, ie discover exactly what resource that
was supposed to be. In many cases this may be possible (eg it will be
for URL's presumably), but not in general.
I disagree. What do you mean by 'binding' here? There doesnt seem to
be any reasonable sense of binding for a URI. Certainly there isnt
any way to bind a URI to the resource it denotes, in general (cf
rt#33
"A resource may also be an object that is not directly accessible via
the Web; e.g. a printed book. ..... Anything can have a URI; the
extensibility of URIs allows the introduction of identifiers for any
entity imaginable."
In both cases, it is making assertions about some thing, ie some
resource. The use of the URI may enable the receiver to connect the
assertions made by the source to other assertions (perhaps made by
other sources) about the same thing, made by using the same URI. That
is the only sense in which a URI can be said to 'name' anything.
It isnt clear to me what the scope of anonymous node is intended to
be, but it if it is the document containing the node, then indeed it
should be impossible for any other source to say anything about the
thing it refers to, so this is a genuine difference. However, the
same is true of a non-anonymous URI if its use is restricted to this
one source.
Pat
(650)859 6569 w
(650)494 3973 h (until September)
phayes@ai.uwf.edu
Right. In general, people shouldnt ever transfer other people's
signatures to names they invent, and certainly not without checking
with the signer first (in which case they can sign the new name.)
There ought to be a law about it. In fact, maybe there is a law about
it.
Pat
(650)859 6569 w
(650)494 3973 h (until September)
phayes@ai.uwf.edu
Yes I agree that it can't always be done. With an anonymous resource it
can never be done. With a URI it can sometimes be done. That is a
difference and it may be significant to an application.
They may have some information about it, e.g. reference service.
I mean that the mapping from the URI to the resource it identifies has
been defined.
see above.
We seem to have different notions of binding.
If I can tell that the scope of such a URI is so limited, then I think
I might be happy with that - so long as I can tell such URI's from those
those are not so limited.
Brian
(When you say "If I use that resource twice" I assume you mean "use that
URI twice"?)
Indeed. This is something that using a locally quantified variable name or
a skolem-constant-like-name makes possible that is not possible using
un-named resources. In the XML syntax, several statements may be
syntactically grouped to refer to the same un-named resource. When
translated to (say) N-triples that syntactic grouping is no longer
available so some form of identifier must be provided. Obvious stuff, maybe.
I think that, either way (i.e. using an existentially quantified variable
or a skolem-constant-like identifier), generated identifiers from different
documents (or unrelated parts of the same document) cannot be assumed to be
the same resource though the possibility of them refering to the same thing
cannot be excluded. I.e. we don't know if they're the same or different by
virtue of the form of labelling used.
Indeed, but what's in the name? The signature provides some assurance
about some entity that is denoted by a named used in the signed
document. The signature value itself depends on the name used, but the
assurances conveyed do not.
I see three possible cases:
(a) Signature over a document containing a locally scoped variable
(b) Signature over a document containing a generated URI about which we are
guaranteed to have no other information.
(c) Signature over a document containing an elsewhere-defined URI about
which we may have some other information.
I think the assurance conveyed by the signature in cases (a) and (b) is
indistinguishable. In all cases, the name-to-some-resource binding *is*
signed, but only in case (c) may we have any additional knowledge of the
bound resource.
#g
Graham Klyne Baltimore Technologies
Strategic Research Content Security Group
I've been thinking recently about encoding inference rules in RDF, where a
rule may have a variable that is scoped by the rule; e.g.
Dog(?x) - Animal(?x)
Originally, I was thinking that, when encoding this in RDF the variable
represented by ?x must somehow be scoped within the RDF. But when I
started looking at candidate RDF encodings this need for scoping just melts
away: the variable is represented by a new, unique resource: that
resource has global scope (and, hence, if it has a URI it is one that is
not shared by any other resource). The only place where the concept of
scope is needed is in the original expression. Some other expression; e.g.
Cat(?x) - Animal(?x)
Has a different scope for its ?x, but the resource that represents the
variable in the encoding of this is a different resource than the one that
represents ?x in the previous example.
From this exercise, I tentatively suggest that the scope of any resource
(node) is global -- the entire universe of discourse.
(I'm trying to be clear that this is an encoding of inference rules in RDF,
not an attempt to make inference rules part of RDF.)
#g
Graham Klyne Baltimore Technologies
Strategic Research Content Security Group
I think not.
I think this is an extension to the idea of expressing existence.
I think such extension would have far deeper ramifications than we can
currently see; e.g. maybe requiring introduction of universally quantified
variables. I am also thinking there is a possible relationship with
use-without-assertion of RDF statements, which is currently a murky area.
My (tentative) answer, then, would be no, don't try and do this now (but
note the issue for further exploration in RDF V2.0.
At the level of making simple assertions using the existential-conjunctive
subset of FOL, I think they are equivalent. But I'm not sure there won't
be future developments of RDF that might expose subtle differences.
I lean toward having a special "variable name" form along the lines of
_:genid, for two reasons:
(a) it's easier, more compact and ultimately more dependable then trying to
generate unique identifiers. (Unique identifier algorithms are statistical
rather than definite in their performance. And the statistics aren't
always as favourable as one might expect: see, e.g., appendix A of RFC 2938.)
(b) it seems possible that differences will emerge if future developments
extend the logical capabilities of RDF.
I think that the variable name form would (for now) behave like a URI in
most respects, except one.
Assuming an operation that takes two independent N-triple expressions (=
set/bag of statements) and combines them into a single N-triple expression
containing all of the statements from each, names of the special form are
changed/reassigned so that they are unique in the new expression; this
description needs tightening up to maybe something like:
(1) two variables are DISTINCT if:
(a) they have different names, OR
(b) they appear in different N-triples expressions
(2) when combining two N-triples expressions into a single expression, all
variables are assigned arbitrary names (which may be the same as their
original names) such that DISTINCT variables always have different names in
the resulting expression.
By this approach, the variables are maintained with distinguishable forms,
but may be treated equivalently for the purposes of the model
theory. Processing of such variables is a syntactic operation on N-triples
expressions.
I see none that are consistent with my understanding of the expressive
capability of RDF 1.0.
#g
Graham Klyne Baltimore Technologies
Strategic Research Content Security Group
OK, you have left me behind already. I don't see any way to get
anything remotely like that into RDF. I presume this is supposed to
mean that for any ?x, if it is a dog then it is an animal, right? How
do we encode universal quantifiers in an exist-conj logic like RDF?
??? Wait. Resources are the things in the world, the things that are
denoted by URI's, right? One doesnt get quantification by putting
variables into the *domain* (whatever that means: I'm not sure what
it means, to be honest. )
Well, I think I follow your point, and indeed one can do something
like this in conventional logic, where its often called
'standardizing apart', ie no variable name is ever used twice, so
there is no risk of getting them confused. But (1) it is unworkable
in practice, and (2) you still need some way to indicate, or
determine, the scopes. For example, consider the difference between
foo &amp; (cat(?x) - animal(?x) )
and
(foo &amp; cat(?x)) - animal(?x)
Maybe this is my problem. I'm not sure what this distinction amounts
to. RDF has a 'meaning' already, so how does one get its meaning
changed so it can do this encoding for you?
Pat Hayes
(650)859 6569 w
(650)494 3973 h (until September)
phayes@ai.uwf.edu
Pat,
I think this discussion harks back to an earlier one, about creating a new
language with core RDF as a subset (except, possibly, for some special
properties that are not available for the normal interpretation).
I think this is probably getting out of scope for this forum, but I'd love
to have a "corridor/bar discussion" with you about this in Stanford/Sebastopol.
#g
resource (node) is global -- the entire universe of discourse.
Graham Klyne Baltimore Technologies
Strategic Research Content Security Group
