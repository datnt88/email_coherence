The first sentence of the second paragraph of section 4 reads: "A redirect
reference resource never automatically forwards requests to its target
resource."
I believe that the word "automatically" is misleading in that it implies
that if one sends the right header or body the redirect resource might
actually forward the request for you. In addition this sentence runs afoul
of Yaron.Redirect.Forwarding. As such I move that this sentence be changed
to read "A redirect resource blindly issues 302 (Found) redirect responses
point at its target resource."
The second sentence of the same paragraph reads: "It is this characteristic
that distinguishes redirect reference resource from direct reference
resources and from bindings."
The removal of this sentence, consistent with
Yaron.Redirect.NoReferenceorDirectResource, would remove the only reference
to direct reference resources outside of the terminology section. Therefore
I move that this entire sentence be removed from the draft.
The last two sentences of the same paragraph read: "It is also what insures
that redirect reference resources will be simple to implement and that
cross-server references will be possible. If the redirect reference
resource were required to forward requests automatically, the server would
need proxy capabilities in order to support cross-server references."
I found the language confusing and it violated Yaron.Redirect.Servers.
Therefore I move that the language be altered to read: "Redirect resources
bring the same benefits as links in HTML documents. They can be created and
maintained without the involvement or even knowledge of their target
resource. This reduces the cost of linking between resources."
Again, I think a basic understanding of how redirect references are intended
to differ from direct references is crucial to understanding the spec. I'm
not wedded to any of the details of the language, though.
--Judy
The first sentence of the second paragraph of section 4 reads: "A redirect
reference resource never automatically forwards requests to its target
resource."
I believe that the word "automatically" is misleading in that it implies
that if one sends the right header or body the redirect resource might
actually forward the request for you. In addition this sentence runs afoul
of Yaron.Redirect.Forwarding. As such I move that this sentence be changed
to read "A redirect resource blindly issues 302 (Found) redirect responses
point at its target resource."
The second sentence of the same paragraph reads: "It is this characteristic
that distinguishes redirect reference resource from direct reference
resources and from bindings."
The removal of this sentence, consistent with
Yaron.Redirect.NoReferenceorDirectResource, would remove the only reference
to direct reference resources outside of the terminology section. Therefore
I move that this entire sentence be removed from the draft.
The last two sentences of the same paragraph read: "It is also what insures
that redirect reference resources will be simple to implement and that
cross-server references will be possible. If the redirect reference
resource were required to forward requests automatically, the server would
need proxy capabilities in order to support cross-server references."
I found the language confusing and it violated Yaron.Redirect.Servers.
Therefore I move that the language be altered to read: "Redirect resources
bring the same benefits as links in HTML documents. They can be created and
maintained without the involvement or even knowledge of their target
resource. This reduces the cost of linking between resources."
What evidence is available that would lead one to conclude that it would be
difficult to grasp redirect references without understanding direct
references, especially given that HTTP/1.1 was able to define a redirect
without having to reference its direct variant?
Repeated requests to have one or another method have as its default behavior
on a redirect reference to operate automatically on the target resource
rather than responding with 302.
So it seems worthwhile jumping up and down a bit about the differences
between them.
--Judy
What evidence is available that would lead one to conclude that it would be
difficult to grasp redirect references without understanding direct
references, especially given that HTTP/1.1 was able to define a redirect
without having to reference its direct variant?
