Hello Roy,
Adam provides a pretty good explanation. We have also adopted
very much the same rules for IRIs (which contain domain names).
For the current (internal) draft, see
and please also have a look at the examples at
Some more details below.
[I have copied public-iri@w3.org because I'm mentioning the IRI solution]
As for IMAA, I have no doubt that some sort of bidi check is needed for
the local part, for the same reasons it is needed for domain labels.
And I have no doubt that the bidi check in Stringprep is sufficient and
overkill, just as it is for domain labels. The only difference is how
much overkill. Consider the address foo.bar@example.net. Stringprep
is applied to "example" and to "net" independently, but it is applied
to "foo.bar" all together. Therefore there might exist strings that
would be valid domain names but not valid local parts.
Yes, in particular if e.g. foo is Arabic and bar is Latin, or so.
Sounds like a rather strict restriction to me that there should be
absolutely no way to fit these two alphabets into the local part.
But I guess Roy and others can judge better how much pain that
will be in practice.
I'm not sure--it
depends on how ASCII dots influence the bidi algorithm.
No, it doesn't depend on the bidi algorithm, just on stringprep.
But that might be a good thing. The user interface might understand
that example.net is a domain name composed of labels, and would be able
to override the bidi algorithm if necessary to preserve the proper order
of the labels. But the local part is an opaque string (except possibly
when viewed by the mail exchanger for example.net) and is therefore
fully subject to the bidi algorithm, and therefore needs the protection
of having Stringprep's bidi check applied to the whole thing.
Please note that currently, IDNA does not specify how to display
domain names. IMAA may do that, but I don't think it does.
For IRIs, we have decided that the only context an application
needs is to know is that overall, this is an identifier. This
simplifies implementation quite a bit. In many cases, in particular
for all-rtl cases, this knowledge is not even necessary, and even
if an IRI is not embedded in explicit LTR context, the single
missing bit still can be guessed easily.
This is based on feedback we have received both from Israelis
and from Arabs. For example, whenever Arabs have presented
Arabic domain names, they always did it as MOC.BARA.BEW
(inverting not only each component of web.arab.com, but
also the order of the labels) rather than BEW.BARA.MOC
(just inverting the labels internally).
The solution makes it easier for people without any specific
knowledge of IRI/mail address/domain name syntax to read
these things in the right order.
So the proposed display algorithm for IRIs doesn't need any
internal knowledge of the IRI (or email address, or domain
name) structure. So there is no need to apply the bidi check
to the whole left hand part if that's not deemed appropriate.
Regards, Martin.
Just some very quick thoughs
But as I understand the bidi algorithm (and I don't really claim to
understand bidi, so please correct me if I'm wrong) although
WEB.ARAB.com will render sensibly in a RTL context:
com.BARA.BEW
It will render weirdly in a LTR context:
BARA.BEW.com (with the labels in the wrong order).
And the domain WEB.ARAB.foo.com won't render sensibly in either context
LTR: BARA.BEW.foo.com
RTL: foo.com.BARA.BEW
So you need something more than just the bidi algorithm to display
mixed LTR/RTL domains sensibly. ie the UI needs to know to display
the labels in order from least significant to most significant (in the
users prefered writing direction).
It's easy to do this by getting the UI to insert suitable embedding
codes prior to rendering; I'm sure this was discussed on the IDN list,
but I haven't had time to refer back to it.
I'm not sure the same issues really occur with local parts, though,
since separators only have local significance. There isn't really any
global 'right' order in which to display the segments of a local part,
since the very notion of segments is internal to IMAA.
-roy
Ok, having read the references that Martin posted, in appears that
this is considered the correct rendering, even though the labels are
not presented in logical order. I can see why this might feel natural
to users of right-to-left languages, I just wasn't expecting it...
And if displaying components of domain names and IRIs in logical order
is considered a non-issue, then it's clearly a non-issue for a local
part which is, by definition, opaque.
-roy
Roy Badami scripsit:
Nevertheless, the example of the glyph sequence "the-arabs=BARA-LA"
having two utterly different internal representations remains a strong
reason not to allow such local-parts.
John Cowan jcowan@reutershealth.com www.reutershealth.com www.ccil.org/~cowan
If a soldier is asked why he kills people who have done him no harm, or a
terrorist why he kills innocent people with his bombs, they can always
reply that war has been declared, and there are no innocent people in an
enemy country in wartime. The answer is psychotic, but it is the answer
that humanity has given to every act of aggression in history. --Northrop Frye
Hello Roy,
Well, the question is which order is the right one.
In an LTR context, BARA.BEW.com is obviously better.
In an RTL context, you are right that WEB.ARAB.com
is probably better. Now the problem of course is
that we can't have it both ways.
Now take another example, www.BARA.com. This again in
an LTR context looks better as www.BARA.com; in an RTL
context, it will look better as com.BARA.www.
To some extent, the more LTR pieces you have, the better
it looks in LTR context, and the more RTL pieces you have,
the better it will look in RTL context. But judgement is
difficult, and creating an algorithm that counts pieces,...
would be too complex. So we took LTR as a base, rather
than RTL.
If you know that periods are special, and read each label
independently, then you are right. But the feedback we got
is that people not familiar with domain names or URIs
won't necessarily know that. For people who don't know
that, they probably always read 'foo.com' LTR, and
'BARA.BEW' RTL.
There is no place here for "user's preferred writing direction".
If we put something on the side of a bus, or on a name card,
the user's preferred writing direction is lost.
I'm not sure it was discussed on the IDN list. The IDN list mainly
cared about getting a predictable display for single labels.
It was the solution originally proposed for IRIs.
That's a statement that makes sense to somebody understanding the
specs in detail. What we have to care about is the end users.
Regards, Martin.
But the qlyph sequence
ab.CD.ef (display order) already has two completely different internal
representations:
If it was rendered in an LTR context, the corresponding domain name
(in logical order) is ab.DC.ef
If it's in an RTL context, unless I'm mistaken, the corresponding
domain name is ef.DC.ab
ie in one case the TLD is ef, in the other case it is ab.
As I understand it the way that the IRI draft currently resolves this
is to specify that IRIs are always rendered in an LTR context.
Can I pose another question: if IMA practice were to follow the
currently proposed IRI practice (ie render by simply applying bidi in
an LTR context), then the e-mail address (logical order)
USER@DOMAIN.com would render as:
NIAMOD@RESU.com
Would Hebrew/Arabic e-mail users find this natural? Or would they
prefer the @-sign to logically separate the address into a localpart
and a domain:
RESU@NIAMOD.com
Further, consider the address owner-LIST@DOMAIN.com (logical order).
Part of the rationale for the current design of ToASCII is to allow
constructs such as this. This would render as:
owner-NIAMOD@TSIL.com
Again, is this natural? If users of RTL languages are confortable
with embeddings such as
BARA.BEW.com (for WEB.ARAB.com)
then I see no reason why not, but it would be good to get some feedback.
-roy
It wasn't obviously better (to me). It bothers me that it's
'middle-endian', with the least-significant component in the middle.
I was naively assuming that
BEW.BARA.com and
com.BARA.BEW
were the only sensible ways of writing the domain.
I hadn't grasped the idea that most users of RTL languages will be
sufficiently used to LTR-in-RTL embeddings that they will find it
natural to read this construct in logical order. (Even though this is
actually an RTL-in-LTR embedding, the principle is familliar enough
that users are happy with it, presumably?)
Which makes sense, particularly since all (present day) computer users
will be used to the fact that current identifiers are LTR.
Right. It's a matter of assumptions, and mine were biased by looking
at the structure of the domain, rather than at the assumptions that a
user of an RTL lanuage would make.
You're right. I misunderstood the original point about WEB.ARAB.COM
rendering as MOC.BARA.BEW rather than BEW.BARA.MOC (and thought this
was an option depending on bidi embedding level or something).
I'm sure someone proposed that labels should always be presented least
significant on the left to most significant on the right, and outlined
the algorithm for doing so. I haven't followed any of the IRI
discussion (except where it was referenced on the IDN list) so I don't
think it's that I'm thinking of.
Possibly, but there is no spec for the structure of a local part. So
saying 'just render it according to the bidi algorithm' (as you have
decided is also correct for IRIs -- which *are* structured) seems
natural.
What restrictions -- if any -- should be made on the content of a
local part is a somewhat separate issue (though it's what caused me to
start this thread).
-roy
According to the IRI draft, an IRI displayed as mailto:OOF@RAB.com would
mean user BAR at domain FOO.com. I don't know if either interpretation
is better, but presumably we want consistency between the display of
Yes, very much so. I would be happy to change the IRI draft again
if we have a better solution, but I haven't seen one yet in the
current discussion. It may be somehow possible to create better
solutions for domain names only, or mail addresses only, but they
may not scale to IRIs.
If we add a recommendation about this to IMAA, we should consider doing
the same for IDNA before it goes to draft standard.
Probably a good idea.
Regards, Martin.
