Dear Amaya team.
To build recent Amaya releases on my Redhat 7.3 stations has required
compiling from the source distribution. I'va been able to do so
successfully until version 8.3. But with version 8.4 the build fails
during make. The preceding configure run reports no errors.
I attach the output from make.
Best regards
Christian Mondrup, Computer Programmer
Scandiatransplant, Skejby Hospital, University Hospital of Aarhus
Brendstrupgaardsvej, DK 8200 Aarhus N, Denmark
make[1]: Entering directory `/usr/local/src/Amaya/LINUX-ELF/tools'
make[2]: Entering directory `/usr/local/src/Amaya/LINUX-ELF/tools/mkdep'
g++ -O2 -W -x c++ -D__cplusplus -I../../ -c ../../../tools/mkdep/mkdep.c -o mkdep.o
g++ -o mkdep mkdep.o
make[2]: Leaving directory `/usr/local/src/Amaya/LINUX-ELF/tools/mkdep'
make[2]: Entering directory `/usr/local/src/Amaya/LINUX-ELF/tools/cextract-1.7'
../../tools/mkdep/mkdep -relative -vpath ../../../tools/cextract-1.7 ../../../tools/cextract-1.7/*.c  .depends
make[2]: Leaving directory `/usr/local/src/Amaya/LINUX-ELF/tools/cextract-1.7'
make[2]: Entering directory `/usr/local/src/Amaya/LINUX-ELF/tools/cextract-1.7'
g++ -x c '-DCPP="'"gcc -E -x c"'"' -O -c ../../../tools/cextract-1.7/parse.c -o parse.o
g++ -x c '-DCPP="'"gcc -E -x c"'"' -O -c ../../../tools/cextract-1.7/main.c -o main.o
g++ -x c '-DCPP="'"gcc -E -x c"'"' -O -c ../../../tools/cextract-1.7/io.c -o io.o
g++ -o ../../bin/cextract parse.o main.o io.o -ldl -lm
make[2]: Leaving directory `/usr/local/src/Amaya/LINUX-ELF/tools/cextract-1.7'
make[1]: Leaving directory `/usr/local/src/Amaya/LINUX-ELF/tools'
make[1]: Entering directory `/usr/local/src/Amaya/LINUX-ELF/thotlib'
../tools/mkdep/mkdep -relative -vpath ../../thotlib -DHAVE_CONFIG_H -I.. -I../../amaya/xpm -I../../thotlib/include -I../../thotlib/internals/var -I../../thotlib/internals/h -I../../thotlib/internals/f -I/usr/include -I/usr/include/gtk-1.2 -I/usr/include/glib-1.2 -I/usr/lib/glib/include -I/usr/X11R6/include -I/usr/X11R6/include ../../thotlib/*/*.c  .depends
make[1]: Leaving directory `/usr/local/src/Amaya/LINUX-ELF/thotlib'
make[1]: Entering directory `/usr/local/src/Amaya/LINUX-ELF/thotlib'
g++ -O2 -W -x c++ -D__cplusplus -D_UNIX -D_GTK -DHAVE_CONFIG_H -I.. -I../../amaya/xpm -I../../thotlib/include -I../../thotlib/internals/var -I../../thotlib/internals/h -I../../thotlib/internals/f -I/usr/include -I/usr/include/gtk-1.2 -I/usr/include/glib-1.2 -I/usr/lib/glib/include -I/usr/X11R6/include -I/usr/X11R6/include -c ../../thotlib/base/global.c -o base/global.o
In file included from ../../thotlib/include/thot_sys.h:67,
from ../../thotlib/base/global.c:5:
../../thotlib/include/sysdep.h:1094: declaration of `int
*__errno_location ()' throws different exceptions
/usr/include/bits/errno.h:39: than previous declaration `int
*__errno_location () throw ()'
make[1]: *** [base/global.o] Error 1
make[1]: Leaving directory `/usr/local/src/Amaya/LINUX-ELF/thotlib'
make: *** [thotlib] Error 2
I encountered the same issue on a Mandrake 9.0 installation
To fix this issue, I added -D_LIBC to the C_FLAGS in the Options file, which
removed the in-line redefinition.
A later mismatch of the exception specification on wcstok() I found simplest
to resolve by editing the source in .../thotlib/Unicode/ustring.c to add the
throw ()" to the end of the definition that was there in the system
declaration.
There were also persistent warnings about the ordering of include
directories.
Of Christian Mondrup
Dear Amaya team.
To build recent Amaya releases on my Redhat 7.3 stations has required
compiling from the source distribution. I'va been able to do so
successfully until version 8.3. But with version 8.4 the build fails
during make. The preceding configure run reports no errors.
I attach the output from make.
Best regards
Christian Mondrup, Computer Programmer
Scandiatransplant, Skejby Hospital, University Hospital of Aarhus
Brendstrupgaardsvej, DK 8200 Aarhus N, Denmark
unfortunately that doesn't solve the problem with my Redhat 7.3 installations
Christian Mondrup, Computer Programmer
Scandiatransplant, Skejby Hospital, University Hospital of Aarhus
Brendstrupgaardsvej, DK 8200 Aarhus N, Denmark
On Wed, 21 Apr 2004 12:05:06 +0200
Could you launch
grep _errno_location /usr/include/netdb.h /usr/include/bits/errno.h
This is the result we have:
/usr/include/netdb.h:extern int *__h_errno_location (void) __THROW __attribute__ ((__const__));
/usr/include/netdb.h: return *__h_errno_location () = __err;
/usr/include/netdb.h:# define h_errno (*__h_errno_location ())
/usr/include/bits/errno.h:extern int *__errno_location (void) __THROW __attribute__ ((__const__));
/usr/include/bits/errno.h:# define __set_errno(val) (*__errno_location ()) = (val)
/usr/include/bits/errno.h:# define errno (*__errno_location ())
In you case it seems that the two declarations differ.
The solution proposed Steven Gilham should work, but you have probably to
patches CFLAGS and CXXFLAGS.
Irene.
Ir?ne Vatton INRIA Rh?ne-Alpes
INRIA ZIRST
e-mail: Irene.Vatton@inria.fr 655 avenue de l'Europe
