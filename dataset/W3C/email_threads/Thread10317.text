-----Forwarded Message-----
From: Dave Reynolds der@hplb.hpl.hp.com
Subject: Jena semantic tests
Date: 25 Jul 2003 17:05:37 +0100
Following on from Jeremy's posting concerning ARP and the current set of working
group tests.
On the approved entailment tests 20030725, Jena passes 37, declines to implement
5 and fails 1 due to the recent changes in WG decision. The latter will be
fixed.
Details below.
Dave
Summary:
Of the 43 tests:
37 pass OK
1 fail (xml:lang on Literals) and will fix
2 fail and might fix
3 fail and do not intend to fix
Of the passes there is one test that needed correction to the downloaded files.
** Invalid test:
rdfs-subClassOf-a-Property/Manifest.rdf#test001 is defined in the manifest but
the data file is not included in the approved_20030725.zip file. However,
downloading the files separately from the respository then this one passes.
** Failures - will not fix:
PositiveEntailmentTest rdfms-seq-representation/Manifest.rdf#test004 - FAIL
PositiveEntailmentTest rdfms-seq-representation/Manifest.rdf#test002 - FAIL
These two tests assert that the empty document entails various properties
of _1. By my reading of the specs this is not correct, only mentioned
container membership properties should result in such entailments and
there are no such mentions in the empty document.
If I'm wrong and these tests are correct then we will not implement
them anyway, this is too alien to users to be acceptable.
PositiveEntailmentTest xmlsch-02/Manifest.rdf#whitespace-facet-3 - FAIL
This tests bNode introduction - that a typed literal entails a graph
with a bNode of type rdf:Literal. We have deliberately omitted the
bNode introduction rules from the reasoner config on the grounds that
this is not the way an RDF API should do it - users can query the
nodes themselves for type information and creating virtual triples
for this would be wrong from an API perspective.
** Failures - could fix:
NegativeEntailmentTest xmlsch-02/Manifest.rdf#whitespace-facet-2 - FAIL
NegativeEntailmentTest xmlsch-02/Manifest.rdf#whitespace-facet-1 - FAIL
These test non-mutual entailment of a valid literal with an invalid
literal that differs only by whitespace. Unfortunately our XSD
handling library is happy with the whitespace and doesn't
treat " 3 " as an invalid int.
This could be fixed if that is indeed how XSD is supposed to work,
though the current behaviour seems more useful in practice.
** Failure - will fix:
PositiveEntailmentTest datatypes/Manifest.rdf#language-and-xml-literal - FAIL
This is the xml:lang on xml:Literals issue. To be fixed.
** Pass:
rdfms-seq-representation/Manifest.rdf#test003 - OK
datatypes/Manifest.rdf#semantic-equivalence-between-datatypes - OK
datatypes/Manifest.rdf#language-ignored-for-numeric-types-3 - OK
datatypes/Manifest.rdf#range-clash - OK
datatypes/Manifest.rdf#test010 - OK
datatypes/Manifest.rdf#test008 - OK
tex-01/Manifest.rdf#language-tag-case-1 - OK
datatypes/Manifest.rdf#language-ignored-for-numeric-types-2 - OK
datatypes/Manifest.rdf#semantic-equivalence-within-type-1 - OK
tex-01/Manifest.rdf#language-tag-case-2 - OK
rdfs-subPropertyOf-semantics/Manifest.rdf#test001 - OK
datatypes/Manifest.rdf#non-well-formed-literal-1 - OK
datatypes/Manifest.rdf#language-ignored-for-numeric-types-1 - OK
rdfs-no-cycles-in-subClassOf/Manifest.rdf#test001 - OK
datatypes/Manifest.rdf#semantic-equivalence-within-type-2 - OK
rdfs-no-cycles-in-subPropertyOf/Manifest.rdf#test001 - OK
rdf-charmod-uris/Manifest.rdf#test003 - OK
rdfs-subClassOf-a-Property/Manifest.rdf#test001 - OK
rdfs-domain-and-range/Manifest.rdf#intensionality-domain - OK
statement-entailment/Manifest.rdf#test003 - OK
datatypes/Manifest.rdf#non-well-formed-literal-2 - OK
rdfms-xmllang/Manifest.rdf#test007a - OK
statement-entailment/Manifest.rdf#test004 - OK
horst-01/Manifest.rdf#subClassOf-intensional - OK
rdfs-container-membership-superProperty/Manifest.rdf#test001 - OK
rdfs-domain-and-range/Manifest.rdf#intensionality-range - OK
datatypes/Manifest.rdf#test009 - OK
statement-entailment/Manifest.rdf#test001 - OK
rdf-charmod-uris/Manifest.rdf#test004 - OK
rdfms-xmllang/Manifest.rdf#test007b - OK
horst-01/Manifest.rdf#subPropertyOf-intensional - OK
xmlsch-02/Manifest.rdf#whitespace-facet-4 - OK
rdfms-xmllang/Manifest.rdf#test007c - OK
statement-entailment/Manifest.rdf#test002 - OK
Dave
That's my understanding too. I haven't double-checked the text.
I recommend changing the test.
Hmm... I wonder what that means for queries ala
find all ?V such that
myDoc dc:author ?V.
?V rdf:type rdfs:Literal.
Seems like something to watch during CR... er... hmm...
we're leaning toward not doing a CR. hmm...
Would somebody please turn that into a question of clarification
for the XML Schema folks?
Dan Connolly, W3C http://www.w3.org/People/Connolly/
FAIL
FAIL
properties
I was looking in the table of the "RDFS axiomatic triples" at
and found that
rdf:_1 rdf:type rdfs:ContainerMembershipProperty .
is an RDFS axiomatic triple (following from the empty KB)
so test002 - OK
Given this, rdfs12 is applicable
http://www.agfa.com/w3c/euler/rdfs-rules#rdfs12 .
{[ iw:Variable "?X"] = http://www.w3.org/1999/02/22-rdf-syntax-ns#_1 .
[ iw:Variable "?X"] a rdfs:ContainerMembershipProperty} =
{ http://www.w3.org/1999/02/22-rdf-syntax-ns#_1 a
rdfs:ContainerMembershipProperty}} =
{ http://www.w3.org/1999/02/22-rdf-syntax-ns#_1
http://www.w3.org/2000/01/rdf-schema#member }.
so test004 is also OK
(at least we get those results)
[oops... have to run, ]
Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/
Hmmm xmlsch-02 was raised by XML Schema folks to check that we had
understood where the whitespace handling happens.
It appears that the Xerces implementors (who Dave defers to) do it
different from in the spec. (Probably more usefully)
Jeremy
No.
From the semantics doc:
The subset of rdfV consisting of the first 3 items in the above list,
{rdf:type rdf:Property rdf:XMLLiteral} is called the core RDF
vocabulary, crdfV.
An rdfs-interpretation of V is an rdf-interpretation I of V union crdfV
union rdfsV which satisfies the following semantic conditions and all
the triples in the subsequent table, called the RDFS axiomatic triples,
which contain only names from V union crdfV union rdfsV.
rdf:_1 is not a member of V, crdfV or rdfsV, so the entailment does not
hold - which is cool, cos it keeps things finite.
Brian
I think we've had that in a comment from them. They pointed out, as I
understand it, that whitespace processing occurs before the lexical form
is determined, thus "3" is a member of the lexical space of decimal, but
3 " is not.
is legal because the spaces are discarded as part of determining the
lexical form.
The RDFCore WG agreed that it required the exact lexical form when it
approved the xmlsch-02 test case.
I suggest this fits the be precise what you produce and forgiving in
what you consume model. When generating RDF/XMl, make sure you don't
include the white space, to produce a correct document. But when
processing incoming RDF/XML, you can be a bit more forgiving.
Brian
rdfms-seq-representation/Manifest.rdf#test004 -
rdfms-seq-representation/Manifest.rdf#test002 -
mentioned
and
wow
From the semantics doc:
I must admit that I haven't read it like that ;-)
OK, so lets add a triple to the premis graph or some such.
Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/
and turn the original test into a negative entailment ...
3 " is not.
This is also mentioned in the syntax document...
Note (Informative): In XML Schema (part 1)[XML-SCHEMA1], white space
normalization occurs during validation according to the value of the
whiteSpace facet. The syntax mapping used in this document occurs after
this, so the whiteSpace facet has no further effect.
-- http://www.w3.org/2001/sw/RDFCore/TR/WD-rdf-syntax-grammar-20030117/
-- section 6.1.9
#g
Graham Klyne
PGP: 0FAA 69FF C083 000B A2E9 A131 01B9 1C7A DBCA CB5E
