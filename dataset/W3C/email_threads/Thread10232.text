Pat has managed to get an updated LCC semantics doc to me. It seemed best
to load it immediately to the website, which I have done.
There are no accompanying change notes, so I'm not sure what's
changed. However, based on my conversation with him, I'm expecting that:
o he has fixed the problem Peter raised about rdfs:Literal
o he has made at least one other change in response to a comment from Jan.
Peter, could you take a look and see if it does indeed resolve the issue
you raised?
Other reviewers, could you check any critical issues you raised are dealt with.
Brian
The closure rules now include all XML literals with the appropriate
canonical form, which means simple entailment now works. In fact, I see
Pat's added a paragraph to that effect after the statement of the RDF
entailment lemma.
That addresses the only critical issue I had with that document.
jan grant, ILRT, University of Bristol. http://www.ilrt.bris.ac.uk/
Spreadsheet through network. Oh yeah.
Also, several changes in response to my comments.
Nothing critical, but when Pat comes online again I'd like to understand
why LV isn't necessarily identical with IR.
#g
Graham Klyne
Summary: The updated semantics LCC still has critical problems.
Comment: As I am not a member of the RDF Core WG, I don't completely
understand what the semantics of RDF is supposed to be. Thus I am not a
good person to comment on whether the semantics LCC actually matches the
intent of the RDF Core WG. Given the number of errors that I have caught,
both internal inconsistencies and mismatches with my partial understanding
of the intent of the RDF Core WG, I feel that the document needs a thorough
review by someone who can check that it matches the intent of the RDF Core
WG.
From: Brian McBride bwm@hplb.hpl.hp.com
Subject: Update semantics LCC
Date: Wed, 15 Jan 2003 13:40:37 +0000
I've quickly looked over the new version.
The semantics still has strange behaviour with respect to
rdfs:Literal and untyped literals.
The semantic conditions boil down to
ICEXT(I(rdfs:Literal)) = LV
ICEXT(D) = ICEXT(I(rdfs:Literal)) for D a datatype
This means that with XML Schema datatyping
I("1"^^xsd:decimal) in ICEXT(I(rdfs:Literal))
I("a"^^xsd:string) in ICEXT(I(rdfs:Literal))
but
I("a") not necesarily in ICEXT(I(rdfs:Literal))
The Lbase appendix still has errors. It does not accord rdfs:XMLLiteral
its special status with respect to language tags. It is not a consequence
of the RDFS model theory that rdfs:XMLLiteral(?x) implies rdfs:Literal(?x).
It is not a consequence of the RDFS model theory that untyped literals
belong to rdfs:Literal. There are other errors as well.
The semantics has problems with respect to LV.
LV is mandated to contain all literal strings (which is not defined in the
document), pairs of literal strings and language tags (which is also not
defined), and all well-formed canonical XML documents (there is no pointer
given here for this). IL is defined to take typed literals with type
rdf:XMLLiteral to XML canonical forms. It is certainly not obvious that
XML canonical forms have any particular relationship to well-formed
canonical XML documents.
However, even if this is ironed out, there is no particular relationship
between rdf:XMLLiteral and rdfs:Literal in RDFS. The class extension of
rdfs:Literal in RDFS interpretations need not include any well-formed
canonical XML documents. This only comes from the (newly modified) fourth
condition in datatyped interpretations.
The special status rdf:XMLLiteral is not respected in datatyped
interpretations, which require that
IL(x@"en"^^rdf:XMLLiteral) = IL(x@"fr"^^rdf:XMLLiteral)
The Lbase document is still not a W3C Note. It should have some formal
status before the Semantics document goes to last call, as changes to it
will affect the Semantics document.
Peter F. Patel-Schneider
Bell Labs Research
Lucent Technologies
From: Jan Grant Jan.Grant@bristol.ac.uk
Subject: Re: Update semantics LCC
Date: Wed, 15 Jan 2003 13:48:50 +0000 (GMT)
Unfortunately, IL is inconsistently defined for rdf:XMLLiteral
In Section 3.1 there is
if ... IL("xxx"^^rdf:XMLLiteral) is the XML canonical form of xxx
if ... IL("xxx"@yyy^^rdf:XMLLiteral) is the XML canonical form of
xxx with the language tag yyy
In Section 3.4 there is
for any typed literal L of the form "sss"^^ddd or "sss"@ttt^^ddd in
G, if I(ddd) is in D and "sss" ("sss"@ttt) is a valid lexical form
for I(ddd), then IL(L) = L2V(I(ddd))(sss)
which is inconsitent for rdf:XMLLiteral as long as there is any
langauge-tagged XML document whose canonical form depends on the language
tag.
(I have actually fixed up the semantic rule. As it is actually stated, it
doesn't even make sense.)
Peter F. Patel-Schneider
Bell Labs Research
This is not inconsistent, because it is the lexical form of the
XMLLiteral which contains the language tag. I.e., the lexical form
of an XMLLiteral can be a pair, not just the XML encoded string.
C.f. section 3.4
The built-in datatype rdf:XMLLiteral, exceptionally, allows pairs in its lexical space.
What's unclear here is the mapping from the syntax to the "complete"
lexical form of the XML literal.
I.e.
IL("sss"^^ddd) = L2V(I(ddd))("sss")
IL("sss"@en^^ddd) = L2V(I(ddd))("sss")
IL("sss"^^xml) = L2V(I(xml))("sss","")
IL("sss"@en^^xml) = L2V(I(xml))("sss","en")
where xml is rdfs:XMLLiteral and ddd is any datatype
other than rdfs:XMLLiteral.
Thus, the rule is consistent, but the exceptional nature of the lexical forms
of XMLLiteral needs to be made clearer.
(As an aside, I personally consider the exceptional nature of XML literals
to be a mistake, for lots of reasons, but that's the way they are defined
so the "fix" at this stage is to simply make the specs clear about it).
Cheers,
Patrick
From: Patrick.Stickler@nokia.com
Subject: RE: Update semantics LCC
Date: Thu, 16 Jan 2003 12:06:51 +0200
Hmm.
Actually, it might be OK, but only because of the wording outside of the
conditions that the extra conditions are ``on all datatypes other than the
built-in datatype''. This wording is cryptic in the extreme. There also
needs to be some clarification here as to whether datatypes are members of the
domain or URI references.
The individual conditions in the table need to have the exclusion
explicitly and individually stated by something link, ``if I(ddd) is in
D-I(rdf:XMLLiteral)''. However, adding this exclusion to the fourth
condition would require adding a subclass relationship between
rdf:XMLLiteral and rdfs:Literal (which should, in any case, go into RDFS
interpretations).
Otherwise, however, these extra conditions *require* that
IL("..."@en^^rdf:XMLLiteral) = L2V(I(rdf:XMLLiteral))("...")
and
IL("..."@fr^^rdf:XMLLiteral) = L2V(I(rdf:XMLLiteral))("...")
which requires that the denotation of XML literals be independant of the
language tag.
The translation to Lbase ignores language tags for all typed literals.
Agreed.
peter
Hi Peter,
I think that's a good point. We have had three reviewers go through it, so
I think its close to our intent, but your sharp eyes have identified some
issues. One of the issues may be that we have looked at it so often. We
are not seeing it with fresh eyes. One of the reasons I think we need to
get more eyes on it.
I note your later post where you point out this may be covered but need
clearer explanation, if I understand you correctly.
[[Actually, it might be OK, but only because ...]]
I'm currently inclined to deal with this in last call, but we will discuss
this at Friday's telecon.
Hmm, that's a shame. However, again I think of these as editorial errors
and suggest that we take those that we can't do as a quick fix, as last
call issues.
Right. Its been ready for a while, we've just been prioritizing other
things. Publication is already approved - we just need to crank up the
publishing machine.
Brian
From: Brian McBride bwm@hplb.hpl.hp.com
Subject: Re: Update semantics LCC
Date: Thu, 16 Jan 2003 18:06:25 +0000
The issue that I refer to here is that the model theory does not require
that "a" is an element of the class extension of rdfs:Literal. There is
nothing technically wrong with this stance, but it has strange
consequences.
Hmm. I would regard this as a less-than-ideal situation.
Peter F. Patel-Schneider
