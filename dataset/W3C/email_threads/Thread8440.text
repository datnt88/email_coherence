RE:  Regarding criticality flags in the attributes, I seem to recall there
being
a fair bit of aversion at and around the initial workshop on whether we
should have criticality flags. The persons who expressed this opinion
seemed to have a great deal of experience with prior security protocols.
What were the problems, and have they been overcome? Since the
criticality
flags are either still included or have returned (I don't know which), I
assume there was a resolution. What was it?
John:
I believe that Dave Solo and I both posted on this with strong feelings
against criticality flags. My comment was that WEBDAV has already thought
this through (ck out RFC
2518) and have chosen to have clients ignore elements they do not
understand. I also share Dave's "sub-optimal" experience with criticality
flags in PKIX. Frankly, I thought we agreed to drop them at MIT and I don't
recall any revival in Oslo.
--Barbara Fox
Microsoft
Good, that is as I remembered too.
My question is specific to the Brown draft
which has always had a criticality attribute on the 'attribute' element and
that has not disappeared. It is in the text and HTML versions.
Is the criticality flag in this case at odds with the experiences that you
and David Solo have had?
Thanks,
John Boyer
Software Development Manager
UWI.Com -- The Internet Forms Company
RE:  Regarding criticality flags in the attributes, I seem to recall there
being
a fair bit of aversion at and around the initial workshop on whether we
should have criticality flags. The persons who expressed this opinion
seemed to have a great deal of experience with prior security protocols.
What were the problems, and have they been overcome? Since the
criticality
flags are either still included or have returned (I don't know which), I
assume there was a resolution. What was it?
John:
I believe that Dave Solo and I both posted on this with strong feelings
against criticality flags. My comment was that WEBDAV has already thought
this through (ck out RFC
2518) and have chosen to have clients ignore elements they do not
understand. I also share Dave's "sub-optimal" experience with criticality
flags in PKIX. Frankly, I thought we agreed to drop them at MIT and I don't
recall any revival in Oslo.
--Barbara Fox
Microsoft
John:
I believe that criticality is something that the wg agrees should be
dropped. I also expect that there will be lots of other discussion
topics/changes from Richard's draft as we evolve the standard.
--Barb
Good, that is as I remembered too.
My question is specific to the Brown draft
which has always had a criticality attribute on the 'attribute' element and
that has not disappeared. It is in the text and HTML versions.
Is the criticality flag in this case at odds with the experiences that you
and David Solo have had?
Thanks,
John Boyer
Software Development Manager
UWI.Com -- The Internet Forms Company
-----Original Message-----
RE:  Regarding criticality flags in the attributes, I seem to recall there
being
a fair bit of aversion at and around the initial workshop on whether we
should have criticality flags. The persons who expressed this opinion
seemed to have a great deal of experience with prior security protocols.
What were the problems, and have they been overcome? Since the
criticality
flags are either still included or have returned (I don't know which), I
assume there was a resolution. What was it?
John:
I believe that Dave Solo and I both posted on this with strong feelings
against criticality flags. My comment was that WEBDAV has already thought
this through (ck out RFC
2518) and have chosen to have clients ignore elements they do not
understand. I also share Dave's "sub-optimal" experience with criticality
flags in PKIX. Frankly, I thought we agreed to drop them at MIT and I don't
recall any revival in Oslo.
--Barbara Fox
Microsoft
That's probably because I could not make either meeting...
I think we do need a mechanism by which a client can be told that
it should not attempt to process a message it may not understand
IF THAT IS THE DESIRED RESULT.
One specific condition I have been considering is the case in
which an XML message represents a negotiable instrument (e.g.
a Bill of Lading). The conditions of validity for which can
only be understood in the context of a particular rule book.
In this case I would like to ensure that clients which are
not aware of the requirements of a specific rule book do not
erroneously validate the signature.
The problem with criticality flags is that they are too fine
grained and lead to overuse but the effect is on occasion usefull.
A better means of achieving the desired result would be a
specific criticality attribute which would reference a URI. E.g.
Similar requirements pop up in the public space - literally.
Barb and I know a certain lawyer who is keen to have disclaimers
pop up to achieve 'constructive notice' of certain terms
and conditions.
I certainly don't think we need a system as fine grained as X.509v3
criticality flags. But we do need to recognise that in the case
of signatures restricted interoperability is sometimes explicitly
desired.
In terms of implementation difficulty this should not be too much
trouble. The 'check signature' property of the XML document object
simply flags a warning that everything has checked out but there
may be some problems.
Generic clients are also much better off since instead of 'there
may be a problem here but I'm not going to tell you what' they can
be refered to a source which can resolve the problem.
Phill
Had you been at the meeting, hopefully I would've convinced you this is a
trust application decision smile , and is not related to whether
(valid:signed-resource == true)
signed-resource(I, C, key, sig): there was some request R such that
GET(R) = C and address(R) = I and sign-doc(C, key, sig)
sign-doc(C, key, sig): sig is the value of a strong one-way function over
content and key that yields C integrity/validity and K
non-repudiability
Again, I would like to redefine "validate" specifically to signature
validation, not trust evaluation/inference. I think you were speaking of the
ability to make application statements such that one can make a useful
inference:
trusted-statement(signed-resource(I, C, key, sig)): where
(signed-resource(I, C, key, sig) and (C consists of assertions {S1, S2, S3})
and infer(S1,S2,S3).
(As I continue on in my bungled notation! Any logic weenies out there?)
Joseph Reagle Jr.
Policy Analyst mailto:reagle@w3.org
XML-Signature Co-Chair http://w3.org/People/Reagle/
Regadless of what you classify the issue as the issue has to be dealt
with.
Yes, I can send you a copy of my D.Phil which just happens to be on the
topic of formal methods.
If you want to build a formal model my choice would be to employ typed
set theory in the manner of Z or VDM.
Or given that it is the summer it is quite likely you can find Joe Stoy
on the 4th floor of 545 Technology Square.
Phill
Would you be willing to work with Todd to develop good natural language and
formal definitions [1] of the terms? I was originally planning to use LARCH
to be consistent (see [1]) but that isn't critical (consistency across
relevant documents and ease of readability to non-experts are more important
I think).
[1] http://www.w3.org/Signature/Drafts/xml-dsig-definitions-990728.html
Joseph Reagle Jr.
Policy Analyst mailto:reagle@w3.org
XML-Signature Co-Chair http://w3.org/People/Reagle/
