2. Will this work with non-XML Schema datatypes?
I guess so
I'd like to see some proof of that. xsi:type is defined
by XML Schema. If RDF is going to use it for non XML Schema
datatypes, then is it not the case that RDF is extending
the semantics and usage of xsi:type beyond that defined
by XML Schema?!
I've got major alarm bells going off in my head about
this one -- not to mention a very bad taste in my
mouth.
XML Schema is not the only schema formalism for XML,
and even though both XML Schema and RDF are both
"children" of the W3C, I don't see that they need to
be so tightly integrated in this fashion.
3. Will this work with arbitrarily/user defined primitive types?
I guess so
Again, does that not mean that RDF is extending
the semantics and usage of xsi:type beyond that
defined by XML Schema?
4. How does this relate to defining datatype ranges of properties?
well I guess global range constraints
could be used to detect inconsistencies, no?
So, is it the case that
IF
:s :p DDD "LLL" .
THEN
DDD "LLL" rdf:type DDD .
That's not adding *anything* new to the functionality
already provided by the stake-in-the-ground idiom for
local datatyping.
The WG agreed that the stake-in-the-ground would *not*
be changed unless there was strong technical motivation.
Where is it?! How does the datatype property idiom fail?!
Something doesn't smell quite right here...
(too much guesses I guess)
This is what really bothers me. We have spent many months coming
to consensus on key aspects of datatyping, and IMO there remained
only one single issue left to decide, whether literals had tidy
or untidy syntax/semantics -- and now it seems like we're back
at square one and anything goes.
Was there *any* dissent in the WG about the local idiom and
its semantics? I don't recall any. What's the deal?!
Patrick
2. Will this work with non-XML Schema datatypes?
I guess so
Just for the reference, the "range" of xsi:type is QName, so I guess it
can be used for referring to pretty much anything:
Sergey
From: ext Sergey Melnik [mailto:melnik@db.stanford.edu]
Sent: 07 August, 2002 16:56
jjc@hplb.hpl.hp.com; w3c-rdfcore-wg@w3.org
Subject: Re: type test case
2. Will this work with non-XML Schema datatypes?
Well, the XML Schema spec explicitly mentions that xsi:type
is used to specify a Simple Type (?2.2.1.2) or Complex Type (?2.2.1.3)
so it is IMO reasonable for any application that sees xsi:type
to presume that the datatype in question conforms to XML Schema.
So, even if the "range" of xsi:type is a QName, that QName is
expected to denote an XML Schema type.
No?
Patrick
From: ext Sergey Melnik [mailto:melnik@db.stanford.edu]
Sent: 07 August, 2002 16:56
jjc@hplb.hpl.hp.com; w3c-rdfcore-wg@w3.org
Subject: Re: type test case
2. Will this work with non-XML Schema datatypes?
This is not my reading. The first sentence of the paragraph refers to a
usual case when the type is determined by the type associated with the
XML element in the schema (i.e., no xsi:type is used). However, when
xsi:type is there, its value is a QName, nothing said about it referring
to an XSD type definition or anything else.
Correct me if I'm wrong...
Sergey
