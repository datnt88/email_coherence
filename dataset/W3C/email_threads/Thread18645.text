As long as the blob coming out of the sign function
actually correctly measures change in the document when the blob and
document are passed to the verify function, we do not care what format
that
data takes.
To wit, the better handwritten signature technologies achieve at least a
modicum of security by encrypting the blob.
We must have clear definitions of the mechanisms that we create. It is not
appropriate to confuse a public key signature with a biometric
authentication technique like the digitization of parameters from a
physical signature. Biometric authentication techniques should not be in
the scope of the DSig effort. If biometric techniques are used, they may
be part of an authentication process used to access a securely stored
private key. Brief guidelines may be provided that could describe how
authentication techniques are required to protect access to an entities
secret key.
Public key digital signatures provide more than just detecting a change in
a document. The trust associated with the signature is based on the fact
that the signature comes from a specific unique key. These keys have well
know risks associated with the handling and storage of the this unique
secret information. While biometric information is unique in some sense,
it can be forged. Additional precautions must be taken to prevent the
duplication of a valid signature.
I propose that we be precise with our discussions and limit the scope of
our digital signature specification to signatures based on public key
cryptographic techniques.
Likewise, symmetric cryptographic techniques do not have the same
properties as a public key signature. We are discussing how to apply
symmetric keyed hash mechanisms, so I assume we have requirements for this
mechanism. The trust considerations for a shared key mechanism are not the
same as public key signed mechanisms. I propose that any support for
encryption, key exchanges or keyed hash security mechanisms be given unique
tags so the mechanisms are not confused with digital signatures. In
particular, a keyed hash will never be able to support non-repudiation.
Automated processing of our signature mechanisms require that we clearly
distinguish the inferences possible from any specific usage. It is best in
the processing to identify these differences as soon as possible.
List of XML Digital Signature working group non-requirements:
- application of biometric techniques for authentication in XML
- application of physical digital signature as biometric authentication for
XML signatures
Paul
From: "Paul Lambert" plambert@certicom.com
Date: Wed, 21 Apr 1999 11:35:10 -0700
List of XML Digital Signature working group non-requirements:
- application of biometric techniques for authentication in XML
- application of physical digital signature as biometric authentication for
XML signatures
Seconded!
--Bede
Yes, I know, but who said that signed XML must be signed with public key
signatures? Even the IETF draft seems to contain other mechanisms...
Also,
I presume that Paul's statement is actually a "motion" to assert certain
non-requirements since no formal group has yet been created.
However, he made the motion and you second it precisely because you are
missing the point I'm actually trying to make. I personally couldn't care
less whether any reader finds merit in this particular technology. I'm not
sure I like it myself. But as a group trying to create a worldwide standard
for signing this document format, is it our place to play God and decide
from on high that our spec won't support this technology or that technology
in the standard because we don't like it?
As the title of our "Signed XML" workshop indicates, our job is to write a
spec that accommodates signing XML. The issue is whether those signatures
have to be XML. Since opinion without reason is not science, I've provided
numerous reasons why it is my opinion that they shouldn't be.
1) Can we assume that we could create a markup going that will satisfy all
needs going forward? No. Which means that incorporating new technologies
in the future will require spec changes, dsig DTD changes, software
upgrades, signature incompatibilities with older software, and greater
costs.
2) Can we accommodate all signature technologies of the future without
creating a markup? Yes.
3) If we did create a markup for signatures, what would be the consequences?
A) Reference implemetations would have to include the cryptographic
layer.
B) Signature technologies that depend on unreadable signatures would be
excluded.
John Boyer
Software Development Manager
UWI.Com -- The Internet Forms Company
jboyer@uwi.com
for
Paul,
Not quite true. It has been already demonstrated that some symmetric
authentication schemes can provide the necessary foundation to
non-repudiation - for example H(S,K,M) in secure hardware with S being a
unique signer's identifier sealed in the token, K a shared secret also
sealed in the token, and M a representation of the document could be
satisfactory. More sophisticated schemes can be built with key-exchange
algorithms (i.e. Diffie-Hellman).
Correct though usage of a public key signature scheme does not imply trust
per se. Adopting a public key signature scheme only allows signature
verifiability without having to disclose the signing secret. Trust is bound
to the production by a truted third-party of a credential that binds the
signature verification key with a set of attributes. Trust is only
propagated by the credential and not intrinsic to the use of public keys.
For WPR exchanges, symmetric key is often sufficient - non-repudiation is
not always necessary or can be achieved without making use of a "mechanic
with strong mathematical foundations." Many times in the past, courts have
ruled in favor of well-defined and well-documented business processes though
not founded upon mathematical concepts. In fact, a symmetric authentication
scheme with an adequate audit-trail and well-defined processes may stand
stronger than a public-key signature scheme with inadequate protection of
the private-key or an obvious lack of scrutany when establishing
credentials.
Sincerely,
Richard D. Brown
You are correct that there are a variety of ways to implementate
non-repudiation. Typically these require a third party. I should have
been more specific about the distinction I was attempting to describe.
Public key based signatures are traceable to a single key holder.
Symmetric techniques are subject to repudiation since both the creator and
the validating agent have access to the secret key.
Yes, but assuming equivilant protection of keys, public-key techniques have
the unique characterisitic that they are more readily traceable to a single
key-holder. The semantics of a public key signature are different than
that of a keyed hash. Our specification should clearly describe the
diffierences in service provided by the two mechanisms. The syntax of our
XML digital signature should clearly describe the expected security
service. We should not confuse keyed hashs with public key based digital
signatures.
So ... in summary here's a few of my comments in a requirements format:
Proposed XML Digital Signature Requirements:
- XML digital signatures shall be based on public key cryptographic
techniques to bind the signatures to a single key holder
- XML digital signatures shall provide a single mandatory implement
set of algorithms to promote the fielding of interoperable
implementations.
Other example optional algorithms will be described and supported.
- The XML digital signature specification shall define mechanisms
to support keyed hash and key exchange.
- The XML digital signature syntax shall clearly describe the
expected security service (e.g. public key signature versus keyed hash)
- XML digital signatures must carry only a single
originator key or certificate.
XML Digital Signature working group non-requirements:
- application of biometric techniques for authentication in XML
- application of physical digital signature as biometric
authentication for XML signatures
Paul
"Richard D. Brown" rdbrown@globeset.com on 04/21/99 05:08:18 PM
Please respond to rdbrown@globeset.com
Subject: RE: Biometric techniques are not public key signatures
Paul,
Not quite true. It has been already demonstrated that some symmetric
authentication schemes can provide the necessary foundation to
non-repudiation - for example H(S,K,M) in secure hardware with S being a
unique signer's identifier sealed in the token, K a shared secret also
sealed in the token, and M a representation of the document could be
satisfactory. More sophisticated schemes can be built with key-exchange
algorithms (i.e. Diffie-Hellman).
Correct though usage of a public key signature scheme does not imply trust
per se. Adopting a public key signature scheme only allows signature
verifiability without having to disclose the signing secret. Trust is bound
to the production by a truted third-party of a credential that binds the
signature verification key with a set of attributes. Trust is only
propagated by the credential and not intrinsic to the use of public keys.
For WPR exchanges, symmetric key is often sufficient - non-repudiation is
not always necessary or can be achieved without making use of a "mechanic
with strong mathematical foundations." Many times in the past, courts have
ruled in favor of well-defined and well-documented business processes
though
not founded upon mathematical concepts. In fact, a symmetric authentication
scheme with an adequate audit-trail and well-defined processes may stand
stronger than a public-key signature scheme with inadequate protection of
the private-key or an obvious lack of scrutany when establishing
credentials.
Sincerely,
Richard D. Brown
