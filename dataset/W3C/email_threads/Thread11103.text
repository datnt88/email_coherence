What do you mean, what's the difference? When it's implemented, the
desired thing happens. When it's ignored, nothing happens. When the
desired thing is nothing, you can't tell the difference, and so it
doesn't make much difference. Why does telling the difference make any
difference here?
The problem I have is the one you seem to recognize yourself. If someone
adds a keyword to a catalog because he has facilities for interpreting it,
how can he be sure that someone without those facilities can use it? Is it a
requirement that the addition of keywords to a catalog means that the
catalog can only be used on sites that support that keyword?
Martin Bryan, The SGML Centre, Churchdown, Glos. GL3 2PU, UK
On Tue, 1 Apr 1997 04:17:26 -0500 Martin Bryan said:
By 'use it' do you mean 'use the new keyword', or
'use the catalog'?
The draft wording says keywords other than public may but need
not be supported by XML processors. I don't know what part of this
is unclear. If you add a FREEMJET keyword to the SGML Open
Catalog, the XML-lang spec does not promise you that my XML
processor will be able to 'use' it in the sense of correctly
doing whatever it is you want processors to do with a FREEMJET
entry. If you want that promise, you need to get it on the basis
of other agreements which are, perforce, outside the scope of
the XML-lang spec.
No, it is not. The draft wording defines a catalog file (which ought
probably to be called a catalog entry file, in line with Paul Grosso's
more careful terminology) as containing keywords other than PUBLIC.
That means an XML processor must be able to read past them, whether it
chooses to support them or not. So if you add a FREEMJET keyword to the
SGML Open Catalog, the XML-lang spec does promise you that my XML
processor will be able to read past the FREEMJET entries, and therefore
that even processors which don't support FREEMJET (or, for that matter,
CATALOG, ENTITY, DELEGATE, or any of the other keywords defined by the
full SGML Open 9401 spec) will be able to use the PUBLIC entries in your
catalog file (as well as any other entry types the processor supports).
If there is another way to interpret the draft wording (e.g. as meaning
that an XML processor is required to handle the FREEMJET keyword, or
that an XML processor is allowed to signal an error on the CATALOG
keyword), I would be grateful for an explanation of that other
interpretation. At the moment, the draft still seems unambiguous to me.
-C. M. Sperberg-McQueen
We could require conforming processors to ignore keywords that are not
in the standard. Then processors that want to do something else are not
strictly speaking XML processors but they are backwards compatible with
them, and strict XML processors are forward compatible in a completely
predictable way.
Paul Prescod
Is there any real need for XML public ids to be SGML public ids?
I know I'm risking being heretical here, but it occurs to me that there can
be no strictly logical reason why XML public IDs should not conform to the
character set restrictions of URNs (as extended in the Mainz Unicode/HTML
Internationalization proposals) rather than those of SGML. Any SGML public
identifier would form a valid entry according to the URN rules. It is likely
that SGML will have to be revised to allow most 10646 characters at some
stage in the future (though when is anyone's guess). People using systems
which have an SGML parser in would be restricted to using the existing SGML
restrictions on character sets until such time as SGML changes, but those
simply using XML could take advantage of the advances in URN code set being
proposed if they so wish. Don't we get the best of both worlds
(Internationalized HTTP and old-fashioned file identification techniques) is
we adopt both approaches rather than going for the lowest common
denominator, the DOS 8/3 file naming conventions, that constrained the
original pi character set?
Martin Bryan, The SGML Centre, Churchdown, Glos. GL3 2PU, UK
Just so that XML would be a legal subset of SGML, one of our stated goals.
Why would we want to lose that at such a late stage in the game in order
to support a non-existant standard?
Paul Prescod
