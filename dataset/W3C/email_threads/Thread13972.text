Problems
1. Critical thought needs to be given to each of the guidelines to determine:
a. if it is still relevant
b. if it is doable and/or necessary for authors that are retrofitting
large numbers of pages
c. if we are asking authors to solve a problem that should be handled by
ATs or UAs
we have made an initial pass through the guidelines called, "deconstructing
the guidelines." you can see what we've done at
2. Do we want to continue to recommend or require changes that place
burden on authors when it is an AT or UA problem, assuming ATs or UAs will
solve the problem in the future? If we continue to include guidelines that
are particular to a single point in time or for a particular browser/AT
combination, then the guidelines are not timeless and will require frequent
updating (with each new release of a new ua/at). In other words, this
version might already be antiquated by the time it has passed through the
whole w3c process.
3. How do we determine when something is antiquated? or What is our
lowest common denominator? We have started collecting data on what screen
reader/browser combinations are most widely used. By monitoring this data
we should be able to determine general trends of usage and when we can drop
certain guidelines (assuming we want to maintain fixes authors can provide
for today's (6/5/1998) browsers and ATs).
4. How do we present the guidelines so that authors are able to easily
select those that apply to them?
5. By including strategies in the guidelines are we limiting what authors
will try to do? Are we limiting creativity for finding more accessible
solutions? Are these the only ways people can satisfy the guidelines? Do
we need to separate the strategies from the guidelines?
We should not be ignoring things because they are AT problems - my
authoring tools are most commonly vi, notepad, simpletext (all text
editors) or a set of Macros in a non-HTML aware version of MS Word. This
is deliberate - it enables me to write accessible code easily.
The Guidelines are there for (among other groups) people like me, to
learn how to do it properly. If I were using an accessible AT I wouldn't
need to read most of the guidelines (in theory), and I would expect the
ones I did need to read would be provided to me by the software I had
paid good money for.
UA problems are stock-in-trade for the guidelines - it is important that
they point out what the problems are with current UA's (and older ones
are still current in many cases) as part of the rationale for a guideline.
The current debateabout dlinks and LONGDESCs is an example of where it is
important to understand that UAs do not necessarily solve a problem as we
would hope when we read the specification. Therefore, an author has to
pick up the slack. (Ultimately, the buck stops with the authors as well
as the browser manufacturers)
Charles McCathieNevile
I agree for UA: we should avoid markup guidelines that can be
implemented by UA, like "put your link on separated line". I know it's
not ideal, since some screen reader will get screwed, but it's part of
my model of what W3C should normalize vs. what the WAI can work on in
addition to the normalization process.
For AT, it's a different problem. GL is the main input for AT, so I
don't see anything dropped from GL into AT. GL is really about what
goes *in* the markup file, whoever (page author) or whatever (AT) has
generated it.
Very nice document.
I wish we could all get in a room and go over it in a couple of days
and be done with this work :-)
Exactly my point: let's concentrate on things that we know or believe
are not going to be deprecated anytime soon: use structure
appropriately, provide textual version of image/video/audio; let's
make sure all pages can be _serialized_ and still make sense when read
and navigated in that form.
