The next HTTP train to leave the station is not the last train.
However, it became clear that there is increasing pressure from IETF
that we produce a revised version of HTTP in the next few months that
reduces pressure on Internet backbone and service providers by
supporting persistent connections, caching, and host identification,
and that everything else is lower priority.
On the other hand, we're not going to scuttle everything else
intentionally, it's just a matter of getting all the issues worked
out.
I'm not sure what prompted you to generate such an impassioned plea:
this is a short-term effort to get something short-term out; we're
going to immediately begin on the next version (you know, 1.2) as soon
as we finish this one.
The point is not whether the chunked encoding is in or out of HTTP/1.1
In fact I would if anything prefer it to be out if anything. What I was
reacting to was a suggestion that the footers be dropped from chunked
and put in HTTP/1.1. This is a change I can see absolutely no technical
justification for whatsoever. I also fail to see any political advantage
which would mean getting the spec to proposed standard earlier.
Thinking that reports of such a change might have been subject to a certain
degree of confusion I thought it best to send a private message to the
chair rather than exciting the whole list over what could well have been
a simple misunderstanding or confusion.
If people were indeed worried by any additional complexity involved in the
handling of footers they need only construct a very simple FSM to strip
out the additional items.
What I am concerned about that in a rush to get 1.1 out the door decisions
will be made which will cause us compatibility problems in 1.2. It would
be something of an embarassment to have to introduce a second encoding for
no other reason than the first one had been fumbled.
In summary I suggest that we ensure that wherever possible the 1.1. spec
requires implementations to be tolerant in accepting and call to attention
the areas where extension is likely.
Phill
I'm sorry, I was just completely confused by your message. It was rude
of me to forward it to the list, though, and I apologize.
I don't think our procedure is 'make random changes to get things out
the door'. I think our procedure is 'make things solid if we can; if
they're not solid, leave them out of 1.1 and revert to 1.0'. So,
chunked isn't in 1.0. If we put it in 1.1, it will be with agreed-upon
specification.
Chunked is handy for persistent connections, because it lets you deal
with content where you don't know the length. If we really have
trouble specifying chunked agreeably, we could take it out, and leave
persistent connections restricted to those cases where either the
client accepts multipart and the server wants to send it, or else the
length is known.
Well the situation from my perspective is that I am quite happy
with the 1.1 spec for chunked encoding, I think that as specified
it is OK. There is the one piece of wording which I would like to have
changed which would have no impact on 1.1 generators but would allow
later specs to possibly extend the chunked encoding. That is not so
important however.
What I was reacting to was a number of reports that the meeting at
the IETF had suddenly decided on a 90 degree turn, to change the spec
for the worse but without anyone being able to give a reason for
the change.
I don't think that there is actually any real disagreement, just some people
nervous that there might be. Chunked encoding has been suggested for a very
long time. I remember us discussing it back in '93. I really don't think that
we need to kick it arround forever. Once one has decided to render a stream
as a sequence of chunks there are only three places where one can attach attributes, at the beginning, at the end and on each chunk. I se a need for the first and the second of these today, they allow digital signatures to be attached to d
dynamically created content. There is a posibility we might need the third at
a later date so I would like us to hold open the door for that but not make
a commitment at this time.
Phill
