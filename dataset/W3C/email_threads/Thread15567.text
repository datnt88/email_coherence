In last week's Techniques call [1] we were talking about some
characteristics we wanted to require for data tables. For some of those
characteristics, it seemed that we might only want to require them for
complex data tables, but not for simple data tables. Possible parts of a
definition are:
* Complex tables have more than one row of headers, or more than one column
of headers, or both.
* Complex tables have cells for which header cells are not in the same row
or same column as the cell.
* The HTML 4.01 specification provides some hints as well. [2]
These are just thrown out for ideas. We'd like to hear from members of the
list: how would you (or would you) define a data table as simple or complex?
By the way, I'm not talking about the features we were thinking of applying
only to complex data tables because I don't want to create a tangent about
that. We'll open that discussion once we have some agreement about
differentiating these tables.
Michael
[1] http://www.w3.org/2004/05/19-wai-wcag-irc
[2] http://www.w3.org/TR/html401/struct/tables.html#non-visual-rendering
--- Signature ---
Michael Cooper
Accessibility Product Manager, Watchfire
1 Hines Rd Suite 200, Kanata, ON K2K 3C7 Canada
Web: http://www.watchfire.com/
Would this be a good time to start organizing and sending over to Wendy et
al. my rather extensive collection of mind-bendingly-complex tables?
Cf.
http://fawny.org/webstandards/bookmarks/bookmarks-040526.html#ex26_vIl6B3 ,
but I've got tons more, in links, PDFs, and (gasp) print.
As ever, I emphasize examining real-world usage rather than anything else.
Joe Clark | joeclark@joeclark.org
Accessibility http://joeclark.org/access/
Expect criticism if you top-post
Hello All,
This is with reference to the definition of complex tables and use of summary attribute. What might go into a summary is also demonstrated.
As a user of AT, I regard tables with multiple header rows and / or columns as a complex table. I'll illustrate this in a moment. Of course tables in which header (or data) cells need to be associated to data cells that are not exactly below them or exactly to their right (in a l-r system) are complex.
If the purpose is to say complex tables need summaries, I'll add a few more types to the above:
- a table (otherwise characterized as simple) which has rows for control breaks. eg. First column is labeled Month and cells below it contain Jan, Feb, etc. But every fourth cell does not contain a month but a description like: Total for Q1, Total for Q2. In this case the summary attribute should be used to explain presence of row with quarterly totals to a screen reader user .
- Another case is also a simple table with no column headings at all! Consider:
Caption: Train timings from New York to Washington DC
(Following are cell contents separated by a comma)
Train #1 Departs 5 am, Arrives 8 am
Train # 2, Departs 5.30 am, Arrives 8.45 am
Train # 3, Departs 6 am, arrives 8.55 am
and so forth.
In this table a summary should be used to tell the screen reader user to navigate the data table withverbosity setting to read only row headers.
- Yet another case is David's example of traffic cop: a table in which the third column cells contains data in a list structure. There can be multiple links in a cell as in this case. It makes sense to navigate this table as a data table but when one gets to the third column, one must simply exit table nav mode and use arrow keys to read each list item or link separately. In table navigation mode the content of third columns are read as a chunk which can be overwhelming and not very useful. A summary should aid navigation by explaining this to the user.
For simple tables with one row and one column of headers summary is really not necessary.
Complexxity caused by col span and row span: four examples follow.
Note: in examples below, R1C1 means row 1 col 1, and so forth. I have not used HTML code and hope the manner of presentation used below is effective.
Example 1: Table with col span in first row:
First row of headers:
R1C1, R1C2 col span= 2, R1C3 colspan =3
Second row of headers:
R2C1, R2C2, R2C3, R2C4, R2C5, R2C6
Then there are data rows with six cells.
Example 2:
Same as example 1 above but second row of headers appears first and is followed by the first row with three cells, two of which use col span as above.
Example 3: Same as example 1 but also introduces rowspan from row# 3 onwards in data rows in first column
Example 4: First and last columns use rowspan starting with row# 3 which are data rows
First row of headers:
R1C1, R1C2 col span= 2, R1C3 colspan =3, R1C4
Second row of headers:
R2C1, R2C2, R2C3, R2C4, R2C5, R2C6, R2C7=empty
Third row (data row):
R3C1 rowspan=2, R3C2, R3C3, R3C4, R3C5, R3C6, R3C7 rowspan=3
Fourth row (data row):
R4C2, R4C3, R4C4, R4C5, R4C6
Fifth row (data row):
R5C1, R5C2, R5C3, R5C4, R5C5, R5C6
... and so forth where row span in first and last columns are not synchronized.
And there are even more complex designs.
Screen readers are generally programmed to read column / row headers when they change. So unless a user scours the table layout and understands the structure and the spanning which can be very very daunting in situations like example 3 and 4 above, it is difficult to understand the contents.
Expecting a screen reader user to understan a table that uses only th and scope can be an accessibility nightmare. Such tables need headers and id. I admit screen readers can do a better job like announcing span, repeating header for spanned cells and interpreting scope better.
But this will not obviate the need for a summary or cause such a table to be characterized as simple fromm the user's as well as the developer's perspective.
The summary should explain the layout and how rows and columns are spanned. For instance, a summary for example 4 should explain that R1C2 has two sub columns R2C2 and R2C3, etc. The first column contains row headers that apply to multiple rows. The last columns has remarks that apply to more than one row. Armed with this info one can navigate effectively as well as efficiently and not devote a whole lot of time to figuring out the layout.
Sailesh Panchang
Senior Accessibility Engineer
Deque Systems,11180 Sunrise Valley Drive,
4th Floor, Reston VA 20191
E-mail: sailesh.panchang@deque.com
* Look up http://www.deque.com *
I certainly agree with Sailesh that tables with multiple header rows and/or
header columns (and with row and/or col spans) are complex and difficult to
comprehend with a screen reader. However that is not the definition of
complexity that interests me. I want the question to be, for what class of
tables are TH (and scope) inadequate to present the headings structure of
the table so that the headers/id markup would be required. Those are the
tables I want to be called complex. We can leave the word "complex" out of
the requirement and paraphrase from Sailesh's message with:
Headers/id markup is required for tables in which heading cells are
associated with data cells that are not exactly below them or exactly to
their right. (I don't like the wording either!)
As Sailesh knows from the tool he works with, when all heading cells for a
data cell are found in data cell's row and column (an l-r system) then the
headers/id markup, if you want to add it, can be algorithmically generated
knowing the heading rows and columns, in effect, knowing the TH's. That is
exactly why I think headers/id markup should not be required in these cases.
Since the headings information can be algorithmically generated, I think we
should leave it to screen readers (assistive technology) to figure implement
the algorithm.
I still like the idea of requiring summary or CAPTION for data tables and
summary="" for layout tables.
Jim
Accessibility, What Not to do: http://jimthatcher.com/whatnot.htm.
Web Accessibility Tutorial: http://jimthatcher.com/webcourse1.htm.
Sorry, my last message did not respect Michael's request to stick to the
definition, and not what would be required when. So how about three classes
of data tables - to separate out those tables where there may be
disagreement as to what should be required:
From Michael's message
* Complex tables have cells for which header cells are not in the same row
or same column as the cell.
* Layered tables have more than one row of row headers and/or more than one
row of column headers and header cells are in the same row and/or column as
the data cell.
* Simple tables have at most one row and at most one column of headings and
header cells are in the same row and/or column as the data cell.
It seems we could agree to those, even if not the term "layered".
Jim
Accessibility, What Not to do: http://jimthatcher.com/whatnot.htm.
Web Accessibility Tutorial: http://jimthatcher.com/webcourse1.htm.
Of Michael Cooper
In last week's Techniques call [1] we were talking about some
characteristics we wanted to require for data tables. For some of those
characteristics, it seemed that we might only want to require them for
complex data tables, but not for simple data tables. Possible parts of a
definition are:
* Complex tables have more than one row of headers, or more than one column
of headers, or both.
* Complex tables have cells for which header cells are not in the same row
or same column as the cell.
* The HTML 4.01 specification provides some hints as well. [2]
These are just thrown out for ideas. We'd like to hear from members of the
list: how would you (or would you) define a data table as simple or complex?
By the way, I'm not talking about the features we were thinking of applying
only to complex data tables because I don't want to create a tangent about
that. We'll open that discussion once we have some agreement about
differentiating these tables.
Michael
[1] http://www.w3.org/2004/05/19-wai-wcag-irc
[2] http://www.w3.org/TR/html401/struct/tables.html#non-visual-rendering
--- Signature ---
Michael Cooper
Accessibility Product Manager, Watchfire
1 Hines Rd Suite 200, Kanata, ON K2K 3C7 Canada
Web: http://www.watchfire.com/
Good solution. It makes sense not to try to lump together things that
don't lump.
"Good design is accessible design."
Please note our new name and URL!
John Slatin, Ph.D.
Director, Accessibility Institute
University of Texas at Austin
FAC 248C
1 University Station G9600
Austin, TX 78712
ph 512-495-4288, f 512-495-4524
email jslatin@mail.utexas.edu
web http://www.utexas.edu/research/accessibility/
Behalf Of Jim Thatcher
Sorry, my last message did not respect Michael's request to stick to the
definition, and not what would be required when. So how about three
classes of data tables - to separate out those tables where there may be
disagreement as to what should be required:
From Michael's message
* Complex tables have cells for which header cells are not in the same
row or same column as the cell.
* Layered tables have more than one row of row headers and/or more than
one row of column headers and header cells are in the same row and/or
column as the data cell.
* Simple tables have at most one row and at most one column of headings
and header cells are in the same row and/or column as the data cell.
It seems we could agree to those, even if not the term "layered".
Jim
Accessibility, What Not to do: http://jimthatcher.com/whatnot.htm.
Web Accessibility Tutorial: http://jimthatcher.com/webcourse1.htm.
-----Original Message-----
Behalf Of Michael Cooper
In last week's Techniques call [1] we were talking about some
characteristics we wanted to require for data tables. For some of those
characteristics, it seemed that we might only want to require them for
complex data tables, but not for simple data tables. Possible parts of a
definition are:
* Complex tables have more than one row of headers, or more than one
column of headers, or both.
* Complex tables have cells for which header cells are not in the same
row or same column as the cell.
* The HTML 4.01 specification provides some hints as well. [2]
These are just thrown out for ideas. We'd like to hear from members of
the
list: how would you (or would you) define a data table as simple or
complex?
By the way, I'm not talking about the features we were thinking of
applying only to complex data tables because I don't want to create a
tangent about that. We'll open that discussion once we have some
agreement about differentiating these tables.
Michael
[1] http://www.w3.org/2004/05/19-wai-wcag-irc
[2] http://www.w3.org/TR/html401/struct/tables.html#non-visual-rendering
--- Signature ---
Michael Cooper
Accessibility Product Manager, Watchfire
1 Hines Rd Suite 200, Kanata, ON K2K 3C7 Canada
Web: http://www.watchfire.com/
Correcting typo and using "irregular" instead of "complex":
* Irregular tables have cells for which header cells are not in the same row
or same column as the cell.
* Layered tables have more than one column of row headers and/or more than
one row of column headers and header cells are in the same row and/or column
as the data cell.
* Simple tables have at most one row and at most one column of headings and
header cells are in the same row and/or column as the data cell.
Jim
Accessibility, What Not to do: http://jimthatcher.com/whatnot.htm.
Web Accessibility Tutorial: http://jimthatcher.com/webcourse1.htm.
I find these definitions all but impossible to understand:
I tried to rewrite them so they made more sense. I'm not sure they do. I'm
not sure we're anywhere near a clear definition.
Complex tables
have cells whose headers are not in the same row or same column as the
cell
Layered tables
have headers that occupy more than one row or column. They also have
header cells in the same row and/or column as the data cell
Simple tables
have at most one row and/or one column of headings. Header cells are in
the same row and/or column as the data cell
I really think you're all looking at this too abstractly. You need to
examine table examples (perhaps many dozens) and classify them. From
there, you may be able to boil down some categories.
Nonetheless, I don't see how these _n_ categories of tables are really
helpful, save for HTML or PDF techniques. The accessibility advice remains
the same-- use valid code and use headers where possible. Right?
Joe Clark | joeclark@joeclark.org
Accessibility http://joeclark.org/access/
Expect criticism if you top-post
Sorry for being so abstract and technical, Joe. The purpose of these
definitions is for internal (techniques group) communication, so we could
talk about and understand on which kinds of tables certain markup is
required. After having understood and agreed on that, we would hope that
those like you with the gift of writing would be able to help with (take
care of) the wording. I think your wording is good too - repeated here with
"irregular" replacing "complex" because the latter word has been used too
much.
* Irregular tables have [data] cells whose headers are not in the same row
or same column as the cell
* Layered tables have headers that occupy more than one row or column. They
also have header cells in the same row and/or column as the data cell
I actually like the characterization "has more than one row of column
headers or more than one column of row headers". I am just not sure about
the phrase "occupy more than one row or column" - technically, I'm not sure.
* Simple tables have at most one row and/or one column of headings. Header
cells are in the same row and/or column as the data cell.
I think we could define "irregular cell" and "simple cell" and with those
two definitions cover the three above ... but that is getting too technical.
I think the accessibility advice you propose ("use valid code and use
headers where possible") is OK for advice but in some cases we think
headers/id markup should be required and we were trying to understand when
that would be.
Jim
Accessibility, What Not to do: http://jimthatcher.com/whatnot.htm.
Web Accessibility Tutorial: http://jimthatcher.com/webcourse1.htm.
