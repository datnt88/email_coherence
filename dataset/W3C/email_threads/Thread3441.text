Wired.com announced 3 days ago that they switched to a fully standard
compliant backbone:
"Wired News has a different appearance, but the new design isn't just
about look and feel. The site now complies with standards recommended by
the World Wide Web Consortium for greater access to all users."
(this very page has actually a small HTML error, but the second page of
the article is indeed XHTML 1.0 valid and with a lot of CSS - try the
various available style sheets with Mozilla).
Great news :)
Dom
Dominique Haza?l-Massieux - http://www.w3.org/People/Dom/
W3C/INRIA
for more details, see Eric Meyer's interview of the project manager :
the site now validates :-)
indeed.
related articles for french-reading people here :
and http://www.nitot.com/standards/blog/archives/2002_octobre.php#82839278
--Tristan
Netscape Technology and Standards evangelist, Europe.
It's written in XHTML which is not well-formed - that's worse than HTML tag
soup. Furthermore, the page lacks a proper character encoding declaration,
meta http-equiv="Content-Type" isn't sufficient in XHTML. And constructs
like
or
aren't examples for good XHTML either.
From: "Christoph Schneegans"
standard
HTML tag
Strongly disagree here. I do not think that Tag Soup, including use of
Fonts, absolute sizing, improper nesting, Headers for bolding.
blockquoting for indents, and sizing is better than XHTML, even if there
are some minor items needing a change.
Of course we woud need a nice definition of what TAG soup means to apply
reasoning adequately.
On a more general approach, TAG Soup, to me, means excessive extra tags
and no organization, application of tags or elements not in the ways
which were meant.
I see:
/
and not the other mentioned, unless we are looking at different pages -
this is on the index.html
page that I see this.
And constructs like
a href="#" onclick="setActiveStyleSheet('', 1);return false;"
Not sure where a problem with this one may be?
Why not on these items?
Choice of words?
Mixed case? [attribution words are not limited to lower case]
Use of class vs ID [re-usable styles for same doc page need class, one
time use per page ID]
or?
Does this page work on Text only or Lynx view and make sense?
Will an HTML doc with Tag Soup, degrade similarly for those cases, and
allow as many user options?
Interesting thoughts you posted, but I would like to hear more about why
or how this XHTML fails and why tag soup would be better?
holly
Interview between Eric Meyer sna the designer of the Wired site (that explains the compromises) here:
Just because it ain't perfect doesn't mean that it ain't good progress.
John
Thor Larholm
URL: http://www.jibbering.com/faq/ FAQ for comp.lang.javascript
URL: http://jscript.dk/unpatched/ Unpatched IE vulnerabilities
And constructs like
a href="#" onclick="setActiveStyleSheet('', 1);return false;"
Basically, the link will do nothing without scripting. If it had a
server fallback, like href="setStyleSheet?id=1", or was only shown
when scripting was enabled (via DOM or document.write), then there
wouldn't be a problem.
Tom Gilder
From: "Tom Gilder"
And constructs like
a href="#" onclick="setActiveStyleSheet('', 1);return false;"
Ok. Well I was under some impression that there was php type server side
options or switches, for those without scripting options? But maybe my
impression was false? And if this is the case and it is tied to only DOM
or JavaScript enabled use, perhaps linking to a PHP sheet switch may be
in order... though cookies enabled may also be a factor in having this
apply to each new page load. [In which case it may be better to leave
all these options up to a user and his or her learning how to use their
own tools, devices, or browsers to enhance their web viewing] It would
be optimal if browsers put these option buttons clearly on the main
browsing menu bar as default, and also allow advanced users the option
of customization of same bar if they wish to take it off.
Other than that, the page, if written appropriately, is always resizable
via browser options, and there are many ways that a user can define or
set their own style sheets to replace any sheet on a web site, or use an
Opera browser to switch them off or another on, resize text more
quickly.
Personally, the text sizing feature is just an added extra service and
not mandated nor required on any site to display. More or less this item
or option is a short cut to options already included inside a user's
browser, already, and may in fact be rather limiting in size range as it
works now.
Personally, though nice, I think the range is geared and offered to a
rather average using group, and not as much towards all accessibility
users. Those users are more likely to have a battery of tools or options
to use, including knowledge on how to increase their text for their own
viewing after using the web enough.
Though it is nice to offer added extra help in these ways, it is not
really our option to train or teach users how to use their computers or
devices? is it? If we feel or wish to help or give some hand in that,
this is an extra plus on the choice of the designer, though not
necessary.
In no way am I stating or saying that we should not make web sites
accessible or available to user options.
Do we now need to supply various browser use information and options
with all web sites? How to use your browser to optimally view a web
site?
holly.
I didn't say that. I noted that this page uses XHTML which is not
well-formed. Strictly speaking, this is not XHTML at all. When delivered
with a MIME type such as "application/xhtml+xml", XHTML user agent won't
render it but give you an error message.
This is worse than tag soup because HTML user agents have learned to deal
with invalid HTML.
Of course that's what I'm referring to. This kind of character encoding
declaration *is* unsufficent in XHTML, see
http://www.w3.org/TR/xhtml1/#C_9 .
a href="#" onclick="setActiveStyleSheet('', 1);return false;"
It doesn't work unless you enable JavaScript. Anyway, changing font sizes
can be easily performed within the user agent.
!-- BEGIN colMain --
div class="content"
div class="storyCap"
div class="pgTitle"
They tried to separate content from style. The only child of the div
obviously superfluous and serves no function of the contents.
In http://devedge.netscape.com/viewsource/2002/wired-interview/ , Douglas
Bowman states that he wrote "nested tables 10 levels deep". Well, he's going
to make the same mistake again, this time with div's instead of tables.
and
are other examples for markup without any meaning.
No. Did *you* try it? The "Skip directly to ... Content" link doesn't work,
and all these navigation and search bars at the top of the page really don't
make sense.
I don't see any advantages at all.
Staying positive and learn from the past mistakes is always more constructive.
Wired has switched. I will say bravo even if it's not perfect. But
more, what we can try to find is why they failed on certain points,
as how we can understand why they have chosen this more than that.
This story gives a good opportunity to write a better tutorial and to
improve explanation for people that will wish to do the same. People
may even want to work with Douglas Bowman to improve Wired XHTML
move, version 2.0.
We all learn of others mistakes, so we have to be indulgent and
helped them when it's necessary and try to make it better at each
version. Nobody's perfect but the openess will help up to achieve
quality.
As Olivier will say "STEP BY STEP" and I might keep the role of the
"STRICT GUY" ;)
So look, identify, learn, and improve your methods, this is the keys.
Karl Dubost / W3C - Conformance Manager
--- Be Strict To Be Cool! ---
