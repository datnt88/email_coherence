I would be content if [FPIs] could be viewed as
one long silly-looking string that we use in a character for character
match.
The original request (and the 5,00 lines,0 I think) included Formal
System Identifiers.
Having said that, if you don't care what's inside the FPI, it might as
well be any string. So it could be a string that looks like a URL.
So it could be a URL. In particular, it could be the same string as
the URL used for the system identifier for the DTD.
In other words, another way to look at it is that XML _only_ has public
identifiers, but all XML public identifiers are actually called SYSTEM
rather than PUBLIC, and take the form of URLs.
The only thing in practice today that an FPI gives you is that you can
compare it to one in a printed standard... anything downloaded over the
net is likely to differ from the formally published text anyway, and there
is not yet any way to resolve FPIs automatically that does not involve
writing a letter to the GCA or ISO...
If you want the kind of indirection a catalog gives you, you can use
Apache 1.1 and put Redirect or Alias commands in an .htaccess file.
For non-Internet use, I don't see FPIs as an issue right now.
Lee
Broken practice isn't a reason not to design something correctly in the
first place. Had URIs preceded HTML, we'd see a very different Web today.
This may work, but would you advocate this to a Fortune 500 as a solution?
Agreed. But I'm assuming we'll want to use XML on the Internet, where FPIs
will be, if not essential, at least very useful.
Murray
Murray Altheim, Program Manager
Spyglass, Inc., Cambridge, Massachusetts
"Give a monkey the tools and he'll eventually build a typewriter."
If the Web had waited for the URI problem to get solved, we wouldn't
have a Web today. I think the problem of figuring out how to name things
properly in the context of a heterogeneous universal network is just
too hard, and anyhow orthogonal to XML.
On the other hand, a handful of vendors on the floor at SGML'96 were
showing off working software with typed multiway multimodal hyperlinks
doing things that HTML can currently only dream of. The spirit of
XML so far has been to go for the quick kills and pluck the low-hanging
fruit. Which in retrospect seems wise; let's stay with it.
Which is a long-winded way of saying that I just haven't seen any
evidence in the field that FPI's have any *practical* utility other
than serving as a rather lengthy and awkward lookup key in a catalog.
I think the problem that FPI's purport to try to solve is in fact
a real problem, and in fact as soon as there is working technology
out there that demonstrably uses FPI's (or some other mechanism)
to solve it, we should adopt the proper attitude of gratefulness
and steal it.
The kind of argument on the WG that would succeed in swinging me
(and I suspect a lot of others) toward including FPI's would be a war
story along the lines of "here's how we used FPI's to solve important
problem X, and here's where you can go and look at the software that
does it." Of course, the software function would have to be something
that you could do in a lightweight, compact implementation.
Cheers from Melbourne, Oz. - Tim
I think a concise statement of the problem FPIs are intended to solve
and a shorter primer of how they do that would be invaluable as well
because otherwise, they really do look like an overbuilt lookup.
Because the URC came up in another post, I recall a lot of discussion
on the syntax issues of using SGML for that. Many of the arguments
were based on parsing problems in SGML, the speed of value-pairs vs
hierarchies, etc.
1. Might XML help in the parsing problem of the URC?
That isn't a work item here, but I am curious because
a lot of work went into the Dublin core, etc.
2. Are the implementation problems of the FPI related to the
parsing difficulty, the resolution, interoperation with other
resolution components, what? James? (saying it takes 5000
lines doesn't help me understand why it takes 5000 lines).
len
As long as you are connected to the SYSTEM, the Internet, and it meets your
needs, that's fine. But PUBLIC identifiers are not tied to any particular
system. This makes them convenient, but perhaps not absolutely required in a
system geared towards the web.
But PUBLIC identifiers put that redirection under the control of end-users.
There are numerous techniques for doing redirection on the server side.
Paul Prescod
That was not my point. To be sure, it is so difficult a problem that yes,
the Web was built exclusive of the solution. But stating something is
simply too difficult does not make it go away. And why it's considered
orthogonal to XML is beyond me. We wouldn't be having this discussion if it
was truly orthogonal. 'Orthogonal' seems to have become a popular way of
saying 'I don't want to deal with this.'
I have a rather simple argument, and nothing along the lines of the
manifesto you demand (and maybe others are willing to deliver):
"I don't want to hard code a SYSTEM identifier in 10,000 documents."
Using even relative URLs (which doesn't really solve the problem, and
introduces others such as ambiguity) provides no level of indirection,
which is required for portability.
I just read Jon's plea for movement of discussion back in line with our
agenda, so until we revisit this issue (after hyperlinks), I'll shelve this
one.
Murray
Murray Altheim, Program Manager
Spyglass, Inc., Cambridge, Massachusetts
"Give a monkey the tools and he'll eventually build a typewriter."
Indirection could be (and should be) provided for in the markup. Once we get
hyperlinking working, couldn't you embed an XML fragment that is referenced
in an XML document at another site in another character set?
Isn't this hyperlinks? A syntax for objects to embed other objects sounds
like linking to me.
Paul Prescod
And that is why they are critical to me. Not that there may be lookup
but that there must be and on the client side.
But perhaps that is exactly what we are trying to avoid.
A URL is all on the front end. An FPI is
by definition NOT on the front end and guarantees indirection.
Are we trying to forbid indirection and force front-endedness?
Is that the objection?
P.S.
Because of ownership, accidental name duplication is very easy to avoid.
Both registered and unregistered (the 99% case) provide simple but very
real duplication protection. (It is easy to screw up your own stuff but
very hard to screw up someone elses if you follow the rules at all.)
Me too. Could be issue number one. BTW, when the syntax phase
started, an extensive set of proposal/questions was posted.
Will that be done for this phase, or are we winging it?
len bullard
[Murray Altheim:]
I was asking to defer the discussion of stylesheets. FPIs actually
belong to the current draft, and what some people are requesting is
the reconsideration of a previous decision. So this discussion is in
order here, though its resolution may turn out to hinge on decisions
that we will be making about linking mechanisms.
Jon
