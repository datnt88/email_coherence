John Boyer has provided a new version of the Canonical XML specification
[2], as well as a document capturing the resolution of Last Call Issues [1].
We are awaiting some feedback from implementors (do the examples work?) and
last call commentators (are the issues satisfactorily resolved?) but
otherwise expect to request Candidate REC status within a few weeks.
[1] http://www.w3.org/Signature/2000/09/06-c14n-last-call-issues.html
[2] http://www.w3.org/TR/2000/WD-xml-c14n-20000907
Status of this document
This is the fourth draft of this (XPath based) Canonical XML
specification and it addresses all issues raised during the [17]second
Last Call which ended July 28, 2000. While this specification attempts
to capture the resolution of all issues, the list and disposition of
last call issues itself is[18] a living document maintained by the
[19]XML Signature Working Group. The Working Group expects to finish
the documentation on all issues within a week and then request that
the Director advance the document to Candidate Recommendation
This specification includes editorial and technical clarifications and
corrections suggested by last call reviewers. Additionally, this
version also includes examples as well as two substantive differences
from the previous version:
1. The only change to the canonicalized output is the reduction of
redundant namespace declarations (see section 4.6: [20]Superfluous
Namespace Declarations).
2. The processing model is changed with respect to the input
expectations. Instead of an XPath expression, the canonical
process expects an XPath node-set (or functional alternative such
as octets that represent a well-formed XML instance).
[20] http://www.w3.org/TR/2000/WD-xml-c14n-20000907#SuperfluousNSDecl
The [21]XML Core Working Group, which published the first Last Call
[22][C14N-20000119], has delegated the completion of the Canonical XML
specification to the IETF/W3C [23]XML Signature Working Group
[[24]list archives].
[21] http://www.w3.org/XML/Activity#core-wg
[22] http://www.w3.org/TR/2000/WD-xml-c14n-20000907#C14N-20000119
[23] http://www.w3.org/Signature/
[24] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/
Joseph Reagle Jr.
W3C Policy Analyst mailto:reagle@w3.org
IETF/W3C XML-Signature Co-Chair http://www.w3.org/People/Reagle/
Hi.
Two questions:
1. How can I know as an implementor of xml_dsig whether a canonicalization
or transform with algorithm
http://www.w3.org/TR/2000/WD-xml-c14n-20000907 was done with or without
comments?
2. Consider the following example:
Transform
Algorithm="http://www.w3.org/TR/2000/WD-xml-c14n-20000907" /
Are the elements of Object treated as #PCDATA, or do I have to apply C14N?
Regards,
Juergen
Hi Juergen,
The algorithm identifier for C14N with comments is different. It is
This is reflected in the editors' copies I posted (see the archives), and
will be present in the next rev of the WD.
Thanks,
John Boyer
[mailto:w3c-ietf-xmldsig-request@w3.org]On Behalf Of Juergen Brauckmann
Hi.
Two questions:
1. How can I know as an implementor of xml_dsig whether a canonicalization
or transform with algorithm
http://www.w3.org/TR/2000/WD-xml-c14n-20000907 was done with or without
comments?
2. Consider the following example:
Transform
Algorithm="http://www.w3.org/TR/2000/WD-xml-c14n-20000907" /
Are the elements of Object treated as #PCDATA, or do I have to apply C14N?
Regards,
Juergen
