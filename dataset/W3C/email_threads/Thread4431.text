DM 4.5.2 and G.4 say that dm:parent of a namespace node
is "the parent element node". It does not define
what this means.
However, none of the namespace nodes in D Example
show a value for dm:parent, though dm:parent is
shown for other nodes.
Should there be a constraint in 4.3.1 and/or 4.5.1 that
is a namespace node has a parent, then it should be among
the namespace of its parent? The converse constraint would
prohibit sharing of namespace nodes, as in D example.
The issue should at least be mentioned.
One solution is to just define dm:parent of a namespace as ().
--Per Bothner
per@bothner.com http://per.bothner.com/
The signature for the sum function now says that it can return the empty
sequence. However, it is unclear when this would ever happen. If it is
passed the empty sequence, it returns 0, not the empty sequence.
Thanks,
Priscilla
The intention is that the model is the same as the XPath 1.0 model, i.e.
there is a one-to-many relationship between element nodes and namespace
nodes, this relationship is called "dm:namespaces" in one direction and
"dm:parent" in the other.
You are right that this isn't clearly expressed in the current document.
Michael Kay
The XPath 1.1 specification (section 5.4) says: "Elements never
share namespace nodes: if one element node is not the same node
as another element node, then none of the namespace nodes of the
one element node will be the same node as the namespace nodes of
another element node."
(This seems awfully wasteful, though I guess implementors can
create the namespace nodes on-demand.)
The quoted section expressly contradicts the Example in appendix D
of the Data Model document, where all the elements have the same
set of namespace nodes:
dm:namespaces(E2) = ([N1], [N2], [N3], [N4], [N5])
--Per Bothner
per@bothner.com http://per.bothner.com/
[I assume by 1.1 you mean 1.0?]
A na?ve implementation certainly is very wasteful. Even implementations that
create the nodes on demand (as I suspect most XPath 1.0 implementations do)
can incur considerable costs. This is why we have deprecated the namespace
axis: this means that an XPath 2.0 implementation never needs to expose
namespace nodes to the application, which in turn means that questions about
their identity and parentage are somewhat academic. Having deprecated the
namespace axis, it made sense to decide that where it is supported, it
should be supported with exactly the XPath 1.0 semantics.
It looks as if the appendix needs to be fixed.
Michael Kay
Yes.
Thanks for affirming and clarifying this. Perhaps it would be useful
to add wording similar to that in XPath 1.0 (that each element has
a complete set of non-shared namespace nodes), but with the note
that this only applies to implementations that wish to offer
XPath 1.0 compatibility. I don't see any such explicit statement
about what namespace nodes exist (in such an implementatation).
--Per Bothner
per@bothner.com http://per.bothner.com/
You are correct. The signature of fn:sum() should NOT have a "?" on its
return type e.g. the return type should be xdt:anyAtomicType.
/paulc
Chair, XML Query WG
Paul Cotton, Microsoft Canada
17 Eleanor Drive, Nepean, Ontario K2E 6A3
empty
is
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1
/ Per Bothner per@bothner.com was heard to say:
I've clarified the 12 Nov spec and added a note to the example
to explain the lack of parents on the namespace nodes.
Be seeing you,
norm
Norman.Walsh@Sun.COM / XML Standards Architect / Sun Microsystems, Inc.
NOTICE: This email message is for the sole use of the intended
recipient(s) and may contain confidential and privileged information.
Any unauthorized review, use, disclosure or distribution is prohibited.
If you are not the intended recipient, please contact the sender by
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)
Comment: Processed by Mailcrypt 3.5.8 http://mailcrypt.sourceforge.net/
iD8DBQE/skM7OyltUcwYWjsRAh3HAJ0dG1s9jIKdCRTIoVTiMCSZw1KaogCfWQgi
0/7M/wmK4QWv0lBUi9Ck05M=
=gNjT
-----END PGP SIGNATURE-----
