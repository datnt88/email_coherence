New draft of CSS Techniques for WCAG 2.0 available for discussion [1].
I did not add or delete any content, although I added several editorial
notes, reordered a couple of sections, added short names to each technique,
and added tasks to most of the techniques.
History of this draft:
- This summer, Loretta converted the previous draft (published 16 July 2001
[2]) to our techniques dtd. Our dtd changed since then, so I cleaned up
the xml to conform to our new dtd. Note that the screen shots (from the
July 2001 draft) did not make it into the new draft. I also added an
abstract and status that are similar to the HTML Techniques for WCAG 2.0
(published to /TR earlier this month).
- Current WCAG 1.0 draft: CSS Techniques for WCAG 1.0, published 20
September 2000 [3].
Best,
--wendy
[1] http://www.w3.org/WAI/GL/WCAG20/WD-WCAG20-CSS-TECHS-20031219.html
[2] http://www.w3.org/WAI/GL/WCAG20/WD-WCAG20-CSS-TECHS-20010716/
[3] http://www.w3.org/TR/2000/NOTE-WCAG10-CSS-TECHS-20000920/
wendy a chisholm
world wide web consortium
web accessibility initiative
Roughly scanned the Techniques document, but there are at least three issues
I found worth to announce here... First, in 'Formatting and positioning of
text' [2] there is a todo item called '@@example showing use of
"word-spacing"', but you mean 'letter-spacing', I guess. Two ready-to-use examples are
span style="letter-spacing: 5px; text-transform:
uppercase;" hello /span
where IMO the second proposal is quite better since it also demonstrates the
use of the 'text-transform' property as mentioned in the text style section
[3].
Second, in 'Text equivalents for content generated by style sheets' [4] it's
said 'Provide a text equivalent for [...] text generated by style sheets',
but I wonder how you want to achieve this (technically)? Do you suggest a
static note everywhere it might occur? I don't know any 'elegant' way to do this
yet, and IMO it shouldn't be recommended to generate 'real' content in CSS.
By the way, there even is the problem that you cannot copy generated content
to the clipboard yet, what I perceive as an accessibility problem anyway.
Generated content might of course be useful e.g. related to quotes or direct
attribute access via 'attr(foo)'.
Third and last but not least, 'Providing good structural markup' [5] (as an
expression) seems somehow weird to me, since it sounds like 'keep well and
fit' -- everyone wants to fulfill this goal, but it's not well-defined per se,
is it?
All the best, merry christmas,
Jens.
[1] http://www.w3.org/WAI/GL/WCAG20/WD-WCAG20-CSS-TECHS-20031219.html
[2]
[3]
[4]
[5]
Jens Meiert
Interface Architect
What is the Accessibility / Usability rule of thumb for using absolute
and relative units? Can someone please point me to a very good
explanation to this (with examples), because it seems to me that
something like the above example is much better being addressed in
relative units (maybe I'm wrong).
I use relative as much as possible. For what cases should absolute be
used in place of relative? In the case of this CSS Tech doc, which
encourages absolute for margins, in pixels, does that only apply to
media for screen only? What do you do for handhelds, etc. Doesn't
there need to be a distinction here? What is wrong with
BODY { margin-left: 0.5em; margin-right: 0.5em}
instead of
BODY { margin-left: 15px; margin-right: 15px}
Isn't the relative one more flexible for user and device?
Regards
Geoff Deering
