The basic idea of treating rdf:XMLLiteral as a datatype means
that there
are two different kinds of datatypes - I(rdf:XMLLiteral) and
all the other
datatypes. The two different kinds of datatypes work completely
differently, but there is no way of distinguishing between them.
I agree with Peter here.
I think that the best way to go would be to remove rdf:XMLLiteral
entirely. It is a bastard amalgam of syntax and semantics
that provides
far greater pain than benefit.
Another option, and one which I've suggested several times, is to
revert the definition of XML literals to that defined by M&amp;S, that
there would be no rdf:XMLLiteral datatype, but that we would have
three types of literal: the two original M&amp;S types of literal, plain
and XML, for which the lang tag is significant, and the new type of
literal, typed literals, for which the lang tag is not significant.
D-interpretations only are relevant to typed literals. Not to either
plain literals or XML literals.
This way, we can give the special treatment we need to XML literals
without it mucking up the semantics of typed literals.
I would like to make this a formal proposal to both Peter and the WG.
Patrick
Patrick Stickler, Nokia/Finland, (+358 40) 801 9690, patrick.stickler@nokia.com
Jeremy is the one to ask. Jeremy, can we do this?? Note that this
would then mean that we could GET RID OF LANG TAGS IN THE GRAPH
ALTOGETHER. Just thought I'd mention it in passing.
Reverting rdfs:XMLLiteral to M&amp;S XML literal would also allow for
removing lang tags from typed literals, since there would no longer
be any typed literals for which lang tags were semantically significant.
This provides for a very clean distinction between traditional, M&amp;S
literals, for which lang tags are included, and the new typed literals
for which lang tags are not included.
Patrick
Brian,
Can we plan to include in that discussion my proposal to revert to
M&amp;S XML literals?
Given the two options -- M&amp;S XML literals and Peter's proposal -- M&amp;S
literals seems the safer bet, since they are well understood and there
is substantial prior implementational experience with them, and also
reverting to M&amp;S XML literals is more in sync with the charter, providing
a overall solution that is closer to the original definition of RDF.
Patrick
From: ext Jeremy Carroll [mailto:jjc@hplb.hpl.hp.com]
Sent: 04 April, 2003 09:32
Subject: Re: pfps-08 last call comment on typed literals
This is a very nice idea.
Brian can I have two minutes at the telecon to see what we do
about it
procedurally.
Jeremy
From: pat hayes phayes@ai.uwf.edu
Subject: Re: pfps-08 last call comment on typed literals
Date: Thu, 3 Apr 2003 17:42:12 -0600
I think that the best way to go would be to remove rdf:XMLLiteral
entirely. It is a bastard amalgam of syntax and semantics
that provides
far greater pain than benefit.
Yeh, well, the world isn't perfect. Whatareyagonnado?
Complain! Maybe even object.
If, however, it is not possible to remove rdf:XMLLiteral,
then why not
separate its syntactic and semantic components? Simply
make it be the case
that the processing of rdf:XMLLiteral in the RDF/XML does all the
non-standard stuff in the translation to triples (much
like rdf:nodeid
does).
We have done except for the lang tag business.
So finish the job! :-)
So the translation of
subject
predicate parsetype="rdf:XMLLiteral"
[some text]
/predicate
/subject
into a triple would be something like
subject predicate "[some other text]"^^rdf:XMLDocument .
where [some other text] included all the junk involved
with rdf:XMLLiteral,
including the language tag stuff.
Jeremy is the one to ask. Jeremy, can we do this?? Note that this
would then mean that we could GET RID OF LANG TAGS IN THE GRAPH
ALTOGETHER. Just thought I'd mention it in passing.
Pat
This would allow rdf:XMLDocument to be a
standard datatype. You could even use rdf:XMLLiteral instead of
rdf:XMLDocument if you really needed to, but I wouldn't
recommend it.
Pat
peter
peter
From: ext Jeremy Carroll [mailto:jjc@hplb.hpl.hp.com]
Sent: 04 April, 2003 12:31
Subject: RE: pfps-08 last call comment on typed literals
So finish the job! :-)
I think I will try to echo what I hear Peter suggest, since
Patrick seems to
be (1) following this thread (2) of the opinion that there is
not a proposal
that changes rdf:XMLLiteral to be a normal rather than a
special datatype.
Well, I wouldn't be opposed to rdfs:XMLLiteral being a normal datatype,
if that essentially means that the lang tag becomes irrelevant to
equality tests. In which case, we could still then remove lang tags
from typed literals.
I've never much liked the idea of lang tags infecting XML literals,
which I consider to be fragments disjunct from the semantics of
the RDF/XML serialization itself. But I won't go there (again)...
So:
We have not been contemplating changing either:
1) the rdf:parseType="Literal" syntax
2) the representation of this, as a canonical XML doc, in the
domain of
discourse
Agreed.
We have changed the treatment so that:
most of the syntactic transformation of from (1) to (2) is
done in Syntax
and not in rdf:XMLLiteral mapping rules.
We could go the whole hog, and make the mapping rules of
rdf:XMLLiteral the
identity.
Leaving (2) fixed we have that the syntax document not only has to
canonicalise the literal content, but also it converts it into an XML
document as currently specified in concepts.
This would change test cases: e.g.
rdf:RDF
rdf:Description xml:lang="en"
rdfs:comment rdf:parseType="Literal"
b Bold /b /rdfs:comment
/rdf:Description
/rdf:RDF
would correspond to n-triples
_:a rdfs:comment
" rdf-wrapper
xml:lang=\"en\" b Bold /b /rdf-wrapper "^^rdf:XMLLiteral .
or something like that (I don't swear I've canonicalized correctly).
Whether or not we include a redundant @en in the literal is
immaterial.
I think that requiring parsers to do the canonicalization would be
an onerous burden and not one that would be easy to sell. But since
I'm not a parser implementor, and if you and Dave think it's no
biggie, then who am I to suggest otherwise ;-)
In any case, I really wouldn't like to see rdf-wrapper ... in
the actual graph. I didn't much like it as a conceptual element.
I will like it less as a real element.
We may well then have
rdf:XMLLiteral as a subdatatype of xsd:string
i.e. it is completely well-behaved and may or may not have
synonyms and we
don't care, and language tags never participate in l2v
mappings. We could
even ditch them all together from typed literals.
Well, I still think that reverting to M&amp;S XML Literals (and ditching
lang tags from typed literals) is the better way to go all around.
It doesn't change the parseType syntax. It doesn't change the
canonical representation of XML literals. It retains the lang
tag (unfortunately) but in that way remains true to M&amp;S.
The definition of typed literals and D-interpretations is thus
freed from "contamination" from the legacy literal types.
Patrick
I share Graham's view on this. If we keep XML literals as datatyped
literals, then let's remove lang tags entirely, which also alleviates
any need for rdf:wrapper elements.
I would not be favorable to actual rdf:wrapper elements in the
abstract graph.
Patrick
#g
So finish the job! :-)
I think I will try to echo what I hear Peter suggest, since
Patrick seems to
be (1) following this thread (2) of the opinion that there
is not a proposal
that changes rdf:XMLLiteral to be a normal rather than a
special datatype.
So:
We have not been contemplating changing either:
1) the rdf:parseType="Literal" syntax
2) the representation of this, as a canonical XML doc, in
the domain of
discourse
We have changed the treatment so that:
most of the syntactic transformation of from (1) to (2)
is done in Syntax
and not in rdf:XMLLiteral mapping rules.
We could go the whole hog, and make the mapping rules of
rdf:XMLLiteral the
identity.
Leaving (2) fixed we have that the syntax document not only has to
canonicalise the literal content, but also it converts it into an XML
document as currently specified in concepts.
This would change test cases: e.g.
rdf:RDF
rdf:Description xml:lang="en"
rdfs:comment rdf:parseType="Literal"
b Bold /b /rdfs:comment
xml:lang=\"en\" b Bold /b /rdf-wrapper "^^rdf:XMLLiteral .
or something like that (I don't swear I've canonicalized correctly).
Whether or not we include a redundant @en in the literal is
immaterial.
We may well then have
rdf:XMLLiteral as a subdatatype of xsd:string
i.e. it is completely well-behaved and may or may not have
synonyms and we
don't care, and language tags never participate in l2v
mappings. We could
even ditch them all together from typed literals.
Jeremy
Graham Klyne
GK@NineByNine.org
PGP: 0FAA 69FF C083 000B A2E9 A131 01B9 1C7A DBCA CB5E
