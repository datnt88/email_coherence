Hi,
I tripped across http://www.w3.org/Addressing/schemes.html
recently. Wanted to mention a couple of quickies:
The jdbc naming scheme is linked to the Sun documentation for the
jdbc class that doesn't seem to even mention the URL scheme.
A quick search on google reveals what the jdbc url should look
like, but doesn't show up any authoritative documentation.
In GnuCash, we've started using a jdbc-like URL of the form:
postgres://some.hostname.com:portno/dbname?option=value&amp;user=username&amp;passwd
=pwd
I beleive that the way we use this syntax is identical to its jdbc
equivalent:
jdbc:postgres://some.hostname.com:portno/dbname?option=value&amp;user=username&amp;p
asswd=pwd
except that it is understood that the former uses the native postgres
format for the wire protocol, whereas the latter uses the jdbc wire
protocol.
I don't know if this usage is too trite to mention, but I thought I'd
mention it anyway ... (BTW, we are now actually using a half-dozen
private URL schemes in order to control the display an layout of the
financial reports. I won't describe them here, as they are still
evolving.)
--linas
Linas Vepstas
Linas Vepstasby way of Martin Duerst duerst@w3.org
Are all of these new URI schemes really so necessary to create? Why not
simply use a special text syntax, and, if necessary, stick them in HTTP.
[ Aaron Swartz | me@aaronsw.com | http://www.aaronsw.com ]
The vnd.* URL syntax doc is currently in Last Call, and represents a
simple and safe way to do this if you feel you really need distinct URL
schemes. -- Ian
Linas Vepstasby way of Martin Duerst duerst@w3.org
Are all of these new URI schemes really so necessary to create? Why not
simply use a special text syntax, and, if necessary, stick them in HTTP.
[ Aaron Swartz | me@aaronsw.com | http://www.aaronsw.com ]
