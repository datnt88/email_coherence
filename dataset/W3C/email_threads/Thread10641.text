The chairs will have to rule on whether my claims below that some of
these comments are out of scope/charter are on target.
ISSUE http://www.w3.org/2001/sw/RDFCore/20030123-issues/#xmlsch-08
We believe there are probably good reasons for using an rdf:datatype
attribute, instead of re-using the existing xsi:type attribute which
has (when the type is defined in a schema defined by XML Schema 1.0)
the same semantics.In particular, rdf:datatype does not assume or
assert the existence of the type named as a type in a schema defined
by XML Schema, so it would be problematic to use xsi:type.
Just commentary, no discussion or changes required. We also agree
there are good reasons that xsi:type as designed is not appropriate
for RDF/XML which uses with URIs for datatypes, not qnames. Maybe
the XML schema WG wants to hear more reasons why xsi:type wasn't
used?
We do fear, however, that users are likely to find this
near-duplication of the meaning and function of xsi:type confusing. It
is not clear to us what, if anything, can or should be done to
minimize this danger.
The Primer is the place that users can already look for to see how to
write RDF datatypes in the RDF/XML syntax:
There is already discussion near figure 9
Summary: closed. explanation, no action
ISSUE http://www.w3.org/2001/sw/RDFCore/20030123-issues/#xmlsch-09
"We were unable, on a first reading, to determine whether the default
namespace declaration, and thus unprefixed names, were or were not
allowed in order to encode 'RDF URI References'."
That XML detail is discussed in "The Syntax Data Model Section"
where it already states in the fifth paragraph:
"The syntax does not support non-well-formed XML documents, nor
documents that otherwise do not have an XML Information Set; for
example, that do not conform to XML Namespaces [XML-NS]."
-- http://www.w3.org/TR/2003/WD-rdf-syntax-grammar-20030123/#section-Data-Model
So if there is no namespace name, it isn't RDF/XML.
Summary: closed. explanation, no action
ISSUE http://www.w3.org/2001/sw/RDFCore/20030123-issues/#xmlsch-10
"cannonical syntax"
Discussion of out of what I believe is out of RDF Core's charter,
creating a new XML syntax or modifying RDF/XML (created 1998)
to work with XML technology designed later.
"The RDF Core WG is neither chartered to develop a new RDF syntax,"
-- http://www.w3.org/2001/sw/RDFCoreWGCharter
Summary: closed. we don't have to do this, out of charter ??
ISSUE http://www.w3.org/2001/sw/RDFCore/20030123-issues/#xmlsch-11
"layering on xml"
There is some explanation to do since they seem to have missed
reading the Syntax Data model section in defining RDF/XML on top of
the pile of XML technologies.
Not only does this confuse levels and thus readers, it also runs the
risk of inadvertently defining an XML subset. It also appears, on a
strict reading, to rule out XML documents not derived from the parsing
of character streams as possible RDF/XML (so that it would be
illegitimate to regard a data structure created using a DOM interface,
for example, as RDF/XML).
It neither creates a subset nor rules out using other XML APIs as
long as an XML Infoset is available.
"This model illustrates one way to create a representation of an
RDF Graph from an RDF/XML document. It does not mandate any
implementation method - any other method that results in a
representation of the same RDF Graph may be used.
In particular:
* This specification does not require the use of [XPATH] or [SAX2]
* This specification places no constraints on the order in which
software transforming RDF/XML into a representation of a graph,
constructs the representation of the graph.
-- http://www.w3.org/TR/2003/WD-rdf-syntax-grammar-20030123/#section-Data-Model
Action: closed. explanation, no changes
ISSUE http://www.w3.org/2001/sw/RDFCore/20030123-issues/#xmlsch-12
"capricious syntax"
Discussion and proposal for a better XML syntax (RDF/XML 1998) to
better match the RDF concepts and abstract syntax (2002). Out of
charter:
"The RDF Core WG is neither chartered to develop a new RDF syntax,"
-- http://www.w3.org/2001/sw/RDFCoreWGCharter
Comments on the problems W3C XML schema (designed 1999/2000), XSLT
and XQuery has dealing with RDF/XML and its many variations.
Long comments on difference between XML and RDF data models meaning
different tool sets. Tree (sort of) and graph. We knew that.
Proposal to work together to create new XML serializations.
Action: closed
out of charter/scope??,
coordination group work??
joint work / postponed work / feedback to new activities??
Dave
Dave
I think you've misunderstood some of these - I get the impression that the XML
Schema WG have tried hard not to be antagonistic with their comments.
e.g. they say
Other
members of the WG feel that it verges on disrespect to assume that you
need instruction on this point.
at a point where, IMO, they have just made a helpful comment. (Not on syntax
though).
ISSUE http://www.w3.org/2001/sw/RDFCore/20030123-issues/#xmlsch-09
"We were unable, on a first reading, to determine whether the default
namespace declaration, and thus unprefixed names, were or were not
allowed in order to encode 'RDF URI References'."
I understood this as asking, is:
a legal RDF/XML document (assumning entity correctly defined).
My understanding is that it is; but, without looking, I wouldn't be surprised
if the text could do with editorial polish on this point.
ISSUE http://www.w3.org/2001/sw/RDFCore/20030123-issues/#xmlsch-10
"cannonical syntax"
Discussion of out of what I believe is out of RDF Core's charter,
creating a new XML syntax or modifying RDF/XML (created 1998)
to work with XML technology designed later.
"The RDF Core WG is neither chartered to develop a new RDF syntax,"
-- http://www.w3.org/2001/sw/RDFCoreWGCharter
Summary: closed. we don't have to do this, out of charter ??
I am not convinced by the "out of charter" argument. My reading of the
suggestion is that if we specified a subset of the current syntax that could
serilalize any graph then expressing some RDF within that subset would
potentially allow XQuery to work better with it.
This would loosely correspond to the basic syntax in M&amp;S.
e.g.
We could permit:
RDF
nodeElement
nodeElementList
ws
propertyEltList
propertyElt (but not with rdf:li)
literalPropertyElt
parseTypeLiteralPropertyElt
emptyPropertyElt
nodeIdAttr
aboutAttr
resourceAttr
datatypeAttr (but not with rdf:XMLLiteral)
parseLiteral
URI-reference
literal
I believe that with that, possibly subject to the further constraints:
- that each nodeElement must be uniquely identified by an rdf:about or
rdf:nodeID
would result in a much more regular subset of the syntax which could be used
more effectively with XML technologies.
(I have excluded:
propertyAttrs
reification syntax
collection syntax
container syntax
all the parseTypes except for Literal - even that possibly should be
excluded
ISSUE http://www.w3.org/2001/sw/RDFCore/20030123-issues/#xmlsch-11
"layering on xml"
There is some explanation to do since they seem to have missed
reading the Syntax Data model section in defining RDF/XML on top of
the pile of XML technologies.
Not only does this confuse levels and thus readers, it also runs the
risk of inadvertently defining an XML subset. It also appears, on a
strict reading, to rule out XML documents not derived from the parsing
of character streams as possible RDF/XML (so that it would be
illegitimate to regard a data structure created using a DOM interface,
for example, as RDF/XML).
It neither creates a subset nor rules out using other XML APIs as
long as an XML Infoset is available.
I tend to agree with your reading, but would see no harm in a more
conciliatory addition e.g.
in section 6
The first paragraph talks about "sequence of events", in a way which, to me,
clearly does not presuppose the existence of a document to hand.
We could consider an addiitonal sentence, at the end of that first paragraph,
along the lines of:
The sequence of events may arise from a non-document representation
of an XML infoset, for example,. a DOM tree.
On a personal level I would prefer the spec not to say that, because I am
getting complaints that ARP does not support such functionality! (Not that I
would admit that it didn't conform if we made the change!)
ISSUE http://www.w3.org/2001/sw/RDFCore/20030123-issues/#xmlsch-12
"capricious syntax"
While your out-of-charter stance is technically correct, and formally our only
option, I wonder whether the long term good of the semantic web would be
aided by us indicating that we agree with much of this comment. We could
point to the new work being started with the HTML WG on embedding RDF inside
validated xhtml.
It may also help for us to identify those usecases for which RDF/XML *is* a
good match. There are a few, and it would be good to enumerate them.
Another intersting thing to consider on this one is that from an XML point of
view one of the more capricious aspects of RDF/XML is its use of qnames.
However, this use appeals to the semantic web community as a whole, even those
who try not to touch RDF/XML with a bargepole.
Jeremy
Hi Dave,
Thanks for the speedy analysis.
As a general point, I hope that the WG will respond warmly to the comments
we have received from the xml schema folks. To my mind, there has in the
past been a gulf in our respective points of view, and I believe that with
a little care we may be able to build some bridges across that gap.
We believe there are probably good reasons for using an rdf:datatype
attribute, instead of re-using the existing xsi:type attribute which
has (when the type is defined in a schema defined by XML Schema 1.0)
the same semantics.In particular, rdf:datatype does not assume or
assert the existence of the type named as a type in a schema defined
by XML Schema, so it would be problematic to use xsi:type.
We do fear, however, that users are likely to find this
near-duplication of the meaning and function of xsi:type confusing. It
is not clear to us what, if anything, can or should be done to
minimize this danger.
So my reading of this is that they wondered why didn't just use xsi:type,
and figured out part of the answer. I suspect there is a spread of opinion
within that group and we can help by giving a clear explanation of why we
didn't use xsi:type.
So we can say that we didn't introduce rdf:datatype capriciously, but because:
- we use URIREF's not qnames as identifiers
- to allow qnames in just one attribute would have caused confusion and
we felt that introducing
the use of qnames throughout the syntax was beyond our charter
- and, as they point out, we allow datatypes not defined by xml schema
- we recognise the potential for confusion, we have explained as best we
can in the primer, but if they have other editorial suggestions, we'd be
happy to hear them.
"We were unable, on a first reading, to determine whether the default
namespace declaration, and thus unprefixed names, were or were not
allowed in order to encode 'RDF URI References'."
Personaly, I'm not sure what is being said here.
I think what they are getting at is whether or not QNAMES are required, for
example
is legal RDF but there are no qnames in it. The text they quote:
[[In order to encode the graph in XML, the nodes and arcs have to be
represented by XML element names, attribute names, element content and
attribute content. RDF/XML uses XML QNames to represent RDF URI References.
The namespace prefix part of all QNames is associated with a URI Reference
as defined in XML Namespaces [XML-NS]. The RDF URI Reference represented by
a QName is determined by appending the local name part of the QName to the
URI Reference associated with the namespace prefix part of the QName. This
is used to shorten the RDF URI References of all property arcs labels and
some nodes. RDF URI References identifying subject and object nodes can
also be stored as XML attribute values or XML element names via QNames. RDF
Literals (which are only object nodes) become either XML element text
content or XML attribute values.]]
left them unsure at first reading whether the above example was legal. At
least that is my guess at what is being said, but it might be good to
confirm that.
If that is the concern, then a minor editorial change to the quoted
paragraph would clear it up.
I suggest we can agree that it is hard to process RDF with general XML
tools such as XSLT for the reasons they point out but that RDFCore decided
that this issue was outside our charter. None the less we recognise that
there is some disquiet about the current RDF/XML syntax, we have tabled an
issue for consideration by a future WG and would hope that WG would welcome
involvement of the xml schema wg. We could also note that the XHTML WG are
already considering a DTD friendly syntax for inclusion in XHTML documents
with the support and encouragement of the RDFCore WG.
Not only does this confuse levels and thus readers, it also runs the
risk of inadvertently defining an XML subset. It also appears, on a
strict reading, to rule out XML documents not derived from the parsing
of character streams as possible RDF/XML (so that it would be
illegitimate to regard a data structure created using a DOM interface,
for example, as RDF/XML).
I found myself wondering more about this comment. The suggestion that the
syntax is defined at the character level seems just wrong. It is also
noteworthy that the approach they suggest of considering a transform into a
canonical form is not dissimilar to the snail approach we considered, and
rejected.
This comment belongs in the category of "we would have done it
differently", which may be true, but there you go. I think the response
might also include:
- agreement that layering of specs is important
- emphasis that unlike M&amp;S the grammar is not character level, but is
built on top of an infoset
- acceptance that are other ways to do it, some of which we considered
(snail) and why we decided on this approach (the grammar is clearer)
Right, and we should say we recognize and share these concerns.
How much of their arm would they like us to bite off?
Right - postponed work.
Brian
