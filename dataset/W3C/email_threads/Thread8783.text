Joesph,
I see no qualifier (RQUIRED, RECOMMENDED, OPTIONAL) for the schema
validation transform that is mentioned in the latest PR for XML Dsig. What
is the status of this? Did I just miss it?
Thanks,
Blake Dournaee
Toolkit Applications Engineer
RSA Security
"The only thing I know is that I know nothing" - Socrates
We can call it optional if we can get interop on an example of this as an
explicit transform. Anyone want to send an example to the list?
Joseph,
we (IAIK) have not yet implemented XML and schema validation transform.
BTW: Reading sections 6.6.6 and 6.6.7 of [1], a lot of questions emerge:
(1) In section 6.6.6 it states: "If the input is an XPath node-set, this
node-set must be serialized first." An explicit statement how to
perform this serialization is missing here. Should Canonical XML
be used therefore?
(2) The other question is, if it makes sence to perform a XML validation
transform at all, if the input is an XPath node set. Since the XPath
data model does not know about a DTD information item, I am not sure
what effects a validation transform should have in such a case?
(3) I am not sure what should be the result of the XML schema validation
transfrom. The text in section 6.6.7 only says: "that the document
should be processed according to information within the resource
being transformed." But what does this mean? Should the PSVI mapped
to the output XPath node set?
[1] http://www.w3.org/Signature/Drafts/xmldsig-core/
Liebe Gruesse/Regards,
DI Gregor Karlinger
Phone +43 316 873 5541
Institute for Applied Information Processing and Communications
Austria
From: Joseph Reagle [mailto:reagle@w3.org]
Sent: Friday, September 14, 2001 9:29 PM
bdournaee@rsasecurity.com; sugiyama@isd.nec.co.jp; bal@microsoft.com;
kent@trl.ibm.co.jp; gregor.karlinger@iaik.at
Subject: Re: Question for Implementors (Was: Schema Validation
Transform)
Implementors,
Have any of you implemented DTD or schema validation as an explicit
transform? (I understand that not everyone will want to, but
we've learned
for those plan on using schema validation [1] or DTD validation [2], we
need an explicit transform identifier, which means, even if
option, we need
two independent implementations.)
If not, will you soon? Is there something in the specification you are
having difficulty with?
(Also, note, if you haven't been following the list closely,
we're likely to tweak the DNAME encoding
slightly [3]).
[1] http://www.w3.org/Signature/Drafts/xmldsig-core/#sec-XMLValidation
[2] http://www.w3.org/Signature/Drafts/xmldsig-core/#sec-SchemaValidation
[3]
My rough tally then is 5 implementors have responded that they do not have
immediate plans to implement XML or Schema validation as a Signature
transform. Baltimore has some support for both [1,2]. This is fine, no one
is advocating these features as requirements. Folks will get to them in due
time. However, our problem is that folks *will* get to them, and they'll
wonder how to do it properly. This question has already identified a few
ambiguities in our spec that we've been able to fix.
The immediate question facing us then is what to do with these parts of the
spec in the mean time? Please send your response (particularly from
implementors) by the end this week. Should we:
1. Retain the sections [3] as is and wait for interop.
2. Retain the sections [3]in a modified form and argue they are merely
INFORMATIONAL. Neither transform requires much by way of a specified
feature. If we eliminated the porting of a schema as a child of the
Transform Algorithm="&amp;schema;"/ , all we are doing is agreeing upon the
algorithm URI, and repeating what the XML and schema inputs/outputs to the
vaidation are from their own specs.
2. Remove the sections (but continue to leave hints that schema and XML
validation should be treated as transforms).
4. Remove the sections and place them in the Auxillary Algorithms draft?
Whatever we do, we *might* have to bounce back down to a last call or CR
before going to REC for a few weeks, but I'm less concerned with that then
getting consensus on a good decision on our options above.
[1]
[2]
[3]
If delays would otherwise be incurred, I would vote for
moving the two new transforms to the auxillary algorithms
draft and clarifying in the spec how implicit parsing
should be performed (well formed?).
Merlin
r/reagle@w3.org/2001.09.19/17:38:42
Baltimore Technologies plc will not be liable for direct, special, indirect
or consequential damages arising from alteration of the contents of this
message by a third party or as a result of any virus being passed on.
In addition, certain Marketing collateral may be added from time to time to
promote Baltimore Technologies products, services, Global e-Security or
appearance at trade shows and conferences.
This footnote confirms that this email message has been swept by
Baltimore MIMEsweeper for Content Security threats, including
computer viruses.
This has been reflected in:
o If the data object is an octet stream and the next transform requires a
node-set, the signature application MUST attempt to parse the octets
yielding the required node-set /+via [XML] well-formed processing.+/
o If the data object is a node-set and the next transform requires octets,
the signature application MUST attempt to convert the node-set to an octet
stream /+using Canonical XML [XML-C14N].+/
I'm not convinced the latter addition (using C14N) is completely right
though, but I think it is.
