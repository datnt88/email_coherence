From: Paul Prescod papresco@calum.csclub.uwaterloo.ca
3. We're trying to create XML so as to encourage more/better/cheaper
tools. So my question is: what's wrong with current tools--from
an end user's point of view--that won't be wrong with XML tools?
What is the barrier to entry to SGML from an end user's point of view
and how does XML propose to address it?
The barrier to entry for SGML is that it must be converted to HTML because
browser writers won't support a language with a DTD. XML solves the browser
writers' problem, which will also solve the end user problem (providing we
don't overcomplicate XML in our obsession with ease of parsing).
XML on its own does not solve the browser problem. The browser
writers are still faced with the problem of style sheets. The reason
there are so many cheap HTML browsers is because it is _very_ easy to
figure out how to display HTML (well, for the most part). DSSSL may
solve the problem, but it solves it in a rather difficult to
understand and implement way. XML will be an easy sell to browser
writers if it comes packaged with a useful but simple style-sheet
mechanism. DSSSL might work, if someone would write a good book about
it, or at least about DSSSL online. Maybe Cascading Style Sheets
(CSS) is an easy (quick and dirty) answer; I have not had a chance to
look into it properly. There was a great deal of discussion about why
CSS is too simplistic a month back on comp.text.sgml, but it may be
"good-enough" for a first run. Every one here seems to want XML tools
today, but we don't even have a DSSSL capable browser now, how many
months after the standard's publication?
I do not mean to cut down DSSSL. DSSSL looks to me to be a great
possiblity, for the future. A XML/DSSSL browser will not be able to
compete with a HTML browser in today's market though. It will look too
slow. It will definitely have a market, but it will lack a real
mass-market appeal. (But boy would I kill for a good, extensible
DSSSL browser to play with... with some work on on-line display
extensions to the standard, you could use SGML/DSSSL to do everything that
HTML, CSS, Java, Javascript, etc are _trying_ to do now. Now that
would be fun.)
XML is one important part of the picture, and although DSSSL is one
way to help fill in the whole picture, I don't see it as being an
immediate answer. No, I don't have any better ideas, and I would love
to be proved wrong. (This is one of those rare cases where I _want_ to
be wrong.)
-enjoy,
derek
Derek Denny-Brown derdb@techno.com | Technical Staff @ TechnoTeacher, Inc.
SGML/HyTime/DSSSL/WWW | http://www.techno.com/
Best regards,
--Steve
* Steven R. Newcomb | President *
* direct +1 716 389 0964 | TechnoTeacher, Inc. *
* main +1 716 389 0961 | (courier: 3800 Monroe Avenue, *
* Internet: srn@techno.com | P.O. Box 23795 *
* FTP: ftp.techno.com | Rochester, New York 14692-3795 *
* WWW: http://www.techno.com | USA *
[Derek Denny-Brown derdb@techno.com :]
True.
(Speaking officially)
The various statements of purpose for this effort have consistently
assumed that the Web SGML solution uses dsssl-o for the stylesheet
component.
(Speaking as a WG participant)
XML will motivate the incorporation of DSSSL into browsers, not the
other way around. HTML browsers don't need DSSSL, but XML browsers
won't be able to get very far in the problem domains that require them
if all they have is CSS.
Jon
Hey, DSSSL isn't trivial--neither is the problem of "presentation."
There are three DSSSL engines in the works. James Clark's engine
is already in alpha testing.
Too slow? I don't really think that is necessarily true. We are seeing
very good response times on DSSSL formatting without *any* optimization
or use of a JIT compiler. (Our DSSSL engine is written in Java).
The only way to ensure that XML and DSSSL will be a solution is to require
some level of DSSSL compliance. The question is (James, correct me on
this one) is there a minimal set of features that could be defined that
would allow a DSSSL engine to be "easy" to implement but still be
compliant with the DSSSL standard? Is this DSSSL-online?
DSSSL is a "today" solution if we want to make it so.
R. Alexander Milowski http://www.copsol.com/ alex@copsol.com
Copernican Solutions Incorporated (612) 379 - 3608
