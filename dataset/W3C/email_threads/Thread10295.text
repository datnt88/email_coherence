I meant to send this to RDFCore but messed up the distribution list.
Sorry folks.
Brian
-----Forwarded Message-----
From: Brian McBride bwm@hplb.hpl.hp.com
Subject: I18N Comments
Date: 14 Jul 2003 15:09:15 +0100
During the summing up on last Friday's telecon, I asked whether folks
felt we had identified a show stopper problem with RDFCore's I18N
support. Pat said he wasn't sure what the problem was; others agreed.
Patrick said he saw issues but didn't see them as show stoppers.
However, some folks had dropped off the call as a result of a comms
failure and didn't have a chance to respond. Please could you respond
to this email, if you feel such a showstopper has been identified and
can describe what it is.
Brian
My impression is that no showstopper has been identified, but the current
approach will be quite painful for some. I can't tell if this pain is
sufficient to impair the utility or impede the adoption of RDF in the
applications where it should be favoured.
#g
Graham Klyne
PGP: 0FAA 69FF C083 000B A2E9 A131 01B9 1C7A DBCA CB5E
Have we identified whom?
Brian
Duerst" duerst@w3.org
current
I think those who want to qualify mixed content
with language tags and maintain a distinction
from plain literals. I.e. those who want to say
xml"..."@en
or
"..."@en^^rdfs:XMLLiteral
neither of which are supported by RDF directly.
Of course, that's simply qualified that blank node
more precisely, without actually clarifying its
denotation ;-)
Patrick
I will need to change a number of OWL Test Cases, which have natural
language XML Literals being used in OWL.
I will need to add additional span elements.
These are handwritten.
I am overcome with pain.
Jeremy
Since you ask, application developers, I guess (more than tool developers).
If I were writing an RDF application that dealt extensively with properties
containing human readable text (e.g. properties like rdfs:comment or
foaf:name, which I think might include applications like your meeting
assistant), which might also reasonably contain some kind of additional
markup (HTML tags, Ruby?), then I think that I would find having two
different ways of handling language tags would be a real pain; it would
create alternative code-paths where there should really be just
one. Having to add things like the suggested span elements to convey
language information would, I think greatly complicate some of those paths
to the extent that some developers might be tempted to skip handling those
forms of data that might be needed for effective I18N.
I started in this debate feeling quite neutral, but the more I think about
it the more I find that I dislike the special treatment of XML in RDF.
All of the actual RDF applications I've contemplated use literals in one of
two ways:
(a) as human-readable text, and
(b) as simple data values with their own formatting rules and other properties.
In the past, I never really considered there to be an important role for
XML *within* RDF literals, and have been happy enough to let others drive
that aspect of the design in ways they thought useful. But the proposition
that XML in RDF literals is provided to extend the range of human-readable
text is one that I find compelling, particularly in the face of I18N, and
one that doesn't really sit comfortably with the current design (for
reasons like those noted above, and in Pat's earlier message [1]).
I think our datatyping design does gives us a very clear and direct way to
avoid this problem of "how shall we treat XML - as text with markup or as a
formal data representation language?", as I noted previously [2]:
Finally, I observe that dropping XML literals from the RDF specification
does not preclude the later introduction of XML literals as currently
defined -- they are simply another datatype. The difference would be that
said datatype is not automatically signalled by the presence of
parseType="Literal".
The treatment of any XML as anything other than text-with-possible-markup
can be indicated, as with any other form of literal text, by the
application of a datatype.
I also find myself revisiting the question: what is the purpose of
language tagging in RDF? I think we agreed some time ago (can't find
record) that the purpose of a language tag was not for presentation, but
for recording additional information about the content. To the extent that
human readable text is opaque to automated systems (cf. social meaning
debate), I'm wondering why it's so important at all. Ho hum.
#g
[1] http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jul/0067.html
[2] http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jul/0155.html
Graham Klyne
PGP: 0FAA 69FF C083 000B A2E9 A131 01B9 1C7A DBCA CB5E
Jeremy,
For clarity, I think the "current approach" refers to the one in the
current ed's working drafts per previous WG decisions. Is that what is
overcoming you with pain?
Brian
