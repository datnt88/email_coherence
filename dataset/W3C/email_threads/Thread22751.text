I've got some very basic DOM questions that I'm sure have been discussed
here before, but it's been tough searching for anything in the archives, and
I've run out of time. Thank you for your patience.
First, I wanted to verify that the read-only attribute of a Node is
implementation-specific as of DOM Level 2. DOMException provides for
NO_MODIFICATION_ALLOWED_ERR which may be raised when modifications to an
object are not allowed, but application-level determination of the read-only
state is not defined by the DOM interfaces, and must be defined by the
implementation. Is that a correct statement?
Secondly, I'm wondering about Node.removeChild. DOM2-Core specifies that
NO_MODIFICATION_ALLOWED_ERR be raised if "this node is read only." We can
assume that "this" refers to the parent of the child being removed. But what
about the child itself? If parent of the child is not read-only, and the
child being removed is read-only, wouldn't attempts to remove the child
raise the same exception? Isn't "removal" of a child akin to "modification"
of that child? Same thing can be asked of Node.replaceChild.
For that matter, when a child is removed or replaced, what is supposed to
happen to it's Node.ownerDocument?
Christopher Watson
Sr. Software Engineer
Lightspan, Inc.
DOM Level 1, and Level 2, have two specific cases in which nodes will be
read-only: when they're Entity or EntityReference nodes or are descendents
of one of these. (It's a bit hard to find this when casually searching the
DOM spec, I admit, since the term "readonly" is also an IDL keyword.
Perhaps we should have distinguished read-only nodes and readonly IDL
attributes, or used "immutable" or some other term. It's probably a bit
late to change it now.)
But we don't explicitly say that these are the only ways a node may become
readonly. Some implementations do provide other mechanisms -- some DOMs are
entirely read-only -- and while we haven't exactly blessed them we haven't
explicitly forbidden them either.
There has certainly been interest in the DOM working group in the
possibility of making specific nodes or subtrees read-only on demand (and
possibly in restoring mutability later), and there's been an active request
from the XSLT community for a clearly defined "read-only DOM" (since they
don't want to let user-written extensions change the source document while
a stylesheet is running)... but we haven't yet reached consensus on whether
this is a subset or a mode and exactly how it should behave, It's logged as
an Open Issue to be reconsidered at a later date.
what
We explicitly allow a readonly node to be removed/reparented, _IF_ its
parent is not readonly. In particular: EntityReference nodes are explicitly
readonly (see above), but EntityReferences may be inserted and removed
freely. Their informational content is immutable; their context is not.
See http://www.w3.org/DOM/faq.html#ownerdoc.
(The proposed DOM Level 3 adoptNode() method would alter this statement
slightly... but only when that method is explictly invoked, and only in
specific situations where the DOM implementation knows it can get away with
changing the node's ownerDocument.)
Joe Kesselman / IBM Research
Please keep the discussion on the mailing list rather than private
e-mail... thanks...
what does document.removeChild(document.documentElement) do?
The definition of NO_MODIFICATION_ALLOWED says it's thrown "If an attempt
is made to modify an object where modifications are not allowed." I
believe this qualifies. You're right, this could be made clearer.
Joe Kesselman / IBM Research
I have got to find a "Entity and EntityReference Objects for Dummies"
document somewhere. I am just NOT getting it. The spec is too concise for
me. I need some unbridled prose to help me understand what all the
relationships are, where and how they live, what in the source document
prompts a DOM implemenation to create an EntityReference node, and how it is
supposed to "link up" to an Entity.
Anyone got a URL I can look at for this?
!-- Joseph has already summarized for me priovately (thanks!), and pointed
me to the XML Recommendation. --
Thanks, Joseph. I've now printed out the FAQ, and I will keep it by my side.
Christopher Watson
Sr. Software Engineer
Lightspan, Inc.
First question: How well do you understand XML entities in the first place?
Our objects are driven by what the XML Recommendation says about how
entities are used (http://www.w3.org/TR/REC-xml#sec-references) and defined
(http://www.w3.org/TR/REC-xml#sec-entity-decl). Entity References are bound
to the Entity definition which has the same name; that's built into the XML
spec and is handled automagically by the DOM.
Two complicating factors:
1) There isn't an API in DOM Level 1 or Level 2 for
creating/changing/removing Entity (definition) nodes. That's because those
versions of the DOM deliberately deferred most of DTD/Schema issues. We
provided a place for parsers to hang the data, but how it gets there was
deliberately left as implementation-specific pending DOM Level 3's
"abstract schema" support.
2) As noted in the DOM spec, parsers are permitted to fully expand Entity
References -- replacing them with their value, rather than presenting that
value as children of an appropriate EntityReference node. If your parser is
doing this, you'll never see EntityReference nodes in your document tree
unless you create them explicitly. (There are arguments for and against
this expansion, depending on whether your application does or doesn't want
to know where the boundaries were... so the DOM deliberately left this
open. Some parsers actually let you pick which mode you prefer by setting a
flag before you parse.)
Hope that gets you pointed in the right direction.
Joe Kesselman / IBM Research
Is possible to extract a portion of XML file as it is using DOM.
Discussion:
--------------- XML file -----------------
---------------------XML file ends-----------
Question:
Using DOM is it possible to extract value of element miscellanoues , say
using some form of getElementsByTagName(),
in to string as,(a chunk of XML file as it is)
String strmiscellanoues =myDOM.(some form
of)getElementsByTagName(miscellanoues)
Result:strmiscellanoues= dream XML /dream hobby billiards hobby
Is this possible ?
I would appreciate your answer.
thanks,
Andrew
DOM Level 3's "abstract schema" support.
A needed definiton/explanation in the faq?
Thank You and Best Regards,
Joe
DOM Level 3's "abstract schema" support.
That'd be a bit premature, in my opinion. Level 3 is still being developed.
We don't yet know what FAQ entries it may or may not need... especially
since the answers may continue to change as Level 3 evolves.
Joe Kesselman / IBM Research
Hi there,
I need to be working with forms in xml, how do i proceed. I mean, what
tools do I need to be using! Are there any examples or urls out there,
which I could refer. Does CGI perl or CGI c support the processing of my
xml forms.
Thanks
Naveen
By forms, I mean - like the html forms. When an end user wants to send
some data to the server he/she needs to fill in the "user info or
requiremnets". If I wish to use xml, instead of the html how would I
proceed. I think my question makes some sense.
It makes sense, but not exactly as you've asked it.
XML itself is really a meta-language -- a "langauge for writing languages".
By itself it's pure syntax, and has no meaning; meaning is assigned by the
specific XML-based language you're working in. If you're familiar with
SGML, you can think of XML as occupying the same niche.
There are a number of different XML-based languages which include the
concept of forms. In addition to the language itself you'll need a tool on
the client system which understands how to present the particular language
you've chosen in a form that the user can interact with, gather the user's
responses, and send that data to the server.
Which langauge, and which tool, would be best depends on your exact needs.
The minimal-effort choice would be XHTML., which is essentially a dialect
of HTML based on XML (rather than being based on SGML, as is the case for
traditional HTML). The downside is that XHTML is no more powerful, and
just as architecturally ugly, as HTML... but the advantage is that
well-written XHTML will actually work in most existing HTML browsers.
If you need to do something more sophisticated than that, you'll have to do
some research to find out what other forms langauges have been based on XML
and which of them have client software that will run on your machines and
talk to your servers. One interesting option would be to focus specifically
on XForms; see http://www.w3.org/MarkUp/Forms/ for more information.
In any case, this isn't really a DOM question. It'd be a more appropriate
topic for the XML-DEV mailing list ; you can learn more about that
discussion at http://xml.org/xml-dev/index.shtml
Joe Kesselman / IBM Research
Thanks for the info and the URL.
Naveen.
By forms, I mean - like the html forms. When an end user wants to send
some data to the server he/she needs to fill in the "user info or
requiremnets". If I wish to use xml, instead of the html how would I
proceed. I think my question makes some sense.
