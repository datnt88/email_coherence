I'd like to suggest some mechanics. The WG meeting is Thursday
afternoon. About the only time at the IETF meeting before that which
does not conflict with sessions is Tuesday evening opposite the Social.
I'll post a list of test cases which can be refined based on comment.
Those participating can generate documents including signatures for
these cases and exchange them (or send them to me for distribution to
participants) via email or sneaker net no later than the Sunday
evening reception.
People are welcome to exchange information before then but Tuesday
evening the participants get together to compare notes on verification
efforts thus far, perhaps do a small bit of real time adjustment to
implementations, and plan whether any further attempt to get together
should be made before the Thursday afternoon WG meeting.
Thanks,
Donald
Donald E. Eastlake 3rd dee3@torque.pothole.com
140 Forest Avenue +1 978-562-2827(h)
Hudson, MA 01749 USA +1 508-261-5434(w)
Will these examples come with standard public/private key pairs,
or keys for HMAC?
Sincerely,
Kevin Regan
kevinr@valicert.com
Hi all,
At Baltimore we have some pre-release product we could bring to Interop if
there are plenty of other implementations going.
Can we get a hands-up of who will be attending with implementations?
Also, will there be a standard DTD to perform interop against? Schemas
aren't widely implemented in DOM world.
We are just using the DTD out of the latest draft. (broken as it is compared
to the schema) Is anyone doing validation against schems??
We are supporting
explictly namespace qualified elements in XML with no validation (although
still based on DTD)
or
no namespace qualifications in XML with validation against said DTD.
Thanks,
Owen Roberts
Baltimore Tech.
compared
How do you mean broken? Kevin has pointed out one problem and alluded to
others, if you guys point them out, I'll be happy to fix them in the next
version. It's just that tweaking something in the spec, then in the actual
file, then validating the schema/DTD and then examples, find bug, reiterate,
can get hairy sometimes. smile
[1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0102.html
I'm doing syntactical (not cryptographic) validation using [1].
[1] http://www.w3.org/2000/06/webdata/xsv
I think for the purposes of Interop, it would make sense to create an
application DTD with Signature+application declarations by which we can test
enveloped and enveloping Signatures. Do you already have one?
People should feel free to send examples/DTDs to the list right now (and
attachments are decoded with their own URL which is convenient) as a start,
and then we can put a more formal document together (or if someone wants to
contribute that now, that's welcome too!)
Joseph Reagle Jr.
W3C Policy Analyst mailto:reagle@w3.org
IETF/W3C XML-Signature Co-Chair http://www.w3.org/People/Reagle/
[I'm forwarding this to this list because it's easier to track.]
Forwarded Text ----
From: Merlin Hughes merlin@baltimore.ie
Subject: Re: XMLDSIG Interop in connection with 48th IETF
In-reply-to: 3.0.5.32.20000718130700.00a9fd20@localhost
Date: Tue, 18 Jul 2000 19:30:42 +0100
Status:
r/reagle@w3.org/2000.07.18/13:07:00
Some minor inconsistencies:
4.4.3 RetrievalMethod
Schema has Encoding attribute on both RetrievalMethod and Type
elements but DTD has Encoding attribute just on Type element.
DTD correct?
Then in the DTD on file, there is no Type element defined.
The Schema has mandatory content for the Type element. This
seems wrong because it can't then be implemented interoperably
without further specification.
4.3.3.1 Transform
In the schema, the "XPath" element is case-incorrect "Xpath".
Merlin Hughes
Baltimore Technologies, plc
End Forwarded Text ----
Joseph Reagle Jr.
W3C Policy Analyst mailto:reagle@w3.org
IETF/W3C XML-Signature Co-Chair http://www.w3.org/People/Reagle/
I assume so and will move to: (unless the authors of that section say
otherwise):
element name='Location' type='uriReference' minOccurs='1'
maxOccurs='1'/
I will change the DTD to:
Are you suggestion it be change to optional?
Fixed.
Joseph Reagle Jr.
W3C Policy Analyst mailto:reagle@w3.org
IETF/W3C XML-Signature Co-Chair http://www.w3.org/People/Reagle/
r/reagle@w3.org/2000.07.18/16:28:39
Something of that nature. RetrievalMethod simply seems
underspecified given that it "SHOULD" be implemented.
By making some of those parts optional, it could be
read as minimally and sufficiently specified.
For example, it seems reasonable to present a RetrievalMethod
with the Location:
ldap://ldap.baltimore.ie/CN=merlin?userCertificate;binary
What, in this case, do I specify as the Method and Type,
both of which are currently mandatory?
By making Method and Type optional I can, at the very least,
assume that the recipient will determine the type of key
information from the URI.
Merlin
Thats the one, aside from Merlins comments.
test
Essential.
I am in the process of embedding the DTD into another for signing - with
that experience I'll put together another example (embedded/embedding) and
post it.
One comment I do have, is that XML-based applications requiring DTD
validation find it convenient to embed the entire DTD in a DOCTYPE element
in the XML directly - (rather than a reference) so that only the .xml file
need be passed around.
A restriction on doing this is that you can't have variable declarations a
la
in the DTD.
For such an application, I have to take the DSIG DTD, search-replace all the
variables, then embed it in the app DTD before embedding that in the xml.
Do people think this is an acceptable process for that situation? I guess it
has to be.
Thanks,
OWen
Owen Roberts
Toolkits Architect
Baltimore Technologies, Dublin
oroberts@baltimore.com
Making some of this stuff optional seems reasonable but I would think
that a lot of implementations would just pass off the uri to some
retrieval mechanism without looking inside it and still want a
separate indication of type and encoding.
Donald
From: merlin merlin@baltimore.ie
Message-Id: 200007182220.XAA10671@bobcat.baltimore.ie
In-reply-to: 3.0.5.32.20000718162839.00ad5e70@localhost
Date: Tue, 18 Jul 2000 23:20:57 +0100
r/dee3@torque.pothole.com/2000.07.19/13:40:29
I agree. I just don't grasp the reason for the current
structure of the element.
It seems to me that a minimal specification would be [1]:
RetrievalMethod Location="http://..."
Type="foo#x509-certificate" Encoding="bar#base64" /
A more pedantic specification would be [2]:
Type could be expanded into an element, if desired.
However, I can't see how Type would be more than a URI,
nor do I see the impact of Encoding on Type, as captured
in the current spec:
As I say, I just don't fully understand what would be a default
implementation of the current element specification.
Merlin
[1]
[2]
Interoperation is between signature creation software and signature
verification software. Interoperation test cases are likely to use
features defined in only a part of the DTD so I don't see that
differences in other parts would have any effect, even for
implementations that use an explicit DTD.
Donald
From: "Joseph M. Reagle Jr." reagle@w3.org
Message-Id: 3.0.5.32.20000718130700.00a9fd20@localhost
Date: Tue, 18 Jul 2000 13:07:00 -0400
ltimore.com
Similar to http://www.w3.org/Signature/2000/05/30-interop.html , the
idea is to have signatures fitting verious profiles generated by the
participants and verified by other participants. The participants
would generally generate their own keys and include. Emphasis would be
on the mandatory algorithms including HMAC.
Thanks,
Donald
From: Kevin Regan kevinr@valicert.com
Date: Mon, 17 Jul 2000 12:17:21 -0700 (PDT)
In-reply-to: 200007171914.PAA20986@torque.pothole.com
Message-id: Pine.SOL.4.21.0007171216430.24231-100000@bugs.valicert.com
Hi, all,
In the section 6.4.2 of the current XML DSIG documentation, it says that
the prefix is hex 30 21 30 1F 06 05 2B 0E 03 02 1A 05 00 04 14
I just wonder if it should be hex 30 21 30 09 06 05 2B 0E 03 02 1A 05 00 04 14, i.e.,
the byte 1F should be 09.
Thank you in advance!
Steve
I'll check into this. It's actually from Charlie Kaufman of Iris who
should be credited...
Donald
From: "Steve Wang" steve.wang@chromatix.com
Resent-Date: Thu, 21 Sep 2000 10:52:51 -0400 (EDT)
Resent-Message-Id: 200009211452.KAA09077@www19.w3.org
Message-ID: 001b01c023db$d6755e80$65030a0a@chromatix.com
References: 200007171914.PAA20986@torque.pothole.com
Date: Thu, 21 Sep 2000 10:54:25 -0400
Content-Type: multipart/alternative;
boundary="----=_NextPart_000_0018_01C023BA.4ED11B70"
Assuming that this is the DigestInfo type referenced in RFC 2437
section 9.2.1 (and it looks like it should be), Steve is correct that the
inner sequence only covers the OID and the NULL, but not the OCTET STRING,
and so its length is indeed 9 rather than 31.
Tom Gindin
"Donald E. Eastlake 3rd" dee3@torque.pothole.com @w3.org on 09/21/2000
01:56:47 PM
Sent by: w3c-ietf-xmldsig-request@w3.org
Subject: Re: PKCS1 in XML DSIG
I'll check into this. It's actually from Charlie Kaufman of Iris who
should be credited...
Donald
From: "Steve Wang" steve.wang@chromatix.com
Resent-Date: Thu, 21 Sep 2000 10:52:51 -0400 (EDT)
Resent-Message-Id: 200009211452.KAA09077@www19.w3.org
Message-ID: 001b01c023db$d6755e80$65030a0a@chromatix.com
References: 200007171914.PAA20986@torque.pothole.com
Date: Thu, 21 Sep 2000 10:54:25 -0400
Content-Type: multipart/alternative;
boundary="----=_NextPart_000_0018_01C023BA.4ED11B70"
Ok, I've made this change to the editors' copy and will be in the next
version barring subsequent correction/comment.
Joseph Reagle Jr.
W3C Policy Analyst mailto:reagle@w3.org
IETF/W3C XML-Signature Co-Chair http://www.w3.org/People/Reagle/
