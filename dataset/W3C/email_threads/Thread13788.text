This is something like what I would like to see
It avoids the 'complex tables' language which really concerns me, and I
think refers, perhaps briefly, to all the things I can think of.
I have put it into my linearised version of the latest guidelines, about
which more in a minute
Charles
Priority 1
H4 For tables, provide summaries, associate cells with row and column
headers, and where appropriate group cells into categories. /H4
Many user agents restructure tables to present them. Without appropriate
markup the tables will not make sense when restructured. Tables also
present special problems to screen-readers.
LI Tables which produce text displayed as columns require a plain-text
alternative. See last resorts [Priority 1]
LI Provide summaries for tables ("SUMMARY" on TABLE) [Priority 2]
LI Identify headers for Rows and Columns (TH) [Priority 2]
LI Where tables have structural divisions beyond those implicit in the
rows and columns, use appropriate mark-up to identify those divisions
(THEAD TFOOT TBODY AXIS SCOPE COLGROUP etc) [Priority 2]
LI Provide abbreviations for header labels ("abbr" on TH) [Priority 3]
Has there been any discussions of labeling tables for their purpose?
For example indicating a table is for column formatting or for data. A
crude way would be to use the "class" attribute with "wai-column" or
"wai-data". A user agent could then make some assumptions about
presentation of the table information.
Jon Gunderson, Ph.D., ATP
Coordinator of Assistive Communication and Information Technology
Division of Rehabilitation - Education Services
University of Illinois at Urbana/Champaign
1207 S. Oak Street
Champaign, IL 61820
Voice: 217-244-5870
E-mail: jongund@uiuc.edu
WWW:http://www.staff.uiuc.edu/~jongund
Labelling tables for their purpose:
Tables for presentation of tabular information need no label.
Tables for columnar layout need to be excised from the web, until such
time as screen readers which cannot understand them are no longer used.
just my 2c
Charles
This message addresses the importance of transitioning the
WWW to using CSS for complex visual layout rather than
continuing down the current hack of abusing tables.
(Tim, I'm copying you --I'm sure you'll find the attached
HTML from the CNN site appalling given your original vision
for the WWW).
(Jim (Gettys) -- thought you'd love the band-width numbers)
Dave (Ragget)-- I'm copying you on this since I'm
sure you'd be appalled by how your table spec is being
abused. I'm copying you also because whenever we have
discussed in the past, we have always gone away with the
understanding that over time the WWW will migrate to using
CSS for achieving the kind of visual effects shown here
using tables.
I'm highlighting this issue because of late
I've seen assertions of the form
"table models will be accessible via the DOM",
"screenreaders can rearrange table content"
being used to justify not moving to CSS but instead
remaining with tables for achieving this form of
visual presentation. I think believing the
above would be a serious mistake --both for accessibility,
and more importantly, from the point of view of making the
WWW scalable and universally accessible from different kinds of devices
--especially mobile devices.
The simple misuse of band-width referred to in my first
point below would itself be a show stopper --
12,600+ bytes of raw HTML (not counting gifs)
with the content request -- the forecast about 10,000 bytes
into the data stream
Hello WAI GL team--
When talking about tables in the access guidelines,
it might be useful to refer to popular (mis)uses of tables on
mainstream WWW sites that causes untold pain today and will
continue to do so in the future --
irrespective of what information
is gleened via the DOM.
As an example, I'd suggest looking at the CNN weather page--
I'll inflict the html source on this list at the end of this
message -- the rest of this message annotates the appended
HTML with the points I think that are important to focus on.
1) The attached 557 line 12,600+ bytes
of html (the byte count does not include the size of the
embedded gifs) is the response for asking what the weather
forecast was for Mountain View.
The content you care about -- the forecast --is about 10,000
bytes into the data stream.
Content wise, all it gives you is expected highs and lows, and
wind speed etc for the next four days.
Access aside, it's a ludicrous use of band-width --but
that's another rant for another day.
2) Note the multiple table instances for the various
navigation bars.
3) To locate the actual content look for the appropriate
comment. In fact the only way you can make sense of this
tag soup is to read the comments --who said HTML was not
a programming language-- or in other words, give the
world enough angle-brackets, and they will figure out a
way to implement a Turing machine.
4) The actual content of the forecast itself
is a nested table with one of the inner tables giving the
content you asked for.
5) Notice that in that "content table", individual cells
achieve further visual alignment and layout by using BR
tags e.g. the temperature in Fahrenheit and the Celsius
equivalent are lined up this way--
6) Sunny weather is indicated by sunny.gif --accompanied by
an alt tag-- but it also has the word "sunny" in the
content -- and given the complex visual layout that is
being attempted, you get very confused about what the
"sunny" applies to.
7) And lots more ...
In fact studying the HTML in this attachment shows up why we
really need to
drive the WWW towards achieving multicolumn layout via CSS
rather than via tables.
The reason is obvious, exposing the table model in this HTML
document fully via the DOM will get us no closer to making
the content any better accessible on alternative displays
and media --
the model that you would get from the DOM for this HTML will
just have no meaningful data binding between the model and
the content.
cloudy BR
HIGH BR
73 F BR
22 C BR
LOW BR
61 F BR
16 C
p/cloudy BR
HIGH BR
77 F BR
25 C BR
LOW BR
62 F BR
16 C
p/cloudy BR
HIGH BR
77 F BR
25 C BR
LOW BR
62 F BR
16 C
p/cloudy BR
HIGH BR
80 F BR
26 C BR
LOW BR
63 F BR
17 C
Larger view /A BR
Larger view /A BR
Larger view /A BR
Larger view /A BR
STRONG Sunset: /STRONG 8:25 p.m.
&amp;#149; A HREF="http://cnn.com/TRAVEL/CITY.GUIDES/US/california/" Travel: California /A BR
TABLE WIDTH=460 CELLPADDING=2 CELLSPACING=3 BORDER=0 TR TD COLSPAN=2 BGCOLOR="#000000" FONT SIZE="2" FACE="helvetica,arial,sans-serif" color="#FFFFFF" b FOUR-DAY FORECASTS FOR 6100 CITIES WORLDWIDE /b /FONT /TD /TR TR TD WIDTH=230 IMG SRC="/WEATHER/images/9805/uscities.gif" ALT="US cities" WIDTH="89" HEIGHT="18" BORDER="0" HSPACE="0" VSPACE="0" /TD TD WIDTH=230 IMG SRC="/WEATHER/images/9805/worldcities.gif" ALT="World cities" WIDTH="108" HEIGHT="17" BORDER="0" HSPACE="0" VSPACE="0" /TD /TR TR TD BGCOLOR="#FF9966" TABLE WIDTH="186" CELLPADDING="2" CELLSPACING="0" BORDER="0" BGCOLOR="#FF9966" TR TD FONT FACE="Helvetica, Arial, sans-serif" COLOR="#000000" SIZE="1" FORM METHOD=GET ACTION="http://www-cgi.cnn.com/cgi-bin/weather/redirect" IMG SRC="/WEATHER/images/1998/arrowdkoran.gif" ALT="Arrow" ALIGN=LEFT WIDTH="15" HEIGHT="15" BORDER="0" HSPACE="5" VSPACE="0" Enter your U.S. zip code: BR BR INPUT TYPE="TEXT" SIZE="10" NAME="zip" INPUT TYPE="SUBMIT" VALUE"GO" br Zip goes to nearest of 6100 cities /FORM /FONT /TD /TR TR TD FONT FACE="Helvetica, Arial, sans-serif" COLOR="#000000" SIZE="2" FORM NAME="go" METHOD="POST" IMG SRC="/WEATHER/images/1998/arrowdkoran.gif" ALT="Arrow" ALIGN=LEFT WIDTH="15" HEIGHT="15" BORDER="0" HSPACE="5" VSPACE="0" Or, choose a state: BR BR SELECT NAME="vector" ONCHANGE="goVector(this.form.elements[0])" OPTION VALUE="none" Select OPTION VALUE="us.alabama" Alabama /OPTION OPTION VALUE="us.alaska" Alaska /OPTION OPTION VALUE="us.arizona" Arizona /OPTION OPTION VALUE="us.arkansas" Arkansas /OPTION OPTION VALUE="us.california" California /OPTION OPTION VALUE="us.colorado" Colorado /OPTION OPTION VALUE="us.connecticut" Connecticut /OPTION OPTION VALUE="us.delaware" Delaware /OPTION OPTION VALUE="us.florida" Florida /OPTION OPTION VALUE="us.georgia" Georgia /OPTION OPTION VALUE="us.hawaii" Hawaii /OPTION OPTION VALUE="us.idaho" Idaho /OPTION OP
TION VALUE="us.illinois" Illinois /OPTION OPTION VALUE="us.indiana" Indiana /OPTION OPTION VALUE="us.iowa" Iowa /OPTION OPTION VALUE="us.kansas" Kansas /OPTION OPTION VALUE="us.kentucky" Kentucky /OPTION OPTION VALUE="us.louisiana" Louisiana /OPTION OPTION VALUE="us.maine" Maine /OPTION OPTION VALUE="us.maryland" Maryland /OPTION OPTION VALUE="us.mass" Massachusetts /OPTION OPTION VALUE="us.michigan" Michigan /OPTION OPTION VALUE="us.minnesota" Minnesota /OPTION OPTION VALUE="us.mississippi" Mississippi /OPTION OPTION VALUE="us.missouri" Missouri /OPTION OPTION VALUE="us.montana" Montana /OPTION OPTION VALUE="us.nebraska" Nebraska /OPTION OPTION VALUE="us.nevada" Nevada /OPTION OPTION VALUE="us.nhampshire" New Hampshire /OPTION OPTION VALUE="us.njersey" New Jersey /OPTION OPTION VALUE="us.nmexico" New Mexico /OPTION OPTION VALUE="us.newyork" New York /OPTION OPTION VALUE="us.ncarolina" North Carolina /OPTION OPTION VALUE="us.ndakota" North Dakota /OPTION OPTION VALUE="us.ohio" Ohio /OPTION OPTION VALUE="us.oklahoma" Oklahoma /OPTION OPTION VALUE="us.oregon" Oregon /OPTION OPTION VALUE="us.pennsylvania" Pennsylvania /OPTION OPTION VALUE="us.rhodeisland" Rhode Island /OPTION OPTION VALUE="us.scarolina" South Carolina /OPTION OPTION VALUE="us.sdakota" South Dakota /OPTION OPTION VALUE="us.tennessee" Tennessee /OPTION OPTION VALUE="us.texas" Texas /OPTION OPTION VALUE="us.utah" Utah /OPTION OPTION VALUE="us.vermont" Vermont /OPTION OPTION VALUE="us.virginia" Virginia /OPTION OPTION VALUE="us.washington" Washington /OPTION OPTION VALUE="us.district" Washington, D.C. /OPTION OPTION VALUE="us.westvirginia" West Virgina /OPTION OPTION VALUE="us.wisconsin" Wisconsin /OPTION OPTION VALUE="us.wyoming" Wyoming /OPTION /SELECT /FORM /FONT IMG SRC="/WEATHER/images/1998/arrowdkoran.gif" ALT="Arrow" ALIGN=LEFT WIDTH="15" HEIGH="
15" BORDER="0" HSPACE="5" VSPACE="0" FONT FACE="Helvetica, Arial, sans-serif" COLOR="#000000" SIZE="2" Or, browse the text listing: br A HREF="/WEATHER/cities/states.list.html" Complete listing of U.S. states /A BR /FONT /TD /TR /TABLE /TD TD BGCOLOR="#FFCC66" VALIGN=TOP WIDTH=230 TABLE WIDTH="186" CELLPADDING="2" CELLSPACING="0" BORDER="0" BGCOLOR="#FFCC66" TR TD IMG SRC="/WEATHER/images/1998/arroworange.gif" ALT="Arrow" VALIGN=TOP ALIGN=LEFT WIDTH="15" HEIGHT="15" BORDER="0" HSPACE="5" VSPACE="0" FONT FACE="Helvetica, Arial, sans-serif" COLOR="#000000" SIZE="2" B Choose a region: /B BR br a href="/WEATHER/cities/africa.html" Africa /a br a href="/WEATHER/cities/asiapcf.html" Asia /a br a href="/WEATHER/cities/australia.html" Australia &amp;amp; New Zealand /a br a href="/WEATHER/cities/canada.html" Canada /a br a href="/WEATHER/cities/caribbean.html" Caribbean /a br a href="/WEATHER/cities/camerica.html" Central America /a br a href="/WEATHER/citieseurope.html" Europe /a br a href="/WEATHER/cities/mexico.html" Mexico /a br a href="/WEATHER/cities/meast.html" Middle East /a br a href="/WEATHER/cities/samerica.html" South America /a br /FONT /TD /TR /TABLE /TD /TR /TABLE
input type=text name=qt size=30 value="" maxlength=50 &amp;nbsp; &amp;nbsp;
a href="javascript:document.seek.submit()" FONT face="Helvetica, Arial,sans-serif" COLOR="#FFFFFF" size="2" go /FONT /A &amp;nbsp; &amp;nbsp;
Read our A HREF="/privacy.html" privacy guidelines /A . /font br
??^??^??????????hm??????7??_??????????????o?v??q?Sy?g?Z ?j???Z????O??~????[^5???????@/z{?f???????i?{?(?&amp;?&amp;?? =?]t?n??I??_?jf????r??zY?y???????Zn????????i?{?(???jf??????????????i?????(?w??????h???jf????j??i?
??zY?????????????????????????????????????????????????????????Z?g??8^??????{kz?u???*0????y???????u??jG?j?????z{Z?+????zje?'??hm?????????????????????????????????????????????????????
I've coded such pages and worse, and in fact I'm working late tonight
trying to edit several  50K table confections originally extruded from the
latest version of a popular "WYSIWYG" editor. You are absolutely right that
it's abominable. The best that can be said for it is unfortunately all that
matters for the parties who pay for such activity: it barely works in the
great majority of UAs in use today.
True columnar layout via CSS, while desirable, is not necessary. I believe
CSS1 would be enough to retire at least the worst abuses of tables.
Unfortunately again, CSS1 has been grossly misimplemented thus far, and
every "not quite" release pushes the birthdate of CSS's mainstream
commercial viability a few years beyond the horizon.
Complete, consistent support for the following (conspicuously neglected)
CSS1 properties em ACROSS ALL APPLICABLE MARKUP ELEMENTS /em is a minimum
condition for retirement of tables-as-layout:
1. The display property
2. The box model
3. The float property
4. The width property
I will be very happily shocked if either of the upcoming "big two" 5.0
releases ships with all of these right. I do not disparage the skills of
the engineers working on these things - I'm sure it's challenging,
especially with effort divided between ever-more intensive reinforcement of
the hack regime with tweaks to the table rendering code, and implementing
CSS3 features.
I do think, however, that there's a widespread failure to acknowledge how
damaging it is to ship patently buggy, patchwork CSS1 implementations.
Shipping with such "support" off by default would at least not retard the
adoption of CSS after its implementations achieve a degree of coherence
compelling to design professionals.
Back to those tables now.... I'm fantasizing about some kind of surgical
electromagnetic pulse bomb that can obliterate all copies and source of the
software that generated them.
Todd Fahrner
The printed page transcends space and time. The printed page, the
infinitude of books, must be transcended. THE ELECTRO-LIBRARY.
- El Lissitzky, 1923
I think tables for page layout are going to be with us for a long time.
One of the main reasons is backward compatibility with non-CSS browsers.
Also almost every book published on HTML design talks about using tables
for layout. It would be ideal to get rid of tables for spatial layout, but
I think it is a difficult , if not impossible task given the momentum for
the use of tables.
I would like to see some type of markup of tables that can be used by User
Agents for rendering table information in a form that is compatible with
needs of persons with disabilities. So if a table is being used to provide
column formating, if had the appropriate markup to indicate that is what it
is doing the user agent could create a non-column rendering of the table.
If the table was data and information is available about the table
relationships a linear rendering of the table and additional UA controls
could be used for navigating the information in the table.
Jon
Jon Gunderson, Ph.D., ATP
Coordinator of Assistive Communication and Information Technology
Division of Rehabilitation - Education Services
University of Illinois at Urbana/Champaign
1207 S. Oak Street
Champaign, IL 61820
Voice: 217-244-5870
E-mail: jongund@uiuc.edu
WWW:http://www.staff.uiuc.edu/~jongund
Nir:
In my view there is a certain balance of what user
agents should do and what authors should do. W3C recommendations
allow authors to write informative accessible tabular information
using HTML4.0 tables, and arrange text-blocks side by side using CSS2.
Authors should write using these recommendations (both of which degrade
gracefully to HTML3.2 browsers that do not support stylesheets)
and user agents should support these recommendations.
When an author is using a table for layout justifying it by misusing
the term "backward compatibility", he is violating the
first principle of HTML writing of separation of meaning
from presentation. An author who hacks in this way may counter-
hack in his *author's* aural stylesheet to get his layout-tables
to be converted to normal blocks by converting TABLE, TBODY, TR, TD
into DIV via CSS2 display properties.
One should keep in mind though that HTML browsers who support CSS2 may
ignore (according to the CSS2 spec.) the display property. Also the CSS2 spec.
recommends to HTML authors not to use the display properties, as the HTML
elements have commonly agreed meanings.
In other words, it is better not to hack, than to hack and then
counter-hack, hoping that the so called disabled user have the latest
XML-CSS2 browser.
Regards,
Nir Dagan.
I agree that HTML should be used as the HTML architects intended to
separate content from presentation. WAI should do all it can to support
the efforts to educate authors, user agent developers and authoring tols to
support this concept. The separation of content from presentation is not
done in practice by most HTML authors and probably will not become part of
practice for a long time. Most HTML authors really do not understand the
principle or even very much about HTML, and look at HTML as a presentation
language. Most authors will use what ever HTML tags work to make the pages
look how they want people to see them.
The choice of WAI is to stand fast and say this is wrong and that authors
should do it the "right" way. Which means there will probably be low
compliance, at least for a long time until other pressures or technologies
push authors in that direction.
One other choice is to work with how people actual use HTML and try to
provide information that can be used by user agents and authoring tools to
improve access to information by persons with disabilities.
Jon
spec.
Jon Gunderson, Ph.D., ATP
Coordinator of Assistive Communication and Information Technology
Division of Rehabilitation - Education Services
University of Illinois at Urbana/Champaign
1207 S. Oak Street
Champaign, IL 61820
Voice: 217-244-5870
E-mail: jongund@uiuc.edu
WWW:http://www.staff.uiuc.edu/~jongund
My approach is pragmatic since tables are used for formatting. Current CSS
positioning implmentations on Navigator and Explorer are slightly
different, resulting in compatibility concerns by authors wanting to use
CSS positioning instead of tables.
Being in the area of rehabilitation for a long time. I don't think that
WAI saying that people should not use tables will be compeling enough for a
number of reasons:
1. Most authors using authoring tools may not even know the difference
between TABLES and CSS.
2. Many HTML authors are concerned primarily with the visual look and feel
and view HTML as a presentation language and would not switch to CSS if it
meant their pages would look significantly different in non-CSS graphical
browsers.
3. Most documentation on HTML and educational resources talk about using
tables for formatting.
4. To people who know about the foundations of HTML they can see the "hack"
of using TABLE for spatial layout, but for people with less information
they do not see it as a "hack". To tell them it is a "hack" and they
shouldn't use them may turn them away from accessibility.
My primary interest is improving accessibility. If we can make the authors
more comfortable and give them more flexibility in providing accessibility
I would be willing add META information to TABLEs to help them improve
accessibility. If the language is being missused from original intent, I
don't think WAI should ignore that in it's guidelines.
Jon
spec.
Jon Gunderson, Ph.D., ATP
Coordinator of Assistive Communication and Information Technology
Division of Rehabilitation - Education Services
University of Illinois at Urbana/Champaign
1207 S. Oak Street
Champaign, IL 61820
Voice: 217-244-5870
E-mail: jongund@uiuc.edu
WWW:http://www.staff.uiuc.edu/~jongund
The most important consideration here is that the use of tables purely for
purposes of layout is contrary to the intention of the HTML specification
and ought to be strongly discouraged in favour of style sheet positioning,
as soon as the latter is supported by user agents. This is why the
guidelines have been carefully expressed to make it clear that "layout
tables" are only permitted on an interim basis, pending the implementation
of CSS 2 positioning. A table prescribes a relationship between a set of
header cells and a set of data cells, thereby grouping related data into
categories. This is the assumption which underlies the attributes that
were added to HTML 4.0 so as to provide for speech output and better data
base integration (HEADERS, SCOPE, AXIS, SUMMARY, etc.).
For this reason I would not regard it as appropriate to offer any further
support within user agents or otherwise, for the misuse of table
constructs. Authoring tool developers in particular need to ensure that
their products generate appropriate CSS positioning rules. I think the
user agents will support positioning first, with the authoring tools
following closely behind.
Perhaps the guidelines should make it clearer that the misuse of tables
for layout purposes amounts to poor design practice and is problematic
from the standpoint of accessibility, when considered in relation to
today's HTML user agents. On the other hand, given the ability to
manipulate and selectively deactivate style sheets at the client end, the
proper use of positioning would allow the layout to be adjusted (the text
would be linearized and formatted according to the HTML elements used).
Perhaps thiese issues could be more fully addressed in the Techniques
document.
JRGs response to Jason White.
I am not advocating the missuse of tables for positioning. I am saying if
someone is using a tables for positioning or for data display that they can
label how they are using the table to improve accessibility by a user
agent. I don't think WAI or the W3C can stem the tide of people using
tables for positioning. I am sure that if you ask most Web authors if they
thought positioning was a missuse of tables they would say no, since most
authoring books, workshops and authoring tools tell them to do it that way.
I have concerns about waiting for majority of the HTML authors to switch
to CSS positioning techniques for pages to become more accessible.
Remember that most HTML authors have not even heard of the W3C and most
view HTML as a presentation language, not a structural language. While
this is unfortunate, it is also reality. I have done presentations here at
UIUC on using CSS for positioning and the feedback I get in why people will
not use CSS is the incompatibility of the current browsers that support CSS
positioning and that authors want their pages to look how they intended on
older 2.x and 3.x browsers.
Jon
Jon Gunderson, Ph.D., ATP
Coordinator of Assistive Communication and Information Technology
Division of Rehabilitation - Education Services
University of Illinois at Urbana/Champaign
1207 S. Oak Street
Champaign, IL 61820
Voice: 217-244-5870
E-mail: jongund@uiuc.edu
WWW:http://www.staff.uiuc.edu/~jongund
