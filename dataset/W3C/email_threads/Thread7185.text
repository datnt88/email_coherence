I have just submitted draft 02, which can also be obtained via
the issues list at
Please note that all issues have been fixed or closed, with the
single exception that 032-component-examples is still waiting
for some examples that might improve the current description.
This would be a good time to review the specification.
Cheers,
Roy T. Fielding, Chief Scientist, Day Software
2 Corporate Plaza, Suite 150
(roy.fielding@day.com) http://www.day.com/
Co-founder, The Apache Software Foundation
(fielding@apache.org) http://www.apache.org/
I have just submitted draft 03, which can also be obtained via
the issues list at
Please note that all issues have been fixed or closed. If you'd
like to raise a new issue or reopen an old one, please do so
within the next two weeks.
Cheers,
Roy T. Fielding, Chief Scientist, Day Software
2 Corporate Plaza, Suite 150
(roy.fielding@day.com) http://www.day.com/
Co-founder, The Apache Software Foundation
(fielding@apache.org) http://www.apache.org/
Here are my comments about section 4.
4., first paragraph:
"We define the most common forms of reference
syntax in this specification because they impact and depend upon the
design of the generic syntax, requiring a uniform parsing algorithm
in order to be interpreted consistently."
This seems to just say "We are writing this chapter because we
are writing this spec." Also, the 'because'-'requiring'-'in order'
cascade is long and confusing.
Better things to say would be:
- These are defined so that other specifications can easily
reference them.
- We define these to help the reader understand the spec.
There are a lot of new terms in this section. It is not always
clear what exactly is a term. It would be better to use some
clear convention when a term is introduced, e.g. quotes.
Throughout the whole section: There should be an example for
each term.
4.1, 'validating parser': People familiar with XML might think
they understand what we mean here by 'validating parser' and
'non-validating parser'. But there are other readers, so we better
define clearly what we mean here, or use other wording.
Also, in various discussions about the use of URIs, I have heard
people explain that any application should only check URIs as
far as necessary, and pass things on even if they do not completely
conform to the syntax. Larry e.g. brought this up in the context
of the anyURI type in XML Schema. This should be said explicitly.
4.2 'network-path reference': is the full term just 'network-path reference',
or is it 'relative network-path reference'? Same for the other two terms.
4.5 'rather than machine' - 'rather than machines' or
'rather than for machines' or 'rather than for machine interpretation'.
4.5 "It should be noted that such heuristics may change over time,
particularly when new URI schemes are introduced."
change, e.g. to
"It should be noted that such heuristics may change over time,
particularly if a new URI scheme should become popular."
it's really not the introduction, but the popularity, which makes
the difference.
Regards, Martin.
