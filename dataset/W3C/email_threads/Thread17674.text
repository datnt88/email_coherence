The following link is my initial estimate of the UA and WC coordination
issues.
Please review and comment to the UA list.
Jon Gunderson, Ph.D., ATP
Coordinator of Assistive Communication and Information Technology
Division of Rehabilitation - Education Services
University of Illinois at Urbana/Champaign
1207 S. Oak Street
Champaign, IL 61820
Voice: 217-244-5870
E-mail: jongund@uiuc.edu
WWW:http://www.staff.uiuc.edu/~jongund
Coordination page [0]:
[0] http://www.w3.org/WAI/UA/wai-ua-wc-coordination.html
OPEN ISSUES:
On 9 July, I documented resolutions [1] to the issues cited.
I believe all to be resolved except issue #3.
[1] http://lists.w3.org/Archives/Public/w3c-wai-ua/1999JulSep/0006.html
Issue #3: Should user agents be able recognize markup for navigation bars
Addressed in [1], but here's more info:
There are two parts to this issue, I believe: recognition of arbitrary
classification of navigation bars and recognition for known HTML markup.
I believe the UA WG has (or should) punt on the former goal. In another
version of the Guidelines, we can talk more about schemas as a good
way to identify document component semantics.
For the latter goal, Charles has proposed MAP as the proper solution
and Wendy responded [1] that the GL Group had already decided not to
recommend this solution. So the issue could be opened again in GL.
[1] http://lists.w3.org/Archives/Public/w3c-wai-ua/1999JulSep/0012.html
COVERAGE OF UNTIL USER AGENT CLAUSES
Reference Document: 16 July Draft of UAGL [2].
[2] http://www.w3.org/WAI/UA/WAI-USERAGENT-19990716/
1) WCAG 1.5: Until user agents render text
equivalents for client-side image map links, provide
redundant text links for each active region of a client-side image map.
Comment: While we have several checkpoints that might cover this,
including "1.2 Ensure that the user can interact with
all active elements of a document in a device-independent manner."
we don't have a checkpoint specifically for client-side image maps.
I propose we list this as an example after checkpoint
1.2 in the guidelines.
2) WCAG 5.3 Do not use tables for layout unless the table
makes sense when linearized.
Comment: The WG has decided not to include a checkpoint requiring that
UAs be able to linearize tables (I believe in [3]).
[3] http://www.w3.org/WAI/UA/1998/12/wai-ua-f2f-19981211.html#media
Instead, the following checkpoints should cover this issue:
7.1 Ensure that the user has access to document content,
including alternative representations of content.
7.2 For dependent user agents. Ensure that the user has access to
the content of an element selected by the user
8.3 For dependent user agents. Allow the user to navigate among
table cells of a table (notably left and right within a row
and up and down within a column).
3) WCAG 7.1 Until user agents allow users to control flickering,
avoid causing the screen to flicker.
Comment: The WG decided [3.5] that since flicker was caused by scripts,
that the following checkpoint ensured control:
[3.5]
5.8 Allow the user to turn on and off support for scripts and
applets.
4) WCAG 7.2 Until user agents allow users to control blinking,
avoid causing content to blink (i.e., change
presentation at a regular rate, such as turning on
and off).
Comment: This is covered by the following checkpoint:
5.6 Allow the user to turn on and off animated or blinking text.
5) WCAG 7.3 Until user agents allow users to freeze moving content,
avoid movement in pages.
Comment: This may either be caused by style sheets or scripts.
Thus, checkpoint 5.8 and the following cover the issue:
5.9 Allow the user to turn on and off support for user style sheets.
6) WCAG 7.4 Until user agents provide the ability to stop the
refresh, do not create periodically auto-refreshing pages.
Comment: Covered by the following checkpoint:
5.14 Allow the user to turn on and off automatic page refresh.
7) WCAG 7.5 Until user agents provide the ability to stop
auto-redirect, do not use markup to redirect pages
automatically.
Comment: Covered by the following checkpoint:
5.13 Allow the user to turn on and off author-specified page
forwards that occur after a time delay and without user
intervention.
8) 10.1 Until user agents allow users to turn off spawned windows,
do not cause pop-ups or other windows to appear and do not change
the current window without informing the user.
Comment: Covered by the following checkpoint:
5.11 Allow the user to turn on and off support for spawned windows.
9) WCAG 10.2 Until user agents support explicit associations between
labels and form controls, for all form controls with
implicitly associated labels, ensure that the label is
properly positioned.
Comment: Covered by the following checkpoint:
9.24 Provide the user with access to any label explicitly
associated with a form control.
Note: Preserved in orientation proposal [4]
[4]
10) WCAG 10.3 Until user agents (including assistive technologies)
render side-by-side text correctly, provide a linear text
alternative (on the current page or some other) for all tables
that lay out text in parallel, word-wrapped columns.
Comment: Although this is more about user agents getting it right
rather than ensuring some functionality, this is covered by 7.2.
11) WCAG 10.4 Until user agents handle empty controls correctly,
include default, place-holding characters in edit boxes
and text areas.
Comment: I don't think we have anything to do here. This was to
account for incorrect legacy UA behavior.
12) WCAG 10.5 Until user agents (including assistive
technologies) render adjacent links distinctly, include non-link,
printable characters (surrounded by spaces) between adjacent links.
Comment: I believe this is covered by 7.2 and possibly the 9.5 proposed
in [4].
13) WCAG 13.2 Provide metadata to add semantic information
to pages and sites.
Comment: This is only covered if you consider that support for
W3C Recommendations (checkpoint 11.2) will ensure implementation
of metadata (HTML metadata, RDF). I would consider this an
open issue: how to handle metadata.
14) 13.6 Group related links, identify the group (for user agents),
and, until user agents do so, provide a way to bypass the group.
Comment: I don't believe we have a checkpoint for this. We could
add one to Guideline 8 on Navigation.
More than "could be" it seems. It's definitely on the agenda for a meeting
on
26 August, according to
Al
