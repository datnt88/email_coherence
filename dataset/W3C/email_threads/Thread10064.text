With reference to the issue:
"RDF's Expressive Power"
I propose that this is addressed by revisions per:
Specifically:
(1) deletion of old section 2.2.7 (which didn't really say anything not
covered by 2.2.6)
(2) revised title and rewording of section 2.2.6:
(3) revised content of section 3.5:
The new section 3.5 is considerably cut down from the original version, and
references rather than duplicates content that is in the Primer.
(This also has an introductory paragraph that aims to capture the sense of
wording noted by Pat Hayes, per
couple of short paragraphs that aim to positively address the questions
raised as macgregor-01 and macgregor-02.)
The intent of these combined changes is to avoid making specific statements
about the expressive power of RDF, but to indicate some limits on the kinds
of information that RDF might express, and to avoid any suggestion of
universality.
#g
Graham Klyne
PGP: 0FAA 69FF C083 000B A2E9 A131 01B9 1C7A DBCA CB5E
fine
I see this as in part a response to pfps concerns about "say anything ..."
and related to pfps-15.
It does look like an editorial change to me and worthwhile if it assists
pfps in accepting the disposition of pfps-15.
I have a problem with the sentence:
It is not a goal that RDF cannot prevent anyone from making assertions that
are nonsensical or inconsistent with other statements, or the world as
people see it, and applications that build upon RDF are expected to find
ways to deal with incomplete and conflicting sources of information.
The complexity of the sentence, the double negative at the start bother
me. So does the last bit, though I accept it was in the lc wd. My
applications do nothing about dealing with incomplete and conflicting
sources of information.
I suggest:
RDF can be used to express apparently nonsensical or inconsistent
statements. It is not the role of RDF to try to prevent the expression of
such statements. Designers of applications that use RDF should be aware of
this and may design their applications to tolerate incomplete or
inconsistent sources of information.
Overall, I think this is an improvement. I like dropping the example use
of b-nodes and referring to the primer. I'm tempted to wordsmith, not sure
I should:
[[A simple fact expressed in RDF may indicate a relationship between two
resources, in the form of an RDF triple in which the property names the
relationship, and the subject and object denote the two resources.]]
trying ...
[[A simple fact expresses a relationship between two resources. A simple
fact is expressed in RDF using a triple. The predicate of the triple names
the relationship and the subject and object name the two related resources.]]
Hmmm, ... not sure that's any better ...
[[ i.e. assertions of named properties about identified things.]]
Do we still talk about assertions?
I suggest dropping the last two paragraphs. These get us into murky
waters. They are not needed to dispose of macgregor-01/02. Better, I
suggest, not to mention them.
Brian
Er, yes, the double negative isn't only confusing -- it's wrong. Also, I
agree the final sentence is out of place here. Here's what I now have:
In general, it is not assumed that the information about any resource is
complete: there may be information that is not yet available. RDF does not
prevent anyone from making assertions that are nonsensical or inconsistent
with other statements, or the world as people see it. Designers of
applications that use RDF should be aware of this and may design their
applications to tolerate incomplete or inconsistent sources of information.
Done.
#g
Graham Klyne
PGP: 0FAA 69FF C083 000B A2E9 A131 01B9 1C7A DBCA CB5E
