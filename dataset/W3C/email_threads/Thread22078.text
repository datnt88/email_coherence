Hi,
The java stylesheet produces variable declarations within the runTest()
method.
When defining filters you don't have access to the outer class variables
from within the produced inner class.
Is there a way to define class level variables ?
As a workaround I tried to locally declare variables within the inner
class by doing:
This produces a java test as follows:
public class DOMBuilderFilterTest extends DOMTestCase {
public DOMBuilderFilterTest(DOMTestDocumentBuilderFactory factory){
super(factory);
private class DOMBuilderFilterN1E extends DOMTestInnerClass implements
DOMBuilderFilter {
String name;
int SHOW_ELEMENT;
short FILTER_ACCEPT;
short FILTER_REJECT;
short FILTER_SKIP;
public DOMBuilderFilterN1E(DOMTestCase test, int SHOW_ELEMENT, short
FILTER_ACCEPT, short FILTER_REJECT, short FILTER_SKIP) {
super(test);
this.SHOW_ELEMENT = SHOW_ELEMENT;
this.FILTER_ACCEPT = FILTER_ACCEPT;
this.FILTER_REJECT = FILTER_REJECT;
this.FILTER_SKIP = FILTER_SKIP;
public short startElement(Element elt) {
public void runTest() throws java.lang.Throwable {
DOMBuilderFilter myfilter = new DOMBuilderFilterN1E(this, 1, 1, 2, 3 );
The problem with this workaround is that the variables that are passed to
the constructor of the inner class are not properly typed.
DOMBuilderFilter myfilter = new DOMBuilderFilterN1E(this, 1, 1, 2, 3 );
should be:
DOMBuilderFilter myfilter = new DOMBuilderFilterN1E(this, (int)1,
(short)1, (short)2, (short)3 );
Since 1 is by default int.
Jeroen
---- lines omitted
That is not a workaround, that was the intended use of that construct.
They only issue is that I did not anticipate the need to cast integer
literals to shorts on the constructor. I'll update the transform. In
the interim, if you define the class variables as 'int', you should
avoid the inner class constructor issue and any casting to short inside
the inner class body should occur automatically. Alternatively, you
could assign literals to test scoped variables before the inner class
definition and use the test scoped variables as the values for the inner
class variables.
var name='SHOW_ELEMENT' type='int' value='SHOW_ELEMENT'/
var name='FILTER_ELEMENT' type='short'
value='FILTER_ELEMENT'/
test-to-java.xsl has now been updated to cast numeric literals passed to
inner class constructor short parameters. Also, the inner class method
and attribute production now recurses into the supertype if the
definition is not found in the derived type which should enable
DOMWriterFilter.acceptNode to be correctly produced.
