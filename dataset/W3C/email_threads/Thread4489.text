Mary,
In [1], you submitted the following comment on the Last Call Working
Draft of XSLT 2.0 and XQuery 1.0 Serialization on behalf of the XML Schema
Working Group:
[C] [Section 2: Serializing Arbitrary Data Models] Saying the process
fails
for sequences containing xs:QName or xs:NOTATION nodes seems unhelpful.
What
happens if I have such a sequence? This appears to be a serialization
error
because processor is unable to cast an atomic value to string.
Suggestion:
replace 'process will fail' statement with 'serialization error'.
Thanks to you and the working group for this comment.
The XSL and XML Query Working Groups discussed the comment, and
agreed that the description should indicate that this is a serialization
error. In fact, the second and sixth items in the numbered list in
Section 2 already normatively indicate that fact. For clarity, the note
in Section 2 will be changed to use the term "serialization error" as
well.
As that is the change the XML Schema Working Group recommended, I
trust it will be acceptable. May I ask you to confirm that the working
group finds the response acceptable?
Thanks,
Henry [On behalf of the XSL and XML Query Working Groups]
[1]
Henry Zongaro Xalan development
IBM SWS Toronto Lab T/L 969-6044; Phone +1 905 413-6044
[C] [Section 2: Serializing Arbitrary Data Models] Saying the process
for sequences containing xs:QName or xs:NOTATION nodes seems unhelpful.
happens if I have such a sequence? This appears to be a serialization
because processor is unable to cast an atomic value to string.
replace 'process will fail' statement with 'serialization error'.
The Schema WG thanks you for this response. We find the clarification as a
serialization error an improvement and accept that. We continue to be deeply
troubled, however, by the fact that data models with xs:QNames fail to
serialize and therefore validate correctly. We are heartened by our knowledge
that the Query/XSL Working groups have continued to discuss that matter, and
encourage them in that effort.
//Mary
I think we need to work together to find a solution to the QName problem.
It's wretchedly difficult having a data type where the value in the value
space has no context-independent lexical representation. Adding the
possibility of representing QName values in a lexical notation such as
uri##local would greatly ease the pain. (We choose choose a format that can
potentially be used anywhere in XML, XML Schema, XSLT, XPath, or XQuery that
lexical QNames are currently used).
Michael Kay
