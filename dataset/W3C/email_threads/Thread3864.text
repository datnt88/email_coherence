Hi,
You've probably already thought of this, but thinking about the
possibility of using RELAX NG to provide type information during the
construction of a node tree, I was wondering if the data model could
be made more schema-language neutral by having the 'type' of a node be
a sequence of QNames instead.
For node trees derived from the PSVI from XML Schema validation, the
sequence could contain the type of the node, its base type and so on
up to and including xs:anyType/xs:anySimpleType.
For node trees generated during RELAX NG validation, the sequence
could contain the names of the define elements used while validating
the content of the node.
Even languages like Schematron could be used -- each rule could have
an 'type' annotation and the node be assigned a type based on these
annotations.
Then type matching in sequence type matching could test whether the
named type was listed within the type of the node without having to
worry about (or depend on) type hierarchies being present.
In parallel, I suppose that the name of an element could be a sequence
also containing the name of the head elements of any substitution
groups that it belongs to; the name() function could still just return
the first (actual) name of the element, but the sequence could be used
when doing sequence type matching.
Cheers,
Jeni
Jeni Tennison
This kind of thing has been suggested and rejected in the past, and the idea
is currently being explored once again to see whether it solves any of the
problems with anonymous types. I've no idea what the outcome will be: but
thanks for the contribution.
Michael Kay
As far as I know, RELAX-NG is a Schema language that does validation but
does not provide type information. There is, for example, nothing like
the PSVI. Of course, it could be made to provide type info but that's a
lot of work and what is the motivation for doing this work?
All the best, Ashok
This kind of thing has been suggested and rejected in the past, and the
idea
is currently being explored once again to see whether it solves any of
the
problems with anonymous types. I've no idea what the outcome will be:
but
thanks for the contribution.
Michael Kay
Hi Ashok,
The reason any schema language provides type information is that it
can be used in downstream processing of the XML document. Currently,
there's no standard way of using that information at all; XPath 2.0
provides one. So the motivation for creating RELAX NG validators that
make available type information would be the ability for people using
XPath 2.0 to use it.
It's certainly true that it is a lot of hard work to enable RELAX NG
validators to create the data model currently required for XPath 2.0.
That's why I wondered whether a slightly different XPath 2.0 data
model would make that easier/possible and therefore XPath 2.0 less
schema-language specific.
Cheers,
Jeni
Jeni Tennison
