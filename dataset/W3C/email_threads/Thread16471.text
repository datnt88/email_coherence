I am finding it hard work to use javascript, and maintain 'normal'
accessibility functions, whilst 'improving' functionality.
Does anyone know of a specific set of javascript functions that do this?
a current beta I am working on his here: http://www.peepo.com/crap/lbv/
( IE5 only)
Code has had to be written to include window.status, differentiate drag and
click, and will have to be written to get
tabbing to work. It should all work in a variety of browsers, and play
sounds in Netscape/kde on mouseover, in fact I've read this is not currently
possible in a number of places. (interactive sound is a fairly basic
accessibility requirement)
A search for 'accessibility javascript' was not too helpful, but did turn up
this link:
Make scripts and applets keyboard operable (using standard conventions).
[Place holding page - content still under development]
I have contacted them, does anyone know of other initiatives?
perhaps we could link them?
Is there a good reason why WAI does not host javascript pages, with code
examples?
jonathan chetwynd
IT teacher (LD)
j.chetwynd@btinternet.com
An example of Javascript functions that are useful is form validation. This
is fairly common - you fill out a form, and in a javascript-enabled browser,
it checks for errors before sending the form for processing. So long as there
is an equivalent for non script-enabled browsers, there isn't a problem.
We tend not to use scripts much in W3C content, and theese are generally
written for a specific purpose. scripts to provide things like sound
interaction would be useful examples - I will look at the examples you have
mentioned.
cheers
Charles McCN
I am finding it hard work to use javascript, and maintain 'normal'
accessibility functions, whilst 'improving' functionality.
Does anyone know of a specific set of javascript functions that do this?
a current beta I am working on his here: http://www.peepo.com/crap/lbv/
( IE5 only)
Code has had to be written to include window.status, differentiate drag and
click, and will have to be written to get
tabbing to work. It should all work in a variety of browsers, and play
sounds in Netscape/kde on mouseover, in fact I've read this is not currently
possible in a number of places. (interactive sound is a fairly basic
accessibility requirement)
A search for 'accessibility javascript' was not too helpful, but did turn up
this link:
Make scripts and applets keyboard operable (using standard conventions).
[Place holding page - content still under development]
I have contacted them, does anyone know of other initiatives?
perhaps we could link them?
Is there a good reason why WAI does not host javascript pages, with code
examples?
jonathan chetwynd
IT teacher (LD)
j.chetwynd@btinternet.com
Location: 21 Mitchell street FOOTSCRAY Vic 3011, Australia
(or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France)
if you are using client-side form validation, whether it be javascript or
other methods, you need to have server-side form validation installed for
those who have problems, no scripting or disabled scripting..
i see this was cross-posted and am replying to both.
I'd add, those who are not permitted to use scripting. This is probably
not a problem for Jon's target audience. Their problem is that they
are probably particularly vulnerable to scripting based security
vulnerabilities as they may have difficulty learning when it is and is
not safe to override security warnings, or recognizing when the browser
is doing something that is unreasonable for the request made, and in
keeping completely up to date with Microsoft Critical Updates, and
Netscape's equivalents.
The other reason for validating is that malicious users can bypass any
forms or client side validation and submit completely bogus responses in
an attempt to subvert security on the server.
I think, though, that Jon is mainly interested in the use of scripts to
"enhance" the "user experience" and would be better off pursuing these
questions in non-accessibility forums, where finding hacks to make things
work on all recent versions of Netscape and IE are fairly standard questions.
(Actually, I think he would be better trying to find a language designed
for multimedia presentations. A lot of these problems are the result of
choosing a language that was designed for a different purpose, simply
because an interpreter for that language can be assumed to be on all,
vaguely recent, PCs.)
Unfortunately these mailing lists behave like moderated, albeit
auto-moderated, newsgroups, on which the rules is that you do not
cross-post to moderated groups. The moderators of these lists, who get
articles from non-subscribers, tend not to enforce this sort of policy,
but it still results in delays in the non-subscribed groups. Unlike
USENET, the article is not held back in all lists until authorised.
