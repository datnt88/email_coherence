Wording ala the 08 January 2003 draft [1]
Comment #1a
Aaron Leventhal, 07 Oct 2002 [2]
Add to Benefits: physically disabled users that cannot use pointing devices
or speech input. For example, users with ALS who use single switches to
simulate keystrokes.
Comment #1b
WWAAC (via David Poulson and Colette Nicolle) , 4 Nov 2002 [3]
Benefits: The illustrated benefit is probably not such a good example as
speech input is only appropriate in a limited number of cases. A better
example would be that keyboard mapping for functions allows specialist
switch input devices to work with the applications
Proposal #1
Add a 3rd benefit: Individuals who are physically disabled and cannot use
pointing devices or speech input can have access to the functionality of
the Web content or site.
Comment #2a
WWAAC (via David Poulson and Colette Nicolle) , 4 Nov 2002 [3]
minimum level success criteria #: Could be made clearer i.e. user agents
and event handlers may be too technical for some readers. Checkpoint 2.1 is
particularly difficult to follow.
Comment #2b
Sun (via Earl Johnson), 27 Oct 2002 [4]
Suggest rewording "Minimum Level" to "content uses only event handlers that
are designed so that, at a minimum, they are operable through character
input." The current wording can be interpreted as meaning an event handler
can not also support mouse input (i.e. that it must be a keyboard event
handler only).
Proposal #2a
event handlers are designed so that they are not tied to a specific input
device (i.e., "device independent").
Note: refer to checkpoint 5.3 for information regarding support in user tools.
Proposal #2b
event handlers are designed so that they are not tied to a specific input
device (i.e., "device independent").
The user must be able to interact with the content either
- through a pointing device such as a mouse or a stylus or
- through the keyboard or
- through keyboard emulation.
Note: refer to checkpoint 5.3 for information regarding support in user tools.
Rationale #2
I am toying with the idea of "user requirements" attached to each success
criterion that explain *why* this criterion is important. In other words,
tie each success criterion back to a user need. It might make each
criterion too much and is likely redundant with the benefits (so they could
be collapsed)...not sure I like it, but thought I'd give it a try. A
couple comments suggested we have more why/how info related to each checkpoint.
Comment #3
Terry Thompson, 21 Oct 2002 [5]
Maybe what confuses me here is the prepositional phrase on the end ("to the
content or user agent"). Is it necessary? What else would a user be
providing character input into other than the content, user agent, or both?
As I think about it though, I'm confused by this entire checkpoint. Is this
not placing an emphasis on character-accessibility over mouse
accessibility? Why not "device-independence"?
Proposal #3a
Ensure that all of the functionality is operable via a variety of types of
input device.
Proposal #3b
Ensure that all of the functionality is not tied to a particular type of
input device.
Comment #4a
Sun (via Earl Johnson), 27 Oct 2002 [4]
Level 2: what is a "more abstract event"? Same question applies if the
wording for this should be "more abstract event handler".
Comment #4b
SAP (via Audrey Weinland), 31 Oct 2002 [8]
level 2 #1: This item is not clear as currently worded and needs rewording.
Does it mean to use device- independent event handlers? If so, say that
instead. Otherwise, clarify. What is a "more abstract event"? "Used" how?
Proposal #4
Delete this criterion. If they satisfy the minimum level criterion, it is
not likely there will more that they can do...i.e., if they have already
created something device independent, then creating something *even more*
device independent is likely just to confuse people more than inspire them.
Comment #5
IBM (via Andi Snow-Weaver), 29 Oct 2002 [6]
The Character input definition refers to a character set called the W3C
Character Model. Are the tab and arrow keys part of this character set?
link to where this character model is defined.
Proposal #5
If proposal #2 is accepted, then we would not need to rely on "character
input." For reference, W3C Working Draft: Character Model for the World
Wide Web 1.0 [7] does not include tab, alt, or other keys that might be on
a keyboard. The model only refers to text strings (per my ignorant
understanding of the model).
[1] http://www.w3.org/WAI/GL/WCAG20/WD-WCAG20-20030108.html#device-indie-events
[2] http://lists.w3.org/Archives/Public/w3c-wai-gl/2002OctDec/0023.html
[3] http://lists.w3.org/Archives/Public/w3c-wai-gl/2002OctDec/0135.html
[4] http://lists.w3.org/Archives/Public/w3c-wai-gl/2002OctDec/0111.html
[5] http://lists.w3.org/Archives/Public/w3c-wai-gl/2002OctDec/0080.html
[6] http://lists.w3.org/Archives/Public/w3c-wai-gl/2002OctDec/0117.html
[7] http://www.w3.org/TR/charmod/
[8] http://lists.w3.org/Archives/Public/w3c-wai-gl/2002OctDec/0130.html
wendy a chisholm
world wide web consortium
web accessibility initiative
Wendy has offered an excellent list of alternative proposals in
response to the comments received. I think several of the options are
highly problematic, though, especially the attempts to simplify the
requirement that actually reduce its precision. Attempts to clarify
the requirement that also have the effect of simplifying it, by
contrast, are to be welcomed, as the working group has agreed.
Now to the problems. We can't simply assert that the content must be
device independently (or operable device independently) because such a
requirement is circular - it simply shifts the problem to one of
defining what "input device independence" means. This is why the
working group has decided to reject such wording in the past.
"Ensure that the content can be operated with any type of input
device" is another way of expressing it, but again this is open to
serious problems of interpretation. Specifically, it could be read as
requiring that support has to be built into the content to enable it
to be operated entirely with a pointing device (as opposed to using an
"on-screen" keyboard or other assistive technology). That kind of
interpretation is not what we intend, as was argued in the working
group's discussion of this checkpoint.
In the end we agreed on "character input" as the best way of
formulating the requirement, which also has the advantage of being
sufficiently precise that the developer knows what is needed even
before turning to the techniques document.
I don't think we have anything better than the current wording on
offer at present, unless we want to lose precision or decide to make a
general statement (about operability with all types of input device)
and then start qualifying it in complex ways to achieve the result
that we want. I also thought, upon reading some of the comments, taht
the phrase "to the content or user agent" could be omitted from the
checkpoint text, and the required clarification achieved in the
success criteria. I can work on a proposal if we decide to retain
essentially the present wording.
I propose that anyone who wants to write an alternative to the current
wording should take an action item to do so, and should make sure that
their proposal addresses all of the problems that the working group
has identified with earlier formulations which were considered and
rejected. My only reason for not accepting this action item at present
is that I haven't thought of anything which might work. If I do have
an idea that seems sound, however, I will definitely post it. The
present wording is the result of much detailed discussion, and so far
I haven't read any alternative that accurately expresses what we want
without being subject to the various criticisms that were made of
earlier proposals.
I concur with Jason's assessment. I was drafting my own similar comment
when I read his so I will not post it.
But a couple specific answers to questions raised -- that back up Jason's
comments.
1 - I think that Earl Johnson's suggestion has merit - for the reason's he
stated. His suggestion was:
"content uses only event handlers that are designed so that, at a minimum,
they are operable through character input."
2 - We should not mention keyboard emulation (except perhaps
parenthetically after keyboard such as ....keyboard (and emulated
keyboards). ) No one really know what "Keyboard emulation" is --- AND
it means "acting exactly like a keyboard so that it is impossible to tell
that you are not using the keyboard". If you are Keyboard accessible you
are by definition accessible by Keyboard emulation. So it is not necessary
and it would in fact actually be redundant with Keyboard accessible.
Gregg
Gregg C Vanderheiden Ph.D.
Professor - Ind. Engr. &amp; BioMed Engr.
Director - Trace R &amp; D Center
University of Wisconsin-Madison
