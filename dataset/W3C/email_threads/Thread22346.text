Once upon a time Neil Murray shaped the electrons to say...
I would like to suggest/propose a unified, modular specification for the
following languages / specifications / options:
- HTML 4.0
- CSS1
- The DOM (Document Object Model)
- ECMAScript (Formerly JavaScript)
- DOM / ECMAScript integration rules
- Other interpreted presentation / application options
Please - NO.
Making it part of one spec is the best way to ruin them all.
Keeping things seperate, but with a common set of interface points, allows
the WGs to do their work well. It allos developers to change components
as each area changes. It stops the hold ups when one small thing in one
area is lagging.
Making things monolithic has been proven the worst thing to do countless
times in software and in specifications.
Imagine if all of the PPP RFCs were one monolithic RFC. That would be
madness.
The current HTML 4.0 specification provides extensive support for the
integration of style sheets and scripting but does not include the style
and script specifications themselves. This could set up conditions where
browser vendors claim HTML 4.0 support without supporting any of the
implied style and script extensions.
A browser can support HTML 4.0 without doing DOM - that is legit. Making
it one monolithic spec will not force anyone to do anything - browser
makes will just ignore it as being unreasonable. And frankly, I'd agree
with them. Bluntly I don't expect, nor WANT, all browsers to start adding
scripting or DOM support. It doesn't make sense for all UAs to do so.
Keeping things seperate is the only sane way to approach standards
development. Once things become too closely tied, it acts like an anchor
restraining development, and expecially deployment.
-MZ
Livingston Enterprises - Chair, Department of Interstitial Affairs
For support requests: support@livingston.com http://www.livingston.com/
Snail mail: 4464 Willow Road, Pleasanton, CA 94588
I would like to suggest/propose a unified, modular specification for the
following languages / specifications / options:
- HTML 4.0
- CSS1
- The DOM (Document Object Model)
- ECMAScript (Formerly JavaScript)
- DOM / ECMAScript integration rules
- Other interpreted presentation / application options
The current HTML 4.0 specification provides extensive support for the
integration of style sheets and scripting but does not include the style
and script specifications themselves. This could set up conditions where
browser vendors claim HTML 4.0 support without supporting any of the
implied style and script extensions.
Another problem could arise where browser vendors implement vendor specific
languages which would not support access to the DOM in a standard form.
If a new specification (Unified Browser Language (UBL) for example) or a
unified all consuming HTML specification were created to incorporate these
existing and emerging standards, then a clearer direction could be given to
browser vendors.
The UBL could be broken down into various levels which would define browser
capability very clearly.
UBL 0 (Standard HTML, No Scripts, No Styles)
UBL 1 (Style sheet extensions to HTML and style sheet interpreter)
UBL 2 (Scripting extensions to HTML and complete script interpreter)
Devices like WebTV, Windows CE Devices, Nokia 9000's etc. would probably
support "UBL 0" or "UBL 0/1" for "presentation/publishing" only. More
advanced devices might support "UBL 0/1/2" or "UBL 0/2" and so on for
application purposes.
A unified specification would also provide less leeway for vendors like
Microsoft and Netscape because the various language interfaces would be
fully described. Extensions to the UBL could then easily be presented and
added with embedded HTML extension so that the base HTML spec would not
have to go through as many revisions.
I don't think XML will provide the kind of extension support required here.
Neil Murray
Telekinesys (SA) (Pty) Ltd
neil@telekinesys.co.za
Your commercial web applications are ready!
You will note from my original comment that I have suggested doing exactly
what you are suggesting by providing levels/modules of the specification
which add the required extensions to HTML for each module. I am in no way
implying that a single spec should cover all aspects of the browser
interface, merely that the base spec should be extensible by module and not
contain superfluous extensions implemented at the discretion of the browser
manufacturer's.
If a browser maker support HTML 4.0 then they should support all of it.
Please - NO.
Making it part of one spec is the best way to ruin them all.
Keeping things seperate, but with a common set of interface points, allows
the WGs to do their work well. It allos developers to change components
as each area changes. It stops the hold ups when one small thing in one
area is lagging.
Making things monolithic has been proven the worst thing to do countless
times in software and in specifications.
Imagine if all of the PPP RFCs were one monolithic RFC. That would be
madness.
A browser can support HTML 4.0 without doing DOM - that is legit. Making
it one monolithic spec will not force anyone to do anything - browser
makes will just ignore it as being unreasonable. And frankly, I'd agree
with them. Bluntly I don't expect, nor WANT, all browsers to start adding
scripting or DOM support. It doesn't make sense for all UAs to do so.
Keeping things seperate is the only sane way to approach standards
development. Once things become too closely tied, it acts like an anchor
restraining development, and expecially deployment.
-MZ
Livingston Enterprises - Chair, Department of Interstitial Affairs
For support requests: support@livingston.com http://www.livingston.com/
Snail mail: 4464 Willow Road, Pleasanton, CA 94588
A great idea! I support this wholeheartedly.
