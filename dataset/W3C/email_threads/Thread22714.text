Hi,
It is unclear to me how a DOM level 2 compliant DOM implementation should
react on a DOMImplementation.hasFeature('Core', '1.0') or
.hasFeature('XML', '1.0') call.
In DOM level 1, what are now the 'Core' and 'XML' were together called the
'XML' feature. Returning true on 'XML', '1.0' meant that both the
fundamental and the extended interfaces were supported. This was not
consistent with the rest of the DOM spec, because the Extended interfaces
were optional for 'HTML' feature DOM implementations.
In DOM level 2, with the clearer 'Core' feature name for the fundamental
interfaces it now is unclear to me if hasFeature should still return true
for hasFeature('XML', '1.0'). I can also image that returning true for
hasFeature('Core', '1.0') is a good idea; after all, we also support the
DOM level 1 methods of the fundamental interfaces.
Would this be the compliant behaviour? Or would this make a DOM
implementation non-compliant? Or is this outside the scope of the DOM
specification; a DOM can return either true or false as this is undefined?
Martijn Pieters
Software Engineer mailto:mj@digicool.com
Digital Creations http://www.digicool.com/
Creators of Zope http://www.zope.org/
You seem to be confused. In DOM Level 1, "Core" was never visible
as a testable feature revision level ... you asked instead about XML or
about HTML, and inferred about "core".
There was no inconsistency ... it was just another hidden feature that
was implied by something else. DOM L2 just made it explicit. Now
if they'd have done the same thing for bootstrapping and DTD support,
it would have been better.
Right, I see. The fact that the hasFeature method existed implied that the
'Core' featureset was supported. This makes things a little clearer.
So, should a DOM level 2 implementation return true on hasFeature('Core',
'1.0) or hasFeature('XML', '1.0')? I *think* it should, but would like to
hear confirmation.
Martijn Pieters
Software Engineer mailto:mj@digicool.com
Digital Creations http://www.digicool.com/
Creators of Zope http://www.zope.org/
The definition of version '1.0' is driven by the DOM Level 1 specification.
The DOM Level 2 specification doesn't say anything about
hasFeature('Core', '1.0') and I don't think it has to, given that you can't
expect a DOM Level 1 implementation to return true.
hasFeature('XML', '1.0') must definitively return true for a DOM Level 2
implementation since DOM Level 2 is build on top of DOM Level 1.
Philippe
