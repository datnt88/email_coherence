The URL for the new format for the UA guidelines is:
Jon
Jon Gunderson, Ph.D., ATP
Coordinator of Assistive Communication and Information Technology
Division of Rehabilitation - Education Services
University of Illinois at Urbana/Champaign
1207 S. Oak Street
Champaign, IL 61820
Voice: 217-244-5870
E-mail: jongund@uiuc.edu
WWW:http://www.staff.uiuc.edu/~jongund
First, Congratulations. Very NICE set of guidelines.
Here are some edits (below).
I have also marked them in a word file which had the edit
tracking turned on which is attached so that you can see the
edits in context if you wish. They are also marked in the word
file with two vertical line characters || to make them easy to
find with a search command.
[ I have not listed the spelling, missed words or phrasing
suggestions in this email body though they are marked in the word
file. the items listed below are just items that may affect
content.]
Gregg
IN THE ABSTRACT
IT SAYS
This document provides guidelines to browser (also called "user
agent") designers on how to make their products more
accessible....
User agents is a broader classification than browsers... so you
might change it to say:
This document provides guidelines to browser designers (and to
user agent designers in general) on how to make their products
more accessible.....
IN "RATING AND CLASSIFICATION
It currently reads:
[Priority 1]
This guideline must be implemented by a browser, or one or more
groups of users will find it impossible to access information on
the ||a WWW|| page. This guideline will significantly improve
access to WWW pages designed without accessibility considerations
it seems to me that these guidelines improve access for all pages
even if they were designed for access. I would therefore drop
the phrase " designed without accessibility considerations" from
priority 1 and 2
IN 3.1 ITEM 8
you might add
"and allow users to share effective profiles with each other"
to the end so that it reads.
..... This is very useful in public access computer environments
where several people use the same computer. User profiles allow
for convenient customization and allow users to share effective
profiles with each other.
IN 3.2 (and elsewhere)
it now says
"If none of these attributes is specified, the name of the file
designated by the "src" attribute should be used as the
alternative text. "
In a number of places like this it is suggested that file names
be inserted or displayed instead of alt text. I don't think
this is a good idea. It will cause people who look at pages to
think that this is a what should be put into alt text. (they
don't look at source code for pages? just learn from what they
see). I am not sure that it is very helpful and I think it
clutters up the page. But mostly I think it will be the most
common alt text seen (or believed to be seen) and will both set a
bad example and cause people to think poorly of alt text. The
name of the file can be ascertained by looking at the status bar
when the focus is on the element. (or it should be). I would
suggest we not fill in alt text with file names either at the
browser or at the author tool stage of the process.
another example of filenames being used is in 3.2 ITEM 2
In the element has no content, the name of the file designated
by the OBJECT's "data" attribute should be used as the
alternative text. "
and another example is in 3.4 ITEM 1 Paragraph 2
"As before, the innermost text of the OBJECT is considered its
alternative text. If the element has no content, the name of the
file designated by the OBJECT's "data" attribute should be used
as the alternative text. "
IN 3.2 ITEM 1 3rd paragraph
it says
Text should be wrapped so the user doesn't need to do a
vertical scroll to read the description."
I think that should be HORIZONTAL SCROLL
You might want to add an ITEM 5 to 3.2
Priority 3
When a hard coded D link is present, the browser might provide a
USER SETTING which would suppress the display of the D link for
those users who would not like to see the D links on the page
during their normal viewing.
3.3 ITEM 2
Add to the end of it
"If ShowSounds is turned on at the system level - this flag
within the browser should read as "true" or "on".
3.5 ITEM 3 reads
Provide a "serialized" view of tables. The first line of the
table provides the size and name of a table. Then, for each cell,
render the row and column coordinates of the cell followed by the
cell's contents. If row and column heading information has been
specified in the table (TH element) it should be used in the row
and column coordinate information.
I suggest adding the following to the end
"If not then the first column should (at the user's request) be
used for row coordinates (titles) and the first row should be
used for column coordinates (titles). "
This would take a huge burden off of authors for marking up
simple tables.
4.1 items 1 and 2
Are these supposed to be linked??? It is not clear. if they
are linked i would end the first one with three dots ... and
start then next one with three dots ... to so that it is clear
that one is an extension of the other.
These also are hard to read and understand. You might think
about rewriting this one. Everything else is much clearer.
5.1 item 1
currently reads
Allow the user to use key board commands to sequentially move
between every frame, link, IMG elements with the "longdesc"
attribute set (only when images are turned off?), and form
controls.
I suggest changing it to:
Allow the user to use key board commands to sequentially move
between every frame, link, IMG element (if it is a link or has a
LONGDESC attribute) and form control.
5.2
add "based on Titles (H1, H2, H3). "
to the end of sentence 1.
Also you should explain what is meant by "compatible with
third-party assistive technology."
5.2
the last sentence should be
..."either keyboard or pointing input"
shouldn't it?
5.3 ITEM 1
change "name" to "text or alt text" or (title?) at the end of
ITEM 1
"Users should be able to search for (and shift the focus to) a
link or control by its position or by its text or alt text (or
title?)."
5.3 ITEM 3
This is a priority 1 item which is listed AFTER a prioriy 2 item.
First time i saw this. I think you might want to keep your
number one priority items first in each category.
5.5 ITEM 2
I think you need a reference to where they can find information
on how to do this.
"Provide a means for third-party assistive technologies to
identify the focus."
5.6 ITEM 2 and 5.7 ITEM 1
Are these really prioriy ONE?
"Allow the user to use the keyboard to create a list of elements
and their associated dynamic HTML events, and to select and
execute an event on the list."
and
"Allow the user to use the keyboard to create a history of
visited documents, and to select and visit a document on the
list."
7.1 ITEM 6, 7, and 8
These are listed as being priority one... so you might want to
move them up ahead of the priority twos
The other edits are just editorial and are in the word doc.
Nice work.
Gregg
Hi,
I apologize for not reviewing this sooner and for any duplicate comments.
For each of my comments I include the text of the guideline and then a
comment that begins with "wc::".
I'm anxious to see these guidelines implemented!
--w
3.2.3 [PRIORITY 1]
When an IMG element has a value for the "longdesc" attribute and the
user has turned off the display of images, render a "description link"
(D-link) inline to give access to the long description. Provide keyboard
access to locate and select the long description (in addition to pointer
access for able-bodied users). The D-Link should function the same as a
standard
ANCHOR element.
wc:: If a person has turned off the loading of images, then they probably
won't mind a more descriptive link. If the image has a "title" or "alt"
associated with it, the text link that the browser renders could be
"description of title / alt " or even just "description of image file
name " if no title/alt is given, or something like that.
3.2.4.[PRIORITY 3]
When an IMG element has a value for the "longdesc" attribute and the
user has already de fined a "description link" (D-link) for the image,
the "longdesc" D-Link should be suppressed. Therefore if an IMG element has
both a value for "longdesc" and a hard coded D-Link only one D-Link
should be presented to the user.
wc:: I believe the first "user" in this guidelines should be "author,"
i.e., "and the *author* has already defined a d-link..."
wc:: in general, when mentioning how object is rendered, before the file
name is rendered (assuming this is a strategy we want to take - see Gregg
Vanderheiden's message sent 5/30/1998) for the object check for a title on
the object. Also, I assume that if there is a hierarchy of objects, the
root object's information is what is rendered.
3.5 3.[PRIORITY 2]
Provide a "serialized" view of tables. The first line of the table
provides the size and name of a table. Then, for each cell, render the
row and column coordinates of the cell followed by the cell's contents. If
row and column heading information has been specified in the table (TH
element) it should be used in the row and column coordinate information.
wc:: row and column info can also be specified using "scope," &amp; "headers"
attributes or the COLGROUP element. Therefore, it might not be possible to
provide a "serialized" view of *every* table. alternatively, if navigation
through table cells is supported, then a querying mechanism should be
developed to find out more about the current cell (row and column header
info).
4.1.1.[PRIORITY 1]
Maintain the document view and focus as a user moves between
documents. As a user activates links and
wc:: unfinished sentence.
4.1.2.[PRIORITY 1]
When the user changes the view of a document, the focus is shifted to
a location in the current view. Thus, after changing the view, if the
user uses keyboard commands to move or select the focused element, the view
does not abruptly change to another portion of the document with the
focused element.
wc:: this is only required if alternative views are supported, and
alternative views are recommended. could these be grouped in some way?
4.3.1.[PRIORITY 1]
When a page is loaded, display short document summary information: the
size of the document, the number of structural elements related to the
document. The information could be displayed on a status line.
wc:: why is this required for accessibility?
4.4.1.[PRIORITY 1]
Display information about elements and dynamic HTML events when
certain events occur (e.g., focus, hover, etc.). Element information should
be displayed on the status line of the browser when an element receives the
focus or an occurs.
wc:: the last sentence is missing an "event." How will this information be
rendered so that it is humanly readable without the author embedding the
function of each event? For example, when a mouse passes over a button, it
changes from red to blue. For a visual user, this indicates this is a link
and it grabs our attention. The author would be required to include a
phrase to be included in the status line. Otherwise, the browser would
only be able to render something like, "image changes when it receives
focus" or something less jargony (if that's even a word smile ).
4.5.1.[PRIORITY 2]
Render the content of the TITLE element. The operating system may
impose conventions about where and how title information is rendered.
wc:: The TITLE element is usually used to name the current window of the
browser. However, TITLEs could also be displayed for titles of frames.
Another possible use of the TITLE element is to provide alt-text for
images used as linke to pages when authors don't provide alt-text. In this
case, a brower could grab the contents of the TITLE element of the document
being pointed to and use this as the alt-text.
5.5 .1.[PRIORITY 1]
Highlight the focus in an obvious manner so that users with low vision
may identify it.
wc:: and/or allow users to control how focus in highlighted (thick bordered
box that outlines the item, or the item changing foreground and background
colors, or the item appearing at the top of the page, or the item changes
size, etc.)
5.6.1.[PRIORITY 1]
Provide a means for third-party assistive technologies to identify
which elements have associated dynamic HTML events. This may be done, for
example, with visual markings.
wc:: i strongly think this should not be done visually, but
programatically. It seems that if the browsers exposed the DOM of a
document, most event information will be included, although i'm not
positive about this. does anyone know for sure?.
5.1.1.[PRIORITY 1]
Allow the user to use key board commands to sequentially move between
every frame, link, IMG elements with the "longdesc" attribute set (only
when images are turned off?), and form controls.
wc:: it seems to me that we only have one hierarchy: at the root is the
page. A page might contain two frames. Frames might contain a heading,
the heading might have several paragraphs, etc. Therefore, it seems we
need a single navigation mechanism with the following features:
1. navigate to the next item in this level of the hierarchy
2. navigate to the next item x layers into the hierarchy (default would be
one level).
This way a user could navigate between the "big chunks" (TABLE, FORM, UL,
OL, etc.) then a second mechanism that will allow navigation between its
pieces (TABLEs have TR, TH, TD, etc., FORMs have INPUTs, LABELs, etc, lists
have list items...).
As it reads now, why doesn't sequential navigation include other objects
such as headers, applets, objects, paragraphs, lists?
5.6.2.[PRIORITY 1]
Allow the user to use the keyboard to create a list of elements and
their associated dynamic HTML events, and to select and execute an event on
the list.
wc:: again, i think this will require the author to provide the human
readable label for the events that the user selects. do we want users
selecting events, or results of the events? it sounds like what we need
here is a replacement function for mouse movements so the user can hear
what will happen before deciding that they want it to happen. This is like
the Trace EZ Access "touch and confirm" access feature for touchscreen kiosks.
It would be very elegant if the human readable info could be extracted from
the NOSCRIPT element, or vice versa ("NOSCRIPT" element contents could be
generated from comment within scripts).
Acknowledgements: this is the most unique misspelling of my last name:
"Chilstrom" it's actually spelled "Chisholm" smile
wendy chisholm
human factors engineer
trace research and development center
university of wisconsin - madison, USA
Responses in JRG:
JRG: Interesting idea, I will add it to the issues page. This may tie into
the current labeling of LONGDESC with class or rel.
JRG: fixed
JRG: I think there is a consensus that file names are bad and I believe
TITLE is listed as an alternative source now.
JRG: Could you write up a guideline that says what you think it should say
using scope and headers? For navigation row and col info should be put on
the status line.
JRG: fixed
JRG: No this is a problem with the link or control that has the focus not
curently being in view window of the document. People using Page down may
change the view but the control with the focus is still at the top of the
page out of view. When they use the TAB key to move to the next control
the view abruptly changes to the top of the page.
JRG: It is no longer a priority #1. It is useful for people with visual
impairments to get some info about the document.
JRG: I think this item needs some work. I think the intent is that the
user be able to get information about what an element is (Header, list
item, para...) and also if the element can respond to an event. I am not
sure the working reflects the goal or how non link and conrol elements
would get the focus.
JRG: The title here refers to the title in the HEAD of the document, not in
an image. I will make that clearer in the document.
JRG: We are recommending the implementation of the outline property in
CSS2. WHich would provide a means to do these things.
JRG: I agree and it has been changed.
JRG: none of these items can currently receive the focus
kiosks.
JRG: The element text content (this may be a problem) or ALT text would be
used along with the event that is associated with the element.
JRG: Fixed. Thanks for your work in reviewing the document.
Jon Gunderson, Ph.D., ATP
Coordinator of Assistive Communication and Information Technology
Division of Rehabilitation - Education Services
University of Illinois at Urbana/Champaign
1207 S. Oak Street
Champaign, IL 61820
Voice: 217-244-5870
E-mail: jongund@uiuc.edu
WWW:http://www.staff.uiuc.edu/~jongund
