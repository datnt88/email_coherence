Ok. I get the desired result if I use the command on all
local files:
cwm --closure=poEr myDingo.n3 --think
But I still get the error list below if I use the first
command in your example:
cwm --closure=por myDingo.n3 --think
That is, I get the error if I use closure flags 'por', but
it works when I use closure flags 'poEr'. Whats the difference?
'E' does not appear in the list of closure flags in help.
Thanks,
John Black
C:\Temp\cwm python /python23/lib/site-packages/cwm/cwm.py --closure=por myDingo.n3 --think --filter=anyDogs.n3
#Processed by Id: cwm.py,v 1.143.2.1 2003/09/12 14:56:21 timbl Exp
# using base file:/Temp/cwm/myDingo.n3
Traceback (most recent call last):
File "/python23/lib/site-packages/cwm/cwm.py", line 652, in ?
doCommand()
File "/python23/lib/site-packages/cwm/cwm.py", line 380, in doCommand
p.load(_inputURI)
File "C:\python23\lib\site-packages\cwm\notation3.py", line 209, in load
return self.loadBuf(stream.read()) # self._formula
File "C:\python23\lib\site-packages\cwm\notation3.py", line 217, in loadBuf
self.feed(buf)
File "C:\python23\lib\site-packages\cwm\notation3.py", line 235, in feed
i = self.directiveOrStatement(str,j)
File "C:\python23\lib\site-packages\cwm\notation3.py", line 248, in directiveOrStatement
j = self.statement(str, i)
File "C:\python23\lib\site-packages\cwm\notation3.py", line 341, in statement
j = self.property_list(str, i, r[0])
File "C:\python23\lib\site-packages\cwm\notation3.py", line 594, in property_list
self.makeStatement((self._context, sym, subj, obj))
File "C:\python23\lib\site-packages\cwm\notation3.py", line 331, in makeStatement
self._sink.makeStatement(quadruple, why=self._reason2)
File "C:\python23\lib\site-packages\cwm\llyn.py", line 1452, in makeStatement
self.storeQuad(q, why)
File "C:\python23\lib\site-packages\cwm\llyn.py", line 1481, in storeQuad
return context.add(subj=subj, pred=pred, obj=obj, why=why)
File "C:\python23\lib\site-packages\cwm\llyn.py", line 479, in add
self.checkClosure(subj, pred, obj)
File "C:\python23\lib\site-packages\cwm\llyn.py", line 617, in checkClosure
x.dereference("m" + self._closureMode, self)
File "C:\python23\lib\site-packages\cwm\term.py", line 212, in dereference
if "E" not in mode: F = self.store.load(inputURI)
File "C:\python23\lib\site-packages\cwm\llyn.py", line 1263, in load
p.feed(buffer)
File "C:\python23\lib\site-packages\cwm\sax2rdf.py", line 584, in feed
self._p.feed(data)
File "C:\Python23\Lib\site-packages\_xmlplus\sax\expatreader.py", line 220, in feed
self._err_handler.fatalError(exc)
File "C:\Python23\Lib\site-packages\_xmlplus\sax\handler.py", line 38, in fatalError
raise exception
xml.sax._exceptions.SAXParseException: unknown :133:21: not well-formed (invalid token)
From: Sandro Hawke [mailto:sandro@w3.org]
Sent: Wednesday, October 08, 2003 1:33 PM
Subject: Re: A bit of running code for "Tim's View"
Sorry, I simplified the inputs slightly for the e-mail. I should have
been clearer about that. The real files are in
and I see that myDingo.n3 has a temporary patch "For working on the
plane" (ie without the web handy). So yes, I left out the ":" prefix
declaration.
C:\Temp python /python23/lib/site-packages/cwm/cwm.py
--closure=por myDingo.n
3 --think
#Processed by Id: cwm.py,v 1.143.2.1 2003/09/12 14:56:21 timbl Exp
# using base file:/Temp/myDingo.n3
Traceback (most recent call last):
File "/python23/lib/site-packages/cwm/cwm.py", line 652, in ?
doCommand()
File "/python23/lib/site-packages/cwm/cwm.py", line 380,
in doCommand
p.load(_inputURI)
File "C:\python23\lib\site-packages\cwm\notation3.py",
line 209, in load
return self.loadBuf(stream.read()) # self._formula
File "C:\python23\lib\site-packages\cwm\notation3.py",
line 217, in loadBuf
self.feed(buf)
File "C:\python23\lib\site-packages\cwm\notation3.py",
line 235, in feed
i = self.directiveOrStatement(str,j)
File "C:\python23\lib\site-packages\cwm\notation3.py",
line 248, in directi
veOrStatement
j = self.statement(str, i)
File "C:\python23\lib\site-packages\cwm\notation3.py",
line 341, in stateme
nt
j = self.property_list(str, i, r[0])
File "C:\python23\lib\site-packages\cwm\notation3.py",
line 594, in propert
y_list
self.makeStatement((self._context, sym, subj, obj))
File "C:\python23\lib\site-packages\cwm\notation3.py",
line 331, in makeSta
tement
self._sink.makeStatement(quadruple, why=self._reason2)
File "C:\python23\lib\site-packages\cwm\llyn.py", line
1452, in makeStateme
nt
self.storeQuad(q, why)
File "C:\python23\lib\site-packages\cwm\llyn.py", line
1481, in storeQuad
return context.add(subj=subj, pred=pred, obj=obj, why=why)
File "C:\python23\lib\site-packages\cwm\llyn.py", line 479, in add
self.checkClosure(subj, pred, obj)
File "C:\python23\lib\site-packages\cwm\llyn.py", line
617, in checkClosure
x.dereference("m" + self._closureMode, self)
File "C:\python23\lib\site-packages\cwm\term.py", line
212, in dereference
if "E" not in mode: F = self.store.load(inputURI)
File "C:\python23\lib\site-packages\cwm\llyn.py", line
1263, in load
p.feed(buffer)
File "C:\python23\lib\site-packages\cwm\sax2rdf.py", line
584, in feed
self._p.feed(data)
File
"C:\Python23\Lib\site-packages\_xmlplus\sax\expatreader.py", line 216,
in feed
self._parser.Parse(data, isFinal)
File
"C:\Python23\Lib\site-packages\_xmlplus\sax\expatreader.py", line 395,
in external_entity_ref
self._source.getSystemId() or
File
"C:\Python23\Lib\site-packages\_xmlplus\sax\saxutils.py", line 515, in
prepare_input_source
f = urllib2.urlopen(source.getSystemId())
File "c:\python23\lib\urllib2.py", line 136, in urlopen
return _opener.open(url, data)
File "c:\python23\lib\urllib2.py", line 331, in open
type_ = req.get_type()
File "c:\python23\lib\urllib2.py", line 233, in get_type
raise ValueError, "unknown url type: %s" % self.__original
ValueError: unknown url type: XMLSchema.dtd
Hm. I don't know. Tim? (I've included him on the recipients)
-- sandro
(Tim?)
I thought the E was the same as for --mode: to not report
failure-to-retrieve as an error. So I dropped it from my example.
But maybe I was wrong. :-/
-- sandro
Yes, sorry forte lack of --help, E means ignore errors on
retreive/parse.
