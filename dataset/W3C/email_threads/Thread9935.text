I've been unable to find the time earlier this week to review all the
SOAP WDs properly apart from (mostly typos) in Part 0 Primer which
I'll send myself.
My main note is the use of XML qnames, the (namespace name, local
name) pair for identifiers which is biggest disconnect and doesn't
seem particular webby to me - URIs are the web's identifiers.
The TAG has been discussing this:
(DRAFT) TAG Finding: Using Qualified Names (QNames) as Identifiers in Content
but offers mostly observations.
SOAP seems to use qnames, uris and strings in attribute values,
element content as identifiers and it isn't clear to me when these
are best picked, at least coming to it fairly cold.
With respect to Part 2, Adjuncts - Graham's analysis in
seemed fair but it looks like formulating a WG response is unlikely
given the timescale and since from Graham's analysis, it doesn't look
so useful for shipping RDF.
I may have an attempt to review part 2 myself rather than for this
WG, by tomorrow's deadline.
Dave
I'd have to agree. Graham's analysis pretty much sums things up. You
_could_ encode RDF-like graphs in soap, but it wouldn't be a natural
fit.
jan grant, ILRT, University of Bristol. http://www.ilrt.bris.ac.uk/
Q: What's yellow and equivalent to the axiom of choice? A: Zorn's lemon.
Dan, I agree with your general scenario and comments.
Can you expand on your 'natural fit' comment? If you were building the
software description system described (people are, right now) would you
use SOAP Encoding or RDF syntax? Wouldn't you expect it to be natural to
have a defined mapping between these two W3C specs?
In order: I'm guilty of the "bad smell" sin here; basically my concerns
are that you're fitting something into what still seems (to me) to be a
purely syntactic framework. The existence of a well-defined, sanctioned
mapping would at least say, "here are some RDF-style MT semantics for
the subset of soap graphs that we map RDF onto".
The "no literals at the blunt end" thing might bite us if we "fix" that.
And the answer to the most important question (your last one) is an
emphatic yes.
jan grant, ILRT, University of Bristol. http://www.ilrt.bris.ac.uk/
Prolog in JavaScript: http://ioctl.org/logic/prolog-latest
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1
OK, imagine you're putting up a website based around the notion of
software descriptions. In this example, Ruby software packages.
If you go the SOAP, Web Services route, you'll maybe serialize software
descriptions using SOAP Encoding rules. If you go the RDF route, you'll
define RDF classes and properties, and use RDF's serialization.
So you'll end up with one problem diverging into two different XML
representations.
Here's all my work in progress (re SOAP 1.1), including example files
in SOAP and RDF formats, generated with Max Froumentin's partial
SOAP2RDF XSLT:
(this is on my own development box; W3C CVS choked on the huge checkin
and I've not figured out another way to host the files at w3c yet).
e
contrast:
rummage around there for the .xslt and scripts to load the transformed
SOAP data into an SQL store and query it with RDF query tools...
more partial writeup:
attempt to show an SE-Triples version of N-Triples for SOAP QA).
Can you expand on your 'natural fit' comment? If you were building the
software description system described (people are, right now) would you
use SOAP Encoding or RDF syntax? Wouldn't you expect it to be natural to
have a defined mapping between these two W3C specs?
Dan
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org
iD8DBQE9Nsa+PhXvL3Mij+QRAvLoAKC55agPqikC1o4REfrYsl5qLkl5pwCfX+08
q7G6wWhuCltmNGqeVTy6VDg=
=hiTw
-----END PGP SIGNATURE-----
