Yaron (or anyone),
I think I am coufused but...
Do we need two PUTs to create a new non-HTML resource:
one for attributes headers of the resource and the other for
the content of the resource?
Or the WEBDAV draft excludes non-HTML resources (although it
does not explcitly say so)?
To handle non-HTML resources properly, I think it would be
better to transmit meta-information (including attributes)
as HTTP headers. Because you can create a resource with one
PUT. The draft says in 2.2.1, "attributes headers may grow to
very large sizes and may contain octet data", but
I don't understand why we shoudn't send very large headers or
if octet data are really needed? Also sending HTTP headers in
the body of the entities is obviously misuse by definition.
I think clearly defined methods, such as a method for set attribute
values, are better thatn the misuse of (or confusing usage of)
existing methods... Also the draft proposes significant
additions to URI. I think URI should be opaque as discussed in
the early time in this maling list (remember the "URL;ver="
discussion?).
Actually the draft confuses me - I don't quite understand whether it
describes about HTTP headers or HTML head parts.
Best regards,
Kenji
1. You need a PUT for every resource you create, HTML or not. Attributes
are resources, so every attribute you create will require a PUT. HTTP
Attributes have nothing what so ever to do with HTML.
2. It is not acceptable to have to download every single attribute every
time I do a GET. The overhead is huge. As for abusing the term header,
fine, call them attributes. Drop the word header. An attribute is
nothing more than a typed link. The semantics of this link is that when
a resource with attribute linked resources is manipulated the associated
resources are also effected. As for manipulating the name space, this is
a trade off. Performing two gets every time I want to get an attribute,
once to get the URI of the attribute and again to retrieve the
attribute, is not acceptable. Its too big a performance hit. Thus we
must have a means to refer to an attribute without two lookups. The URL
kludge is a legitimate way to do that. Though I suspect we will change
the semantics to use ? rather than the " "..." " syntax.
3. There are no references in the document to HTML. HTML has nothing to
do with the document.
Yaron
If we have a simple external format for metadata, we can send a
document and its metadata together using multipart/related.
I think we should consider what it takes to make WEBDAV work over
email, e.g., where you MAIL an update to the web server as an
attachment.
If we're careful about data formats, this should work as well as using
HTTP. (This is an argument for tipping the balance toward 'new mime
types' rather than 'new method names' since mail really only has
POST).
Larry
I like this idea. In fact, I've been experimenting with the idea of using
multipart/related in another context to transfer database records. My only
question is whether the experimental status of the RFC will pose a problem
for us. If so, what do we need to do?
Probably not much. After all, both SMTP mail and HTTP use the same
messaging model(modulo details like Content-Transfer-Encoding, but that
shouldn't affect us.)
Or, as I suggested elsewhere, we could introduce a single media type and
use parameters. It just seems like we're asking for trouble by introeducing
a separate media type for each action we wish to support. Even with
methods, we could include the method in the RFC-822 header, perhaps as
X-WEBDAV-Method: or some such thing. (Not that I advocate this approach.)
Gregory Woodhouse gjw@wnetc.com
home page: http://www.wnetc.com/home.html
resource page: http://www.wnetc.com/resource/
# I like this idea. In fact, I've been experimenting with the idea of using
# multipart/related in another context to transfer database records. My only
# question is whether the experimental status of the RFC will pose a problem
# for us. If so, what do we need to do?
The MHTML group has pushed multipart/related into standards track,
since they needed it for mailing around HTML documents with the
included GIFs and JPEGs. There are new versions in the internet drafts
directories:
From: The IESG iesg-secretary@ietf.org
Subject: Last Call: MIME E-mail Encapsulation of Aggregate Documents,
such as HTML (MHTML) to Proposed Standard
Reply-to: iesg@ietf.org
Date: Tue, 5 Nov 1996 07:07:12 PST
The IESG has received a request from the MIME Encapsulation of
Aggregate HTML Documents Working Group to consider the following three
documents for the status of Proposed Standard:
1. MIME E-mail Encapsulation of Aggregate Documents, such as HTML
(MHTML)
2. Content-ID and Message-ID Uniform Resource Locators
3. The MIME Multipart/Related Content-type
The IESG plans to make a decision in the next few weeks, and solicits
final comments on this action. Please send any comments to the
iesg@ietf.org or ietf@ietf.org mailing lists by November 18, 1996.
Files can be obtained via ftp://ds.internic.net/internet-drafts/ filename
------- End of forwarded message -------
I like this idea too.
BTW, it seems to me that there is a general consensus on treating
attributes (or metadata) as usual resources. Right?
But I have questions about this...
1. How to define metadata of metadata?
For example, if you lock the metadata independently, you have to keep
track of lock status of metadata. This is an infinite chain....
2. How to maintain the consistency between contents and their metadata?
If we handle independently these two, we always have this problem.
Anyway you need to lock both to modify metadata if you would like to
ensure the consistency.
3. When is it useful to manipulate the metadata independently
from contents?
At last, metadata are metadata of something.
Best regards,
Kenji
