Sent to xtech because it is a public list and talking about ideas based on a
public spec (the last call spec http://www.w3.org/TR/xptr-framework/ on which
comments are formally overdue - sorry)
A possible issue, more related to EARL, with the Xpointer spec...
It is mor reliable (given smart editors) to point to an ID than another kind
of reference. Perhaps we should suggest that an Xpointer SHOULD point to an
ID rather than another kind of pointer where possible. This could be checked
automatically by testing whether the element in question, so could be a
syntactically testable constraint.
What do people think?
Chaals
Location: 21 Mitchell street FOOTSCRAY Vic 3011, Australia
(or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France)
Charles, have you been looking at my new EARL[1] stuff, or are we just
thinking in parallel?
It is indeed possible for a tool to generate its own IDs for every
node in a DOM, and use these internally to reference them. An EARL
tool can also export them, provided it makes available the IDs themselves
(as in my latest tool[1]) and/or machine-readable instructions for
reconsructing them as previously discussed ([2], etc). The former
simplifies a document snapshot, whereas the latter is still
necessary if we want rubustness across document changes.
[1] http://lists.w3.org/Archives/Public/w3c-wai-er-ig/2002Jul/0031.html
[2] http://lists.w3.org/Archives/Public/w3c-wai-er-ig/2002Jul/0017.html
Nick Kew
Nothing parallel about it. I'm shamelessly following on from your ideas.
I'm looking at the simple case where an Xpointer constructed by counting
elements or something points to a thing with an ID already. (if the tool
constructs an ID it is not certain that other tools will have this available
to refer to without having an agreed way of assigning ID, and that gets
circular...)
IDs are normally the most robust things over changes. So an Xpointer tool
could check for an ID and ask if there was any reason not to use it...
Chaals
Is this really true?
Where the pattern one wishes to persistently access is "the introductory
subsection in the conformance section of the document" it is likely not.
An example where an ID would be an inferior reference is the example from the
RFB&amp;D website where, for dyslexic accomodation, they were putting the first
word of a paragraph in one step larger font and the first letter of that
word in yet a larger presentation. But this was all position-in-paragraph
in its sense. For this, a contextual pattern is the more stable or persistent
reference to what is the matter at hand.
Relatives of the 'first-letter' pseudo-property are better referenced by
pattern than by atomic ID.
The use of relative URLs is analogous. Relative-role patterns are the highest
and best expression for some references. It is not possible in general to say
#id references are always better.
They are better as of now in terms of down-level compatibility. This alone
argues for the authoring technique as a transitional measure.
An authoring technique that offers the ID as a reference handle where there is one
does not have to be wired into the framework for XPointer. It can be tried and
be deployed on its own merits independently.
So far, The argument from general Web quality is debatable, and the argument
that there is an access dependency even weaker. Can someone explain why this
technique should have standing to be a WAI issue against the pointer framework.
There are competing optimizations to be looked at, not a true generic preferece.
Binding associations as locally as possible, in as context-independent a way as
possible, is good for resource reusability by cut and paste. But there are
processing reasons for define-before-use rules and getting things in the processing
pipe associated to the root of the scope where they are generally available.
The canonical form of reference includes acceptors articulating conditions on the context,
and not just an identity of "a thing." The latter is efficient where it works, but
we are as dependent on the fact that it doesn't always work as we are dependent on
its advantages when it works.
Al
I've no objection to 'preferring' id's, but to say should is diminishing
the point of xpointer imo. One of its uses is to specify the third para
element, or the nth word in the mth para in the pth section.
Seems like quite a restriction Charles?
regards DaveP
******** snip here ************
NOTICE: The information contained in this email and any attachments is
confidential and may be legally privileged. If you are not the
intended recipient you are hereby notified that you must not use,
disclose, distribute, copy, print or rely on this email's content. If
you are not the intended recipient, please notify the sender
immediately and then delete the email and any attachments from your
system.
RNIB has made strenuous efforts to ensure that emails and any
attachments generated by its staff are free from viruses. However, it
cannot accept any responsibility for any viruses which are
transmitted. We therefore recommend you scan all attachments.
Please note that the statements and views expressed in this email
and any attachments are those of the author and do not necessarily
represent those of RNIB.
RNIB Registered Charity Number: 226227
Website: http://www.rnib.org.uk
Yes, it is a restriction to prefer IDs and there are real use cases where
they shoudn't be preferred. But there are lots where they should. Maybe it is
too strong a point to make in anything but general guidance on "how to choose
URIs" and "how authoring tools should pick anchor points"
Chaals
Location: 21 Mitchell street FOOTSCRAY Vic 3011, Australia
(or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France)
