Hello Henry,
We have looked at the response below, and are fine with it,
i.e. we think that it satisfactorily addresses our original comment.
Regards, Martin.
Hello, Martin,
Regarding the response to the I18N WG's comment number [18], you
Martin Duerst duerst@w3.org wrote on 2004-05-05 04:12:39 AM:
The I18N WG (Core TF) has looked at your response.
We can confirm that we are okay with your solution under the
assumption that the default is still the same (i.e.
omit-xml-declaration='no', i.e. it is the default to omit an
XML declaration).
In response to another last call comment, default settings for
parameters to serialization will be determined by the process that sets
those parameters. The particular default settings specified by XSLT 2.0
and XQuery 1.0 have not changed, however. In particular, the XSLT 2.0
specifies a default value of no for the value of the omit-xml-declaration
parameter, while XQuery 1.0 specifies a default value of yes.
Thanks,
Henry
Henry Zongaro Xalan development
IBM SWS Toronto Lab T/L 969-6044; Phone +1 905 413-6044
Hello Henry,
On behalf of the I18N WG, I herewith confirm that this response is
satisfactory for us.
Regards, Martin.
[15] Section 4, "To anticipate the proposed changes to end-of-line
handling in XML 1.1, implementations may also output the characters
x85 and x2028 as character references. This will not affect the way
they are interpreted by an XML 1.0 parser.": XML 1.1 is now a REC,
so this is no longer anticipated. See
Thanks to Martin and the working group for this comment.
The XSL and XML Query Working Groups discussed the comment, and
agreed that the Serialization specification should be amended so that it
no longer refers to XML 1.1 as if it were not yet a recommendation.
Furthermore, the working groups decided that the handling of x85 and x2028
should be such that they can be successfully processed by either an XML
1.0 or an XML 1.1 processor without being normalized to a line-feed
character, even if the value of the version parameter is 1.0. Following
are the changes required to implement that change:
Replace the paragraph after the bulleted list in Section 4 with the
following:

A consequence of this rule is that certain whitespace characters must be
output as character references, to ensure that they survive the round
trip through serialization and parsing. Specifically, CR, NEL and LINE
SEPARATOR characters in text nodes must be output respectively as &amp;#xD;,
&amp;#x85;, and &amp;#x2028;, or their equivalents; while CR, NL, TAB, NEL and
LINE SEPARATOR characters in attribute nodes must be output respectively
as &amp;#xD;, &amp;#xA;, &amp;#x9;, &amp;#x85;, and &amp;#x2028;, or their equivalents
And replace the note following the bulleted list with the following note:

Note: XML 1.0 did not permit processors to normalize NEL or LINE
SEPARATOR characters to a LINE FEED character. However, if a document
entity that specifies version 1.1 invokes an external general parsed
entity with no TextDecl or a TextDecl that specifies a version of 1.0,
the external parsed entity is processed according to the rules of XML
1.1. For this reason, NEL and LINE SEPARATOR characters in text and
attribute nodes must always be escaped using character references or
CDATA sections, regardless of the value of the version parameter.
May I ask the working group to confirm that this response is
acceptable to it?
Thanks,
Henry [On behalf of the XSL and XML Query Working Groups]
[1]
Henry Zongaro Xalan development
IBM SWS Toronto Lab T/L 969-6044; Phone +1 905 413-6044
Hi, Martin.
In [1], you submitted the following comment on the Last Call Working
Draft of XSLT 2.0 and XQuery 1.0 Serialization on behalf of the I18N
working group:
Martin Duerst wrote on 2004-02-15 12:37:30 PM:
[19] 6.4 HTML Output Method: Writing Character Data: "When outputting
a sequence of whitespace characters in the data model, within an
element where whitespace is treated normally, (but not in elements
such as pre and textarea) the html output method may represent it
using any character sequence that will be treated as whitespace
by an HTML user agent.": @@@ We need to check whether this (which
allows replacement of whitespace including linebreaks by whitespace
not including linebreaks and vice-versa) is okay for Chinese,
Japanese, Thai,... (languages without spaces between words).
This has to be checked extremely carefully.
In [2], Fran?ois Yergeau added the following information, in response to a
note from Michael Kay on the topic:
I think it's better if we don't try to define the detailed rules here,
but just state the constraint: you can replace one whitespace sequence
by another if user agents treat them as equivalent.
The current text does not say that, it says that one sequence of white
can be replaced by another if HTML user agents consider the latter as
whitespace (presumably in the XML sense). But HTML user agents need to
distinguish line breaks from other whitespace, for the reasons hinted to
by Martin. See list item 9 in
for the gory details.
Thanks to you and the I18N working group for this comment.
The XSL and XML Query Working Groups discussed the comment. The
working groups were unable to find any statement in HTML 4.01 that
different whitespace characters can be treated differently, ignoring such
elements as pre and textarea. The reference that Fran?ois provided was
from the XHTML Modularization Recommendation, although the original
comment was on the html output method.
In discussing the comment, some members of the WGs thought that XHTML
Modularization probably better reflected the requirements placed on HTML
user agents in order to support languages such as those you mentioned. The
WGs decided to add a normative requirement in the description of the html
output method stating that whitespace characters can be replaced only with
any other sequence of whitespace characters that has the same effect in a
user agent. The WGs also decided to add a non-normative reference
pointing to bullet 9 of section 3.5 of XHTML Modularization, to provide
further information on the issues involved.
May I ask you to confirm that this response is acceptable to the I18N
Working Group?
Thanks,
Henry [On behalf of the XSL and XML Query Working Groups]
[1]
[2]
Henry Zongaro Xalan development
IBM SWS Toronto Lab T/L 969-6044; Phone +1 905 413-6044
