Guess I can't lurk forever...
While it may be inelegant to simply double the number of ports for
security, it probably won't actually cause any serious insurmountable
problems in the future. An application-level protocol or scheme
for negotiation up to SSL/TLS will forever cause compatibility and
interoperability problems.
Saying "it's easy" to come up with a universal scheme to allow this
kind of negotiation is naive. In reality, it's probably impossible.
As applications warrant it, we should either decide to assign a
separate port for secure communications, or come up with a single-port
scheme if the original protocol makes it possible.
I'd like to suggest that telnet be an application that should have a
separate port.
Bill O'Donnell billo@netcentric.com billo@server.net me@billo.com
NetCentric Corp 17 Msgr O'Brien Hwy Cambridge, MA 02142
TLS is little more than an encrypted tunnel. It does not address
other protocols such as UDP; authentication of the client is
optional; authorization is not addressed; and the primary
purpose for which SSL was developed -- secure web page access --
is subject to spoofing attacks [1] (consequently, so are the
other services such as telnet). Though vendors are
pontificating its virtues and proliferation (to their
profit), TLS only addresses a small class of the security
problems.
TLS requires a CA, unless one of the proposed shared key
mechanisms are adopted. There is not a global CA
infrastructure, more or less a US infrastructure. Worse, in
the US there is the real possibility of escrow. Associated with
most CAs is a financial transaction. Though traditional use of
security (in particular, cryptography) has often been
labeled as "not for free", requiring investment in a CA or
purchase of a CERT gives the term new meaning.
Though I see great value in TLS and consider it a good protocol,
there are issues and I urge caution.
There are mechanisms to perform the secure negotiation of
capabilities even in the face of escrow: the originator signs
his capability list along with other information (such as a
replay token). Though I do not know the laws of all the world's
jurisdictions, to my knowledge the use of strong crypto for
authentication is universally permitted.
-dpg
[1] "Web Spoofing: An Internet Con Game", Edward W. Felten,
Dirk Balfanz, Drew Dean, and Dan S Wallach. Department of
Computer Science, Princeton University.
Such as?
Would you mind sharing what you have in mind as an insurmountable show stopper?
Christian Kuhtz chk@gnu.ai.mit.edu
".com is a mistake."
X-POP3-Rcpt: billo@home
Content-Type: text/plain
Mime-Version: 1.0 (NeXT Mail 3.3 v118.2)
X-Nextstep-Mailer: Mail 3.3 (Enhance 2.0b5)
Sender: Christian Kuhtz chk@continuum.epoch.org
From: Christian Kuhtz chk@gnu.ai.mit.edu
Date: Thu, 6 Feb 97 14:04:37 -0700
References: 199702061732.MAA03355@coyote.server.net
Such as?
- broken clients that predate the negotiation protocol that manage to
accidentally trip the negotiation sequence, but obviously can't
complete it.
- servers that predate the negotiation protocol that react badly
to clients trying to get a secure connection.
Would you mind sharing what you have in mind as an insurmountable
show stopper?
- Some protocols may because of their very nature may leave no
room for escape mechanisms to substitute a different sub-application
layer protocol.
- If it was really easy, some really smart person out there might
have been able to at least describe it by now. It's usually safer to
think of software problems as hard until demonstrated to be easy, not the
other way around.
Bill O'Donnell billo@netcentric.com billo@server.net me@billo.com
NetCentric Corp 17 Msgr O'Brien Hwy Cambridge, MA 02142
Hiya
Most protocols have a clearly defined server response to unknown client
requests (much like the HTML "if you don't know it ignore it" rule). IOW,
if a news server gets a strange command from a client, the protocol says
it must return with something like "500 Que?".
"nntps" just means "establish a secure news connection. fail if you
cannot". Whether that secure connection goes to the same or a different
port is immaterial. Saying that the same port is more subject to DOS
attacks is silly: you wouldn;t expect Navigator to connect to port 80 if
port 443 failed, would you?
I think all:
- command oriented
- interactive
protocols (NNTP, SMTP, POP3, IMAP4 etc) can be upgraded to support TLS
negotiation just by the addition of a single client command. Making the
server be able to initiate secure session negotiation is harder because
most of these protocols are client-driven. But I'll comment further on
Monday.
Mark Shuttleworth
Thawte Consulting
Begging your pardon, but Thawte's strategy is entirely global. Also,
because we are based outside the US, the only way we would consider
escrow is if the US government explicitly banned the use of non-escrow
keys within the US - an unlikely proposition.
As soon as it's possible to conduct quality checks free, there will be
quality free certs. Certification should not be an expensive thing at
all. We don't think so.
Also, I think we'll see "micro-certification" become important. By this
I mean the certification of small, easy to prove but also valuable
relationships, like "this key is managed by the person at the end of this
email address". Xcert, Thawte, Verisign, etc. all have projects that
explicitly or implicitly suggest this trend.
Mark Shuttleworth
Thawte Consulting
If Thawte can establish a global presence, comply with
international and domestic law, assure the authenticity of
every source (implying possible legal liabilities), assure
the redundancy, reachability, and integrity of each of their
CAs (implying liabilities again), and interoperate with
existing CAs (such as AT&amp;T), then they will offer a great
service. However, if they cannot then the service is of
marginal value and no different than the patchwork of CAs
operating today.
I haven't read anything on the subject in a while but in the US
there was a proposal to have the US Postal Service offer CA
services and issue CERTs based on the presentation of US
accepted identification.
I do not recall if the proposal included a fee for CERT issuance.
I also am suspect on the "US accepted identification" part. If I
remember correctly the identification was a valid US driver
license. Ha!
The issuance of a CERT must be based on strong verification of
who it is issued against. Without strong verification the
authenticity of any CERT is suspect. Verification offers
interesting challenges not only in the US but around the globe.
-dpg
