Mary,
I'm trying to (a) review some of the XML Query stuff,
and (b) research the state-of-the-art in representing
formal knowledge in the web.
e.g. I see you writing these rules ala:
G |- Exp : t
G |- @Name[Exp]: @Name[t]
from
How did you produce that document? I suspect it's converted
from latex; can I look at the source? Is there some
popular latex package used for inference rules?
I'm having trouble parsing it; i.e. figuring out the
implicit operators and precedence in the notation.
(I haven't read the spec very carefully... I wouldn't
be surprised if there's enough information in there,
if I were to read it carfully.)
I was hoping that these rules were really written formally;
i.e. in such a way that I could do certain checks on them
by machine. For example, in translating Wadler's formalization
of XPath to larch a while ago, I found a bug in his paper.
But some of the query rules seem to have "..." and
other informal notation in them; e.g.
We write |- Query1 ... Queryn if the sequence of query items Query1 ...
Queryn is well typed.
G |- environment (Query1),..., environment
(Queryn)
G |- Query1 ... G |-
Queryn
Query1... Queryn
Matt Fuchs and I were chatting in the hall at XML 2000, and
the idea of using MathML to produce these specs came up.
I was intrigued by the idea, and I've been noodling on
it ever since.
Recently, I found some folks using MathML to work with
proof checking systems; I am digging around their source
code, but I haven't figured out exactly how they represent
inference rules, axioms, theorems and such.
HELM http://www.cs.unibo.it/~asperti/HELM/home.html
Amaya supports presentation MathML... I wonder if it's
got enough stuff to edit specs like the query algebra
spec.
Oops... gotta go to a teleconference... sorry if this doesn't
make any sense...
p.s. spec-prod is a public mailing list; see
Dan Connolly, W3C http://www.w3.org/People/Connolly/
Hallo.
The underlying Proof Engine (at present) is the COQ
Proof assistant of INRIA-Rocquencourt. But we expect
that our methodology should scale to any other
Logical Environment or Computer Algebra System,
or whatever inference system you have in mind.
"COQ on line" is currently broken, but it should
be "on" again in a few days.
If you just need a MathML editor, our widget works
much better than Amaya, Mozilla, WebEQ and company.
I hope HELM will be mentioned in your report
on the state-of-the-art in representing
formal knowledge in the web.
Please, use the following url:
By the way, Dan, we should eventually move MathML
inside the Semantic Web area, or at least open
a new WG in that direction. MathML has been the
first WWW project putting emphasis on "semantics."
-- andrea
Hi Andrea,
How pleasing to encounter someone I know from the world of semantics
now in the world of XML! The HELM work looks very interesting. Please
take a look at MSL, and let me know what you think about how easy or
hard it would be to formalize in HELM/COQ.
Currently we are trying to maintain the MSL document in HTML, and that
is a big mess. Appropriate MathML tools would be a big step up. And
the chance to directly verify properties of the formalism from the
same data that is published would be a huge step up. (Babbage designed
the analytic engine so that it would typeset log and trig tables
directly, to avoid the possibility of transcription error.)
Cheers, -- P
Hi Phil,
I did not realize it was ... you :-)
I have been thrown in the discussion by Dan in a somewhat
abrupt way, and I must confess I am a bit puzzled.
Also, the url you gave me contains too many pointers...
What do you wish to formalize exactly?
Thanks for the clarification.
-- andrea
P.S. I send the mail in CC to my "equipe". Once we
have understood the problem, we should be able to give
you an answer in a few days.
I would be interested in formalizing both MSL and the query algebra.
MSL:
Query algebra:
Cheers, -- P
Yes... exactly... me too; I see the latter is available as PDF;
I'd like to know how you produce it. I suspect you use latex
and some idioms/macros for grammars and inference rules
(and a few other notational idioms). If you'll point
me to some documentation of those tex/latex idioms
[I've been searching/surfing/googling without much luck]
and maybe let me look at the tex source of that algebra
paper, I'll try to design some XHTML/MathML dialect
that
* can be machine-translated (using XSLT or something)
to larch/coq/boomborg-pc for proof-checking
* can be machine-translated to TeX for all the things
that TeX is good for (printing, submitting to
journals, etc.)
* can be edited in direct-manipulation fashion with Amaya
and/or Andrea's MathML editing tool and/or
other XML editing tools.
oh... and of course, the semantic-web angle:
* has its terms grounded in URI-space
Dan Connolly, W3C http://www.w3.org/People/Connolly/
Dan writes,
This is a great idea, but I'm not sure things have reached
a stable point where we know what should be in the dialect.
For your interest, I include the sources of the MSL paper,
so you can have some idea what things look like.
Cheers, -- P
Claudio,
Thank you for your detailed discussion. There are several properties
it would be desirable to have for a formal representation of typing
rules.
(0) To be able to typeset the rules from their representation.
You discuss how this is possible.
(1) To be able to create a type inference tree, and check that
it corresponds to the rules.
(2) To be able to prove formal properties of the type system,
such as that each term has a most general type.
(3) To prove that a given type inference algorithm is correct.
(4) To be able to automatically derive a correct type inference algorithm.
We also want to be able to write a dynamic semantics, for which
similar questions arise.
(0') To be able to typeset the rules from their representation.
You discuss how this is possible.
(1') To be able to create an exectution tree, and check that
it corresponds to the rules.
(2') To be able to prove formal properties of the dynamic semantics,
such as that evaluation is deterministic.
(3') To be able to implement an evaluator for the language, and show
that it corresponds to the dynamic semantics.
(4') To be able to automatically derive a correct evaluator.
Which of these do you think should be possible with HELM? Cheers, -- P
Wow!! This is great! Thank you for taking the trouble to
produce this example. Examples are an extraordinarily effective
means of communication. From your example I can clearly see
that Coq+HELM might indeed make it possible to use formal tools
to produce parts of the MSL and XML Algebra specifications,
which would be an enormous step forward.
I'd like to ask you to push the example further, in a few
directions.
Can you show how HELM can be used to produce XML/HTML
versions of the inference rules and the proofs from your
example?
Can you show how Coq handles variable binding and
substitution? The obvious way to do this would be to
extend your example to lambda calculus. Better yet would
be simply typed lambda calculus, since this would
correspond closely to many of the issues faced in
formalizing MSL and the XML Query Algebra.
Finally, an example of a proof based on the formlasim
(such as your immpl_ok theorem) would be helpful.
And, last but not least, if we decide to use Coq and HELM,
what help or support will be available from your group?
Many thanks again, -- P
Dear Philip,
inside the library
in the Rocq contrib you may find a full development
of lambda-calculus in coq.
Please note that this is not supported by specific
notational stylesheets, at present, so html rendering
is not quite satisfactory, but it can give you an
idea of the expressive power of coq.
Concerning our possible contribution, it looks like
a lot of work with no clear "income" from our side.
Our tool is under development, and we have other
priorities, at present.
Of course we may offer consulence, if required.
HOWEVER, things would be different in case we
could start a specific W3C-WG on these topics
(and I would be glad to be among the promoters of this
initiative). Please think of it!
Best wishes.
-- andrea
Dears,
the formalization problem you mention seem to have a
quite general nature.
The former MathMl WG is currently formalizing the new charter
proposal. If you have any interesting idea or suggestion to
approach MathML to your activities, I would strongly suggest
you to contact the main responsibles of MathML.
(I send a copy in CC to Patrick Ion).
Best wishes.
-- andrea
