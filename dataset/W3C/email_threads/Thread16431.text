Howdy,
I was wondering if anyone could tell me whether drop down menus, of the
type that are activated by a javascript or applet rollover, present
accessibility problems for text-to-speech browsers.
An example (an applet version) of what I'm concerned about can be found
at: http://www.buseco.monash.edu.au/oldTechServ/
Cheers,
Dey
Dey Alexander
Web Designer, Information Technology Facilities
Information Technology Services, Monash University - Clayton
dey.alexander@its.monash.edu.au http://deyalexander.com/
There is no javascript on that page (as viewed with Lynx).
Javascript cannot be an applet.
The common idiom for creating popups causes accessibility problems, but
can be fixed by designing properly, i.e. write the page to work without
scripting then add the scripting whilst keeping the old function.
Specifically, never use javascript: URLs, except where client side
scripting is of the essence of the page. Instead, use a normal link and
override it with an onclick attribute. Make sure the onclick returns
false to prevent the href also working on an JS enabled browser.
Note the page is cache unfriendly (no last-modified-date) and uses a
non-standard HTTP header (without an x- prefix) (window-target).
Dear Dey,
From the WCAG:
6.3 Ensure that pages are usable when scripts, applets, or other
programmatic objects are turned off or not supported. If this is not
possible, provide equivalent information on an alternative accessible page.
[Priority 1]
The current problem with your page is that the high level links (Online
Help, Services, Faculty Standards, FAQ) contain sub-items that are available
only from the JavaScript pull-down menus. For example, selecting "Online
Help" brings up a page
http://www.buseco.monash.edu.au/oldTechServ/onlinehelp.html with seven
primary links, while the drop down contains ten items.
Dave's advise is right on the money:
(1) Get the site working, especially the navigation functionality, without
JavaScript.
(2) After the design is complete, add JavaScript as desired to provide
short cuts from the home page.
From: w3c-wai-ig-request@w3.org [mailto:w3c-wai-ig-request@w3.org] On
Behalf Of David Woolley
Sent: Thursday, December 14, 2000 6:37 PM
Subject: Re: javascript menus and accessibility
Another problem that seems to arise more often with javascripty sites is the
lack of attention to meaningful URLs. This might be due to the
extra-noticable lack of attention paid to non-visual mechanisms when coding
pop-up menus.
Yes, it's a problem with straight HREFs, too, but my friend has told me
that, for example, http://www.audible.com presents a nightmare for a screen
reader (and he's pretty good with it, too).
That site has numerous other problems besides (ironic for a site that might
leverage an audience of visually-impaired persons) including NO
functionality without javascript, but the meaningless URLs that get read off
by (at least) JAWS is what I wanted to point out.
David Holstius
holstius@msu.edu
Some problems:
If the scripts/applets are required in order to get to the menus, then some
users won't ever see them - there are a number of text-to-speech browsers
without javascript support. And there are a number of people who can more or
les only navigate using the keyboard, so using mouse events is a big
problem...
It is not always clear that a dropdown has appeared/disappeared.
There is a known problem with the use of onChange selectors for menus in
Javascript, when a user is navigating via the keyboard. What happens is that
they select the menu, and move from the first entry to the second. That fires
the selector. So in allist of countries, it is the first one that is always
selected, since it is impossible to get past that.
CHeers
Charles McCN
Howdy,
I was wondering if anyone could tell me whether drop down menus, of the
type that are activated by a javascript or applet rollover, present
accessibility problems for text-to-speech browsers.
An example (an applet version) of what I'm concerned about can be found
at: http://www.buseco.monash.edu.au/oldTechServ/
Cheers,
Dey
W3C Web Accessibility Initiative http://www.w3.org/WAI
Location: I-cubed, 110 Victoria Street, Carlton VIC 3053, Australia
September - November 2000:
W3C INRIA, 2004 Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France
