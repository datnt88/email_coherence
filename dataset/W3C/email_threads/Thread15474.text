I thought this had gone out last night, but evidently not so.
We are at pretty much of an impasse in the TABLES area. I think
that the AXIS, AXES proposal fails to meet minimum standards of
functionality. Dave doesn't see the problem.
Note: I am assuming that SCOPE is added to HTML as per Dave's
sketch.
If this area of TABLE markup cannot be amended so as to make it
functional, it should be removed so it does not obstruct the
introduction of a better-researched proposal from the WAI FP
activity at a later date.
The sketch below outlines some incremental enhancements to LINK
and META that would provide a rich capability for
meta-information experimentation without violating the DTD for
HTML4.
The information patterns that prove successful in experimetal
evaluation could then be migrated into HTML attributes.
-- Al Gilman
Extensions and Experimentation
Proposal for inclusion in HTML4
Attributes
TGTCLASS
* takes a list of element type names and other CDATA strings
comparable with list values in CLASS= attributes.
* filters application of LINK and META values and relationships.
Attributes on Elements
ADD:
+ TGTCLASS to LINK and META
+ TARGET to META
Content models
ADD:
+ LINK and META may appear anywhere (in any container in HEAD
or BODY).
Semantics
If a LINK or META element contains a TARGET then the relationship
or attribute defined in the LINK or META element applies only
within the scope of the TARGET element.
If a LINK or META element appears within the HEAD element and it
does not contain an explicit TARGET indication, then the target
scope is the HTML element (document) in which the HEAD is found.
If a LINK or META element appears outside the HEAD element and it
does not contain an explicit TARGET indication, then the target
scope is the non-void element immediately enclosing the LINK or
META element. The immediately enclosing element shall be
determined to be the non-void HTML element whose start tag most
immediately precedes the LINK or META tag in the textual order of
the HTML text.
Furthermore, if the LINK or META contains a TGTCLASS attribute,
then the relationship or attribute defined by the current LINK or
META element applies only within elements in the TARGET scope
which have at least one match between the set of identifiers in
the value of the TGTCLASS attribute and the set of identifiers
coprising the element type name of the candidate element together
with the set of strings which are list elements in the value of a
CLASS attribute present in the candidate element. This matching
shall accept element type names without regard for case and CLASS
values in a case-sensitive fashion.
If accepted, could replace
Assuming that TH.scope is implemented substantially as
outlined by Dave Raggett, the following attributes could be
removed and experiments conducted with this capability:
Replaced by uses of META
o AXIS -- of current draft
o ABBR -- of current draft
o THROUGHOUT -- of alternative strawman
Replaced by uses of LINK
o AXES -- of current draft
o TYPE on TH and TD -- of alternative strawman
o CONDS on TH and TD -- of alternative strawman
Application to known WAI needs
Associate table with a data dictionary or schema.
Associate a dictionary with a quote or code block.
Associate a dictionary with a particular use
e.g.
Appication to suspected WAI needs
Override header associations for exceptional cells in a
table.
Mix metadata from multiple disciplines.
I do not see the problem either. All of the sample tables which have been
considered so far can be made accessible by the inclusion of AXIS and AXES
attributes. In particular, the relationship between any given data cell
and an associated row or column header, whether the latter be contained in
a TH or TD element, can be expressed using the AXES attribute.
I agree that the proposed SCOPE attribute is beneficial in as much as it
reduces the amount of markup required in order to specify header
relationships, thereby relieving the author of the need to specify AXES
attributes repeatedly throughout the body of the table.
Furthermore, the flexibility to associate a table with an external
resource, such as a dictionary or extended description, is also desirable.
None of the discussion so far has convinced me that AXIS and AXES,
together with SCOPE, the capacity to link a table to external resources
and the availability of a reserved class value to specify column
dominance, would not meet accessibility requirements. Additional
enhancements, such as CSS macros of the kind that I have proposed for
controlling the reading order of a table, add further value to the HTML
features already discussed, but are not essential to accessibility.
I have finally had the time to review parts of your mail archive so
as to better understand the rationale behind your proposals. I also
have read the 22-October version of the "Report" document
(http://www.w3.org/WAI/group/HC/guide.html) and its associated linked
documents. I think I still only have part of the picture, but I hope
this answer will help fill in more of the details.
RDF will do two things that are of particular use here. The first will
accomplish what the proposed TARGET attribute on LINK/META is intended
to do and the second will address a need that will become apparent as
the accessibility work continues, namely how to manage the LINK REL
namespace and the META NAME namespace.
An RDF 'assertions' element includes an HREF to specify the target
resource to which the metadata applies. The value can be a URL
fragment, thereby assuming the proposed role of LINK TARGET. At
present there is no shorthand syntax for indicating that the
target is the immediately enclosing element, nor is there currently
anything directly corresponding to the proposed TGTCLASS.
The TARGET/HREF idea relies on the use of ID to label the element
being described. In the future, XLL (XML-link) should allow RDF
statements to be scoped even to portions of a read-only document
that were not given IDs by the document author. The RDF annotations
in this case would be carried in a separate document.
The second important aspect of RDF in this context will allow
the WAI metadata specification to evolve independently of the
schedule for other specifications. RDF allows you to declare,
for example, a "WAI metadata property namespace" wherein you
might start with a set of properties that associate data
dictionaries and pronunciation dictionaries and then later add
language variants of pronunciation dictionaries, abbreviation
dictionaries, and alternate descriptions without fear of
colliding with property names being used elsewhere.
to follow up on what Ralph R. Swick said:
Thank you very much for giving this priority attention. You have
reduced my ignorance a lot.
Yes, we realize we have those dictionaries to manage, and we are very
interested in developing RDF-based solutions for those dictionaries.
Both the default TARGET for inline LINK and META elements, and the
TGTCLASS attribute are, so far as I can tell, conveniences. They
improve the usability of the language feature but do not change
the envelope of feasible link/attribute graphs. In other words,
I don't see this particular difference as a make/break difference.
There are two principal sub-questions to the root question "Does
the imminent availability of RDF mean we don't need this
capability in HTML?"
a) What is the respective timeframe in which we could expect to
have working tool implementations based on putting these
extension in HTML, vs. when we could expect tools which
implement RDF?
b) Does the HTML user need/have the capability to use a
data dictionary which understands the CLASS and REL names
we are using, even though it is not RDF and does not
particularly understand HTML and it is not implemented
in XML or RDF? This is a likely case where the external
data dictionary understands well the information types in the
cells and semantic relationships among them, but not so well
the HTML syntax in which this specific report has been written.
There are lots of candidate schema-publishing frameworks coming
forth on the Internet. It might be better for the disability
interest if HTML were not bound by an exclusive commitment to use
RDF for data dictionaries.
On the other hand, if the commercial software houses interested
in RDF were to commit to work accessibility scenarios defined by
the WAI IPO among their early RDF feasibility demonstrations, that
could be a very good deal for the WAI.
The independence of schedule we need is accomplished by the fact
that the dictionary of CLASS and REL values is defined outside
the HTML spec. This applies whether we then develop the
dictionaries in RDF or otherwise. We have the dictionary
development schedule decoupling from HTML so we can proceed with
our work in either case.
I'm afraid that I think a "guaranteed separate" attribute
namespace is just what we least need. The trick to making the
Web universal is getting the accesibility needs for information
reflected in schemas that everybody is using for their own
purposes without regard for disability access. We need to be
sharing in the publishing of useful information models which are
recombinant and people use them together. What we need from RDF
is the medium of exchange for a class reconciliation process by
which the peculiar terminology is broken down and common
semantics extracted.
The projected capability is the right kind of stuff.
So the key question outstanding is timeframe. It's not always
wise to build prototype applications out of prototype resources.
Bite off one risk at a time.
-- Al Gilman
A related question is whether RDF can express the internal relations
within an HTML document so as to overcome the reading order issues
associated with fragmentation of the linear progression of the text (for
example, the abuse of table markup to indicate visual layout).
Clearly, there is substantial support within the interest group for this
capability, and it needs to be taken into account.
I am still of the opinion that the abuse of tables will disappear as style
sheets take hold, and their advantages in visual media are recognised.
HTML 4.0 is an important step in that direction, along with CSS 2, of
course. I would be willing to provide no support in the HTML for
alleviating the effects of present bad practices (the use of tables to
indicate visual formatting) in the expectation that those practices will
gradually cease over the next few years. This is one case in which short
term gain can perhaps be sacrificed for the benefit of a consistent design
in which presentation and markup are properly distinguished.
I think it will be our role as leader of the WAI Protocols&amp;Formats
group to make sure this happens (we can for instance volunteer as beta
tester of some RDF implementation and use it to convey the scenarii
that interest us most).
