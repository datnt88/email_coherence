I prefer:
"HTML and CSS Accessible Design Guidelines"
"HTML and CSS Guidelines for Accessible Design"
"HTML and CSS Universal Design Guidelines"
"HTML and CSS Accessible Authoring Guidelines" (weak)
You get my drift.
The question has come up occasionally as to whether the PA guidelines should
be called Page Author Guidelines or whether they should have a broader
title -
Web Author Guidelines
Site Author Guidelines
Something Else
The idea is that newer technologies and serving technologies are making
"page" an increasingly ambiguous concept.. and we need to apply the
guidelines beyond just page technologies. Since we are close to sealing
the guidelines up this would be the last and best time to change the name if
we were going to. But we need to decide soon.
Some thoughts to get you thinking
- the guidelines seem to focus in at the page
level. Although it could be argued that "all images should have
alternative text" should be applied site-wide but that each instance is
handled on its own page. We might need to reword some things...
- It sheds new light on "transform gracefully." The definition would
change
to be more site-based, "To transform gracefully means that a site remains
usable despite user, technological, or situational constraints...Creating
sites that transform gracefully is not more costly, but requires a
different design approach that also makes individual pages compatible with
emerging mobile technologies...."
- I think we can assume that the major design activities are not individual
pages, but site-based. Therefore, taking that approach in the guidelines
would be in-synch with the audience. However, would it deter people who
are creating single-page sites (personal home pages)? How about people who
just have a part of a site...or a page on a site. Or, is that their "site."
- It seems that we can abstract out to the site level in the introductions
for each section (A, B, C), each guideline is page level, while techniques
are site-level. Yes?
Your thoughts?
Gregg and Wendy
Gregg C Vanderheiden Ph.D.
Professor - Human Factors
Dept of Ind. Engr. - U of Wis.
Director - Trace R &amp; D Center
Gv@trace.wisc.edu, http://trace.wisc.edu/
For a list of our listserves send "lists" to listproc@trace.wisc.edu
Okay, that's good points. How about going shorter (verses my other efforts)
and calling them:
"Web Accessibility Guidelines"
I'm not sure what benefit the word "Content" brings.
Coordination Group (E-mail)
Although it's mostly about HTML&amp;CSS today, we will update it to
include more SMIL, XML, XSL, MathML, SVG, etc. in the future, so the
question is do we want to have to change a name that we are going to
promote as some kind of brand name in the upcoming year.
I agree Page is a vague term and I'll also add Author is ambiguous, as
it refers to different roles: the designer, the user of a wysiwyg
tool, the html-by-hand author, and maybe other.
These guidelines are really about what *is* in the Web pages, so I
propose:
Web Content Accessible Guidelines.
I prefer titles that omit "HTML" and "CSS". I think that:
- "web site" is friendlier
- "web site" is less technical sounding. We don't want to scare away
people who can understand the guidelines even if they can't work the
techniques
- As more protocols get added a title with HTML and CSS in it will become
really long. E.g.
HTML, CSS, XML, XSL ... accessible design guidelines.
Leonard R. Kasday
Institute on Disabilities/UAP at Temple University, Philadelphia PA
The word "Document" implies a document. So are the guidelines limited to
just documents or do they include HTML applications? At the present, there
isn't much attention applied to HTML applications, so maybe the term makes
sense for this release.
Coordination Group (E-mail)
We are using the term document in the UA guidelines. So maybe something
like.
WWW Document Universal Design Guidelines
The guidelines maybe should be called "Universal" since they also promote
the exclusive use of W3C standards and authoring practices that related to
the orginal intended purpose of elements.
Jon
Jon Gunderson, Ph.D., ATP
Coordinator of Assistive Communication and Information Technology
Division of Rehabilitation - Education Services
University of Illinois at Urbana/Champaign
1207 S. Oak Street
Champaign, IL 61820
Voice: 217-244-5870
E-mail: jongund@uiuc.edu
WWW:http://www.staff.uiuc.edu/~jongund
I don't understand what you mean by an application, other than a User
Agent or an Authoring tool / generating tool.
As I understand it at the moment the AU guidelines specify (among other
things) that the product of any tool which automagically generates (or
assists in the generation of) HTML should be producing code according to
the GL group's guidelines.
(Or am I just particularly dumb this week?)
Charles McCathieNevile

I don't understand what you mean by an application, other than a User
Agent or an Authoring tool / generating tool.
Applications written using HTML.
good place to see what I mean. It contains a discussion of how to implement
drop down menus in Dynamic HTML using JavaScript.
Oh yeah. I remember. Actually I would say that these are still HTML
documents - they are nased on HTML, and have a whole lot of extensions
used. The question is then whether there is an accessible way of doing
what they do. But perhaps I digress.
These are a concern. Like accessible Java it appears that it could take a
long time before they are readily available in an accessible format that
can be used by everyone (since they will rely on a whole suite of things)
Unfortunately they are not really things for which there is an
alternative method - the best that can be done is very much poorer. A
recent example occurred in Victoria. University admission for
undergraduates throughout the state is handled by a centralised
organisation. Their online enrolment system was based on a Java Applet.
Which I couldn't get to run on any system I had at work, including
downloading Netscape 4.5 (as the site Recommended) and installing it
fresh. (Maybe the Mac version is different...)
It may have been possible in this case to use a CGI technology instead -
might not have looked so lovely, but there's nothing very impressive
about my tax dollars funding a big grey square and an Applet Can't Start
message anyway. But there are cases I can imagine where it is not
possible, and more where it is going to be a hard sell. I don't think
that leading edge technology is going to very often be designed with
accessibility in mind, including websites, which is unfortunate.
This is one of the reasons I have been keen to raise the issue of getting
the event model in HTML corrected as well as trying to kluge something
together which will cover most situations.
Charles McCathieNevile
This was written in response to Charles McCathie-Nevile's latest
contribution on this topic, with the subject line appropriately renamed.
For the most part, I think the latest draft handles the issue of scripts
quite well: it recommends that they be made directly usable, where
possible, but the basic point is that alternative versions of the document
that do not depend on scripts, and offer the same functionality, must be
provided.
As Charles has intimated, the best solution is to use server-side scripts
to produce interactive content, as a substitute for, or an alternative
supplied in parallel with, Javascript and other client-side scripts and
applets. This technique does not appear to be expressly stated in the
guidelines, however. An accessible site must be capable of serving only
HTML plus style sheets, to a client that does not support scripts, image
files, audio files, etc., with all information conveyed in well marked up
HTML, but with those other (multimedia) services provided for those who
can take advantage of them. This appears to be the essence of what the
guidelines are requiring in many of their specific recommendations.
Server-side scripts and data bases which generate content dynamically are
of the utmost benefit in achieving the desired goals; and they need to be
mentioned in appropriate parts of the guidelines, as valuable techniques,
with further elaboration in the "techniques document".
Moreover, sites in which the content is largely generated by the server
from data bases, or which use templates to achieve internal consistency,
are easier to maintain (and this is also a significant advantage of style
sheets).
Actually it is my hope that this does not appear to be the essence, but
that this is clearly and explicitly identified as being the essence.
Charles McCathieNevile
