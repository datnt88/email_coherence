The holy grail in testing tools seems to be an automatic test for flicker
that could be dangerous for someone with photosensitive epilepsy.
Does anyone know of a tool that tests for flicker?
Does anyone have ideas about how this would be done automatically?
Are any of the developers on this list interested in working on something?
This is related to WCAG 1.0 checkpoint 7.1 [1]
Information on photosensitive epilepsy. [2]
--wendy
[1] http://www.w3.org/TR/WCAG10/#tech-avoid-flicker
[2] http://www.epilepsy.org.uk/info/photofrm.html
wendy a chisholm
world wide web consortium
web accessibility initiative
seattle, wa usa
mmmph ... could ask on sci.image.processing, but it sounds unlikely.
Valet can be set to warn about it for every object that might cause
a problem (OTTOMH img/object/applet), but doesn't actually test the
content.
IMO that belongs more in UAAG: a person with epilepsy would be well-
advised to use a browser that doesn't expose him/her to the risk,
regardless of webcontent.
I'd want a qualified quack on the team, rather than relying on a
website (however respectable) for such a critical development.
Nick Kew
Available for contract work - Programming, Unix, Networking, Markup, etc.
"Nick Kew" nick@webthing.com
flicker
Screen capture using mjpeg or similar of rendered page in browser, then
analyse frames for differences - if there's no flicker frames should be
identical? That's my theory - can I implement it - NO.... :-)
Jim.
Well said. It's a browser/display issue, not a content issue. The web
site [2] says the problem goes away at 100mhz, so with the right display,
and the animations turned off by the browser - is the problem solved or
not?
Again we need an expert here, not us wan-a-bees.
BTW, is this now a WCAG issue?
Regards,
Phill
IBM Research Division - Accessibility Center
I've been in communication with Dr. Harding (one of the people who helped
write that article as well as a textbook [0] on the subject). I blind
cc'ed him on the message to see if he could help.
it's always been a WCAG issue. It's a WCAG 1.0 checkpoint [1] and thus was
incorporated into WCAG 2.0 [2]. I sent the question to this list since
WCAG is trying to figure out methods to test to add to our success criteria.
--wendy
[0] Harding, G. F. A. &amp; Jeavons, P. M. Photosensitive Epilepsy. MacKeith
Press, London, 1994 (available from Cambridge University Press).
[1] http://www.w3.org/TR/WCAG10/#tech-avoid-flicker
[2] http://www.w3.org/WAI/GL/WCAG20/#avoid-flicker
wendy a chisholm
world wide web consortium
web accessibility initiative
seattle, wa usa
was
criteria.
I meant that it is an issue to have this unnecessary checkpoint in WCAG.
My point, and I think Nick's, was that it should not be in WCAG, and we
should not be trying to find methods to test to add to the WCAG success
criteria because it is not a content responsibility. Flicker is handled by
the display's __mhz and the browser - so there is no requirement on the
author.
Please understand that photosensitive epilepsy is a real issue, but it
doesn't belong in WCAG.
Regards,
Phill Jenkins
IBM Research Division - Accessibility Center
We'll have to take that the WCAG WG.
In the meantime, I heard back from Professor Harding and there is a system
that checks for flicker. It's based on his research and produced by
Cambridge Research Systems. http://www.hardingfpa.co.uk/
Not sure how much it costs, how easy it is to use, or how well it works on
web content...but I'll contact CRS to find out.
--wendy
wendy a chisholm
world wide web consortium
web accessibility initiative
seattle, wa usa
Hmmm. I'm not sure I agree. If I understand correctly, photosensitive
epilepsy is triggered by specific frequencies of flicker that can be
generated by an animated GIF or a Flash file[0], or possibly even dynamic
content altered via a javascript. Achieveing a flicker rate of between 5
and 60 Hz (which is what the website suggest as the most dangerous range)
should be possible even accidentally. Making sure your content does not
contain any such seems emminently suitable for the WCAG, if perhaps a bit
obscure.
But I may be mistaken?
Whether it makes sense to attempt to _test_ for this is a different matter.
[0] - Based on the fact that certain video games and tv programmes that
for one reason or another (showing strobe lights, say) cause the
screen to flicker in certain patterns are claimed to induce
epileptic attacks.
"Python 2.0 beta 1 is now available from BeOpen PythonLabs. There is a long
list of new features since Python 1.6, released earlier today. We don't plan
on any new releases in the next 24 hours." - From Python 2.0b1 Announcement
But is that really helpful on the Web? It could only work if _every_
site is _guaranteed_ to conform; otherwise the epileptic is at risk
when visiting an unknown site.
Hence my comment that people affected by this should seek to use client
software that doesn't expose them to the risk.
Nick Kew
Available for contract work - Programming, Unix, Networking, Markup, etc.
Well...
I'm not usually qualified to hold an opinion on my own health, much less
anybody elses; but dude, I seen a guy after a Grand Mal attack and it sure
ain't pretty.
If theres a chance normal web pages could trigger it accidentally, and
having a checkpoint for it might reduce the risk, I'd say it made sense to
have one.
To expand on this a bit -- without claiming to understand the subject
anywhere near well enough to argue the point -- my understanding is that
flickering /might/ trigger an attack, depending on how tired the person is
and whether or not they are paying attention. The cited web page also
mentions holding a hand in front of one eye to lessen the probability. This
suggests to me that using a normal web browser and paying attention so you
can take precautions if there is flickering on the screen would be fine for
someone with photosensitive epilepsy.
Given the other things that might trigger such an attack (light refracted
off water, seen through tree leaves, etc.), a person with this form of
epilepsy would have to be carefull in any case (allthough you might
question of easy it is for 9-15 year olds to be so carefull all the time).
Getting authors to avoid the dangerous stuff would be intended to further
reduce the risk.
But all that is predicated on my very very limited understanding. I assume
some authority was consulted when the checkpoint was first put in. That
might be an adviseable course at this time as well.
-link, who also does brain surgery on the side.
Monkey brain transplants are half off this week! :-)
We've gotten to a point where a human-readable, human-editable text format
forstructured data has become a complex nightmare where somebody can safely
say "As many threads on xml-dev have shown, text-based processing of XML is
hazardous at best" and be perfectly valid in saying it. -- Tom Bradford
Hmmm. The conclusion I would draw is that people should use software that
protects them, and that this is important. However, it should be noted that
this is something that can be a problem, and there is value in avoiding
flicker if it isn't necessary (often, like red-green combinations, it isn't
that it was necessary, and in many cases authors are happy to try and change
something that affects people if it is easy enough to do).
As a web content requirement it should still stand I think, although it might
be a different priority level. (Back to the "until user agents..."
discussion)
Chaals
But is that really helpful on the Web? It could only work if _every_
site is _guaranteed_ to conform; otherwise the epileptic is at risk
when visiting an unknown site.
Hence my comment that people affected by this should seek to use client
software that doesn't expose them to the risk.
Location: 21 Mitchell street FOOTSCRAY Vic 3011, Australia
(or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France)
