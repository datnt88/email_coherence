Let's start with a simple case as much to find out what a use case is:
Suppose an application wishes to find the resources in a knowledge base for
people with the name "John Smith". The knowledge base is a collection of
vCards in RDF (see [1] for RDF version, see [2] for the definition) e.g. an
address book or an enterprise directory.
vCards have a property vcard:FN (FN is "Formatted Name" I think) so we want
those things with a value of "John Smith" for property vcard:FN.
(I used vCards in this example just because its one we use in the Jena
tutorials and find it easy to communicate to people.)
Andy
[1] http://www.w3.org/TR/2001/NOTE-vcard-rdf-20010222/
[2] ftp://ftp.isi.edu/in-notes/rfc2426.txt
Very good starting point. Formally may I suggest
we could use logic programming notation such
(X, FN:name, "John Smith")
The evaluation result would then be either bindings
for X or if closure is a requirement, we would return
all triples with X bound to a different value.
I would like to see closure implemented with the query
language in order to enable refined queries over
the result graph.
Let me post another email about inference.
Janne
Janne Saarela janne.saarela@profium.com
Profium, Lars Sonckin kaari 12, 02600 Espoo, Finland
Mob. +358 (0)40 508 4767 Internet: http://www.profium.com
This is a good start, but it's not clear to me how the customer/client
gets value yet.
If you take the system I work on, cwm, and ask it
?WHO vcard:FN "John Smith".
it'll dutifully bind ?WHO to _:bnode23o4u23 and report
[ vcard:FN "John Smith" ].
i.e. yes, there is somebody/something that has vcard:FN "John Smith".
Gee thanks. The user probably wants his contact info, if he's
using the vcard namespace.
Could you (or somebody...) flesh this example out a bit? Tell me
more about the user... are they trying to find John Smith's
email message to send them email? Or are they trying to bust
John Smith for some crime? Or invite him to a party?
Can you say something about why writing a program on top of
rdflib or XSLT doesn't suit this user's needs?
Dan Connolly, W3C http://www.w3.org/People/Connolly/
see you at the WWW2004 in NY 17-22 May?
Umm... why? Is that a notation we expect our audience to
use when making their feature requests?
Can you motivate this feature with a use case? i.e.
a plausible story from real life?
Dan Connolly, W3C http://www.w3.org/People/Connolly/
see you at the WWW2004 in NY 17-22 May?
I think logic programming serves at this point as a nice
abstract syntax for which we can find the concrete syntax
later. I don't expect feature request arise in this format
but I could imagine that within this WG we find this notation
easy to formalize the feature. Is this a good assumption?
== Task &amp; Roles
A client software wishes to connect to server software
to find out if it could find an object whose property
matches certain value.
== Value &amp; Why
If the query result is a graph, the client can cache
the query result and run another query over the query
result. This is far more efficient than repeating the
query over to the server again with more criteria set.
== Description
Looking for content which is written in French
(X, dc:language, "fr") and returning all known
properties for X should be a complete graph with
(X, P1, V1), (X, P2, V2), ... , (X, Pn, Vn) for
which another query can be run upon with e.g.
additional constraint (X, dc:creator, "John Smith") set.
Janne Saarela janne.saarela@profium.com
Profium, Lars Sonckin kaari 12, 02600 Espoo, Finland
Mob. +358 (0)40 508 4767 Internet: http://www.profium.com
It doesn't appeal to me, at this point.
I expect to formalize features in a design document,
not in a use cases and requirements document.
This is getting there, but it's still too abstract
for me... too many greek letters: "a client software",
"a server", "the query", "a graph", "known properties",
X, P1, P2, V1, V2, ...
The french language is a nice, concrete topic that
I'd expect our audience to be familiar with. dc:language
is a little geeky, but certainly something we can expect
our readers to learn with a couple paragraphs of explanation.
Could you please pick one particular scenario built out
of more concrete things like the french language,
the concept of "composer" and such?
This http://c2.com/cgi/wiki?TheFairyTale pattern seems
particularly relevant to our task...
"Structure the use case description as a fairly tale with an initiating
event (Once upon a time there was an actor who wanted?.), a sequence of
events describing the interaction of the actors with the story (and then
the big bad actor?) that describes how the goal is reached ( and they
all lived happily ever after). "
Dan Connolly, W3C http://www.w3.org/People/Connolly/
see you at the WWW2004 in NY 17-22 May?
