In moving from defining rules purely for HTML to rules for web content in
general, referring to a DTD is extremely important. (P1 checkpoint as soon
as browsers handle XML, in my humble first rush of opinion)
In HTML this is done by a DOCTYPE declaration. In XML, it is declaring
namespaces - see http://www.w3.org/TR/rec-xml-names
This comes under the guideline to use standard technologies - A.14
Charles
--Charles McCathieNevile mailto:charles@w3.org
W3C Web Accessibility Initiative http://www.w3.org/WAI
MIT/LCS - 545 Technology sq., Cambridge MA, 02139, USA
[Charles McCathieNevile]
In XML, this is done by DOCTYPE declarations. Namespaces are a little
bit different; they indicate the intended semantics of a set of
elements, but neither indicate a data schema nor assert compliance
therewith.
-Chris
!ENTITY crism PUBLIC "-//O'Reilly//NONSGML Christopher R. Maden//EN"
URL http://www.oreilly.com/people/staff/crism/ TEL +1.617.499.7487
I have just been looking at the whole thing a bit more carefully - it
seems to me that you can either use a DOCTYPE or a namespace - if you are
going to mix bits of different XML then you use namespaces. Anyway, I
suspect it is an issue we need to sort out.
Charles
[Charles McCathieNevile]
In XML, this is done by DOCTYPE declarations. Namespaces are a little
bit different; they indicate the intended semantics of a set of
elements, but neither indicate a data schema nor assert compliance
therewith.
-Chris
!ENTITY crism PUBLIC "-//O'Reilly//NONSGML Christopher R. Maden//EN"
URL http://www.oreilly.com/people/staff/crism/ TEL +1.617.499.7487
--Charles McCathieNevile mailto:charles@w3.org
W3C Web Accessibility Initiative http://www.w3.org/WAI
MIT/LCS - 545 Technology sq., Cambridge MA, 02139, USA
[Charles McCathieNevile]
A DOCTYPE is an assertion of compliance with a data model: in a valid
XML document, all elements' contents match the content models for
their respective element types, required attributes are present, all
attributes are within the types mandated by the DTD, etc.
Namespaces are a way of uniquifying element type names world-wide;
for example, when I say "http://www.w3.org/TR/WD-xsl^template", an XSL
processor knows, "Aha! This is the 'template' that I know how to
handle, because I recognize that magic string!" An HTML-Voyager
processor may recognize "http://www.w3.org/TR/REC-HTML5^p" as an HTML
paragraph, but that name makes no assertions about validity of the p
nor even that there's actually anything to download at the URI given.
These issues are orthagonal; you can use DOCTYPE declarations without
namespaces, and vice versa; you can use both, and you can use neither.
Now, I don't know which the WAI actually should care about. On the
one hand, use of namespaces will probably be essential to proper
processing of elements in heterogenous documents: HTML, MathML, RDF,
etc. And in fact, in such documents, assuring validity is a very hard
problem that hasn't been solved yet; I believe the XML Schema Working
Group is tasked with that problem. On the other hand, use of a
DOCTYPE does provide some means of testing the structural soundness of
a document, without which it may be impossible to process the document
however well it uses namespaces.
-Chris
!ENTITY crism PUBLIC "-//O'Reilly//NONSGML Christopher R. Maden//EN"
URL http://www.oreilly.com/people/staff/crism/ TEL +1.617.499.7487
Aaah. The fog is lifting from my brains, and things are revealed to have a
wonderful order beneath it. (At first glance, anyway). Thanks for your
patience and your explanations.
Charles McCN
A summary of what the difference between namespaces and doctypes was.
