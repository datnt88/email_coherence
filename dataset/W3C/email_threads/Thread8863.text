I've been a way on other activities for a while, and have just recently
gotten back to
the XML C14N specification. I came across the following in section 2.1:
"All whitespace within the root document element MUST be preserved
(except for any #xD characters deleted by line delimiter normalization).
This includes all whitespace in external entities. Whitespace outside of
the root document element MUST be discarded."
I'm assuming that this means white space that is presented after the
document is processed
by the XML processor. When a validating XML processor reads in a
document against a DTD,
insignificant white space is removed. This is not the white space that
the specification is
referring to, is it?
Sincerely,
Kevin Regan
Hi Kevin,
Actually, Section 2.10 of the XML spec makes it quite clear that all XML
processors must be capable of providing to the application ALL whitespace
within the document element. Validating processors must further be capable
of telling the application whether a given whitespace character appeared in
element content, i.e. was insignificant.
Many implementers of validating processors allow the application developer
to configure whether the whitespace should simply be discarded.
The statement you've come across in Section 2.1 is telling you how to
configure your validating parser. You MUST set it so that all whitespace is
reported to the canonicalizer.
NOTE: I don't see any harm in throwing out insignificant whitespace *before*
the document is signed. In other words, the original document accessed by
the user from the web may have insignificant whitespace that your
application strips out before even presenting the information content to the
end-user. Once the end user affixes a signature, though, any insignificant
whitespace that gets added to the signed document will break the signature.
John Boyer
Development Team Leader,
Distributed Processing and XML
PureEdge Solutions Inc.
Creating Binding E-Commerce
v: 250-479-8334, ext. 143 f: 250-479-3772
1-888-517-2675 http://www.PureEdge.com http://www.pureedge.com/
[mailto:w3c-ietf-xmldsig-request@w3.org]On Behalf Of Kevin Regan
I've been a way on other activities for a while, and have just recently
gotten back to
the XML C14N specification. I came across the following in section 2.1:
"All whitespace within the root document element MUST be preserved
(except for any #xD characters deleted by line delimiter normalization).
This includes all whitespace in external entities. Whitespace outside of
the root document element MUST be discarded."
I'm assuming that this means white space that is presented after the
document is processed
by the XML processor. When a validating XML processor reads in a
document against a DTD,
insignificant white space is removed. This is not the white space that
the specification is
referring to, is it?
Sincerely,
Kevin Regan
What is the reason for doing this? Isn't the exclusion of insignificant
white space one of the key forms of equivalence? XML documents can be
displayed and handled in many different ways, with white space being
added
or removed from element content at various steps. In general, this is
not a problem if a DTD is being used. The meaning of the document
is clear. However, this form of equivalence is eliminated in the XML
C14N
specification. Why?
Sincerely,
Kevin Regan
Hi Kevin,
Actually, Section 2.10 of the XML spec makes it quite clear that all XML
processors must be capable of providing to the application ALL
whitespace
within the document element. Validating processors must further be
capable
of telling the application whether a given whitespace character appeared
in
element content, i.e. was insignificant.
Many implementers of validating processors allow the application
developer
to configure whether the whitespace should simply be discarded.
The statement you've come across in Section 2.1 is telling you how to
configure your validating parser. You MUST set it so that all
whitespace is
reported to the canonicalizer.
NOTE: I don't see any harm in throwing out insignificant whitespace
*before*
the document is signed. In other words, the original document accessed
by
the user from the web may have insignificant whitespace that your
application strips out before even presenting the information content to
the
end-user. Once the end user affixes a signature, though, any
insignificant
whitespace that gets added to the signed document will break the
signature.
John Boyer
Development Team Leader,
Distributed Processing and XML
PureEdge Solutions Inc.
Creating Binding E-Commerce
v: 250-479-8334, ext. 143 f: 250-479-3772
1-888-517-2675 http://www.PureEdge.com http://www.pureedge.com/
-----Original Message-----
[mailto:w3c-ietf-xmldsig-request@w3.org]On Behalf Of Kevin Regan
I've been a way on other activities for a while, and have just recently
gotten back to
the XML C14N specification. I came across the following in section 2.1:
"All whitespace within the root document element MUST be preserved
(except for any #xD characters deleted by line delimiter normalization).
This includes all whitespace in external entities. Whitespace outside of
the root document element MUST be discarded."
I'm assuming that this means white space that is presented after the
document is processed
by the XML processor. When a validating XML processor reads in a
document against a DTD,
insignificant white space is removed. This is not the white space that
the specification is
referring to, is it?
Sincerely,
Kevin Regan
Hi Kevin,
The reason is signature interoperability with non-validating processors.
I empathize, though :)
Thanks,
John Boyer
What is the reason for doing this? Isn't the exclusion of insignificant
white space one of the key forms of equivalence? XML documents can be
displayed and handled in many different ways, with white space being
added
or removed from element content at various steps. In general, this is
not a problem if a DTD is being used. The meaning of the document
is clear. However, this form of equivalence is eliminated in the XML
C14N
specification. Why?
Sincerely,
Kevin Regan
-----Original Message-----
Hi Kevin,
Actually, Section 2.10 of the XML spec makes it quite clear that all XML
processors must be capable of providing to the application ALL
whitespace
within the document element. Validating processors must further be
capable
of telling the application whether a given whitespace character appeared
in
element content, i.e. was insignificant.
Many implementers of validating processors allow the application
developer
to configure whether the whitespace should simply be discarded.
The statement you've come across in Section 2.1 is telling you how to
configure your validating parser. You MUST set it so that all
whitespace is
reported to the canonicalizer.
NOTE: I don't see any harm in throwing out insignificant whitespace
*before*
the document is signed. In other words, the original document accessed
by
the user from the web may have insignificant whitespace that your
application strips out before even presenting the information content to
the
end-user. Once the end user affixes a signature, though, any
insignificant
whitespace that gets added to the signed document will break the
signature.
John Boyer
Development Team Leader,
Distributed Processing and XML
PureEdge Solutions Inc.
Creating Binding E-Commerce
v: 250-479-8334, ext. 143 f: 250-479-3772
1-888-517-2675 http://www.PureEdge.com http://www.pureedge.com/
-----Original Message-----
[mailto:w3c-ietf-xmldsig-request@w3.org]On Behalf Of Kevin Regan
I've been a way on other activities for a while, and have just recently
gotten back to
the XML C14N specification. I came across the following in section 2.1:
"All whitespace within the root document element MUST be preserved
(except for any #xD characters deleted by line delimiter normalization).
This includes all whitespace in external entities. Whitespace outside of
the root document element MUST be discarded."
I'm assuming that this means white space that is presented after the
document is processed
by the XML processor. When a validating XML processor reads in a
document against a DTD,
insignificant white space is removed. This is not the white space that
the specification is
referring to, is it?
Sincerely,
Kevin Regan
It seems that most folks will not be getting the expected results
with signatures. Any transport that modifies insignificant white space
will break the signature. I would assume that in most protocols that
send XML documents, insignficant white space is removed for efficiency
reasons. In addition, whenever a document is displayed (such as in IE),
the spacing is changed (in fact, the spacing of the examples at the end
of the XML C14N spec are probably spaced according to the displaying
application). Finally, the size of a document can not be minimized when
being stored because the signature would break.
Interoperability with non-validating processors might be a noble cause,
but it may cause many more problems for those (the majority?) using
validating processors. I predict a large number of problems down the
road for many applications...
--Kevin
Hi Kevin,
The reason is signature interoperability with non-validating processors.
I empathize, though :)
Thanks,
John Boyer
-----Original Message-----
What is the reason for doing this? Isn't the exclusion of insignificant
white space one of the key forms of equivalence? XML documents can be
displayed and handled in many different ways, with white space being
added
or removed from element content at various steps. In general, this is
not a problem if a DTD is being used. The meaning of the document
is clear. However, this form of equivalence is eliminated in the XML
C14N
specification. Why?
Sincerely,
Kevin Regan
-----Original Message-----
Hi Kevin,
Actually, Section 2.10 of the XML spec makes it quite clear that all XML
processors must be capable of providing to the application ALL
whitespace
within the document element. Validating processors must further be
capable
of telling the application whether a given whitespace character appeared
in
element content, i.e. was insignificant.
Many implementers of validating processors allow the application
developer
to configure whether the whitespace should simply be discarded.
The statement you've come across in Section 2.1 is telling you how to
configure your validating parser. You MUST set it so that all
whitespace is
reported to the canonicalizer.
NOTE: I don't see any harm in throwing out insignificant whitespace
*before*
the document is signed. In other words, the original document accessed
by
the user from the web may have insignificant whitespace that your
application strips out before even presenting the information content to
the
end-user. Once the end user affixes a signature, though, any
insignificant
whitespace that gets added to the signed document will break the
signature.
John Boyer
Development Team Leader,
Distributed Processing and XML
PureEdge Solutions Inc.
Creating Binding E-Commerce
v: 250-479-8334, ext. 143 f: 250-479-3772
1-888-517-2675 http://www.PureEdge.com http://www.pureedge.com/
-----Original Message-----
[mailto:w3c-ietf-xmldsig-request@w3.org]On Behalf Of Kevin Regan
I've been a way on other activities for a while, and have just recently
gotten back to
the XML C14N specification. I came across the following in section 2.1:
"All whitespace within the root document element MUST be preserved
(except for any #xD characters deleted by line delimiter normalization).
This includes all whitespace in external entities. Whitespace outside of
the root document element MUST be discarded."
I'm assuming that this means white space that is presented after the
document is processed
by the XML processor. When a validating XML processor reads in a
document against a DTD,
insignificant white space is removed. This is not the white space that
the specification is
referring to, is it?
Sincerely,
Kevin Regan
Also, it seems that the only interoperability issue would be
non-validating processors trying to deal with XML documents
that reference DTDs. It is questionable if this should be supported
at such a high cost...
Sincerely,
Kevin Regan
Hi Kevin,
The reason is signature interoperability with non-validating processors.
I empathize, though :)
Thanks,
John Boyer
-----Original Message-----
What is the reason for doing this? Isn't the exclusion of insignificant
white space one of the key forms of equivalence? XML documents can be
displayed and handled in many different ways, with white space being
added
or removed from element content at various steps. In general, this is
not a problem if a DTD is being used. The meaning of the document
is clear. However, this form of equivalence is eliminated in the XML
C14N
specification. Why?
Sincerely,
Kevin Regan
-----Original Message-----
Hi Kevin,
Actually, Section 2.10 of the XML spec makes it quite clear that all XML
processors must be capable of providing to the application ALL
whitespace
within the document element. Validating processors must further be
capable
of telling the application whether a given whitespace character appeared
in
element content, i.e. was insignificant.
Many implementers of validating processors allow the application
developer
to configure whether the whitespace should simply be discarded.
The statement you've come across in Section 2.1 is telling you how to
configure your validating parser. You MUST set it so that all
whitespace is
reported to the canonicalizer.
NOTE: I don't see any harm in throwing out insignificant whitespace
*before*
the document is signed. In other words, the original document accessed
by
the user from the web may have insignificant whitespace that your
application strips out before even presenting the information content to
the
end-user. Once the end user affixes a signature, though, any
insignificant
whitespace that gets added to the signed document will break the
signature.
John Boyer
Development Team Leader,
Distributed Processing and XML
PureEdge Solutions Inc.
Creating Binding E-Commerce
v: 250-479-8334, ext. 143 f: 250-479-3772
1-888-517-2675 http://www.PureEdge.com http://www.pureedge.com/
-----Original Message-----
[mailto:w3c-ietf-xmldsig-request@w3.org]On Behalf Of Kevin Regan
I've been a way on other activities for a while, and have just recently
gotten back to
the XML C14N specification. I came across the following in section 2.1:
"All whitespace within the root document element MUST be preserved
(except for any #xD characters deleted by line delimiter normalization).
This includes all whitespace in external entities. Whitespace outside of
the root document element MUST be discarded."
I'm assuming that this means white space that is presented after the
document is processed
by the XML processor. When a validating XML processor reads in a
document against a DTD,
insignificant white space is removed. This is not the white space that
the specification is
referring to, is it?
Sincerely,
Kevin Regan
Hi Kevin,
To change this decision (and the momentum) in the present specification you
need to:
1. Forge a new consensus that it needs to be changed.
2. Show the existing consensus/position should be reconsidered given new
evidence.
If you can get a bunch of folks (particularly the implementors) to advocate
this change, we'll re-open the issue. Or if it's clear that white spaces are
being mangled in transport or that everyone is using validating parsers
anyway we can also re-open the issue.
However, momentum seems to be carrying the day and we don't have any
specific evidence (I don't think) to counter our previous expectations on
white space and validating parsers.
Joseph Reagle Jr.
W3C Policy Analyst mailto:reagle@w3.org
IETF/W3C XML-Signature Co-Chair http://www.w3.org/People/Reagle/
The problems of white space have been discussed quite extensively.
Requiring validation of all signed XML means that you don't have a
general XML digital signature standard because you can't sign
arbitrary XML protocol inclusions or make a general closed box XML
siganture library. You have made secure XML non-extensible except
under the (in my opinion generally unrealistic) requirement that the
DTD/Schema for all signed data which is processed as XML accompany
that data or have be prviously incorporated into all the software that
would every have to create/verify the signatures.
If you know, for some specific application, that white space or
anything else is insignificant, you can certainly define
canonicalizations and/or transformations to strip out the
insignificant information.
Thanks,
Donald
From: Kevin Regan kevinr@valicert.com
Date: Wed, 15 Nov 2000 14:10:52 -0800
Message-id: 613B3C619C9AD4118C4E00B0D03E7C3E3CB13A@exchange.valicert.com
Folks,
I have no idea who among you follows the PKIX-discussions, where new XML-
and PKI-related workitems have been discussed and promoted mainly by some
folks like Anders Rundgren and myself and others and fighted against by
others :-).
Topics would be anything that is PKI and XML related (so XMLDsig would have
been a candidate if it did not exist already) starting from
Attribute-Certificates, where some think that they are so
application-specific anyway that nobody will use the current AC-draft
anyway, up to the extreme - definitions of Public-Key-Certs in XML, whatever
the WG-participants decide to pursue. Anybody interested in (religious)
discussions should please read the relevant messages (archive at
avoiding repeating arguments.
The idea now was how to proceed. Options are
- that this was a stupid idea from the beginning and everybody involved
should
be ashamed
- to have it as an activity which would be ideally placed within the
PKIX-group (which is not really an option as Steven Kent and many
others would not support it)
- to have it as a new activity of the XML-DSig WG
- to start a new WG within the IETF
- to start a new WG within W3C
- to start a new joint WG within W3C/IETF
rumours tell that the XML-encryption-WG has been placed within the W3C due
to the experiences of the joint XML-DSIG effort.
As this group is as close to these topics as I can think, I'd like to get
your opinions.
Peter
Dr. Peter Lipp
IAIK, TU Graz
Inffeldgasse 16a
A-8010 Graz
Hi Peter,
Perhaps with sentiments similar to Steven Kent but in the W3C context, I
think an activity should be its own WG with a specific and focused
charter/requirements of its own [1].
[1] http://www.w3.org/People/Reagle/chairing-a-WG.html#Closing
Joseph Reagle Jr.
W3C Policy Analyst mailto:reagle@w3.org
IETF/W3C XML-Signature Co-Chair http://www.w3.org/People/Reagle/
I believe Stephen Kent's sentiments are somewhat different, but I may be
wrong.
Peter
Dr. Peter Lipp
IAIK, TU Graz
Inffeldgasse 16a
A-8010 Graz
