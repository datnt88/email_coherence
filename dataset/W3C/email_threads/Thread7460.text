This post represents my best effort to summarize the "ordered collections"
thread which occurred primarily at the end of October. Feel free to ammend
this post if you feel I have trivialized or misunderstood your position.
There were three parts to this thread:
1) A requirements discussion concerning support for ordered collections.
2) Sketches of two proposals for specifying ordering of new members of an
ordered collection
3) Creation of ordered collections using MIME multipart messages.
The first item is a meta-discussion over whether the functionality should
be included in WebDAV at all. There was some agreement that if you do want
to support this capability, you need to allow the creation of new compound
documents in one action (the creation using MIME discussion), and to insert
new members of a compound document in a specific location in the document,
which leads to the discussion of proposals for ordering.
Requirements Discussion:
The case in favor of ordered collections states that ordering is useful for
modeling compound documents [1][2][3], making certain document management
applications "substantially easier"[4] to build on top of WebDAV, and for
recording the order that sets of changes are applied to a server [5].
The case against ordered collections was summarized nicely by Jim Davis
[6]. In short, the objections center on the difficulty for servers of
implementing ordered collections [7][8], especially servers which use a
filesystem as their repository, the difficulty for older clients of
understanding new WebDAV-specific compound document formats [8], and some
concerns over just how well compound documents can be modeled by
collections [9].
[1] Jim Davis,
[2] Judith Slein,
[3] Judith Slein,
[4] Jim Davis, http://lists.w3.org/Archives/Public/w3c-dist-auth/1997Oct
Dec/0123.html
[5] Stephen Martin,
[6] Jim Davis,
[7] Yaron Goland,
[8] Yaron Goland,
[9] Yaron Goland,
Specifying ordering of new members of an ordered collection:
Two sketches of proposals for ordered collection support were made on the
mailing list. The first proposal [1] involved using extra headers for PUT
and ADDREF to specify the URL of a member of the collection which must come
before the new resource being created by PUT, or added by ADDREF.
The second proposal [10] suggested the use of a 'next-member' property to
model the ordering of members in a collection, essentially creating a
linked list.
[10] Martin Duerst,
Creating new compound documents in one operation:
Discussion here centered on defining the relationship between MIME
multipart messages and WebDAV collections [11], and on defining how to use
MIME multipart messages with MKCOL or PUT [12]. The use of the MIME type
multipart/related was recommended for use in transmitting compound
documents [13].
[11] Larry Masinter,
[12] Judith Slein,
[13] Larry Masinter,
- Jim Whitehead ejw@ics.uci.edu
This was an excellent summary, and I endorse it all, except for:
which I do not agree with. I feel it would be nice, but it's not
necessary, by analogy with MKCOL on an ordinary collection. No one has
claimed that "if you want to suport MKCOL, you need to allow the creation
of compound documents in one action". It might be more efficient, but
surely it's not crucial?
I would be very supportive of efforts to define means of specifying initial
contents of collections, e.g. by MIME multipart bodies, or some set of
properties.
During the discussion I agreed to produce a formal specification for
ordered collections, which I will do in my next message.
Best regards
Jim
650-812-4301
Jim,
Thank you for the summary on ordered collections. Reading the summary brought to mind a few questions.
My reading of the summary and the list entries cited lead me to believe that the proposal is for totally ordered collections. The order is to be generated by the client (via a header which stipulates predecessor or successor) and maintained by the server. The semantics of the order are not known to the server. A given collection can have only one ordering.
1. No argument that linear orderings can be useful, but why exclude partial orders?
2. What if I need two or more orders defined in a collection?
3. What are the semantics of the proposed order?
One of the compelling arguments made for ordered collections is that it might be useful for versioning, in which case Q.1 has some merit.
More troubling to me are the issues raised by Q.2 and Q.3. As I see it, within the context of the current proposal (for ordered collections) it would be difficult at best to provide future support for multiple orders in a collection, let alone define the semantics of such orders. As for the semantics of the proposed ordering, I suppose one can only hope that client B "means" the same thing as client A (w.r.t. order) when adding something to a collection.
Will the WebDav property model allow one to define a relation in a collection, and associate the relation with the collection? Might there be schema(s) associated with the relation that make its semantics identifiable and unambiguous? If so, and if the relation were reflexive, antisymmetric and transitive, then one would have an order in the collection. Presumably, one would want such a property to be "live".
Del
