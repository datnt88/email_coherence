Bert Bos wrote some comments on the requirements...
2 Have a valid XML representation
Apart from the fact that this contradicts the first requirement
("simple and easy"), I think that limiting the syntax up front is
not very useful. Especially so, because of the timed-text formats
(and proposed formats) that I have seen so far, those that were
not based on XML were by far the most elegant. (E.g, those of
Quicktime and Mplayer.)
Have to agree - an XML representation might bring advantages - but it should
not be a pre-requisite. Would it be possible to have an XML representation
(with external documents?) that has a streamable format that is more
efficient and elegant than its XML representation?
8 Allow the language of the text to be identified using xml:lang
A corollary of the previous comment. The language should indeed be
identified somehow, but it could be by other means than XML.
Indeed, it could be outside the document itself, e.g., in an HTTP
header.
If the representation is XML - then XML should be fully utilised - but TT
should IMHO support multiple language streams.
11 Have a default UNICODE font
Is it really a requirement to have a standard font? What font
would that be? Arial? Maybe the intention was to require that the
format supports all Unicode characters, rather than a specific font?
Somewhere in the charter it says that font is something to be left out of
TT. TT should require support for Unicode **characters**.
18 Allow motion [...]
I think this requirements makes the format too complicated and
makes it approach SMIL and SVG too much. Those formats already
exist. What's needed here is something simple, as requirement 1 says.
Could motion be part of the style rather than the text?
19 Use SVG, MathML, XHTML or other language for complex font displays
I agree with this requirement as such (as I said in the previous
comment), but its appearance here seem to suggest something more,
viz., that UAs that support timed text also have to support SVG,
MathML and XHTML. That seems rather pointless to me. If the UA
already supports those three, then there is no need anymore for
timed text. I thought the purpose of timed text was precisely to
have something that is simpler than those formats and still does
the job in 95% of the cases.
Absolutely, though it would be nice to be able to transfer glyphs that have
no unicode representation by some mechanism within TT (e.g. trademarks and
logos). Could this be by private data inclusion? Reference to external
streams?
22 Adopt SMIL 2.0 as a base language.
Like requirement 2 ("XML"), this puts too many a priori
restrictions on the format. Besides, unless you subset SMIL so
much that it doesn't look like SMIL anymore, it would not be
simple and easy, as required by requirement 1.
AFAIK SMIL also doesn't allow the implementation of all of the buffering and
timing models (outlined by Glenn A. Adams) that are probably required.
regards
John Birch
The views and opinions expressed are the author's own and do not necessarily
reflect the views and opinions of Screen Subtitling Systems Limited.
Hi - comments inline :
2 Have a valid XML representation
External namespace support should be mandated.
BTW, SMIL2 supports this, so that for example display extensions can be
loaded by SMIL viewers (though currently only real player has a useful
implementation of this).
(Search down for "RealNetworks Extension Namespace")
??? Can you explain this more John - I don't get what you just said :-)
The reduced format would be derivable from the XML format by using XSL to
transform the document into whatever format was requested by the client.
8 Allow the language of the text to be identified using xml:lang
But not *require* them I would have thought.
11 Have a default UNICODE font
Is it really a requirement to have a standard font? What font
would that be? Arial? Maybe the intention was to require that the
format supports all Unicode characters, rather than a specific font?
This is a function of the encoding used in XML documents, and is specified
in the document declaration on the 1st line of conforming XML documents.
*All* display attributes should be external to the document IMO.
This could do with including positioning (% of display height and width
for example) for open caption devices. All of this sort of thing can be
specified in css by linking the stylesheet to the document.
I think theres a data: url scheme which might work for some small snippets.
Anybody got other ideas ?
Cheers,
Neil Smith.
Regarding a point below about separation of style information.
This may present a problem for use in a streamable format. In
particular, this may cause every "access unit" to be accompanied
by a style sheet. Some consideration needs to be given to this
problem.
Regards,
G.
Going beyond style, this applies to all dependencies (style, animations,
references, etc). There's a variety of ways in which this can be solved or at
least simplified, most of which boil down to the way in which you structure your
documents. This is very likely an area in which TT and SVG should compare notes.
Robin Berjon robin.berjon@expway.fr
Research Engineer, Expway http://expway.fr/
7FC0 6F5F D864 EFB8 08CE 8E74 58E6 D5DB 4889 2488
Johnb@screen.subtitling.com wrote...
TT must be XML-based for many reasons, among them (1) tools support, (2)
API support, (3) easy transformation to arbitrary formats using XSL, (4)
integration with other XML applications, etc.
From where I sit SMIL would be a good reference to use while defining TT.
It sounds like familiar with SMIL, so can you be more specific?
-- Charles Wiltgen
