Bert,
Suggestion for your list of CSS resources, the perl module
CSS::Parser
Available at http://www.cpan.org/authors/id/R/RB/RBERJON/
The version 0.61readme is
Len
Leonard R. Kasday, Ph.D.
Institute on Disabilities/UAP, and
Department of Electrical Engineering
Temple University
423 Ritter Annex, Philadelphia, PA 19122
kasday@acm.org
(215) 204-2247 (voice)
(800) 750-7428 (TTY)
Hello Len,
I added it, but are you sure it works? I only get "Unrecognized token
within block" no matter what value I put after 'margin':
body { margin: 0 }
Anyway, it is good to see a Perl parser for the CSS syntax. I should
send an e-mail to the author.
Bert
Bert Bos ( W 3 C ) http://www.w3.org/
bert@w3.org 2004 Rt des Lucioles / BP 93
Hi Bert,
Actually, I hadn't tried it blush / . I just spotted it and sent the info
to you. Would you send me the code you were testing it with?
If you write him and he clears up that problem please let me know... or if
I figure it out I'll do likewise.
Len
Leonard R. Kasday, Ph.D.
Institute on Disabilities/UAP, and
Department of Electrical Engineering
Temple University
423 Ritter Annex, Philadelphia, PA 19122
kasday@acm.org
(215) 204-2247 (voice)
(800) 750-7428 (TTY)
Hello Len,
Here is the program:
use CSS::Parser;
sub css_com {
my $self = shift;
my $comment = shift;
print "comment: $comment\n";
sub sel {
my $self = shift;
my $selector = shift;
print "selector: $selector\n";
sub blk_s {
my $self = shift;
print "block start\n";
sub prop {
my $self = shift;
my $property = shift;
print "property: $property\n";
sub val {
my $self = shift;
my $value = shift;
print "value: $value\n";
sub blk_e {
my $self = shift;
print "block end\n";
sub atr {
my $self = shift;
my $rule = shift;
print "at-rule: $rule\n";
sub ats {
my $self = shift;
my $symbol = shift;
print "at-symbol: $symbol\n";
sub error {
my $self = shift;
my $rest = shift;
my $err = shift;
print "Error: $err\n";
my $css = CSS::Parser- new(
handlers = {
css_comment = \&amp;css_com,
selector_string = \&amp;sel,
block_start = \&amp;blk_s,
property = \&amp;prop,
value = \&amp;val,
block_end = \&amp;blk_e,
at_rule = \&amp;atr,
at_symbol = \&amp;ats,
error = \&amp;error
$/ = undef;
my $buf =  ;
$css- parse(\$buf);
Bert Bos ( W 3 C ) http://www.w3.org/
bert@w3.org 2004 Rt des Lucioles / BP 93
