Yes: it seems simple to me. Have a Location which the core can use to fetch
the document for verification; but don't include the Location in
SignedInfo, otherwise moving the document breaks the signature (at least,
as far as the core is concerned). Then, if the document changes location,
simply change the Location field accordingly. Isn't it as simple as that?
Why, when no other kind of electronic signature is invalidated by changing
the document's location, should XML signatures be any different? I can't
see why. Perhaps some kind and patient person could explain to me what I am
missing here.
The argument is:
1. It is not a location; it is a URI.
2. Is is merely a collection of bits, which represent a syntax, which we
define the meaning of! If we don't define it to be a location that MUST be
dereferenced every time a signature is checked, then it isn't!
I define the syntax to mean:
a. There is a set of XML documents that when transformed yield DigestContent
(the content that is finally digested.)
b. At some point in time, the XML document obtained by dereferencing this
URI was just such a document.
Unfortunately, I'm not sure I've expressed it well, and any sort of
exposition on this topic seems to readily confuse people.
Joseph Reagle Jr.
Policy Analyst mailto:reagle@w3.org
XML-Signature Co-Chair http://www.w3.org/People/Reagle/
Hi Joseph,
It's not confusing us at all. We accept your definition as far as it goes;
it just doesn't go very far. The problem is that we are not just trying to
write a spec but rather trying to figure out how to build the thing.
When you say that "there is a set of XML documents that... yield
DigestContent", what does that mean. *Something* has to yield DigestContent
does it not? If we don't say how specifically the DigestContent will be
'yielded' then it is meaningless to then say that we digest it and compare
the result to the one in DigestValue.
So, how specifically do you propose that we obtain the DigestContent? It is
either defined by core behavior or it is defined by the application. By
saying "there is a set S of XML documents that, when transformed, yields
DigestContent" but nothing more, are you making the a priori assumption that
it is the application's problem to find a member M of the set S? Once we
have M, is it core behavior or application-specific behavior to apply the
transforms to M, yielding M'? Once we have M', is it core behavior or
application behavior to apply the DigestMethod to M' yielding DigestValue
(or in verification, something that can be compared with DigestValue)?
I'm sure the answer to the last question is core. I am not sure whether we
intend for core to do the tranforms. The majority of the debate, though, is
about whether core does Location resolution.
John Boyer
Software Development Manager
UWI.Com -- The Internet Forms Company
[mailto:w3c-ietf-xmldsig-request@w3.org]On Behalf Of Joseph M. Reagle
Jr.
The argument is:
1. It is not a location; it is a URI.
2. Is is merely a collection of bits, which represent a syntax, which we
define the meaning of! If we don't define it to be a location that MUST be
dereferenced every time a signature is checked, then it isn't!
I define the syntax to mean:
a. There is a set of XML documents that when transformed yield DigestContent
(the content that is finally digested.)
b. At some point in time, the XML document obtained by dereferencing this
URI was just such a document.
Unfortunately, I'm not sure I've expressed it well, and any sort of
exposition on this topic seems to readily confuse people.
Joseph Reagle Jr.
Policy Analyst mailto:reagle@w3.org
XML-Signature Co-Chair http://www.w3.org/People/Reagle/
