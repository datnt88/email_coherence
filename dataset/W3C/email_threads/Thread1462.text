Hi,
I just wanted to check that my understanding of Configurations and
Components
is correct....if the group agrees I could add this to the deltaV FAQ because
I think the text in the specification can be easily misunderstood.
The statement in section 12 says:
"A configuration is a set of resources that consists of a root
collection and all members of that root collection that are not
members of another configuration."
So given the collection structure:
build
+----- include
+----- src
+----- gui
You cannot have a configuration rooted at build and another configuration
rooted at build/src.
But later in section 12 it says:
"the root collection of a configuration can have a member that
is the root collection of one of its components"
So you can have a configuration rooted at build and a component rooted at
build/src.
Is my understanding of this correct?
Regards,
Peter Raymond - MERANT
Principal Architect (PVCS)
WWW: http://www.merant.com
From: Peter Raymond [mailto:Peter.Raymond@merant.com]
The statement in section 12 says:
"A configuration is a set of resources that consists of a root
collection and all members of that root collection that are not
members of another configuration."
So given the collection structure:
build
+----- include
+----- src
+----- gui
You cannot have a configuration rooted at build and another
configuration rooted at build/src.
What in the definition led you to this conclusion? (This is a real
question, not a rhetorical question, because if something in the text
led you to this conclusion, it should be fixed).
The statement you quote above just says that the members of the
nested (e.g. /build/src) configuration are not also members of the
parent (e.g. /build) configuration.
But later in section 12 it says:
"the root collection of a configuration can have a member that
is the root collection of one of its components"
So you can have a configuration rooted at build and a component
rooted at build/src.
Is my understanding of this correct?
Yes, your final conclusion (i.e. that nested configurations are
allowed) is correct.
Cheers,
Geoff
Hi,
It was the text in section 12 where it says "... that are not members of
another
configuration" that leads to the confusion.
Lets imagine you have the structure in the e-mail below and you put
the build collection under baseline control by issuing a BASELINE-CONTROL
request.
Can you now issue another BASELINE-CONTROL request on build/src?
I guess not since the resulting configuration would contain members
of the configuration defined by the initial BASELINE-CONTROL request.
Also the pre-condition (DAV:version-controlled-configuration-must-not-exist)
would be triggered because build/src already has a version-controlled
configuration property.
BUT...I guess you could have done that in the reverse order...eg...
If I issue a BASELINE-CONTROL method on build/src first I would then be
able to later put the build collection itself under BASELINE-CONTROL.
Is that right?
Would the second baseline contain members from build and build/include
but no members from build/src? Because the second configuration can
not contain members from the first configuration?
Regards,
Peter Raymond - MERANT
Principal Architect (PVCS)
WWW: http://www.merant.com
The statement in section 12 says:
"A configuration is a set of resources that consists of a root
collection and all members of that root collection that are not
members of another configuration."
So given the collection structure:
build
+----- include
+----- src
+----- gui
You cannot have a configuration rooted at build and another
configuration rooted at build/src.
What in the definition led you to this conclusion? (This is a real
question, not a rhetorical question, because if something in the text
led you to this conclusion, it should be fixed).
The statement you quote above just says that the members of the
nested (e.g. /build/src) configuration are not also members of the
parent (e.g. /build) configuration.
But later in section 12 it says:
"the root collection of a configuration can have a member that
is the root collection of one of its components"
So you can have a configuration rooted at build and a component
rooted at build/src.
Is my understanding of this correct?
Yes, your final conclusion (i.e. that nested configurations are
allowed) is correct.
Cheers,
Geoff
From: Peter Raymond [mailto:Peter.Raymond@merant.com]
It was the text in section 12 where it says "... that are not
members of another configuration" that leads to the confusion.
Lets imagine you have the structure in the e-mail below and you put
the build collection under baseline control by issuing a
BASELINE-CONTROL request. Can you now issue another
BASELINE-CONTROL request on build/src? I guess not since the
resulting configuration would contain members of the configuration
defined by the initial BASELINE-CONTROL request. Also the
pre-condition (DAV:version-controlled-configuration-must-not-exist)
would be triggered because build/src already has a
version-controlled configuration property.
Yes, that is correct.
BUT...I guess you could
have done that in the reverse order...eg... If I issue a
BASELINE-CONTROL method on build/src first I would then be able to
later put the build collection itself under BASELINE-CONTROL. Is
that right?
Yes. You could also take a collection that was under baseline
control and MOVE it under another configuration (it would not
become part of that other configuration, but just would be located
under it from a namespace perspective).
Would the second baseline contain members from build
and build/include but no members from build/src? Because the second
configuration can not contain members from the first configuration?
Yes, also correct.
Cheers,
Geoff
Maybe change to:
"A configuration is a set of resources that consists of a root
collection and all members of that root collection except those
resources which are members of another configuration."
IMO, that is a bit clearer that the resources *can* be in another
configuration, and that they are excluded from the parent collection.
Cheers,
-g
Greg Stein, http://www.lyra.org/
