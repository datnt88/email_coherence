Is there anything else that needs to be done to your standard SGML
declaration for a Basic document other than
DELIM GENERAL SGMLREF PIC "? "
and
NAMECASE GENERAL NO
Huh? I think we finally decided to case-fold, so you mean YES.
But somebody who really knows this stuff does need to synthesize
an SGML declaration for XML. - Tim
I've been trying to locate all references to LINK in the corpus of email
and online documents, so pardon me if this comes in from left field.
As part of the work I'm doing on behalf of ICADD, I'm providing an LPD to
bridge HTML 3.2 and ICADD 2.2 for people with disabilities. I'd like to
propose adding support for LINK (specifically IMPLICIT YES) so that the
same proposed solution for providing ICADD support for the disabled
community in HTML 3.2 could conceivably work for XML. At some point we may
want to provide an XML/ICADD LPD along with the XML spec.
I realize that LINK is not a common feature in SGML applications, but I
believe the same political message would be sent out with XML as currently
with the ICADD-less HTML 3.2: W3C is not concerned about providing support
to the disabled community. I think (as I'm sure many others do) that this
would be a mistake.
Note that I'm maintaining a project page on the HTML 3.2/ICADD 2.2 effort at
XML may provide a much greater authoring markup language for the disabled
community than HTML, given that the tools for browsing XML have yet to be
developed (hence LPD support could be made at least a recommendation), a
specific XML flavor could be developed within the disabled community for
its own needs, the quality of parsing will be (theoretically) higher, XML
seems targeted towards those more concerned with structure and
interoperability, etc.
Murray
Murray Altheim, Program Manager
Spyglass, Inc., Cambridge, Massachusetts
"Give a monkey the tools and he'll eventually build a typewriter."
I'm not sure it's strictly necessary to include LINK in the XML spec as any
valid XML document can be processed by an SGML parser that supports LINK in
order to generate a new XML instance with the link attributes integrated.
My experience with SP is that nsgmls requires that one modify the SGML
declaration to include LINK IMLICIT YES in order to process LPDs. Am I
wrong or misinterpreting your response? This sounds like a workaround
rather than a change to the advocated specification.
Note also that the "multiple attribute lists" facility used in
architectural meta-DTDs and almost certainly to be included in SGML97 (and,
I would presume, immediately adopted by XML), will provide almost the same
facility for adding attributes to elements unilaterally that LINK provides
today.
Note that would you would *NOT* get would be the ability to apply different
attributes to the same element type based on hierarchy, which you can do
quite effectively with LINK.
I agree that adding an LPD-like document in the declaration subset is a
potential solution, but not as effective as an LPD, particularly as the
HTML/ICADD LPD will get increasingly complex in attempting to resolve the
thornier aspects of HTML 3.2, 3.5, 4.x, and I assume an XML/ICADD LPD would
be similar in scope and complexity.
Perhaps allowing LINK but placing specific restrictions on its use? I'm
certainly not trying to open an enormous door here, just enough of a crack
to provide an ICADD solution.
Murray
Murray Altheim, Program Manager
Spyglass, Inc., Cambridge, Massachusetts
"Give a monkey the tools and he'll eventually build a typewriter."
I don't see what the LINK features have to do with ICADD. ICADD involves
adding architectural form attributes to elements. You can do that with
ATTLIST declarations and be done (which several DTDs have already,
admirably, done). Most existing software can look at those attributes and
condition formatting or other representational characteristics based on
those attributes.
Insisting that vendors implement LINK in order to support ICADD is the
surest way to be sure no one implements ICADD, which I think would be a tragedy.
Steve
I'm not sure it's strictly necessary to include LINK in the XML spec as any
valid XML document can be processed by an SGML parser that supports LINK in
order to generate a new XML instance with the link attributes integrated.
I too would like to see LINK (at least that part of it needed for
associating architectural attributes with elements) in XML, but I think I
would agree that it would cause the spec to far exceed the goals set for
spec size and simplicity. The use of LINK raises some tricky issues of
application-to-parser communication and entity management that would not be
resolvable in the time we have for XML 1.0.
Note also that the "multiple attribute lists" facility used in
architectural meta-DTDs and almost certainly to be included in SGML97 (and,
I would presume, immediately adopted by XML), will provide almost the same
facility for adding attributes to elements unilaterally that LINK provides
today.
In other words, with the new syntax, you could so this:
!DOCTYPE MyXMLDoc SYSTEM "http://www.drmacro.com/dtds/myxmldoc.dtd" [
]
These attribute declarations could be in an external parameter entity.
Note that would you would *NOT* get would be the ability to apply different
attributes to the same element type based on hierarchy, which you can do
quite effectively with LINK.
Cheers,
E.
W. Eliot Kimber (eliot@isogen.com)
Senior SGML Consulting Engineer, Highland Consulting
2200 North Lamar Street, Suite 230, Dallas, Texas 75202
"Rats in the morning, rats in the afternoon...if they don't go away, I'll be
re-educated soon..." --Austin Lounge Lizards, "1984 Blues"
nothing, as you point out.
I agree on all counts -- well said!
Lee
Yes, you have to modify the SGML declaration (just as you would to allow
OMITTAG or any other optional feature not directly supported by XML). This
is a workaround, but one that is generally available, easy to implement,
and for which no great barriers exist in the XML spec.
In other words, it's a trival NSGMLS application to take as input a valid
XML document and an LPD and produce as output a well-formed XML document
that includes the ICADD attributes. In fact, adding this feature to any
SP- or NSGMLS-based SGML-to-WFXML generator is as simple as recognizing
LINK attributes in addition to instance attributes.
I would therefore suggest that anyone thinking of writing such a tool
include support for putting LINK attributes in the instance.
Note that this is really easy if the output is wellformed but not valid,
because you don't have to worry about modifying the document type. If you
want to produce valid XML documents then you have to update the relevant
attribute lists, which is a bit more difficult (but not impossible using
something like Earl Hood's DTD processing Perl scripts).
Cheers,
E.
W. Eliot Kimber (eliot@isogen.com)
Senior SGML Consulting Engineer, Highland Consulting
2200 North Lamar Street, Suite 230, Dallas, Texas 75202
"Rats in the morning, rats in the afternoon...if they don't go away, I'll be
re-educated soon..." --Austin Lounge Lizards, "1984 Blues"
tragedy.
What Steve says is, of course, true, but it somewhat misses the point of
using LINK in this case, which is that LINK allows such attributes to be
added to documents unilaterally, without the need to modify the document
types directly. It also makes it possible to use a wide range of
architectures with a documents without overloading each element with a long
list of always-there fixed attributes.
For ICADD, I think every document type intended to be used for documents
that will have visually-impaired readers should include the ICADD
architectural attributes in particular, but we can't count on it.
I also suspect that once the use of architectures becomes more widespread,
which I think it will once the HyTime TC is published and people start to
understand the power that's there, that users will start to see how LINK,
at least in its simple #IMPLICIT form, can be of real benefit and that, as
a result, vendors will start to add support for it. Given that both
SoftQuad and ADEPT have to rework their editors to allow element
declarations in internal subsets anyway, it can't be that much more effort
to support implicit link at the same time. I can't imagine that it would
be hard for the DynaText parser to add support for LINK either (if it's
Yasp or SP, it's already there or mostly there).
However, my point was that, as a delivery mechanism, software that supports
LINK sufficiently exists and can be used to easily build the necessary
filters. It helps that this software is also free, robust, and fast.
Cheers,
E.
W. Eliot Kimber (eliot@isogen.com)
Senior SGML Consulting Engineer, Highland Consulting
2200 North Lamar Street, Suite 230, Dallas, Texas 75202
"Rats in the morning, rats in the afternoon...if they don't go away, I'll be
re-educated soon..." --Austin Lounge Lizards, "1984 Blues"
From: murray@spyglass.com (Murray Altheim)
Although that new XML instance could be provided as a special
case output of some application, an objective I believe we should have is
that any XML application should make easy the inclusion of ICADD support.
Some believe that LINK is the way to include ICADD. By that argument, W3C
removed the support for the #FIXED SDA attributes from the HTML 3.2 DTD.
Getting support for LINK presumes that some external pressure,
such as the Americans with Disabilities Act, is sufficient to
encourage vendors to supply support for the LINK feature
that is not now well-supported. Such pressure has influenced
Microsoft, and Adobe in other areas of accessibility. I hope that XML will
facilitate inclusion of ICADD capabilities.
That appears to be needed, as a minimum. The support that
goes behind it is also needed.
I believe that the LINK capability to support hierarchy-dependent
distinctions is important.
Being able to determine where one is in context is much harder
for someone who must depend on memory, without visual cues.
Also, when one uses search to jump to a pattern match, the
context of the result is not evident, without a means to
determine that context.
I believe Murray's experiments using LINK are an essential step
before any decision on how to bring ICADD up to date can be made.
At this time, we should not preclude the use of LINK from XML.
Regards/Harvey
tragedy.
I'm still ramping up on these issues, but I would venture that XML offers a
much better solution than the current ICADD for those who need ICADD's
benefits.
XML is about sending intelligent markup that correctly models its data all
the way down to the client applications. So through style sheet mechanisms
(DSSSL, for example), couldn't a publisher provide those with disabilities
a much more robust set of guidelines, custom-tailored to the smarts of the
content set, to help those with disabilities differentiate parts of
documents?
Doesn't the world of style sheets offer a far greater avenue for opening
access than hiding hints inside a DTD? Instead of just prefixes and
suffixes, a content provider could call for much more useful
annotations/transformations/inflection-changes.
Alan.
!--
Alan Karben
Manager, Multimedia
The Wall Street Journal Interactive Edition
--
You might well be right. One discussion was about the use of LINK
for adding ICADD SDA forms to the HTML 3.2 DTD.
I am still not convinced that this is a good idea.
As far as I know, none of the major HTML browsers today will cope very
well with an SGML declaration in a document, let alone a link process
definition. Presumably !USELINK... would become legal within an HTML
document.
Introducing LINK into HTML could have interesting implications for
CSS1 and also for anchors -- it gives you a way of doing something very
like a HyTime ILINK (but restricted to pointing to entire elements).
But given that HTML applications today don't (in generl) even support
document-specific entities, it would seem to me better not to extend HTML
in this way, but to use existing technology.
If you want to have the ICADD attributes in a separate file, assume that
the SGML 97 rule has passed to allow
!AttList X
a "b" #IMPLIED
percy (x|y|z) "x"
!AttList X
c "d" #FIXED
so that you can put all the #FIXED attributes (and maybe others) in
a separate file and include it from the base DTD.
Alan's comment:
Is a good one.
LINK was an early (and I think unsuccessful) attempt to provide a
general transformation model for SGML. This has since been done
in DSSSL. It would be better to supply a DSSSL transformation than
a LINK process definition set file, I think.
It is unlikely that existing vendors will start to support LINK.
It is very likely that they will support DSSSL.
On the other hand, as far as I can tell from reading 8879, an
SGML application can ignore LINK if it wants to. The information is
a hint to the parser, no more. I don't have a formal definition of ESIS
in front of me, so don't know if ESIS is required to be changed by LINK.
So maybe HTML software could conform if it ignored the LPD.
But I am not sure if that helps anyone.
Since the issues are political and not technical, I don't think I
can comment further.
Lee
