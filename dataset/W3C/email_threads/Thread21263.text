I would like to expand on two requirements already on the list under
construction, and discuss a new candidate for the list.
---User-friendly
I think the following items are important and could be subsumed
under this heading:
- low learning barrier
- clear language concepts and meaning
- independence of the language concepts from syntax, XML serialization
(compare the basic specification document for RDF, which first presents
resources, properties, statements in a kind of set-theoretic way,
independently
from and combinable with various XML serializations) (this point also
appeared
in some very recent e-mails to the Webont group by Jeremy and Frank)
- the user of the language should not need to know about reasoning
strategies behind
the language
(compare programming languages: it is not attractive if a programmer would
need
to know about LR-parsing and attribute grammars).
---Ontology querying
This requirement could be made more specific in the following direction.
The ontology language could be required to offer a semantic level of
description of information on the Web that allows queries to be formulated
independently from XML serialization, on the basis of the meaning
of the information. (So this links to the point already mentioned above
under
user-friendly: independence from XML serialization.)
There is an analogy to the standard three-level architecture of databases:
the ontology language could be viewed as delivering a conceptual level
which frees information modelers and people wanting to pose queries from
storage representation (i.e., serialization) details.
---Basic reasoning functionality
This requirement involves what is expected from an implementation of the
language. What I mean here is certain basic reasoning functions which may
be
assumed to come free to use by developers of 'intelligent' software
systems
making use of ontologies on the Web. On the level of RDF Schema an
example
could be that the meta-rule 'if the resource X is an instance of class C
and class
C is a subclass of class D, then X can be concluded to be an instance of
D'
does not need to be implemented by each software developer making use of
documents involving RDF Schema.
This requirement, the presence of basic reasoning functionality, seems to
be absent
in the 13 requirements mentioned so far.
It seems to be appropriate to discuss this point (which has been mentioned
in the
Webont discussions already several times) simultaneously with the language
itself.
Regards,
Herman
Dr. Herman J. ter Horst
Philips Research Laboratories
Prof. Holstlaan 4, 5656 AA Eindhoven, The Netherlands
E-mail: herman.ter.horst@philips.com
We've had a lot of discussion over the last 24 hours, so I thought it
would be useful to try to summarize where we stand. Be warned that this
message is somewhat lengthy.
One issue that has come up is whether we should be considering only
requirements for a certain "layer" of the Semantic Web. I believe that
it is useful if we identify all requirements for an ideal semantic web
language. We can then divide these into which are more appropriate for
RDF, or for a yet to be named Proof layer.
I have tried to gather all of the proposed requirements and issues from
our discussion into a single list, which is at the bottom of this
message. I've numbered each requirement and attempted to provide a short
description of it. Additionally, I've included open issues for many
requirements, and assigned letters to these issues. If you'd like to
propose a change to a requirement or add an issue, please refer to it by
number (e.g., R6). If you'd like to respond to or comment on an issue,
please refer to it by number and name (e.g., R2.b). I'll try to maintain
this list as discussion continues. I don't expect that we'll solve all
these issues anytime soon, but I think at least having them gathered
together will help us focus on the job at hand. If you add a requirement
or issue, assign it the next number or letter.
I request that we have a straw poll on the requirements that we have so
far. For each requirement, I'd like to know whether you support it (even
though it may be out of scope), are against it, or are undecided. It may
be useful to provide a short explanation for your negative votes. Also,
feel free to state whether or not you think each requirement is in the
scope of the WebOnt effort. I want to eventually produce two lists: one
a list of requirements we think are important for WebOnt and a list of
requirements we think are important but are out of scope of this effort.
Then we can focus on writing up those requirements that are important
and in scope.
Thanks!
Jeff
WebOnt Candidate Requirements
R1. Shared ontologies
Ontologies are publicly available and different data sources can commit
to the same ontology for shared meaning.
R2. Ontology extension
Ontologies can be extended by other ontologies in order to provide
additional definitions.
Issues:
a) Import all axioms wholesale into new ontology?
b) Include definitions but don't allow them to be redefined or
restricted?
c) Simply reuse names but not definitions?
R3. Ontology evolution
Ontologies can be changed over time and data sources can specify which
version of the ontology they commit to.
Issues:
a) How does this differ from ontology extension (R2)? In R2, the
original ontology is unchanged.
R4. Ontology interoperability
Different ontologies may model the same concepts in different ways. The
language should provide primitives for relating different
representations, thus allowing data to be converted to different
ontologies, and enabling a "web of ontologies."
R5. Inconsistency
Different ontologies may be contradictory, or different data sources may
be contradictory. It should be possible to detect inconsistencies.
Issues:
a) Since inconsistency will probably be inevitable on the Web, we should
probably also provide means for continuing reasoning in the face of
inconsistency.
R6. Scalability
The language should be able to be used with large ontologies and large
data sets.
R7. Ease of Use
The language should provide a low-learning barrier and have clear
concepts and meaning. The concepts should be independent from syntax.
R8. Data persistence
The Web is constantly changing, so it would be useful to know the
lifetime of information. This will be useful for agents to know when
they must refresh their knowledge bases.
Issues:
a) Should this be specified for a fact in a data source, or for a
property in an ontology?
R9. Security
Ability to specify who can view and modify information. Have ontologies
that can specify access control information.
Issues:
a) Web typically doesn't allow update (except via file update) and
viewing web pages is typically all or nothing, so how is this relevant?
b) Some have argued that security is essential and should be seen as a
vertical slice in the "layer cake"
R10. XML syntax
The language should have an XML serialization.
Issues:
a) Must it also build on RDF?
R11. Internationalization
The language should support ontologies in multiple languages.
Issues:
a) Is this already covered by interoperability (R4)?
b) Character set issues are already handled by XML
R12. Ontology-based search
Ability to locate information using the ontology to structure queries?
Or is this something else?
Issues:
a) Is this searching for content (information retrieval) or for valid
inferences (logical deduction)?
R13. Ontology querying
Ability to ask questions about the logical structure of the ontology? Or
is this something else?
Issues:
a) Are R12 and R13 the same requirement? May R12 is information
retrieval and R13 is question answering?
b) Is this maybe the need for a standard query language?
R14. Expressiveness
What can be expressed in the language and what reasoning capabilities
should be expected in systems that fully implement it.
Issues:
a) What is the right balance between expressiveness and scalability
(R6)?
R15. Proof checking
Proofs can be described in the language and will be checkable.
R16. Trust
How to determine which information is reliable and/or believable. Must
be able to know the sources of information and to express what
supporting information is needed to believe something.
Jeff/Deb/all -
A couple of chair comments:
I think you're making a good start on this - in talking w/W3C folks
it is clear that an outcome we'd like to see from this requirements
effort is to be able to say what these reqs say to the language
design - i.e. what will need to go into the language that RDFS won't
do or cover. I think this will mean that from this starting place
this group will need to drill down and work on how these things
really impact the language (example - versioning may require some
specific keywords be in the language ala Jeff's papers on the
subject; ontology interoperability may require something more that
"daml:equivalentTo" etc.
Also while I do get to be the final arbiter w/respect to scope
(according to W3C rules, that is just about the only thing the chair
has any say over!) I'm willing to be convinced that most things that
aren't explicitely forbidden by the charter would be allowable,
although if we stray too far from the charter I suspect the
coordination group will let us know. Looking over what you've all
been doing, I think most of this is in scope, a few things tend
towards gray areas - comments inline below:
No problems with any of these w/respect to scope
I'd never thought of that one before, but the notion of being able to
time tag data is a very interesting one. My only worry is that if it
strays from langauge construct to "temporal reasoner" it goes out of
scope -- i.e. a mechanism allowing facts to be tagged (in general or
for time) is good, a mechanism for specific temporal content and how
to reason thereon probably strays too far.
I think the notion of ontologies that can specify access control info
is out of scope (i.e. it is content specific) -- i.e. stating a
requirement that the language that is expressive enough to allow this
is fine, having the language contain specific security content is
probably out of scope. I tend to agree in general that security must
be built in to the lowest layers, but frankly am not sure how that
plays out against a language definition like ours
R10 is in the charter - so I think it is a definite req (both to have
XML syntax and to be RDF-based, although RDF-based is loosely defined)
I think this is out of scope unless very focused on ontology-specific
issues of internationalization - W3C has other folks
w/internationalization as a specific focus and we don't want to stray
into their area. However, if there are ontology specific issues and
the group wants to address them, I see that as in scope (example, one
word or concept in a natural language might correspond to a set of
content in another - i.e. the verb "stab" in English is expressed as
"give wounds with a knife" in Spanish - one wouldn't be able to use
daml:equivalentTo to map one to the other) similar things would come
up outside the context of internationalization however (example, my
4-wheeled vehicle maps to either your car or truck, but not to all
your transport-devices) and might be better addressed in that context
(perhaps with a pointer to internationalization in the discussion)
Now that I undrstand ontology-based search to be different than
"search engine/IR" level stuff I think it is in scope, but it will
need to be defined carefully as I think many of us were/are confused
as to what is entailed (language-wise) by the content
This is likely to be out of scope (because rules/query are linked in
the list of things we were specifically asked not to do). Honed down
to a what is entailed by the ontology (i.e.is there a particular
inheritance model where something is in multiple classes) it would
come into scope.
Charter has a list that implies we're not going for high expressivity
but also allows some leeway - definitely we want maximal expressivity
that doesn't violate the stuff above - particularly the first 7 or so
(that's the tension)
I think this would be out of scope, except as a use case (i.e.
language can be expressive enough to define proofs)
I think that trust per se is borderline at best, However I think
this, and maybe several of these other requirements, suggest that the
language will need a means of tagging triples - which is an
intriquing idea and one that D+O never addressed (and we may or may
not achieve consensus on - definitely makes the pure triple model
problematic)
Anyway, sorry for going on so long - very nice start, and I look
forward to seeing this drill down towards language needs
-JH
In order to make it easier for people to check up on the latest versions
of the requirements and votes, I created webpages for each.
our current list of candidate requirements and issues. I updated this
list with issues raised by Deborah recently, and with some issues that
came up in the telecon. In addition, I've added a new candidate
requirement (R17. Tagging) as a result of Mike Dean's suggestion during
the telecon.
current vote tabulations. It now include Deborah's votes.
Since everyone supports R1, R2, R6, R7, R10, and R14, I'll assume that
these can be considered final requirements without further discussion. I
think the next step is to begin trying to achieve agreement on some of
the undecided and contentious requirements. These requirements, in
decreasing level of support, are: R3, R5, R4, R13, R15, R11, R12, and
R9. I suggest that we start separate threads to discuss these
requirements (please put WebOnt Requirements and the appropriate
requirement number in the subject). Would a few people care to kick off
the discussion on their favorite requirements in the set? The idea
should be to try to convince the undecided and against voters why they
should support the requirement. Ideally, all of our final requirements
will be supported by the entire group, but we may have to settle for
majority support and no against votes depending on what kind of headway
we make.
Jeff
