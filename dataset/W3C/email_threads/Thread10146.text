I'm a little unclear on proposal C... in
particular, what does it say about what
folks can put in schemas to constrain
an age propoerty to be/look-like decimals?
The 6Sep minutes
cite a 29Aug proposal
which says "The RDF class extension of an rdfs:Datatype
is its value space."
I want to be sure that whatever spec we come up with,
I can continue to use the datatype property idiom...
-- http://www.w3.org/2002/10dc-uk/itin3.rdf
So far, our (published WD) specs have been consistent
with a view that classes and properties are disjoint. (In
SWAD, we use that assumption for lint-style checking.)
The 6Sep decision seems to conflict with the
use of the datatype property idioim under
the disjointness-of-properties-and-classes
assumption.
Draft option C question for discussion at Friday's telecon
This WG resolves
that:
a b "10" .
c d "10" .
entails
a b _:l .
c d _:l .
[[ Possible additions to the resolution
that it reaffirms it previous decision that datatype values can be
represented in the following form:
rdf:Description
foo:bar rdf:datatype="datatype" 10 /foo:bar
/rdf:Description
which is translated into (the final syntax not having been agreed) as:
_:a foo:bar datatype"10" .
that:
a b "10" .
c d xsd:integer"10" .
does not entail:
a b _:v .
c d _:v .
that:
a b "10" .
b rdfs:range xsd:integer"10" .
has no interpretations.
Dan Connolly, W3C http://www.w3.org/People/Connolly/
I was not aware that there was any such assumption. On the contrary,
in fact: the MT has been designed to allow the possibility of a class
and a property being the same. If this is an assumption, maybe we
should reflect it formally in the language. Certainly that would make
the Webont work a little simpler.
Pat
IHMC(850)434 8903 home
40 South Alcaniz St.(850)202 4416 office
FL 32501 (850)291 0667 cell
phayes@ai.uwf.edu http://www.coginst.uwf.edu/~phayes
I guess I wasn't clear. Yes, the MT allows something to be
both a class and a property. I don't mind that.
But it doesn't *require* anything to be both a class and
a property.
So in SWAD, we generally consider it a mistake if you make
something both a class and a property. And we'd rather
not have that sort of heuristic flat out contradicted
by the specs, e.g. if the spec said that dt:date
was a class while we use it as a property.
Dan Connolly, W3C http://www.w3.org/People/Connolly/
We discussed this. It was felt that asking users to distinguish between
two uri's for a datatype, one for the class and one for the property would
be unnecessarily confusing.
The notion that classes and properties were not disjoint has been around
for many months and has found general acceptance. I'm not convinced that
SWAD's lint application is sufficiently strong justification to reopen this.
Brian
Er... it was also felt that confusing the value space with
the mapping is unnecessarily confusing; I'm not sure if that's
part of the discussion you're talking about, since you
don't give a citation, but it is a matter of record:
The proposal treats datatypes as if they were the classes which
conventionally have the same name (eg "integer"), but according to
the XMLSchema spec, they are not."
-- http://lists.w3.org/Archives/Public/www-rdf-logic/2001Feb/0091.html
Which notion, exactly? I see two:
(a) the RDF specs don't guarantee that
classes are disjoint from properties
(b) the RDF specs guarantee that
classes and properties intersect.
(a) has been around for a while; (b) has been with us only
since 6 Sep.
Even in situation (a), some folks can advocate
"keep your properties separate from your classes"
as a best practice (sorta like ala # vs /) while the spec
remains silent on the issue.
With the WG proposing (b), it forces those
of us who advocate keeping properties and
classes separate to object.
I don't think (b) has found general acceptance.
It hasn't found acceptance among the developers
I work with.
Well, perhaps it's not worth re-opening the issue at this
point; we're clearly not going to make everybody happy with
any datatypes design.
But I couldn't let your "everybody thinks this is just fine"
go unqualified.
I'm not sure I'm going to be able to get this design thru
last call without objections from the folks I work with.
Dan Connolly, W3C http://www.w3.org/People/Connolly/
Fair enough.
Have your colleagues considered how the lint program might be adapted to
cope with some exceptions where classes and properties are not disjoint,
e.g. don't issue the warning when its a datatype property? Possible define
a class of properties which are also classes and define datatype properties
to be a subclass of that.
Brian
Dan,
It is my recollection that the idea of datatype URIs being both classes and
properties has been floating around for some time [*], and this is the
first time I've been aware of dissent with it (not counting the message to
rdf-logic as a record of dissent).
I think datatype as class and properties represent current WG thinking, so
if there is a problem with this I think we should hear what that problem is.
[*] a recent reference is:
and from the datatyping draft that was agreed would be the basis for work
going forward:
4. RDF Datatyping Model Theory
The RDF Model Theory explains the fundamental model-theoretic concepts like
interpretation, universe, extension etc. used for interpreting the
semantics of RDF graphs. This section assumes familiarity with these basic
concepts.
Suppose I is an RDF interpretation of a graph E. Then I is datatyped (with
respect to a set D of datatypes) if the following is true for any datatype
URI Reference ddd (with I(ddd) in D):
(1) ICEXT(I(ddd)) = {x : x,y in IEXT(I(ddd))}
I.e. the class extension of the datatype class is the value space of the
datatype.
(2) For any typed literal ddd"LLL", I(ddd"LLL") = L2V(I(ddd))("LLL")
I.e. the typed literal node denotes the datatype value having the lexical
representation "LLL" according to the lexical to value mapping defined for
the datatype ddd
Condition (1) is quite explicit about this.
The same appeared in some of Pat's earlier documents on this subject.
#g
The proposal treats datatypes as if they were the classes which
Graham Klyne
