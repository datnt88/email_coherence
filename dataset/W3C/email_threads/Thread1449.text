Hi,
I also have a couple more points/questions regarding section 8 (labels)....
The last paragraph of the introduction to the LABEL feature (section 8)
seems
out of place. This text is non-normative and talks about distributed
servers
and synchronization which is not discussed elsewhere in the specification.
It seems like the kinda text you would put in an implementers guide or a
specification regarding synchronization between deltav servers. I am sure
that other aspects of deltav would cause synchronization problems in a
distributed server environment. At the London IETF we talked about an
"implementers guide" for deltav, if we have such a document I propose this
section is removed from the draft and placed in the implementers guide.
Also I am not sure I understand why UPDATE (section 8.9) can take two
labels,
one in the header and one in the DAV:label-name element. It seems the
DAV:label-name is used to ensure that the VCR identified by the request URL
has a certain label, it is only mentioned in a Precondition and so it does
not affect the UPDATE, it simply prevents UPDATE on a VCR which has no
versions that have that label. The Label header on this method will cause
the UPDATE to change the VCR to point at the version that has the specified
label. I guess my questions are:
What's the use case for the DAV:label-name element? Why have it at all?
Why does the DAV:must-select-version-in-history precondition only affect the
request URL, for example when you specify a depth should this precondition
not apply to all VCRs that match that depth?
Regards,
Peter Raymond - MERANT
Technical Architect (PVCS)
WWW: http://www.merant.com
(labels)....
seems
servers
specification.
sure
this
That's fine by me (its there because someone asked for that justification
to be added, but I'm equally happy for it to be moved out).
labels,
I think that is a bug.
The Label: header should not apply to an UPDATE request. A label should
only appear in the body (in the DAV:label-name element) of the UPDATE
request. Then the Label: header simply means "apply this method to the
version with the given label in the version history of the
version-controlled resource".
URL
does
cause
specified
I recommend we disallow/ignore the Label: header on an UPDATE request, and
change the postcondition to read:
"(DAV:apply-request-to-labeled-version): If the request includes a
DAV:label-name element in the request body, the content and deep properties
of the version-controlled resource are updated to be those of the version
selected by that label."
the
precondition
You're right, for each version-controlled resource matching the depth
header, UPDATE should select the labeled version in the version history of
that version-controlled resource.
Great feedback ... keep it coming g !
Regards,
Tim
From: Tim Ellison [mailto:Tim_Ellison@uk.ibm.com]
That's fine by me (its there because someone asked for that
justification to be added, but I'm equally happy for it to be moved
out).
Fine by me as well. Unless somebody objects, I'll delete this and
we can add it to an implementers guide.
I think that is a bug.
Yes, definitely a bug ... thanks for catching that, Peter!
The Label: header should not apply to an UPDATE request. A label should
only appear in the body (in the DAV:label-name element) of the UPDATE
request. Then the Label: header simply means "apply this method to the
version with the given label in the version history of the
version-controlled resource".
Yes. This was left over from the days when semantics of UPDATE were
the other direction (i.e. the resource to be updated was in the body,
and the versions to use for the update were specified by the request URL).
I recommend we disallow/ignore the Label: header on an UPDATE request,
and
change the postcondition to read:
"(DAV:apply-request-to-labeled-version): If the request includes a
DAV:label-name element in the request body, the content and deep
properties
of the version-controlled resource are updated to be those of the version
selected by that label."
Yes, that was the intent. I'll make this fix.
You're right, for each version-controlled resource matching the
depth header, UPDATE should select the labeled version in the
version history of that version-controlled resource.
When "the request is applied to all members", the request is
effectively reapplied for each member, which means the "request-URI"
is effectively reset to be the URI for the member to which the request
is currently being applied.
Cheers,
Geoff
