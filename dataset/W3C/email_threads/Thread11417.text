SD1 (short tags). This is trivial for parser writers, but ... error
recovery for missing endtags in WF documents would be effectively error
creation.
The current language definition specifies that there is no tolerance for
missing end tags. If the document is missing an end tag, it is not a
well-formed document and simply cannot be processed.
SD1 (short tags). This is trivial for parser writers, but ... error
recovery for missing endtags in WF documents would be effectively error
creation.
Which is a good reason sometimes to skip the XML application
profile of SGML and use SGML instead. Duh.
len
SD1 (short tags). This is trivial for parser writers, but ... error
recovery for missing endtags in WF documents would be effectively error
creation.
Irrespective of tolerance, the problem is not with a missing end
tag but with a misplaced one.
LISP programmers are very familiar with this issue -- without an
editor that does a kind of autoindenting not possible with XML,
LISP is incomprehensible and unmanageable. We use the Scheme
lanaguage internally at SoftQuad, but without indenting it is far
worse than unindented C...
Andrew, I would suggest that you go and read the archives of this
mailing list, excelt that it's probably too much to cope with in a
single lifetime :-(
Jon: what has changed over the last 9 months or so that has made
this a valid topic to be reopened??
Lee
SD1 (short tags). This is trivial for parser writers, but ... error
recovery for missing endtags in WF documents would be effectively error
creation.
How do you determine at what point an end-tag was missed, though? You
might not know until the end of the document. That makes the user's job
of finding their mistake very difficult.
Paul Prescod
