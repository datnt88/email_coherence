From: Tom Weinstein[SMTP:tomw@netscape.com]
The lack of a general extension mechanism in SSL v3 is a feature, not a
bug. This is a security protocol, and so susceptibility to analysis is
a good thing. Simplicity and rigidity are features here. SSL does
provide for forwards compatibility by allowing version negotiation and
protection from version rollback attacks.
No one is suggesting that complex extra features be added willy-nilly
without careful consideration of their security implications. However,
to neglect to account for possible (and possibly necessary) improvements
in the protocol beyond those that can be addressed by versioning
(particularly possible changes to the first handshake message sent)
would be, in my opinion, sheer reckless hubris. SSL 3.0 currently
lacks, and TLS desperately needs, a mechanism for incorporating such
improvements.
Right now, most of the world still uses a completely inadequate SSL 2.0
client hello, and is forced to play weird nonstandard tricks with what
would otherwise be a perfectly standard PKCS public-key encryption, all
because of SSL 2.0's lack of extensibility. Please, let us learn from
past mistakes.
Daniel Simon
Cryptographer, Microsoft Corp.
dansimon@microsoft.com
From: Tom Weinstein[SMTP:tomw@netscape.com]
The lack of a general extension mechanism in SSL v3 is a feature, not
a bug. This is a security protocol, and so susceptibility to
analysis is a good thing. Simplicity and rigidity are features here.
SSL does provide for forwards compatibility by allowing version
negotiation and protection from version rollback attacks.
This is completely untrue. Although SSL 3.0 does not have a formal
mechanism for extension, such as the X protocol has, it does provide for
compatibility with future versions.
We have. SSL 3.0 supports forward compatibility and has protection from
version rollback attacks. As soon as the world stops supporting SSL
2.0, we will immediately reap the benefits these improvements. Why are
you flogging this dead horse?
You should only break rules of style if you can | Tom Weinstein
coherently explain what you gain by so doing. | tomw@netscape.com
From: Tom Weinstein[SMTP:tomw@netscape.com]
Well, it has been pointed out to me that the latest SSL 3.0 errata sheet
includes the addition of just such a mechanism--to wit:
Section 7.6.1.2
For forward compatibility reasons, it's legal for a client hello message
to have extra data after the compression methods. This data should be
included in the handshake hashes, but otherwise ignored.
This looks to me like exactly what I was looking for. Let's just hope
that the TLS editors are more up-to-date than I am.
When last I checked, it was still alive, but apparently someone killed
it while I wasn't looking. Apologies to all.
Daniel Simon
Cryptographer, Microsoft Corp.
(dansimon@microsoft.com)
