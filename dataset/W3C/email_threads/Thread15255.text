not sure what the accessibility issues might be, but didn't work for me
on mac, only pc with ie6.
have added link to script techs document:
thanks
Jonathan Chetwynd
"A web by people with learning difficulties"
Response to post please!
mouse gestures represents a potential problem similar to pop ups.
perhaps my previous post wasn't explicit enough.
maybe the guidelines already include recommendations, but they aren't
springing to mind.
apologies if so..... especially if my smiley face has some esoteric
meaning I've not taken into account, Judy
please take a look and comment
Jonathan Chetwynd
"A web by people with learning difficulties"
Subject: mouse gestures
not sure what the accessibility issues might be, but didn't work for me
on mac, only pc with ie6.
have added link to script techs document:
thanks
mouse gestures represent a potential problem similar to pop ups.
They do nothing of the sort. Mouse gestures are a user-agent issue. If any
accessibility issues were extant, they would be the domain of the User
Agent Accessibility Guidelines.
I can quite readily see accessibility *benefit* to mouse gestures, which
are already implemented in Opera. I can see certain mobility-impaired,
visually-impaired, or dyslexic persons liking them, for example. And
besides, they're always optional.
As ever, as soon as somebody invents something new, fun, useful, or (most
often of all) attractive, there's an immediate denunciation on this
esteemed List. "Problem." Hardly.
Joe Clark | joeclark@joeclark.org
Author, _Building Accessible Websites_
mouse gestures represent a potential problem similar to pop ups.
Not if they are implemented using client side scripting by a webpage.
David Dorward
Perhaps if you explain your problem, people will be more likely to
understand why they should respond.
I can't see that big of a problem, as long as the keyboard and the
mouse work as usual for typical tasks. Certainly not as big a problem
as popups.
This doesn't interfere with the standard keyboard mechanisms, and
doesn't interfere with clicking except with a click-and-drag operation.
It prevents selecting text and right-clicking on my browser, and it
fails to let me click on the links on the page in Firebird, but that's
just universally bad design. Stupid? Absolutely. Broken? You bet.
Inaccessible? Not necessarily. It would at least pass WCAG 1.0
Checkpoint 8.1 at Priority 1 because the functionality is presented
elsewhere (i.e., within the browser). And the left mouse button can be
ignored when using this script, which should leave regular page
interaction for most users.
I doubt many sites will see any benefit to introducing a feature that
users won't understand, discover or use. Things like popups and CAPTCHA
became a problem because companies had an economic benefit to
implementing them, accessible or not. There is no such benefit to this
"feature." It only does (poorly) with a mouse what is well-implemented
via keyboard shortcuts in the browsers.
Of course, the place to implement gestures is in the user agent, where
the user can configure it, or disable it. The big three browsers
already have mouse gesture support built in or bolted on:
m
Like some others, I really do not see a big accessibility issue with "mouse
gestures" as they can, if properly implemented within a browser, can be
turned off. It seems that an implementation that would NOT disable the
function of the right mouse button would be important but this is really a
user agent issue for the most part). As stated, so long as the function of
the keyboard and mouse are NOT compromised when "mouse gestures" are
turned-off - seems like not such a big deal for most users.
Just my thoughts.
Doyle Burnett
Doyle Burnett
Education and Training Specialist
Multiple Disabilities Program
Special Education Service Agency
dburnett@sesa.org
Www.sesa.org
Matt, Doyle and Joe
David was the only respondent prepared to consider* before shooting
their mouth off, we all make mistakes.....
presumably you're also GB present and appreciated David!
All your further thoughts would be appreciated. it's a long time since
anyone in WCAG put anytime into the script-tech document.
I wrote and edited with the help of Jim and Wendy, and it still has a
long way to go.
Less hot air from you folks and a little more shoulder to the wheel
could be a prayer for the day.
javascript crap is very prevalent, if you don't know this already have
a chat with Jim, or take a look at some of my pages :-)
thanks
Jonathan Chetwynd
"A web by people with learning difficulties"
*I gave a link where javascript is used to implement mouse gestures,
and mentioned that I'd updated the script techs document that I
maintain.
Surely that makes it clear that this is nothing to do with user agents,
or browser implemented mouse gesture.
copy of original mail below:
not sure what the accessibility issues might be, but didn't work for me
on mac, only pc with ie6.
have added link to script techs document:
thanks
WAI-GL crap is also prevalent and more germane to our discussion.
In all fairness to my esteemed colleague, he does glancingly bruise
an important point. WAI needs a much more real-world evaluation of
issues that straddle browsers and content. Pop-up windows; longdesc
handling; user stylesheets; and frame and iframe handling are topics
that come to mind.
WAI's reflex in such cases tends to be simple: BAN IT! even though
none of the people advocating the banning has ever bothered to survey
the existing uses of those technologies, let alone ways to deal with
inaccessibility that do not force authors to rewrite their work the
WAI way.
I certainly agree with Phill's posting:
The whole point of my earlier post was to question the logic of
where to place the burden of removing the barriers, where to place
the burden of doing the transformation?. Options include the author,
the browser+assistive technology (including server side), and the
user's configuration settings in the Operating System/platform.
The only way to accommodate both those who want multiple windows
opened - and - those who need to only have one is for the assistive
technology, browser, and/or the operating system/platform to handle
it. When we place all the burden on the author, by telling her that
she can't use code that opens the help page in a new window, then
everyone unfairly gets the same result.
I do not agree with placing overlapping checkpoints in the various
guidelines. For example if we place a requirement in WCAG to require
the author to tell the user that the link will open in a new window,
and then we also tell the user agent in UAAG to also notify the user
that the link will open in a new window, then what the end users
ends up hearing is: "opens in a new window, opens in a new window"
twice. As a user I can turn off the second announcement, if the
browser and/or assistive technology will allow, but how do I turn
off what the author placed in the content? As an end user I can't go
randomly deleting text, nor is it always efficient to ask the author
to add more notation to conditionally exclude some of the text.
My working philosophy for today is: If we have a chance to offload
what would otherwise be a Web Content Accessibility Guideline onto
one of the other guidelines, let's do it. WCAG WG tends to screw up
more than the other working groups do. WCAG WG also seems less
clueful about the Web, and more contemptuous of it, than the other
working groups. The more we let other working groups handle these
issues, the fewer problems we'll have after everyone's guidelines are
frozen and published.
Joe Clark | joeclark@joeclark.org | http://joeclark.org/access/
Author, _Building Accessible Websites_ | http://joeclark.org/book/
Expect criticism if you top-post
I can't promising anything at this time, but hopefully in the future I
may be able to contribute... it is my wish and intention at least.
Geoff
