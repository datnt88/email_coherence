Are there any plans for the DOM Level 2 to allow access to the CSS
properties of a specific element? The DOM Level 1 hinted at this in a
comment [1] that the style attribute of the HTMLElement interface was
reserved for future use. Could this style attribute be of type
CSS2Properties [2]? (Yes, I know that limits the style language.
Perhaps there should be access to the Content-Style-Type first set by a
META or HTTP header. But then the property names are messy. Would
part of it be better off being a function that adds a declaration to a
STYLE attribute?)
The specificity of a rule created through such an interface, should
probably be the same as if it were a STYLE attribute. See my post [3]
on why the specificity of the STYLE attribute should be changed (to
the way it is implemented in browsers).
David
[1] http://www.w3.org/TR/REC-DOM-Level-1/level-one-html.html#ID-011100101
[2] http://www.w3.org/TR/WD-DOM-Level-2/css.html#Level-2-CSS-extended
[3] http://lists.w3.org/Archives/Public/www-style/1999Feb/0001.html
clarified in
L. David Baron Freshman, Harvard dbaron@fas.harvard.edu
Links, SatPix, CSS, etc.  http://www.fas.harvard.edu/~dbaron/
WSP CSS AC  http://www.webstandards.org/css/
Why not just have it take a string value, the same way the STYLE attribute
does?
Yup.
What we're really missing here is a binding between a scripting language and
the style sheet. The DOM, as it stands, provides dynamic documents. Is there
a demand for dynamic style sheets? Is there a place for
@script(stylemebaby.js);
in the new world order?
I'm not claiming the answer's "yes", but given browser developers'
initiative in shoehorning a CSS-esque syntax into their DOM implementations
(where I think it *really* doesn't belong), I think the question bears
asking.
Braden
On Thu, 18 Mar 1999 02:17:34 -0500, "Braden N. McDaniel"
From: L. David Baron dbaron@fas.harvard.edu
Sent: Thursday, March 11, 1999 3:17 PM
Subject: Access to element styles?
You might want to set/get individual properties.
But actually, the STYLE attribute part is already taken care of (in
section 4.4.2 of the 1999-03-04 draft), by the style attribute of
HTMLElement2 [1].
So I guess what I really meant to ask about was whether there would be
some way te get (but there would be no need to set) the current
cascaded style on any element. One could do the setting through the
style attribute [2], but might want to see the current cascaded value
through something like currentStyle (as I believe MSIE implements). If
it would be too difficult to make the values within currentStyle
readonly, then setting currentStyle could be made equivalent to setting
style.
I worry that saying style is of type CSSStyleDeclaration is too
CSS-specific. But I don't know how else to provide the same features.
One final note: the parentRule attribute of CSSStyleDeclaration should
probably be defined as being null if the parent is not a CSSRule.
David
[1] http://www.w3.org/TR/WD-DOM-Level-2/css.html#Level-2-CSS-htmlelement2
[2] but, as I've said before, it would be nice if it had a specificity
of 1000. See the references and comments of my previous post:
L. David Baron Freshman, Harvard dbaron@fas.harvard.edu
Links, SatPix, CSS, etc.  http://www.fas.harvard.edu/~dbaron/
WSP CSS AC  http://www.webstandards.org/css/
----- Original Message -----
From: L. David Baron dbaron@fas.harvard.edu
Sent: Thursday, March 11, 1999 3:17 PM
Subject: Access to element styles?
a
attribute
Good point. It does seem like too much to ask to expect script authors to
parse a string for this information.
Yes, I found that after making my previous posting.
Me too.
I remain of the opinion that a better model would forego this direct
manipulation of styles on elements altogether, in favor of an exclusive
binding of the scripting language to the style sheet. Thus script has the
ability to modify only the stylesheet itself at runtime. The style rules
applied to an element can be modified in the document by changing the
element's class or id at runtime.
These techniques could be consolidated in a behaviors syntax similar
philosophically (but different syntactically) to Netscape's CAS. It is
unfortunate that the current description of CAS is tied to the CSS style
mechanism.
Braden
