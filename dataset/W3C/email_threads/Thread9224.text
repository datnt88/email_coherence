Another attempt after previous threads:
RDF M&amp;S provides valid (if rather unclear) definitions of how to
interpret an rdf:ID in a propertyElt in two cases, when the element
is empty / non-empty. This answers the issue which asked why both ID
and resource were not allowed on an empty element - there is a
reason, and I point to it in the previous message.
I feel that changing this definition to make it consistent with other
parts of the syntax is not a good enough reason given that existing
parsers may have implemented it.
However, I have thought of another problem. XML parsers (I think) are
not required to let applications distinguish between:
and
The only reference I can find to it is:
Appendix D: What is not in the Information Set
7. The difference between the two forms of an empty element: foo/ and foo /foo .
-- XML InfoSet http://www.w3.org/TR/xml-infoset/#omitted
In at least two common XML X parsers I have used (expat and libxml),
these cannot be distinguished, they both return the same two
events/callbacks: start element, end element.
Since many systems use these as the standard XML parsers (this
includes Perl, Apache, Python, GNOME) they thus may not be able to
distinguish
and
so RDF applications of these systems cannot make any decision based
on this either.
I feel that if this impacts any part of the RDF syntax that has a
dependency on the distinction, it should be changed - and that
includes this case. This is a much better reason to change
- cannot be implemented in practice.
For this reason I would propose that we make a change here that is
implementable and consistent with the outcome of the
Issue http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements
owned by Jan Grant.
and this issue should be on hold until that one is resolved.
Over to you Jan...
Dave
We're all in agreement here (as far as I can tell) that the two forms
above should have the same interpretation (this has been made more or
less explicit by various people).
This kind of led to the suggestion that an RDF grammar should be given
in terms of the XML infoset rather than a BNF grammar producing a stream
of characters. Certainly coping with empty elements explicitly wherever
they might crop up in the current grammar would obfuscate it (in my
opinion). And we'd have no future-proofing when XML-foo invented
something useful that we wanted to take advantage of when serialising
RDF as XML.
Perhaps we might stick with a simple grammar for serialised RDF and
include something to the effect:
"any stream of XML tokens that is equivalent to this
serialisation (wrt. {a subset of the XML infoset})
is also a valid serialised form, and should be
interpreted equivalently."
jan grant, ILRT, University of Bristol. http://www.ilrt.bris.ac.uk/
On modesty: whoever said "it's hard being perfect" obviously wasn't me.
If anyone has pointers to grammars that are "in terms of the
XML infoset [rather than a BNF grammar producing a stream of
characters]", please send them to me.
Thanks,
Art
