Roy T. Fielding:
My response is that I don't care -- CGI authors will need to do at least
that much work, if not more, to ensure that the POST action is indeed
safely repost-able,
Nonsense. Many POST actions are safe by nature, and if POST is to be
used for i18n, many more will be. Examples are POSTs to search
engines and to HTML checkers with a forms interface.
I have no interest in discussing any lesser issue
I don't think i18n is a lesser issue.
were already defined to do the same thing.
So tell me where to look for the existing definition of `rel=source',
like I asked. I might even copy it into the `safe: yes' ID.
I don't see any reason to standardize something that is no more than a
midnight hack, at least until someone convinces the midnight hackers
out there to implement it. Either way, it isn't something I'm willing
to spend time on, nor is it necessary for me, or even the IETF, to approve
of something before it is implemented in practice.
_Some_ headers can be deployed without IETF action, but `safe: yes' is
not one of them. As long as `safe: yes' is not approved by the IETF,
any browser which uses it as a license to treat a POST as safe would
be clearly non-conformant to the 1.1 protocol.
Your last point, Koen, is the bottom line. If Roy refuses
to make clear how his intellectual midnight hack could actually be
made to work in the real world, and no header like Safe is added to
the Standard, then even the vendors who don't really care about IETF
standards may be reluctant to deploy because of possible legal
repercussions.
Fote
Foteos Macrides Worcester Foundation for Biomedical Research
MACRIDES@SCI.WFBR.EDU 222 Maple Avenue, Shrewsbury, MA 01545
This issue has nothing whatsoever to do with i18n. i18n does not
*need* to use POST requests any more than non-i18n activities need
to use POST requests, and if you folks would stop knee-jerking every time
the subject was brought up you might get a little more accomplished.
Both Link and rel=source are very old (pre-1992) and well understood.
What they lack is a complete specification, and even that is only because
people become preoccupied with midnight hacks instead of long-term design.
If you want to standardize a midnight hack, go ahead, but stop insisting
that I respond to your questions about it. If you want to standardize Link,
then I will help.
As I said before, I see no need for it because there is no *problem*.
Getting a warning message about reposting a POST is an inconvenience,
not a problem. Being unable to bookmark POST input-data is a user agent
implementation issue, not an HTTP problem (and can be solved via Link
or usage of 303).
As for refusing "to make clear" how to do it, that's your problem.
Take the specifications and design notes already provided by TimBL
and two IETF WG's (HTML and HTTP), write down the solution, implement it,
and then standardize the implementation. If I had the time to do it,
the work would have already been done. I don't have that time.
So, like Larry said, this discussion should be closed until someone
does the work necessary to define and solve the problem in the form
of an ID. How much work to put into it, and the scope of the problem
that is actually solved, is up to you.
...Roy T. Fielding
Department of Information &amp; Computer Science (fielding@ics.uci.edu)
Correct, though I18N does need message bodies for correct labelling
of submitted data.
Do I always jerk my knees?
