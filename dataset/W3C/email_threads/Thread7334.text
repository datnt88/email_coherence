I finally have enough time to report on the activities of the WEBDAV group
over the month of December. Here is my first pass at minutes from the IETF
meeting. Please send comments/corrections on these minutes to Jim
Whitehead ejw@ics.uci.edu .
- Jim
WWW Distributed Authoring and Versioning (WEBDAV) BOF Meeting Minutes
San Jose IETF Meeting
December 11, 1996, Reported by Jim Whitehead (U.C. Irvine)
Jim Whitehead, U.C. Irvine chaired the meeting.
The BOF on WWW Distributed Authoring and Versioning (WEBDAV) was held on
Wednesday, December 11, 1996, from 09:00-11:30, with 79 people in
attendance over the duration of the meeting. Jim Whitehead presented an
overview and history of WWW Distributed Authoring and Versioning, including
information on how to become involved in the work of the DAV group, which
was followed by a detailed presentation on the current Distributed
Authoring and Versioning (DAV) functional requirements.
During the presentation of the DAV functional requirements there was lively
discussion on many points:
LOCKS.
Meeting participants expressed the opinion that remote lock administration
functionality is needed. At present, there seems to be an assumption that
the webmaster will perform this lock administration role, which could
become onerous if there are many active locks. There was some discussion
on whether lock timeouts would help address the lock administration
problem. Several comments addressed the need for some authentication
technology to be used to identify and validate the user or agent operating
on a lock. Existing HTTP authentication schemes (basic, MD5) were
discussed in this context, and there was a suggestion that public key
technology should be investigated for this use. There were some questions
concerning what error codes and conditions might result from locking
activities. Several participants stated that it would be helpful to have a
model of access control which matches the locking model. It was observed
that the proposed "read lock" was really a convenience access control
function to modify the read permissions on a resource, and that a read lock
might not really be a lock.
MOVE.
There was a thread of discussion concerning how intelligent an operation
"move" should be. Some participants felt that HTTP should recognize the
special nature of HTML media types, and automatically perform some link
maintenance on links which are broken by a move. This intelligent move
operation was referred to as a "magic move." Three link cases were
identified: 1) links to a resource, 2) links from a resource, and 3) links
within a resource. While it is impossible to correct all links pointing to
a resource (since in general you do not know or have control over all of
the links pointing to you), it is conceivable that links from a resource,
and links within a resource might be corrected. Also, it might be possible
to correct all links in documents that you do have control over (such as
the documents on a single server). However, some participants expressed
serious concerns over allowing a move operation to have side-effects which
could modify the resource being moved, or even modify resources which were
not being moved. These participants stated that what was most important
was being able to know exactly what the consequences of an operation would
be before executing the operation. As a result, each DAV operation must
have precisely defined semantics. Finally, it was noted that this
discussion had some similarity to the symbol table and link table issues
which occur in compiler/linker development.
MISCELLANEOUS.
There was a recommendation that the DAV protocol be supportive of links to
a discussion forum, so that remotely authored documents could be embedded
in an issue discussion space, or a rationale space. One participant
recommended that even if the DAV group is not planning on developing
DAV-specific authentication or security technologies, that we should still
develop requirements by which authentication or security technologies can
be assessed for their usefulness to DAV activity. It would also be helpful
to develop the hooks necessary to use some existing authentication and
security technologies. There were recommendations of
related protocols and systems to investigate: Andrew File System (AFS),
Internet Message Access Protocol (IMAP), and Application Configuration
Access Protocol (ACAP) were recommended to be examined for their models of
access control.
FORM WORKING GROUP.
At the end of the session, the attendees were polled on whether they
thought it would be worthwhile for the IETF to work on WWW Distributed
Authoring and Versioning. Overwhelmingly, the attendees thought the IETF
should pursue work in this area (the vast majority were in favor, with 2-3
opposed, and a handful of abstentions).
*** Meeting Adjourned ***
More generally, I believe there was discussion regarding whether
sufficient distinctions were being made within the DAV effort
between access control functionality (designed to ensure changes
are made by those who have permission) and database locking
functionality (designed to ensure the logical integrity and
consistency of all operations performed on possibly changing
information).
(For a SQL Server perspective on definitions for various kinds of
locks, see the answer to question 6.3 of the Sybase FAQ, at e.g.
This highlights the tension between the authoring and versioning
communities represented at the meeting. From an authoring perspective,
these "assisted move" operations will be required functionality of
any competitive product. From a versioning perspective, assisted move
operations appear as compound operations requiring the renaming of one
document in a repository and the simultaneous modification of several
others.
Combined with the uncertain WEBDAV terminology regarding locking (and
assisted moves would require locking, yes?) this lead some attendees
to express skepticism about WEBDAV's chances for success in this area.
I was opposed specifically because it seemed the tension (conflict?)
between the authoring and versioning communities made the formation
of a joint working group less likely to achieve ietf objectives than
e.g. the formation of separate working groups.
Both in the context of web content development and elsewhere,
it might be beneficial to have "versioning aware" authoring
tools, without having those authoring tools attempt to provide
a complete set of versioning functionality. For example, how
many users of e.g. Microsoft Word attempt to use its internal
versioning capabilities for anything more than casual use?
Sean Shapira sds@jazzie.com +1 206 443 2028
Agreed. I'll clarify this in the minutes.
I also agree that our locking was blurring the distinction between access
control and serialization control. This was partly intentional. While I
personally believe that defining a Web access control scheme would be very
beneficial to the DAV activity, I also know that developing such a scheme
would significantly delay the development of a DAV protocol specification.
Hence there was an early decision not to explicitly address access control,
at least in the first rev. of this working group's activities. Given this,
the "locks" initially proposed can be viewed as both locks, and a simple
access control scheme. The initial locking proposal has since received
significant critical attention, much of it negative.
At the recent Design Team meeting (notes from this meeting are currently
being revised prior to being posted to the list) a decision was made to
limit the scope of locking activity specified to only exclusive write
locks, which can exist on either partial resources (byte ranges), or whole
resources. The semantics of a write lock is that only the owner of a write
lock may modify the locked resource. Locking is now completely orthogonal
to access control, so it is entirely possible (but useless) to have a write
lock on a resource on which a user does not have write permission.
The question is really whether "assisted" | "magic" move should be in the
HTTP interface to the repository. I totally agree with you that assisted
move should be in the *user* interface of an authoring tool. However, I
think the burden of proof rests on you to explain why assisted move should
be part of the semantics of MOVE, especially since HTTP is an
object-oriented protocol, and hence the scope of almost all methods is the
resource to which they are addressed. Having side-effects on other,
non-specified resources seems very undesirable from both an authoring and a
versioning standpoint. When a user requests an operation, they need to
know exactly what action will take place, and which resources will be
affected. Failure to do this will result in a lack of user understanding
and confidence in the functionality.
- Jim
Agreed. But perhaps examining a trivial assisted move example would
help highlight the relationship between assisted moves and locking?
Consider the case where foo.html and bar.html comprise the entire set
of documents under DAV control, and the text of foo.html includes an
"href=bar.html". An author decides it would be better if bar.html
were renamed bat.html, and indicates an intent to make this change via
some intuitive user interface. A sequence of operations to achieve
this objective might include:
1. Rename the bar.html object (including its version history) to
bat.html.
2. Update the foo.html object so that the text of its current
version includes "href=bat.html" in place of "href=bar.html".
3. Create an object which ensures that http requests for bar.html
are redirected to bat.html.
If any of these operations fail while others succeed, the user will
be unhappy with the result, so the client needs to ensure the server
performs them in a way such that either all the operations succeed
or all the operations fail. Does that match the concensus view of
the WEBDAV community?
Jim makes a convincing case above ("the scope of almost all methods
is the resource to which they are addressed") that these should be
handled by the client as 3 separate operations rather than hiding
them within the server.
So does current WEBDAV thinking have the client explicitly employ
some sufficient set of locking mechanisms to ensure the success of
all three operations (as a naive reading of draft-goland-http-
webdav-00.txt might seem to indicate), or does the client use
transaction-oriented operations (e.g. begin transaction, commit
transaction, abort transaction) for this?
Sean Shapira sds@jazzie.com (206) 443-2028
This has been an area of open debate. We all realize that we are getting
dangerously close to creating a transaction oriented system. Our current
solution is to take all three commands and wrap them in a
message/multi-part w/the atomic switch activated.
However it should be pointed out that currently there is no way for the
user to perform the third action. We do not support redirect in DAV.
This decision was made at the last technical meeting. So the best the
user could do w/DAV is send an atomic message/multi-part locking the two
files. Then send two messages making appropriate changes. The
redirection would have to be performed through another mechanism.
Yaron
From:sds@jazzie.com [SMTP:sds@jazzie.com]
Sent:Tuesday, January 07, 1997 5:05 PM
Subject:Assisted Moves and Lock/Transaction Handling
