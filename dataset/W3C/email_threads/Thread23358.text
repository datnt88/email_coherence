Hi,
setAttributeNS() and friends with similar parameters has text to stricly
forbid a qName with a prefix for a null nsURI, but nothing on whether it
is legal to use it with a defined nsURI, and a qName that doesn't
contain a prefix part.
Most implementations seem to accept it, and then fail to serialise it
properly. Some rightfully complain that you can't have a namespace URI
on an attribute that doesn't have a prefix. This is a sorry state of
affairs :)
So it would be nice to see it resolved either way: either it is clearly
flagged as an error, or it is clearly allowed, with indication of how
the implementation may produce the prefix (not overwriting the one of
that attribute if it exists, using a prefix in scope if there's one,
generating one).
Or have I missed something?
Robin Berjon
Sure it is. For example, the element in ' a xmlns="a"/ ' has a non-null
namespaceURI but no prefix. It must be possible to create the element by
DOM methods without having to create the namespace declaration attribute.
Up until DOM Level 3, there was nothing to say how (if at all) namespace
fixup should be done in this case. This is better defined in the latest
specs (dependent on the value of the 'namespaces' parameter to
DOMConfiguration, an imp might be expected to do the fixup on serialisation
and/or normalisation), with a suggested algorithm, so imps should hopefully
become more standardised on this issue.
See http://www.w3.org/TR/2003/CR-DOM-Level-3-Core-20031107/namespaces-algorithms.html
Andrew Clover
True, and the spec does mention xmlns but as a special case (which it
is, I surely hope no other prefix-less attribute can be considered to
have a namespace in XML :) I didn't find it clear from the text that
setting a nsURI and no prefix was allowed.
Yes, I'm not at all worried about that part which so far I've found rosy
and fairly straightforward to implement.
Thanks!
Robin Berjon
Yes, Namespaced *attributes* do indeed require prefixes in XML syntax
(there's no "default namespace" for attributes).
But attribute nodes in the DOM do not require prefixes.
When serializing namespaced-but-not-prefixed attributes from DOM to XML
syntax, the serializer must fix this up. See the Level 3 working draft for
its algorithms; if you're working with an earlier implementation of the
DOM, you can and should implement those or something equivalent in your own
serializer code.
Joe Kesselman, IBM Next-Generation Web Technologies: XML, XSL and more.
"The world changed profoundly and unpredictably the day Tim Berners Lee
got bitten by a radioactive spider." -- Rafe Culpin, in r.m.filk
Ah! I see what you mean properly now. :-)
As I read it, the prefix of an Attr node is, in the face of namespace
normalisation, not fixed, so it makes sense that a non-namespace-well-formed
situation (namespace w/ null prefix) should be allowed to exist temporarily
- it could be used by authors to create attributes in a namespace without
caring what prefix will later be used in the serialisation.
My interpretation, anyway.
Andrew Clover
Yes, I agree that having the prefix as an indication of what the author
would like to see used that may eventually be something different (if
two attributes with the same prefix but different namespaces are set on
the same element) or that may be absent to let the implementation make a
reasonable choice is a good feature. But as you say, the text around the
method more or less leaves that up to interpretation, having it spelt
out would be nicer and more conducive to interoperable implementations.
Robin Berjon
I've logged bug 444 (http://www.w3.org/Bugs/Public/show_bug.cgi?id=444)
to the DOM TS to address the issues that were raised in this thread.
The existing L2 Core tests elementsetattributens01 and 03 appeared to
cover using a non-null namespace and a non-prefixed qualified name in
memory on a call to Element.setAttributeNS. I added DOMWriterTest5 and
6 to check serialization of attributes added in this manner.
The definition of qualified name, according the DOM glossary:
A qualified name is the name of an element or attribute defined as the
concatenation of a local name (as defined in this specification),
optionally preceded by a namespace prefix and colon character.
A qName may therefore contain a prefix when used with setAttributeNS().
Your case is a serialization issue. DOM Level 3 Core doesn't say
anything about the serialization of a DOM tree but it does have an
algorithm to do namespace fix-up, which is also used by the LSSerializer
of DOM Level 3 Load and Save, to deal with your case:
if ( Attr[i] has a namespace URI )
if ( attribute has no prefix (default namespace decl does not apply to attributes)
OR [...])
if (namespaceURI matches an in scope declaration of one or more prefixes)
// pick the most local binding available;
// if there is more than one pick one arbitrarily
== change attribute's prefix.
else
if (the current prefix is not null and it has no in scope declaration)
== declare this prefix
else
// find a prefix following the pattern "NS" +index (starting at 1)
// make sure this prefix is not declared in the current scope.
// create a local namespace declaration attribute
== change attribute's prefix.
In other words, it is not an error, and a new prefix will be generated
and declared by the implementation if necessary.
Philippe
