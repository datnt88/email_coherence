I've recently taken ownership of Office and FrontPage's compliance to the
WAI Authoring Tools guidelines. I will be attending the authoring tools
working group meeting on Sunday March 26, but I have some concerns about the
Web Content guidelines that I was hoping this working group could address.
Microsoft has publicly announced its dedication to creating and supporting
Microsoft Active Accessibility (MSAA) as the standard for communication
between applications and accessibility related software. Rob Sinclair, of
the Microsoft Accessibility and Disabilities Group, is currently working
with accessibility software vendors to define the next version of MSAA that
is scheduled to include text and table support for all windows applications.
The Web Content guidelines 5.1 and 5.2 describe how data tables should be
correctly marked up to enable "Future browsers and assistive technologies
[to] automatically translate tables into linear sequences or navigate a
table cell by cell if data is labeled appropriately." Does this imply that
accessibility software vendors will be required to support MSAA (to access
information from non HTML applications) and the HTML object model defined by
the W3C?
Web Content guideline 6.3 "Ensure that pages are usable when scripts,
applets, or other programmatic objects are turned off or not supported..."
does not allow for the fact that scripting can be used without creating
dynamic client side pages.
Microsoft Office 2000 made a strong commitment to its users by not requiring
IE 5 to be used to view its HTML output. Most Office users live in a mixed
browser environment, and cannot rely on users to have the most recent
browser. Web Content guidelines 5.3 and 5.4 specifically asked authors to
avoiding using tables for layout, regardless of the benefit of using tables
for down level browsers and localization (when leveraging automatic text
layout within tables). The techniques document section 4.5.2 "Avoid tables
for layout" suggests that the user use style sheets for layout, positioning,
and all formatting, which would require a level 4 browser or above and
additional localization costs. The fact that tables are being so widely
used to support down level browsers and to simplify localization efforts,
further emphasizes the need for a global text and table solution that does
not rely on linearizing tables.
I became aware of, and interested in, the Web Content working group because
the Authoring Tools guidelines directly point to several Web Content
guidelines. I strongly believe that the role of an authoring tool is to
make it easier for the user to create great HTML. I define great HTML as
accomplishing the users objectives, readable by the users target browser,
and of course accessible. The largest difficulty Office, and other HTML
authoring tools, will have complying to the WAI's guidelines will be
handling users that do not know or care about accessibility. The current
Web Content guidelines do not take into account that authoring tools will
need to supply most of this information for the author, and without the
author's knowledge. Again discussing Web Content guidelines 5.1 and 5.2, it
will be impossible to be 100% accurate in guessing what the row and column
headers should for all tables, and when an authoring tool guesses wrong we
will create a scenario that is worse than having done nothing (the author
will feel that their page is accessible, not tool will be able to auto
detect the mistake, and the end-user suffers). Both the Web Content and
Authoring Tools working groups need to account for an imperfect user.
Summary of issues:
1) Web content guidelines, in regards to tables, do not fit with current
efforts to address accessibility software vendors' needs for a global (not
just HTML) method to access text and tabular information.
2) Web Content guidelines should not condemn scripting just because it could
be used to create dynamic content.
3) Web Content guidelines and techniques need to address down level browsers
and localization usage of tables.
4) In general, the Web Content guidelines appear to assume an author with
perfect knowledge of accessibility.
My objective for writing this alias and participating in any further
discussions on this subject is to make you aware of and help you to address
the concerns product developers (specifically FrontPage and the rest of
Office) will have with your guidelines. If it's appropriate I could attend
the WAI Web Content guidelines meeting on March 20th in Los Angeles.
Thank you,
Heather Swayne
Program Manager
Microsoft Accessibility and Disabilities Group
Microsoft Office Liaison
Heather,
Your note announcing your role in the MS Office authoring tools caught my
eye. Others will answer your questions about tables, but I'd like to make
some suggestions to simplify user's ability to make compliant pages.
First, and most critical, would be to allow the user of Publisher to be
able to access the HTML code after a page has been saved to HTML and the
code has been created. At present, in order to add alt tags or otherwise
massage the HTML, it is necessary to leave publisher, pull the completed
page up in Front Page and add or delete code there. Everytime the page is
updated, this massage in Front Page must be repeated. Publisher, in
creating the HTML now renames all graphics as img0, img1, img2, etc, so
that it is necessary for that massage to complete even the simpliest
compliance to the guidelines. Further, Publisher makes frequent use of a
blank image for spacing, which means that this massage is frequently
necessary. Another problem is that Publisher will automatically create an
image of a text box that is either on top of any part of an image, and this
conversion isn't apparent until it's brought up in Front Page so that the
user has to add the text embedded in the new image in the alt tag. Again,
requiring a high level of knowledge and massaging in Front Page.
Both Front Page and Publisher would be easier to use if, when a graphic or
other file (such as a sound file, etc.) were inserted, a screen appeared
where the user could insert the alt tag, and perhaps a properly set up Long
Desc. You cannot add an alt tag at all from Publisher, and in Front Page
you have to know to pull up the "image properties" in order to get the
screen to correct the alt tag from just showing the file name and size.
While I'm discussing graphics in the MS authoring tools, let me add a
suggestion I will make to the group more formally after there is better
acceptance of the necessity of graphics on the web. There should be an easy
way to provide full sized graphics that can be reached by clicking on a
small version of the image on the page. This is a benefit not only to
cognitively disabled folks who need graphics for understanding, but to
those of limited vision who can enlarge text but not graphics in the
current browsers.
It would be great if the authoring tools would re-sample the graphic to
the size the user sets WYSIWYG in Front Page or publisher, creating the
small image so that the page can load quickly, but preserving, and either
automatically linking to the full sized image or offering the author the
choice to do this or not.
A few weeks ago the county schools I work for signed on with Family
Education to put their web pages on the myschoolonline.com server, and, in
order for this to be used to full advantage, teachers, some with minimal
computer skills, need to learn to make web pages without adding
substantially to their time or overburdening their learning curve. The
company provides an online way to create basic text messages on pages,
simple announcement or a substitute "form" to print and send to school
(e.g. trip permissions) when the original was lost on the bus. The training
included learning to use Word to create pages offline, and Front Page works
well too. Publisher cannot be used, despite its advantages in placing text
and graphics, because you can't get at the source code to copy and paste it
to the site.
If these suggestions are already "in the works", I will be happy to pass
on that fact to those of us who will be training to teachers to use this
new resource for communicating with parents and community. Thanks for your
time in considering these suggestions.
Anne
Anne L. Pemberton
apembert@crosslink.net
Enabling Support Foundation
Heather,
thank you for your comments. My responses are sprinkled in marked CMN.
The Web Content guidelines 5.1 and 5.2 describe how data tables should be
correctly marked up to enable "Future browsers and assistive technologies
[to] automatically translate tables into linear sequences or navigate a
table cell by cell if data is labeled appropriately." Does this imply that
accessibility software vendors will be required to support MSAA (to access
information from non HTML applications) and the HTML object model defined by
the W3C?
CMN The area which determines what should be done by software is the User
Agent guidelines. They require that standard platform APIs (in windows this
would mean MSAA among others) and W3C DOM are implemented by User Agents
(both browsers and assistive technologies) for providing access.
HS
Web Content guideline 6.3 "Ensure that pages are usable when scripts,
applets, or other programmatic objects are turned off or not supported..."
does not allow for the fact that scripting can be used without creating
dynamic client side pages.
CMN Can you clarify this comment? As I understand it, you are pointing out
that it is possible to do things like client-side validation or processing of
forms. In this case it is important to recognise that there are user agents
which do not support client-side scripting, and will not be able to use the
pages unless thre is some server-side equivalent of the functionality.
HS
Microsoft Office 2000 made a strong commitment to its users by not requiring
IE 5 to be used to view its HTML output. Most Office users live in a mixed
browser environment, and cannot rely on users to have the most recent
browser. Web Content guidelines 5.3 and 5.4 specifically asked authors to
avoiding using tables for layout, regardless of the benefit of using tables
for down level browsers and localization (when leveraging automatic text
layout within tables). The techniques document section 4.5.2 "Avoid tables
for layout" suggests that the user use style sheets for layout, positioning,
and all formatting, which would require a level 4 browser or above and
additional localization costs. The fact that tables are being so widely
used to support down level browsers and to simplify localization efforts,
further emphasizes the need for a global text and table solution that does
not rely on linearizing tables.
CMN THe problem with relying on tables is that there are accessibility
solutions inwide use which do not satisfactorily linearise tables into
something which preserves the meaning defined by the layout. Therefore, using
tables to provide this meaning is an accessibility problem. The WCAG solution
is to require that content is made in a form where the semantics do not rely
on the layout of the content, but are expressed in the markup.
HS
I became aware of, and interested in, the Web Content working group because
the Authoring Tools guidelines directly point to several Web Content
guidelines. I strongly believe that the role of an authoring tool is to
make it easier for the user to create great HTML. I define great HTML as
accomplishing the users objectives, readable by the users target browser,
and of course accessible. The largest difficulty Office, and other HTML
authoring tools, will have complying to the WAI's guidelines will be
handling users that do not know or care about accessibility. The current
Web Content guidelines do not take into account that authoring tools will
need to supply most of this information for the author, and without the
author's knowledge. Again discussing Web Content guidelines 5.1 and 5.2, it
will be impossible to be 100% accurate in guessing what the row and column
headers should for all tables, and when an authoring tool guesses wrong we
will create a scenario that is worse than having done nothing (the author
will feel that their page is accessible, not tool will be able to auto
detect the mistake, and the end-user suffers). Both the Web Content and
Authoring Tools working groups need to account for an imperfect user.
CMN The authoring tool guidelines explicitly state, and implicitly recognise
through guideline 6 (about documentation of accessible authoring) and other
places, that there are things which cannot be completely automated, and will
require the author to do some things - hence the requirement for prompting
for alternative content, for example.
HS
Summary of issues:
1) Web content guidelines, in regards to tables, do not fit with current
efforts to address accessibility software vendors' needs for a global (not
just HTML) method to access text and tabular information.
2) Web Content guidelines should not condemn scripting just because it could
be used to create dynamic content.
CMN I do not think the guidelines do this. They simply require that the use
of scripting not be relied on (on the client side) and some other method be
also provided.
HS
3) Web Content guidelines and techniques need to address down level browsers
and localization usage of tables.
4) In general, the Web Content guidelines appear to assume an author with
perfect knowledge of accessibility.
CMN The guidelines do not presume perfect knowledge, but attempt to describe
all the requirements which must be met for an author to be confident that
they have produced accessible content.
HS
My objective for writing this alias and participating in any further
discussions on this subject is to make you aware of and help you to address
the concerns product developers (specifically FrontPage and the rest of
Office) will have with your guidelines. If it's appropriate I could attend
the WAI Web Content guidelines meeting on March 20th in Los Angeles.
CMN Thank you for the comments. THe registration for the meeting has closed,
but there will be some discussions which it may be helpful for you to attend
- for example the question of what is the bottom line of requirements we can
expect from browsers. To attend, you will need to contact Wendy Chisholm -
wendy@w3.org - who is the staff contact for the working group.
regards
Charles McCathieNevile
Anne,
thank you for your comments. As these are more directly related to authoring
tools than to Web Content requirements per se, I have forwarded them to the
Authoring Tools Working group, and would request that further discussions
take place in that group.
cheers
Charles McCathieNevile
Heather,
Your note announcing your role in the MS Office authoring tools caught my
eye. Others will answer your questions about tables, but I'd like to make
some suggestions to simplify user's ability to make compliant pages.
[snip]
