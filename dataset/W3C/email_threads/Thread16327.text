Hi,
Blind people and sighted people may work with web pages in very different ways
from each other. Some of these differences are:
1. Both sighted and blind people need to get a sense of context from
each page. A sighted person can quickly scan to see what the page
is about. A blind person has to more grope through the page
to get a sense of what is there in order to get a better understanding
of the context. This approach is slow and cumbersome. Also,
a blind person may jump to a conclusion to early. What would
be helpful is being able to hit a key and a summary of the page
appears in a pop-up box.
2. Sighted people need more layout to understand the information.
Usually, this is done with tables. However, tables can be
create confusion for blind people. A more linear form is often
preferable for blind users.
3. Searching in a web page is much slower for blind people than sighted.
If the page is new, knowing what to search for is harder.
The page should be designed to help minimize the need to search.
4. Jumping back and forth on a page is much easier for sighted people
than blind people. The page should be structured to minimize
the need for that.
5. If the access keys are being used, blind users can benefit from
being able to hit a key and have a pop-up box describing
what special keys are available.
6. While sighted people can quickly skip over links at the top of
a page, it is harder for blind people to do that. An alternative
design would be to put groups of links at the bottom and have
keys which will scroll the page to the desired group of links.
7. Sighted people can often find links more easily than blind.
If a page has some very popular links, it might be easier for blind
users to have keys activate the popyular links to reduce the
time searching.
8. It is often easier for sighted people to find forms on a
page than blind people. Blind users can benefit from having keys
which will automatically scroll the page to a particular form.
9. Sighted people can often find the end of the form by some
visual cuing. Blind people often assume that encountering
a submit button is the end of the form. This can be in error
if there is more than one submit button or if there are more
form elements after the submit button. Blind users can benefit
from clear indication about the end of the form being reached.
10. A sighted person can quickly skip over a group of radio
buttons or identify which radio button is selected.
A blind person often prefers a drop-down selection list.
It is easier to skip over and the user can quickly identify
what the current choice is.
Currently, many web designers don't know how to design accessible static
web pages. The general assumption is that they can be trained. If they
can be trained for designing static pages for accessibility, why can't
they be trained in designing dynamic web pages for accessibility.
I believe that with the correct flexible software architecture for creating
dynamic web pages, a version of each page can be created to more closely meet
the needs of each of a number of disabilities.
My concern for accessibility is not only can a blind person do something, but
also how fast/efficient they are at doing it.
Scott
Scott's preposition is that pages should be dynamically generated
"for the sighted" and "for the blind" (and presumably "for" other
disability classes); my preposition is that, right now at least,
the principle of graceful degradation is a much more useful thing
to concentrate on. [For the future, see http://www.ccpp.org]
Summaries of links and document structure are available on many web
browsers; also, META descriptions provide page summaries and should be
encouraged for this purpose as an accessibility aid.
Pages created with tables used for layout can and should be linearized,
though.
I'm not sure I understand why you think this is so, and why you believe
that searching is not an acceptable, accessible way to find information.
Jumping back and forth on a page isn't real good design even for sighted
users, though. As a matter of good UI design and graphic design,
jumping around should be minimized, period.
ACCESSKEY is broken and should, in general, be avoided -- in my opinion.
I agree that if they are used, they should be documented -- but this
is information that should be on the "visual" page as well.
That's one possible solution.
Except that ACCESSKEY is broken, but that's another discussion. There's
no reason that you can't have keys to activate popular links on the
graphical version, is there?
Ditto.
Sighted people also can suffer from this problem, though. That's a
problem in poor web design, again.
Is it true that blind users prefer drop-down lists and sighted users
prefer radio buttons?
Because you're talking about different types of training. It's easier
to say "make this page universally accessible" than to say "make this
page optimized for a blind person, okay, now make this page optimized
for a deaf person, okay, now make this page optimized for a blind AND
deaf person, okay, now make this page optimized for a blind AND deaf
person using a Mac, ..."
Eventually, you end up coming back to universal design because that way
you can include everyone instead of having to create algorithms for
every single combination of disability type.
Yes, but the architecture is not yet in place. This will take more than
just what you have in your CGI scripts (which are a step in the right
direction) in order to be a generally applicable solution to web
accessibility.
Kynn Bartlett mailto:kynn@hwg.org
President, HTML Writers Guild http://www.hwg.org/
AWARE Center Director http://aware.hwg.org/
Scott,
I agree absolutely that it is possible in principle to have accesible dynamic
pages. It is possible to do some things in practice, too. Currently there
area numbe of problems to be solved:
1. The HTML 4.0 event model assumes a mouse and keyboard interface, which is
a long way from optimal. Work on fixing that is currently taking place, most
particularly in the DOM but also in other groups.
2. User Agents need to be able to cope with dynaimc content. Some do, some
don't. One of the problems is letting the user know that there has been a
change, while making sure taht they don't have to stop and listen to the page
again every two seconds.
3. We need to do some work on how this happens in practies.
4. There is still a need to support legacy systems which do not have
client-side facility for much in the way of dynamic content.
All these things are being dealt with, and we are working towards some useful
knowledge. At the same time, the possibility of dynamic content allows the
possiblity of creating dynamic widgeets on the client side, for example to
let the user know that there is form content after the submit button.
Cheers
Charles McCN
Hi,
Blind people and sighted people may work with web pages in very different ways
from each other. Some of these differences are:
1. Both sighted and blind people need to get a sense of context from
each page. A sighted person can quickly scan to see what the page
is about. A blind person has to more grope through the page
to get a sense of what is there in order to get a better understanding
of the context. This approach is slow and cumbersome. Also,
a blind person may jump to a conclusion to early. What would
be helpful is being able to hit a key and a summary of the page
appears in a pop-up box.
2. Sighted people need more layout to understand the information.
Usually, this is done with tables. However, tables can be
create confusion for blind people. A more linear form is often
preferable for blind users.
3. Searching in a web page is much slower for blind people than sighted.
If the page is new, knowing what to search for is harder.
The page should be designed to help minimize the need to search.
4. Jumping back and forth on a page is much easier for sighted people
than blind people. The page should be structured to minimize
the need for that.
5. If the access keys are being used, blind users can benefit from
being able to hit a key and have a pop-up box describing
what special keys are available.
6. While sighted people can quickly skip over links at the top of
a page, it is harder for blind people to do that. An alternative
design would be to put groups of links at the bottom and have
keys which will scroll the page to the desired group of links.
7. Sighted people can often find links more easily than blind.
If a page has some very popular links, it might be easier for blind
users to have keys activate the popyular links to reduce the
time searching.
8. It is often easier for sighted people to find forms on a
page than blind people. Blind users can benefit from having keys
which will automatically scroll the page to a particular form.
9. Sighted people can often find the end of the form by some
visual cuing. Blind people often assume that encountering
a submit button is the end of the form. This can be in error
if there is more than one submit button or if there are more
form elements after the submit button. Blind users can benefit
from clear indication about the end of the form being reached.
10. A sighted person can quickly skip over a group of radio
buttons or identify which radio button is selected.
A blind person often prefers a drop-down selection list.
It is easier to skip over and the user can quickly identify
what the current choice is.
Currently, many web designers don't know how to design accessible static
web pages. The general assumption is that they can be trained. If they
can be trained for designing static pages for accessibility, why can't
they be trained in designing dynamic web pages for accessibility.
I believe that with the correct flexible software architecture for creating
dynamic web pages, a version of each page can be created to more closely meet
the needs of each of a number of disabilities.
My concern for accessibility is not only can a blind person do something, but
also how fast/efficient they are at doing it.
Scott
--Charles McCathieNevile mailto:charles@w3.org
W3C Web Accessibility Initiative http://www.w3.org/WAI
MIT/LCS - 545 Technology sq., Cambridge MA, 02139, USA
Hi, Charles
I probably should have been clearer about dynamic web pages. What I
meant by the term was web pages which are generated dynamically.
I'll be more careful about that distinction in the future.
Scott
PS I agree with many of your comments.
Hi Scott,
You talk at the end of your note about the potential benefit of dynamically
generating different versions of pages. Of the examples you gave the one
where the benefit is most obvious is the radio button vs. drop down list.
Radio buttons are more convenient in many situations for sighted people
(especially when there are a lot of ratings arranged table fashion) but in
a previous discussion on this list blind users pointed out the advantages
of dropdown lists while screenreading. And this isn't just a
hypothetical situation: I'm facing this exact situation right now while
advising some folks how to make an online survey.
In the other examples though, you described solutions that didn't require
dynamic generation. Could you give additional examples in which the
advantages of different forms is more obvious? For example, a case where
text is laid out in a table, and is understandable when linearized, but
could be read more conveniently if not linearized?
By the way, reading order is one situation where style sheet layout could
do the same thing as dynamic generation. To bad we can't count on that in
visual browsers at the moment.
Len
ways
Leonard R. Kasday, Ph.D.
Institute on Disabilities/UAP, and
Department of Electrical Engineering
Temple University
Ritter Hall Annex, Room 423, Philadelphia, PA 19122
kasday@acm.org
(215) 204-2247 (voice)
(800) 750-7428 (TTY)
