[regretting not to have been there, but was impossible]
taking http://ilrt.org/discovery/chatlogs/rdfcore/2002-09-20.html
for the moment for granted
[14:48:03] jjcscribe Vote: untidy 7, tidy 5.
[14:48:11] jjcscribe DECIDED: untidy semantics.
[14:48:22] jjcscribe DanC has outstanding dissent.
I'm recording outstanding dissent too !!!
I can't help but I can't think how to
avoid (in my implementation) the entailment
==== untidyP
@prefix : untidy# .
:Sergey :votes "untidy" .
:Graham :votes "untidy" .
==== untidyC
@prefix : untidy# .
:Sergey :votes _:x .
:Graham :votes _:x .
(and for the moment I even have no time
to think about it)
Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/
PS untidy typed literals _:x"abc" are OK for me
but "xyz" is always "xyz" (bare literal, *non*typed)
but then how would you write (in RDF/XML)
something someproperty "somestring" .
which I consider as a very meaningful statement
Jos, which are you trying to express here:
1. That something has someproperty with the value denoted by
"somestring".
2. That something has someproperty with the value of the string
"somestring".
none of the above Patrick, just
3. the object of that statement *is* the typeless lexical form "somestring"
I think we need the primitive notion of a typeless lexical form
which is just denoting itself and of course it could be paired
with a rdfs:Datatype to describe a datatyped value but it must
also exist independently I think and identified with itself
Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/
PS again sorry Brian, but our Lotus Notes seems to deform
which is causing some trouble I guess, so I corrected the CC
[Patrick Stickler, Nokia/Finland, (+358 40) 801 9690, patrick.stickler@nokia.com]
but then how would you write (in RDF/XML)
something someproperty "somestring" .
which I consider as a very meaningful statement
Jos, which are you trying to express here:
1. That something has someproperty with the value denoted by
2. That something has someproperty with the value of the string
Well, any literal that is typed as xsd:string or a similar datatype
serves this purpose, does it not? Specifying that the datatype
of the literal is a string is synonymous with the tidy interpretation
of the literal denoting its lexical form component.
The lexical form of the string typed literal maps to the string value
that is identitical to the lexical form (i.e the mapping is equality).
Thus xsd:string"foo" with untidy semantics is equivalent to "foo" with
tidy semantics.
In essence, string typing provides tidy semantics, but you just have
to say that's what you want.
Perhaps I'm not fully understanding you. I'm still struggling to
see the added utility of the "typeless" literal over the string
typed literal, apart from perhaps syntactic sugar so one doesn't
have to type as much. They seem to be functionally equivalent.
What am I missing?
Patrick
