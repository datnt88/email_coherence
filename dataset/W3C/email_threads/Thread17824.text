Reference document:
Based on discussions at the 17 June UAGL teleconference [1]
here is a proposed modification to the checkpoints in
Guidelines 7 (Navigation). The proposal leaves intact
checkpoints 7.1, 7.2, and 7.3 which were discussed and "approved"
during the teleconference.
1) Merge 7.4 and 7.5.
Proposed text:
"Allow the user to navigate all active elements in the document."
Proposed Priority: 2.
Techniques: sequential, direct, search, etc.
2) Delete 7.6 (Allow the user to search for active elements).
3) I propose that we leave 7.7 (text search) and 7.8
(document tree navigation). However, several issues
persist about searching:
a) Do we search on the document source or rendered content?
At the teleconf, the Working Group expressed consensus that
searching should be on rendered content only (recall: rendered
does not mean only that which is in the viewport, but the
entire document as rendered).
b) Do we search on (some or all)
attribute values (or even attribute names)?
Attributes used to specify alternative content are of
particular interest.
There is a checkpoint that already ensures that UAs
provide access to this content (6.3), which I assume means
that it's somehow rendered. Which means that it would be
covered by checkpoint 7.7.
I don't see that searching on attribute names would
reduce barriers to accessibility.
I propose, therefore, not to restore a checkpoint on searching
attribute values.
Related questions:
- Should we add a checkpoint about navigating all elements?
Some thoughts:
a) This may not be necessary since Checkpoint 7.8
(document tree navigation) would allow this.
ISSUE: We talk about navigating the document tree
which I assume means the source tree. However,
we talk about searching the rendering structure.
The rendering structure may not be "tree-shaped"
and contains information that may not come from the
source tree (e.g., content generated by style sheets,
numbers in numbered lists, etc.). What exactly
do we mean by navigating the document tree?
b) Navigating all elements feels like a technique to me (for
accessing/skipping information more quickly). I could imagine
two (Pri 3) checkpoints for dependent user agents:
i) Allow users to navigate elements in a document.
ii) Allow users to configure which element types they wish to
navigate. This already exists as checkpoint 2.4 and is meant
to apply to all navigation checkpoints. However, it's utility
would be made more evident with a general checkpoint about
navigating elements.
c) Why sequential navigation of all elements and not direct
navigation? Is sequential navigation of all elements more
beneficial
(or just more prevalent/easier to implement/)?
- Ian
[1] http://lists.w3.org/Archives/Public/w3c-wai-ua/1999AprJun/0205.html
Ian Jacobs (jacobs@w3.org) http://www.w3.org/People/Jacobs
I think that we need in the introduction to this section information on the
following navigation concepts:
Sequential
Direct
Searching
Tree navigation
The introduction would summarize the adavantages and disadvantages for
different types of users and task situations. This would high light the
major techniques that we have discussed during the past year without
necessarily burying the concepts in the techniques document or creating
long lists of checkpoints.
JRG: Agree
JRG: Agree
JRG: I think that the navigation of the document tree is just one
techniques and that it we should just have one checkpoint stating:
"Allow the user to navigate all elements in the document."
Priority: 1
The tree navigation would be described as one way to acheive this.
JRG: I think we say the text content of elements. With scripting some text
content may not be rendered unless the user takes acton or turns off
support for style sheets.
JRG: I think this just a more advanced searching function. The highest
priority would be attributes like: ALT, SUMMARY, TITLE. When you get past
those your talking about a very small number of people who would understand
the concept of what they were doing.
The only other major technique that I think fits here, is Denis Ansons
proposal of move to next thing like this.
JRG: see above comments
Jon Gunderson, Ph.D., ATP
Coordinator of Assistive Communication and Information Technology
Division of Rehabilitation - Education Services
University of Illinois at Urbana/Champaign
1207 S. Oak Street
Champaign, IL 61820
Voice: 217-244-5870
E-mail: jongund@uiuc.edu
WWW:http://www.staff.uiuc.edu/~jongund
An introduction to those topics seems appropriate.
Would this be for dependent user agents only? I don't think
it's a Priority 1 since you can get at content through other means.
I think perhaps Priority 2.
My question remains on this point: what accessibility barriers
fall by being able to navigate all elements? Or is this for the
techniques document?
I guess we should ask these questions:
a) Are we talking about all user agents or dependent only?
b) Should users be able to search text hidden by style sheets?
c) Should users be able to search text in attribute values if not
rendered?
I could see search functionalities changing depending on whether
the dependent UA or browser is offering the functionality. So if the
dependent UA has access to the DOM, it could allow searching, say
on attribute values. This would surprise me from a browser, however.
I had hoped that that proposal would be subsumed by the checkpoint
to allow users to configure search schemes.
- Ian
Ian Jacobs (jacobs@w3.org) http://www.w3.org/People/Jacobs
JRG: I think it is one of the biggest and most fundamental problems the
guidelines need to address, especially for visually impaired user to
navigate (and identify) elements with in a document. Try using a screen
reader to read a document. I think this should be a priority one for
dependent user agents. Since this would include navigation to active
elements as well.
JRG: I think we should have three checkpoints related to searching and use
the techniques document to highlight all of the possible choices and
combinations related to functional searching.
Checkpoint 1: Allow the user to search the text content of a document
(both, P1)
Checkpoint 2: Allow the user to search the alternative content of a
document (both, P2)
Checkpoint 3: Allow the user to search the element attributes of a document
(Dependent user agents only, P3)
In the TECHNIQUES document related to searching this would be the major
techniques that I would like to see (others could add to this list):
1. Text content of elements (maybe I don't understand the technical jargon
for this, but I mean the text between the element element XXX YYY
ZZZZ /element . The basic type of search does not need to include
searching attribute information.
2. Text associated with alternative content or summary information with is
mainly in attributes: TITLE, ALT, SUMMARY attributes
3. A function that could look at the current attributes and element and
look for the additional text content with the same type of element and
attribute. The scope of samness could be configurable by the user.
4. Users could also configure what type of elements and attribute
information they would like to have as a part of the "standard" search.
Jon Gunderson, Ph.D., ATP
Coordinator of Assistive Communication and Information Technology
Division of Rehabilitation - Education Services
University of Illinois at Urbana/Champaign
1207 S. Oak Street
Champaign, IL 61820
Voice: 217-244-5870
E-mail: jongund@uiuc.edu
WWW:http://www.staff.uiuc.edu/~jongund
In general I agree with Ian's proposals for guideline 7.
I think we should only have a single checkpoint - provide a search function,
and allow that search function to be configurable in the relevant guideline
(I will post some stuff on this in a minute).
Checkpoint 7.8: I think this should be "allow the user to navigate the
document structure". To minimally satisfy it, make it possible to move from
element to element. Techniques "for further credit" are to allow the user to
navigate the formal tree structure of the document (in the case of an XML
document, or well-formed HTML document) or to navigate an "outline" or table
of contents, generated according to some other algorithm. For example in HTML
it is possible to generate a table of contents based on the headings, and
assuming that the levels H1 - H6 are used to specify the appropriate nesting
level.
(Yippee - my action item discharged at last!)
I agree with Jon about the necessity of structure navigation in some form.
Other strong cases are for people limited mobility, and screen magnification.
Charles
JRG: I think it is one of the biggest and most fundamental problems the
guidelines need to address, especially for visually impaired user to
navigate (and identify) elements with in a document. Try using a screen
reader to read a document. I think this should be a priority one for
dependent user agents. Since this would include navigation to active
elements as well.
JRG: I think we should have three checkpoints related to searching and use
the techniques document to highlight all of the possible choices and
combinations related to functional searching.
Checkpoint 1: Allow the user to search the text content of a document
(both, P1)
Checkpoint 2: Allow the user to search the alternative content of a
document (both, P2)
Checkpoint 3: Allow the user to search the element attributes of a document
(Dependent user agents only, P3)
In the TECHNIQUES document related to searching this would be the major
techniques that I would like to see (others could add to this list):
1. Text content of elements (maybe I don't understand the technical jargon
for this, but I mean the text between the element element XXX YYY
ZZZZ /element . The basic type of search does not need to include
searching attribute information.
2. Text associated with alternative content or summary information with is
mainly in attributes: TITLE, ALT, SUMMARY attributes
3. A function that could look at the current attributes and element and
look for the additional text content with the same type of element and
attribute. The scope of samness could be configurable by the user.
4. Users could also configure what type of elements and attribute
information they would like to have as a part of the "standard" search.
Jon Gunderson, Ph.D., ATP
Coordinator of Assistive Communication and Information Technology
Division of Rehabilitation - Education Services
University of Illinois at Urbana/Champaign
1207 S. Oak Street
Champaign, IL 61820
Voice: 217-244-5870
E-mail: jongund@uiuc.edu
WWW:http://www.staff.uiuc.edu/~jongund
--Charles McCathieNevile mailto:charles@w3.org
W3C Web Accessibility Initiative http://www.w3.org/WAI
MIT/LCS - 545 Technology sq., Cambridge MA, 02139, USA
