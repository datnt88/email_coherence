A similar response here; where the XML Schema WG's response is that
RDF's XML syntax should change despite our charter explicitly not
allowing that.
Since our reply to their mail 6 months ago, more people have implemented
RDF/XML parsing on top of SAX2 (python, perl), DOM (C#) and XPath/Xquery
(Java) and linked RDF on top of SAX events and XSLT so it's hardly been
hard or disconnected with XML.
Any suggestions for how we record this? A last call issue that amounted to
requiring us go outside the WG charter to resolve to their satisfaction.
Dave
------- Forwarded Message
Date: 03 Oct 2003 22:22:18 +0200
From: "C. M. Sperberg-McQueen" cmsmcq@acm.org
Subject: Re: [closed] xmlsch-11 layering on xml
Colleagues,
thank you for your response to our comment. A full account
of our formal responses to your responses is attached to
For the sake of those who are trying to track this particular issue
using the email archives, our response on this topic is given
below.
-C. M. Sperberg-McQueen
for the XML Schema WG
Dear Colleagues
The RDF Core WG has considered your last call comment captured in
(raised in section
"4.4. Normative specification of XML grammar (policy, substantive)" of
The main points you raised in this comment are:
1) RDF/XML is defined in "what is very nearly a character-level BNF
[which] is at best a missed opportunity and at worst a serious
mistake."
- obscuring important parts of the document type
- making it very difficult for the reader to actually
understand what is and isn't actually allowed.
- confusing layers
RDF/XML is entirely layered on the XML Infoset as defined in
Syntax Data Model
and is not defined at the character-level.
All XML detail is handled by the XML specifications, not this
document - deployed RDF/XML applications are entirely built on
standard XML tools. In layering on the XML infoset, we leave only
the important parts of RDF/XML that users and application writers
need be concerned about - elements, attributes, whitespace and text.
It would have been a mistake to gloss over where, say, the whitespace
was significant and where it was ignored - which was one problem with
the original RDF M&amp;S specification.
2) Rules out XML documents not parsed from character streams (such as DOM)
This was explicitly called out:
This model illustrates one way to create a representation of an
RDF Graph from an RDF/XML document. It does not mandate any
implementation method - any other method that results in a
representation of the same RDF Graph may be used.
In particular:
* This specification does not require the use of [XPATH] or [SAX2]
If a DOM interface can provide the very few (4) XML Infoset Infoitems
that are needed here, it is not ruled out.
3) Suggests a two-step approach first mapping to canonical RDF form
constrained by DTD or XML Schema
An approach using a mapping to a canonical RDF written in XML is
related to issue xmslch-10 where we explain why we didn't feel we
could do this under the current charter. It certainly would have
been useful and helped.
The model and grammar used here closely matches how many RDF/XML apps
were written, in a token matching style that can be used with
standard syntax lexers and grammar generators. This approach has
proved suitable after other implementor feedback.
The RDF Core Working Group has decided:
that the explanation above answers your comment as a clarification.
Please reply to this email, copying www-rdf-comments@w3.org indicating
whether this decision is acceptable.
Thanks
Dave
Thank you.
We realize that this is a difficult area, but we believe that it would
be a mistake for W3C to move forward with a new version of the RDF
specifications without undertaking the work of a revision of the
syntax.
We regret that we must dissent formally from your resolution of this
issue. The current mismatch between RDF syntax and off-the-shelf XML
tools has not become easier to bear as time goes on; we believe it
must be addressed.
------- End of Forwarded Message
Just like that. You answered your own question.
Dan Connolly, W3C http://www.w3.org/People/Connolly/
I am just preparing the LC candidate for concepts.
I will follow Frank's example on the cross links,and use cross links to
shadow TR space where I expect a link to the LC2 doc. All other links
(particularly dated links to earler versions of concepts) should not be
processed.
I note that syntax has not followed this, but the links still need
processing with an algorithm like:
For each doc1 in collection
If doc1 != syntax
patch links to doc1 in syntax
The dated links to syntax within syntax should not be patched.
Jeremy
On Tue, 07 Oct 2003 12:00:37 +0100
I've fixed that in the editor's draft now on the web, however I was
using it to test the perl script I've made to transform such things
in sets of WDs into the right dates/urls for publishing in dated TR
space.
Jeremy: I also updated the SOTD to match your fixes.
Dave
