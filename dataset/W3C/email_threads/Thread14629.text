Yes, I understand and agree that images should be paired with words. This
is a fundamental concept in transitioning symbol-oriented users of
Augmentative and Alternative Communication (AAC) to literacy. This isn't
really the argument.
Even with regard to images maps and buttons, no one has said that text
should be avoided. What should be avoided is graphical text.
The "arrow button" should NOT have text unless the it is put there by CSS or
SVG or redundant text links. "Pop-up" text provided via ALT or TITLE
mechanism is fine. Bit-mapped words are NOT acceptable.
From: w3c-wai-gl-request@w3.org [mailto:w3c-wai-gl-request@w3.org] On
Behalf Of Anne Pemberton
Sent: Friday, December 15, 2000 10:08 AM
Subject: Re: Errata for WCAG 1.0 checkpoint 3.1 (i.e. the
text in images
issue)
What if it does? The arrow without words doesn't distinguish
between next
story and next page either...
Anne
The use of the arrows without a word has to be TAUGHT and
LEARNED ...
Unlike the use of the word without the arrows? Please! What
if "next"
means the next story instead of the next page.
Love.
ACCESSIBILITY IS RIGHT - NOT PRIVILEGE
Anne L. Pemberton
apembert@crosslink.net
Enabling Support Foundation
Then just don't "accept" them as words. The "problem" only arises where the
other methods of including them on the arrow don't work. No reason to deny
them to people who *can* see/read them. The caveat that overrides all these
discussions is that *of course* we are pre-supposing alt="next".
Love.
ACCESSIBILITY IS RIGHT - NOT PRIVILEGE
By the way, if you follow Bruce's suggestion of using CSS to
place the "next" on the graphic, or if you simply include a
text link beside/next to the link, it might be appropriate to
actually make the alt attribute alt="".
See, if you do it otherwise, you have:
...which means that if graphics aren't viewed, you see/hear:
[LINK]next
[LINK]next
Which looks/sounds really bad. If you do this instead:
Then you get this:
[LINK]next
...which makes more sense and is less confusing to someone who
doesn't see the image.
Any objections to this approach?
--Kynn
Kynn Bartlett kynn@idyllmtn.com
I think our main problem is the following:
(a) Textual graphics are a barrier to people who require the ability
to magnify text.
(b) Alt text is generally considered sufficient to remove the barrier
to access for people who can't see an image.
(c) Using the alt text for those images -would- be sufficient to
allow access, BUT:
(d) To access the alt text, the user needs to disable ALL images on
a page, which is less than optimal for web users who need to
magnify text but who can otherwise see graphics.
(e) The clear solution is that there needs to be a way to designate
certain images as being those that should be -replaced- if
resized, while others as not being replaced.
There does not seem to be a way to do this in HTML or CSS at present.
This whole argument is basically caused by a huge gaping hole in
the markup languages used to create web pages.
So, if we were going to reinvent HTML, how would we solve the problem?
Perhaps an attribute related to resizing, which would then be
recognized by browsers? Maybe a CSS property? Something else?
I'm not sure what the solution is, but I think there may be a way
to overcome this problem. (Using SVG is not, right now, a solution...)
--Kynn
Kynn Bartlett kynn@idyllmtn.com
Yes. And the further problem is that any changes to the markup languages
wouldn't be supported for some time to come.
When I first came across the  ^  glyphs, I must admit to not having a
clue what they meant. I clicked them, and I found out and thought it was
fairly neat, but a bit stupid without explanation. In other words, some
people see " " and see an arrow pointing to right, and some see the concept
of "next". If the textual equivalent was used in the image, some people
might see a collection of unrecognizable glyphs, and some might see the
word "next". Further to that, some might know what "next" refers to, and
some people may not.
I guess what I'm trying to say is that there is no harm in including as
much information to people as you can *as long as* it doesn't confuse them
further. I suggest the following is the best we can do with our current
markup limitations (one for PF to talk about I suppose):-
[ a href="2.html" rel="next" title="Link to the next page"
img src="rightarrow.gif" alt="Next" / Page (2) /a ]
Ugh, it's not a perfect solution and I will accept criticism. Also, it's
not technically "WCAG 1.0 valid" because it doesn't have an "alt" attribute
value, but if XHTML wasn't so limiting in the first place, we wouldn't have
to put up with hacks like these ;-) It's a shame that CSS and SVG don't
help much due to their lack of implementation.
That's my 2c/2p/0,02euros, FWIW
Kindest Regards,
Sean B. Palmer
"Perhaps, but let's not get bogged down in semantics."
- Homer J. Simpson, BABF07.
This approach to having words and images available is what I prefer, except
that to make it more usable I would include the image and the text in a
single link element.
cheers
charles mccn
By the way, if you follow Bruce's suggestion of using CSS to
place the "next" on the graphic, or if you simply include a
text link beside/next to the link, it might be appropriate to
actually make the alt attribute alt="".
See, if you do it otherwise, you have:
...which means that if graphics aren't viewed, you see/hear:
[LINK]next
[LINK]next
Which looks/sounds really bad. If you do this instead:
Then you get this:
[LINK]next
...which makes more sense and is less confusing to someone who
doesn't see the image.
Any objections to this approach?
--Kynn
W3C Web Accessibility Initiative http://www.w3.org/WAI
Location: I-cubed, 110 Victoria Street, Carlton VIC 3053, Australia
September - November 2000:
W3C INRIA, 2004 Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France
Charles, this can introduce some "artifacts" on certain browsers
which are unacceptable to many web designers -- namely the little
"extra blue underline":
[IMAGE]_
text
Some browsers don't do this, and of course one way to avoid this
would be to turn off underlines entirely using CSS. (Although this
is not actually a good solution, it will be done a lot in practice,
especially as people use CSS to create menu bars -- see my own
home page for an example.)
What do you think about the question of "redundant ALT", which also
came up on the WAI IG yesterday?
--Kynn
Kynn Bartlett kynn@idyllmtn.com
