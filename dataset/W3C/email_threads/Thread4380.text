The old section 9 use cases in V1 of the XQuery USE case document:
have been removed without any comment or explanation from:
It is absurd to suggest that ID/IDREF relationships were important
enough to have an entire use case section devoted to them a year ago,
but are now of no significance. Many SGML documents make extensive
use of ID/IDREF relationships and thus clearly XQuery should be
capable of supporting queries predicated on these relationships.
Consider for example any rational queries that one might wish
to make on the appended graph, encoded using gxl.
Please do not silently delete material from USE cases unless
these USE cases are fundamentally flawed. Since I have already
implemented the old Section 9 use cases, I fail to see how
these USE cases as defined in earlier documents could have
been so flawed.
I also think it would be most helpful in working documents when entire
sections are deleted if some explanation be given somewhere. Without
such an explanation, there is no evidence to suggest that the deletion
was not entirely accidental.
Sincerely, Ian Davis
For what it's worth, I think the explanation for this is simply that the use
cases needed rewriting, because of the disappearance of the "= " operator,
and no-one volunteered for the task in time for the publication deadline.
I think there has been some tendency to orient the use cases to features of
the language that need to be illustrated, rather than user problems that
need to be solved, but I agree with you that in principle, we should have
rewritten the use cases to show how they could be solved without the dropped
"= " operator.
Michael Kay
I don't think that's accurate. I would have gladly done that if the Working
Group had asked me to. At the time, we had decided not to support
cross-document references or to use the = operator in XQuery, and the WG
had also decided that we didn't like the structure of the data or find the
particular set of queries realistic. We felt that a better set of use cases
for references would be desirable.
Developing this set of use cases, however, was beyond what there was time for.
I don't think the old use case REF was a good illustration of user problems
that need to be solved. It wasn't realistic enough to be useful. And that's
one of the things that axed it as a use case. Perhaps we should have waited
until we had a better set of use cases before killing the old one...
Jonathan
