10 May 2001 UA Guidelines Teleconference
Agenda announcement:
Reference document 11 April 2001 Guidelines:
Minutes of previous meeting 3 May:
Next meetings:
May 16 (extra), 17, 18 (extra)
Present:
Jon Gunderson (Chair), Ian Jacobs (scribe), Harvey Bingham,
Jim Allan, Tim Lacy, Gregory Rosmaita, Mickey Quenzer,
Rich Schwerdtfeger
Regrets: David Poehlman, Eric Hansen
Absent: Denis Anson
Note: As of this call, I'm going to drop Charles McCathieNevile
as an active attendee of the teleconference.
Announcements
Scheduling extra last call teleconfs:
Wednesday, May 16: 2:00-4:30 EST
Thursday, May 17th: 2:00-4:00 EST (regular meeting time)
Friday, May 18th: 2:00-4:00 EST
Wednesday, May 23th, 2:00-4:30 EST
Thursday, May 24th: 2:00-4:00 (regular meeting time)
Friday, May 25th: 1:00-3:30 EST
HB: I have a conflict on the Weds.
JG: I wish to move 18 May meeting to 2-4pm ET
JA: I'm out of town on the 18th anyway.
TL: I might have to leave early on the 18th
IJ: I'm ok with proposed schedule.
MQ: Shouldn't be a problem for me.
Discussion
1) Comments resulting from review with Tantek Celik.
(Refer also to Eric Hansen followup on these proposals. HB, MQ,
and JG have skimmed proposals).
Part I:
1) "Start" events are more important than "End" events.
GR: If down produces a submenu, then I need to continue to drag
into the submenu.
IJ: The argument is that the user using manual triggering should
not have *more* than what the user of the device can do.
GR: I still need to hold the mouse down.
Resolved:
- The simulation required by 1.2 does not exceed that which
is possible with the native device.
2) Render according to spec. Do other checkpoints override this?
Resolved:
- Accept proposal that other UAAG 1.0 requirements may
override 2.1 if the format specs otherwise forbid them.
- Mention that configuration is a possibility here (break
conformance to other spec / don't).
3) Checkpoint 2.2: Define text format more formally.
Resolved:
- Adopt proposal to change checkpoint 2.2 to define exactly what
we mean by text formats for this document (i.e., the minimal
requirement).
4) Checkpoint 2.3: Scope of "alert" requirement.
IJ: Is this a global requirement or element-level? I would note
that if every page has conditional content, the alert message for
every resource is not very useful. It doesn't tell you anything
"new".
GR: I think that a global-only alert is not very useful.
IJ: Think of a links view of a document. One could also provide
a similar interface for conditional content.
MQ: It sounds like the minimal requirement is to make available
the list (possibly empty) of sources of conditional content.
IJ: People have also asked that 2.3 be broken down into simpler
pieces.
IJ: My question is: is a menu sufficient (that some time can be
empty)?
GR: What happens when I go through the conditional content menu,
then to the document, then back to the conditional content menu,
where do I start from? I probably want some persistence in that
menu.
Resolved:
- No alert is necessary when conditional content is rendered as
part of sastisfying 2.3.
- When required (for query approach), alert must be element
level.
(IJ notes that this breakdown may allow simplification of 2.3).
Techniques:
- A global alert that then allows one to find out more would
be useful.
- The WG thinks that a "conditional content list" approach
would satisfy the checkpoint.
- Should be able to find one's place in context (in a "main"
view).
GR: Check out JFW and Amaya for orientation between views,
possibly Opera too.
/* Tim leaves */
5) Configuration not required when the user agent always or
never does something?
IJ: The question is: what are the accessibility issues
if some stuff is "always on".
MQ: E.g., I might want to be able to turn off captions otherwise
they will always be "in my way" (even when I don't want them).
/* Brief discussion of blink rate control */
IJ: We need to clarify whether configuration is also part of the
requirement (not just the functionality being configured).
GR: I think that applicability is relevant for 3.3.
IJ: I note then, that configuration is in most cases as important
as the functionality being configured. But I don't know whether
it's as important in all cases (where there is binary
configuration).
NO RESOLUTION.
6) Checkpoint 2.9: Automatic rendering of all conditional content
at once required?
(First part)
Proposed:
- Adopt proposal that "The user agent may satisfy checkpoint 2.9
by allowing different configurations to render different types
of conditional content automatically, possibly in different
viewports."
NO RESOLUTION.
Actions
Closed
7.GR: support for NOSCRIPT lynx longdesc - webspeak, HPR
JA: See minutes of previous meeting.
Open
1.IJ: Edit the text of checkpoints 2.1, 2.2, 8.1, and 8.2 so that UAs
are not required to conform for all formats that are implemented.
Source: Minutes 19 April 2001 Teleconference
2.IJ: Make mention of animations, text streams, and refresh in the
document.
Source: Minutes 19 April 2001 Teleconference
3.IJ: Coordinate usability testing of the guidelines (JRG volunteers to
be one of the testers).
Source: http://lists.w3.org/Archives/Public/w3c-wai-ua/2001JanMar/0137
4.CMN: Find out from SYMM WG whether repositioning of objects will
appear in the spec (or should be in UAAG).
Source: http://lists.w3.org/Archives/Public/w3c-wai-ua/2001JanMar/0357
5.RS: Send pointer to information about universal access gateway to
the WG.
Source: http://lists.w3.org/Archives/Public/w3c-wai-ua/2001JanMar/0258
6.GR: Review event checkpoints for techniques
Status: Pending.
8.GR: write different markup (list of elements) that 2.9 applies to,
for clarification.
IJ: Refer to Techniques document!
9.GR: will send test pages to list
Source: http://www.w3.org/WAI/UA/2001/05/wai-ua-telecon-20010503.html
Status: Pending.
10.GR: Screen shot of Lynx for refresh, and redirect.
Status: Pending. Talk to JG/IJ offline.
12.MQ: Review techniques document to see whether adequate for
speech checkpoints.
Raw
Ian Jacobs (ij@w3.org) http://www.w3.org/People/Jacobs
Cell: +1 917 450-8783
I would like to respond to Scott Trotman's comment regarding checkpoint 6.6
from Issue 471 on the third last call issue list.
Scott's comment is as follows:
Checkpoint 6.6: I understand the need for standard APIs and documented
APIs
for non-standard implementations. But because of the way some ATs work,
custom code has had to be written by both AOL and AT developers. The same
is
true for other software companies. I believe a priority one for the
implementation of a user agent should be "make it work". Priority two
should
be "make it work using standards". I can go into much greater detail
about
this if it draws a discussion.
Having worked the number of years I have in this business, I can tell you
that the use of non-standard APIs does not work.
My response is not meant as a personal attack, however I expect this issue
to be raised a fair bit so I will be strong in my response to make sure
that the issue is put to bed ... for good.
First, the team writing a new set of APIs has no experience as to what
makes something accessible and what does not.
Second, the likelihood that an assistive technology (AT) will work with
your new API set is is highly unlikely. This means people with disabilities
have to wait until an AT does. Without an AT solution all the API's in the
world do not make your solution accessible. A point in fact is that
Netscape 6.0 is still inaccessible today is in part due to the fact that it
has not made use of a standard set of API's. I am sure that on the Windows
platform Netscape is being heavily pressed to support MSAA on Windows since
screen readers do not know how to work with it. In Netscape's defense they
are working to make it accessible.
Third, the API and its implementation need to be tested using an AT or they
do not work. The Java Accessibility API has been proven to work because not
only did it get architected by experts (primarily IBM and Sun) but it was
also tested using an assistive technology (Self Voicing Kit for Java).
Fourth, we require support of the DOM because is is reviewed by the WAI
Protocols and Formats group who are a team of experts in the the
accessibility field. As a PF member and a person who wrote requirements for
the PF to the DOM working group we try to make the DOM engineered to work
with ATs.
Fifth, in order to make a W3C specification you need to prove
implementability. This is nearly impossible with a new home grown API. In
the case of the DOM API we use Home Page Reader and our Web Access Gateway
project as a proof of implementability. We are not going to do this for
some new legacy API a corporation has been working on for years and wishes
to retrofit to try and meet an accessibility standard.
Sixth, the issue of cost and performance is key to an AT developer. It
costs developer time and AT performance to try and support some new API
each application want to export.
Seventh, is time to adoption. It took, years before AT's started to use
MSAA. This was due to instability, performance, and other reasons. It took
years from the time we started the Java Accessibility API until it was
reliable and full functioned enough to use. To do this, IBM, Microsoft, and
Sun had to spend a lot of money and expert resources to make this happen.
In the case of the DOM, W3C accessibility expert members needed to do the
same.
These are the reasons that you write to standards.
Bottom line: We use standards to make applications readily and reliably
accessible and usable in the shortest period of time so that the user of
your application can be gainfully employed and that they may enjoy the
quality of life that you the application developer has. The longer this
period is the more we place this person at a disadvantage.
Rich Schwerdtfeger
Senior Technical Staff Member
IBM Accessibility Center
Research Division
EMail/web: schwer@us.ibm.com
"Two roads diverged in a wood, and I -
I took the one less traveled by, and that has made all the difference.",
Frost
Rich,
Apparently the special APIs were jointly developed in cooperation with an
AT developer, but I think your arguments are still valid. We don't want to
promote the use of special APIs for different AT developers. I have asked
Scott to contact Tim Lacy at Microsoft to discuss the issues on why MSAA
could not have been used to solve the problem.
Jon
Checkpoint 6.6: I understand the need for standard APIs and documented
for non-standard implementations. But because of the way some ATs work,
custom code has had to be written by both AOL and AT developers. The same
true for other software companies. I believe a priority one for the
implementation of a user agent should be "make it work". Priority two
be "make it work using standards". I can go into much greater detail
this if it draws a discussion.
Jon Gunderson, Ph.D., ATP
Coordinator of Assistive Communication and Information Technology
Division of Rehabilitation - Education Services
MC-574
College of Applied Life Studies
University of Illinois at Urbana/Champaign
1207 S. Oak Street, Champaign, IL 61820
Voice: (217) 244-5870
E-mail: jongund@uiuc.edu
WWW: http://www.staff.uiuc.edu/~jongund
WWW: http://www.w3.org/wai/ua
I'd also like to know in detail which components of the interface we are
discussing. Much of the a o l interface has little to do with web
connectivity as I understand it, but more to do with their generally
closed network. Still, General software guidelines apply and there is
more than msaa at issue here.
Rich,
Apparently the special APIs were jointly developed in cooperation with
an
AT developer, but I think your arguments are still valid. We don't want
to
promote the use of special APIs for different AT developers. I have
asked
Scott to contact Tim Lacy at Microsoft to discuss the issues on why MSAA
could not have been used to solve the problem.
Jon
6.6
Checkpoint 6.6: I understand the need for standard APIs and
documented
for non-standard implementations. But because of the way some ATs
work,
custom code has had to be written by both AOL and AT developers. The
same
true for other software companies. I believe a priority one for the
implementation of a user agent should be "make it work". Priority
two
be "make it work using standards". I can go into much greater detail
this if it draws a discussion.
you
issue
disabilities
the
that it
Windows
since
they
they
not
was
for
work
In
Gateway
wishes
took
and
happen.
the
of
difference.",
Jon Gunderson, Ph.D., ATP
Coordinator of Assistive Communication and Information Technology
Division of Rehabilitation - Education Services
MC-574
College of Applied Life Studies
University of Illinois at Urbana/Champaign
1207 S. Oak Street, Champaign, IL 61820
Voice: (217) 244-5870
E-mail: jongund@uiuc.edu
WWW: http://www.staff.uiuc.edu/~jongund
WWW: http://www.w3.org/wai/ua
