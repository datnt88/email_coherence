*Data Model, Section 3.2 Document order*
The first paragraph says that a document order is total.
The last two paragraphs broaden the discussion to include order between
nodes in different documents, or not in a document at all.
Is it intended that the ordering in the latter two paragraphs is total?
Or could a conforming implementation simply say, "I choose not to define
an ordering between nodes in different documents, or between nodes not
in any document. My ordering of these things is the trivial ordering,
the one which such things simply have no ordering."?
Put another way, is there anything that breaks if an implementation is
not able to place a collection of free-standing nodes into a stable order?
Yes, for example:
$someNodeSet[2]
where $someNodeSet contains nodes from at least two different documents. Using a
positional predicate requires that there is total order on any node-set.
This order must be stable, otherwise one may get different results on two different
references to the above XPath expression.
Because sets are unordered by definition, it is meaningless to talk about some other
order (e.g. order of nodes as they come in the node-set) except document order,
which is specified in XPath with exactly the purpose of being the only order
specified.
Therefore, document order covers by definition all types of node-sets, including the
case of node-sets comprising nodes from different documents.
I also find the name "document order" confusing in this last case.
Probably "canonical order" or any name which doesn't refer only to a (single)
document will be better.
Dimitre Novatchev.
Do you Yahoo!?
SBC Yahoo! DSL - Now only $29.95 per month!
Data Model, Section 3.2 Document order
The first paragraph says that a document order is total.
The last two paragraphs broaden the discussion to include order between
nodes in different documents, or not in a document at all.
Is it intended that the ordering in the latter two paragraphs is total? Or
could a conforming implementation simply say, "I choose not to define an
ordering between nodes in different documents, or between nodes not in any
document. My ordering of these things is the trivial ordering, the one which
such things simply have no ordering."?
Put another way, is there anything that breaks if an implementation is not
able to place a collection of free-standing nodes into a stable order?
Yes, the XSLT expression document(//a/@href) ceases to produce repeatable
results.
Michael Kay
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1
/ Stephen Buxton stephen.buxton@oracle.com was heard to say:
This section has been redrafted to make this clearer in the 12 Nov spec.
Be seeing you,
norm
Norman.Walsh@Sun.COM / XML Standards Architect / Sun Microsystems, Inc.
NOTICE: This email message is for the sole use of the intended
recipient(s) and may contain confidential and privileged information.
Any unauthorized review, use, disclosure or distribution is prohibited.
If you are not the intended recipient, please contact the sender by
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)
Comment: Processed by Mailcrypt 3.5.8 http://mailcrypt.sourceforge.net/
iD8DBQE/skfMOyltUcwYWjsRAseyAJ491ZXqj1S1ejs9iwgvhA31HS9q8wCffOnv
zqgRk5JIKBnnsv8WYzSrZ44=
=PoxX
-----END PGP SIGNATURE-----
