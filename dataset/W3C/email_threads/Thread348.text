I just downloaded and compiled the 30apr00 release of HTML Tidy.
I tried it on a file which nsgmls (from sp-1.3) claims is valid
HTML 3.2 (according to the HTML32.dtd file I downloaded from the
W3C this year) except for one unrecognised attribute elsewhere.
When it got to this line:
HTML Tidy said
line 310 column 14 - Warning: code is probably intended as /code
line 310 column 50 - Warning: discarding unexpected /code
line 310 column 61 - Warning: discarding unexpected /code
The fragment is rather odd, but it *is* perfectly legal.
This sees to be a bug in HTML Tidy. The version of HTML Tidy I was
using before got this right; I _think_ it was late 1998.
HTML Tidy makes the same mistake with other examples of
CODE a CODE b /CODE c /CODE . In fact, it makes the same
mistake with _all_ the %font and %phrase elements that I have
tested. I enclose a test file at the end of this message.
I've tried it with Amaya and Netscape, and more importantly,
I've tried it with Nsgmls. They all love it. Only htmltidy hates it.
It is an excellent thing for HTML Tidy to produce WARNINGS for
instances of a font or phrase tag nested inside another occurrence
of the same tag. However, it is a BAD thing for HTML Tidy to change
legal HTML without an explicit command to do so. I do not have any
configuration files for HTML Tidy, so no command to change legal HTML
could have been found in one.
!-- File : foo.html
Author : Richard A. O'Keefe
Purpose: Test HTML Tidy. This is all LEGAL and should not be changed.
--
There has been a problem with Tidy's attempt to clean such things. I
thought a correction was made regarding BIG inside BIG and SMALL inside
SMALL to not clean those up (because they do have cumulative effect).
Otherwise, the nesting is presentationally meaningless and should be
cleaned up. Tidy's method of presuming that the second CODE should be
/CODE though is a very poor solution. IMO, the cleanup should wait until
after all other parsing is done, and then the interior tags can be
eliminated as a pair. Otherwise, first-pass parsing can only result in
these erroneous outputs:
CODE a /CODE bc
CODE a /CODE CODE b /CODE c
because it can't see that the tags as written were paired, and not the ideal:
Tidy doesn't just make invalid markup valid. It also cleans up useless yet
valid markup. I think this is very appropriate and addresses some types of
bad markup still found in the wild, mostly empty tags created by so-called
WYSIWYG editors.
And sometimes even they are intended, perhaps as a hook for styles which
use the "content" property, or used to detect whether or not stylesheets
are enabled, things Tidy can't know about without adding lots of code to
parse stylesheets, Javascript, VBScript, etc. You can argue that it's
still perfectly valid, but if Tidy became paranoid and avoided making any
changes to valid markup, next you'll want it to leave certain invalid
markup alone because the browsers still do what you mean (already dealt
with such a request), and eventually you'll end up with Tidy doing
absolutely nothing to anything. Once that happens Tidy ends up being just
a glorified cat.
I wrote about CODE ... CODE ... /CODE ... /CODE
Otherwise, the nesting is presentationally meaningless and
should be cleaned up.
Well, no. A style sheet could perfectly well say that CODE inside
CODE is formatted differently from CODE that is not inside CODE.
It doesn't require a CLASS attribute to do this.
code {
color: red; white-space: pre; font-family: monospace;
code code {
color: blue; white-space: pre; font-family: monospace;
That applies to things like SAMP SAMP and VAR VAR as well.
They *were* presentationally redundant (not meaningless) before the
introduction of CSS, but *aren't* now.
Tidy's method of presuming that the second CODE should be
/CODE though is a very poor solution. IMO, the cleanup should
wait until after all other parsing is done, and then the
interior tags can be eliminated as a pair.
Exactly. But even then, not without explicit permission.
Tidy doesn't just make invalid markup valid. It also cleans up
useless yet valid markup. I think this is very appropriate and
addresses some types of bad markup still found in the wild,
mostly empty tags created by so-called WYSIWYG editors.
True. I see a lot of empty P elements, and TABLE s inside FONT s,
and really unbelievable rubbish, from big-name products.
You can argue that it's still perfectly valid, but if Tidy
became paranoid and avoided making any changes to valid markup,
next you'll want it to leave certain invalid markup alone
because the browsers still do what you mean (already dealt with
such a request), and eventually you'll end up with Tidy doing
absolutely nothing to anything. Once that happens Tidy ends up
being just a glorified cat.
This is a "slippery slope" argument. Such arguments can be valid, but
there is a huge difference between syntactically legal HTML and
syntactically illegal argument, making the claim "next you'll want it
to leave certain invalid markup alone" unwarranted.
In this case, we are talking about a construction which is not just
legal but *harmless*. Now HTML Tidy has this "feature" because there
are HTML generators out there that get their brackets wrong; sometimes
this correction is *essential*.
I suppose that there is no disagreement that
- a warning is appropriate for technically legal "lint"
- this kind of stuff is sometimes a mistake so should SOMETIMES be fixed
- HTML Tidy's configuration files are a Good Thing
The question is
- *when* should the correction be made
- should it be made at all if the start- and end-tags are in fact
correctly balanced?
- what form should the correction take? (is there any disagreement
that HTML Tidy's treatment of *this* example is undesirable?)
- should the alteration of legal nested %fonts and %phrases be
enabled by default?
What you answer may well depend on what the HTML you most commonly have
to clean up looks like. This particular example is automatically
generated by someone else's program which I'd rather not have to try to fix,
especially as it technically isn't broken.
Please use the address I provide in the From header for attribution and not
the one in the X-Sender header. It is valid and does reach me. Also, I do
not need a carbon copy of replies sent to the list. I am subscribed to the
list and don't appreciate getting two copies. (I go to the trouble to not
send them myself even when my mailer prefers to do so, so I know from
experience that it isn't much to expect of others to do the same.)
Less than a month ago, Michael Fitz wanted Tidy to leave his
A DT DD /A and his A P P /A alone. Check the list archive,
subject "Bug tydiing A HREF... /A ".
How harmless is
B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B Now
THAT's what I call making a bold
statement
? Just because there's a chance there is a stylesheet rule selecting on
bold text nested 208 levels deep doesn't mean it's a GOOD rule. There are
better selectors to use than that, whether it is 208 levels deep or just 2
levels deep. I'd recommend using SPAN which is a truly presentationally
neutral tag which would not be reduced and adjusting one's stylesheet
selectors accordingly.
As such, I am completely in favor of reducing redundant nesting of
presentational HTML tags. If there's a class or id attribute applied to
some, I can see it being coerced (as Tidy calls it) to a SPAN (which will
alert the user to adjust the stylesheet accordingly), but I've also seen
software that generates useless id attributes on every tag (NetObjects
Fusion) and would like the option to ignore them.
If there is to be installed a switch on the reduction of redundantly nested
tags, it is my opinion that it should default to the ON position with the
note that there are better selectors to use than child-of-itself. Perhaps
one of the next enhancements in stylesheet parsing should be to warn
against such selectors on %fontstyle and %phrase markup, excluding BIG and
SMALL which do have a cumulative effect.
I challenged the "slippery-slope" argument to which gjames replied:
Less than a month ago, Michael Fitz wanted Tidy to leave his
A DT DD /A and his A P P /A alone. Check the list archive,
subject "Bug tydiing A HREF... /A ".
Ahem.
DT , DD , and P are NOT LEGAL inside an A element.
I am asking that HTML Tidy should not change legal harmless HTML
without explicit warrant. Michael Fitz's examples are blatantly illegal,
and therefore irrelevant.
How harmless is
THAT's what I call making a bold statement!
Pretty harmless. Look, we're *agreed* that HTML Tidy should at least
report a warning pointing out that this is odd and not terribly pointful.
Nobody is saying it should pretend it didn't notice anything!
A message such as
{file}:{line}:{column}:font element {gi} nested inside
{file}:{line}:{column}:an outer {gi} , use -noidem to clean this up
would make it clear that something odd is going on, what is odd, and what to
do about it.
Just because there's a chance there is a stylesheet rule selecting on
bold text nested 208 levels deep doesn't mean it's a GOOD rule. There are
better selectors to use than that, whether it is 208 levels deep or just 2
levels deep. I'd recommend using SPAN which is a truly presentationally
neutral tag which would not be reduced and adjusting one's stylesheet
selectors accordingly.
Yes, but I'm talking about HTML that  I am not in charge of .
If I were generating this stuff, I would certainly change the generator.
As such, I am completely in favor of reducing redundant nesting
of presentational HTML tags. If there's a class or id attribute
applied to some, I can see it being coerced (as Tidy calls it)
to a SPAN (which will alert the user to adjust the stylesheet
accordingly), but I've also seen software that generates useless
id attributes on every tag (NetObjects Fusion) and would like
the option to ignore them.
Such an option would be nice. But again, it should default to the OFF
state, because you can't *tell* which ID attributes are useless. One of
the key points about CSS is that users can install their own style sheets
which are not in or referenced by the document itself.
One thing I would certainly like would be an option to erase all nonstandard
attributes.
If there is to be installed a switch on the reduction of
redundantly nested tags, it is my opinion that it should default
to the ON position with the note that there are better selectors
to use than child-of-itself. Perhaps one of the next
enhancements in stylesheet parsing should be to warn against
such selectors on %fontstyle and %phrase markup, excluding BIG
and SMALL which do have a cumulative effect.
That would indeed be an enhancement for stylesheet parsing.
Note that I am not defending CODE CODE x /CODE /CODE as good style,
only as legal code. Lint-like warnings are a Good Thing.
I could live with a switch with the wrong default as long as there _was_
a switch.
There are other aspects of bad style that HTML Tidy could usefully do
something about. For example, the same document that had nested CODE
also had H1 ... /H1 ... H3 ... /H3 with no intervening H2 . That's
legal, so in my view HTML Tidy was right not to change it, but it is not
good style, so I wish HTML Tidy had said something about it.
I strongly agree on this. Right now, in a faible attempt to reproduce this,
I am filtering out known common illegal attributes (BORDERCOLOR on TABLE,
for example) "manually" by my perl scripts, but having Tidy do this would
certainly be the better approach.
sebastian.
