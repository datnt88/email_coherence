Hi again www-font folks,
I'd like to know whether TrueType or OpenType fonts contain fields that
give reliable ascender, descender, cap-height and x-height info. If so,
what are the names of those fields, and which tables are they in?
If the fonts don't contain reliable info for those parameters, would it
be a good idea (for ascender) to compute the median of the ascents of
the glyphs for the letters with ascenders? (I.e. b, d, f, h, etc?)
When I say "reliable", I'm referring to the ability to use those fields
in any existing, reasonably popular font.
Thanks again,
Erik
-----Oorspronkelijk bericht-----
Van: Erik van der Poel erik@netscape.com
Aan: www-font@w3.org www-font@w3.org
Datum: dinsdag 25 januari 2000 23:11
Onderwerp: Re: ascender, descender, cap-height and x-height
All,
So, if the actual glyphs have such a loose relationship with the em
square, and font size is defined in terms of em square, then
font-size-adjust becomes ill-defined too, since aspect is defined in
terms of font size (and x-height).
I think the font size should be the sum of the "nominal" ascender and
the nominal descender for fonts with upper and lower case letters, and
some other nominal value for other fonts. That's why I'd like to know
whether I can reliably determine ascender, descender and x-height, and
how to do that.
It is the type designer who decides on how large the font
is in the EM square. There are no rules. In TrueType
(and OpenType) you can get some measurements such
as the Typographic ascend and descend as explained by Greg.
These values are in the OS/2 table of the font.
In Monotype fonts these are set to top f and bottom g
for the font family. Whether fonts of other foundries
contain reliable values I am not sure. Many foundries didn't
bother much about these things until recently.
Jelle Bosma
Agfa Monotype
Do you also happen to know why those "many" foundries are now more
concerned about these things? I'd really like to know.
The reason I'm concerned is because the Internet has caused many
different platforms and many different document types to come into
direct contact. In the past, we had various word processing programs
like MS Word, WordPerfect, etc, and users cursed the software industry
for all of the (in)compatibility problems. These problems were
compounded by differences between the OSes (platforms).
However, now that we are using documents formats like HTML and XML
together with style sheets like CSS's on the Web, we need to standardize
font sizes. It is impossible to predict what kind of platform the user
is using, and which fonts they have available. So, CSS provides for font
substitution. You still want to have a "reasonable" font size, even when
substitution takes place.
But what exactly is "reasonable"? This is kind of subjective, but it
seems like we have some agreement that the size of a "bicameral" font
(one with both upper and lower case) is mostly dependent on the
x-height.
That is why CSS defines font-size-adjust. But for font-size-adjust to
work well, the underlying font-size must also be specified and
implemented well. Any help that www-font experts can provide is most
appreciated.
Erik
Because previously, type was set by a designer, by eye, and what they saw
then got written to film and used to make plates and what was printed was
what the designer saw (modulo factors such as dot gain and ink fill-ins on
traps and paper stretch and so on, which a good designer would work around
anyway).
Nowadays, type is frequently set by computer, and computers have no common
sense or design ability whatsoever but must mechanically follow rules. And
type is frequently specified on one computer but expected to work on
heterogenous platforms with different settings for pixel density, font
rasterisation algorithm, availability of anti-aliasing, different gamma,
different fonts (or different revisions of those fonts) and thus, the
optional extra information - which basically didn't do anything very
practical before apart from being there for completeness - is being
depended upon, has an effect,and therefore thre is precedent and reason to
put it in.
Exactly. The Web is a heterogenous distributed computing environment, and
that environment places different demands on type to the demands of a more
traditional, paper-oriented, homgeneous output environment. Thus, type has
adapted, as it always adapts, to the ways in which it is being used.
Chris
