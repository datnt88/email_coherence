I'd like to start a dialog on the last remaining open issues in the
requirements document, since I feel that for most issues, a little bit of
discussion will resolve the issue.
The requirements document lists the following issues as still being under
discussion:
* Whether support for multi-resource locking is needed
* Whether reservations should be treated as shared or advisory locks
* What requirements there should be for access control
* What requirements there should be for internationalization
* How far WebDAV should be concerned about compatibility with other
transport protocols besides HTTP
My views on these issues are as follows:
* Whether support for multi-resource locking is needed
I feel we will need atomic multi-resource locking for exclusive locks (this
isn't a problem for shared locks). If locking multiple resources requires
that each resource be individually locked (i.e., no atomic locking of
multiple resources is available), then if two or more principals try to
take out exclusive locks on the same set of resources, no principal will
end up with the desired result: having an exclusive lock on all resources.
I believe this can only be solved by making an exclusive lock of a set of
resources an atomic operation across all resources.
So I feel that yes, support for multi-resource locking is needed, and hence
the current requirement covering this ability should remain as-is:
5.3.1.2. Multi-Resource Locking. It must be possible to take out a lock
on multiple resources in the same action, and this locking operation
must be atomic across these resources.
* Whether reservations should be treated as shared or advisory locks
In my view, a shared lock meets the requirements for reservations, which
are defined as:
5.4.1.1. Reserve. It must be possible to notify the server that a
resource is about to be edited by a given person.
If you have a set of principals with equivalent access permissions on a
resource, a shared write lock indicates that one of those principals is
about to be edited (since presumably the only reason to take out a shared
lock (or a reservation) is prior to performing edits).
Since a shared lock meets the requirement for reservations, the issue
arises whether the terminology for reservations should be modified to use
the term "shared lock" instead of "reservation." This is a little less
clear. I think there is better correspondence between the requirements and
the current proposals if the wording is changed, but since the current lock
proposal meets the reservation requirements, the language doesn't have to
be changed. My inclination is to use the terminology "shared lock" in the
requirements document, but I could go either way.
* What requirements there should be for access control
This will be the subject of a draft by Jon Radoff.
* What requirements there should be for internationalization
We definitely need some words on this topic, however my lack of experience
in this area hinders my ability to construct a good requirement. Something
along the lines of, "All fields which might be displayed to a human user of
client software should be fully international." I'd appreciate some
assistance for good wording of "fully international" -- something along the
lines of "supports iso character set standard XXX" might work.
* How far WebDAV should be concerned about compatibility with other
transport protocols besides HTTP
Well, since our charter limits us to discussion on HTTP and Email as
transport protocols, this open issue really concerns email access. The
sense I have been receiving from the list is the current, "don't shoot,
don't spec." (don't shoot ourselves in the foot by making it impossible to
do an email mapping in the future, but don't actually write a spec. for
this right now) is how most would prefer to proceed.
If my reading of the sense of the working group is correct, then we should
not have a requirement on this topic, and can declare the issue closed. If
there is strong support for writing a spec. on email access, then Gregory
Woodhouse, who has volunteered to look into this, needs to write up some
requirements, which may or may not end up in future versions of
draft-ietf-webdav-requirements.
Comments?
- Jim
in this area hinders my ability to construct a good requirement. Something
along the lines of, "All fields which might be displayed to a human user of
client software should be fully international." I'd appreciate some
assistance for good wording of "fully international" -- something along the
lines of "supports iso character set standard XXX" might work.
How about "nothing in this specification shall be interpreted to
inhibit internationalization". As for the character set, the IAB
view is ISO 10646.
Regards,
Terry Allen Electronic Publishing Consultant tallen[at]sonic.net
Davenport and DocBook: http://www.ora.com/davenport/index.html
T.A. at Passage Systems: terry.allen[at]passage.com
I would like to see some slightly better international support
1) The server should support the notion of document language versions (similar in concept to renditions) and should always produce the language version corresponding to the language of the user's client, the explicit language version requested by the client (i.e. it should be possible to explicitly address a particular language version) or the default language.
2) The client should be able to specify its preferred languages in order of preference and the server should present from the existing language versions the one highest on the client's list. Failing this the default language should be presented.
3) It should be possible to specify to the server which language version is the default (master version)
4) When asking for a list of objects in a collection it should be possible to obtain a list of all the different language versions of each resource (the default should simply return the list of default language resources)
5) It should be possible to lock only a particular language version of a resource or all languages
6) There must be a way of indicating which nodes in the version graph for each language can be considered equivalent (there might be a different number of versions for each language version)
Cheers
Dylan
From: Terry Allen[SMTP:tallen@sonic.net]
Subject: Re: Open Requirements Issues
in this area hinders my ability to construct a good requirement. Something
along the lines of, "All fields which might be displayed to a human user of
client software should be fully international." I'd appreciate some
assistance for good wording of "fully international" -- something along the
lines of "supports iso character set standard XXX" might work.
How about "nothing in this specification shall be interpreted to
inhibit internationalization". As for the character set, the IAB
view is ISO 10646.
Regards,
Terry Allen Electronic Publishing Consultant tallen[at]sonic.net
Davenport and DocBook: http://www.ora.com/davenport/index.html
T.A. at Passage Systems: terry.allen[at]passage.com
H:From w3c-dist-auth-request@w3.org Thu Jun 5 18:45:29 1997
H:Resent-Message-Id: 199706060047.UAA07351@www19.w3.org
H:Date: Thu, 5 Jun 1997 17:48:36 -0700
H:From: Jim Whitehead ejw@ics.uci.edu
H:Subject: Open Requirements Issues
H:X-List-URL: http://www.w3.org/pub/WWW/Archives/Public/w3c-dist-auth/
H:X-See-Also: http://www.ics.uci.edu/~ejw/authoring
H:X-Mailing-List: w3c-dist-auth@w3.org archive/latest/861
H:X-Loop: w3c-dist-auth@w3.org
H:
H:I'd like to start a dialog on the last remaining open issues in the
H:requirements document, since I feel that for most issues, a little bit of
H:discussion will resolve the issue.
H:
H:The requirements document lists the following issues as still being under
H:discussion:
H:
H:* Whether support for multi-resource locking is needed
H:* Whether reservations should be treated as shared or advisory locks
H:* What requirements there should be for access control
H:* What requirements there should be for internationalization
H:* How far WebDAV should be concerned about compatibility with other
H:transport protocols besides HTTP
H:
H:My views on these issues are as follows:
H:
H:* Whether support for multi-resource locking is needed
H:
H:I feel we will need atomic multi-resource locking for exclusive locks (this
H:isn't a problem for shared locks). If locking multiple resources requires
H:that each resource be individually locked (i.e., no atomic locking of
H:multiple resources is available), then if two or more principals try to
H:take out exclusive locks on the same set of resources, no principal will
H:end up with the desired result: having an exclusive lock on all resources.
H:I believe this can only be solved by making an exclusive lock of a set of
H:resources an atomic operation across all resources.
H:
H:So I feel that yes, support for multi-resource locking is needed, and hence
H:the current requirement covering this ability should remain as-is:
H:
H:5.3.1.2. Multi-Resource Locking. It must be possible to take out a lock
H:on multiple resources in the same action, and this locking operation
H:must be atomic across these resources.
I find no problems here. However, I think it feeds directly into the next one ..
H:
H:* Whether reservations should be treated as shared or advisory locks
H:
H:In my view, a shared lock meets the requirements for reservations, which
H:are defined as:
H:
H:5.4.1.1. Reserve. It must be possible to notify the server that a
H:resource is about to be edited by a given person.
I think that if "multi-resource locks" are supported, than Reservation must account
for them more strongly. I think that if one wishes to edit multiple resources, than
the reserve operation should be "atomic", that is, you specify all resources that you
wish to edit "at the same time" and only if you can get a lock on *all* of them should
the server accept the reservation. If you can't get all of them, the server has to
inform you of that fact, and stop.
I suppose it could be permissible to request reservation of a set of resources without
the requirement of needing all of them at that moment, in which case being able to
reserve some but not all should be supported.
H:
H:
H:* What requirements there should be for access control
H:
H:This will be the subject of a draft by Jon Radoff.
H:
H:
H:* What requirements there should be for internationalization
H:
H:We definitely need some words on this topic, however my lack of experience
H:in this area hinders my ability to construct a good requirement. Something
H:along the lines of, "All fields which might be displayed to a human user of
H:client software should be fully international." I'd appreciate some
H:assistance for good wording of "fully international" -- something along the
H:lines of "supports iso character set standard XXX" might work.
is there an assumption that user-interaction with a WEBDAV server will always be
mediated thru a web browser? If so, couldn't we simply assert that a WEBDAV
server must have at least the functionality of a non-WEBDAV server with respect
to communicating with a "acculturated" browser?
H:
H:
H:* How far WebDAV should be concerned about compatibility with other
H:transport protocols besides HTTP
H:
H:Well, since our charter limits us to discussion on HTTP and Email as
H:transport protocols, this open issue really concerns email access. The
H:sense I have been receiving from the list is the current, "don't shoot,
H:don't spec." (don't shoot ourselves in the foot by making it impossible to
H:do an email mapping in the future, but don't actually write a spec. for
H:this right now) is how most would prefer to proceed.
H:
H:If my reading of the sense of the working group is correct, then we should
H:not have a requirement on this topic, and can declare the issue closed.
I agree with this.
Howard S. Modell
Adv.Computing Technologist/2 POBox 3707, m/s 4A-25, Boeing D&amp;SG
howard.s.modell@boeing.com Seattle, WA 98124-2207
It sounds to me like what you need is a kind of mandatory
content-negotiation in which
Accept-Language: en-us; q=1.0, *; q=0.0
Which would mean give me the US English version if it is available,
otherwise respond with
406 Not Acceptable
Similarly, a PUT (or check in) should be able to specify a language (It's
a little non-intuitive to use "Accept-Language" here, but I suppose it
would work. If the server is unable to store language specific versions,
or is unable to store the document under the language specified, I believe
it should respond with
409 Conflict
Gregory Woodhouse
gjw@wnetc.com / http://www.wnetc.com/home.html
If you're going to reinvent the wheel, at least try to come
up with a better one.
The proper label for the language of content is
content-language:, if it is part of the wrapper. Some
media types (e.g., text/html) also have provision for
labelling components as being in a particular language.
However, there isn't a direct correspondence between
accept-language (which describes the preference of
the user of the client) and content-language (which
denotes the language of the content for purposes of
viewing, hyphenation, display conventions, etc.).
I think PUT on negotiated resources for which the variants don't
have URLs should basically be disallowed. (Well, you might PUT a
multipart/alternative and then expect the result to be content
negotiated as a response). That is, if you have
foo.html
which is really
foo.fr.html and foo.en-us.html
and you just want to update the French version, then you should
PUT to foo.fr.html and not use some arcane invocation of PUT foo.html
which says "only replace a part of this".
It's probably the same reason why PUT on byte ranges should be
disallowed.
Larry
OK, I'm going to take a stab at the i18n requirement again.
Well, the only problem with this is that it's a negative requirement, and
it is hard to determine when it has been satisfied.
On the other hand...
1) The server should support the notion of document language versions
(similar in concept to renditions) and should always produce the language
version corresponding to the language of the user's client, the explicit
language version requested by the client (i.e. it should be possible to
explicitly address a particular language version) or the default language.
2) The client should be able to specify its preferred languages in order
of preference and the server should present from the existing language
versions the one highest on the client's list. Failing this the default
language should be presented.
3) It should be possible to specify to the server which language version
is the default (master version)
4) When asking for a list of objects in a collection it should be possible
to obtain a list of all the different language versions of each resource
(the default should simply return the list of default language resources)
5) It should be possible to lock only a particular language version of a
resource or all languages
6) There must be a way of indicating which nodes in the version graph for
each language can be considered equivalent (there might be a different
number of versions for each language version)
First, #1, #2, and #3 are already provided by HTTP/1.1 (although there is
currently some debate on this issue). Since we're building on top of
HTTP/1.1, this can be considered base capability.
#4 is interesting, perhaps Content-Language should be returned by INDEX, if
it is defined for a resource.
As for #5, the view so far has been to assume that every variant of a
resource is itself a resource, and hence has a URI. If it has a URI, then
it can be locked. So this capability is provided for by the locking
proposal.
#6 can be accomplished using links between resources. Links are discussed
in the properties draft.
To me, the areas within WebDAV which require i18n support are the value
fields for properties and version comments, since these will be displayed
to human operators of WebDAV clients. As a result, I think that the
following requirement could satisfy WebDAV i18n needs:
Internationalization: All attribute values and version comments must have
provisions for storing one or more of the encoding formats specified in
ISO10646.
Another way might be to leave it more general, and have a statement like:
Internationalization: All attribute values and version comments must have
provisions for storing a representation in any human character set.
Although I'm not sure that ISO10646 and "any human character set" are
identical. I prefer referring to ISO10646 since it's more concrete, and
avoid the issue of which character sets to support.
- Jim
With regard to i18n requirements
RFC 2068 does not specify the structure of the URI tree (i.e. does not specify that the german version of text.html is text.gr.html or gr/text.html or anything else) it is therefore not possible to write an authoring tool which hides this structure from the author unless we make additional specifications w.r.t #1, #3, #4, #5 and #6.
Cheers
Dylan
Up to now, it was assumed that this structure is an implementation issue
of the server. For usual HTTP use (serving documents), this is certainly
the case. It may be that this is different for WEBDAV issues.
Regards,Martin.
P.S.: German is "de", not "gr"!
It's true that #1 and #2 are provided. #3 is not really provided.
On many servers, it's realized by a (Unix file system) link from
document.html to document.en.html, or vice versa. Other conventions exist.
I don't know if it's possible to tell the server to make a link using HTTP/1.1,
and the mechanisms differ from server to server, so it's not
satisfied in a way that would allow to build webdav clients offering
this functionality easily.
These are some kind of "semantic links", not links in e.g. an Unix
file system?
I think for a requirements document, it is enough to address the question
of the character repertoire, without reference to encoding issues.
So how about:
All attribute values and version comments must have provisions for
storing all characters from the Universal Character Set (ISO 10646).
As for actual implementation, using UTF-8 is probably the best solution.
Having several encoding formats complicates things a lot.
Regards,Martin.
Not if the server decides to implement it otherwise :)
Cheers
Dylan
Yes. In the current proposal, a link is an item of metadata which has a
source URI, one or more destination URIs, and a type (which is a name in
the URI namespace). They are not symbolic links in the Unix file system
sense.
I like this wording.
I don't have any experience with implementing a system that uses ISO10646
character set encodings, but in ISP10646 it lists several escape sequences
which can designate which character encoding is being used. At least on
the surface, it would appear relatively easy to write code that read the
escape sequence, called the appropriate decoder based on the escape
sequence, and then stored everything internally in UCS-4 format. These same
escape sequences are described in Appx. E of the XML spec. -- if we're
going to have simple XML parsers in WebDAV clients and servers, then
implementation of multiple character sets comes along with this.
Or is there some technical difficulty here that would make it desirable to
only use UTF-8?
- Jim
Given your WG position on "other than HTTP", I find that my interst in
the WG has dimisinshed to the point of not paying attention any
longer, as it is clear that you do not want to be concerned with
anything other than HTTP.
So, I am going away to help you achieve consensus by asddig a loud bit
of silance. But, remember that "I told you so", as I will not be the
one to remind you when you wake up to the hard reality of not being
able to interwork via EMail, or anything other than HTTP.
Just one note at this point. The obvious solution to future
enablement of EMail support for WEBDAV (not WEBDAV support for EMail)
is to focus on plaicing all you PDUs inside MIME envelopes. With that
done, transoprt no longer remains a key issue for WEBDAV.
However, since you are all so fully focused on HTTP TRANSPORT to the
exclusion of any alternative transports, I have nothing more to
contribute, and I will stand aside and make no further comment.
Enjoy...\Stef
From your message Thu, 5 Jun 1997 17:48:36 -0700:
}I'd like to start a dialog on the last remaining open issues in the
}requirements document, since I feel that for most issues, a little bit of
}discussion will resolve the issue.
}The requirements document lists the following issues as still being under
}discussion:
}* Whether support for multi-resource locking is needed
}* Whether reservations should be treated as shared or advisory locks
}* What requirements there should be for access control
}* What requirements there should be for internationalization
}* How far WebDAV should be concerned about compatibility with other
}transport protocols besides HTTP
}My views on these issues are as follows:
[SNIP]...
}* How far WebDAV should be concerned about compatibility with other
}transport protocols besides HTTP
}Well, since our charter limits us to discussion on HTTP and Email as
}transport protocols, this open issue really concerns email access. The
}sense I have been receiving from the list is the current, "don't shoot,
}don't spec." (don't shoot ourselves in the foot by making it impossible to
}do an email mapping in the future, but don't actually write a spec. for
}this right now) is how most would prefer to proceed.
}If my reading of the sense of the working group is correct, then we should
}not have a requirement on this topic, and can declare the issue closed. If
}there is strong support for writing a spec. on email access, then Gregory
}Woodhouse, who has volunteered to look into this, needs to write up some
}requirements, which may or may not end up in future versions of
}draft-ietf-webdav-requirements.
}Comments?
}- Jim
I think there will soon enough be a 'policy' statement from
the IAB based on, but different from, the report of the IAB
charset workshop, such that it is not necessary for WEBDAV
to have an explicit policy on charsets. However, support for
authoring multi-lingual documents, and documents with variants
in multiple languages, and support for versioning thereof,
could usefully be addressed in the WEBDAV requirements; however,
I also think it will be difficult to get consensus on anything
that is meaningful, because individual's perceptions of requirements
in this area are widely varying.
Larry
Agreed!
I think it is one of the core tasks of producing a requirements
document to identify various perceptions and requirements and
see how and how much they vary.
There is definitely some degree of variation as to how much
support, e.g. for parallel documents in various languages, is
needed. But this is something that depends on the application,
and just because one web site doesn't need it doesn't mean
it's not very meaningful, or even crucial, for another site.
Before we try, we don't know.Regards,Martin.
I don't know where you get the impression that individual's perceptions of requirements vary widely on these issues because I am the only one who has ever stated what their position is on these issues.
Cheers
Dylan
From: Larry Masinter[SMTP:masinter@parc.xerox.com]
Subject: Re: Open Requirements Issues
I think there will soon enough be a 'policy' statement from
the IAB based on, but different from, the report of the IAB
charset workshop, such that it is not necessary for WEBDAV
to have an explicit policy on charsets. However, support for
authoring multi-lingual documents, and documents with variants
in multiple languages, and support for versioning thereof,
could usefully be addressed in the WEBDAV requirements; however,
I also think it will be difficult to get consensus on anything
that is meaningful, because individual's perceptions of requirements
in this area are widely varying.
Larry
