To see how the datatyping proposal works for Dublin Core, I decided to
convert the examples in the "Encoding Schemes" section of the Dublin Core in
RDF Draft[1] to the new datatyping proposal.
Open questions I have are noted in the comments.
[1] http://logicerror.com/dcrdfDraft
*** EXAMPLE 1 ***
_:page dc:subject _:a .
_:a rdf:type dct:MESH .
_:a rdf:value "D08.586.682.075.400" .
_:a rdfs:label "Formate Dehydrogenase" .
becomes
_:page dc:subject _:a .
_:a dct:mesh "D08.586.682.075.400" .
_:a rdfs:label "Formate Dehydrogenase" . # @@ a better datatype for this?
*** EXAMPLE 2 ***
_:page dc:language _:a .
_:a rdf:type dct:RFC1766 .
_:a rdf:value "EN" .
_:a rdfs:label "English" .
becomes
_:page dc:language _:a .
_:a dct:RFC1766 "EN" .
_:a rdfs:label "English" .
*** EXAMPLE 3 ***
_:page dc:coverage _:a .
_:a rdf:type dct:Point .
_:a rdf:value _:b .
_:b rdf:type dct:DCSV .
_:b rdf:value "name=Perth, W.A.; east=115.85717; north=-31.95301" .
becomes
_:page dc:coverage _:a .
_:a dct:DCSV "name=Perth, W.A.; east=115.85717; north=-31.95301" .
dc:DCSV rdfs:subClassOf dct:Point . # @@ is this right?
[ "Aaron Swartz" ; mailto:me@aaronsw.com ; http://www.aaronsw.com/ ]
This appears to be consistent with DC practice.
Should the property dct:mesh actually be dct:MESH? since that
is the URI (qname) of the datatype in question?
As an aside... (really ;-)
Per http://ietf.org/internet-drafts/draft-pstickler-val-00.txt I would say
rdfs:label "Formate Dehydrogenase" .
This way, you only have to define the label once, rather than for every
single occurrence of the datatype value.
Of course, this also encourages one to just say
_:page
dc:subject val:(http://purl.org/dc/terms/MESH)D08.586.682.075.400 .
but we won't go there ;-)
At first glance, it looks OK. This presumes that the value space of
dct:DCSV is a subset of the value space of dct:Point (though there
need not be any intersection of their lexical spaces).
It's nice to see the datatyping proposal resulting in some
compression of the DC idioms ;-)
Patrick
I think this is a good format to use for the Use Cases sections, to simply
reference one or more specifications for the application in question and
take a set of examples directly from those specifications and show how they
would be reexpressed using the datatyping idioms. Each Use Case section
then serves as a very concrete point of intersection between the RDF
Datatyping WD and the particular application specifications.
Don't worry about doing any pretty formatting, etc. Something along the
lines of what Aaron provided should be sufficient (i.e. N3 is OK).
I'll put it into the same form as the examples in the core of the WD.
Cheers,
Patrick
