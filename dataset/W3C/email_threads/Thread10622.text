This is a *scribe* report on the after hours discussion.
I am not expressing a personal opinion on the content here.
After hours of telecon today, the determined few (I think DanC, PatH,
Jeremy, JanG, DanBri) kept going for longer, discussing the complexity of
the 12a and 12b rules added to address horst-01 (one of the AOB items!).
A different possible design (to that in the editor's draft) was discussed.
The current design has extensional definitions of subClassOf and
subPropertyOf.
x,y is in IEXT(I(rdfs:subClassOf)) if and only if x and y are in IC and
ICEXT(x) is a subset of ICEXT(y)
x,y is in IEXT(I(rdfs:subPropertyOf)) if and only if x and y are in IP and
IEXT(x) is a subset of IEXT(y)
This could be changed to intensional definitions
If x,y is in IEXT(I(rdfs:subClassOf)) then x and y are in IC and ICEXT(x)
is a subset of ICEXT(y)
If x,y is in IEXT(I(rdfs:subPropertyOf))then x and y are in IP and IEXT(x)
is a subset of IEXT(y)
transitivity and reflexivity can be achieved by fiat:
e.g.
IEXT(I(rdfs:subClassOf)) and IEXT(I(rdfs:subPropertyOf)) are
transitive and reflexive.
(in the green box)
There was discussion of whether it is useful to have rdfs:Resource as the
maximal class. If yes, then this too, would have to be declared by fiat in
the model theory. It was suggested by Pat that declaring conditions by fiat
was distasteful. (Note the current truth of transitivity, reflexivity and
rdfs:Resource as maximal all follow from the extensional reading of
rdfs:subClassOf - thus any of these features we wish to maintain has to be
explicitly added to the MT).
The section 4.1
ang
would be retitled, to "Extensional RDFS" or something like that, and permit
semantic extensions to add back in the extensional reading of subClassOf and
subPropertyOf.
The rationale for such a change comes in the entailment rule appendix.
The bizarre rules rdfs12a and rdfs12b would no longer be needed, since their
validity depends on the extensional reading of subClassOf.
They would hence be moved from the main RDFS section to the variant at the
end (with rdfs2a rdfs3a rdfs4a' and rdfs4b'). Moreover, the completeness fix
I noted in my review would then be added to the only occurrence of these
rules.
Since these rules are a significant obstacle to complete implementation of
RDFS, dropping them to the optional extras section, is an advantage.
Jeremy
(I believe that Pat and Dan were the only others left, when we decided to
minute the after hours discussion).
This is a very nice and important report.
I now better understand the arguments and
agree that rules rdfs12a and rdfs12b
look bizarre (but are easy to implement)
and would agree to move them to the place of
rdfs2a rdfs3a rdfs4a' and rdfs4b'
(which are indeed causing a combinatorial
explosion, at least rdfs2a rdfs3a + owl)
Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/
Jeremy Carroll
Sent by: cc:
w3c-rdfcore-wg-requ Subject: horst-01 - after hours discussion
est@w3.org
2003-06-20 07:25 PM
This is a *scribe* report on the after hours discussion.
I am not expressing a personal opinion on the content here.
After hours of telecon today, the determined few (I think DanC, PatH,
Jeremy, JanG, DanBri) kept going for longer, discussing the complexity of
the 12a and 12b rules added to address horst-01 (one of the AOB items!).
A different possible design (to that in the editor's draft) was discussed.
The current design has extensional definitions of subClassOf and
subPropertyOf.
x,y is in IEXT(I(rdfs:subClassOf)) if and only if x and y are in IC and
ICEXT(x) is a subset of ICEXT(y)
x,y is in IEXT(I(rdfs:subPropertyOf)) if and only if x and y are in IP
and
IEXT(x) is a subset of IEXT(y)
This could be changed to intensional definitions
If x,y is in IEXT(I(rdfs:subClassOf)) then x and y are in IC and ICEXT(x)
is a subset of ICEXT(y)
If x,y is in IEXT(I(rdfs:subPropertyOf))then x and y are in IP and
IEXT(x)
is a subset of IEXT(y)
transitivity and reflexivity can be achieved by fiat:
e.g.
IEXT(I(rdfs:subClassOf)) and IEXT(I(rdfs:subPropertyOf)) are
transitive and reflexive.
(in the green box)
There was discussion of whether it is useful to have rdfs:Resource as the
maximal class. If yes, then this too, would have to be declared by fiat in
the model theory. It was suggested by Pat that declaring conditions by fiat
was distasteful. (Note the current truth of transitivity, reflexivity and
rdfs:Resource as maximal all follow from the extensional reading of
rdfs:subClassOf - thus any of these features we wish to maintain has to be
explicitly added to the MT).
The section 4.1
ang
would be retitled, to "Extensional RDFS" or something like that, and permit
semantic extensions to add back in the extensional reading of subClassOf
and
subPropertyOf.
The rationale for such a change comes in the entailment rule appendix.
The bizarre rules rdfs12a and rdfs12b would no longer be needed, since
their
validity depends on the extensional reading of subClassOf.
They would hence be moved from the main RDFS section to the variant at the
end (with rdfs2a rdfs3a rdfs4a' and rdfs4b'). Moreover, the completeness
fix
I noted in my review would then be added to the only occurrence of these
rules.
Since these rules are a significant obstacle to complete implementation of
RDFS, dropping them to the optional extras section, is an advantage.
Jeremy
(I believe that Pat and Dan were the only others left, when we decided to
minute the after hours discussion).
Having discussed this minute with Dave Reynolds, who leads on the Jena RDFS
implementation, I now express what will pass for the HP opinion, which
comes to a mild preference for the treatment in the current editors draft
over the changes discussed in this minute.
It seems like rather a big change to make at this late stage. Would you be
confident there weren't other properties that need to be declared by fiat
that haven't yet been identified?
A further advantage is that it may make it less likely that someone will
find an additional corner case like ter Horst's.
This rules may be a nuisance but they are not a major obstacle.
They don't look difficult or expensive to implement.
Given that the result of the rewrite would be, in some sense,
less clean I would think it would need some additional motivation than just
moving a couple of obscure rules slightly further down in the appendix.
Jeremy (with help from Dave Reynolds)
