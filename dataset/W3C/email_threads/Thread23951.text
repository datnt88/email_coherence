I am trying to get the possible choices for a select1 statement from one
instance, and the actual values of the selects from a different
instance. The problem is, in Chiba, the latter is ignored, and all
select boxes show only the first alternative. The code is as follows:
Can it be that jobResult-bind doesn't resolve to the same instance
document as job-bind, but instead looks in instance('jobResults')?
Victor
Hi Victor,
There are three problems here. The first is that in your code you have
nested the second xf:bind within the first:
(I assume there is a closing /xf:bind that you have snipped. If there
isn't, then this is invalid XML anyway, all of the following is irrelevant,
and you just need to fix your mark-up be stopping this being a nested bind!)
Nested binds *are* allowed, but the nodeset of the nested bind you have
specified would be:
job/result
which I assume is not what you want.
The second problem is that a nested bind is supposed to iterate over the
nodeset produced by its parent, and this causes problems if you try to label
the nested bind. For example, if you have:
it is obvious that the nodeset "b1" represents a nodeset of all x nodes. If
you then nest a bind:
it is also obvious that we want the readonly MIP to be true for all:
x/y
However, consider the following instance data:
If you concatenate the two @nodeset values together (the parent bind and the
nested bind) you get the XPath expression:
x/y
which will correctly find all 'y' nodes that are children of 'x' nodes. In
our above bind statements, this will set them all to readonly.
In other words this construct:
is equivalent to this:
However, nested binds are not about simply concatenating the XPath
statements. The following is valid, for example:
which shows that you have to iterate the nested nodeset 'y', across each
iteration of the parent nodeset 'x'. If you don't, then not all 'x' nodes
will be set correctly.
I would suggest checking whatever implementations you use for your projects
to ensure that this is how they work. If you are producing forms that should
run on a number of processors then you would be best to avoid labelling your
nested binds.
However, even if you sort this out, not all implementations will behave as
you expect - the third problem! - since the exact behaviour of an
xf:select(1) that takes its selection choices from one instance and places
the result in another is still being debated on the Working Group. Our
formsPlayer implementation does allow this, but we did have to a little
shuffling to make this work, so the WG is just trying to ensure that the
current implementations are all agreed on how it should be done.
I'm not sure if that helps you, but at least you know what the issues are!
Regards,
Mark
Mark Birbeck
CEO and CTO
x-port.net Ltd.
Download our XForms processor from
The example is working, valid XForms. See the reply to Susan Borgrink.
That is exactly what I want.
*snip* This works in Chiba, with the only exception of select statements.
What I do not understand here is the part of " an xf:select(1) that
takes its selection choices from one instance and places the result in
another". Would anyone want to fetch the choices from the input/output
file, according to some "selected" attribute? That would be redundant in
the extreme.
I'm sorry to say that fP already has been evaluated (albeit only a short
time) and discarded as an option for our project since it seems unable
to display the data in an orderly table. While Chiba looks like
only minimal CSS editing, fP looks like
If you can provide me with an example of an fP XForms document which
looks more like the Chiba example, I would be happy to re-evaluate your
product.
Victor
Victor, should it interest you we have done a lot of work developing a drag
and draw forms designer for xForms, and will be putting a beta3 (release
candidate) out this weekend.
The form at
direct output from the designer, and it took longer to ftp it to the web
than it did to create it
Best Regards
Rob
* This e-mail is for the intended recipient only, *
* its contents and the content of any attachments *
* is copyright material belonging to HoT Training *
* and Consultancy Ltd, and all information herein *
* should be treated as Company Confidential *
Behalf Of Victor
irrelevant,
bind!)
The example is working, valid XForms. See the reply to Susan Borgrink.
That is exactly what I want.
label
*snip* This works in Chiba, with the only exception of select statements.
What I do not understand here is the part of " an xf:select(1) that
takes its selection choices from one instance and places the result in
another". Would anyone want to fetch the choices from the input/output
file, according to some "selected" attribute? That would be redundant in
the extreme.
I'm sorry to say that fP already has been evaluated (albeit only a short
time) and discarded as an option for our project since it seems unable
to display the data in an orderly table. While Chiba looks like
only minimal CSS editing, fP looks like
If you can provide me with an example of an fP XForms document which
looks more like the Chiba example, I would be happy to re-evaluate your
product.
Victor
I'll take a look at it ASAP, but it would be great if you could answer
some questions beforehand:
- Does the designer support dynamic positioning of the input elements,
but still displaying them as a table? It is _not_ an option to use
absolute positioning for our project, as the layout must be as dynamic
as possible. Chiba supports this.
- Is it possible to make labels occur in the table header instead of
being displayed at each input element? Chiba supports this.
Yours sincerely,
Victor Engmark
Quid quid latine dictum sit, altum viditar - What is said in latin,
sounds profound
The designer currently supports absolute positioning or positioning relative
to formbody text, but this version would not create the tables that you
require, so could not put labels as headers.
Rob
* This e-mail is for the intended recipient only, *
* its contents and the content of any attachments *
* is copyright material belonging to HoT Training *
* and Consultancy Ltd, and all information herein *
* should be treated as Company Confidential *
I'll take a look at it ASAP, but it would be great if you could answer
some questions beforehand:
- Does the designer support dynamic positioning of the input elements,
but still displaying them as a table? It is _not_ an option to use
absolute positioning for our project, as the layout must be as dynamic
as possible. Chiba supports this.
- Is it possible to make labels occur in the table header instead of
being displayed at each input element? Chiba supports this.
Yours sincerely,
Victor Engmark
Quid quid latine dictum sit, altum viditar - What is said in latin,
sounds profound
