The NIST Java Test domimplementationFeatureNoVersion basically
calls asserting that docimpl.hasFeature("XML","") == true.
The DOM Level 2 spec says this about the version parameter:
version of type DOMString
This is the version number of the feature to test. In Level 2, the string can be either "2.0" or "1.0". If the version is not specified, supporting any version of the feature causes the method to
return true.
The most obvious way of "not specifying" the version would be to call
docimpl.hasFeature("XML",null).
It would probably be good to add an explicit test with a null version parameter
and to clarify the spec on how a zero-length version parameter should be interpreted.
See
Thank you,
Philippe
am 11.07.2001 23:57 Uhr schrieb Philippe Le Hegaret unter plh@w3.org:
"[...] If the version is null or empty string, supporting any version of
the feature causes the method to return true."
Maybe this should better read
"If the version is null (or undefined) or empty string..."
because in ECMAScript the most common way to not supplying an argument is
leaving that argument "undefined" (which is a valid ECMAScript value), so
you'd just call
document.implementation.hasFeature("XML")
instead of
document.implementation.hasFeature("XML",null)
bye, Thomas
It seems that the undefined value is not supported in Mozilla. We'd better
stick with our current wording and let the implementations dealing with the
undefined value if they want too (but the spec will not recommend to do that).
Philippe
