Glen,
The recent discussions and proposals in the W3C fonts news list about
fonts on the Web have raised some very legitimate concerns about
protecting the works of font designers and type foundries in the world
of global electronic publishing.
While each of the proposals has some potential advantages, and
disadvantages, in my opinion none of the proposals - GIFs, PixelFonts,
Java App/Fonts - really addresses the issue of how to prevent the
misappropriation of fonts in already popular and well-established
formats, if they are to be used effectively on the Web. As desirable and
flexible, and gee-whiz as a new font format might prove to be,
publishers will be reluctant to give up their investments in their
current font libraries or to simply wait to do their Web-based
publishing until a new font format has been worked out and accepted by
the industry.
To bring the discussion back into the realm of font security, let me
make a proposal that focuses on securing *all* fonts, in any current or
future format, that is based on available technology and known good
encryption and authentication techniques.
1. I believe, very simply, that fonts should not be embedded on a Web
page - that is, the font data and fonts programs in any format that can
be handled directly by standard font rasterizers, like TrueType or PS
Type 1, should not become part of a Web page in any form. Not
re-encoded, not encrypted, as a block of binary data, etc. Not in any
form.
The mechanisms used in HTML, or CSS1 to specify a font for use on the
page should specify either a URL reference to a font on the Web server,
or a set of parameters that allows the browser to match local fonts to
the desired font (you know, like Face/Family, Weight, Style or PANOSE,
or other font mapping systems), or the set of parameters that allows the
browser to synthesize a font with particular metrics, using any font
synthesis technologies they might build in (like Adobe MM, or Chamelion,
etc.) ... THAT IS, there can only be a *reference* to a font, *never*
the font itself.
2. Having a full URL for the font might tempt some less than upright net
denizens to try to get the font directly from its Web server. To prevent
the outright advertisement of the location of a font, the font URL
reference should be restricted to *only* relative URLs, not fully
qualified URLs.
3. The browser itself must enforce a policy that prevents *any* font
from being downloaded from a Web server different than the one
originating the Web page the font request is in.
4. When the browser downloads a font from a Web server and "installs" it
into the operating system (so it can take advange of the regular OS font
machinery), the browser *must* use the existing facilities for "private"
installation (both Windows and Mac have parameters for installing fonts
as private). This way, the fonts are not seen by or available to other
applications running on the same box - only the browser will be able to
use the font. For UNIX, because there is no standard font mechanisms
(except for X BDF fonts), it is likely that the browser, if it
implements font support, will have a built in connection to a
font-rasterizer or two, and it can control its use of the rasterizer
very tightly.
5. If a browser downloads a font and keeps it in its cache, the font
*must* be encrypted (with strong encryption, like RSA or PGP).
6. A Web page author should be able to specify that they want secure
_transmission_ for a font. The font reference tag(s) in HTML or CSS1
should have an optional attribute "SECURE". When the browser retrieves a
SECURE font, it should use the SSL security mechanisms, The server for a
secure font must then, of course, be a secure server.
Given these precautions, and the cooperation of browser vendors and
manufacaturers, I believe that fonts can be safely used on Web pages
without fear of casual appropriation, or even moderately determined (and
therefore *deliberate*) attempts to lift a font out of its Web page.
Gary Ruben Bitstream Inc.
Senior Software Engineer 215 First Street
Bitstream does not necessarily endorse any opinions expressed here.
(Come to think of it, you might not either. 8-o)
TrueDoc creates new versions of existing fonts and distributes those
new versions. In any country where the outlines are protected, that
distribution is illegal if it's without the permission of the
copyright owner for the original outlines. In the US, it's illegal
for dingbat fonts and for fonts with design patents.
that TrueDoc rasterizes at the receiver instead of the sender, allowing
the use of the best possible resolution.
You could equally say that a system which simply displayed the new
John Grisham novel on multiple remote viewing systems is ok.
Not the same. The legal use of a novel is for reading (or as a paper
weight, window prop, or door stop, I suppose :-) ). The legal use of
a font is to publish a document. Publishing inherently entails
imaging the font. TrueDoc only delays the time at which the final
imaging is done.
Sure, if you play by the rules. But Bitstream makes the software
which will convert a font back into an installable font. Even if
Bitstream made that software unavailable, someone else could
write it.
A challenge without knowing what the data format is....
What's the situation then? Bitstream says that it's ok to
distribute the TrueDoc font file, so anyone who receives a
TrueDoc font file must have a legitimate copy of that TrueDoc font
file.
Wrong. Wrong. Wrong.
Bitstream says it's OK to distribute the TrueDoc font resource ONLY in
conjunction with an associated document to be imaged on the client
system.
A licensed developer can distribute TrueDoc font files.
Our licensees receive the right to distribute programs capable of
creating and/or rendering TrueDoc Portable Font Resources. They are
allowed to distribute TrueDoc font resources only if they have
licensed the font(s) for redistribution.
Anyone can receive them, and at that point can do whatever they
want with the font files, according to Bitstream's legal analysis.
The font files may only be used to render the document they are
associated with.
I want web fonts. But the only way I'm going to be satisfied that my
rights are being protected is if Bitstream acknowledges explicitly
that I own the copyright on Arboreal2, and explains that as long as
Arboreal2 is linked to a document, distribution of Arboreal2 is fair
use and thus legal. However, Arboreal3 would not be fair use, and would not
be legal.
See previous response.
Michael, I'm glad that you're taking the time to explain your concerns. With
this detailed explanation, I can see that part of the problem is a lack of clear
understanding of what TrueDoc is and what it does. (Which in turn is likely due
to poor communications on our part.)
I hope I've been able to answer your (and everyone else's) concerns. If not,
I'll be happy to keep going on both the public and private channels.
I think you'll find that Bitstream's aims and concerns are congruent with those
of font designers. After all, what value is there to a remote font imaging
technology (i.e. TrueDoc) if everyone already has the fonts????
Thanks for your input!
Regards,
Brad Chase
Product Manager
Bitstream Inc.
brad_chase@bitstream.com
Brad Chase:
TrueDoc creates new versions of existing fonts and distributes those
new versions. In any country where the outlines are protected, that
distribution is illegal if it's without the permission of the
copyright owner for the original outlines. In the US, it's illegal
for dingbat fonts and for fonts with design patents.
limitation, it embeds vector based fonts in documents, this has no resemblence
This is obviously the sort of misinformation that the TrueDoc consortium is
distributing to its employees, as I've heard exactly the same line on a number
of occasions.
Sure, if you play by the rules. But Bitstream makes the software
which will convert a font back into an installable font. Even if
Bitstream made that software unavailable, someone else could
write it.
Yes, took me all of half an hour. I wish everything else in lfe were so
"challenging".
What's the situation then? Bitstream says that it's ok to
distribute the TrueDoc font file, so anyone who receives a
TrueDoc font file must have a legitimate copy of that TrueDoc font
file.
But can do nothing to stop those being separated.
Anyone can receive them, and at that point can do whatever they
want with the font files, according to Bitstream's legal analysis.
So what is the difference between it and PDF embedding then?
Isn't this what it is and what it does:
Creates a poor quailty trace of an original font, thereby removing all
"software" copyright.
Makes that "resource" (I note with interest, as I'm sure others have, that
you have begun to call these things "fonts") available to anyone with half
an ounce of spare grey matter, circumventing all copyright and licensing
agreements.
Therefore creating the instant TrueDoc font cloning factory.
Don't understand that, "if everyone already has the fonts", of course they don't
already have the fonts, but you can sure provide them with facsimiles, ah, at
-- Clive
