I thought that I knew, but when I listed them all out, my answer was
non-intuitive and I realized that there does not exist a complete taxonomy
in the current drafts against which I can check my work.
The XQuery Language draft says
"The built-in types of XQuery include the built-in atomic types of [XML
Schema] (such as xs:integer and xs:string), and the following special
derived types: fn:dayTimeDuration and fn:yearMonthDuration (described in
[XQuery 1.0 and XPath 2.0 Functions and Operators])."
(15 Nov draft, Section 2.4, paragraph 1)
However, the data model clarifies that
"An atomic type is a primitive simple type or a type derived by restriction
from a primitive simple type. Types derived by list or union are not
atomic."
(15 Nov draft, section 5, paragraph 1)
[and then attempts to confuse the reader with a digression into the nineteen
primitive built-in types of schema]
So it seems from the above definitions that XQuery has all of the built-in
atomic types from XML Schema except those that are derived by list, plus the
extra types that XQuery adds.
By my count, this means XQuery has 44 built-in atomic types: The 44 types
of XML Schema 1.0, minus the three list types NMTOKENS, IDREFS, ENTITIES,
plus the two duration types dayTimeDuration and yearMonthDuration, plus the
ur-type anySimpleType. (Magically the three types XQuery adds cancels out
the three types it removes.)
Is this correct?
Thanks,
Michael Brundage
xquery@attbi.com
More generally, probably all derived types will be provided through type
annotations in the data model -- so xs:NMTOKENS is supported (and built-in
to XML Schema) just like any other derived type, but it seems that it is not
really a "built-in" type in XQuery, by the terminology in the drafts.
I am skeptical that I can query "of type xs:NMTOKENS" (or any other list
type), since it seems that I am not allowed to use that type as a
constructor: xs:NMTOKENS("A1 B2"). But then again maybe one or both of
these are allowed?
Also, what if I were to query
if (@att instance of attribute of type xs:NMTOKEN*) ...
or
if (data(@att) instance of xs:NMTOKEN*) ...
Do these queries succeed or fail with att is annotated with type
xs:NMTOKENS?
Thanks for the quick reply,
Michael Brundage
xquery@attbi.com
My understanding is that the three built-in list types of XML Schema are
available for use in XQuery as type annotations on element and attribute
nodes. You can ask:
if (@att instance of attribute of type xs:NMTOKENS) ...
What you cannot do is to associate the type xs:NMTOKENS with an atomic value
or a sequence of atomic values. Like the names of user-defined complex
types, it exists only as a name that can be used to annotate nodes. When you
atomize the node, the value that you get back is of type xs:NMTOKEN*.
I hope I've got it right...
Michael Kay
xs:NMTOKENS can be used in a construct of the form "attribute of type
xs:NMTOKENS", because it performs the same role as a user-defined type that
can be used as a type annotation for element and attribute nodes.
You can only use constructors for atomic values, so the constructor is
always the name of an atomic type. xs:NMTOKENS is a simple type, but it is
not an atomic type.
attribute of type xs:NMTOKEN*
means
(attribute of type xs:NMTOKEN)*
that is a sequence of attributes, each of which is of type NMTOKEN.
(Yes, it's **** confusing, and I sincerely hope we are going to change the
syntax to make it less so).
This one is fine, and succeeds.
Michael Kay
syntax  to make it less so).
Oops -- yes, you're totally right. I bet this will be a common user error.
Thanks for the reply,
Michael
