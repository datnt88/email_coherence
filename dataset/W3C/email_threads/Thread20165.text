Hi,
Some basic set elements such as SPAN, SUB, SUP, etc., insert an ancestor
(ADDRESS?) when they're inserted on a new empty document. In
CreateNewElement, it appears CanInsertBySplitting returns FALSE on current
element (type 27) at the insertion point, and ListRuleOfElem subsequently
returns ADDRESS as a possible ancestor where the element is inserted as a
child under. As far as I know, the standard does not require presence of
ADDRESS (or other ancestor -- well, it has to be inside BODY obviously)
before inserting SPAN, SUB, SUP, etc.
Is this a bug? If so, what is the suggested code fix?
Thanks!
-An
I've dug deeper into this...
It appears that inserting a pseudo paragraph fixes this problem (if it is
indeed one). Then the next question is, is this a correct fix? Will it be
safe to universally insert a pseudo paragraph before SPAN, etc., or just in
the case where it follows the BASE element? I'm thinking maybe in some case
where it is illegal to insert SPAN, inserting the pseudo paragraph may
become a backdoor.
On another note, inserting this pseudo paragraph also allows you to type
text right after inserting an image after BASE! Is this valid HTML structure
or is the behavior of such code undefined by the spec? If it's valid then
inserting the pseudo paragraph appears to fix this other problem.
Thanks for any feedback!
-An
Hi,
Some basic set elements such as SPAN, SUB, SUP, etc., insert an ancestor
(ADDRESS?) when they're inserted on a new empty document. In
CreateNewElement, it appears CanInsertBySplitting returns FALSE on current
element (type 27) at the insertion point, and ListRuleOfElem subsequently
returns ADDRESS as a possible ancestor where the element is inserted as a
child under. As far as I know, the standard does not require presence of
ADDRESS (or other ancestor -- well, it has to be inside BODY obviously)
before inserting SPAN, SUB, SUP, etc.
Is this a bug? If so, what is the suggested code fix?
Thanks!
-An
Oops, I meant BODY, not BASE. :)
I've dug deeper into this...
It appears that inserting a pseudo paragraph fixes this problem (if it is
indeed one). Then the next question is, is this a correct fix? Will it be
safe to universally insert a pseudo paragraph before SPAN, etc., or just in
the case where it follows the BASE element? I'm thinking maybe in some case
where it is illegal to insert SPAN, inserting the pseudo paragraph may
become a backdoor.
On another note, inserting this pseudo paragraph also allows you to type
text right after inserting an image after BASE! Is this valid HTML structure
or is the behavior of such code undefined by the spec? If it's valid then
inserting the pseudo paragraph appears to fix this other problem.
Thanks for any feedback!
-An
-----Original Message-----
Hi,
Some basic set elements such as SPAN, SUB, SUP, etc., insert an ancestor
(ADDRESS?) when they're inserted on a new empty document. In
CreateNewElement, it appears CanInsertBySplitting returns FALSE on current
element (type 27) at the insertion point, and ListRuleOfElem subsequently
returns ADDRESS as a possible ancestor where the element is inserted as a
child under. As far as I know, the standard does not require presence of
ADDRESS (or other ancestor -- well, it has to be inside BODY obviously)
before inserting SPAN, SUB, SUP, etc.
Is this a bug? If so, what is the suggested code fix?
Thanks!
-An
Hi Ly,
SPAN, SUP, SUB, etc. elements are in-line elements and Amaya needs a block
element to format them in line. When they are not put into a paragraph Amaya
is waiting for a pseudo block level (the pseudo paragraph). The pseudo paragrah
is automatically generated by our HTML parser and is never exported.
In-reply-to: Your message of Wed, 01 Sep 1999 16:40:27 -0400."
Irene.
Hi Irene,
I quickly tested importing an existing doc and it indeed inserts a pseudo p
before SPAN and IMG. But the GUI incorrectly (?) inserts an ADDRESS block
element when I insert a SPAN/SUP/SUB, etc. And it doesn't insert any block
element when I insert an IMG. I am testing with 2.0a.
Oh, how to tell if the parent of insertion point is a pseudo block
level-type of element?
Thanks for your help...
-An
Hi Ly,
SPAN, SUP, SUB, etc. elements are in-line elements and Amaya needs a block
element to format them in line. When they are not put into a paragraph Amaya
is waiting for a pseudo block level (the pseudo paragraph). The pseudo
paragrah
is automatically generated by our HTML parser and is never exported.
In-reply-to: Your message of Wed, 01 Sep 1999 16:40:27 -0400."
in
case
structure
Irene.
In-reply-to: Your message of Thu, 02 Sep 1999 10:48:24 -0400."
The thotlib looks within the structure schema for finding out what path allows
you to insert an element type at the current position in the document tree.
That algorithm works 80% of the time. For remaining 20% you have to insert
first an intermediate element.
With TtaGetParent and TtaGetElementType.
Irene.
