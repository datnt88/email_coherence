To the GL list for Discussion
WCAG and ?undue hardship?
We are currently involved in the evaluation of the accessibility of a
popular online course authoring package, the developers of which have
taken the initiative to make to products, or courses, created with their
software, WCAG A compliant. Here in Canada there is a clause in the
accessibility legislation that protects, in particular, employers who
are faced with excessive costs to create an accessible work environment.
Excessive cost is considered an ?undue hardship?.
The the course authoring software uses Javascript in virtually all of
its authoring tools. To provide alternatives would mean a complete
rebuild of the software, and the functionality of the software would be
affected considerably. In my opinion this rebuild would represent undue
hardship for this developer. Second, since the vast majority of browsers
today support Javascript (to whatever extent), and these browsers are
generally free in an educational setting, is it not acceptable to ask
that students use such a browser. Do we ask this developer to spend a
half a million dollars to rebuild their software, or do we ask the few
lynx users to download Internet Explorer for free? How long do we hang
onto legacy technologies as a basis for writing accessibility
guidelines, when those guidelines stunt progress?
Currently the WCAG lists alternatives for scripts (6.3) as a priority 1
item. This effectively limits many web developers from making use of the
functionality Javascript has to offer, and I believe it is unreasonable
to list script alternatives as a ?must do? item. In the case of the
developer we are working with, they have gone to great lengths to
improve the accessibility of the course products created with their
software, but are unable to comply with the A conformance
recommendations without rebuilding the underlying structure of there
product. I believe it is unreasonable to deny this developer a label
that states they are complying with the WCAG guidelines when there
product supports accessibility for most of the technologies currently
available.
In the next draft of WCAG, item 6.3 should be moved up to a priority 2
level.
I would like some guidance on this issue. How do we address the use of
technology, such as javascript, when that technology has been
accommodated in the majority of browsers and adaptive technologies, and
represents a barrier to only a small number of users. These users have
available to them at no cost, the technology that will eliminate these
barriers. Can we grant this developer the A conformance label based on
the ?undue hardship? argument? Or, will the next version of the WCAG
recognize Javascript as standard web technology, and ask for
alternatives to script as a ?should do? item, rather than a ?must do?
item?
References
GUIDELINES FOR ASSESSING ACCOMODATION
REQUIREMENTS FOR PERSONS WITH DISABILITIES
Greg Gay
Centre for Academic and Adaptive Technology
University of Toronto
416 978-4043
ICQ 9020587
GG:: "We are currently involved in the evaluation..."
WL: Who's "We"?
I just don't think that characterizing lynx as "legacy technology" is
any more useful than thinking of UNIX as "old hat". The problems of
JavaScript have to do with standards conformance, proprietary vs. open
standards, interoperability, and lots of other issues relating to simply
paying attention instead of heading up some primrose path of "latest,
coolest, etc." stuff.
In most cases the choices were made to use non-standard constructs by
people who should have known better and the fact that retrofitting is a
bitch while possibly a defense in this matter is still at best specious.
If they are truly talking about hundreds of thousands of dollars cost in
this thing then they should seek better programmers and re-examine their
pricing structure.
Incompetence is not a valid excuse and undue burden doesn't allow for
self-imposed burdens. If this comes off as a flame, so be it. They got
caught polluting the stream and now want to avoid sharing the cost of
the cleanup (full stop.)
Love.
ACCESSIBILITY IS RIGHT - NOT PRIVILEGE
While I generally support the idea that we can not support legacy technology
forever I would suggest caution about 'free' browsers. While there may be no
cost for many current browsers there may be other factors that prevent their
use - older computers and operating systems that are not compatible, older
screen readers that don't work with the newer browsers, 'public access
equipment' where you can't download and install anything you want.
In my signature.
Granted.
What is Lynx's market share? For those with a disability? For those without
one? Those using older technology?. I have to argue for progress. Economics
is an issue we can't overlook.
Javascript was introduced into this product before the release of WCAG.
Before web accessiblity was in the public consciouness. You can not deny
that Javascript is widely used. I would hazard a guess that Javascript web
developers are approaching a majority. Javascript is used enough that it
should be drawn into open standards. W3C should be providing guidance for
Javascript developers, developing standards to get Javascript back on track
after being derailed when Microsoft introduced it's own version. Javascript
is too useful and too widely used to deny it's use.
The fact that the developers I speak of have created this product to work
equally well in IE and Netscape versions of Javascript shows they have been
paying attention. Perhaps they are the ones to assist in developing
standards for JS.
This is a very large complex piece of software, that retrofitting will
involve a huge untaking. Rebuilding from scratch may be a more economical
approach, but given the investment in developing the product, would be
unrealistic.
Incompetence is not an issue. These developers are innovators that are doing
their best to meet the accessibility guidelines. They are leading their
field in adopting accessible design practices in course authoring software.
They came to us with the honorable intention of making Web based education
accessible to people with disabilities. Yes they are retrofitting. Not out
of incompetence, but out of the untimely introduction of the WCAG after they
had made all those unfortunate design decisions.
Your words are harsh, and uncalled for. These people are trying, and want
guidance, not critisism. What can they do to rectify to situation without
giving their right arm?
Greg Gay
Centre for Academic and Adaptive Technology
University of Toronto
416 978-4043
ICQ 9020587
The concept of undue hardship is relevant in the courtroom (or in a
tribunal hearing), but not in the guidelines.
I agree with an earlier observation from Charles that we do need to
establish the minimal requirements that can be expected of a user agent
for purposes of the guidelines, and these are likely to be rather limited.
XHTML Basic, now available as a public working draft, provides interesting
insight into what are thought to be the minimal capabilities of user
agents, including emerging mobile devices, and can obviously serve as a
starting point for further discussion. Of course, there are many reasons
why client-side scripts are either inaccessible, or unavailable to
identifiable groups of users; and these are reflected in the guidelines.
Whether the requirement to provide alternatives to such technology would
create "unjustifiable hardship" is relevant in the context of
anti-discrimination law, but not in determining what users' needs are with
respect to the design of accessible web content, the latter being the task
of the guidelines.
Greg,
I wish you luck. A JavaScript heavy tele-course out of George Washington
University is making full participation by the staff I support who are blind
impossible. The site has massive usability problems in general, so support
of sited staff involved in the program is merely very difficult. I wish
there was an accreditation process for online courses.
The prohibition against JavaScript is appropriately P1 because its use
pretty much make access impossible for some people. The only possible
exception is when JavaScript is used in an intranet and you have fine
control (including version numbers) over the computer, the operating system,
the browser, and the screen reader. Is this your setting or do you expect
people to access the system from home?
You are applying the test for "undue hardship" at the wrong place in the
timeline. We do not allow architects to create buildings without ramps and
then claim that the cost of retrofitting wheelchair access to be too high!
With regard to the supposed obsolescence of Lynx, can you offer a better
"litmus test" for ensuring compatibility with PDA's, Cell Phones, Web TV,
car dashboard browsers, not to mention screen readers?
The first manifestation of JavaScript may predate the WCAG, but where are
the standards for it? How do you *KNOW* that your JavaScript is formally
valid? You can't! This is still the tail wagging the dog. The issues of
electronic accommodations for the disabled predates both by decades! The
ADA, the culmination of many years of discussion and civil rights action,
was passed in 1990! Microsoft Windows '95 was delayed six months because it
was not accessible! This is OLD news. When did your software developers
start work on this project? Was it more than ten years ago? Was it more
than five years ago? If not, they have no excuse for having their heads in
the sand!
Yes, mistakes are costly and expensive. I don't see what choice you have
but to bite the bullet.
Cheers,
Bruce Bailey
ines_eng.htm#Standards_for_assessing_undue
A similar discussion on JavaScript is occurring on the [Webwatch] list. I
am interested in this GL thread because of the way the US Federal
Government is using part of WCAG in section 508. Before I post this
response to the [WEBWATCH] list, I will be following the feedback on this
w3c-wai-gl thread.:
From: webwatch@telelists.com
But if you
go the yes route, then you open up web pages to full blown Java applets,
Shockwave and a host of other technologies that haven't a chance of being
accessible any day soon. So how should legal standards of web
accessibility address this issue?
Phill proposed response:
I believe technologies such as JavaScript, Java, Shockwave, Flash, and/or
formats such as .html, .mov, .pdf, .doc, etc. should have defined
"accessibility standards" for each technology or format that will clearly
delineate where the author responsibility lies and where the assistive
technology responsibility lies. I believe there *are* industry recognized
standards for HTML accessibility (see W3C WAI Web Content Accessibility
Guidelines [1]), for browsers [read html players], (see W3C WAI User Agent
Accessibility Guidelines [2]), and for Java applets (see IBM Java
Accessibility Guidelines [3]). There are clear guidelines on how to add
captions and descriptions to .mov's and the players that support them.
What's missing. I do not know of any industry recognized accessibility
standard for some technologies and formats, such as pdf, flash, and
shockwave. I may be wrong about pdf - in that there may be some guidelines
published on an Adobe site on how to make pdf accessible. To make the
advancement of new technologies and formats viable - we should be
supporting "legal standards" that request that "accessibility standards" be
established for the new technology/format - as opposed to prohibiting the
technology/format or as opposed to requiring a duplicate alternative
format. Let me explain this last statement with JavaScript as an example.
JavaScript is simply a scripting language that allows the page content to
have some smarts and interactivity. For example, the running total in the
ACB order form. Newer level screen readers working with newer level
browsers provide good access to pages with JavaScript. Even self-voicing
browser *should* be able to provide access to interactive content by
supporting JavaScript. The Home Page Reader development team is working on
this very problem. In my opinion it would be counter productive to
"legally require" all pages that use JavaScript to also provide a
non-JavaScript alternative. That would be like requiring all GUI
applications to also provide a non-gui version because old DOS screen
readers couldn't handle them. I am sure we may have all felt that way a
decade ago, but we have made great strides in providing access to GUI
applications. So why would we require all web sites to provide a
non-JavaScript alternative when it would be less expensive and better to
require assistive technologies to support JavaScript. JavaScript was
invented to solve some real problems that could not be handled in HTML
alone, just as GUI's were invented to solve problems in old DOS command
line interfaces. In some cases it may be impossible to provide the same
level of functionality using HTML without JavaScript - hence what we really
want is "accessible JavaScript".
[The thread on Webwatch was asking that since we do have "accessible
JavaScript" on the Windows platform with certain versions of screen readers
- then why should we encourage legislation like 508 that requires a
duplicate alternative? ]
So what do we do? I believe we should "label" technologies/formats as
accessible or not depending on whether or not there are published industry
standards for accessibility for that particular technology/format. In my
opinion there is a problem with the current 508 standards and the W3C Web
Content Accessibility Guidelines because they heavily burden the users of
JavaScript by requiring a duplicate text/html alternative when there are
clear standards for making HTML/JavaScript accessible. The expense of
upgrading to the new "accessible technology" and the expense of upgrading
my assistive technology to handle the new "accessible format" is a related,
but really a separate issue, and more related to can I afford the computer,
phone line, ISP, etc. to get connected to the Internet in the first place.
There are plenty of older screen readers and computers that can't handle
GUI's but we don't have legislation requiring duplicate text command line
alternatives. So with civil rights and affordability aside for a moment,
the industry/advocacy groups should establish whether the technology/format
is fundamentally accessible or not. The WAI has done a good job with HTML,
CSS, and SMIL. SUN and IBM have done a good job with Java, and Microsoft
has a done a good job defining Windows application accessibility. We
should demand "more good jobs" on technologies such as pdf, shockwave,
flash, WAP, and VoiceXML etc. Perhaps we should be lobbying for more
"legal" spending to establish accessible standards for newer technologies
and advances in assistive technologies.
Regards,
Phill Jenkins,
IBM Accessibility Center - Special Needs Systems
11501 Burnet Rd, Austin TX 78758 http://www.ibm.com/able
[1] http://www.w3.org/TR/WAI-WEBCONTENT/
[2] http://www.w3.org/TR/UAAG/
[3] http://www.ibm.com/able/snsjavag.html
Jason
I have to disagree. The WCAG is currently being used widely to judge
accessiblity and guide the development of web accessiblity legislation
in
Canada, the US, and Australia ( and probably elsewhere).. It is only a
matter
of time before the WCAG is used in an accessibility related litigation.
"Undue
hardship" may be only one of the implications of introducing WCAG. I can
imaging there will be other issues associated with the language used in
the
guidelines, that will arise when the courtrooms begins to hear Web
access
cases. I have not scrutinize the language of WCAG so I do not know where
the
holes appear, but the next version of the guidelines should be created
with
the foresight that they will be used in the courtroom .
agent
limited.
interesting
a
Accessibility with regard to disability, and accessiblity with regard to
user
agents are two different issues which need to be distinguished when
referring
to notions such as undue hardship. Laws have been put in place to ensure
that
people with disabilities are not excluded. There will be no such laws
put in
place to ensure that web content is accessible to a person accessing it
through their cellular phone. User agent accessiblity will be design
decision.
Yes, the two are not mutually exclusive.
guidelines.
As html can be inaccessible. As with html, accessible authoring
practices can
be introduced, and the language itself upgraded to include
accessibility
features. Javascript development should also follow this path.Where do
you
draw the line between the responsibility of developers, or the
innovators who
develop technology like javascript, to create accessible script enabled
pages,
and the responsibility adaptive technology developers, who make there
products
able to interpret these pages. This question seems to pop up on a
regular
basis. The adaptive technology developers such as IBM and Henter Joyce
have
taken on the responsibility of creating products that will deal with
non-w3c
formats. What do we tell Sun, who is actively seeking to make Java
accessible; It's not a standard W3C format so it shouldn't used? What
about
VRML, or Flash? Both of these developers are also working to add
accessibility
to their technology. W3C will not be able to control the introduction of
such
technology, so why not guide them so they create a product that is
accessible,
rather than dictating they comply with limiting standards?
Greg Gay
Web Projects &amp; Instructional Design
Centre for Academic and Adaptive Technology
GG:: "he next version of the guidelines should be created with the
foresight that they will be used in the courtroom."
WL: We've been over this a lot and as I recall have pretty much agreed
that this is a really bad idea for any of our guidelines. I don't know
how to selectively search the archives to collate this, but I'm sure
this is the consensus and possibly an official W3C position. We note
policy on a "policy page" but...
Love.
ACCESSIBILITY IS RIGHT - NOT PRIVILEGE
I think Phill identifies the issues here fairly clearly, although I would
note that hte question of what is a reasonable approach for the US might not
work so well in other countries, where the markeyt for and range of assitive
technologies is much more limited. We should bear this in mind if we are
writing guidelines for a world wide web consortium.
Charles McCN
A similar discussion on JavaScript is occurring on the [Webwatch] list. I
am interested in this GL thread because of the way the US Federal
Government is using part of WCAG in section 508. Before I post this
response to the [WEBWATCH] list, I will be following the feedback on this
w3c-wai-gl thread.:
From: webwatch@telelists.com
But if you
go the yes route, then you open up web pages to full blown Java applets,
Shockwave and a host of other technologies that haven't a chance of being
accessible any day soon. So how should legal standards of web
accessibility address this issue?
Phill proposed response:
I believe technologies such as JavaScript, Java, Shockwave, Flash, and/or
formats such as .html, .mov, .pdf, .doc, etc. should have defined
"accessibility standards" for each technology or format that will clearly
delineate where the author responsibility lies and where the assistive
technology responsibility lies. I believe there *are* industry recognized
standards for HTML accessibility (see W3C WAI Web Content Accessibility
Guidelines [1]), for browsers [read html players], (see W3C WAI User Agent
Accessibility Guidelines [2]), and for Java applets (see IBM Java
Accessibility Guidelines [3]). There are clear guidelines on how to add
captions and descriptions to .mov's and the players that support them.
What's missing. I do not know of any industry recognized accessibility
standard for some technologies and formats, such as pdf, flash, and
shockwave. I may be wrong about pdf - in that there may be some guidelines
published on an Adobe site on how to make pdf accessible. To make the
advancement of new technologies and formats viable - we should be
supporting "legal standards" that request that "accessibility standards" be
established for the new technology/format - as opposed to prohibiting the
technology/format or as opposed to requiring a duplicate alternative
format. Let me explain this last statement with JavaScript as an example.
JavaScript is simply a scripting language that allows the page content to
have some smarts and interactivity. For example, the running total in the
ACB order form. Newer level screen readers working with newer level
browsers provide good access to pages with JavaScript. Even self-voicing
browser *should* be able to provide access to interactive content by
supporting JavaScript. The Home Page Reader development team is working on
this very problem. In my opinion it would be counter productive to
"legally require" all pages that use JavaScript to also provide a
non-JavaScript alternative. That would be like requiring all GUI
applications to also provide a non-gui version because old DOS screen
readers couldn't handle them. I am sure we may have all felt that way a
decade ago, but we have made great strides in providing access to GUI
applications. So why would we require all web sites to provide a
non-JavaScript alternative when it would be less expensive and better to
require assistive technologies to support JavaScript. JavaScript was
invented to solve some real problems that could not be handled in HTML
alone, just as GUI's were invented to solve problems in old DOS command
line interfaces. In some cases it may be impossible to provide the same
level of functionality using HTML without JavaScript - hence what we really
want is "accessible JavaScript".
[The thread on Webwatch was asking that since we do have "accessible
JavaScript" on the Windows platform with certain versions of screen readers
- then why should we encourage legislation like 508 that requires a
duplicate alternative? ]
So what do we do? I believe we should "label" technologies/formats as
accessible or not depending on whether or not there are published industry
standards for accessibility for that particular technology/format. In my
opinion there is a problem with the current 508 standards and the W3C Web
Content Accessibility Guidelines because they heavily burden the users of
JavaScript by requiring a duplicate text/html alternative when there are
clear standards for making HTML/JavaScript accessible. The expense of
upgrading to the new "accessible technology" and the expense of upgrading
my assistive technology to handle the new "accessible format" is a related,
but really a separate issue, and more related to can I afford the computer,
phone line, ISP, etc. to get connected to the Internet in the first place.
There are plenty of older screen readers and computers that can't handle
GUI's but we don't have legislation requiring duplicate text command line
alternatives. So with civil rights and affordability aside for a moment,
the industry/advocacy groups should establish whether the technology/format
is fundamentally accessible or not. The WAI has done a good job with HTML,
CSS, and SMIL. SUN and IBM have done a good job with Java, and Microsoft
has a done a good job defining Windows application accessibility. We
should demand "more good jobs" on technologies such as pdf, shockwave,
flash, WAP, and VoiceXML etc. Perhaps we should be lobbying for more
"legal" spending to establish accessible standards for newer technologies
and advances in assistive technologies.
Regards,
Phill Jenkins,
IBM Accessibility Center - Special Needs Systems
11501 Burnet Rd, Austin TX 78758 http://www.ibm.com/able
[1] http://www.w3.org/TR/WAI-WEBCONTENT/
[2] http://www.w3.org/TR/UAAG/
[3] http://www.ibm.com/able/snsjavag.html
W3C Web Accessibility Initiative http://www.w3.org/WAI
Location: I-cubed, 110 Victoria Street, Carlton VIC 3053
Postal: GPO Box 2476V, Melbourne 3001, Australia
not
assitive
Although the "market for" English versions of assistive technologies may be
lower in other countries, [not everyone reads or wants English] most if not
all assistive technologies available in the U.S. are also available world
wide, just not available in the national language. So where are the
guidelines for assistive technology developers to "translate" their
offerings? Wouldn't it be more practical to "translate" the assistive
technologies than to write guidelines that get added to legislation
requiring all pages to be usable without such technologies in the national
language? The "making accessible" of existing governments web pages alone
in each country could probably pay for the translation costs.
Regards,
Phill Jenkins,
IBM Accessibility Center - Special Needs Systems
11501 Burnet Rd, Austin TX 78758 http://www.ibm.com/able
aloha, greg!
the purpose in promulgating the guidelines is not to provide guidance to
regulatory bodies, but to define and explain, to the greatest extent
possible, to the widest possible audience, the concepts of accessible
design and to provide guidance for web content creators so that they are
able to provide accessible content, in the absence of tools that
automagically produce accessible markup wherever it is possible to do so...
what use (for good or ill) third parties make of the WAI suite of
guidelines is beyond the WAI's purview, and out of its control... what is
in the WAI's control is:
- ensuring that the information contained in WCAG is as accurate and
up-to-date as possible
- ensuring that the document can be used by the widest possible variety of
audiences for the widest possible variety of uses
- ensuring that, when content is created in accordance to WCAG, it serves
its purpose, by being as accessible to the widest possible audience as possible
yes, regulatory bodies will look to the WAI guidelines for (for lack of a
better term) guidance in drawing up regulations and purchasing
requirements, but that is not the function of the WAI guidelines... the
function of the WAI guidelines is to ensure that persons with disabilities
enjoy equal read/write access to the web
wherein lies the undue hardship? not on the developers who should have
adhered to standards, but on the end user who can't use the
software... ignorance is never an excuse, but wanton disregard, once
inaccessibility has been identified, is inexcusable...
so, your developers have a simple choice: 1) scrap it and start over,
adhering to industry standards for the platforms for which the product is
being developed, 2) retrofit the product (which inevitably leads to
half-assed access), or 3) continue on with the current development cycle
and face a class action suit by those who cannot participate in distance
learning because the software is inaccessible....
all JavaScript has a function -- if you can explain the functionality of
the JavaScript, what is preventing you from adding functional equivalents
for the functions the JavaScript is being used to provide?
and don't downplay the intersection of usability, interoperability,
internationalization, and accessibility -- while the laws of some countries
may state that equal access must be provided for persons with disabilities,
market forces demand that equal access must be provided for persons not
using a desktop computer, a monitor, and a mouse to access the web... the
solutions advanced for accessibility can equally be advanced for
interoperability and -- especially -- internationalization... wouldn't
potential clients be better off, then, with an interoperable product that
works equally well for those using adaptive technology, those using mobile
devices, and those for whom the distance in distance learning isn't merely
geographical or cultural, but technological as well?
when i worked as webmaster and technical director of online courses for a
small college in new jersey, the college's administration and board of
trustees were overjoyed to discover that, due to the interoperability of
the pages that i had created for them, they had suddenly received a great
many inquiries and registrants for their online courses from places as
distant as the United Arab Emirates, mainland China, southeast Asia, and
several African nations -- places where access to the internet, let alone
the latest and greatest in hardware and software, is either extremely hard
to secure, or which can only be achieved using javascript-incapable
technology...
so, draw your own conclusions about the weight of the burden faced by your
programmers -- but keep in mind the undue, and unnecessary, burdens you are
placing upon thousands of users...
which is more of an "undue hardship" -- fixing the programmatic problems or
having no autonomous access to online courseware?
gregory.
Well,
one might think so. Unfortunately, the evidence suggest otherwise - with
technologies such as JFW and Windows (which are perhaps the single most
common combination discussed on this list) "localised" (i.e. non-english)
versions often lack important features for months or years.
I agree with you that having better quality software is a better solution
than requiring authors to go through too many hoops to compensate for what we
have. However, it is important to provide access to real people in the real
world, and "Until user agents.." (to borrow a phrase) measure up, and
authoring tools do too, to the extent that we can rely on people having
appropriate technology, there are problems that can be solved by authors (or
not, should they so choose).
The combination of a 486 machine running linux and screader or speakup is not
actually so rare in a community where unemployment or underemployment is the
majority experience. Even in the economically successful USA. On the other
hand, in Denmark the government pays for Jaws. And versioning lags
significantly by comparinson to the english language version.
Not only does everybody not want english, but through much of the middle
east, africa, and asia, the software is not just unable to produce anything
like an appropriate rendering (more so with braille than speech synthesis,
since contraction conventions vary, and only a handful of languages use the
same set of letters as english) - it is useless for arabic, indic, "CJK"
(chinese/japanese/korean), thai, greek, russian, serbian, as well as tonal
and many other alphabets. A similar problem arises for tonal languages like
vietnamese that use (heavily accented) latin alphabets, but where a different
intonation means a different word (ba means grandmother or three, ga means
fish or chicken...) And adding this kind of functionality does not come
cheap. Internationalising a piece of software requires robust design in the
first place, good knowledge of the particular language, and skill. The
problem is not in knowing how it should be done, the problem is in
actual implementation - rewriting masses of code because it assumed that a
single keypress could be used for a single character, or that text would be
left to right, or that accented text could be understood without the accents.
cheers
Charles McCN
not
assitive
Although the "market for" English versions of assistive technologies may be
lower in other countries, [not everyone reads or wants English] most if not
all assistive technologies available in the U.S. are also available world
wide, just not available in the national language. So where are the
guidelines for assistive technology developers to "translate" their
offerings? Wouldn't it be more practical to "translate" the assistive
technologies than to write guidelines that get added to legislation
requiring all pages to be usable without such technologies in the national
language? The "making accessible" of existing governments web pages alone
in each country could probably pay for the translation costs.
Regards,
Phill Jenkins,
IBM Accessibility Center - Special Needs Systems
11501 Burnet Rd, Austin TX 78758 http://www.ibm.com/able
W3C Web Accessibility Initiative http://www.w3.org/WAI
Location: I-cubed, 110 Victoria Street, Carlton VIC 3053
Postal: GPO Box 2476V, Melbourne 3001, Australia
There are several issues arising here:
1. What is the baseline capability that we are aiming at?
This has been identified by the group already as something taht needs to be
specified in a revision of the guidelines.
2. Should the guidelines be written based on what is "reasonable effort"
This has been discussed before, over the last couple of years. I would
suggest that the status quo - that the checkpoints are described in terms of
user needs, rather than what is seen as relatively feasible, since that
changes extremely rapidly, and depends on where you start - one man's
impossible is another woman's product, or so I have seen it happen.
3. Should we be writing guidelines to be used in a legal setting?
Any W3C specification has to meet a standard of being interpretable,
implementable, and leading to the interoperability of the web. It has to
acheive consensus in the w3c process. However, it is not issued by a
government. It should be appropriate as a basis for a government to use as a
description of what will make content accessible, but decisions about what is
undue burden vary from place to place and situation to situation. I would be
extremely unhappy if the levels applied in the USA were used by us in such a
way that the Australian government (which sets higher standards in some
areas) ended up having a lower standard, or vice versa.
just my personal thoughts
Charles McCN
Jason
I have to disagree. The WCAG is currently being used widely to judge
accessiblity and guide the development of web accessiblity legislation
in
Canada, the US, and Australia ( and probably elsewhere).. It is only a
matter
of time before the WCAG is used in an accessibility related litigation.
[snip}
agent
limited.
interesting
a
Accessibility with regard to disability, and accessiblity with regard to
user
agents are two different issues which need to be distinguished when
referring
to notions such as undue hardship. Laws have been put in place to ensure
that
people with disabilities are not excluded. There will be no such laws
put in
place to ensure that web content is accessible to a person accessing it
through their cellular phone. User agent accessiblity will be design
decision.
Yes, the two are not mutually exclusive.
