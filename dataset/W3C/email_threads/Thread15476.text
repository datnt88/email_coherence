The following is, give or take, the process that Judy Brewer has
requested.
There will be an introductory overview email broadcast on the IG
list that summarizes the process and briefly surveys the issues.
Issues associated with proposals are:
ORDER Preserving the logical reading order of text
OPTION Making SELECT structures with lots of OPTIONs comprehensible
TABLE Making TABLEs comprehensible
DESC Text associated with images
REF&amp;META Associating HTML contents with external documents
(and similar LINK and META extensions)
I am suggesting that we mention the following but not try to
stimulate discussion on them:
Images used as list bullets
Range of MEDIA values
Controlling dynamic features
For each of the first set of five areas, there will be a
discussion-starting email with the following outline:
- Summary of the problem
- Summary of the draft recommendation from the HC group
- Discussable points -- e.g. 3-5 leadoff questions
("So, what do you think?" does not count)
- Participant instructions -- including please use topic code in subject.
All six of these messages will go out over the IG mailing list in
a burst. Discussion will be welcomed asynchronously. If things
get slow we may pick a topic to poke at more actively. That kind
of facilitator behavior should be coordinated through Judy.
If anyone can throw together a draft of one of the five topical
messages please speak up. I will draft something for any or all
of these during office hours of Wednesday, Boston time. If
anyone can help, let me know you will do one and I will skip that
one. But these should be sent over the HC mailing list by East
Coast suppertime.
Then y'all will have about 12 hours with them to comment and fix
any glaring gaffes. I will collect them and take care of
coordinating their being sent over the IG list on Thursday with
Judy. And we'll be off...
-- Al
Here is 1st my cut at explaining this issue:
Some HTML documents include forms with very long selection menus.
The large number of options on these menus makes them hard to
browse when using speech-based browsers or browsers that show
a few words at a time in a very large print.
A possible solution is to find a way to break up such menus
into smaller labelled pieces. This would be done by allowing
authors to group options and to add labels to these groups.
This can be done in such a way as avoid problems for people
using existing browsers. Authors would need to consider both
old and new browsers when writing HTML pages.
Regular windows based browsers would be able to render
option groups in a variety of ways, e.g. horizontal rules
between groups, slide-right menus as used by Windows 95, or
tabbed dialogs. Everyone wins, including people with disabilities.
The changes to HTML required for this basically involve adding
one new element to be called OPTGROUP which represents a group
of options. The WAI-HC list has been discussing two proposals.
The simplest approach is to use OPTGROUP as a container for the
OPTION elements that define the options in each group. To allow
for hierarchically nested option groups, the OPTGROUP elements
can be nested. Each option group can be labelled using an
attribute called, naturally enough, "label".
Authors provide labels for options that make sense when
viewed with older browsers. In the absence of the context
provided by the option groups, these labels need to spell-out
the full meaning of each option. For newer browsers that do
show the option groups, this would make the options look
rather long winded. To deal with this, the label attribute
is also added to the OPTION element. Newer browsers use this
attribute, when present, in preference to the element's content
when fetching the label for each option.
This proposal makes the option group structure immediately
apparent in the markup, particularly so if the elements are
indented to reflect the level of nesting.
Another proposal is to make OPTGROUP an empty element like BR,
and to use attributes to markup which OPTGROUP each OPTION
belongs. To allow for nested option groups, you can also state
which OPTGROUP's a given OPTGROUP belongs. Each OPTGROUP is
given a unique name with the ID attribute. The axes attribute
for OPTION and OPTGROUP lists a set of ID values that name
the groups the element belongs to. The option group label is
stated using the label attribute on each OPTGROUP.
This proposal is harder to author and harder to grasp when
looking at the markup. This makes it more likely for authors
to slip up, and less likely that they will bother to use
option groups in the first place.
Regards,
-- Dave Raggett dsr@w3.org http://www.w3.org/People/Raggett
World Wide Web Consortium (on assignment from HP Labs)
Here is my cut at the image description issue:
Images are very important to the look of most Web pages.
This naturally presents accessibility problems for people
with visual disabilities. Traditionally images in HTML pages
are specified using the IMG element, and to a lesser extent
with the form field INPUT element for image fields (type=image).
For both of these elements, authors can provide a short
description with the attribute named "alt". Most authoring
guidelines recommend authors to use this feature. HTML 4.0
makes this a required attribute.
Whats missing is an ability to specify a longer rich text
description for images -- a richer description that can
include headings, paragraphs, lists and hypertext links etc.
This is especially critical for images that are being used
for image maps.
HTML 4.0 introduces a new element named "object" for embedding
images and other objects into HTML pages. Unlike IMG, object
is a container that wraps around the alternative content to
be used when the object itself can't be rendered directly.
We are hoping that authors will switch from IMG to OBJECT over
a period of time.
Unfortunately measurements of which browsers people are using
show that many people take a long time to upgrade to newer
browsers. As a result, Websites are forced to design their
HTML pages to look good on older browsers as well as the latest
models.
As a result, the IMG element will be in use for a long time
to come, and we need to find a way for authors to make IMG
more accessible. The proposed solution is to add a new attribute
named "longdesc" that can be used to provide a URL pointing
to a longer description. This will in most cases be placed in
a separate file. People using say speech-based browsers will
first read the alt attribute and then choose whether to
follow the link provided by the longdesc attribute.
Some people have suggested other approaches. For instance,
including longer descriptions within the image data files.
Both GIF and JPEG have a provision for including text within
the image data. The downside is the long time it takes to
retrieve the image files, something most people will want to
avoid if they aren't going to be able to see the images anyway.
Another proposal has been to find some way to get Web servers
to look at the user agent info supplied with each request. When
a request for whitehouse.gif is received from a browser that
doesn't understand images, the server could be smart enough to
check its database to see if there is a description file for
this image. This sounds like a great idea! But experience has
shown that its hard to setup and maintain servers in this way,
both for Webmasters and for mere authors.
In the face of this, it seems like a reasonable idea to promote
the longdesc attribute for IMG. Its something that we can get
HTML editing tools to cater for and is easy to explain to authors.
People with regular vision win too, as often when the network
slows to a crawl, its convenient to turn off images, and soon
enough there will be a flood of small portable wireless devices
for browsing the web leading to increased emphasis on speech
output.
Regards,
-- Dave Raggett dsr@w3.org http://www.w3.org/People/Raggett
World Wide Web Consortium (on assignment from HP Labs)
Here is my cut at describing accessibility for tables:
Today HTML pages use tables for two purposes: to layout
pages, and to present tabular information. Both uses present
accessibility problems.
When tables are being used purely for visual layout, the issue
is mainly one of reading order. This can perhaps be dealt with via
style sheets and is being described in greater detail in another
message. This message will focus on how to improve the browsing
experience for tabular information.
Tabular information generally consists of headers and data. Imagine
using a speech-based browser to examine a table designed for visual
browsers. If there are more than just a few cells it will be easy to
forget the headers as you move from cell to cell. If there was some
way of knowing which headers are appropriate to this cell, then
perhaps you could ask for these headers to be spoken, either on
request, or automatically when you move to a new cell. This will
work much better if the author has been so kind as to provide
abbreviations for headers.
Table captions are generally chosen in the knowledge that most
users will be able to glance quickly at the table contents. The
caption therefore is quite brief. It would be useful if authors
were to provide a supplemental summary of the table's structure
and purpose for use with non-visual media such as speech and
Braille. HTML 4.0 therefore proposes to add a new attribute named
naturally enough, "summary". This attribute will be on the table
element so it can be provided even when there is no caption.
The proposals for specifying which headers are relevant to each
cell are designed to allow these headers to be grouped and for
these groups to be ranked. This is intended to give implementors
the freedom to treat the table as a hierarchy that is independent
of the visual layout chosen for windows based browsers. The idea
is to allow large and complex tables to be browsed in a similar
way to browsing file system directories, with the ability to
hide or expose levels of detail.
The scope attribute allows authors to state whether a given header
applies to the current row, column, row group or column group.
This takes advantage of new table features in HTML 4.0 for
specifying column properties and for grouping rows and columns.
Scope works well for most simple tables. Here is an example taken
from the latest draft of HTML 4.0:
TABLE summary="History courses in Bath arranged by course name,
tutor, summary, code and fee"
TH colspan="5" scope="colgroup" Community Courses -
Bath Autumn 1997 /TH
The summary attribute is used to summarise the role and structure
of the table:
"History courses in Bath arranged by course name,
tutor, summary, code and fee"
Each row is represented by the TR element. The first row contains
column headers. These are marked up using the TH element, each of
which has scope="col" to indicate its role as a column header.
The abbr attribute is used to provide an abbreviation for longer
headers.
The next row is marked up as:
The course will examine the turbulent years in England
after 1646. EM 6 weekly meetings starting Monday 13th
October. /EM
The TD element is used to markup each data cell. The first cell
in the column gives the course name. Since this is considered
to be helpful when browsing subsequent cells in the row, it has
been marked up with the scope attribute, this time with scope=row
to indicate that its relevant to the rest of the current row.
The scope attribute is of limited generality. For cases where
it breaks down, we propose an attribute called "axes" that is
used to list the ID's of all relevant headers. The name is based
upon the idea of thinking of tabular data in terms of values
at points in an n-dimensional space. The headers then form
marks along the axes of this space. An attribute called "axis"
is used to supply a name indicating which axis a given header
belongs. Scope and axes are interelated and implementors are
likely to map them both into the same internal model of which
headers are relevant to each cell.
Finally, there is interest in being able to associate tables
with meta-information that describe richer semantics about
the table.
Regards,
-- Dave Raggett dsr@w3.org http://www.w3.org/People/Raggett
World Wide Web Consortium (on assignment from HP Labs)
Dave,
I think this is working.
Can you take a whack at folding the two TABLE drafts together?
I would like to ask that you upgrade "there is interest" to
"the W3C should ensure" as regards the link to external data
dictionary (or eq.). We can question the level of interest
during the week with the IG.
I have some stuff from Daniel and Jason and will merge that
with what you sent on "LONGDESC and friends."
How many of the others are you planning to draft?
-- Al
I have to admit I had been wondering about a variation on SCOPE
which would take an ID [or IDs?] as its value. This would let it
refer to a column group it doesn't fall within (as in the case of
diagonally placed headers) or specify an outer column group when
it falls within a nest thereof. I think that this lets it
identify anything that it can now, designating container element
types.
-- Al
The axes attribute already provides this flexibility -- specifying
the location of a cell in the n-dimensional space described by the
headers, while axis is used to group headers for a given axis.
Do we really need another mechanism?
Regards,
-- Dave Raggett dsr@w3.org http://www.w3.org/People/Raggett
World Wide Web Consortium (on assignment from HP Labs)
to follow up on what Dave Raggett said:
I agree that the same semantics can already be expressed in that
way. The advantage is just a matter of economy of markup. For
the cases where it makes a difference, you could be saving AXES
markup on a lot of body cells by one SCOPE indication on one
header.
-- Al
