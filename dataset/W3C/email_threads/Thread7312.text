One area I'd like some clarification on (unfortunately I got into
WEBDAV a little late) is where the protocol is "positioned." The
IETF description of the WG talks about developing new HTTP methods,
etc.
Development of new HTTP methods and headers has been the technical approach
favored by this group since the Palo Alto meeting (see
implementors overwhelmingly favored a method-based approach over an
RPC-like system using POST with parameters in the body.
A concern I would have would be relying on Web server vendors to
provide the necessary capabilities "soon"; it should be possible to
implement the necessary protocols through (at a minimum) CGI programs
that could become extensions of the Web server. That way we
effectively support the entire legacy infrastructure.
One of the environment variables passed to a CGI script is
"REQUEST_METHOD", hence it is possible to implement new WebDAV methods
using CGI scripts.
The existing
infrastructure of e-mail, Web browser and Web server products
should be capable of supporting the aims of WEBDAV by encapsulating
requests within multipart/form-data requests on the "input" side
and the current Web server infrastructure on the output side.
The current position on this is that email access to WebDAV functionality
is extremely desirable, but due to lack of interest on anyone's part to
become a document editor for a document that defines both requirements for
email access, and a mechanism for email access, at present the WG is simply
ensuring that any design they develop does not preclude future development
of a standard for email access to WebDAV functionality.
However, since there are many new members on the list, let me repeat my
call for volunteers to be a document editor of a document which gives
requirements and a proposal for implementing access to WebDAV functionality
via email. I suspect that this task would require a commitment of anywhere
from 10-40 person hours per month for several months.
Please contact me personally if you are interested.
I'd
be concerned that extensions to the HTTP header would backfire and
would grant license to the big players in the server arena (Microsoft
and Netscape) to dominate the WEBDAV applications market.
It's premature to predict market dominance of servers for a protocol which
hasn't been completely defined yet, no? There are several communities
which have expressed interest in WebDAV a non-complete list of which
includes Web server developers, document management system vendors, and
configuration management system vendors. There is some overlap among these
communities. This, to me, is an indicator there will be a wide range of
vendors offering servers with WebDAV capability.
- Jim
A concern I would have would be relying on Web server vendors to
provide the necessary capabilities "soon"; it should be possible to
implement the necessary protocols through (at a minimum) CGI programs
that could become extensions of the Web server. That way we
effectively support the entire legacy infrastructure.
I agree that CGI compliance is valuable for this reason, but I also
liked the idea of incorporating into jigsaw, as a 'native' implementation
would also be valuable and might help to steer the "giants"
The existing
infrastructure of e-mail, Web browser and Web server products
should be capable of supporting the aims of WEBDAV by encapsulating
requests within multipart/form-data requests on the "input" side
Also worthy of consideration are the new web protocols HTTP-NG and
HTTP-MUX (these are closely related to each other), as both of these
provide a mechanism for bundling arbitrary numbers of files, and more
efficiently than using MIME multipart bundling (at least I know that
HTTP-NG does provide this, and I believe HTTP-MUX does also but do
correct me if I'm wrong). I'll copy Simon Spero, the author of the
HTTP-NG protocol, in case I'm lying ;-)
and the current Web server infrastructure on the output side. I'd
be concerned that extensions to the HTTP header would backfire and
would grant license to the big players in the server arena (Microsoft
and Netscape) to dominate the WEBDAV applications market.
I'd stay within HTTP-NG or HTTP-MUX, if working with the http protocol
or else I would say your concerns are quite valid...
This is either old ground or a holy war -- tell me which! ;)
A little of both?
-=j=-
Based on this statements can it also be assumed that an intention
of WebDAV would be for it to be possible to perform WebDAV methods
without new client software, e.g., use an HTML form to acquire
information about desired methods and parameters which then feeds into
the Web server a request which can be fulfilled? In other words,
could the end-user interactive elements of the WebDAV infrastructure be
centralized at the server, utilizing the Web browser as simply a
communications channel? Could I use IE? Netscape 2.0? Mosaic?
Lynx (only kidding).
I suspect that you will be able to construct a server which exposes WebDAV
functionality via an HTML interface -- the BSCW system (http://bscw.gmd.de)
is one example of how this might look. However, I don't think the WebDAV
group needs to be concerned about this case because this type of operation
does not require an interoperability standard.
In general, there hasn't been a major concern with preserving downlevel
client interoperability given the rapid turnover of client software, and
the small base of existing Web distributed authoring clients.
- Jim
One area I'd like some clarification on (unfortunately I got into
WEBDAV a little late) is where the protocol is "positioned." The
IETF description of the WG talks about developing new HTTP methods,
etc.
A concern I would have would be relying on Web server vendors to
provide the necessary capabilities "soon"; it should be possible to
implement the necessary protocols through (at a minimum) CGI programs
that could become extensions of the Web server. That way we
effectively support the entire legacy infrastructure. The existing
infrastructure of e-mail, Web browser and Web server products
should be capable of supporting the aims of WEBDAV by encapsulating
requests within multipart/form-data requests on the "input" side
and the current Web server infrastructure on the output side. I'd
be concerned that extensions to the HTTP header would backfire and
would grant license to the big players in the server arena (Microsoft
and Netscape) to dominate the WEBDAV applications market.
This is either old ground or a holy war -- tell me which! ;)
Jon
Based on this statements can it also be assumed that an intention
of WebDAV would be for it to be possible to perform WebDAV methods
without new client software, e.g., use an HTML form to acquire
information about desired methods and parameters which then feeds into
the Web server a request which can be fulfilled? In other words,
could the end-user interactive elements of the WebDAV infrastructure be
centralized at the server, utilizing the Web browser as simply a
communications channel? Could I use IE? Netscape 2.0? Mosaic?
Lynx (only kidding).
Jon
I looked at http://bscw.gmd.de and thought their efforts were admirable,
and
they have the right idea as far as using the existing technology as the
interface. WebDAV client programs should either work similarly inside
the browser or as extensions thereof.
Maybe there should be a set of proposed extension methods to Java that
help implement this capability within the browser.
Jon
FWIW, trials with the 32-bit MSIE 3.02 reveal that if you specify a
method other than GET or POST in a form, the method is changed to GET.
This was tested with both Jigsaw 1.0a5 and CERN 3.0 as Web servers.
Mark Leighton Fisher Thomson Consumer Electronics
fisherm@indy.tce.com Indianapolis, IN
"ViaCrypt? Vhy not!"
