There are a few issues that would be beneficial to resolve (at least provisionally) before NIST does the initial load of tests. I propose that we do an Apache style vote on each of the issues. The possible votes are:
-0: Would prefer some other solution, but willing to go along.
-1: Veto, serious reservations
For a proposal to be accepted, there has to be some +1 and no -1's.
There needs to be some mechanism to distinguish test cases from test resources (like staff.xml in the NIST tests) from the test definitions. The alternatives in place or discussed are:
a) parallel directory tree for resource files. For example, files/level1/core/staff.xml. Tests also use .xml extension.
b) child directory for resource files. For example, tests/level1/core/files/staff.xml. Tests also use .xml extension.
c) tests and resources in same directory, tests use .domtest extension, all other files (except .bak) are resource files.
d) tests and resources in same directory, tests use .tst extension, all other files (except .bak) are resource files.
e) Resource files are explicitly excluded by individual file name in build.xml
Discussion:
a is the approach in the current build.xml, but there is not a significant cost to change. Option d has a moderate chance of conflicting with file extensions of other testing software. c and d has the advantage of keeping the resource files in the same directory which would consistent with the use of relative URL's.
My votes (copy this section, replace with your votes, add any comments and reply to the list)
a) +0
b) +0
c) +1
d) +0
e) -1
I've been away from e-mail for a few days, and
maybe I've missed something. Before voting,
I have a couple of questions?
1) Is it necessary to keep all files in the same directory to make use of relative URI's?
2) Why would we change the extension on over
1,000 tests versus changing the extension on
just a handful of resource files?
--Mary
There are a few issues that would be beneficial to resolve (at least provisionally) before NIST does the initial load of tests. I propose that we do an Apache style vote on each of the issues. The possible votes are:
-0: Would prefer some other solution, but willing to go along.
-1: Veto, serious reservations
For a proposal to be accepted, there has to be some +1 and no -1's.
There needs to be some mechanism to distinguish test cases from test resources (like staff.xml in the NIST tests) from the test definitions. The alternatives in place or discussed are:
a) parallel directory tree for resource files. For example, files/level1/core/staff.xml. Tests also use .xml extension.
b) child directory for resource files. For example, tests/level1/core/files/staff.xml. Tests also use .xml extension.
c) tests and resources in same directory, tests use .domtest extension, all other files (except .bak) are resource files.
d) tests and resources in same directory, tests use .tst extension, all other files (except .bak) are resource files.
e) Resource files are explicitly excluded by individual file name in build.xml
Discussion:
a is the approach in the current build.xml, but there is not a significant cost to change. Option d has a moderate chance of conflicting with file extensions of other testing software. c and d has the advantage of keeping the resource files in the same directory which would consistent with the use of relative URL's.
My votes (copy this section, replace with your votes, add any comments and reply to the list)
a) +0
b) +0
c) +1
d) +0
e) -1
a) -0
b) +1
c) +0
d) -0
e) -1
-Fred
Fred L. Drake, Jr. fdrake at acm.org
PythonLabs at Zope Corporation
