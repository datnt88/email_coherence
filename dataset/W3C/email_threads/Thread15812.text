Hi all,
I am undergoing some experiments on tipology of links on HTML. The work is
still on its undies and I am just experiementing with some solutions taken
from the Web and/or Hypertext authors/sites.
The following URI
BOBBY and tidy (W3C) successfully and uses HTML 4.0+CSS1. As I am still
moving to CSS2 and to HTML 4.0, I haven't yet explored many features which
could be of use in these matters.
before I go on on the typology thing, I'd like to ask you to check that
URI with your browsers (text-only, speech, everything you have) and give
me hints on how the solutions are read (if they are too annoying,m and so
on..)
Another question is how wouls a link surrounded by [], {}, ^ ^, * * and so
on be read by a speach-browser...
Any help very appreciated.
Note: URI is, right now in spanish only. I am working on an english
version.. will try to have it asap...
Thanks,
David@
sig David Su&amp;aacute;rez de Lis
mail phdavidl@usc.es
from University of Santiago de Compostela country SPAIN federation EU
An english version is already up at URI:
(I have yet to really learn all the stuff regarding HTML 4.0 and CSS for
multiple language versions... :)
sig who David Su&amp;aacute;rez de Lis
uri mailto:phdavidl@usc.es
from institution University of Santiago de Compostela
Hello All
In most cases a screen reader will ignore punctuation if it is set to do so.
Typing mode is another story. Most screen reading packages allow the user
to turn punctuation on and off as a user option.
The thing to remember about accessibility and graphics is, that if the
graphic is important to understanding what the page is about, then a
description is in order. If it is window dressing, then using something
like * in an ALT tag is probably OIK.
If you have a list of things with a bullet of some kind, it is probably ok
to have the ALT tag with punctuation in it. Like so.
* Apples
* Oranges
* Grapes
Dick
Dick BanksAdaptive Technologist - Consultant
EASI Electronic Resource Manager - Universal Access Consultant
EASI Equal Access to Software and Information
EASI Listening - http://www.rit.edu/~easi
to follow up on what David Suarez De Lis said:
I think that you will find working with HTML4 and CSS2 allows a more
gracious implementation of your ideas, although some of what you
want to do may require DSSSL and not CSS2. Examples:
[David]
X-URL: http://web.usc.es/~phdavidl/pruebas/hypertextWAI-tidy-en.html
There are basicly only few different kind of links (references or
relations) which are of concern for the average Web-naut, which can be
classified among other criteries:
1. Semantically:
1. links to bibliographic references (or similar)
2. links to references to the same text
3. links explaining something ("footnotes", &amp;c...)
4. links to indices
2. Location:
1. Current: same document
2. Local: same web site
3. Remote: other sites
3. Functionality:
1. file retrieving (ftp, gopher, http to a non legible
document...)
2. remote conection (telnet, news, http, &amp;c...) [secure or not]
3. comunication(mailto:, forms, &amp;c...)
4. "Next"
5. "Previous"
6. Go to index, table of contents, &amp;c...
7. Go to help
8. &amp;c...
[Al]
This information is of marginal interest, not central. One would
wish to convey it unobtrusively. Styles in a rich graphical
environment are a good way to handle this sort of subtle
modulation.
Unfortunately, flat ASCII text doesn't offer as many subtle
gradations by which to denote marginal class-shifts in text or
links.
The "orthodox" approach based on the model WAI-PF has been using
in reviewing HTML4 and CSS2 is that you would spell out any
classification not obvious from the required markup in REL= and
CLASS= values (which should be mnemonic, not single letters or
opaque codes), and key styles to those so that color, font, font
effects such as italics, and text effects such as bracket choice
(among [, {, , etc.) can be used to convey these distinctions in
different contexts.
The fact is that the post-fix (a) style of representation is a
bit of a pain in speech, and a prefix classifier that is a whole
word (analogous to what pwWebSpeak does in announcing links) is
more desirable. So adaptive styling of this connotation is
desirable, with a concept name used in CLASS markup in the HTML
as the cross-medium method of capturing the link class
information.
There is one gap in capability between what you want to do and
CSS2, let me warn you. Your "functionality" distinctions can be
inferred from the URL scheme in the attribute values, and perhaps
a file suffix in the URL as well. Style selectors in CSS2 don't
get into regexp matching on attribute values, so you may wish to
play with DSSSL to experiment with your presentation concepts
with a large corpus of web content.
[David]
In order for a HTML link to present information regarding itself (ie.
the metainfornation associated to that message, which reports on the
type of relation between the current document and the target document
or node) we will have to add it by hand in such a way that it is the
cleanest way, allowing thus shorter (but meaningful) link
descriptions, but at the same time in a way that is not very intrusive
(or there would not be any gain in adding information at the cost of
losing legibility)
[Al]
You may find that, if the author has to do it by hand, they will
sooner come to an understanding of how to tell people in natural
language in the surrounding text than they will embrace you class
codes and use them right. I don't know which will be easier to
get people to do.
The general topic is very interesting. You are bumping up
against two tradeoffs:
- does the reader want to be told about nice distinctions
in semantic shading, if there is no gradual way to
denote it? [varies with display medium]
- the "function" distinctions relate both to what is in
the markup but also what is in the verb repertory of the
client software. Whether an href is a navigation or
download option depends on the client system configuration.
The author doesn't in general know. So you will get
into contention over definition of the "verb classification"
between the browser and the author. [varies with
browser design and plug-in population].
I think you will find that HTML4 and CSS2 give you capabilities
that you will want to align your recommendations with before you
are done, but that if you experiment with these ideas you may
well learn things about the effectiveness of this or that style
that we don't know.
I would suggest that you look at tools such as Jade that will let
you write HTML4 and stylesheets and automatically down-convert
this into hard-coded alternative pages in HTML3.2. This will
give you a means of evaluating styling strategies in advance of
the availability of the necessary HTML and CSS features in
browsers.
Al Gilman
