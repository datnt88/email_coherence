Concerning the WebOnt issue regarding "Structured Datatypes"
atatypes, it looks like WebOnt is running out of time to be able to create a
"deep" understanding of XML datatypes.
I am wondering if a clarification of RDF datatypes might provide us an
interim solution.
The current RDF datatypes proposal seems to consider so-called "simple" XML
Schema datatypes e.g.
might this also work for "XML" datatypes i.e. fragments of XML that are
valid with respect to a "complex" XML Schema datatype e.g.
where &amp;foo;bar identifies an XML Schema particule analogous to the XML
datatype !ELEMENT this (#PCDATA)
If this is already allowed, I will propose that WebOnt close our issue and
if its not something currently allowed, do RDF Core folk consider this
useful?
Jonathan
Sender:ext Jonathan Borden jonathan@openhealth.org
Concerning the WebOnt issue regarding "Structured Datatypes"
atatypes, it looks like WebOnt is running out of time to be able to create a
"deep" understanding of XML datatypes.
I am wondering if a clarification of RDF datatypes might provide us an
interim solution.
The current RDF datatypes proposal seems to consider so-called "simple" XML
Schema datatypes e.g.
might this also work for "XML" datatypes i.e. fragments of XML that are
valid with respect to a "complex" XML Schema datatype e.g.
where &amp;foo;bar identifies an XML Schema particule analogous to the XML
datatype !ELEMENT this (#PCDATA)
If this is already allowed, I will propose that WebOnt close our issue and
if its not something currently allowed, do RDF Core folk consider this
useful?
This would need to include the parseType specification,
but yes, I have considered this both intuitive and reasonable
for quite some time, and I understand that the present
datatyping solution either already supports this, or has the
pieces in place to do so with minor tweaks.
Jeremy? Dave? Did typed XML literals actually make it into
the RDF/XML and graph syntax? (I've lost track...)
Patrick
Jonathan
Jonathan,
This mailing list for members of the RDFCore WG. If you have
comments/questions you'd like to send, please use www-rdf-comments@w3.org.
We too are very short of time. I think webont is further ahead than we are
and it is dependent on us. I do not intend to allow starting discussion on
new issues unless it is absolutely unavoidable to complete the work we have
already done.
It is not currently allowed. Dave, correct me if I'm wrong. We
don't allow combining rdf:datatype and parseType="Literal" do we?
It may be useful but that is a matter for a future WG. I could add it to
our list of postponed issues if you like.
Brian
Brian McBride said:
No, we don't.
In particular parseType literal is not what I'd like to encourage
using as an extension mechanism, especially for datatypes!
We used to think of the parseType="Literal" as setting an is_XML flag
on the literal to be true, now we think of it as a datatyped literal
where the URI of the datatype is rdfs:XMLLiteral.
As I understand it, the XML Schema WG has an issue to provide URIs
for their more complex datatypes ("particles"?) but hasn't yet
addressed it. I just remember hearing this, I may be wrong.
So if that happens, then it'll be
Dave
Patrick Stickler said:
Well, formerly XML literals were special, they set an is_XML flag on
the literals, hence
"foo" compared to xml"foo"
Now, the latter is considered part of the datatype structure
and hence the is_XML flag is subsumed by the datatype URI rdfs:XMLLiteral
i.e. "typed XML literals" are gone.
hence my recent question about killing the syntax xml"foo" form:
which I'm moving to doing unless I get some real problems with it.
(Jeremy at least supports this).
Dave
