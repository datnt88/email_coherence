As larry has pointed out, basic for client / server non persistant requests
is a poor choice.
client - proxy with persistant connection between client and proxy
when used with one time password systems ( as we do in our product) allows
sites to authenticate strongly which of their users can do WEB stuff.
Basic auth as a mechanism can very useful even if it is not what it was
intended for.
There are no export restrictions for hash algs (MD4,5). crypto can be
exported if used for authentication only and cannot be used for data
encryption. (you ship binaries only.. no source.)
Patent restrictions are a different matter...
Pete.
The TIS Network Security Products Group has moved again!
Room 334, 15204 Omega Drive, Rockville, MD 20850
Please, no. It has nothing to do with 'non-persistant' requests, it
just has to do with multiple requests where state management is wanted
but the current mechanisms for state management (cookies, etc.) are
not used.
Larry
This sounds interesting. But I am not sure whether you
(1) Authenticate a client only once for a persistent connection,
or
(2) Authenticate each transaction (reusing the password), but use
a new password anytime there is a new connection.
Either would seem possible.
If it is (1) then strictly speaking you are probably not HTTP
compliant since you are essentially making the Proxy-Authorization
header "sticky". But I see no reason that your proxy shouldn't
interoperate with HTTP clients.
If it is (2) then you aren't strictly using one-time passwords, as the
same password is re-used for each transaction, but you should have
essentially all the benefits of one-time passwords.
John Franks Dept of Math. Northwestern University
john@math.nwu.edu
