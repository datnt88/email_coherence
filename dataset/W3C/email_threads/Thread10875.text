this is why I was saying that the current XML spec was more convenient
that the one I proposed in my mail: every application can decide how to
deal with this. The authorial intent has not been expressed here.
I'm getting lost in all of these proposals and amendments. If I want this
paragraph to look "right" in all applications, what do I do:
or
in all applications /P
My understanding is the latter, because the former gives applications the
right to "arbitrarily" remove whitespace, and between the B and the I might
well look like a reasonable place to do so.
What happens if I turn "on" PRESERVE mode in element content. Should a
validating parser tell me that my authorial intent is in contravention of my
DTD? Should it just silently eat the whitespaces despite my authorial
intent? Should it return a grove that is not valid according to the DTD?
Thanks for any enlightenment,
Paul Prescod
You cannot expect a paragraph to look right in all applications
because an application, by definition, has the right to do whatever
it want with your data.
However, our job is to define properly the input we are giving
to such applications: such input comes as the output of the XML parser.
The proposal that I did defines the output of the XML parser:
-1/ All CR/LF/whitespaces are restituted or transformed using Delenda
Est
and go as the output of the XML parser
-2/In addition, the author can communicate its intend, where he think
whitespaces/CR/LF
are important (such in PRE elements) by writing PRE
-XML-SPACE=PRESERVE
PRESERVE could also be used in semantical elements corresponding for
example
to quotations or poem where you do not want the text to be munged for
formatting purpose.
Response to your first question:
I would not use PRESERVE as you used it in
because you expect the formatter of your application to "take care" of
formatting of your
paragraph.
Your second question was about turning PRESERVE on an element-content.
We have not discussed yet, if, in the case of adopting RE Delenda, we
still -in XML- delete white spaces
in element-content in a validating parser.
From: Paul Prescod[SMTP:papresco@calum.csclub.uwaterloo.ca]
Sent: Friday, December 13, 1996 5:35 PM
Subject: Understanding the Paoli proposal
this is why I was saying that the current XML spec was more convenient
that the one I proposed in my mail: every application can decide how to
deal with this. The authorial intent has not been expressed here.
in all applications /P
My understanding is the latter, because the former gives applications the
right to "arbitrarily" remove whitespace, and between the B and the I might
well look like a reasonable place to do so.
But I thought whitespace in #pcdata was implicitly preserved (eg here in
paragraphs where mixed content is not in use): it's only whitespace in
locations where #pcdata is NOT permitted which can be removed (eg the
TABs, newlines, and spaces inserted by psgml to indent the structure
while editing).
///Peter
Well, this is what I'm really interested in. It is clear to me that the
non-validating parsers' whitespace handling will not really be useful for
mission critical data handling. When I care, such as in authoring tools and
databases, I will have to ask my vendors to supply validating parsers. I
need to know how whitespace there will be handled.
Paul Prescod
