Not for discussion this telecon, but here's my proposal on
rdfs:ConstraintResource and rdfs:ConstraintProperty: we drop them from the
specification.
Context (last week's meeting):
There is still some uncertainty about the constraint resources/properties
issues, though many folks seem happy to lose these.
ACTION: 2001-10-19#9, DanBri. Propose resolution of constraint resources
for next week
ACTION: 2001-10-19#10, DanBri. ditto for constraint properties
Context (Issue list):
My proposed closure:
The intent behind the rdfs:ConstraintResource mechanism was to allow some
future proofing of RDF Schema to anticipate extensions to the Schema spec
that addressed some of the facilities the original WG dropped from 1.0.
The DAML+OIL specification is an example of such an extension to RDFS. As
such, it shows up a flaw in the rdfs:ConstraintResource concept. The
notion of a 'constraint resource' confuses two ideas: the idea that some
parts of an RDF Schema may be used by automated data validation tools, and
the idea that the meaning of certain RDF properties and classes impose
constraints on their usage. This confusion makes it unclear as to which
new properties-of-properties should be considered "Constraint Resources",
for example a class "rdfsx:TransitiveProperty". Various meaningful
annotations on RDF properties _could_ be considered to describe
constraints on their uses? Does that make them constraint resources? The
answer is unclear, because the notion of constraintresource is itself
confused.
Proposal: the current mechanism, rdfs:ConstraintResource and
rdfs:ConstraintProperty, fails to serve its original purpose and should be
removed from the RDF Schema 1.0 specification. The accompanying text be
amended accordingly.
I wholeheartedly agree.
Pat Hayes
IHMC(850)434 8903 home
40 South Alcaniz St.(850)202 4416 office
phayes@ai.uwf.edu
excellent.
Does anybody disagree? If so please let the WG mailing list know before
our next teleconf.
As one of the guilty parties behind the RDFS 1.0 spec, and this bit in
particular, I have to say: we got rdfs:ConstraintResource *wrong*. (Sorry!)
It was a nice idea, to try to give some categories for likely RDFS extensions so
that 1.0 processors weren't _entirely_ suprised by future revisions of the
spec. But the notion that schema language constructs were either
'constraining' or 'unconstraining' was incoherent. The idea of this all
being used for data validation was, I think, taking up much more of our
attention than it does now. Anyway, as I say: we goofed. Let's drop the
feature and move on.
Dan
I agree
Jos De Roo
