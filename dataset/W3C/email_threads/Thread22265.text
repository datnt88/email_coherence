I was thinking that you could produce an close [X]HTML analogue of staff.xml
by doing a direct translation of each element in staff to a distinct [X]HTML
element with a similar content model.
Most of the elements simply contain PCDATA and have no attributes, so you
could make employeeId to code and salary to pre , etc and could
change address domestic="" something /address to a href="" something /a ,
employee could go to p . The only structural change that would be
changing staff to html body .
Though the resulting HTML document would be gibberish (but valid gibberish),
it would then allow most of existing tests to also be automatically
translated and you would add 300+ tests that would now run on HTML, XHTML
and XML implementations. Since it is likely that some processors would
recognize XHTML elements and use XHTML specific node implementations, I
think it would be worthwhile to preserve the existing tests and just add the
new derived tests. So XML processors would run 600 tests and HTML
processors would only run the 300 that they were compatible with.
Any thoughts? How would you name the new tests? Prefix or postfix "HTML"?
Something else?
Where can I upload or send this? I can't just post it to the list; I've used the directory structure as found in [1], ended up with 2.2 MB (unzipped).
[1] http://www.w3.org/TR/2001/WD-xhtml-m12n-schema-20011219/xhtml-m12n-schema.zip
Manos
From: Mary Brady [mailto:mbrady@nist.gov]
Sent: Friday, March 08, 2002 3:00 PM
Subject: Re: Using existing staff.xml based tests with HTML processors
Can you take a look at the existing files, under
/level1/core/files and give it a try?
--Mary
----- Original Message -----
From: "Manos Batsis" m.batsis@bsnet.gr
Sent: Friday, March 08, 2002 7:49 AM
Subject: RE: Using existing staff.xml based tests with HTML processors
From: Mary Brady [mailto:mbrady@nist.gov]
Would this approach require that all processors would
have to support
XHTML Modularization?
XHTML m12n is not something that a processor supports
explicitly; as with
any XML vocabulary, it depends on your needs.
A browser for example can display an extended XHTML
document by treating
known XHTML elements as usual while determining the display
of the rest
based on style (CSS) or some default handling rules (i.e.
display the text
contained in them). Validation is not mandatory.
Something more critical can validate such a document using
a DTD or Schema
that contains the XHTML modules along with the custom modules.
With m12n, you can use one file to perform HTML dependent tests (for
example using HTML specific collections such as
document.forms) or raw XML
tests to non XHTML elements included in such a file while the
file is valid
(either as XML or XHTML).
Kindest regards,
Manos
--Mary
----- Original Message -----
From: "Manos Batsis" m.batsis@bsnet.gr
Sent: Friday, March 08, 2002 6:48 AM
Subject: RE: Using existing staff.xml based tests with
XHTML test files must be valid to be XHTML in the first
place; technically
speaking though, there is a way to have valid XHTML just
by adding a
'wrapper'[1] to the existing files while using XHTML
Modularization (either
in XML Schema [1] or DTD [2]). I would be very interested
to help if
something like that is chosen, especially if XML Schema
is involved.
-----Original Message-----
From: Bj?rn Vermo [mailto:bv@opera.no]
Sent: Friday, March 08, 2002 1:40 PM
Subject: Re: Using existing staff.xml based tests with
2002-03-06 18:36:21, "Arnold, Curt"
I believe it would be more useful to use constructs like div
class="employeeid" and a class="domestic" href=2xx"
Bj?rn Vermo
Hi Manos,
Thanks for the files. Let me see if I understand how to
use these...First, you created a staff module, and pulled
it and the relevant xhtml modules together. Then, you
have a staff.xml that conforms to the above. But, because
it is just a sample, it only contains one employee -- it would
have to be updated to be compatible with the existing staff.xml.
You also supplied a stylesheet that can be used to translate staff.xml
to it's xhtml version. Is there a way to translate to an html version?
So, in order to use this, I have to update staff.xml, and then translate
to xhtml and html. But the advantage is that we do not have to do
hand translations...
Am I close? If not, please let me know, as I would like to understand
this approach fully.
--Mary
used the directory structure as found in [1], ended up with 2.2 MB
(unzipped).
p
-----Original Message-----
From: Mary Brady [mailto:mbrady@nist.gov]
Sent: Friday, March 08, 2002 3:00 PM
Subject: Re: Using existing staff.xml based tests with HTML processors
Can you take a look at the existing files, under
/level1/core/files and give it a try?
--Mary
----- Original Message -----
From: "Manos Batsis" m.batsis@bsnet.gr
Sent: Friday, March 08, 2002 7:49 AM
Subject: RE: Using existing staff.xml based tests with HTML processors
From: Mary Brady [mailto:mbrady@nist.gov]
Would this approach require that all processors would
have to support
XHTML Modularization?
XHTML m12n is not something that a processor supports
explicitly; as with
any XML vocabulary, it depends on your needs.
A browser for example can display an extended XHTML
document by treating
known XHTML elements as usual while determining the display
of the rest
based on style (CSS) or some default handling rules (i.e.
display the text
contained in them). Validation is not mandatory.
Something more critical can validate such a document using
a DTD or Schema
that contains the XHTML modules along with the custom modules.
With m12n, you can use one file to perform HTML dependent tests (for
example using HTML specific collections such as
document.forms) or raw XML
tests to non XHTML elements included in such a file while the
file is valid
(either as XML or XHTML).
--Mary
----- Original Message -----
From: "Manos Batsis" m.batsis@bsnet.gr
Sent: Friday, March 08, 2002 6:48 AM
Subject: RE: Using existing staff.xml based tests with
XHTML test files must be valid to be XHTML in the first
place; technically
speaking though, there is a way to have valid XHTML just
by adding a
'wrapper'[1] to the existing files while using XHTML
Modularization (either
in XML Schema [1] or DTD [2]). I would be very interested
to help if
something like that is chosen, especially if XML Schema
is involved.
-----Original Message-----
From: Bj?rn Vermo [mailto:bv@opera.no]
Sent: Friday, March 08, 2002 1:40 PM
Subject: Re: Using existing staff.xml based tests with
2002-03-06 18:36:21, "Arnold, Curt"
I believe it would be more useful to use constructs like div
class="employeeid" and a class="domestic" href=2xx"
Bj?rn Vermo
