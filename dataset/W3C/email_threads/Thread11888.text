I am writing to offer a few comments regarding the W3C's draft
recommendation on the Accessibility of Authoring Tools. I have
only a few suggestions, but I consider the first two critical to
the success of this proposed recommendation. The working group is
to be commended for an excellent document that will contribute
significantly to the usefulness of web technology for everyone, not
just for people with disabilities. Thank you for the comprehensive
specification on this central topic.
Two Major Points
1.) "Help" must be accessible help if it is to assist the
authoring user who relies on assistive technology. This is a
critical point which should not be absent from the enumerated
requirements as it now is. It should be classified priority one,
because it is that important to successful use of an application.
At the very least, equity demands it. But usability principles also
demand it. If the author using assistive technologies is forced to
work around inadequate documentation, that author is forced to be
less efficient. This is both unfair and unnecessary. Furthermore,
a requirement for accessible help undergirds the working group's
other recommendations in support of accessible authoring
applications in that it compels the consideration and specification
of alternative means for each task on which help is provided. It
will help insure that all functional elements in the authoring tool
are, in fact, equipped with appropriate accommodations;
2.) The references to universal design in 6.4 and 7 should be
strengthened and elaborated. They should also be incorporated into
the abstract and introduction. They significantly enhance the case
for adopting this recommendation by demonstrating the greater
applicability of these requirements. In fact, they also support
internationalization of authoring tools and of generated content--a
not insignificant collateral benefit. One of the more persuasive
features used in the existing access recommendation is the parallel
structure of a.) how this works for accessibility; and, b.) how
this works in support of general audience concerns. This format
would be helpful in this recommendation as well;
Two Minor Points
3.) I would like to see explicit mention of footnotes and end
notes because these should be retained when converting from word
processing formats. A mere mention, in around the discussion of
tabular structures should suffice.
4.) I have a minor technical problem with the definition of XML
and HTML elements. Is this definition unique to this document and,
therefore amenable to technical correction? Or, is it taken from a
formal definition used elsewhere by the W3, and consequently
uncorrectable here? My concern arises from the last sentence in the
following paragraph taken from the definitions in this draft
recommendation:
Element An element is any identifiable object within a
document, for example a character, word, image, paragraph or
spreadsheet cell. In HTML and XML an element refers to a pair
of tags and their content, or an "empty" tag - one that has no
closing tag or content.
A casual reading of this paragraph might tend to suggest that it is
acceptable practice to not close any tag, whereas the intended
meaning, as I understand it, is that there are some tags which are
unitary, and not paired as opening and closing. Perhaps one could
say, "or an 'empty' tag -- one that requires no closing tag or
content." I have replaced the word "has" by the word "requires" as
my suggestion on this point.
Janina Sajka, Director
Information Systems Research &amp; Development
American Foundation for the Blind (AFB)
janina@afb.net
regarding "accessible help"
7.1 is a priority 1. 7.1 does include "accessible help" because
at least 2 of the "software checklists", Microsoft's [1] and IBM's [2]
include on-line help and documentation as explicit checklist items.
Why don't we also include KEYBOARD ACCESS, which in my opinion is even
more important that accessible help? If you don't have keyboard access
you may not even be able to use the product.
I feel we do not need to include any of the items from the
applicable standards and conventions to make 7.1 better understood.
As a parallel example, I feel we do not need to include any of
the Web Content Accessibility checkpoints items either. We *DO* need to
point to the applicable standards and conventions which affect authoring
- which is currently being done. Summary: do not add more checkpoints for
"accessible help", or "keyboard access", etc.
[1] Microsoft software checklist
[2] IBM Software checklist
Regards,
Phill Jenkins
Hi:
Thanks for including me in your response.
My concern is for the authoring tools professional who is not an access
specialist, and who is not conversant with all the other sources of
information regarding how to make help accessible--which, to my mind,
includes keyboard commands. If this person doesn't see the requirment on
the requirments list, it is dificult to blame them for not supporting a
requirment that was never specified.
Let me turn the question around. What is so problematic about specifying
this requirment? Is it less elegant? Is it ... well, let me not speculate,
but simply ask. What's wrong with putting this in the reqs? And, if it
doesn't go there, where does the industry get its check list of "required
things" to fix?
Janina Sajka, Director
Information Systems Research &amp; Development
American Foundation for the Blind (AFB)
janina@afb.net
Janina,
I too want the tool developer to make the help accessible. And I want the help
to include a listing of the keyboard commands. And, more importantly, I want
the tool itself [with and without the help] to be accessible, to be usable with
a screen reader or magnifier.
It is problematic to list all the checklist requirements for software
accessibility. First of all "accessible help" is only one of over a dozen
requirements on the Microsoft Windows checklist. Enabling keyboard access to
all the functions of the tool is the first requirement on the checklist.
Another very important requirement is exposing the focus, another is adding
captions for sound, so I suppose we could start with the Microsoft list and add
them *all* to the authoring tools list. But what if the tool is written in
Java, of course we would want them to follow the IBM guidelines for accessible
Java applications. And what if the tool is on Unix, or OS/2, or AIX, or
Linux... For the same reason we didn't list all the Web Content Accessibility
Guidelines checkpoints, but referred to them. Checkpoint 7.1 does a good job
pointing to all the "applicable standards and checklists". As evidence that a
tool developer would use 7.1 correctly, two IBM tool developers read 7.1 and
then sent me the applicable checklist [in this case it was the Microsoft Windows
checklist] with each checklist item marked yes or no and included comments about
if or when they could meet the requirement. This was done for the whole
authoring tools checklist as well as the whole windows accessibility checklist.
The Microsoft Windows and IBM Java checklist item about "accessible help" are
very adequate and cover all the requirements for accessible help :
[1] Documentation
Provide documentation in accessible format, such as ASCII text or HTML.
Accessible documentation should contain descriptions of illustrations and
tables.
Do not convey important information by color or graphics alone. Use color
and graphics redundantly to the text.
Maintain high contrast between the text and its background.
Do not use text smaller than 10 points in size.
If possible, bind printed documentation to lie flat.
[2] 9.0 Documentation
9.1 Provide clear and precise documentation on all accessibility features.
9.2 Provide documentation in an accessible format, such as ASCII text or
HTML.
If you feel the Windows or Java or xxx checklist needs to be improved please
contact the appropriate owner, because I want the checklist improved not just
for authoring tools, but all applications that fall under that checklist.
Regards,
Phill Jenkins
aloha, phil!
i can live with the idea that 7.1 covers the sun and the moon, provided that a
specific reference to help and documentation is inserted into the Techniques
document -- especially a specific mention of how online (i.e. on-the-web and
not runtime help) MUST be WCAG compliant, so that it can be accessed by all,
including those not fortunate enough to be using a UAGL-compliant user agent or
for those users for whom a UAGL-compliant user agent that provides the specific
combination of functionalities they need does not (yet) exist ...
specifically, i'd like to insert verbiage into the introductory text (in both
the Guidelines and the Techniques document) for Guideline 7 about the necessity
of ensuring that all help and documentation is provided in an accessible
format, as well as ensuring that, when help and documentation is provided in a
W3C Recommendation-based format, it include all applicable accessibility
enhancements and features built into that particular W3C Rec, as well as being
WCAG compliant...
i'd also like the issue of help and documentation addressed in the bulleted
lists of "Common Requirements" that appear in the Techniques for Checkpoint 7.1
-- not only under the heading "Following Standards", but also under the
headings "Icons, Graphics, and Sounds", "Layout", and "User Focus"
the nice thing is, janina has provided us with some very nice fodder that can
be fleshed out not only into an addendum to the introduction to Guideline 7 and
the Techniques for 7.1, but also into a narrative technique on the topic for
the AU Techniques document!
thanks, janina!
gregory
He that lives on Hope, dies farting
-- Benjamin Franklin, Poor Richard's Almanack, 1763
Gregory J. Rosmaita unagi69@concentric.net
WebMaster and Minister of Propaganda, VICUG NYC
aloha, again, phil!
if 7.1 does include all things sub and supralunar, then doesn't it also demand
that in order to satisfy 7.1, one must offer full keyboard access -- for the
help system, as well as for the manipulation of the tool itself? keyboard
access (unlike documentation) is mentioned specifically in the Techniques for
7.1 under the header "Input Device Independence" -- and is specifically
addressed in our sister document, the User Agent Guidelines (guideline 2:
"Ensure keyboard access to user agent functionalities") -- as well as in the
referenced guidelines issued by Trace, IBM, and Microsoft -- all of which
outline the principles of accessible software design -- not to mention the
standards documents, such as those promulgated by EiTAAC, which are also
referenced in the AU Techniques document...
gregory
He that lives on Hope, dies farting
-- Benjamin Franklin, Poor Richard's Almanack, 1763
Gregory J. Rosmaita unagi69@concentric.net
WebMaster and Minister of Propaganda, VICUG NYC
